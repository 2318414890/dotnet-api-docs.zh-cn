<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64734fd08704fe605ee40c629bac5127c28f455e" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57911312" /></Metadata><TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="64798-101">提供后期绑定的数学运算符，例如 Visual Basic 编译器在内部使用的 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> 和 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />。</span><span class="sxs-lookup"><span data-stu-id="64798-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-102">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="~/docs/visual-basic/language-reference/operators/index.md"><span data-ttu-id="64798-103">运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-103">Operators (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-104">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-104">Required.</span></span> <span data-ttu-id="64798-105">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-105">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-106">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-106">Required.</span></span> <span data-ttu-id="64798-107">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-107">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="64798-108">表示 Visual Basic 加法 (+) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-108">Represents the Visual Basic addition (+) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-109"><paramref name="Left" /> 与 <paramref name="Right" /> 的和。</span><span class="sxs-lookup"><span data-stu-id="64798-109">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-110">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-110">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="64798-111">+ 运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-111">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-112">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-112">Required.</span></span> <span data-ttu-id="64798-113">任何 <see langword="Boolean" /> 或数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-113">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-114">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-114">Required.</span></span> <span data-ttu-id="64798-115">任何 <see langword="Boolean" /> 或数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-115">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="64798-116">表示 Visual Basic <see langword="And" /> 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-116">Represents the Visual Basic <see langword="And" /> operator.</span></span></summary>
        <returns><span data-ttu-id="64798-117">对于 <see langword="Boolean" /> 运算，如果 <paramref name="Left" /> 和 <paramref name="Right" /> 的计算结果都是 <see langword="True" />，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-117">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="64798-118">对于按位运算，如果 <paramref name="Left" /> 和 <paramref name="Right" /> 的计算结果都是 1，则为 1；否则为 0。</span><span class="sxs-lookup"><span data-stu-id="64798-118">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-119">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="64798-120">And 运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Right" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="TextCompare" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-121">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-121">Required.</span></span> <span data-ttu-id="64798-122">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-122">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-123">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-123">Required.</span></span> <span data-ttu-id="64798-124">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-124">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="64798-125">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-125">Required.</span></span> <span data-ttu-id="64798-126">如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-126"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="64798-127">表示 Visual Basic 比较运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-127">Represents Visual Basic comparison operators.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="64798-128">“值”</span><span class="sxs-lookup"><span data-stu-id="64798-128">Value</span></span> 
 </term>
              <description> <span data-ttu-id="64798-129">条件</span><span class="sxs-lookup"><span data-stu-id="64798-129">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="64798-130">-1</span><span class="sxs-lookup"><span data-stu-id="64798-130">-1</span></span> 
 </term>
              <description><span data-ttu-id="64798-131">
                <paramref name="Left" /> 小于 <paramref name="Right" />。</span><span class="sxs-lookup"><span data-stu-id="64798-131">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="64798-132">0</span><span class="sxs-lookup"><span data-stu-id="64798-132">0</span></span> 
 </term>
              <description><span data-ttu-id="64798-133">
                <paramref name="Left" /> 与 <paramref name="Right" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="64798-133">
                <paramref name="Left" /> and <paramref name="Right" /> are equal.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="64798-134">1</span><span class="sxs-lookup"><span data-stu-id="64798-134">1</span></span> 
 </term>
              <description><span data-ttu-id="64798-135">
                <paramref name="Left" /> 大于 <paramref name="Right" />。</span><span class="sxs-lookup"><span data-stu-id="64798-135">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-136">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="64798-137">比较运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-137">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-138">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-138">Required.</span></span> <span data-ttu-id="64798-139">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-139">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-140">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-140">Required.</span></span> <span data-ttu-id="64798-141">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-141">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="64798-142">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-142">Required.</span></span> <span data-ttu-id="64798-143">如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-143"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="64798-144">表示 Visual Basic 相等 (=) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-144">Represents the Visual Basic equal (=) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-145">如果 <paramref name="Left" /> 和 <paramref name="Right" /> 相等，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-145"><see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-146">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-146">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="64798-147">比较运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-147">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-148">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-148">Required.</span></span> <span data-ttu-id="64798-149">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-149">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-150">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-150">Required.</span></span> <span data-ttu-id="64798-151">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-151">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="64798-152">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-152">Required.</span></span> <span data-ttu-id="64798-153">如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-153"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="64798-154">表示 Visual Basic 大于 (&gt;) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-154">Represents the Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-155">如果 <see langword="True" /> 大于 <paramref name="Left" />，则为 <paramref name="Right" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-155"><see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-156">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-156">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="64798-157">比较运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-157">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-158">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-158">Required.</span></span> <span data-ttu-id="64798-159">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-159">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-160">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-160">Required.</span></span> <span data-ttu-id="64798-161">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-161">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="64798-162">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-162">Required.</span></span> <span data-ttu-id="64798-163">如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-163"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="64798-164">表示 Visual Basic 大于或等于 (&gt;=) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-164">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-165">如果 <paramref name="Left" /> 大于等于 <paramref name="Right" />，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-165"><see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-166">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-166">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="64798-167">比较运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-167">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-168">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-168">Required.</span></span> <span data-ttu-id="64798-169">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-169">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-170">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-170">Required.</span></span> <span data-ttu-id="64798-171">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-171">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="64798-172">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-172">Required.</span></span> <span data-ttu-id="64798-173">如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-173"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="64798-174">表示 Visual Basic 小于 (&lt;) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-174">Represents the Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-175">如果 <paramref name="Left" /> 小于 <paramref name="Right" />，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-175"><see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-176">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-176">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="64798-177">比较运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-177">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-178">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-178">Required.</span></span> <span data-ttu-id="64798-179">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-179">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-180">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-180">Required.</span></span> <span data-ttu-id="64798-181">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-181">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="64798-182">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-182">Required.</span></span> <span data-ttu-id="64798-183">如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-183"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="64798-184">表示 Visual Basic 小于或等于 (&lt;=) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-184">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-185">如果 <paramref name="Left" /> 小于等于 <paramref name="Right" />，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-185"><see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-186">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-186">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="64798-187">比较运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-187">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-188">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-188">Required.</span></span> <span data-ttu-id="64798-189">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-189">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-190">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-190">Required.</span></span> <span data-ttu-id="64798-191">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-191">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="64798-192">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-192">Required.</span></span> <span data-ttu-id="64798-193">如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-193"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="64798-194">表示 Visual Basic 不等于 (&lt;&gt;) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-194">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-195">如果 <see langword="True" /> 不等于 <paramref name="Left" />，则为 <paramref name="Right" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-195"><see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-196">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-196">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="64798-197">比较运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-197">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-198">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-198">Required.</span></span> <span data-ttu-id="64798-199">任何 <see langword="String" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-199">Any <see langword="String" /> expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-200">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-200">Required.</span></span> <span data-ttu-id="64798-201">任何 <see langword="String" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-201">Any <see langword="String" /> expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="64798-202">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-202">Required.</span></span> <span data-ttu-id="64798-203">如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-203"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="64798-204">对给定的两个字符串执行二进制字符串或文本字符串比较。</span><span class="sxs-lookup"><span data-stu-id="64798-204">Performs binary or text string comparison when given two strings.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="64798-205">值</span><span class="sxs-lookup"><span data-stu-id="64798-205">Value</span></span> 
 </term>
              <description> <span data-ttu-id="64798-206">条件</span><span class="sxs-lookup"><span data-stu-id="64798-206">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="64798-207">-1</span><span class="sxs-lookup"><span data-stu-id="64798-207">-1</span></span> 
 </term>
              <description><span data-ttu-id="64798-208">
                <paramref name="Left" /> 小于 <paramref name="Right" />。</span><span class="sxs-lookup"><span data-stu-id="64798-208">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="64798-209">0</span><span class="sxs-lookup"><span data-stu-id="64798-209">0</span></span> 
 </term>
              <description><span data-ttu-id="64798-210">
                <paramref name="Left" /> 等于 <paramref name="Right" />。</span><span class="sxs-lookup"><span data-stu-id="64798-210">
                <paramref name="Left" /> is equal to <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="64798-211">1</span><span class="sxs-lookup"><span data-stu-id="64798-211">1</span></span> 
 </term>
              <description><span data-ttu-id="64798-212">
                <paramref name="Left" /> 大于 <paramref name="Right" />。</span><span class="sxs-lookup"><span data-stu-id="64798-212">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-213">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-213">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="64798-214">当 Visual Basic 相等运算符用于比较两个字符串时，它会将这两个字符串以及 <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> 自变量的 `False` 值传递到 `TextCompare` 方法。</span><span class="sxs-lookup"><span data-stu-id="64798-214">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="64798-215">这执行区分大小写的序号或基于当前区域性，具体取决于值的比较[Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md)语句。</span><span class="sxs-lookup"><span data-stu-id="64798-215">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the [Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md) statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="64798-216">比较运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-216">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-217">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-217">Required.</span></span> <span data-ttu-id="64798-218">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-218">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-219">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-219">Required.</span></span> <span data-ttu-id="64798-220">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-220">Any expression.</span></span></param>
        <summary><span data-ttu-id="64798-221">表示 Visual Basic 串联 (&amp;) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-221">Represents the Visual Basic concatenation (&amp;) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-222">一个字符串，表示 <paramref name="Left" /> 和 <paramref name="Right" /> 的串联。</span><span class="sxs-lookup"><span data-stu-id="64798-222">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-223">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-223">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="64798-224">&amp; 运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-224">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-225">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-225">Required.</span></span> <span data-ttu-id="64798-226">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-226">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-227">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-227">Required.</span></span> <span data-ttu-id="64798-228">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-228">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="64798-229">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-229">Required.</span></span> <span data-ttu-id="64798-230">如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-230"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="64798-231">表示重载的 Visual Basic 相等 (=) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-231">Represents the overloaded Visual Basic equals (=) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-232">重载的“等于”运算符的结果。</span><span class="sxs-lookup"><span data-stu-id="64798-232">The result of the overloaded equals operator.</span></span> <span data-ttu-id="64798-233">如果不支持运算符重载，则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-233"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-234">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-234">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="64798-235">运算符过程</span><span class="sxs-lookup"><span data-stu-id="64798-235">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-236">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-236">Required.</span></span> <span data-ttu-id="64798-237">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-237">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-238">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-238">Required.</span></span> <span data-ttu-id="64798-239">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-239">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="64798-240">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-240">Required.</span></span> <span data-ttu-id="64798-241">如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-241"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="64798-242">表示重载的 Visual Basic 大于 (&gt;) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-242">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-243">重载的“大于”运算符的结果。</span><span class="sxs-lookup"><span data-stu-id="64798-243">The result of the overloaded greater-than operator.</span></span> <span data-ttu-id="64798-244">如果不支持运算符重载，则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-244"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-245">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-245">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="64798-246">运算符过程</span><span class="sxs-lookup"><span data-stu-id="64798-246">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-247">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-247">Required.</span></span> <span data-ttu-id="64798-248">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-248">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-249">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-249">Required.</span></span> <span data-ttu-id="64798-250">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-250">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="64798-251">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-251">Required.</span></span> <span data-ttu-id="64798-252">如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-252"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="64798-253">表示重载的 Visual Basic 大于或等于 (&gt;=) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-253">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-254">重载的“大于或等于”运算符的结果。</span><span class="sxs-lookup"><span data-stu-id="64798-254">The result of the overloaded greater-than or equal-to operator.</span></span> <span data-ttu-id="64798-255">如果不支持运算符重载，则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-255"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-256">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-256">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="64798-257">运算符过程</span><span class="sxs-lookup"><span data-stu-id="64798-257">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-258">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-258">Required.</span></span> <span data-ttu-id="64798-259">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-259">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-260">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-260">Required.</span></span> <span data-ttu-id="64798-261">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-261">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="64798-262">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-262">Required.</span></span> <span data-ttu-id="64798-263">如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-263"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="64798-264">表示重载的 Visual Basic 小于 (&lt;) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-264">Represents the overloaded Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-265">重载的“小于”运算符的结果。</span><span class="sxs-lookup"><span data-stu-id="64798-265">The result of the overloaded less-than operator.</span></span> <span data-ttu-id="64798-266">如果不支持运算符重载，则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-266"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-267">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-267">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="64798-268">运算符过程</span><span class="sxs-lookup"><span data-stu-id="64798-268">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-269">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-269">Required.</span></span> <span data-ttu-id="64798-270">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-270">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-271">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-271">Required.</span></span> <span data-ttu-id="64798-272">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-272">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="64798-273">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-273">Required.</span></span> <span data-ttu-id="64798-274">如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-274"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="64798-275">表示重载的 Visual Basic 小于或等于 (&lt;=) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-275">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-276">重载的“小于或等于”运算符的结果。</span><span class="sxs-lookup"><span data-stu-id="64798-276">The result of the overloaded less-than or equal-to operator.</span></span> <span data-ttu-id="64798-277">如果不支持运算符重载，则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-277"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-278">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-278">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="64798-279">运算符过程</span><span class="sxs-lookup"><span data-stu-id="64798-279">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-280">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-280">Required.</span></span> <span data-ttu-id="64798-281">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-281">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-282">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-282">Required.</span></span> <span data-ttu-id="64798-283">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-283">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="64798-284">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-284">Required.</span></span> <span data-ttu-id="64798-285">如果执行不区分大小写的字符串比较，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-285"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="64798-286">表示重载的 Visual Basic 不等于 (&lt;&gt;) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-286">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-287">重载的“不等于”运算符的结果。</span><span class="sxs-lookup"><span data-stu-id="64798-287">The result of the overloaded not-equal operator.</span></span> <span data-ttu-id="64798-288">如果不支持运算符重载，则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-288"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-289">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-289">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="64798-290">运算符过程</span><span class="sxs-lookup"><span data-stu-id="64798-290">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-291">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-291">Required.</span></span> <span data-ttu-id="64798-292">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-292">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-293">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-293">Required.</span></span> <span data-ttu-id="64798-294">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-294">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="64798-295">表示 Visual Basic 除法 (/) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-295">Represents the Visual Basic division (/) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-296"><paramref name="Left" /> 除以 <paramref name="Right" /> 的完整商，包括任何余数。</span><span class="sxs-lookup"><span data-stu-id="64798-296">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-297">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-297">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="64798-298">/ 运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-298">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-299">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-299">Required.</span></span> <span data-ttu-id="64798-300">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-300">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-301">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-301">Required.</span></span> <span data-ttu-id="64798-302">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-302">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="64798-303">表示 Visual Basic 指数 (^) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-303">Represents the Visual Basic exponent (^) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-304"><paramref name="Left" /> 的 <paramref name="Right" /> 次幂的计算结果。</span><span class="sxs-lookup"><span data-stu-id="64798-304">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-305">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-305">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md"><span data-ttu-id="64798-306">^ 运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-306">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] arguments);" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object FallbackInvokeUserDefinedOperator(object vbOp, object[] arguments) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, arguments As Object()) As Object" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ arguments);" FrameworkAlternate="netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Arguments" Type="System.Object[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="vbOp"><span data-ttu-id="64798-307">用户定义的运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-307">The user-defined operator.</span></span></param>
        <param name="Arguments"><span data-ttu-id="64798-308">要传递给用户定义的运算符的参数值。</span><span class="sxs-lookup"><span data-stu-id="64798-308">Argument values to pass to the user-defined operator.</span></span></param>
        <param name="arguments">To be added.</param>
        <summary><span data-ttu-id="64798-309">执行用户定义的运算符的后期绑定计算。</span><span class="sxs-lookup"><span data-stu-id="64798-309">Executes a late-bound evaluation of a user-defined operator.</span></span> <span data-ttu-id="64798-310">此帮助器方法不宜从您的代码直接调用。</span><span class="sxs-lookup"><span data-stu-id="64798-310">This helper method is not meant to be called directly from your code.</span></span></summary>
        <returns><span data-ttu-id="64798-311">从用户定义的运算符返回的结果。</span><span class="sxs-lookup"><span data-stu-id="64798-311">The result returned from the user-defined operator.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-312">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-312">Required.</span></span> <span data-ttu-id="64798-313">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-313">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-314">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-314">Required.</span></span> <span data-ttu-id="64798-315">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-315">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="64798-316">表示 Visual Basic 整除 (\\) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-316">Represents the Visual Basic integer division (\\) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-317"><paramref name="Left" /> 除以 <paramref name="Right" /> 的整数商，它丢弃了所有余数，而只保留整数部分。</span><span class="sxs-lookup"><span data-stu-id="64798-317">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-318">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-318">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="64798-319">\ 运算符</span><span class="sxs-lookup"><span data-stu-id="64798-319">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="64798-320">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-320">Required.</span></span> <span data-ttu-id="64798-321">整型数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-321">Integral numeric expression.</span></span> <span data-ttu-id="64798-322">要进行移位的位模式。</span><span class="sxs-lookup"><span data-stu-id="64798-322">The bit pattern to be shifted.</span></span> <span data-ttu-id="64798-323">数据类型必须为整型（<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" /> 或 <see langword="ULong" />）。</span><span class="sxs-lookup"><span data-stu-id="64798-323">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="64798-324">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-324">Required.</span></span> <span data-ttu-id="64798-325">数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-325">Numeric expression.</span></span> <span data-ttu-id="64798-326">要将该位模式移位的位数。</span><span class="sxs-lookup"><span data-stu-id="64798-326">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="64798-327">数据类型必须为 <see langword="Integer" /> 或扩展到 <see langword="Integer" />。</span><span class="sxs-lookup"><span data-stu-id="64798-327">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="64798-328">表示 Visual Basic 算术左移位 (&lt;&lt;) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-328">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-329">一个整型数值，</span><span class="sxs-lookup"><span data-stu-id="64798-329">An integral numeric value.</span></span> <span data-ttu-id="64798-330">对该位模式进行移位的结果。</span><span class="sxs-lookup"><span data-stu-id="64798-330">The result of shifting the bit pattern.</span></span> <span data-ttu-id="64798-331">数据类型与 <paramref name="Operand" /> 的数据类型相同。</span><span class="sxs-lookup"><span data-stu-id="64798-331">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-332">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-332">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="64798-333">&lt;&lt; 运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-333">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Pattern" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="64798-334">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-334">Required.</span></span> <span data-ttu-id="64798-335">任何表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-335">Any expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="64798-336">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-336">Required.</span></span> <span data-ttu-id="64798-337">任何符合 Like 运算符中所述的模式匹配约定的字符串表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-337">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="64798-338">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-338">Required.</span></span> <span data-ttu-id="64798-339">一个 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 值，指定运算使用文本比较或二进制比较。</span><span class="sxs-lookup"><span data-stu-id="64798-339">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="64798-340">表示 Visual Basic <see langword="Like" /> 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-340">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="64798-341">如果 <paramref name="Source" /> 中的值的字符串表示形式满足 <paramref name="Pattern" /> 中包含的模式的要求，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-341"><see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="64798-342">如果 <paramref name="Source" /> 和 <paramref name="Pattern" /> 都是 <see langword="True" />，则为 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="64798-342"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-343">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-343">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="64798-344">Like 运算符</span><span class="sxs-lookup"><span data-stu-id="64798-344">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Pattern" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="64798-345">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-345">Required.</span></span> <span data-ttu-id="64798-346">任何 <see langword="String" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-346">Any <see langword="String" /> expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="64798-347">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-347">Required.</span></span> <span data-ttu-id="64798-348">任何符合 Like 运算符中所述的模式匹配约定的 <see langword="String" /> 表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-348">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="64798-349">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-349">Required.</span></span> <span data-ttu-id="64798-350">一个 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 值，指定运算使用文本比较或二进制比较。</span><span class="sxs-lookup"><span data-stu-id="64798-350">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="64798-351">表示 Visual Basic <see langword="Like" /> 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-351">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="64798-352">如果 <paramref name="Source" /> 中的值满足 <paramref name="Pattern" /> 中包含的模式的要求，则为 <see langword="True" />；否则为 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="64798-352"><see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="64798-353">如果 <paramref name="Source" /> 和 <paramref name="Pattern" /> 都为空，则为 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="64798-353"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-354">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-354">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="64798-355">Like 运算符</span><span class="sxs-lookup"><span data-stu-id="64798-355">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-356">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-356">Required.</span></span> <span data-ttu-id="64798-357">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-357">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-358">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-358">Required.</span></span> <span data-ttu-id="64798-359">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-359">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="64798-360">表示 Visual Basic <see langword="Mod" /> 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-360">Represents the Visual Basic <see langword="Mod" /> operator.</span></span></summary>
        <returns><span data-ttu-id="64798-361"><paramref name="Left" /> 除以 <paramref name="Right" /> 后所得的余数。</span><span class="sxs-lookup"><span data-stu-id="64798-361">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-362">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-362">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="64798-363">Mod 运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-363">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-364">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-364">Required.</span></span> <span data-ttu-id="64798-365">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-365">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-366">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-366">Required.</span></span> <span data-ttu-id="64798-367">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-367">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="64798-368">表示 Visual Basic 乘法 (\*) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-368">Represents the Visual Basic multiply (\*) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-369"><paramref name="Left" /> 与 <paramref name="Right" /> 的乘积。</span><span class="sxs-lookup"><span data-stu-id="64798-369">The product of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-370">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-370">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="64798-371">\* 运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-371">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="64798-372">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-372">Required.</span></span> <span data-ttu-id="64798-373">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-373">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="64798-374">表示 Visual Basic 一元负 (-) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-374">Represents the Visual Basic unary minus (-) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-375"><paramref name="Operand" /> 的负值。</span><span class="sxs-lookup"><span data-stu-id="64798-375">The negative value of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-376">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-376">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="64798-377">- 运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-377">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="64798-378">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-378">Required.</span></span> <span data-ttu-id="64798-379">任何 <see langword="Boolean" /> 或数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-379">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="64798-380">表示 Visual Basic <see langword="Not" /> 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-380">Represents the Visual Basic <see langword="Not" /> operator.</span></span></summary>
        <returns><span data-ttu-id="64798-381">对于 <see langword="Boolean" /> 运算，如果 <paramref name="Operand" /> 为 <see langword="False" />，则为 <see langword="True" />；否则为 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="64798-381">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="64798-382">对于按位运算，如果 <paramref name="Operand" /> 为 0，则为 1；否则为 0。</span><span class="sxs-lookup"><span data-stu-id="64798-382">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-383">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-383">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="64798-384">Not 运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-384">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-385">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-385">Required.</span></span> <span data-ttu-id="64798-386">任何 <see langword="Boolean" /> 或数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-386">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-387">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-387">Required.</span></span> <span data-ttu-id="64798-388">任何 <see langword="Boolean" /> 或数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-388">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="64798-389">表示 Visual Basic <see langword="Or" /> 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-389">Represents the Visual Basic <see langword="Or" /> operator.</span></span></summary>
        <returns><span data-ttu-id="64798-390">对于 <see langword="Boolean" /> 运算，如果 <paramref name="Left" /> 和 <paramref name="Right" /> 的计算结果都是 <see langword="False" />，则为 <see langword="False" />；否则为 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="64798-390">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="64798-391">对于按位运算，如果 <paramref name="Left" /> 和 <paramref name="Right" /> 的计算结果都是 0，则为 0；否则为 1。</span><span class="sxs-lookup"><span data-stu-id="64798-391">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-392">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-392">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="64798-393">Or 运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-393">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="64798-394">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-394">Required.</span></span> <span data-ttu-id="64798-395">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-395">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="64798-396">表示 Visual Basic 一元正 (+) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-396">Represents the Visual Basic unary plus (+) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-397"><paramref name="Operand" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="64798-397">The value of <paramref name="Operand" />.</span></span> <span data-ttu-id="64798-398">（<paramref name="Operand" /> 的符号不变。）</span><span class="sxs-lookup"><span data-stu-id="64798-398">(The sign of the <paramref name="Operand" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-399">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-399">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="64798-400">+ 运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-400">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="64798-401">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-401">Required.</span></span> <span data-ttu-id="64798-402">整型数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-402">Integral numeric expression.</span></span> <span data-ttu-id="64798-403">要进行移位的位模式。</span><span class="sxs-lookup"><span data-stu-id="64798-403">The bit pattern to be shifted.</span></span> <span data-ttu-id="64798-404">数据类型必须为整型（<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" /> 或 <see langword="ULong" />）。</span><span class="sxs-lookup"><span data-stu-id="64798-404">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="64798-405">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-405">Required.</span></span> <span data-ttu-id="64798-406">数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-406">Numeric expression.</span></span> <span data-ttu-id="64798-407">要将该位模式移位的位数。</span><span class="sxs-lookup"><span data-stu-id="64798-407">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="64798-408">数据类型必须为 <see langword="Integer" /> 或扩展到 <see langword="Integer" />。</span><span class="sxs-lookup"><span data-stu-id="64798-408">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="64798-409">表示 Visual Basic 算术右移位 (&gt;&gt;) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-409">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-410">一个整型数值，</span><span class="sxs-lookup"><span data-stu-id="64798-410">An integral numeric value.</span></span> <span data-ttu-id="64798-411">对该位模式进行移位的结果。</span><span class="sxs-lookup"><span data-stu-id="64798-411">The result of shifting the bit pattern.</span></span> <span data-ttu-id="64798-412">数据类型与 <paramref name="Operand" /> 的数据类型相同。</span><span class="sxs-lookup"><span data-stu-id="64798-412">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-413">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-413">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="64798-414">&gt;&gt; 运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-414">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-415">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-415">Required.</span></span> <span data-ttu-id="64798-416">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-416">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-417">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-417">Required.</span></span> <span data-ttu-id="64798-418">任何数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-418">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="64798-419">表示 Visual Basic 减法 (-) 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-419">Represents the Visual Basic subtraction (-) operator.</span></span></summary>
        <returns><span data-ttu-id="64798-420"><paramref name="Left" /> 和 <paramref name="Right" /> 之间的差值。</span><span class="sxs-lookup"><span data-stu-id="64798-420">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-421">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-421">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="64798-422">- 运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-422">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="64798-423">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-423">Required.</span></span> <span data-ttu-id="64798-424">任何 <see langword="Boolean" /> 或数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-424">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="64798-425">必需。</span><span class="sxs-lookup"><span data-stu-id="64798-425">Required.</span></span> <span data-ttu-id="64798-426">任何 <see langword="Boolean" /> 或数值表达式。</span><span class="sxs-lookup"><span data-stu-id="64798-426">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="64798-427">表示 Visual Basic <see langword="Xor" /> 运算符。</span><span class="sxs-lookup"><span data-stu-id="64798-427">Represents the Visual Basic <see langword="Xor" /> operator.</span></span></summary>
        <returns><span data-ttu-id="64798-428">一个 <see langword="Boolean" /> 值或数值。</span><span class="sxs-lookup"><span data-stu-id="64798-428">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="64798-429">对于 <see langword="Boolean" /> 比较，返回值是两个 <see langword="Boolean" /> 值的逻辑异运算（互斥逻辑析取）的结果。</span><span class="sxs-lookup"><span data-stu-id="64798-429">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="64798-430">对于按位（数值）运算，返回值是表示两个数值位模式的按位异运算（互斥按位析取）结果的数值。</span><span class="sxs-lookup"><span data-stu-id="64798-430">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="64798-431">有关详细信息，请参阅 <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor 运算符</see>。</span><span class="sxs-lookup"><span data-stu-id="64798-431">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64798-432">此类支持 Visual Basic 编译器，不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="64798-432">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="64798-433">异或运算符 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="64798-433">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>