<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AttachablePropertyServices.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54ffebc592a471cb22b852f78d3980b230f75ecd5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ffebc592a471cb22b852f78d3980b230f75ecd5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.AttachablePropertyServices">
          <source>Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.</source>
          <target state="translated">提供一些静态帮助器方法，这些方法用于从可附加属性中获取值和访问器方法信息，并且和附加的属性存储一起工作。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AttachablePropertyServices">
          <source>Most functionality in this class relies on an attached property store, which generally implements the <ph id="ph1">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph> interface.</source>
          <target state="translated">此类中的大多数功能依赖于的附加的属性存储，且通常实现<ph id="ph1">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AttachablePropertyServices">
          <source>However, parameters for passing the store into <ph id="ph1">&lt;xref:System.Xaml.AttachablePropertyServices&gt;</ph> are not typed as the interface and are instead typed as <ph id="ph2">`object`</ph>.</source>
          <target state="translated">但是，传递到存储的参数<ph id="ph1">&lt;xref:System.Xaml.AttachablePropertyServices&gt;</ph>不类型化为接口和改为被类型化为<ph id="ph2">`object`</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AttachablePropertyServices">
          <source>This is because you can pass an arbitrary object, and in this case, an internal default attachable property store is used.</source>
          <target state="translated">这是因为你可以传递任意对象，并且在这种情况下，使用内部默认的可附加的属性存储。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AttachablePropertyServices">
          <source>Best practice for the arbitrary object is to pass the object that would otherwise be associated with the store.</source>
          <target state="translated">对于任意对象的最佳做法是以传递对象，否则可能与应用商店关联。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AttachablePropertyServices">
          <source>Do not pass <ph id="ph1">`null`</ph> to indicate that you do not have an <ph id="ph2">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph> to use.</source>
          <target state="translated">不要将传递<ph id="ph1">`null`</ph>以指示不具有<ph id="ph2">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph>使用。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AttachablePropertyServices">
          <source>Passing <ph id="ph1">`null`</ph> enters code paths that do nothing.</source>
          <target state="translated">传递<ph id="ph1">`null`</ph>进入不执行任何操作的代码路径。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.AttachablePropertyServices">
          <source>Passing an object that is non-null, but evaluates as <ph id="ph1">`null`</ph> on an attempted <ph id="ph2">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph> cast, uses the default attachable property store.</source>
          <target state="translated">将对象传递为非 null，但计算结果为<ph id="ph1">`null`</ph>上尝试<ph id="ph2">&lt;xref:System.Xaml.IAttachedPropertyStore&gt;</ph>强制转换，将使用默认的可附加的属性存储。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>A specific attachable property store that implements <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>; or any non-null object to access a static default attachable property store.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph> 的特定可附加属性存储；或者是任意不为 null 的对象，用于访问静态默认可附加属性存储。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>The destination array.</source>
          <target state="translated">目标数组。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>The array is a generic array, should be passed undimensioned, and should have components of <ph id="ph1">&lt;see cref="T:System.Xaml.AttachableMemberIdentifier" /&gt;</ph> and <ph id="ph2">&lt;see langword="object" /&gt;</ph>.</source>
          <target state="translated">该数组为泛型数组，应以无维度方式传递，并且应具有 <ph id="ph1">&lt;see cref="T:System.Xaml.AttachableMemberIdentifier" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="object" /&gt;</ph> 的组件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>The source index into which to copy.</source>
          <target state="translated">要在该处进行复制的源索引。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>Copies all attachable property/value pairs from a specified attachable property store and into a destination array.</source>
          <target state="translated">从指定的可附加属性存储中复制所有可附加属性/值对，并将它们复制到目标数组中。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <source>Calling this method invokes an underlying <ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601.CopyTo%2A&gt;</ph> implementation that is constrained with a key/value pair, which might be the source of exceptions that are not listed in this topic.</source>
          <target state="translated">调用此方法时，将调用基础<ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601.CopyTo%2A&gt;</ph>使用键/值对，这可能是未列出本主题中的异常的根源的约束的实现。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
          <source>A specific attachable property store that implements <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>; or any non-null object to access a static default attachable property store.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph> 的特定可附加属性存储；或者是任意不为 null 的对象，用于访问静态默认可附加属性存储。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
          <source>Returns the count of the attachable property entries that are in the specified store.</source>
          <target state="translated">返回指定存储中可附加属性条目的计数。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
          <source>The integer count of entries in the store.</source>
          <target state="translated">存储中条目的整数计数。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
          <source>A specific attachable property store that implements <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>; or any non-null object to access a static default attachable property store.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph> 的特定可附加属性存储；或者是任意不为 null 的对象，用于访问静态默认可附加属性存储。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
          <source>The identifier for the attachable property entry to remove from the store.</source>
          <target state="translated">要从存储区中移除的可附加属性条目的标识符。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
          <source>Removes the entry for the specified attachable property from the specified store.</source>
          <target state="translated">从指定存储中移除指定可附加属性的条目。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an attachable property entry for <ph id="ph2">&lt;paramref name="name" /&gt;</ph> was found in the store and removed from it; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在存储区中找到了 <ph id="ph2">&lt;paramref name="name" /&gt;</ph> 的可附加属性条目并已将其从中移除，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
          <source>Stores are per instance; therefore, in a store, the <ph id="ph1">`name`</ph> value should be unambiguous.</source>
          <target state="translated">存储是每个实例;因此，在存储区中，<ph id="ph1">`name`</ph>值应为明确。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>A specific attachable property store that implements <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>; or any non-null object to use a static default attachable property store.</source>
          <target state="translated">一个实现 <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph> 的特定可附加属性存储，或者为任何不可为 null 的对象以使用静态默认可附加属性存储。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>The identifier of the attachable property entry for which to set a value.</source>
          <target state="translated">要为其设置值的可附加属性条目的标识符。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>The value to set.</source>
          <target state="translated">要设置的值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>Sets a value for the specified attachable property in the specified store.</source>
          <target state="translated">设置指定存储中的指定可附加属性的值。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source>A value could not be set in the store.</source>
          <target state="translated">未能在存储中设置值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>A specific attachable property store that implements <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>; or any non-null object to use a static default attachable property store.</source>
          <target state="translated">一个实现 <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph> 的特定可附加属性存储，或者为任何不可为 null 的对象以使用静态默认可附加属性存储。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>The identifier of the attachable property entry for which to get a value.</source>
          <target state="translated">要为其获取值的可附加属性条目的标识符。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>Out parameter.</source>
          <target state="translated">输出参数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>When this method returns, contains the destination object for the value if <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> exists in the store and has a value.</source>
          <target state="translated">当此方法返回时，如果 <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> 存在于存储中并且具有值，则会包含值的目标对象。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>Attempts to get a value for the specified attachable property in the specified store.</source>
          <target state="translated">尝试获取指定存储中的指定可附加属性的值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source>Does not throw an exception if the specific attachable property does not exist in the store.</source>
          <target state="translated">如果特定可附加属性在存储中不存在，将不会引发异常。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an attachable property entry for <ph id="ph2">&lt;paramref name="name" /&gt;</ph> was found in the store and a value was posted to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在存储中找到了 <ph id="ph2">&lt;paramref name="name" /&gt;</ph> 的可附加属性条目，并且值已传递到 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source>The expected type of the output.</source>
          <target state="translated">预期的输出类型。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source>A specific attachable property store that implements <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph>; or any non-null object to access a static default attachable property store.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Xaml.IAttachedPropertyStore" /&gt;</ph> 的特定可附加属性存储；或者是任意不为 null 的对象，用于访问静态默认可附加属性存储。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source>The identifier of the attachable property entry for which to get a value.</source>
          <target state="translated">要为其获取值的可附加属性条目的标识符。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source>Out parameter.</source>
          <target state="translated">输出参数。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source>When this method returns, contains the destination object for the value if <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> exists in the store and has a value.</source>
          <target state="translated">当此方法返回时，如果 <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> 存在于存储中并且具有值，则会包含值的目标对象。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source>Attempts to get a value for the specified attachable property in the specified store, returning a generic output form.</source>
          <target state="translated">尝试获取指定存储中的指定可附加属性的值，返回泛型输出形式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source>Does not throw an exception if the specific attachable property does not exist in the store.</source>
          <target state="translated">如果特定可附加属性在存储中不存在，将不会引发异常。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an attachable property entry for <ph id="ph2">&lt;paramref name="name" /&gt;</ph> was found in the store and a value was posted to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在存储中找到了 <ph id="ph2">&lt;paramref name="name" /&gt;</ph> 的可附加属性条目，并且值已传递到 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>