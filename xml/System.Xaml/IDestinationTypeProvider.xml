<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDestinationTypeProvider.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55b7c50aa2125017dfd7de732494ba1d51c5e1616.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b7c50aa2125017dfd7de732494ba1d51c5e1616</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>Represents a service that can return a CLR type system identifier for the destination type.</source>
          <target state="translated">表示一个服务，该服务可返回目标类型的 CLR 类型系统标识符。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>The destination type is relevant when the destination type for a property-setting operation is indirectly reported by reflection or other mechanisms.</source>
          <target state="translated">与目标类型相关的情况是属性设置操作的目标类型由反射或其他机制间接报告。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>The type that is returned by <ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph> is resolved from the current position of the XAML node stream by using current XAML schema context.</source>
          <target state="translated">通过返回的类型<ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph>从 XAML 节点流的当前位置使用当前的 XAML 架构上下文解析。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>If you use the XAML type system as implemented by .NET Framework XAML Services and access the service context under these conditions, <ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph> returns the <ph id="ph2">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> based on available XAML type system information and CLR-based XAML schema context.</source>
          <target state="translated">如果你使用的 XAML 类型系统，.NET Framework XAML 服务和访问服务上下文，在这些情况下的实施方式<ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph>返回<ph id="ph2">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>基于可用的 XAML 类型系统信息和基于 CLR 的 XAML 架构上下文。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>This service is relevant for situations where pure CLR reflection or other mechanisms might not provide enough information about a destination type.</source>
          <target state="translated">此服务是适用于其中纯 CLR 反射或其他机制可能会提供足够的信息的目标类型相关的情况。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>The following is a list of some relevant scenarios for <ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider&gt;</ph>:</source>
          <target state="translated">以下是一些相关方案的列表<ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>The CLR type system reports an indirect type because of how the CLR defines and uses types, and you want a true destination type.</source>
          <target state="translated">CLR 类型系统报告间接类型由于 CLR 如何定义和使用类型，并且你想真实的目标类型。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>For example, the APIs in .NET Framework XAML Services use this service internally when they process event members.</source>
          <target state="translated">例如，在.NET Framework XAML 服务 Api 使用此服务内部时在处理事件成员。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>Events are reported by pure CLR reflection as a <ph id="ph1">&lt;xref:System.Delegate&gt;</ph>.</source>
          <target state="translated">通过为纯 CLR 反射报告事件<ph id="ph1">&lt;xref:System.Delegate&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>You want to ensure that the destination type of a type converter usage matches the expected type that the type converter can produce.</source>
          <target state="translated">你想要确保目标类型的类型转换器用法匹配可以生成类型转换器的预期的类型。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>This scenario is useful when the destination type is parameterized or generic.</source>
          <target state="translated">这种情况下是适合于在参数化的目标类型或泛型。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>Your value converter is being called from a usage that nested in another value converter.</source>
          <target state="translated">从嵌套在另一个值转换器的用法中调用的值转换器。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>In this case, <ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph> unwinds the nesting and returns the destination type of the actual property being set, instead of returning the output type of any intervening value converter.</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph>展开嵌套，并返回实际的属性设置，而不是返回任何干预的值转换器的输出类型的目标类型。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>Type converters and markup extensions can query for <ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider&gt;</ph> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</source>
          <target state="translated">类型转换器和标记扩展可以查询有关<ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider&gt;</ph>作为上由 XAML 对象编写器，XAML 对象编写器调用值转换行为时提供的服务上下文的服务。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>For more information, see <bpt id="p1">[</bpt>Type Converters and Markup Extensions for XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept> and <bpt id="p2">[</bpt>Service Contexts Available to Type Converters and Markup Extensions<ept id="p2">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>类型转换器和 XAML 的标记扩展<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept>和<bpt id="p2">[</bpt>可供类型转换器和标记扩展的上下文服务<ept id="p2">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
          <source>Returns the CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that identifies the destination type for the relevant type converter or markup extension.</source>
          <target state="translated">返回 CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，用于标识相关类型转换器或标记扩展的目标类型。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
          <source>A CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> value for the destination type.</source>
          <target state="translated">目标类型的 CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
          <source>This method has no input parameter.</source>
          <target state="translated">此方法没有任何输入的参数。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
          <source>What to return (and whether to return anything other than <ph id="ph1">`null`</ph>) is determined by the current node position in the XAML node stream.</source>
          <target state="translated">要返回的内容 (以及是否不返回任何内容<ph id="ph1">`null`</ph>) 由 XAML 节点流中的当前节点位置。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
          <source>Service Implementers</source>
          <target state="translated">服务实施者</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
          <source>If you reimplement this service, the <ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph> method should return the type that a markup extension or type converter expects to check against its most specific conversion or output type.</source>
          <target state="translated">如果重新实现此服务，<ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph>方法应返回的标记扩展或类型转换器预期检查时要对照其最特定的转换或输出类型的类型。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>