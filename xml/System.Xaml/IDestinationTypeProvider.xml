<Type Name="IDestinationTypeProvider" FullName="System.Xaml.IDestinationTypeProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="50aef69f20a4e0e6146c69f5c8de036effb7f170" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51875053" /></Metadata><TypeSignature Language="C#" Value="public interface IDestinationTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDestinationTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IDestinationTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDestinationTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDestinationTypeProvider" />
  <TypeSignature Language="F#" Value="type IDestinationTypeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>表示一个服务，该服务可返回目标类型的 CLR 类型系统标识符。 与目标类型相关的情况是属性设置操作的目标类型由反射或其他机制间接报告。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的类型<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>通过使用当前的 XAML 架构上下文来解决从 XAML 节点流的当前位置。  
  
 如果由.NET Framework XAML 服务和访问服务上下文，在这些情况下实现使用 XAML 类型系统<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>返回<xref:System.Xaml.XamlType.UnderlyingType%2A>基于可用的 XAML 类型系统信息和基于 CLR 的 XAML 架构上下文。  
  
 此服务是适用于其中纯 CLR 反射或其他机制可能会提供足够的信息有关的目标类型的情况。 以下是一些相关方案的列表<xref:System.Xaml.IDestinationTypeProvider>:  
  
-   CLR 类型系统报告间接类型由于 CLR 如何定义和使用类型，并且你想真实的目标类型。 例如，.NET Framework XAML 服务中的 Api 使用此服务在内部它们处理事件成员时。 事件报告的作为纯 CLR 反射<xref:System.Delegate>。  
  
-   你想要确保目标类型的类型转换器用法与类型转换器可以生成所需的类型相匹配。 此方案非常适合于在参数化的目标类型或泛型。  
  
-   从嵌套在另一个值转换器的使用情况调用值转换器。 在这种情况下，<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>展开嵌套，并返回实际设置，而不是返回的输出类型的任何干预的值转换器的属性的目标类型。  
  
 类型转换器和标记扩展可以查询<xref:System.Xaml.IDestinationTypeProvider>作为 XAML 对象编写器调用值转换行为时，XAML 对象编写器提供的服务上下文上的服务。 有关详细信息，请参阅[Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)并[Service Contexts Available to 类型转换器和标记扩展](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">类型转换器或 XAML 的标记扩展</related>
  </Docs>
  <Members>
    <Member MemberName="GetDestinationType">
      <MemberSignature Language="C#" Value="public Type GetDestinationType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDestinationType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IDestinationTypeProvider.GetDestinationType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDestinationType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDestinationType();" />
      <MemberSignature Language="F#" Value="abstract member GetDestinationType : unit -&gt; Type" Usage="iDestinationTypeProvider.GetDestinationType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 CLR <see cref="T:System.Type" />，用于标识相关类型转换器或标记扩展的目标类型。</summary>
        <returns>目标类型的 CLR <see cref="T:System.Type" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法具有任何输入的参数。 要返回的内容 (以及是否而不返回任何内容`null`) 由 XAML 节点流中的当前节点位置。  
  
## <a name="service-implementers"></a>服务实施者  
 如果重新实现此服务，<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>方法应返回的标记扩展或类型转换器预期检查时要对照其最具体的转换或输出类型的类型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>