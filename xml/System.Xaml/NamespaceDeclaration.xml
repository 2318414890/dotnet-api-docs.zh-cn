<Type Name="NamespaceDeclaration" FullName="System.Xaml.NamespaceDeclaration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec67bf54204839d50fb0c3a54c8c722afba2ecd2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30718271" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NamespaceDeclaration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NamespaceDeclaration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.NamespaceDeclaration" />
  <TypeSignature Language="VB.NET" Value="Public Class NamespaceDeclaration" />
  <TypeSignature Language="C++ CLI" Value="public ref class NamespaceDeclaration" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Prefix={Prefix} Namespace={Namespace}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为 XAML 命名空间声明标识符和前缀，方法是将这些字符串值存储为单独的属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.NamespaceDeclaration> 表示 XAML 节点流的一部分的 XAML 命名空间信息。 <xref:System.Xaml.NamespaceDeclaration>类是不是真正的对象或成员的节点类型; 相反，它是离散的节点类型。  
  
 在 XAML 节点流中，<xref:System.Xaml.NamespaceDeclaration>对象或对其应用该 XAML 命名空间的成员之前遇到。  
  
 按照约定，标识符的 XAML 命名空间类似于统一资源标识符 (URI)。 但是，<xref:System.Xaml.NamespaceDeclaration.Namespace%2A>属性<xref:System.Xaml.NamespaceDeclaration>属于类型<xref:System.String>。 Api 的.NET Framework XAML 服务通常将视为字符串的 XAML 命名空间标识符。 相对路径与绝对区别 true<xref:System.Uri>类型是用于标识 XAML （或 XML） 的命名空间不相关。 URI 作为命名空间约定也是在 XML 中典型的。  
  
 此类型的对象用作输入<xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A?displayProperty=nameWithType>方法时写入到对象图的 XAML 节点流信息。 此类型的对象用作输入<xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A?displayProperty=nameWithType>XAML 节点流的形式写入信息 XML 序列化的方法。  
  
 命名空间声明可能具有<xref:System.String.Empty?displayProperty=nameWithType>的前缀值。 A<xref:System.String.Empty?displayProperty=nameWithType>前缀表示的默认 XAML 命名空间声明。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
    <altmember cref="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
    <altmember cref="P:System.Xaml.XamlXmlReader.Namespace" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamespaceDeclaration (string ns, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string ns, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.NamespaceDeclaration.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ns As String, prefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamespaceDeclaration(System::String ^ ns, System::String ^ prefix);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">以字符串形式指定的 XAML 命名空间标识符。</param>
        <param name="prefix">在前缀映射中用于命名空间的字符串前缀。</param>
        <summary>使用初始属性值初始化 <see cref="T:System.Xaml.NamespaceDeclaration" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始化<xref:System.Xaml.NamespaceDeclaration>不会尝试验证值。 若要正确使用 XAML 编写器，请使用 null 值。 命名空间声明可能具有<xref:System.String.Empty?displayProperty=nameWithType>的前缀值。 A<xref:System.String.Empty?displayProperty=nameWithType>前缀表示的默认 XAML 命名空间声明。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.NamespaceDeclaration.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Xaml.NamespaceDeclaration" /> 的标识符组成部分。</summary>
        <value>XAML 命名空间声明的标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 按照约定，标识符 XAML 命名空间类似于统一资源标识符 (URI)。 Api 的.NET Framework XAML 服务通常将视为字符串的 XAML 命名空间标识符。 相对路径与绝对区别 true<xref:System.Uri>类型是用于标识 XAML （或 XML） 的命名空间不相关。 URI 作为命名空间约定也是在 XML 中典型的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.NamespaceDeclaration.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用作 <see cref="T:System.Xaml.NamespaceDeclaration" /> 的 XAML 命名空间映射前缀的前缀。</summary>
        <value>此 <see cref="T:System.Xaml.NamespaceDeclaration" /> 的前缀字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 命名空间声明可能具有<xref:System.String.Empty?displayProperty=nameWithType>的前缀值。 A<xref:System.String.Empty?displayProperty=nameWithType>前缀表示的默认 XAML 命名空间声明。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>