<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlDuplicateMemberException.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d1b90ff095274325823e52f7985c4014bfd3a64f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1b90ff095274325823e52f7985c4014bfd3a64f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlDuplicateMemberException">
          <source>The exception that is thrown when a XAML writer attempts to write a value for a duplicate member into the same object node.</source>
          <target state="translated">在 XAML 编写器尝试将重复成员的值写入同一对象节点时所引发的异常。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDuplicateMemberException">
          <source>If you handle this exception from a XAML node stream, members might be reported as duplicates in several possible situations.</source>
          <target state="translated">如果你处理此异常从 XAML 节点流，成员可能会报告为几种可能的情况下的重复项。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDuplicateMemberException">
          <source>For example, an explicit property element for a XAML content property might be preceded by whitespace that is interpreted as content, if the collection is whitespace significant.</source>
          <target state="translated">例如，为 XAML 内容属性的显式属性元素可能前面的空白将被解释为内容，如果该集合为空格。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDuplicateMemberException">
          <source>Or the XAML writer might be attempting to reset a property that should instead be using a <ph id="ph1">`GetObject`</ph> default value.</source>
          <target state="translated">或 XAML 编写器可能会尝试重置一个属性，应改为使用<ph id="ph1">`GetObject`</ph>默认值。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDuplicateMemberException">
          <source>If you analyze individual nodes in the XAML node stream, you can often determine the source of the problem.</source>
          <target state="translated">如果您分析 XAML 节点流中的各个节点，你通常可以确定问题的源。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDuplicateMemberException">
          <source>If a XAML object writer provides special handing for duplicate members, it can prevent some duplicate member exceptions if you specify <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck%2A&gt;</ph> as <ph id="ph2">`true`</ph> in <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph> that initialize the <ph id="ph4">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</source>
          <target state="translated">如果 XAML 对象编写器提供了重复的成员的特殊处理，如果指定，它会阻止某些重复成员异常<ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck%2A&gt;</ph>作为<ph id="ph2">`true`</ph>中<ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>该初始化<ph id="ph4">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlDuplicateMemberException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDuplicateMemberException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDuplicateMemberException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDuplicateMemberException" /&gt;</ph> class with a system-supplied message that describes the error.</source>
          <target state="translated">使用由系统提供的用于描述错误的消息初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDuplicateMemberException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String)">
          <source>The message that describes the exception.</source>
          <target state="translated">描述该异常的消息。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDuplicateMemberException" /&gt;</ph> class with a specified message that describes the error.</source>
          <target state="translated">使用指定的描述错误的消息初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDuplicateMemberException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">承载序列化对象数据的对象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">关于来源和目标的上下文信息</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDuplicateMemberException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">用序列化数据初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDuplicateMemberException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
          <source>The message that describes the exception.</source>
          <target state="translated">描述该异常的消息。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">导致当前异常的异常。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 参数不为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则当前异常会在处理内部异常的 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 块中引发。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDuplicateMemberException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDuplicateMemberException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">因前一个异常而直接引发的异常应在 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 属性中包含对前一个异常的引用。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 属性返回的值与传递到构造函数中的值相同；或者，如果 <ph id="ph2">`null`</ph> 属性没有向构造函数提供内部异常值，则为 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
          <source>The XAML member identifier to report.</source>
          <target state="translated">要报告的 XAML 成员标识符。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
          <source>The XAML type identifier to report as the parent type.</source>
          <target state="translated">要作为父类型报告的 XAML 类型标识符。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDuplicateMemberException" /&gt;</ph> class with the relevant member and type information to report.</source>
          <target state="translated">使用要报告的相关成员和类型信息初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDuplicateMemberException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlDuplicateMemberException.DuplicateMember">
          <source>Gets or sets the XAML member identifier for the property to report as a duplicate.</source>
          <target state="translated">获取或设置要作为重复项报告的属性的 XAML 成员标识符。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDuplicateMemberException.DuplicateMember">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> object (XAML member identifier) to report.</source>
          <target state="translated">要报告的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> 对象（XAML 成员标识符）。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">承载序列化对象数据的对象。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">关于来源和目标的上下文信息</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDuplicateMemberException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">用序列化数据初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDuplicateMemberException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.</source>
          <target state="translated">在反序列化，以便重建通过流传输的异常对象过程中调用此构造函数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlDuplicateMemberException.ParentType">
          <source>Gets or sets the XAML type identifier to report as the parent type.</source>
          <target state="translated">获取或设置要作为父类型报告的 XAML 类型标识符。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDuplicateMemberException.ParentType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> object (XAML type identifier) to report as the parent type.</source>
          <target state="translated">要作为父类型报告的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> 对象（XAML 类型标识符）。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>