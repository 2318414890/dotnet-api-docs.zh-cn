<Type Name="IAttachedPropertyStore" FullName="System.Xaml.IAttachedPropertyStore">
  <TypeSignature Language="C#" Value="public interface IAttachedPropertyStore" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAttachedPropertyStore" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAttachedPropertyStore" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAttachedPropertyStore" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAttachedPropertyStore" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="da274-101">表示设置了可附加成员的对象的可附加成员存储。</span><span class="sxs-lookup"><span data-stu-id="da274-101">Represents an attachable member store for an object where attachable members are set.</span></span> <span data-ttu-id="da274-102">随后可使用 <see cref="T:System.Xaml.AttachablePropertyServices" /> 引用此可附加成员存储。</span><span class="sxs-lookup"><span data-stu-id="da274-102">This attachable member store can then be referenced with <see cref="T:System.Xaml.AttachablePropertyServices" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da274-103">可附加成员通常是实现，使用为可附加属性。</span><span class="sxs-lookup"><span data-stu-id="da274-103">An attachable member is typically implemented and used as an attachable property.</span></span> <span data-ttu-id="da274-104">术语"可附加成员"提供一种技术还定义了可附加事件的系统的可能性。</span><span class="sxs-lookup"><span data-stu-id="da274-104">The term "attachable member" provides for the possibility that a technology also defines a system for attachable events.</span></span> <span data-ttu-id="da274-105">作为属性存储中的项，可附加的事件存储对通过可附加成员用法分配的处理程序的引用。</span><span class="sxs-lookup"><span data-stu-id="da274-105">As an item in a property store, an attachable event stores a reference to the handler that is assigned through attachable member usage.</span></span> <span data-ttu-id="da274-106">可附加的属性，即使可附加的事件不是真正的基础类型系统的属性，或者它被认定中实际使用，可在 XAML 中的附加事件可以使用相同的存储。</span><span class="sxs-lookup"><span data-stu-id="da274-106">An attachable event in XAML can use the same store as the attachable properties do, even if the attachable event is not truly a property to the underlying type system or as it is considered in real-world use.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
    <altmember cref="T:System.Xaml.AttachablePropertyServices" />
  </Docs>
  <Members>
    <Member MemberName="CopyPropertiesTo">
      <MemberSignature Language="C#" Value="public void CopyPropertiesTo (System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,object&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPropertiesTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Xaml.AttachableMemberIdentifier, object&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPropertiesTo (array As KeyValuePair(Of AttachableMemberIdentifier, Object)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyPropertiesTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Xaml::AttachableMemberIdentifier ^, System::Object ^&gt;&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,System.Object&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="da274-107">目标数组。</span><span class="sxs-lookup"><span data-stu-id="da274-107">The destination array.</span></span> <span data-ttu-id="da274-108">该数组为泛型数组，应以无维度方式传递，并且应具有 <see cref="T:System.Xaml.AttachableMemberIdentifier" /> 和 <see langword="object" /> 的组件。</span><span class="sxs-lookup"><span data-stu-id="da274-108">The array is a generic array, should be passed undimensioned, and should have components of <see cref="T:System.Xaml.AttachableMemberIdentifier" /> and <see langword="object" />.</span></span></param>
        <param name="index"><span data-ttu-id="da274-109">开始复制处的源索引。</span><span class="sxs-lookup"><span data-stu-id="da274-109">The source index where copying should begin.</span></span></param>
        <summary><span data-ttu-id="da274-110">从此可附加成员存储区中复制所有可附加成员/值对，并将它们复制到目标数组中。</span><span class="sxs-lookup"><span data-stu-id="da274-110">Copies all attachable member/value pairs from this attachable member store into a destination array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCount">
      <MemberSignature Language="C#" Value="public int PropertyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PropertyCount" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IAttachedPropertyStore.PropertyCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PropertyCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="da274-111">获取此可附加成员存储中的可附加成员条目的计数。</span><span class="sxs-lookup"><span data-stu-id="da274-111">Gets the count of the attachable member entries in this attachable member store.</span></span></summary>
        <value><span data-ttu-id="da274-112">存储中条目的整数计数。</span><span class="sxs-lookup"><span data-stu-id="da274-112">The integer count of entries in the store.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier"><span data-ttu-id="da274-113">要移除的可附加成员条目的 XAML 类型系统标识符。</span><span class="sxs-lookup"><span data-stu-id="da274-113">The XAML type system identifier for the attachable member entry to remove.</span></span></param>
        <summary><span data-ttu-id="da274-114">从此可附加成员存储中移除指定可附加成员的条目。</span><span class="sxs-lookup"><span data-stu-id="da274-114">Removes the entry for the specified attachable member from this attachable member store.</span></span></summary>
        <returns>
          <span data-ttu-id="da274-115">如果在存储中找到了 <paramref name="attachableMemberIdentifier" /> 的可附加成员条目并已将其移除，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="da274-115"><see langword="true" /> if an attachable member entry for <paramref name="attachableMemberIdentifier" /> was found in the store and removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier"><span data-ttu-id="da274-116">要设置的可附加成员条目的 XAML 类型系统标识符。</span><span class="sxs-lookup"><span data-stu-id="da274-116">The XAML type system identifier for the attachable member entry to set.</span></span></param>
        <param name="value"><span data-ttu-id="da274-117">要设置的值。</span><span class="sxs-lookup"><span data-stu-id="da274-117">The value to set.</span></span></param>
        <summary><span data-ttu-id="da274-118">设置指定存储中的指定可附加成员的值。</span><span class="sxs-lookup"><span data-stu-id="da274-118">Sets a value for the specified attachable member in the specified store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da274-119">如果已存在特定的可附加成员，实现不应引发异常。</span><span class="sxs-lookup"><span data-stu-id="da274-119">An implementation should not throw an exception if the specific attachable member already exists.</span></span> <span data-ttu-id="da274-120">如果已存在的成员，该实现应覆盖任何现有值替换为`value`。</span><span class="sxs-lookup"><span data-stu-id="da274-120">If a member already exists, the implementation should overwrite any existing value with `value`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.AttachableMemberIdentifier" />
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public bool TryGetProperty (System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetProperty(class System.Xaml.AttachableMemberIdentifier attachableMemberIdentifier, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetProperty(System::Xaml::AttachableMemberIdentifier ^ attachableMemberIdentifier, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachableMemberIdentifier" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="attachableMemberIdentifier"><span data-ttu-id="da274-121">要获取的可附加成员条目的 XAML 类型系统标识符。</span><span class="sxs-lookup"><span data-stu-id="da274-121">The XAML type system identifier for the attachable member entry to get.</span></span></param>
        <param name="value"><span data-ttu-id="da274-122">输出参数。</span><span class="sxs-lookup"><span data-stu-id="da274-122">Out parameter.</span></span> <span data-ttu-id="da274-123">此方法返回时，如果 <c>attachableMemberIdentifier</c> 存在于存储中并且具有值，则会包含该值的目标对象。</span><span class="sxs-lookup"><span data-stu-id="da274-123">When this method returns, contains the destination object for the value if <c>attachableMemberIdentifier</c> exists in the store and has a value.</span></span></param>
        <summary><span data-ttu-id="da274-124">尝试获取指定存储中的指定可附加成员的值。</span><span class="sxs-lookup"><span data-stu-id="da274-124">Attempts to get a value for the specified attachable member in the specified store.</span></span></summary>
        <returns>
          <span data-ttu-id="da274-125">如果在存储中找到了 <paramref name="attachableMemberIdentifier" /> 的可附加成员条目，并且值已传递到 <paramref name="value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="da274-125"><see langword="true" /> if an attachable member entry for <paramref name="attachableMemberIdentifier" /> was found in the store and a value was posted to <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da274-126">如果特定的可附加成员不在存储区中，实现不应引发异常。</span><span class="sxs-lookup"><span data-stu-id="da274-126">An implementation should not throw an exception if the specific attachable member is not located in the store.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>