<Type Name="XamlXmlWriter" FullName="System.Xaml.XamlXmlWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5db12b0b313c0c2b62fbd959982afe9fc1ab4266" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36443843" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlXmlWriter : System.Xaml.XamlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlXmlWriter extends System.Xaml.XamlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlXmlWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlXmlWriter&#xA;Inherits XamlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlXmlWriter : System::Xaml::XamlWriter" />
  <TypeSignature Language="F#" Value="type XamlXmlWriter = class&#xA;    inherit XamlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Uses a <see cref="T:System.IO.TextWriter" /> or <see cref="T:System.Xml.XmlWriter" /> support class to write a XAML node stream to a text or markup serialized form.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类通常用于序列化方案。  
  
## <a name="how-to-use-xamlxmlwriter"></a>如何使用 XamlXmlWriter  
 <xref:System.Xaml.XamlWriter> API 具有多种方法用以编写不同类型的 XAML 节点。 这些统称为文档中`Write`方法<xref:System.Xaml.XamlWriter>。 <xref:System.Xaml.XamlXmlWriter> 使用多个内部状态类来确定要执行的操作时之一其`Write`调用实现。 A`Write`调用使用状态来确定是否可以写入请求的元素、 特性或值，或是否会引发异常。 例如，如果你调用<xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>和状态<xref:System.Xaml.XamlXmlWriter>当前节点的位置是对值或成员中，将引发异常。 通常情况下，调用方的<xref:System.Xaml.XamlXmlWriter>API 应注意到当前来自 XAML 读取器和 XAML 节点流的 XAML 节点的类型。 基于此知识，调用方应避免调用`Write`与当前的节点类型不相关的 Api。  
  
## <a name="xaml-namespaces-and-xamlxmlwriter"></a>XAML 命名空间和 XamlXmlWriter  
 XAML 命名空间编写行为<xref:System.Xaml.XamlXmlWriter>很复杂，不限于显式调用<xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A>。 相反，其他`Write`调用，如<xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A>，可能需要在节点结构的特定点处编写的命名空间声明。 XAML 编写器根据自己的逻辑，会生成前缀或使用来自信息<xref:System.Xaml.INamespacePrefixLookup>服务，以确定首选的前缀。 此外，显式<xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A>调用可能会延迟，或可能会返回任何内容如果 XAML 命名空间声明已适用且声明在其他位置。  
  
## <a name="write-method-exceptions"></a>编写方法异常  
 引发的异常<xref:System.Xaml.XamlXmlWriter>`Write`方法通常都是<xref:System.InvalidOperationException>或<xref:System.Xaml.XamlXmlWriterException>。  
  
 <xref:System.InvalidOperationException>通常表明 XAML 读取器，传递到 XAML 节点流中无效的节点结构。 在这种情况下节点结构无效的原因，不相关的 XAML 架构或 XAML 架构上下文的验证。 相反，节点流是在其基本窗体中无效。 例如，如果发生故障的 XAML 读取器实现生成 XAML 节点流包含两个连续`StartObject`节点，尝试调用第二个<xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A>会引发<xref:System.InvalidOperationException>。 所有 XAML 编写器应都考虑此类操作无效。 另一个示例<xref:System.InvalidOperationException>是 XAML 命名空间信息时通过适用于将当前节点流的位置的 XAML 架构上下文不可用。  
  
 A<xref:System.Xaml.XamlXmlWriterException>表示此特定的 XAML 编写器实现引发异常根据其预期的功能而进行选择的其中一个异常。 A<xref:System.Xaml.XamlXmlWriterException>可以指示特定用例其中<xref:System.Xaml.XamlXmlWriter>违反了其自己的状态或设置。 例如，<xref:System.Xaml.XamlXmlWriterException>可能会导致因尝试写入到的位置的 XAML 命名空间信息的<xref:System.Xaml.XamlXmlWriter>，其序列化格式不支持或编写成员重复时实例的<xref:System.Xaml.XamlXmlWriterSettings>禁止它。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xaml.XamlXmlWriter" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.Stream * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (stream, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="stream">The stream to write.</param>
        <param name="schemaContext">The XAML schema context for the XAML writer.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xaml.XamlXmlWriter" /> class from a stream.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <see langword="null" />.  -or-  <paramref name="schemaContext" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.TextWriter textWriter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter textWriter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::TextWriter ^ textWriter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.TextWriter * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (textWriter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> that writes the output.</param>
        <param name="schemaContext">The XAML schema context for the XAML writer.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xaml.XamlXmlWriter" /> class from a <see cref="T:System.IO.TextWriter" /> basis.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textWriter" /> or <paramref name="schemaContext" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.Xml.XmlWriter xmlWriter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlWriter xmlWriter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::Xml::XmlWriter ^ xmlWriter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.Xml.XmlWriter * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (xmlWriter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">The <see cref="T:System.Xml.XmlWriter" /> that writes the output.</param>
        <param name="schemaContext">The XAML schema context for the XAML writer.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xaml.XamlXmlWriter" /> class from a <see cref="T:System.Xml.XmlWriter" /> basis.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlWriter" /> or <paramref name="schemaContext" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.Stream * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (stream, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="stream">The stream to write.</param>
        <param name="schemaContext">The XAML schema context for the XAML writer.</param>
        <param name="settings">An instance of <see cref="T:System.Xaml.XamlXmlWriterSettings" />, which typically has specific non-default settings.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xaml.XamlXmlWriter" /> class from a stream using a writer settings object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不更改的任何值`settings`对象后<xref:System.Xaml.XamlXmlWriter>构造实例。 <xref:System.Xaml.XamlXmlWriter> 无法更新其基于在运行时是可变的设置值的内部设置。 应仅为初始化提供设置。 你可以通过使用之一来合并从活动的 XAML 编写器设置<xref:System.Xaml.XamlXmlWriterSettings>构造函数签名; 但是，你必须然后将这些设置应用到新的 XAML 编写器实例，而不是尝试调整现有的一个。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> or <paramref name="schemaContext" /> is <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.TextWriter textWriter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter textWriter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::TextWriter ^ textWriter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.IO.TextWriter * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (textWriter, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> that writes the output.</param>
        <param name="schemaContext">The XAML schema context for the XAML writer.</param>
        <param name="settings">An instance of <see cref="T:System.Xaml.XamlXmlWriterSettings" />, which typically has specific non-default settings.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xaml.XamlXmlWriter" /> class from a <see cref="T:System.IO.TextWriter" /> basis using a settings object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不更改的任何值`settings`对象后<xref:System.Xaml.XamlXmlWriter>构造实例。 <xref:System.Xaml.XamlXmlWriter> 无法更新其基于在运行时是可变的设置值的内部设置。 应仅为初始化提供设置。 你可以通过使用之一来合并从活动的 XAML 编写器设置<xref:System.Xaml.XamlXmlWriterSettings>构造函数签名; 但是，你必须然后将这些设置应用到新的 XAML 编写器实例，而不是尝试调整现有的一个。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textWriter" /> or <paramref name="schemaContext" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.Xml.XmlWriter xmlWriter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlWriter xmlWriter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::Xml::XmlWriter ^ xmlWriter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlXmlWriter : System.Xml.XmlWriter * System.Xaml.XamlSchemaContext * System.Xaml.XamlXmlWriterSettings -&gt; System.Xaml.XamlXmlWriter" Usage="new System.Xaml.XamlXmlWriter (xmlWriter, schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">The <see cref="T:System.Xml.XmlWriter" /> that writes the output.</param>
        <param name="schemaContext">The XAML schema context for the XAML writer.</param>
        <param name="settings">An instance of <see cref="T:System.Xaml.XamlXmlWriterSettings" />, which typically has specific non-default settings.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xaml.XamlXmlWriter" /> class from a <see cref="T:System.Xml.XmlWriter" /> basis using a settings object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不更改的任何值`settings`对象后<xref:System.Xaml.XamlXmlWriter>构造实例。 <xref:System.Xaml.XamlXmlWriter> 无法更新其基于在运行时是可变的设置值的内部设置。 应仅为初始化提供设置。 你可以通过使用之一来合并从活动的 XAML 编写器设置<xref:System.Xaml.XamlXmlWriterSettings>构造函数签名; 但是，你必须然后将这些设置应用到新的 XAML 编写器实例，而不是尝试调整现有的一个。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlWriter" /> or <paramref name="schemaContext" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlXmlWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release the unmanaged resources; otherwise, <see langword="false" />.</param>
        <summary>Releases the unmanaged resources used by <see cref="T:System.Xaml.XamlXmlWriter" /> and optionally releases the managed resources.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此实现中调用`Close`基础<xref:System.Xml.XmlWriter>或<xref:System.IO.TextWriter>用例其中<xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A>是`true`在任何提供<xref:System.Xaml.XamlXmlWriterSettings>。 否则，它会调用<xref:System.Xaml.XamlXmlWriter.Flush%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="xamlXmlWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calls the <see langword="Flush" /> method of the underlying <see cref="T:System.Xml.XmlWriter" /> or <see cref="T:System.IO.TextWriter" />, which writes anything that is currently in the buffer, and then closes the writer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Dispose`行为<xref:System.Xaml.XamlXmlWriter>可以受其编写器设置，尤其是通过<xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlXmlWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the XAML schema context that this <see cref="T:System.Xaml.XamlXmlWriter" /> uses for processing.</summary>
        <value>XAML 架构上下文此<see cref="T:System.Xaml.XamlXmlWriter" />用于 XAML 处理。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML 编写器通常从关联的 XAML 读取器提供 XAML 节点流中获取其 XAML 架构上下文。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlXmlWriterSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlXmlWriterSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlWriter.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As XamlXmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlXmlWriterSettings ^ Settings { System::Xaml::XamlXmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xaml.XamlXmlWriterSettings" Usage="System.Xaml.XamlXmlWriter.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlXmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the writer settings that this <see cref="T:System.Xaml.XamlXmlWriter" /> uses for XAML processing.</summary>
        <value>编写器设置此<see cref="T:System.Xaml.XamlXmlWriter" />用于 XAML 处理。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 获取此属性的值是副本而不是引用。 更改设置的属性值不影响活动<xref:System.Xaml.XamlXmlWriter>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberSignature Language="F#" Value="override this.WriteEndMember : unit -&gt; unit" Usage="xamlXmlWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes a XAML end member node to the underlying <see cref="T:System.Xml.XmlWriter" /> or <see cref="T:System.IO.TextWriter" />. Throws an exception if the current position of the XAML node stream is not within a member, or if the internal writer state does not support writing to an end member.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The current position of the XAML node stream is not within a member.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">The current writer state does not support writing an end member.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : unit -&gt; unit" Usage="xamlXmlWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes a XAML end object node to the underlying <see cref="T:System.Xml.XmlWriter" /> or <see cref="T:System.IO.TextWriter" />. Throws an exception if the current position of the XAML node stream that is being processed is incompatible with writing an end object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 XAML 标记和文本形式，结束对象是结束标记。  
  
 最常见情况<xref:System.InvalidOperationException>由引发<xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>时当前的 XAML 节点流位置是否仍在一个成员和<xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>调用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The current position of the XAML node stream is not in a scope where an end member can be written.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">The current writer state does not support writing an end object.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberSignature Language="F#" Value="override this.WriteGetObject : unit -&gt; unit" Usage="xamlXmlWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes an object for cases where the specified object is a default or implicit value of the property that is being written, instead of being specified as an object value in the input XAML node set.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="override this.WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlXmlWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">The XAML namespace declaration to write.</param>
        <summary>Writes namespace information to the underlying <see cref="T:System.Xml.XmlWriter" /> or <see cref="T:System.IO.TextWriter" />. May throw an exception for certain states; however, may instead defer writing the namespace information until the writer and the XAML node stream that is being processed reaches a position where a XAML namespace declaration can be inserted.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceDeclaration" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceDeclaration" /> is not a valid XAML namespace declaration (has a null prefix or null identifier component).</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">The current writer state does not support writing a XAML namespace declaration.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberSignature Language="F#" Value="override this.WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlXmlWriter.WriteStartMember property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property">The XAML member identifier for the member to write.</param>
        <summary>Writes a XAML start member node to the underlying <see cref="T:System.Xml.XmlWriter" /> or <see cref="T:System.IO.TextWriter" />. Throws an exception if the current position of the XAML node stream is within another member, or if it is not in a scope or writer state where a start member can be written.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的内部默认逻辑<xref:System.Xaml.XamlXmlWriter>第一次尝试属性形式编写成员。 如果因为属性或其值不支持文本语法不支持任何特性形式，则转而写入的属性元素。 如果属性是 XAML 内容属性、`GetObject`用例或隐式属性，可能写入其他 XAML 形式，如内部文本或无干扰的成员的对象子级。  
  
 如果从不引发重复成员异常<xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A>是`true`中<xref:System.Xaml.XamlXmlWriterSettings>用于此设置的对象<xref:System.Xaml.XamlXmlWriter>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="property" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="property" /> is not a valid <see cref="T:System.Xaml.XamlMember" />.</exception>
        <exception cref="T:System.InvalidOperationException">The current position of the XAML node stream is invalid for writing a start member.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">The writer state is not valid for writing a start member.  -or-  The XAML writer attempted to write a duplicate member. This exception may have a more precise inner exception.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ type);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlXmlWriter.WriteStartObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">The <see cref="T:System.Xaml.XamlType" /> (XAML type identifier) for the object to write.</param>
        <summary>Writes a XAML start object node to the underlying <see cref="T:System.Xml.XmlWriter" /> or <see cref="T:System.IO.TextWriter" />. Throws an exception if the current position of the XAML node stream is not in a scope where a start object can be written, or if the writer is not in a state that can write a start object.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> is not a valid <see cref="T:System.Xaml.XamlType" />.</exception>
        <exception cref="T:System.InvalidOperationException">The current position of the XAML node stream is not valid for writing a new start object.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">The state of the XAML writer is not valid for writing a new start object.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteValue : obj -&gt; unit" Usage="xamlXmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The value information to write.</param>
        <summary>Writes a XAML value node to the underlying <see cref="T:System.Xml.XmlWriter" /> or <see cref="T:System.IO.TextWriter" />. Throws an exception if the current position of the XAML node stream is invalid for writing a value, or the writer is in a state where a value cannot be written.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 输入`value`可能`null`，它支持显式写出为 null 的序列化值。 此行为使用<xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=nameWithType>与定义<xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A>输入，然后立即调用<xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The current position of the XAML node stream is not valid for writing a value.</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">The XAML writer state does not support the writing of a value node.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> specifies a value that is not null or a string.</exception>
      </Docs>
    </Member>
  </Members>
</Type>