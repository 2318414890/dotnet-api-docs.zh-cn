<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlXmlWriter.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54386495bae40713632b22d0af871e9adf9f3d979.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4386495bae40713632b22d0af871e9adf9f3d979</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlXmlWriter">
          <source>Uses a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> support class to write a XAML node stream to a text or markup serialized form.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 支持类将 XAML 节点流写入文本或标记序列化形式。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>This class is typically used in serialization scenarios.</source>
          <target state="translated">此类通常用于序列化方案。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>How to Use XamlXmlWriter</source>
          <target state="translated">如何使用 XamlXmlWriter</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> API has several methods that write different types of XAML nodes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> API 具有多种方法用以编写不同类型的 XAML 节点。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Collectively, these are referred to in documentation as the <ph id="ph1">`Write`</ph> methods of a <ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph>.</source>
          <target state="translated">这些统称为文档中<ph id="ph1">`Write`</ph>方法<ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> uses several internal state classes to determine what to do when one of its <ph id="ph2">`Write`</ph> implementations is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> 使用多个内部状态类来确定要执行的操作时之一其<ph id="ph2">`Write`</ph>调用实现。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>A <ph id="ph1">`Write`</ph> call uses the states to determine whether the requested element, attribute, or value can be written, or whether an exception is thrown.</source>
          <target state="translated">A<ph id="ph1">`Write`</ph>调用使用状态来确定是否可以写入请求的元素、 特性或值，或是否会引发异常。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph> and the state of the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> current node position is on a value or within a member, an exception is thrown.</source>
          <target state="translated">例如，如果你调用<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>和状态<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>当前节点的位置是对值或成员中，将引发异常。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Typically, callers of the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> API should be aware of the type of the current XAML node that is coming from the XAML reader and the XAML node stream.</source>
          <target state="translated">通常情况下，调用方的<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>API 应注意到当前来自 XAML 读取器和 XAML 节点流的 XAML 节点的类型。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Based on this knowledge, callers should avoid calling <ph id="ph1">`Write`</ph> APIs that are not relevant to the current node type.</source>
          <target state="translated">基于此知识，调用方应避免调用<ph id="ph1">`Write`</ph>与当前的节点类型不相关的 Api。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>XAML Namespaces and XamlXmlWriter</source>
          <target state="translated">XAML 命名空间和 XamlXmlWriter</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>The XAML namespace writing behavior of <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> is complex and is not limited to explicit calls to <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;</ph>.</source>
          <target state="translated">XAML 命名空间编写行为<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>很复杂，不限于显式调用<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Instead, other <ph id="ph1">`Write`</ph> calls, such as <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph>, might require that the namespace declaration be written at particular points in the node structure.</source>
          <target state="translated">相反，其他<ph id="ph1">`Write`</ph>调用，如<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph>，可能需要在节点结构的特定点处编写的命名空间声明。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>The XAML writer either generates a prefix by its own logic, or uses information from the <ph id="ph1">&lt;xref:System.Xaml.INamespacePrefixLookup&gt;</ph> service to determine a preferred prefix.</source>
          <target state="translated">XAML 编写器根据自己的逻辑，会生成前缀或使用来自信息<ph id="ph1">&lt;xref:System.Xaml.INamespacePrefixLookup&gt;</ph>服务，以确定首选的前缀。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Also, explicit <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;</ph> calls might defer or might return nothing if the XAML namespace declaration is already applicable and declared elsewhere.</source>
          <target state="translated">此外，显式<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;</ph>调用可能会延迟，或可能会返回任何内容如果 XAML 命名空间声明已适用且声明在其他位置。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Write Method Exceptions</source>
          <target state="translated">编写方法异常</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Exceptions thrown by the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph><ph id="ph2">`Write`</ph> methods are typically either <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> or <ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>.</source>
          <target state="translated">引发的异常<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph><ph id="ph2">`Write`</ph>方法通常都是<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>或<ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> often indicates that a XAML reader passed an invalid node structure into the XAML node stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>通常表明 XAML 读取器，传递到 XAML 节点流中无效的节点结构。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>In this case the node structure is invalid for reasons that are not related to validation of a XAML schema or a XAML schema context.</source>
          <target state="translated">在这种情况下节点结构无效的原因，不相关的 XAML 架构或 XAML 架构上下文的验证。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Rather, the node stream is invalid in its basic form.</source>
          <target state="translated">相反，节点流是在其基本窗体中无效。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>For example, if a faulty XAML reader implementation generated a XAML node stream that contained two consecutive <ph id="ph1">`StartObject`</ph> nodes, the attempt to call the second <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph> would throw an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">例如，如果发生故障的 XAML 读取器实现生成 XAML 节点流包含两个连续<ph id="ph1">`StartObject`</ph>节点，尝试调用第二个<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph>会引发<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>All XAML writers would consider such an operation to be invalid.</source>
          <target state="translated">所有 XAML 编写器应都考虑此类操作无效。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Another example of an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is when XAML namespace information is unavailable through the XAML schema context that applies to the current node stream position.</source>
          <target state="translated">另一个示例<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>是 XAML 命名空间信息时通过适用于将当前节点流的位置的 XAML 架构上下文不可用。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph> indicates an exception where this particular XAML writer implementation chooses to throw an exception based on its intended functionality.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>表示此特定的 XAML 编写器实现引发异常根据其预期的功能而进行选择的其中一个异常。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph> can indicate specific cases where a <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> violates its own state or settings.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>可以指示特定用例其中<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>违反了其自己的状态或设置。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>For example, a <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph> might result from attempts to write XAML namespace information into a position that the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> and its serialization format do not support, or writing duplicate members when the instance's <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> forbid it.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>可能会导致因尝试写入到的位置的 XAML 命名空间信息的<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>，其序列化格式不支持或编写成员重复时实例的<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>禁止它。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlXmlWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source>The stream to write.</source>
          <target state="translated">要写入的流。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 编写器的 XAML 架构上下文。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a stream.</source>
          <target state="translated">从流中初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source><ph id="ph1">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemaContext" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that writes the output.</source>
          <target state="translated">写入输出的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 编写器的 XAML 架构上下文。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> basis.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 基础初始化 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
          <source><ph id="ph1">&lt;paramref name="textWriter" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="textWriter" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that writes the output.</source>
          <target state="translated">写入输出的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 编写器的 XAML 架构上下文。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> basis.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 基础初始化 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
          <source><ph id="ph1">&lt;paramref name="xmlWriter" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The stream to write.</source>
          <target state="translated">要写入的流。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 编写器的 XAML 架构上下文。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph>, which typically has specific non-default settings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph> 的实例，此实例通常具有特定的非默认设置。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a stream using a writer settings object.</source>
          <target state="translated">使用编写器设置对象从流中初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Do not change any values of the <ph id="ph1">`settings`</ph> object after the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> instance is constructed.</source>
          <target state="translated">不更改的任何值<ph id="ph1">`settings`</ph>对象后<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>构造实例。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> cannot update its internal settings based on settings values that are mutable at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> 无法更新其基于在运行时是可变的设置值的内部设置。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Settings should be provided for initialization only.</source>
          <target state="translated">应仅为初始化提供设置。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>You can merge settings from an active XAML writer by using one of the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</source>
          <target state="translated">你可以通过使用之一来合并从活动的 XAML 编写器设置<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>构造函数签名; 但是，你必须然后将这些设置应用到新的 XAML 编写器实例，而不是尝试调整现有的一个。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that writes the output.</source>
          <target state="translated">写入输出的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 编写器的 XAML 架构上下文。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph>, which typically has specific non-default settings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph> 的实例，此实例通常具有特定的非默认设置。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> basis using a settings object.</source>
          <target state="translated">使用设置对象从 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 基础初始化 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Do not change any values of the <ph id="ph1">`settings`</ph> object after the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> instance is constructed.</source>
          <target state="translated">不更改的任何值<ph id="ph1">`settings`</ph>对象后<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>构造实例。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> cannot update its internal settings based on settings values that are mutable at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> 无法更新其基于在运行时是可变的设置值的内部设置。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Settings should be provided for initialization only.</source>
          <target state="translated">应仅为初始化提供设置。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>You can merge settings from an active XAML writer by using one of the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</source>
          <target state="translated">你可以通过使用之一来合并从活动的 XAML 编写器设置<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>构造函数签名; 但是，你必须然后将这些设置应用到新的 XAML 编写器实例，而不是尝试调整现有的一个。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="textWriter" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="textWriter" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that writes the output.</source>
          <target state="translated">写入输出的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 编写器的 XAML 架构上下文。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph>, which typically has specific non-default settings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph> 的实例，此实例通常具有特定的非默认设置。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> basis using a settings object.</source>
          <target state="translated">使用设置对象从 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 基础初始化 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Do not change any values of the <ph id="ph1">`settings`</ph> object after the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> instance is constructed.</source>
          <target state="translated">不更改的任何值<ph id="ph1">`settings`</ph>对象后<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>构造实例。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> cannot update its internal settings based on settings values that are mutable at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> 无法更新其基于在运行时是可变的设置值的内部设置。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Settings should be provided for initialization only.</source>
          <target state="translated">应仅为初始化提供设置。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>You can merge settings from an active XAML writer by using one of the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</source>
          <target state="translated">你可以通过使用之一来合并从活动的 XAML 编写器设置<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>构造函数签名; 但是，你必须然后将这些设置应用到新的 XAML 编写器实例，而不是尝试调整现有的一个。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="xmlWriter" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release the unmanaged resources; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">设置为 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 以释放非托管资源；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 占用的非托管资源，也可以选择释放托管资源。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
          <source>This implementation calls <ph id="ph1">`Close`</ph> on the underlying <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph> for cases where <ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A&gt;</ph> is <ph id="ph5">`true`</ph> in any supplied <ph id="ph6">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>.</source>
          <target state="translated">此实现中调用<ph id="ph1">`Close`</ph>基础<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>或<ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph>用例其中<ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A&gt;</ph>是<ph id="ph5">`true`</ph>在任何提供<ph id="ph6">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
          <source>Otherwise, it calls <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.Flush%2A&gt;</ph>.</source>
          <target state="translated">否则，它会调用<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.Flush%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.Flush">
          <source>Calls the <ph id="ph1">&lt;see langword="Flush" /&gt;</ph> method of the underlying <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, which writes anything that is currently in the buffer, and then closes the writer.</source>
          <target state="translated">调用基础 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 的 <ph id="ph1">&lt;see langword="Flush" /&gt;</ph> 方法，该方法将写出当前位于缓冲区中的任何内容，然后关闭编写器。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.Flush">
          <source>The <ph id="ph1">`Dispose`</ph> behavior for a <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> can be influenced by its writer settings, especially by <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>行为<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>可以受其编写器设置，尤其是通过<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlXmlWriter.SchemaContext">
          <source>Gets the XAML schema context that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> uses for processing.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 用于处理的 XAML 架构上下文。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.SchemaContext">
          <source>The XAML schema context that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> uses for XAML processing.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 用于 XAML 处理的 XAML 架构上下文。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.SchemaContext">
          <source>A XAML writer typically gets its XAML schema context from the associated XAML reader that is supplying the XAML node stream.</source>
          <target state="translated">XAML 编写器通常从关联的 XAML 读取器提供 XAML 节点流中获取其 XAML 架构上下文。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlXmlWriter.Settings">
          <source>Gets the writer settings that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> uses for XAML processing.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 用于 XAML 处理的编写器设置。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.Settings">
          <source>The writer settings that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> uses for XAML processing.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 用于 XAML 处理的编写器设置。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.Settings">
          <source>The value that you get from this property is a copy and not a reference.</source>
          <target state="translated">获取此属性的值是副本而不是引用。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.Settings">
          <source>Changing property values on the settings does not affect the active <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>.</source>
          <target state="translated">更改设置的属性值不影响活动<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndMember">
          <source>Writes a XAML end member node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">将 XAML 结束成员节点写入到基础 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndMember">
          <source>Throws an exception if the current position of the XAML node stream is not within a member, or if the internal writer state does not support writing to an end member.</source>
          <target state="translated">如果 XAML 节点流的当前位置不在成员内，或者如果内部编写器状态不支持写入结束成员，则引发异常。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndMember">
          <source>The current position of the XAML node stream is not within a member.</source>
          <target state="translated">XAML 节点流的当前位置不在成员内。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndMember">
          <source>The current writer state does not support writing an end member.</source>
          <target state="translated">当前编写器状态不支持写入结束成员。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>Writes a XAML end object node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">将 XAML 结束对象节点写入到基础 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>Throws an exception if the current position of the XAML node stream that is being processed is incompatible with writing an end object.</source>
          <target state="translated">如果所处理的 XAML 节点流的当前位置与写入结束对象不兼容，则引发异常。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>In markup and text representations of XAML, an end object is a closing tag.</source>
          <target state="translated">在 XAML 标记和文本形式，结束对象是结束标记。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>The most common case where <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown by <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph> is when the current XAML node stream position is still within a member, and <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph> is called.</source>
          <target state="translated">最常见情况<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>由引发<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>时当前的 XAML 节点流位置是否仍在一个成员和<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>The current position of the XAML node stream is not in a scope where an end member can be written.</source>
          <target state="translated">XAML 节点流的当前位置不在可以写入结束成员的范围内。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>The current writer state does not support writing an end object.</source>
          <target state="translated">当前编写器状态不支持写入结束对象。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteGetObject">
          <source>Writes an object for cases where the specified object is a default or implicit value of the property that is being written, instead of being specified as an object value in the input XAML node set.</source>
          <target state="translated">针对指定对象是所编写属性的默认值或隐式值的情况写出对象，而不是指定为输入 XAML 节点集中的对象值。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>The XAML namespace declaration to write.</source>
          <target state="translated">要写入的 XAML 命名空间声明。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>Writes namespace information to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">将命名空间信息写入到基础 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>May throw an exception for certain states; however, may instead defer writing the namespace information until the writer and the XAML node stream that is being processed reaches a position where a XAML namespace declaration can be inserted.</source>
          <target state="translated">对于某些状态可能会引发异常；但在编写器和所处理的 XAML 节点流到达可放置 XAML 命名空间声明的位置之前，可能会改为延迟写入命名空间信息。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source><ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source><ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> is not a valid XAML namespace declaration (has a null prefix or null identifier component).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> 不是有效的 XAML 命名空间声明（具有 null 前缀或 null 标识符组件）。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>The current writer state does not support writing a XAML namespace declaration.</source>
          <target state="translated">当前编写器状态不支持编写 XAML 命名空间声明。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The XAML member identifier for the member to write.</source>
          <target state="translated">要写入的成员的 XAML 成员标识符。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>Writes a XAML start member node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">将 XAML 起始成员节点写入到基础 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>Throws an exception if the current position of the XAML node stream is within another member, or if it is not in a scope or writer state where a start member can be written.</source>
          <target state="translated">如果 XAML 节点流的当前位置在另一个成员内，或者未处于可写入起始成员的范围或编写器状态中，则引发异常。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>Internal default logic in the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> first attempts to write the member in attribute form.</source>
          <target state="translated">中的内部默认逻辑<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>第一次尝试属性形式编写成员。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>If no attribute form is supported because the property or its value does not support text syntax, a property element is written instead.</source>
          <target state="translated">如果因为属性或其值不支持文本语法不支持任何特性形式，则转而写入的属性元素。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>If the property is a XAML content property, a <ph id="ph1">`GetObject`</ph> case, or an implicit property, other XAML forms might be written, such as inner text or an object child that has no intervening member.</source>
          <target state="translated">如果属性是 XAML 内容属性、<ph id="ph1">`GetObject`</ph>用例或隐式属性，可能写入其他 XAML 形式，如内部文本或无干扰的成员的对象子级。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The duplicate member exception is never thrown if <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A&gt;</ph> is <ph id="ph2">`true`</ph> in the <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> object that was used for settings for this <ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>.</source>
          <target state="translated">如果从不引发重复成员异常<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A&gt;</ph>是<ph id="ph2">`true`</ph>中<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>用于此设置的对象<ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;paramref name="property" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="property" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;paramref name="property" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="property" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The current position of the XAML node stream is invalid for writing a start member.</source>
          <target state="translated">XAML 节点流的当前位置无效，无法写入起始成员。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The writer state is not valid for writing a start member.</source>
          <target state="translated">编写器状态对于编写开始成员是无效的。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The XAML writer attempted to write a duplicate member.</source>
          <target state="translated">XAML 编写器尝试编写重复的成员。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>This exception may have a more precise inner exception.</source>
          <target state="translated">此异常可能具有更精确的内部异常。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> (XAML type identifier) for the object to write.</source>
          <target state="translated">要写入的对象的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>（XAML 类型标识符）。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>Writes a XAML start object node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">将 XAML 起始对象节点写入到基础 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>Throws an exception if the current position of the XAML node stream is not in a scope where a start object can be written, or if the writer is not in a state that can write a start object.</source>
          <target state="translated">如果 XAML 节点流的当前位置不在可写入起始对象的范围内，或者编写器未处于可写入起始对象的状态，则引发异常。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>The current position of the XAML node stream is not valid for writing a new start object.</source>
          <target state="translated">XAML 节点流的当前位置无效，无法写入新的开始对象。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>The state of the XAML writer is not valid for writing a new start object.</source>
          <target state="translated">XAML 编写器的状态无效，无法写入新的开始对象。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>The value information to write.</source>
          <target state="translated">要写入的值信息。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>Writes a XAML value node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">将 XAML 值节点写入到基础 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>Throws an exception if the current position of the XAML node stream is invalid for writing a value, or the writer is in a state where a value cannot be written.</source>
          <target state="translated">如果 XAML 节点流的当前位置对于写入值操作无效，或者编写器处于无法写入值的状态，则引发异常。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>The input <ph id="ph1">`value`</ph> may be <ph id="ph2">`null`</ph>, which supports explicitly writing out null as a serialized value.</source>
          <target state="translated">输入<ph id="ph1">`value`</ph>可能<ph id="ph2">`null`</ph>，它支持显式写出为 null 的序列化值。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>This behavior uses the <ph id="ph1">&lt;xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=nameWithType&gt;</ph> definition as <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph> input and then immediately calls <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>.</source>
          <target state="translated">此行为使用<ph id="ph1">&lt;xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=nameWithType&gt;</ph>与定义<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph>输入，然后立即调用<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>The current position of the XAML node stream is not valid for writing a value.</source>
          <target state="translated">XAML 节点流的当前位置无效，无法写入值。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>The XAML writer state does not support the writing of a value node.</source>
          <target state="translated">XAML 编写器状态不支持对值节点的写入。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> specifies a value that is not null or a string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 指定的值不为 null，也不为字符串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>