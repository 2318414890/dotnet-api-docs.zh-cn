<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlServices.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59e1f1d48af20e3873a75e26dc3e1e7ba760293b7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e1f1d48af20e3873a75e26dc3e1e7ba760293b7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlServices">
          <source>Provides higher-level services (static methods) for the common XAML tasks of reading XAML and writing an object graph; or reading an object graph and writing XAML file output for serialization purposes.</source>
          <target state="translated">提供适用于常见 XAML 任务（读取 XAML 和写入对象图，或者读取对象图并为序列化目的而写入 XAML 文件输出）的更高级别服务（静态方法）。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlServices">
          <source>The modes of the <ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> class that are used in the most common XAML reading and writing scenarios rely on creating instances of XAML readers and XAML writers.</source>
          <target state="translated">模式<ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph>在读取和写入方案依赖于创建的 XAML 读取器和 XAML 编写器实例的最常见 XAML 中使用的类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlServices">
          <source>These readers and writers are specialized but internal implementations of public classes, such as <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlXmlReader&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</source>
          <target state="translated">这些读取器和编写器是公共类的专用的但内部实现，如<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>， <ph id="ph2">&lt;xref:System.Xaml.XamlXmlReader&gt;</ph>，和<ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlServices">
          <source>To use <ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> for most scenarios, you can rely on the default internal implementations to obtain the results that you want.</source>
          <target state="translated">若要使用<ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph>大多数情况下，你可以依赖于默认的内部实现来获得所需的结果。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlServices">
          <source>For more specialized scenarios, you might define readers and writers yourself, and then pass them as arguments for overloads of the <ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> methods.</source>
          <target state="translated">对于专用化程度的方案，你可能会定义读取器和编写您自己，，并将其作为自变量的重载<ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlServices">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> is not the recommended XAML reading or XAML writing API set if you are processing WPF-defined types, or types based on WPF.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> 不建议的 XAML 读取或 XAML 编写 API 集如果正在处理 WPF 定义的类型或基于 WPF 的类型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlServices">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> usage, use <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph> for reading or loading XAML (or BAML); and <ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph> for writing back XAML.</source>
          <target state="translated">有关<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>用法，使用<ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph>以进行读取或加载 XAML （或 BAML）; 和<ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph>为写回 XAML。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlServices">
          <source>These classes use .NET Framework XAML Services APIs and the XAML readers and XAML writers internally in their implementation; however, they also provide support and specialized XAML schema context for WPF-specific concepts, such as optimizations for dependency properties and WPF known types.</source>
          <target state="translated">这些类.NET Framework XAML 服务 Api 的 XAML 读取器和 XAML 编写器在内部使用其实现;但是，它们还提供支持和专用化的 XAML 架构上下文有关特定于 WPF 的概念，如依赖项属性和已知类型的 WPF 的优化。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlServices">
          <source>Loads source for a XAML reader and writes its output as an object graph.</source>
          <target state="translated">加载 XAML 读取器的源，并将其输出写为对象关系图。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>The stream to load as input.</source>
          <target state="translated">要作为输入加载的流。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>Loads a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> source for a XAML reader and writes its output as an object graph.</source>
          <target state="translated">加载 XAML 读取器的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 源，并将其输出写为对象关系图。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>The object graph that is written as output.</source>
          <target state="translated">写为输出的对象关系图。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>Different signatures for the <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29&gt;</ph> method specify different types of input for the source XAML.</source>
          <target state="translated">有关不同签名<ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29&gt;</ph>方法指定不同类型的源 XAML 输入。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29&gt;</ph> internal implementation first creates an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> by calling <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%28System.IO.Stream%29&gt;</ph> and then creates a new instance of a specialized <ph id="ph4">&lt;xref:System.Xaml.XamlReader&gt;</ph> that processes the input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29&gt;</ph>内部实现首先创建<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>通过调用<ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%28System.IO.Stream%29&gt;</ph>，然后创建一个专用的新实例<ph id="ph4">&lt;xref:System.Xaml.XamlReader&gt;</ph>，用于处理输入。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>In order for the <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29&gt;</ph> call to successfully create an object graph, the following must be true:</source>
          <target state="translated">为了使<ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29&gt;</ph>调用已成功创建对象图，必须满足以下：</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>The source is well-formed and valid XML.</source>
          <target state="translated">源是格式正确且有效的 XML。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>The source is valid XAML at the language level.</source>
          <target state="translated">源是有效的 XAML 语言级别。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>The XAML types that are specified in the source XAML must resolve to backing types in the relevant XAML namespaces.</source>
          <target state="translated">在源中指定的 XAML 类型 XAML 必须解析为相关的 XAML 命名空间中的后备类型中。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>For example, XAML types for WPF namespaces can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or available in the run time; and so on.</source>
          <target state="translated">例如，可以对 WPF 命名空间的 XAML 类型解析为 WPF XAML 命名空间中 XAML; 指定WPF 的程序集必须包含在项目也可以在运行时;等等。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> is not the recommended XAML reading or XAML writing API set if you are processing <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> types, or types based on <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> 不是建议的 XAML 读取或 XAML 编写 API 设置如果正在处理<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>类型或类型基于<ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> usage, use <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph> for reading or loading XAML; and <ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph> for writing back XAML.</source>
          <target state="translated">有关<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>用法，使用<ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph>以进行读取或加载 XAML; 和<ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph>为写回 XAML。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>These classes use <ph id="ph1">&lt;xref:System.Xaml&gt;</ph> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</source>
          <target state="translated">这些类使用<ph id="ph1">&lt;xref:System.Xaml&gt;</ph>Api 内部在其实现中; 但是，它们还提供支持的影响的 XAML 读取和写入，如的依赖项属性的优化的性质的特定于 WPF 的概念。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> to use as the basis for the created <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">要用作所创建 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 的基础的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
          <source>Creates a XAML reader from a <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, and returns an object graph.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 创建 XAML 读取器，并返回对象关系图。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
          <source>The object graph that is returned.</source>
          <target state="translated">返回的对象图。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
          <source>In order to return the object graph, the <ph id="ph1">`textReader`</ph> input should be constructed by using its relevant input.</source>
          <target state="translated">为了返回对象图中，<ph id="ph1">`textReader`</ph>输入应通过使用其相关输入构造。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
          <source>For example, it should pass a <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> that is constructed by using a valid XAML-as-string input for the <ph id="ph2">&lt;xref:System.IO.StringReader.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">例如，它应传递<ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>的构建方式是使用有效的 XAML 作为字符串输入<ph id="ph2">&lt;xref:System.IO.StringReader.%23ctor%28System.String%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
          <source><ph id="ph1">&lt;paramref name="textReader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="textReader" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>The file name to load and use as source.</source>
          <target state="translated">要加载并用作源的文件名。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>Loads a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> source for a XAML reader and returns an object graph.</source>
          <target state="translated">加载 XAML 读取器的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 源，并返回对象关系图。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>The object graph that is returned.</source>
          <target state="translated">返回的对象图。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>Different signatures for the <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%2A&gt;</ph> method specify different types of input for the source XAML.</source>
          <target state="translated">有关不同签名<ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%2A&gt;</ph>方法指定不同类型的源 XAML 输入。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%2A&gt;</ph> internal implementation first creates an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> by calling <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%28System.String%29&gt;</ph> and then creates a new instance of a specialized <ph id="ph4">&lt;xref:System.Xaml.XamlReader&gt;</ph> that processes the input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%2A&gt;</ph>内部实现首先创建<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>通过调用<ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%28System.String%29&gt;</ph>，然后创建一个专用的新实例<ph id="ph4">&lt;xref:System.Xaml.XamlReader&gt;</ph>，用于处理输入。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>In order for the <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.String%29&gt;</ph> call to successfully create an object graph, the following must be true:</source>
          <target state="translated">为了使<ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.String%29&gt;</ph>调用已成功创建对象图，必须满足以下：</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>The source is well-formed and valid XML.</source>
          <target state="translated">源是格式正确且有效的 XML。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>The source is valid XAML at the language level.</source>
          <target state="translated">源是有效的 XAML 语言级别。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>The XAML types that are specified in the source XAML must resolve to backing types in the relevant XAML namespaces.</source>
          <target state="translated">在源中指定的 XAML 类型 XAML 必须解析为相关的 XAML 命名空间中的后备类型中。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>For example, XAML types for WPF namespaces can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or be available in the run time; and so on.</source>
          <target state="translated">例如，可以对 WPF 命名空间的 XAML 类型解析为 WPF XAML 命名空间中 XAML; 指定WPF 的程序集必须包括在项目或可在运行时;等等。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> 输入为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
          <source>The XAML reader implementation to use as the reader for this <ph id="ph1">&lt;see langword="Load" /&gt;</ph> operation.</source>
          <target state="translated">要用作此 <ph id="ph1">&lt;see langword="Load" /&gt;</ph> 操作的读取器的 XAML 读取器实现。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
          <source>Loads a specific XAML reader implementation and returns an object graph.</source>
          <target state="translated">加载特定 XAML 读取器实现，并返回对象图。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
          <source>The object graph that is returned.</source>
          <target state="translated">返回的对象图。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
          <source>You should typically use this signature only in the following cases:</source>
          <target state="translated">仅在以下情况下，你通常应该使用此签名：</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
          <source>You defined your own implementation of a <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>.</source>
          <target state="translated">定义您自己的实现<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
          <source>You specified settings for a <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> that differ from the default settings.</source>
          <target state="translated">指定设置<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>不同的默认设置。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
          <source><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> 输入为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implementation to use as the reader for this <ph id="ph2">&lt;see langword="Load" /&gt;</ph> operation.</source>
          <target state="translated">要用作此 <ph id="ph2">&lt;see langword="Load" /&gt;</ph> 操作的读取器的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
          <source>Loads a specific XML reader implementation and returns an object graph.</source>
          <target state="translated">加载特定 XML 读取器实现，并返回对象图。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
          <source>The output object graph.</source>
          <target state="translated">输出对象关系图。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
          <source>You should typically use this signature only if you defined your own implementation of a <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">仅当你定义的实现，通常应使用此签名<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> 输入为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>The XAML string input to parse.</source>
          <target state="translated">要分析的 XAML 字符串输入。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>Reads XAML as string output and returns an object graph.</source>
          <target state="translated">以字符串输出形式读取 XAML，并返回对象图。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>The object graph that is returned.</source>
          <target state="translated">返回的对象图。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>In order for the <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Parse%2A&gt;</ph> call to successfully create an object tree, the following must be true:</source>
          <target state="translated">为了使<ph id="ph1">&lt;xref:System.Xaml.XamlServices.Parse%2A&gt;</ph>调用已成功创建的对象树，必须满足以下：</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>The <ph id="ph1">`xaml`</ph> input is well-formed and valid XML.</source>
          <target state="translated"><ph id="ph1">`xaml`</ph>输入的格式正确且有效的 XML。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>The <ph id="ph1">`xaml`</ph> input is valid XAML at the language level.</source>
          <target state="translated"><ph id="ph1">`xaml`</ph>输入是有效的 XAML 语言级别。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>The XAML types that are specified in the <ph id="ph1">`xaml`</ph> input must resolve to backing types in the relevant XAML namespaces.</source>
          <target state="translated">中指定的 XAML 类型<ph id="ph1">`xaml`</ph>输入必须解析为后备类型相关的 XAML 命名空间中。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>For example, XAML types for a WPF namespace can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or be available in the run time; and so on.</source>
          <target state="translated">例如，可以为 WPF 命名空间的 XAML 类型解析为 WPF XAML 命名空间中 XAML; 指定WPF 的程序集必须包括在项目或可在运行时;等等。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> is not the recommended XAML reading or XAML writing API set if you are processing <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> types, or types based on <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> 不是建议的 XAML 读取或 XAML 编写 API 设置如果正在处理<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>类型或类型基于<ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> usage, use <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph> for reading or loading XAML, and <ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph> for writing back XAML.</source>
          <target state="translated">有关<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>用法，使用<ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph>以进行读取或加载 XAML，和<ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph>为写回 XAML。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>These classes use <ph id="ph1">&lt;xref:System.Xaml&gt;</ph> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</source>
          <target state="translated">这些类使用<ph id="ph1">&lt;xref:System.Xaml&gt;</ph>Api 内部在其实现中; 但是，它们还提供支持的影响的 XAML 读取和写入，如的依赖项属性的优化的性质的特定于 WPF 的概念。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="xaml" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xaml" /&gt;</ph> 输入为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlServices">
          <source>Processes a provided object graph into a XAML node representation and then into an output format for serialization.</source>
          <target state="translated">将提供的对象图处理为 XAML 节点表示形式，然后再处理为输出格式以便进行序列化。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Object)">
          <source>The root of the object graph to process.</source>
          <target state="translated">要处理的对象关系图的根。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Object)">
          <source>Processes a provided object tree into a XAML node representation, and returns a string representation of the output XAML.</source>
          <target state="translated">将提供的对象树处理为 XAML 节点表示形式，并返回输出 XAML 的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Object)">
          <source>The XAML markup output as a string.</source>
          <target state="translated">字符串形式的 XAML 标记输出。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.Object)">
          <source>The output from this method is the <ph id="ph1">`ToString`</ph> result of an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> that is created by the method call.</source>
          <target state="translated">此方法的输出是<ph id="ph1">`ToString`</ph>结果<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>，它由方法调用创建。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.Object)">
          <source>That <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> is created by using the following settings: <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType&gt;</ph> is <ph id="ph3">`true`</ph>; and <ph id="ph4">&lt;xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType&gt;</ph> is <ph id="ph5">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>创建通过使用以下设置：<ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType&gt;</ph>是<ph id="ph3">`true`</ph>; 和<ph id="ph4">&lt;xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType&gt;</ph>是<ph id="ph5">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.Object)">
          <source>The returned string can be loaded as valid XML through the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method if you processed the string into a stream, or into a reader more specifically dedicated for XAML.</source>
          <target state="translated">返回的字符串可以作为有效的 XML 通过加载<ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法如果你处理字符串到流，或更具体地说就是专用的读取器针对的 XAML。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
          <source>The destination stream.</source>
          <target state="translated">目标流。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
          <source>The root of the object graph to process.</source>
          <target state="translated">要处理的对象关系图的根。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
          <source>Processes a provided object graph into a XAML node representation and then into an output stream for serialization.</source>
          <target state="translated">将提供的对象图处理为 XAML 节点表示形式，然后再处理为输出流以便进行序列化。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> is not the recommended XAML reading or XAML writing API set if you are processing <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> types, or types based on <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> 不是建议的 XAML 读取或 XAML 编写 API 设置如果正在处理<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>类型或类型基于<ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> usage, use <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph> for reading or loading XAML; and <ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph> for writing back XAML.</source>
          <target state="translated">有关<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>用法，使用<ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph>以进行读取或加载 XAML; 和<ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph>为写回 XAML。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
          <source>These classes use <ph id="ph1">&lt;xref:System.Xaml&gt;</ph> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</source>
          <target state="translated">这些类使用<ph id="ph1">&lt;xref:System.Xaml&gt;</ph>Api 内部在其实现中; 但是，它们还提供支持的影响的 XAML 读取和写入，如的依赖项属性的优化的性质的特定于 WPF 的概念。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 输入为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that writes the output.</source>
          <target state="translated">写入输出的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
          <source>The root of the object graph to process.</source>
          <target state="translated">要处理的对象关系图的根。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
          <source>Processes a provided object graph into a XAML node representation and then into an output that goes to the provided <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">将提供的对象图处理为 XAML 节点表示形式，然后处理为将进入所提供 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 的输出。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> 输入为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
          <source>The name and location of the file to write the output to.</source>
          <target state="translated">要将输出写入其中的文件的名称和位置。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
          <source>The root of the object graph to process.</source>
          <target state="translated">要处理的对象关系图的根。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
          <source>Processes a provided object graph into a XAML node representation and then writes it to an output file at a provided location.</source>
          <target state="translated">将提供的对象图处理为 XAML 节点表示形式，然后将其写入所提供位置的输出文件。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
          <source>The <ph id="ph1">`fileName`</ph> parameter value is used as the <ph id="ph2">`outputFileName`</ph> input for a call to <ph id="ph3">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph>, which creates a <ph id="ph4">&lt;xref:System.Xml.XmlWriter&gt;</ph> as part of the method call.</source>
          <target state="translated"><ph id="ph1">`fileName`</ph>参数值将用作<ph id="ph2">`outputFileName`</ph>调用的输入<ph id="ph3">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph>，这将创建<ph id="ph4">&lt;xref:System.Xml.XmlWriter&gt;</ph>作为方法调用的一部分。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> 是一个空字符串。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> implementation to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
          <source>The root of the object graph to process.</source>
          <target state="translated">要处理的对象关系图的根。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
          <source>Processes a provided object graph into a XAML node representation and then writes it to the provided XAML writer.</source>
          <target state="translated">将提供的对象图处理为 XAML 节点表示形式，然后将其写入提供的 XAML 编写器。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
          <source>You should typically use this signature only in the following cases:</source>
          <target state="translated">仅在以下情况下，你通常应该使用此签名：</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
          <source>You defined your own implementation of a <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph>.</source>
          <target state="translated">定义您自己的实现<ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
          <source>You specified settings for the <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> that differ from the default settings.</source>
          <target state="translated">指定设置<ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph>不同的默认设置。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> 输入为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> implementation to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
          <source>The root of the object graph to process.</source>
          <target state="translated">要处理的对象关系图的根。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
          <source>Processes a provided object graph into a XAML node representation and then writes it to the provided <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">将提供的对象图处理为 XAML 节点表示形式，然后将其写入提供的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> 输入为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlServices">
          <source>Connects a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> and a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> in order to use a common XAML node set intermediary.</source>
          <target state="translated">连接 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> 以便立即使用公共 XAML 节点集。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlServices">
          <source>Potentially transforms the content, depending on the types of readers and writers that are provided.</source>
          <target state="translated">可能会转换内容，具体情况视所提供的读取器和编写器的类型而定。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> implementation to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
          <source>Connects a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> and a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> to use a common XAML node set intermediary.</source>
          <target state="translated">连接 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> 以立即使用公共 XAML 节点集。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
          <source>Potentially transforms the content, depending on the types of readers and writers that are provided.</source>
          <target state="translated">可能会转换内容，具体情况视所提供的读取器和编写器的类型而定。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
          <source>This method is a wrapper around <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29&gt;</ph>, where <ph id="ph2">`closeWriter`</ph> is specified as <ph id="ph3">`true`</ph>.</source>
          <target state="translated">此方法是周围的包装器<ph id="ph1">&lt;xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29&gt;</ph>，其中<ph id="ph2">`closeWriter`</ph>指定为<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
          <source><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> or <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph> input is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph> 输入为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
          <source>The XAML schema context does not match between the provided <ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> and <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph>.</source>
          <target state="translated">XAML 架构上下文在提供的 <ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph> 之间不匹配。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> implementation to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to close the writer after the call is complete; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to leave the writer active at the last written position.</source>
          <target state="translated">设置为 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 以在调用完成之后关闭编写器；设置为 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 以使编写器在最后一个写入的位置保持活动状态。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source>Connects a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> and a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> to use a common XAML node set intermediary.</source>
          <target state="translated">连接 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> 以立即使用公共 XAML 节点集。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source>Potentially transforms the content, depending on the types of readers and writers that are provided.</source>
          <target state="translated">可能会转换内容，具体情况视所提供的读取器和编写器的类型而定。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source>Provides a parameter for specifying whether to close the writer after the call is completed.</source>
          <target state="translated">提供一个参数，指定是否在调用完成之后关闭编写器。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> or <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph> input is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph> 输入为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source>The XAML schema context does not match between the provided <ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> and <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph>.</source>
          <target state="translated">XAML 架构上下文在提供的 <ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph> 之间不匹配。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>