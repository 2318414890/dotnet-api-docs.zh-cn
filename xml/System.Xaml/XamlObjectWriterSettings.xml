<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlObjectWriterSettings.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a94fb89f28b3f761992da4505a75cc54c6b173a7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a94fb89f28b3f761992da4505a75cc54c6b173a7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Provides specific XAML writer settings for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</source>
          <target state="translated">为 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> 提供特定 XAML 编写器设置。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> can function within specified <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>可以函数中指定<ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Where settings are not specified, an instance of <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph> exists that has default values for a constructed <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, and this instance can be used in merges of settings for a derived class.</source>
          <target state="translated">未指定设置、 实例<ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>存在，其默认值为构造<ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>，和可以为派生类中的设置结合起来使用此实例。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source>The settings instance to copy.</source>
          <target state="translated">要复制的设置实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class that is based on the copy of an existing instance.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> 类的新实例，该类基于现有实例的副本。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>Gets or sets <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> permissions that the XAML writer observes.</source>
          <target state="translated">获取或设置 XAML 编写器遵守的 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 权限。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> permissions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 权限。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>This property indicates the expected access level for non-public members, which are accessed in partial trust through a partial-trust tolerant runtime.</source>
          <target state="translated">此属性指示的非公共成员，在部分信任容错运行时通过的部分信任环境中进行访问的预期的访问级别。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> phase of the object lifetime for each created object.</source>
          <target state="translated">获取或设置对回调的引用，该回调由 XAML 编写器在每个所创建对象的对象生存期的 <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> 阶段调用。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
          <source>A callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> phase of object lifetime.</source>
          <target state="translated">由 XAML 编写器在对象生存期的 <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> 阶段调用的回调。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> phase of the object lifetime for each created object.</source>
          <target state="translated">获取或设置对回调的引用，该回调由 XAML 编写器在每个所创建对象的对象生存期的 <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> 阶段调用。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
          <source>A callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> phase of object lifetime.</source>
          <target state="translated">由 XAML 编写器在对象生存期的 <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> 阶段调用的回调。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the post-member-write phase of the object lifetime for each created object.</source>
          <target state="translated">获取或设置对回调的引用，该回调由 XAML 编写器在每个所创建对象的对象生存期的成员写入后阶段调用。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
          <source>A callback that is invoked by the XAML writer at the post-member-write phase of object lifetime.</source>
          <target state="translated">由 XAML 编写器在对象生存期的成员写入后阶段调用的回调。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the pre-member-write phase of the object lifetime for each created object.</source>
          <target state="translated">获取或设置对回调的引用，该回调由 XAML 编写器在每个所创建对象的对象生存期的成员写入前阶段调用。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
          <source>A callback that is invoked by the XAML writer at the pre-member-write phase of object lifetime.</source>
          <target state="translated">由 XAML 编写器在对象生存期的成员写入前阶段调用的回调。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Gets or sets the XAML namescope to use for registering names from the XAML writer if <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，从 XAML 编写器中获取或设置要用于注册名称的 XAML 名称范围。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>The XAML namescope to use for registering names.</source>
          <target state="translated">要用于注册名称的 XAML 名称范围。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Specific contexts for a <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> might use an external XAML namescope.</source>
          <target state="translated">对于特定上下文<ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>可能使用外部的 XAML 名称范围。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>WPF Usage Notes</source>
          <target state="translated">WPF 用法说明</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>In the WPF XAML implementation, XAML writer operations that are initiated by <ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph> specify a separate XAML namescope.</source>
          <target state="translated">在 WPF XAML 实现中，由启动的 XAML 编写器操作<ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph>指定单独的 XAML 名称范围。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>In this WPF scenario, templates should not share a XAML namescope with the root of the XAML page that defines them.</source>
          <target state="translated">在此 WPF 方案中，模板不应共享 XAML 名称范围具有定义它们的 XAML 页的根。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Instead, they should process into a separate, designated XAML namescope.</source>
          <target state="translated">相反，它们应处理到单独的、 指定的 XAML 名称范围。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>Gets or sets a value that specifies whether the XAML writer should ignore (not call) <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> implementations on a <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> in type-converter situations.</source>
          <target state="translated">获取或设置一个值，该值指定 XAML 编写器是否应在类型转换器情形中忽略（不调用）<ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> 上的 <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the XAML writer ignores <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> implementations; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 XAML 编写器忽略 <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> 实现，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class and its <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> method are part of an overall design for type conversion in the CLR.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>类并将其<ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph>方法是在 CLR 中的类型转换的总体设计的一部分。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>In XAML systems, you can typically assume that type-converter input is identifiable by the XAML reader, and for purposes of input, is always a string.</source>
          <target state="translated">在 XAML 系统中，通常可以认为类型转换器输入识别 XAML 读取器，并用于输入，始终是一个字符串。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>If you set this property to <ph id="ph1">`true`</ph>, you enable a mode where this assumption is codified in the XAML object writer behavior.</source>
          <target state="translated">如果将此属性设置为<ph id="ph1">`true`</ph>，启用 XAML 对象编写器行为中修改此假设的模式。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>This mode supports a compatibility requirement for previous versions of WPF XAML.</source>
          <target state="translated">此模式支持 WPF XAML 的早期版本兼容性要求。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>Gets or sets a value that determines whether to disable a default <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> feature that runs type conversion on the <ph id="ph2">&lt;paramref name="K" /&gt;</ph> component of a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> before writing the object graph representation.</source>
          <target state="translated">获取或设置一个值，此值确定是否在写入对象图表示形式之前，禁用对 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> 的 <ph id="ph2">&lt;paramref name="K" /&gt;</ph> 组件运行类型转换这一默认 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> 功能。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="K" /&gt;</ph> type conversion for a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> object should be disabled.</source>
          <target state="translated">如果应禁用 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> 对象的 <ph id="ph2">&lt;paramref name="K" /&gt;</ph> 类型转换，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if performing <ph id="ph2">&lt;paramref name="K" /&gt;</ph> type conversion for a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> object applies.</source>
          <target state="translated">如果适合对 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> 对象执行 <ph id="ph2">&lt;paramref name="K" /&gt;</ph> 类型转换，则为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>For more information about the <ph id="ph1">`K`</ph> type conversion feature, see Remarks in <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</source>
          <target state="translated">有关详细信息<ph id="ph1">`K`</ph>类型转换功能，请参阅中的备注<ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source>Gets or sets a value that determines whether name registration should occur against the specified <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>.</source>
          <target state="translated">获取或设置一个值，该值确定是否应针对指定的 <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph> 进行名称注册。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if name registration should occur against the <ph id="ph2">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if name registration should occur into the parent XAML namescope.</source>
          <target state="translated">如果应针对 <ph id="ph2">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph> 进行名称注册，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果应在父 XAML 命名范围内进行名称注册，则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>Gets or sets a preexisting root object for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> operations.</source>
          <target state="translated">为 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> 操作获取或设置预先存在的根对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>A preexisting root object for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> operations.</source>
          <target state="translated">用于 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> 操作的预先存在的根对象。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>If you set this value, the root object instance is used as an implicit <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> call (with object input that is direct instead of coming from the reader) that precedes the first explicit node-write call by the <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</source>
          <target state="translated">如果设置此值时，根对象实例用作一种隐式<ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph>（具有对象是直接而不是来自读取器的输入） 的调用之前通过的第一个节点写显式调用<ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>Any error checking, such as verifying the XAML type of the provided root object, is deferred until that implicit <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> call, instead of being checked when you set this settings property.</source>
          <target state="translated">任何错误检查，例如验证提供的根对象的 XAML 类型将推迟，直到到隐式<ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph>调用，而不是要检查时将此设置属性的设置。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>Gets or sets a value that determines whether the XAML writer omits to check for the code path that checks for duplicate properties.</source>
          <target state="translated">获取或设置一个值，该值确定 XAML 编写器是否省略检查可查看重复属性存在与否的代码路径。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the duplicate property check should be omitted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果应省略重复属性检查，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>The specified code path checks the currently assigned properties and throws an exception if a duplicate property set of the named ambient property is attempted.</source>
          <target state="translated">指定的代码路径检查当前分配的属性，并尝试重复的属性集的命名的环境属性时引发异常。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> should omit to call <ph id="ph2">&lt;see langword="ProvideValue" /&gt;</ph> on a markup extension, which is relevant when the markup extension represents the root of an object graph.</source>
          <target state="translated">获取或设置一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> 是否应省略对标记扩展调用 <ph id="ph2">&lt;see langword="ProvideValue" /&gt;</ph> 的过程，当标记扩展表示对象图的根时，此过程有相关意义。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> should omit to call <ph id="ph3">&lt;see langword="ProvideValue" /&gt;</ph> on a markup extension; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> 应省略对标记扩展调用 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 的过程，则为 <ph id="ph3">&lt;see langword="ProvideValue" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>This setting is used when the <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> processes the root node (<ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph>, or members within the root node).</source>
          <target state="translated">使用此设置时<ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>处理根节点 (<ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph>，或在根节点内的成员)。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>This property is relevant for template and defer-load scenarios.</source>
          <target state="translated">此属性是与模板和延迟加载的方案。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>Used in the <ph id="ph1">&lt;see langword="BeginInitHandler" /&gt;</ph> in place of the actual <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>.</source>
          <target state="translated">用于在 <ph id="ph1">&lt;see langword="BeginInitHandler" /&gt;</ph> 中替代实际 <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> to be used in place of the actual <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>用于替代实际<ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>Used internally to provide the correct info in the handler, while keeping runtime behavior fully compatible.</source>
          <target state="translated">在内部用于提供正确信息，请参阅处理程序中，同时保持运行时行为完全兼容。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>Gets or sets the handler to use when the object writer calls into a CLR-implemented <ph id="ph1">&lt;see langword="SetValue" /&gt;</ph> for dependency properties.</source>
          <target state="translated">获取或设置要在对象编写器为依赖项属性调入 CLR 实现的 <ph id="ph1">&lt;see langword="SetValue" /&gt;</ph> 时使用的处理程序。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>A handler implementation that handles this case.</source>
          <target state="translated">一个处理此情况的处理程序实现。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>The event handler is based on the generic <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> delegate that uses the <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> event data.</source>
          <target state="translated">事件处理程序基于泛型<ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph>使用的委托<ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph>事件数据。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>