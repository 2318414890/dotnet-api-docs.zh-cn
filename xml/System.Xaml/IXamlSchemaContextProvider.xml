<Type Name="IXamlSchemaContextProvider" FullName="System.Xaml.IXamlSchemaContextProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e08b449d026bc73abc62389a26005c7f85d00173" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51934112" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXamlSchemaContextProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXamlSchemaContextProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IXamlSchemaContextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXamlSchemaContextProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXamlSchemaContextProvider" />
  <TypeSignature Language="F#" Value="type IXamlSchemaContextProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>表示一个服务，该服务为类型转换器和标记扩展提供 XAML 架构上下文信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.IXamlSchemaContextProvider>服务提供了一个属性， <xref:System.Xaml.IXamlSchemaContextProvider.SchemaContext%2A>。  
  
 使用<xref:System.Xaml.IXamlSchemaContextProvider>服务并将其<xref:System.Xaml.IXamlSchemaContextProvider.SchemaContext%2A>属性时需要活动 XAML 架构上下文从标记扩展或类型转换器的实现。 许多与 XAML 相关的操作，最值得注意的解析为对象图的创建，其后备类型的 XAML 类型依赖于具有可用的 XAML 架构上下文。 但是，对于许多方案，可以使用提供的特定框架的 XAML 架构上下文。 也可以使用由.NET Framework XAML 服务，它使用 CLR 和反射备份提供的默认 XAML 架构上下文，可以为任何 CLR 定义类型提供必要的 XAML 架构上下文。  
  
 <xref:System.Xaml.IXamlSchemaContextProvider>服务是主要适用于预计它支持的自定义 XAML 架构上下文时，可能会调用其值转换器实现的实现。 你是否能够获得服务的虚拟方法的入口点参数<xref:System.ComponentModel.TypeConverter>或<xref:System.Windows.Markup.MarkupExtension>报告服务上下文。 也可以改为直接从特定 XAML 读取器或 XAML 编写器的专用属性获取的架构上下文。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">类型转换器或 XAML 的标记扩展</related>
  </Docs>
  <Members>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IXamlSchemaContextProvider.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.IXamlSchemaContextProvider.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取服务上下文所报告的 <see cref="T:System.Xaml.XamlSchemaContext" />。</summary>
        <value>服务上下文所报告的 XAML 架构上下文。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用返回<xref:System.Xaml.XamlSchemaContext>操作，如获取程序集中的所有类型的列表或获取有关映射的程序集的具体信息。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.XamlSchemaContext" />
        <altmember cref="P:System.Xaml.XamlObjectWriter.SchemaContext" />
        <altmember cref="P:System.Xaml.XamlXmlReader.SchemaContext" />
      </Docs>
    </Member>
  </Members>
</Type>