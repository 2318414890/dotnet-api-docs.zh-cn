<Type Name="IXamlNameResolver" FullName="System.Xaml.IXamlNameResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="667f1314cf421526dbdde15bf44a215978170d3b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXamlNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXamlNameResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IXamlNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXamlNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXamlNameResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5157a-101">描述可返回 XAML 名称所指定对象的服务，或者返回推迟名称解析的标记。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5157a-101">Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution.</span>
      </span>
      <span data-ttu-id="5157a-102">该服务还可返回 XAML 名称范围中所有命名对象的可枚举集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5157a-102">The service can also return an enumerable set of all named objects that are in the XAML namescope.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5157a-103">此接口不用于外部实现的典型 XAML 方案，因为它是一项服务。</span><span class="sxs-lookup"><span data-stu-id="5157a-103">This interface is not intended for external implementation of typical XAML scenarios because it is a service.</span></span> <span data-ttu-id="5157a-104">此服务，可以标记扩展和 XAML 名称解析为其他对象相同的 XAML 源从它们时仍在 XAML 节点表示形式的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="5157a-104">This service enables markup extensions and type converters to resolve XAML names to other objects from the same XAML source while they are still in a XAML node representation.</span></span> <span data-ttu-id="5157a-105">服务可以用于解决任何机制来依赖于非线性访问周围的 XAML 生产的 XAML 名称的前向引用。</span><span class="sxs-lookup"><span data-stu-id="5157a-105">The service can be used to resolve forward references for any mechanism that relies on XAML names for nonlinear access to the surrounding XAML production.</span></span> <span data-ttu-id="5157a-106">有关详细信息，请参阅[类型转换器和 XAML 的标记扩展](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="5157a-106">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).</span></span>  
  
 <span data-ttu-id="5157a-107">类型转换器和标记扩展可以查询有关<xref:System.Xaml.IXamlNameResolver>作为上由 XAML 对象编写器，XAML 对象编写器调用值转换行为时提供的服务上下文的服务。</span><span class="sxs-lookup"><span data-stu-id="5157a-107">Type converters and markup extensions can query for <xref:System.Xaml.IXamlNameResolver> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="5157a-108">有关详细信息，请参阅[类型转换器和 XAML 的标记扩展](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)和[可供类型转换器和标记扩展的上下文服务](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)。</span><span class="sxs-lookup"><span data-stu-id="5157a-108">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="5157a-109">此服务公开一个 API，可以延迟名称解析。</span><span class="sxs-lookup"><span data-stu-id="5157a-109">This service exposes an API that can defer name resolution.</span></span> <span data-ttu-id="5157a-110">该服务实现的比喻是应存储，用来创建修正令牌在针对部分的名称-对象图的第一个过程中无法解析的名称。</span><span class="sxs-lookup"><span data-stu-id="5157a-110">The metaphor implemented by the service is that names that cannot be resolved in a first pass against a partial name-object graph should be stored and used to create the fixup token.</span></span> <span data-ttu-id="5157a-111">中的默认行为中，为在另一过程的另一个解决方法尝试提交所有此类名称。</span><span class="sxs-lookup"><span data-stu-id="5157a-111">In the default behavior, all such names are submitted for another resolution attempt on a second pass.</span></span> <span data-ttu-id="5157a-112">在第二步，整个名称对象图已完成，并且修正的所有标记都都能够解析。</span><span class="sxs-lookup"><span data-stu-id="5157a-112">On the second pass, the overall name-object graph is complete, and all the fixup tokens are able to resolve.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5157a-113">即使它们所允许的特定实现，在 XAML 中的前向引用不可避免地会对性能产生影响。</span><span class="sxs-lookup"><span data-stu-id="5157a-113">Even if they are permitted by a particular implementation, forward references in XAML inevitably have performance consequences.</span></span> <span data-ttu-id="5157a-114">生产质量 XAML 的最佳做法，避免尽可能的前向引用。</span><span class="sxs-lookup"><span data-stu-id="5157a-114">As a best practice for production-quality XAML, avoid forward references whenever possible.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <altmember cref="T:System.Windows.NameScope" />
  </Docs>
  <Members>
    <Member MemberName="GetAllNamesAndValuesInScope">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetAllNamesAndValuesInScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetAllNamesAndValuesInScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllNamesAndValuesInScope () As IEnumerable(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetAllNamesAndValuesInScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5157a-115">返回 XAML 名称范围中所有命名对象的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-115">Returns an enumerable set of all named objects in the XAML namescope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5157a-116">
            <see cref="T:System.Collections.Generic.KeyValuePair`2" /> 对象的可枚举集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-116">An enumerable set of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects.</span>
          </span>
          <span data-ttu-id="5157a-117">对于每个 <see cref="T:System.Collections.Generic.KeyValuePair`2" />，<see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> 组件为字符串，<see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> 组件为在 XAML 名称范围中使用 <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> 名称的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-117">For each <see cref="T:System.Collections.Generic.KeyValuePair`2" />, the <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> component is a string, and the <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> component is the object that uses the <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> name in the XAML namescope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFixupToken">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5157a-118">返回一个对象，该对象可针对生成前向引用的某些标记模式进行修正。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-118">Returns an object that can correct for certain markup patterns that produce forward references.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String)) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="names">
          <span data-ttu-id="5157a-119">可能转发引用的名称的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-119">A collection of names that are possible forward references.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5157a-120">返回一个对象，该对象可针对生成前向引用的某些标记模式进行修正。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-120">Returns an object that can correct for certain markup patterns that produce forward references.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5157a-121">一个为要稍后计算的查找行为提供标记的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-121">An object that provides a token for lookup behavior to be evaluated later.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5157a-122">现有内部服务提供程序可用于标记扩展的架构上下文和类型转换器可以实现此服务;但是，它们返回仅现有的 XAML 编写器的默认 XAML 架构上下文中工作可以处理的内部类型。</span><span class="sxs-lookup"><span data-stu-id="5157a-122">Existing internal service providers that are available in schema contexts for markup extensions and type converters can implement this service; however, they return an internal type that only the existing XAML writers that work under the default XAML schema context can process.</span></span>  
  
 <span data-ttu-id="5157a-123">当所有前向引用的名称解析时，调用用户代码以重新分析列表中的每个名称。</span><span class="sxs-lookup"><span data-stu-id="5157a-123">When all the forward referenced names are resolvable, the user code is called to reparse each name in the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names, bool canAssignDirectly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, bool canAssignDirectly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String), canAssignDirectly As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names, bool canAssignDirectly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="canAssignDirectly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="names">
          <span data-ttu-id="5157a-124">可能转发引用的名称的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-124">A collection of names that are possible forward references.</span>
          </span>
        </param>
        <param name="canAssignDirectly">
          <span data-ttu-id="5157a-125">如果为 <see langword="true" />，则立即将已解析的名称引用指派给目标属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-125">
              <see langword="true" /> to immediately assign the resolved name reference to the target property.</span>
          </span>
          <span data-ttu-id="5157a-126">如果为 <see langword="false" />，则调用用户代码进行重新分析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-126">
              <see langword="false" /> to call the user code for a reparse.</span>
          </span>
          <span data-ttu-id="5157a-127">默认行为是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-127">The default behavior is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5157a-128">返回一个对象，该对象可针对生成前向引用的某些标记模式进行修正。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-128">Returns an object that can correct for certain markup patterns that produce forward references.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5157a-129">一个为要稍后计算的查找行为提供标记的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-129">An object that provides a token for lookup behavior to be evaluated later.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5157a-130">现有的内部服务提供程序可用于标记扩展的架构上下文和类型转换器实现此服务;但是，它们返回仅可由工作的默认 XAML 架构上下文中的现有的 XAML 编写器处理的内部类型。</span><span class="sxs-lookup"><span data-stu-id="5157a-130">Existing internal service providers that are available in schema contexts for markup extensions and type converters implement this service; however, they return an internal type that can only be processed by the existing XAML writers that work under the default XAML schema context.</span></span>  
  
 <span data-ttu-id="5157a-131">如果`canAssignDirectly`是`false`，当所有正向的引用的名称都是可解析，用户代码调用以重新分析列表中的每个名称。</span><span class="sxs-lookup"><span data-stu-id="5157a-131">If `canAssignDirectly` is `false`, when all the forward referenced names are resolvable, the user code is called to reparse each name in the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixupTokenAvailable">
      <MemberSignature Language="C#" Value="public bool IsFixupTokenAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixupTokenAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixupTokenAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixupTokenAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5157a-132">获取一个值，该值确定是否可调用 <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />，以便将名称解析为前向解析的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-132">Gets a value that determines whether calling <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> is available in order to resolve a name into a token for forward resolution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5157a-133">如果提供了 <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> 作为可为前向解析返回有用标记的实现，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-133">
              <see langword="true" /> if <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> is available as an implementation that returns a useful token for forward resolution; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5157a-134">此属性返回`false`时<xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A>不返回令牌，因为<xref:System.Xaml.Schema.XamlValueConverter%601>现有令牌上的第二个过程中会涉及到。</span><span class="sxs-lookup"><span data-stu-id="5157a-134">This property returns `false` when <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> does not return a token because a <xref:System.Xaml.Schema.XamlValueConverter%601> is involved in the second pass on an existing token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNameScopeInitializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler OnNameScopeInitializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OnNameScopeInitializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Event OnNameScopeInitializationComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OnNameScopeInitializationComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5157a-135">在 XAML 处理器已向支持 XAML 名称范围注册了所有相关名称时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-135">Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5157a-136">从名称引用解析对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-136">Resolves an object from a name reference.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5157a-137">要解析的名称引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-137">The name reference to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5157a-138">从名称引用解析对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-138">Resolves an object from a name reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5157a-139">解析的对象；或者为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-139">The resolved object; or null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5157a-140">如果返回一个值为`null`，可能存在的前向引用。</span><span class="sxs-lookup"><span data-stu-id="5157a-140">If a value is returned as `null`, a forward reference might exist.</span></span> <span data-ttu-id="5157a-141">想要支持前向引用的实现可以使用`FixupToken`模式通过<xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A>和<xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A>Api。</span><span class="sxs-lookup"><span data-stu-id="5157a-141">Implementations that want to support forward references can use the `FixupToken` pattern through the <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> and <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> APIs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name, out bool isFullyInitialized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name, [out] bool&amp; isFullyInitialized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String, ByRef isFullyInitialized As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name, [Runtime::InteropServices::Out] bool % isFullyInitialized);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isFullyInitialized" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5157a-142">要解析的名称引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-142">The name reference to resolve.</span>
          </span>
        </param>
        <param name="isFullyInitialized">
          <span data-ttu-id="5157a-143">当此方法返回时，如果返回的对象在未解析引用上有任何依赖项，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-143">When this method returns, <see langword="true" /> if the returned object has any dependencies on unresolved references; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5157a-144">从名称引用解析对象，并提供一个跟踪值，该值报告是否为建立对象图而完全初始化对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-144">Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5157a-145">一个为要稍后计算的查找行为提供标记的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5157a-145">An object that provides a token for lookup behavior to be evaluated later.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>