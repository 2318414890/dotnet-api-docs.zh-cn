<Type Name="HttpRequestCacheLevel" FullName="System.Net.Cache.HttpRequestCacheLevel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91085a15958b74e9aa80e37c96eca1cfdd1eb172" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum HttpRequestCacheLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpRequestCacheLevel extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Cache.HttpRequestCacheLevel" />
  <TypeSignature Language="VB.NET" Value="Public Enum HttpRequestCacheLevel" />
  <TypeSignature Language="C++ CLI" Value="public enum class HttpRequestCacheLevel" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="e41fd-101">为使用超文本传输协议 (HTTP) 获取的资源指定缓存行为。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e41fd-101">Specifies caching behavior for resources obtained using the Hypertext Transfer protocol (HTTP).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e41fd-102">此枚举用于设置由指定的缓存级别<xref:System.Net.Cache.HttpRequestCachePolicy>对象。</span><span class="sxs-lookup"><span data-stu-id="e41fd-102">This enumeration is used to set the cache level specified by <xref:System.Net.Cache.HttpRequestCachePolicy> objects.</span></span>  
  
 <span data-ttu-id="e41fd-103">BypassCache 该值是在.NET Framework 附带的计算机配置文件中指定的默认缓存行为。</span><span class="sxs-lookup"><span data-stu-id="e41fd-103">This BypassCache value is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.</span></span> <span data-ttu-id="e41fd-104">在客户端和服务器之间没有项从缓存中取出、添加到缓存中或从缓存中移除。</span><span class="sxs-lookup"><span data-stu-id="e41fd-104">No entries are taken from caches, added to caches, or removed from caches between the client and server.</span></span>  
  
 <span data-ttu-id="e41fd-105"><xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=nameWithType>属性用于获取或设置的默认缓存策略<xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=nameWithType>实例。</span><span class="sxs-lookup"><span data-stu-id="e41fd-105">The <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=nameWithType> property is used to get or set the default cache policy for <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=nameWithType> instances.</span></span> <span data-ttu-id="e41fd-106"><xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType>属性用于获取或设置的默认缓存策略<xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType>实例。</span><span class="sxs-lookup"><span data-stu-id="e41fd-106">The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType> property is used to get or set the default cache policy for a <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType> instances.</span></span> <span data-ttu-id="e41fd-107"><xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType>属性用于获取或设置特定请求的缓存策略。</span><span class="sxs-lookup"><span data-stu-id="e41fd-107">The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType> property is used to get or set the cache policy for a specific request.</span></span>  
  
 <span data-ttu-id="e41fd-108">如果资源的响应流是检索，并且读取到流末尾，资源的副本是仅添加到缓存。</span><span class="sxs-lookup"><span data-stu-id="e41fd-108">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="e41fd-109">因此相同的资源的另一个请求可以使用缓存的副本，具体取决于此请求的默认缓存策略级别。</span><span class="sxs-lookup"><span data-stu-id="e41fd-109">So another request for the same resource could use a cached copy, depending on the default cache policy level for this request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e41fd-110">下面的代码示例将应用程序域的缓存策略设置为默认值。</span><span class="sxs-lookup"><span data-stu-id="e41fd-110">The following code example sets the application domain's caching policy to Default.</span></span>  
  
 [!code-cpp[NCLSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NCLSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
    <altmember cref="P:System.Net.WebRequest.CachePolicy" />
  </Docs>
  <Members>
    <Member MemberName="BypassCache">
      <MemberSignature Language="C#" Value="BypassCache" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.HttpRequestCacheLevel BypassCache = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.HttpRequestCacheLevel.BypassCache" />
      <MemberSignature Language="VB.NET" Value="BypassCache" />
      <MemberSignature Language="C++ CLI" Value="BypassCache" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e41fd-111">使用服务器满足请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-111">Satisfies a request by using the server.</span>
          </span>
          <span data-ttu-id="e41fd-112">在客户端和服务器之间没有项从缓存中取出、添加到缓存中或从缓存中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-112">No entries are taken from caches, added to caches, or removed from caches between the client and server.</span>
          </span>
          <span data-ttu-id="e41fd-113">在客户端和服务器之间没有项从缓存中取出、添加到缓存中或从缓存中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-113">No entries are taken from caches, added to caches, or removed from caches between the client and server.</span>
          </span>
          <span data-ttu-id="e41fd-114">这是 .NET Framework 附带的计算机配置文件中指定的默认缓存行为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-114">This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CacheIfAvailable">
      <MemberSignature Language="C#" Value="CacheIfAvailable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.HttpRequestCacheLevel CacheIfAvailable = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable" />
      <MemberSignature Language="VB.NET" Value="CacheIfAvailable" />
      <MemberSignature Language="C++ CLI" Value="CacheIfAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e41fd-115">如果资源可用，则从缓存满足资源请求；否则，将资源请求发送到服务器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-115">Satisfies a request for a resource from the cache if the resource is available; otherwise, sends a request for a resource to the server.</span>
          </span>
          <span data-ttu-id="e41fd-116">如果请求的项在客户端和服务器之间的任何缓存中可用，则可由中间缓存满足请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-116">If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CacheOnly">
      <MemberSignature Language="C#" Value="CacheOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.HttpRequestCacheLevel CacheOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.HttpRequestCacheLevel.CacheOnly" />
      <MemberSignature Language="VB.NET" Value="CacheOnly" />
      <MemberSignature Language="C++ CLI" Value="CacheOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e41fd-117">使用本地缓存资源满足请求；不发送对不在缓存中的项的请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-117">Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache.</span>
          </span>
          <span data-ttu-id="e41fd-118">当指定此缓存策略级别时，如果项不在客户端缓存中，则引发 <see cref="T:System.Net.WebException" /> 异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-118">When this cache policy level is specified, a <see cref="T:System.Net.WebException" /> exception is thrown if the item is not in the client cache.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CacheOrNextCacheOnly">
      <MemberSignature Language="C#" Value="CacheOrNextCacheOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.HttpRequestCacheLevel CacheOrNextCacheOnly = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly" />
      <MemberSignature Language="VB.NET" Value="CacheOrNextCacheOnly" />
      <MemberSignature Language="C++ CLI" Value="CacheOrNextCacheOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e41fd-119">从本地计算机的缓存或局域网上的远程缓存满足资源请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-119">Satisfies a request for a resource either from the local computer's cache or a remote cache on the local area network.</span>
          </span>
          <span data-ttu-id="e41fd-120">如果无法满足请求，则引发 <see cref="T:System.Net.WebException" /> 异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-120">If the request cannot be satisfied, a <see cref="T:System.Net.WebException" /> exception is thrown.</span>
          </span>
          <span data-ttu-id="e41fd-121">在 HTTP 缓存协议中，这是通过 <see langword="only-if-cached" /> 缓存控制指令实现的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-121">In the HTTP caching protocol, this is achieved using the <see langword="only-if-cached" /> cache control directive.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.HttpRequestCacheLevel Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.HttpRequestCacheLevel.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e41fd-122">通过使用资源的缓存副本或通过将资源请求发送到服务器来满足资源请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-122">Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server.</span>
          </span>
          <span data-ttu-id="e41fd-123">采取的操作取决于当前的缓存策略和缓存内容的生存期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-123">The action taken is determined by the current cache policy and the age of the content in the cache.</span>
          </span>
          <span data-ttu-id="e41fd-124">这是大多数应用程序应使用的缓存级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-124">This is the cache level that should be used by most applications.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NoCacheNoStore">
      <MemberSignature Language="C#" Value="NoCacheNoStore" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.HttpRequestCacheLevel NoCacheNoStore = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore" />
      <MemberSignature Language="VB.NET" Value="NoCacheNoStore" />
      <MemberSignature Language="C++ CLI" Value="NoCacheNoStore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e41fd-125">从不通过使用缓存中的资源来满足请求，也不缓存资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-125">Never satisfies a request by using resources from the cache and does not cache resources.</span>
          </span>
          <span data-ttu-id="e41fd-126">如果资源在本地缓存中，则会移除该资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-126">If the resource is present in the local cache, it is removed.</span>
          </span>
          <span data-ttu-id="e41fd-127">此策略级别指示中间缓存应移除资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-127">This policy level indicates to intermediate caches that they should remove the resource.</span>
          </span>
          <span data-ttu-id="e41fd-128">在 HTTP 缓存协议中，这是通过 no-cache 缓存控制指令实现的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-128">In the HTTP caching protocol, this is achieved using the no-cache cache control directive.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="Refresh" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.HttpRequestCacheLevel Refresh = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.HttpRequestCacheLevel.Refresh" />
      <MemberSignature Language="VB.NET" Value="Refresh" />
      <MemberSignature Language="C++ CLI" Value="Refresh" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e41fd-129">通过使用服务器或本地缓存以外的缓存来满足请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-129">Satisfies a request by using the server or a cache other than the local cache.</span>
          </span>
          <span data-ttu-id="e41fd-130">在请求可由中间缓存满足之前，该缓存必须通过服务器重新验证其缓存条目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-130">Before the request can be satisfied by an intermediate cache, that cache must revalidate its cached entry with the server.</span>
          </span>
          <span data-ttu-id="e41fd-131">在 HTTP 缓存协议中，这是通过 max-age = 0 缓存控制指令和 no-cache <see langword="Pragma" /> 标头实现的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-131">In the HTTP caching protocol, this is achieved using the max-age = 0 cache control directive and the no-cache <see langword="Pragma" /> header.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="Reload" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.HttpRequestCacheLevel Reload = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.HttpRequestCacheLevel.Reload" />
      <MemberSignature Language="VB.NET" Value="Reload" />
      <MemberSignature Language="C++ CLI" Value="Reload" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e41fd-132">使用服务器满足请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-132">Satisfies a request by using the server.</span>
          </span>
          <span data-ttu-id="e41fd-133">响应可能保存在缓存中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-133">The response might be saved in the cache.</span>
          </span>
          <span data-ttu-id="e41fd-134">在 HTTP 缓存协议中，这是通过 no-cache 缓存控制指令和 no-cache <see langword="Pragma" /> 标头实现的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-134">In the HTTP caching protocol, this is achieved using the no-cache cache control directive and the no-cache <see langword="Pragma" /> header.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Revalidate">
      <MemberSignature Language="C#" Value="Revalidate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Cache.HttpRequestCacheLevel Revalidate = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Cache.HttpRequestCacheLevel.Revalidate" />
      <MemberSignature Language="VB.NET" Value="Revalidate" />
      <MemberSignature Language="C++ CLI" Value="Revalidate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e41fd-135">将缓存中的资源副本与服务器上的副本进行比较。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-135">Compares the copy of the resource in the cache with the copy on the server.</span>
          </span>
          <span data-ttu-id="e41fd-136">如果服务器上的副本较新，则用它来满足请求并替换缓存中的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-136">If the copy on the server is newer, it is used to satisfy the request and replaces the copy in the cache.</span>
          </span>
          <span data-ttu-id="e41fd-137">如果缓存中的副本与服务器副本相同，则使用缓存副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-137">If the copy in the cache is the same as the server copy, the cached copy is used.</span>
          </span>
          <span data-ttu-id="e41fd-138">在 HTTP 缓存协议中，这是通过条件请求来实现的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e41fd-138">In the HTTP caching protocol, this is achieved using a conditional request.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>