<Type Name="XmlPreloadedResolver" FullName="System.Xml.Resolvers.XmlPreloadedResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f291c65df4515ec9392f75f7c6ceb2a20022781a" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52231858" /></Metadata><TypeSignature Language="C#" Value="public class XmlPreloadedResolver : System.Xml.XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlPreloadedResolver extends System.Xml.XmlResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Resolvers.XmlPreloadedResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlPreloadedResolver&#xA;Inherits XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlPreloadedResolver : System::Xml::XmlResolver" />
  <TypeSignature Language="F#" Value="type XmlPreloadedResolver = class&#xA;    inherit XmlResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="de208-101">表示类，其用于通过 DTD 或 XML 流预填充缓存。</span><span class="sxs-lookup"><span data-stu-id="de208-101">Represents a class that is used to prepopulate the cache with DTDs or XML streams.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de208-102"><xref:System.Xml.Resolvers.XmlPreloadedResolver>类型用作冲突解决程序时不需要或不可能实现到网络的自动调用。</span><span class="sxs-lookup"><span data-stu-id="de208-102">The <xref:System.Xml.Resolvers.XmlPreloadedResolver> type is used as a resolver when automatic calls to the network are not desired or are not possible.</span></span> <span data-ttu-id="de208-103">例如，此类型可用于加载缓存的外部 Dtd。</span><span class="sxs-lookup"><span data-stu-id="de208-103">For example, this type can be used for loading cached external DTDs.</span></span> <span data-ttu-id="de208-104">或者，可能会使用<xref:System.Xml.Resolvers.XmlPreloadedResolver>预加载在 XHTML 1.0 中定义的已知 Dtd。</span><span class="sxs-lookup"><span data-stu-id="de208-104">Or, you might use <xref:System.Xml.Resolvers.XmlPreloadedResolver> to preload well-known DTDs that are defined in XHTML 1.0.</span></span> <span data-ttu-id="de208-105">预加载已知 Dtd 不启动任何网络连接，因为这些 Dtd 已嵌入到 System.Xml.Utils 集中。</span><span class="sxs-lookup"><span data-stu-id="de208-105">Preloading well-known DTDs does not start any network connections because these DTDs are already embedded in the System.Xml.Utils assembly.</span></span> <span data-ttu-id="de208-106">目前，<xref:System.Xml.Resolvers.XmlPreloadedResolver>包括 XHTML 1.0 和 RSS 0.91 中定义的 Dtd。</span><span class="sxs-lookup"><span data-stu-id="de208-106">Currently, <xref:System.Xml.Resolvers.XmlPreloadedResolver> includes the DTDs that are defined in XHTML 1.0 and RSS 0.91.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="de208-107">初始化 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="de208-107">Initializes a new instance of the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlPreloadedResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlPreloadedResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de208-108">初始化 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="de208-108">Initializes a new instance of the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlPreloadedResolver (System.Xml.Resolvers.XmlKnownDtds preloadedDtds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Xml.Resolvers.XmlKnownDtds preloadedDtds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (preloadedDtds As XmlKnownDtds)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlPreloadedResolver(System::Xml::Resolvers::XmlKnownDtds preloadedDtds);" />
      <MemberSignature Language="F#" Value="new System.Xml.Resolvers.XmlPreloadedResolver : System.Xml.Resolvers.XmlKnownDtds -&gt; System.Xml.Resolvers.XmlPreloadedResolver" Usage="new System.Xml.Resolvers.XmlPreloadedResolver preloadedDtds" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="preloadedDtds" Type="System.Xml.Resolvers.XmlKnownDtds" />
      </Parameters>
      <Docs>
        <param name="preloadedDtds"><span data-ttu-id="de208-109">应该预填充到缓存中的已知 DTD。</span><span class="sxs-lookup"><span data-stu-id="de208-109">The well-known DTDs that should be prepopulated into the cache.</span></span></param>
        <summary><span data-ttu-id="de208-110">用指定的预加载已知 DTD 初始化 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="de208-110">Initializes a new instance of the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> class with the specified preloaded well-known DTDs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver fallbackResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fallbackResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlPreloadedResolver(System::Xml::XmlResolver ^ fallbackResolver);" />
      <MemberSignature Language="F#" Value="new System.Xml.Resolvers.XmlPreloadedResolver : System.Xml.XmlResolver -&gt; System.Xml.Resolvers.XmlPreloadedResolver" Usage="new System.Xml.Resolvers.XmlPreloadedResolver fallbackResolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fallbackResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="fallbackResolver"><span data-ttu-id="de208-111"><see langword="XmlResolver" />、<see langword="XmlXapResolver" /> 或您自己的冲突解决程序。</span><span class="sxs-lookup"><span data-stu-id="de208-111">The <see langword="XmlResolver" />, <see langword="XmlXapResolver" />, or your own resolver.</span></span></param>
        <summary><span data-ttu-id="de208-112">用指定的回退冲突解决程序初始化 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="de208-112">Initializes a new instance of the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> class with the specified fallback resolver.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver, System.Xml.Resolvers.XmlKnownDtds preloadedDtds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver fallbackResolver, valuetype System.Xml.Resolvers.XmlKnownDtds preloadedDtds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fallbackResolver As XmlResolver, preloadedDtds As XmlKnownDtds)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlPreloadedResolver(System::Xml::XmlResolver ^ fallbackResolver, System::Xml::Resolvers::XmlKnownDtds preloadedDtds);" />
      <MemberSignature Language="F#" Value="new System.Xml.Resolvers.XmlPreloadedResolver : System.Xml.XmlResolver * System.Xml.Resolvers.XmlKnownDtds -&gt; System.Xml.Resolvers.XmlPreloadedResolver" Usage="new System.Xml.Resolvers.XmlPreloadedResolver (fallbackResolver, preloadedDtds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fallbackResolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="preloadedDtds" Type="System.Xml.Resolvers.XmlKnownDtds" />
      </Parameters>
      <Docs>
        <param name="fallbackResolver"><span data-ttu-id="de208-113"><see langword="XmlResolver" />、<see langword="XmlXapResolver" /> 或您自己的冲突解决程序。</span><span class="sxs-lookup"><span data-stu-id="de208-113">The <see langword="XmlResolver" />, <see langword="XmlXapResolver" />, or your own resolver.</span></span></param>
        <param name="preloadedDtds"><span data-ttu-id="de208-114">应该预填充到缓存中的已知 DTD。</span><span class="sxs-lookup"><span data-stu-id="de208-114">The well-known DTDs that should be prepopulated into the cache.</span></span></param>
        <summary><span data-ttu-id="de208-115">用指定的回退冲突解决程序和预加载的已知 DTD 初始化 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="de208-115">Initializes a new instance of the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> class with the specified fallback resolver and preloaded well-known DTDs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver, System.Xml.Resolvers.XmlKnownDtds preloadedDtds, System.Collections.Generic.IEqualityComparer&lt;Uri&gt; uriComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver fallbackResolver, valuetype System.Xml.Resolvers.XmlKnownDtds preloadedDtds, class System.Collections.Generic.IEqualityComparer`1&lt;class System.Uri&gt; uriComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fallbackResolver As XmlResolver, preloadedDtds As XmlKnownDtds, uriComparer As IEqualityComparer(Of Uri))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlPreloadedResolver(System::Xml::XmlResolver ^ fallbackResolver, System::Xml::Resolvers::XmlKnownDtds preloadedDtds, System::Collections::Generic::IEqualityComparer&lt;Uri ^&gt; ^ uriComparer);" />
      <MemberSignature Language="F#" Value="new System.Xml.Resolvers.XmlPreloadedResolver : System.Xml.XmlResolver * System.Xml.Resolvers.XmlKnownDtds * System.Collections.Generic.IEqualityComparer&lt;Uri&gt; -&gt; System.Xml.Resolvers.XmlPreloadedResolver" Usage="new System.Xml.Resolvers.XmlPreloadedResolver (fallbackResolver, preloadedDtds, uriComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fallbackResolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="preloadedDtds" Type="System.Xml.Resolvers.XmlKnownDtds" />
        <Parameter Name="uriComparer" Type="System.Collections.Generic.IEqualityComparer&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="fallbackResolver"><span data-ttu-id="de208-116"><see langword="XmlResolver" />、<see langword="XmlXapResolver" /> 或您自己的冲突解决程序。</span><span class="sxs-lookup"><span data-stu-id="de208-116">The <see langword="XmlResolver" />, <see langword="XmlXapResolver" />, or your own resolver.</span></span></param>
        <param name="preloadedDtds"><span data-ttu-id="de208-117">应该预填充到缓存中的已知 DTD。</span><span class="sxs-lookup"><span data-stu-id="de208-117">The well-known DTDs that should be prepopulated into cache.</span></span></param>
        <param name="uriComparer"><span data-ttu-id="de208-118">在比较 URI 时要使用的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 泛型接口的实现。</span><span class="sxs-lookup"><span data-stu-id="de208-118">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when you compare URIs.</span></span></param>
        <summary><span data-ttu-id="de208-119">使用指定的回退解析程序、预加载的已知 DTD 以及 URI 相等比较器初始化 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="de208-119">Initializes a new instance of the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> class with the specified fallback resolver, preloaded well-known DTDs, and URI equality comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de208-120">如果你想要自定义 URI 比较，请使用此构造函数重载。</span><span class="sxs-lookup"><span data-stu-id="de208-120">Use this constructor overload if you want to customize URI comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="de208-121">向 <see cref="T:System.IO.Stream" /> 存储区中添加 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />、字节数组或包含预加载数据的字符串，并将其映射到 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-121">Adds a <see cref="T:System.IO.Stream" />, byte array, or string with preloaded data to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store and maps it to a URI.</span></span> <span data-ttu-id="de208-122">如果存储区中已包含相同 URI 的映射，将重写现有映射。</span><span class="sxs-lookup"><span data-stu-id="de208-122">If the store already contains a mapping for the same URI, the existing mapping is overridden.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Uri uri, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Uri uri, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Uri ^ uri, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : Uri * byte[] -&gt; unit" Usage="xmlPreloadedResolver.Add (uri, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="de208-123">当前添加到 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 存储区的数据的 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-123">The URI of the data that is being added to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store.</span></span></param>
        <param name="value"><span data-ttu-id="de208-124">具有与所提供 URI 相对应的数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="de208-124">A byte array with the data that corresponds to the provided URI.</span></span></param>
        <summary><span data-ttu-id="de208-125">向 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 存储区添加字节数组，并将其映射到 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-125">Adds a byte array to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store and maps it to a URI.</span></span> <span data-ttu-id="de208-126">如果存储区中已包含相同 URI 的映射，将重写现有映射。</span><span class="sxs-lookup"><span data-stu-id="de208-126">If the store already contains a mapping for the same URI, the existing mapping is overridden.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de208-127"><paramref name="uri" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de208-127"><paramref name="uri" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Uri uri, System.IO.Stream value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Uri uri, class System.IO.Stream value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Uri ^ uri, System::IO::Stream ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : Uri * System.IO.Stream -&gt; unit" Usage="xmlPreloadedResolver.Add (uri, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="value" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="de208-128">当前添加到 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 存储区的数据的 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-128">The URI of the data that is being added to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store.</span></span></param>
        <param name="value"><span data-ttu-id="de208-129">具有与所提供 URI 相对应的数据的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="de208-129">A <see cref="T:System.IO.Stream" /> with the data that corresponds to the provided URI.</span></span></param>
        <summary><span data-ttu-id="de208-130">添加 <see cref="T:System.IO.Stream" /> 到 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 存储区，并将其映射到 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-130">Adds a <see cref="T:System.IO.Stream" /> to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store and maps it to a URI.</span></span> <span data-ttu-id="de208-131">如果存储区中已包含相同 URI 的映射，将重写现有映射。</span><span class="sxs-lookup"><span data-stu-id="de208-131">If the store already contains a mapping for the same URI, the existing mapping is overridden.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de208-132"><paramref name="uri" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de208-132"><paramref name="uri" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Uri uri, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Uri uri, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Uri ^ uri, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : Uri * string -&gt; unit" Usage="xmlPreloadedResolver.Add (uri, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="de208-133">当前添加到 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 存储区的数据的 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-133">The URI of the data that is being added to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store.</span></span></param>
        <param name="value"><span data-ttu-id="de208-134">具有与所提供 URI 相对应的数据的 <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="de208-134">A <see langword="String" /> with the data that corresponds to the provided URI.</span></span></param>
        <summary><span data-ttu-id="de208-135">将包含预加载数据的字符串添加到 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />，存储并将它映射到一个 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-135">Adds a string with preloaded data to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store and maps it to a URI.</span></span> <span data-ttu-id="de208-136">如果存储区中已包含相同 URI 的映射，将重写现有映射。</span><span class="sxs-lookup"><span data-stu-id="de208-136">If the store already contains a mapping for the same URI, the existing mapping is overridden.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de208-137"><paramref name="uri" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de208-137"><paramref name="uri" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Uri uri, byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Uri uri, unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Uri ^ uri, cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.Add : Uri * byte[] * int * int -&gt; unit" Usage="xmlPreloadedResolver.Add (uri, value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="de208-138">当前添加到 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 存储区的数据的 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-138">The URI of the data that is being added to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store.</span></span></param>
        <param name="value"><span data-ttu-id="de208-139">具有与所提供 URI 相对应的数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="de208-139">A byte array with the data that corresponds to the provided URI.</span></span></param>
        <param name="offset"><span data-ttu-id="de208-140">提供的字节数组中数据开始位置处的偏移量。</span><span class="sxs-lookup"><span data-stu-id="de208-140">The offset in the provided byte array where the data starts.</span></span></param>
        <param name="count"><span data-ttu-id="de208-141">要从字节数组中读取的字节数，从提供的偏移量开始。</span><span class="sxs-lookup"><span data-stu-id="de208-141">The number of bytes to read from the byte array, starting at the provided offset.</span></span></param>
        <summary><span data-ttu-id="de208-142">向 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 存储区添加字节数组，并将其映射到 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-142">Adds a byte array to the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store and maps it to a URI.</span></span> <span data-ttu-id="de208-143">如果存储区中已包含相同 URI 的映射，将重写现有映射。</span><span class="sxs-lookup"><span data-stu-id="de208-143">If the store already contains a mapping for the same URI, the existing mapping is overridden.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de208-144"><paramref name="uri" /> 或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de208-144"><paramref name="uri" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="de208-145"><paramref name="offset" /> 或 <paramref name="count" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="de208-145"><paramref name="offset" /> or <paramref name="count" /> is less than 0.</span></span>  
  
<span data-ttu-id="de208-146">或</span><span class="sxs-lookup"><span data-stu-id="de208-146">-or-</span></span> 
<span data-ttu-id="de208-147"><paramref name="value" /> 的长度减去 <paramref name="offset" /> 小于 <paramref name="count." />。</span><span class="sxs-lookup"><span data-stu-id="de208-147">The length of the <paramref name="value" /> minus <paramref name="offset" /> is less than <paramref name="count." /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials" Usage="System.Xml.Resolvers.XmlPreloadedResolver.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="de208-148">设置用于对基础 <see cref="T:System.Net.WebRequest" /> 进行身份验证的凭据。</span><span class="sxs-lookup"><span data-stu-id="de208-148">Sets the credentials that are used to authenticate the underlying <see cref="T:System.Net.WebRequest" />.</span></span></summary>
        <value><span data-ttu-id="de208-149">用于对基础 Web 请求进行身份验证的凭据。</span><span class="sxs-lookup"><span data-stu-id="de208-149">The credentials that are used to authenticate the underlying web request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntity : Uri * string * Type -&gt; obj" Usage="xmlPreloadedResolver.GetEntity (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri"><span data-ttu-id="de208-150">从 <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> 返回的 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-150">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</span></span></param>
        <param name="role"><span data-ttu-id="de208-151">当解析 URI 时，.NET Framework for Silverlight 的当前版本不使用此参数。</span><span class="sxs-lookup"><span data-stu-id="de208-151">The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs.</span></span> <span data-ttu-id="de208-152">提供此参数是为了将来扩展使用。</span><span class="sxs-lookup"><span data-stu-id="de208-152">This parameter is provided for future extensibility purposes.</span></span> <span data-ttu-id="de208-153">例如，此参数可以映射到 xlink:role 并在其他方案中用作特定于实现的参数。</span><span class="sxs-lookup"><span data-stu-id="de208-153">For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.</span></span></param>
        <param name="ofObjectToReturn"><span data-ttu-id="de208-154">要返回的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="de208-154">The type of object to return.</span></span> <span data-ttu-id="de208-155">对于已作为 <see langword="String" /> 添加的 URI，<see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 支持 <see cref="T:System.IO.Stream" /> 对象和 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="de208-155">The <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> supports <see cref="T:System.IO.Stream" /> objects and <see cref="T:System.IO.TextReader" /> objects for URIs that were added as <see langword="String" />.</span></span> <span data-ttu-id="de208-156">如果冲突解决程序不支持请求的类型，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="de208-156">If the requested type is not supported by the resolver, an exception will be thrown.</span></span> <span data-ttu-id="de208-157">使用 <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> 方法可以确定此解析程序是否支持某个 <see langword="Type" />。</span><span class="sxs-lookup"><span data-stu-id="de208-157">Use the <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> method to determine whether a certain <see langword="Type" /> is supported by this resolver.</span></span></param>
        <summary><span data-ttu-id="de208-158">将 URI 映射到包含实际资源的对象。</span><span class="sxs-lookup"><span data-stu-id="de208-158">Maps a URI to an object that contains the actual resource.</span></span></summary>
        <returns><span data-ttu-id="de208-159"><see cref="T:System.IO.Stream" /> 或 <see cref="T:System.IO.TextReader" /> 对象对应的实际源。</span><span class="sxs-lookup"><span data-stu-id="de208-159">A <see cref="T:System.IO.Stream" /> or <see cref="T:System.IO.TextReader" /> object that corresponds to the actual source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de208-160"><xref:System.Xml.Resolvers.XmlPreloadedResolver>将首先尝试查找它的预加载数据存储区中的资源。</span><span class="sxs-lookup"><span data-stu-id="de208-160">The <xref:System.Xml.Resolvers.XmlPreloadedResolver> will first try to look up the resource in its store of preloaded data.</span></span> <span data-ttu-id="de208-161">如果它找不到它，它将调用回退冲突解决程序的`GetEntity`方法。</span><span class="sxs-lookup"><span data-stu-id="de208-161">If it cannot find it, it will call the fallback resolver's `GetEntity` method.</span></span> <span data-ttu-id="de208-162">如果没有回退冲突解决程序中未提供<xref:System.Xml.Resolvers.XmlPreloadedResolver>构造函数中，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="de208-162">If no fallback resolver was provided in the <xref:System.Xml.Resolvers.XmlPreloadedResolver> constructor, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de208-163"><paramref name="absoluteUri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de208-163"><paramref name="absoluteUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="de208-164">无法解析 <paramref name="absoluteUri" /> 中传递的 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-164">Cannot resolve URI passed in <paramref name="absoluteUri" />.</span></span>  
  
<span data-ttu-id="de208-165">或</span><span class="sxs-lookup"><span data-stu-id="de208-165">-or-</span></span> 
 <span data-ttu-id="de208-166"><paramref name="ofObjectToReturn" /> 不属于受支持的类型。</span><span class="sxs-lookup"><span data-stu-id="de208-166"><paramref name="ofObjectToReturn" /> is not of a supported type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlPreloadedResolver.GetEntityAsync (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri"><span data-ttu-id="de208-167">从 <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> 返回的 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-167">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</span></span></param>
        <param name="role"><span data-ttu-id="de208-168">当解析 URI 时，.NET Framework for Silverlight 的当前版本不使用此参数。</span><span class="sxs-lookup"><span data-stu-id="de208-168">The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs.</span></span> <span data-ttu-id="de208-169">提供此参数是为了将来扩展使用。</span><span class="sxs-lookup"><span data-stu-id="de208-169">This parameter is provided for future extensibility purposes.</span></span> <span data-ttu-id="de208-170">例如，此参数可以映射到 xlink:role 并在其他方案中用作特定于实现的参数。</span><span class="sxs-lookup"><span data-stu-id="de208-170">For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.</span></span></param>
        <param name="ofObjectToReturn"><span data-ttu-id="de208-171">要返回的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="de208-171">The type of object to return.</span></span> <span data-ttu-id="de208-172">对于已作为 <see langword="String" /> 添加的 URI，<see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 支持 <see cref="T:System.IO.Stream" /> 对象和 <see cref="T:System.IO.TextReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="de208-172">The <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> supports <see cref="T:System.IO.Stream" /> objects and <see cref="T:System.IO.TextReader" /> objects for URIs that were added as <see langword="String" />.</span></span> <span data-ttu-id="de208-173">如果冲突解决程序不支持请求的类型，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="de208-173">If the requested type is not supported by the resolver, an exception will be thrown.</span></span> <span data-ttu-id="de208-174">使用 <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> 方法可以确定此解析程序是否支持某个 <see langword="Type" />。</span><span class="sxs-lookup"><span data-stu-id="de208-174">Use the <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> method to determine whether a certain <see langword="Type" /> is supported by this resolver.</span></span></param>
        <summary><span data-ttu-id="de208-175">将 URI 异步映射到包含实际资源的对象。</span><span class="sxs-lookup"><span data-stu-id="de208-175">Asynchronously maps a URI to an object that contains the actual resource.</span></span></summary>
        <returns><span data-ttu-id="de208-176"><see cref="T:System.IO.Stream" /> 或 <see cref="T:System.IO.TextReader" /> 对象对应的实际源。</span><span class="sxs-lookup"><span data-stu-id="de208-176">A <see cref="T:System.IO.Stream" /> or <see cref="T:System.IO.TextReader" /> object that corresponds to the actual source.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreloadedUris">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Uri&gt; PreloadedUris { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; PreloadedUris" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreloadedUris As IEnumerable(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ PreloadedUris { System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreloadedUris : seq&lt;Uri&gt;" Usage="System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="de208-177">获取预加载 URI 的集合。</span><span class="sxs-lookup"><span data-stu-id="de208-177">Gets a collection of preloaded URIs.</span></span></summary>
        <value><span data-ttu-id="de208-178">预加载 URI 的集合。</span><span class="sxs-lookup"><span data-stu-id="de208-178">The collection of preloaded URIs.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.Remove : Uri -&gt; unit" Usage="xmlPreloadedResolver.Remove uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="de208-179">应从 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 存储区移除的数据的 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-179">The URI of the data that should be removed from the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> store.</span></span></param>
        <summary><span data-ttu-id="de208-180">从 <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> 中移除与 URI 相对应的数据。</span><span class="sxs-lookup"><span data-stu-id="de208-180">Removes the data that corresponds to the URI from the <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de208-181">如果数据不存在存储区中，将任何异常。</span><span class="sxs-lookup"><span data-stu-id="de208-181">No exception is thrown if the data does not exist in the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de208-182"><paramref name="uri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de208-182"><paramref name="uri" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public override Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="override this.ResolveUri : Uri * string -&gt; Uri" Usage="xmlPreloadedResolver.ResolveUri (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri"><span data-ttu-id="de208-183">用于解析相对 URI 的基 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-183">The base URI used to resolve the relative URI.</span></span></param>
        <param name="relativeUri"><span data-ttu-id="de208-184">要解析的 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-184">The URI to resolve.</span></span> <span data-ttu-id="de208-185">URI 可以是绝对的或相对的。</span><span class="sxs-lookup"><span data-stu-id="de208-185">The URI can be absolute or relative.</span></span> <span data-ttu-id="de208-186">如果是绝对的，此值有效地替换 <paramref name="baseUri" /> 值。</span><span class="sxs-lookup"><span data-stu-id="de208-186">If absolute, this value effectively replaces the <paramref name="baseUri" /> value.</span></span> <span data-ttu-id="de208-187">如果是相对的，它与 <paramref name="baseUri" /> 组合以构成绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-187">If relative, it combines with the <paramref name="baseUri" /> to make an absolute URI.</span></span></param>
        <summary><span data-ttu-id="de208-188">从基 URI 和相对 URI 解析绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-188">Resolves the absolute URI from the base and relative URIs.</span></span></summary>
        <returns><span data-ttu-id="de208-189">不能解析相对URI时表示绝对 URI 的 <see cref="T:System.Uri" /> 或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de208-189">The <see cref="T:System.Uri" /> representing the absolute URI or <see langword="null" /> if the relative URI cannot be resolved.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de208-190"><paramref name="uri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de208-190"><paramref name="uri" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsType">
      <MemberSignature Language="C#" Value="public override bool SupportsType (Uri absoluteUri, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool SupportsType(class System.Uri absoluteUri, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool SupportsType(Uri ^ absoluteUri, Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.SupportsType : Uri * Type -&gt; bool" Usage="xmlPreloadedResolver.SupportsType (absoluteUri, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri"><span data-ttu-id="de208-191">要检查的绝对 URI。</span><span class="sxs-lookup"><span data-stu-id="de208-191">The absolute URI to check.</span></span></param>
        <param name="type"><span data-ttu-id="de208-192">要返回的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="de208-192">The <see cref="T:System.Type" /> to return.</span></span></param>
        <summary><span data-ttu-id="de208-193">确定解析器是否支持其他的 <see cref="T:System.Type" /> 而不是仅仅支持 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="de208-193">Determines whether the resolver supports other <see cref="T:System.Type" />s than just <see cref="T:System.IO.Stream" />.</span></span></summary>
        <returns><span data-ttu-id="de208-194">如果 <see cref="T:System.Type" /> 受支持，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de208-194"><see langword="true" /> if the <see cref="T:System.Type" /> is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="de208-195"><paramref name="uri" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="de208-195"><paramref name="uri" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>