<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlPreloadedResolver.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ff174cb9ee7cd1fe20e10f54887ab4163da8e574.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff174cb9ee7cd1fe20e10f54887ab4163da8e574</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>Represents a class that is used to prepopulate the cache with DTDs or XML streams.</source>
          <target state="translated">表示类，其用于通过 DTD 或 XML 流预填充缓存。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> type is used as a resolver when automatic calls to the network are not desired or are not possible.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph>到网络的自动调用不需要或不可能时，使用类型为解析程序。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>For example, this type can be used for loading cached external DTDs.</source>
          <target state="translated">例如，此类型可以用于加载缓存的外部 Dtd。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>Or, you might use <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> to preload well-known DTDs that are defined in XHTML 1.0.</source>
          <target state="translated">或者，可以使用<ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph>预加载的已知在 XHTML 1.0 中定义的 Dtd。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>Preloading well-known DTDs does not start any network connections because these DTDs are already embedded in the System.Xml.Utils assembly.</source>
          <target state="translated">预加载的已知 Dtd 不启动任何网络连接，因为这些 Dtd 已嵌入到 System.Xml.Utils 集中。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>Currently, <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> includes the DTDs that are defined in XHTML 1.0 and RSS 0.91.</source>
          <target state="translated">目前，<ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph>包括 XHTML 1.0 和 RSS 0.91 中定义的 Dtd。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
          <source>The well-known DTDs that should be prepopulated into the cache.</source>
          <target state="translated">应该预填充到缓存中的已知 DTD。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> class with the specified preloaded well-known DTDs.</source>
          <target state="translated">用指定的预加载已知 DTD 初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>, <ph id="ph2">&lt;see langword="XmlXapResolver" /&gt;</ph>, or your own resolver.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>、<ph id="ph2">&lt;see langword="XmlXapResolver" /&gt;</ph> 或您自己的冲突解决程序。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> class with the specified fallback resolver.</source>
          <target state="translated">用指定的回退冲突解决程序初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
          <source>The <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>, <ph id="ph2">&lt;see langword="XmlXapResolver" /&gt;</ph>, or your own resolver.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>、<ph id="ph2">&lt;see langword="XmlXapResolver" /&gt;</ph> 或您自己的冲突解决程序。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
          <source>The well-known DTDs that should be prepopulated into the cache.</source>
          <target state="translated">应该预填充到缓存中的已知 DTD。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> class with the specified fallback resolver and preloaded well-known DTDs.</source>
          <target state="translated">用指定的回退冲突解决程序和预加载的已知 DTD 初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
          <source>The <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>, <ph id="ph2">&lt;see langword="XmlXapResolver" /&gt;</ph>, or your own resolver.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>、<ph id="ph2">&lt;see langword="XmlXapResolver" /&gt;</ph> 或您自己的冲突解决程序。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
          <source>The well-known DTDs that should be prepopulated into cache.</source>
          <target state="translated">应该预填充到缓存中的已知 DTD。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
          <source>The implementation of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> generic interface to use when you compare URIs.</source>
          <target state="translated">在比较 URI 时要使用的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> 泛型接口的实现。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> class with the specified fallback resolver, preloaded well-known DTDs, and URI equality comparer.</source>
          <target state="translated">使用指定的回退解析程序、预加载的已知 DTD 以及 URI 相等比较器初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
          <source>Use this constructor overload if you want to customize URI comparison.</source>
          <target state="translated">如果你想要自定义 URI 比较，请使用此构造函数重载。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, byte array, or string with preloaded data to the <ph id="ph2">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store and maps it to a URI.</source>
          <target state="translated">向 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 存储区中添加 <ph id="ph2">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph>、字节数组或包含预加载数据的字符串，并将其映射到 URI。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>If the store already contains a mapping for the same URI, the existing mapping is overridden.</source>
          <target state="translated">如果存储区中已包含相同 URI 的映射，将重写现有映射。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
          <source>The URI of the data that is being added to the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store.</source>
          <target state="translated">当前添加到 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 存储区的数据的 URI。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
          <source>A byte array with the data that corresponds to the provided URI.</source>
          <target state="translated">具有与所提供 URI 相对应的数据的字节数组。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
          <source>Adds a byte array to the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store and maps it to a URI.</source>
          <target state="translated">向 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 存储区添加字节数组，并将其映射到 URI。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
          <source>If the store already contains a mapping for the same URI, the existing mapping is overridden.</source>
          <target state="translated">如果存储区中已包含相同 URI 的映射，将重写现有映射。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
          <source>The URI of the data that is being added to the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store.</source>
          <target state="translated">当前添加到 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 存储区的数据的 URI。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> with the data that corresponds to the provided URI.</source>
          <target state="translated">具有与所提供 URI 相对应的数据的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store and maps it to a URI.</source>
          <target state="translated">添加 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 到 <ph id="ph2">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 存储区，并将其映射到 URI。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
          <source>If the store already contains a mapping for the same URI, the existing mapping is overridden.</source>
          <target state="translated">如果存储区中已包含相同 URI 的映射，将重写现有映射。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
          <source>The URI of the data that is being added to the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store.</source>
          <target state="translated">当前添加到 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 存储区的数据的 URI。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph> with the data that corresponds to the provided URI.</source>
          <target state="translated">具有与所提供 URI 相对应的数据的 <ph id="ph1">&lt;see langword="String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
          <source>Adds a string with preloaded data to the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store and maps it to a URI.</source>
          <target state="translated">将包含预加载数据的字符串添加到 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph>，存储并将它映射到一个 URI。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
          <source>If the store already contains a mapping for the same URI, the existing mapping is overridden.</source>
          <target state="translated">如果存储区中已包含相同 URI 的映射，将重写现有映射。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>The URI of the data that is being added to the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store.</source>
          <target state="translated">当前添加到 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 存储区的数据的 URI。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>A byte array with the data that corresponds to the provided URI.</source>
          <target state="translated">具有与所提供 URI 相对应的数据的字节数组。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>The offset in the provided byte array where the data starts.</source>
          <target state="translated">提供的字节数组中数据开始位置处的偏移量。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to read from the byte array, starting at the provided offset.</source>
          <target state="translated">要从字节数组中读取的字节数，从提供的偏移量开始。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>Adds a byte array to the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store and maps it to a URI.</source>
          <target state="translated">向 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 存储区添加字节数组，并将其映射到 URI。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>If the store already contains a mapping for the same URI, the existing mapping is overridden.</source>
          <target state="translated">如果存储区中已包含相同 URI 的映射，将重写现有映射。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小于 0。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>The length of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> minus <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="count." /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的长度减去 <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> 小于 <ph id="ph3">&lt;paramref name="count." /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials">
          <source>Sets the credentials that are used to authenticate the underlying <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated">设置用于对基础 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 进行身份验证的凭据。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials">
          <source>The credentials that are used to authenticate the underlying web request.</source>
          <target state="translated">用于对基础 Web 请求进行身份验证的凭据。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The URI returned from <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph> 返回的 URI。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs.</source>
          <target state="translated">当解析 URI 时，.NET Framework for Silverlight 的当前版本不使用此参数。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>This parameter is provided for future extensibility purposes.</source>
          <target state="translated">提供此参数是为了将来扩展使用。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.</source>
          <target state="translated">例如，此参数可以映射到 xlink:role 并在其他方案中用作特定于实现的参数。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The type of object to return.</source>
          <target state="translated">要返回的对象的类型。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> supports <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> objects and <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> objects for URIs that were added as <ph id="ph4">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated">对于已作为 <ph id="ph4">&lt;see langword="String" /&gt;</ph> 添加的 URI，<ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 支持 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象和 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>If the requested type is not supported by the resolver, an exception will be thrown.</source>
          <target state="translated">如果冲突解决程序不支持请求的类型，则引发异常。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /&gt;</ph> method to determine whether a certain <ph id="ph2">&lt;see langword="Type" /&gt;</ph> is supported by this resolver.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /&gt;</ph> 方法可以确定此解析程序是否支持某个 <ph id="ph2">&lt;see langword="Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Maps a URI to an object that contains the actual resource.</source>
          <target state="translated">将 URI 映射到包含实际资源的对象。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object that corresponds to the actual source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象对应的实际源。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> will first try to look up the resource in its store of preloaded data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph>将首先尝试查找预加载数据其存储区中的资源。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>If it cannot find it, it will call the fallback resolver's <ph id="ph1">`GetEntity`</ph> method.</source>
          <target state="translated">如果它找不到它，它将调用回退解析程序的<ph id="ph1">`GetEntity`</ph>方法。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>If no fallback resolver was provided in the <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> constructor, an exception is thrown.</source>
          <target state="translated">如果回退解析程序中未提供<ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph>构造函数，将引发异常。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Cannot resolve URI passed in <ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph>.</source>
          <target state="translated">无法解析 <ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph> 中传递的 URI。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="ofObjectToReturn" /&gt;</ph> is not of a supported type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ofObjectToReturn" /&gt;</ph> 不属于受支持的类型。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The URI returned from <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph> 返回的 URI。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs.</source>
          <target state="translated">当解析 URI 时，.NET Framework for Silverlight 的当前版本不使用此参数。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>This parameter is provided for future extensibility purposes.</source>
          <target state="translated">提供此参数是为了将来扩展使用。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.</source>
          <target state="translated">例如，此参数可以映射到 xlink:role 并在其他方案中用作特定于实现的参数。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The type of object to return.</source>
          <target state="translated">要返回的对象的类型。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> supports <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> objects and <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> objects for URIs that were added as <ph id="ph4">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated">对于已作为 <ph id="ph4">&lt;see langword="String" /&gt;</ph> 添加的 URI，<ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 支持 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象和 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>If the requested type is not supported by the resolver, an exception will be thrown.</source>
          <target state="translated">如果冲突解决程序不支持请求的类型，则引发异常。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /&gt;</ph> method to determine whether a certain <ph id="ph2">&lt;see langword="Type" /&gt;</ph> is supported by this resolver.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /&gt;</ph> 方法可以确定此解析程序是否支持某个 <ph id="ph2">&lt;see langword="Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>Asynchronously maps a URI to an object that contains the actual resource.</source>
          <target state="translated">将 URI 异步映射到包含实际资源的对象。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object that corresponds to the actual source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 对象对应的实际源。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
          <source>Gets a collection of preloaded URIs.</source>
          <target state="translated">获取预加载 URI 的集合。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
          <source>The collection of preloaded URIs.</source>
          <target state="translated">预加载 URI 的集合。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
          <source>The URI of the data that should be removed from the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store.</source>
          <target state="translated">应从 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 存储区移除的数据的 URI。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
          <source>Removes the data that corresponds to the URI from the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> 中移除与 URI 相对应的数据。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
          <source>No exception is thrown if the data does not exist in the store.</source>
          <target state="translated">在存储中不存在数据不是不引发任何异常。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source>The base URI used to resolve the relative URI.</source>
          <target state="translated">用于解析相对 URI 的基 URI。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source>The URI to resolve.</source>
          <target state="translated">要解析的 URI。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source>The URI can be absolute or relative.</source>
          <target state="translated">URI 可以是绝对的或相对的。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source>If absolute, this value effectively replaces the <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> value.</source>
          <target state="translated">如果是绝对的，此值将有效地替换 baseUri 值<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source>If relative, it combines with the <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> to make an absolute URI.</source>
          <target state="translated">如果是相对的，它将与 baseUri 组合以构成绝对 URI<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source>Resolves the absolute URI from the base and relative URIs.</source>
          <target state="translated">从基 URI 和相对 URI 解析绝对 URI。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> representing the absolute URI or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the relative URI cannot be resolved.</source>
          <target state="translated">不能解析相对URI时表示绝对 URI 的 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
          <source>The absolute URI to check.</source>
          <target state="translated">要检查的绝对 URI。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to return.</source>
          <target state="translated">要返回的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
          <source>Determines whether the resolver supports other <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>s than just <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">确定解析器是否支持其他的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 而不是仅仅支持 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is supported; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> 受支持，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>