<Type Name="PeerContact" FullName="System.Net.PeerToPeer.Collaboration.PeerContact">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0b136826a7ec09dcca30ebda84e56bed5c9224e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460991" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerContact : System.Net.PeerToPeer.Collaboration.Peer, IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerContact extends System.Net.PeerToPeer.Collaboration.Peer implements class System.IEquatable`1&lt;class System.Net.PeerToPeer.Collaboration.PeerContact&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerContact&#xA;Inherits Peer&#xA;Implements IEquatable(Of PeerContact), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerContact : System::Net::PeerToPeer::Collaboration::Peer, IEquatable&lt;System::Net::PeerToPeer::Collaboration::PeerContact ^&gt;, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.PeerToPeer.Collaboration.Peer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示用户已检索其扩展信息的对等方。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 联系人表示受信任的对等方。 A<xref:System.Net.PeerToPeer.Collaboration.PeerContact>对象必须为远程对等方创建或<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>"网络邻居"范围之外时，与远程对等协作的用户。 A<xref:System.Net.PeerToPeer.Collaboration.PeerContact>对象可以作为任一在远程计算机或用户的远程计算机上运行的应用程序存在。 此类的实例可以添加到<xref:System.Net.PeerToPeer.Collaboration.ContactManager>该页将的联系信息存储在持久的方式。  
  
 从应用程序邀请<xref:System.Net.PeerToPeer.Collaboration.PeerContact>进行身份验证和加密。  若要接受或拒绝的对等联系人邀请的用户界面对话框还指示邀请者是受信任。  
  
 璹綷<xref:System.Net.PeerToPeer.Collaboration.PeerContact>对象意味着远程对等方可以看到其已注册应用程序、 对象和状态信息。 璹綷<xref:System.Net.PeerToPeer.Collaboration.PeerContact>，调用方必须登录到对等协作基础结构通过<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>或签名中通过 Windows 用户界面。  所有其他操作不需要登录。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerContact (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerContact(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">与 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</param>
        <param name="streamingContext">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 相关联的序列化目标。</param>
        <summary>不为此类定义公共构造函数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此对象的实例可以获取从<xref:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact%2A><xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact%2A>或<xref:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ ApplicationChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>只要与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的应用程序发生更改，就会引发此事件。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Credentials As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Credentials { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例标识的对等方的 X509Certificate（公钥）。</summary>
        <value>由此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例标识的对等方的 X509Certificate（公钥）。 此属性的默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState.Unrestricted>。 当对等协作会话开始时，将创建此状态。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
        <altmember cref="N:System.Security.Permissions" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个字符串，该字符串表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的显示名称。</summary>
        <value>
          一个 <see cref="T:System.String" />，表示此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的显示名称。 除非显式指定，否则对于引用类型，所有属性的默认值均为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 显示名称可能用于区分中的联系人<xref:System.Net.PeerToPeer.Collaboration.ContactManager>实例在其中<xref:System.Net.PeerToPeer.Collaboration.PeerContact>可能有多个电子邮件地址，或是否存在具有相同的显示名称的多个对等节点。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          若要释放托管资源和非托管资源，则为 <see langword="True" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
        <summary>释放非托管资源，并（可选）释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象占用的托管资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Net.PeerToPeer.Collaboration.PeerContact>离开协作会话，是否不再需要某些对象。  如果此联系人必须与不是直接注册对等主机中的任何其他终结点进行合作，并且该主机期望继续与它们进行协作，主机必须注册这些终结点，在应用程序或其<xref:System.Net.PeerToPeer.Collaboration.ContactManager>之前释放此<xref:System.Net.PeerToPeer.Collaboration.PeerContact>对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmailAddress">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress EmailAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress EmailAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property EmailAddress As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ EmailAddress { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的电子邮件地址。</summary>
        <value>
          一个 <see cref="T:System.Net.Mail.MailAddress" /> 对象，它包含与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的电子邮件地址。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Net.Mail.MailAddress>对象用于表示邮件地址。  联系人管理器允许在一个实例内的多个电子邮件地址。 此属性的默认值为 `null`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>确定此 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 对象的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 是否与其他对象的名称等效。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回`true`如果指定<xref:System.Object>具有相同<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>与当前实例，否则为`false`。 此方法也返回`false`传递的参数是否`null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.Collaboration.PeerContact other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.Collaboration.PeerContact other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As PeerContact) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::PeerToPeer::Collaboration::PeerContact ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="other">要进行相等性测试的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。</param>
        <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 与指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例进行比较。</summary>
        <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例具有匹配的数据，则返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 规范化不会对字符串进行比较之前发生。  所有规范化应已都完成时或之前构造<xref:System.Net.PeerToPeer.Collaboration.PeerContact>对象。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已释放。</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例与指定对象进行比较。</param>
        <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例与指定对象进行比较。</summary>
        <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例具有匹配的数据，则返回 <see langword="true" />；否则返回 <see langword="false" />。 如果传递的参数为 <see langword="false" />，此方法也会返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可能与其他对象<xref:System.Net.PeerToPeer.Collaboration.PeerContact>对象包含对等的主机名，相对的对等名称，并从其他取消封装名称<xref:System.Net.PeerToPeer>对象。  
  
 规范化不会对字符串进行比较之前发生。  所有规范化应已都完成时或之前构造<xref:System.Net.PeerToPeer.Collaboration.PeerContact>对象。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已释放。</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (object objA, object objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(object objA, object objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (objA As Object, objB As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Object ^ objA, System::Object ^ objB);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objA">要比较的第一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</param>
        <param name="objB">要比较的第二个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</param>
        <summary>确定指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例是否可视为相等的实例。</summary>
        <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例具有匹配的数据，则返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这可以用于确定是否<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>正在同时使用两个不同的远程对等节点。  
  
 可能与其他对象<xref:System.Net.PeerToPeer.Collaboration.PeerContact>对象包含对等的主机名，相对的对等名称，并从其他取消封装名称<xref:System.Net.PeerToPeer>对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerContact FromXml (string peerContactXml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerContact FromXml(string peerContactXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromXml (peerContactXml As String) As PeerContact" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerContact ^ FromXml(System::String ^ peerContactXml);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContactXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerContactXml">用于重新构造 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的 XML 编码。</param>
        <summary>基于提供的 XML 数据创建一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。</summary>
        <returns>一个字符串，表示用于编写 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例的 XML 对象模型。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要传递应从获取参数的字符串<xref:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml%2A>。  
  
 此类用于简单的 XML 对象模型，以便在协作基础结构中, 使用，不要使用作为常规的 XML 对象模型的轻量实现。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">参数不能为 <see langword="null." />。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" /> 操作。  
  
-   参数不是有效的 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" /> 对象。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetApplications">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索远程对等方在本地缓存中注册的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此功能仅公开上<xref:System.Net.PeerToPeer.Collaboration.PeerContact>类。  上任何其他类型的对等出于安全原因未公开此功能。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications () As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索远程对等方在本地缓存中注册的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</summary>
        <returns>本地缓存中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />。 如果未找到与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的应用程序，则返回一个大小为零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果调用的对等方未订阅<xref:System.Net.PeerToPeer.Collaboration.PeerContact>关联的<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint><xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>必须在调用此方法之前调用方法。  
  
 虽然调用方并不需要登录到协作基础结构才能成功完成，此方法成功调用<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或之一<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必须已完成时调用方之前登录。  
  
 此功能仅公开上<xref:System.Net.PeerToPeer.Collaboration.PeerContact>类。  上任何其他类型的对等出于安全原因未公开此功能。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">-   调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。  
  
-   调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作。</exception>
        <block subset="none" type="usage">
          <para>调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications (applicationId As Guid) As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(Guid applicationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="applicationId">要检索的对等应用程序的 <see cref="T:System.Guid" />。</param>
        <summary>从本地缓存中获取具有指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 的 <see cref="T:System.Guid" /> 对象的集合。</summary>
        <returns>本地缓存中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />。 如果未找到具有指定 <paramref name="applicationId" /> 的任何应用程序，则返回一个大小为零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果调用的对等方未订阅<xref:System.Net.PeerToPeer.Collaboration.PeerContact>关联的<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint><xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>必须在调用此方法之前调用方法。  
  
 虽然调用方并不需要登录到协作基础结构才能成功完成，此方法成功调用<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或之一<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必须已完成时调用方之前登录。  
  
 此功能仅公开上<xref:System.Net.PeerToPeer.Collaboration.PeerContact>类。  上任何其他类型的对等出于安全原因未公开此功能。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">-   调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。  
  
-   调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作。</exception>
        <block subset="none" type="usage">
          <para>调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">包含与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的终结点信息。</param>
        <summary>获取与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</summary>
        <returns>与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 如果没有与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的应用程序，则返回一个大小为零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果调用的对等方未订阅<xref:System.Net.PeerToPeer.Collaboration.PeerContact>关联的<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint><xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>必须在调用此方法之前调用方法。  
  
 虽然调用方并不需要登录到协作基础结构才能成功完成，此方法成功调用<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或之一<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必须已完成时调用方之前登录。  
  
 此功能仅公开上<xref:System.Net.PeerToPeer.Collaboration.PeerContact>类。  上任何其他类型的对等出于安全原因未公开此功能。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">-   调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。  
  
-   调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作。</exception>
        <block subset="none" type="usage">
          <para>调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, Guid applicationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 关联的终结点。</param>
        <param name="applicationId">包含与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的应用程序信息。</param>
        <summary>获取与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</summary>
        <returns>与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象的集合。  
  
 如果未为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 找到由该 ID 标识的应用程序，或者终结点的 ID 为 <see langword="null" /> 或无效，则返回一个大小为零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果调用的对等方未订阅<xref:System.Net.PeerToPeer.Collaboration.PeerContact>关联的<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint><xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>必须在调用此方法之前调用方法。  
  
 虽然调用方并不需要登录到协作基础结构才能成功完成，此方法成功调用<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或之一<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必须已完成时调用方之前登录。  
  
 此功能仅公开上<xref:System.Net.PeerToPeer.Collaboration.PeerContact>类。  上任何其他类型的对等出于安全原因未公开此功能。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">-   调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。  
  
-   调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作。</exception>
        <block subset="none" type="usage">
          <para>调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例的哈希代码。</summary>
        <returns>32 位有符号整数哈希代码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此哈希代码值用于以编程方式比较此类型的实例。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已释放。</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Equals" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">保存与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象关联的序列化数据。</param>
        <param name="context">包含与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象关联的序列化流的目标。</param>
        <summary>使用序列化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 时所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生的类型必须调用<xref:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData%2A>基类型的方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjects">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从本地缓存中获取对等对象的集合。</summary>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">要从中检索对象的终结点。</param>
        <summary>获取由指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 注册并存储在本地缓存中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</summary>
        <returns>与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 如果没有与该终结点关联的应用程序，则返回一个大小为零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果调用的对等方未订阅<xref:System.Net.PeerToPeer.Collaboration.PeerContact>关联的<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint><xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>必须在调用此方法之前调用方法。  
  
 虽然调用方并不需要登录到协作基础结构才能成功完成，此方法成功调用<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或之一<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必须已完成时调用方之前登录。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">-   调用对等方未订阅与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。  
  
-   调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> 操作。</exception>
        <block subset="none" type="usage">
          <para>在中定义其他重载<see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />类而不是子类<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />和<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。  
  
 调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid objectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, Guid objectId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="objectId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">要从中检索对象的终结点。</param>
        <param name="objectId">要检索的 <see cref="T:System.Guid" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</param>
        <summary>获取指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 在由指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 标识的 <see cref="T:System.Guid" /> 中注册的对等对象的集合。</summary>
        <returns>与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 如果没有与该终结点关联的应用程序，则返回一个大小为零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果调用的对等方未订阅<xref:System.Net.PeerToPeer.Collaboration.PeerContact>关联的<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint><xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>必须在调用此方法之前调用方法。  
  
 虽然调用方并不需要登录到协作基础结构才能成功完成，此方法成功调用<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或之一<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必须已完成时调用方之前登录。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">-   调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。  
  
-   调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> 操作。</exception>
        <block subset="none" type="usage">
          <para>在中定义其他重载<see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />类而不是子类<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />和<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。  
  
 调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invite">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>发送加入由发送方发起的对等方协作活动的邀请。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用方不需要登录到<xref:System.Net.PeerToPeer.Collaboration>才能成功完成此方法的基础结构。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>从被邀请者不接受邀请协作被邀请者相同。 如果邀请发送到未安装应用程序的远程对等，将自动拒绝邀请。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invite () As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>发送加入由发送方发起的对等方协作的邀请。</summary>
        <returns>从收到该邀请的对等方发出的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用方不需要登录到<xref:System.Net.PeerToPeer.Collaboration>才能成功完成此方法的基础结构。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>从被邀请者不接受邀请协作被邀请者相同。 如果邀请发送到未安装应用程序的远程对等，将自动拒绝邀请。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已释放。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">不存在当前应用程序的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />。</exception>
        <block subset="none" type="usage">
          <para>调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">将收到邀请的终结点。</param>
        <summary>向特定终结点发送邀请，以使之加入与邀请发送方之间的对等方协作。</summary>
        <returns>从收到该邀请的对等终结点发出的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用方不需要登录到<xref:System.Net.PeerToPeer.Collaboration>才能成功完成此方法的基础结构。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>从被邀请者不接受邀请协作被邀请者相同。 如果邀请发送到未安装应用程序的远程对等，将自动拒绝邀请。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已释放。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" /> 操作。  
  
-   当前执行的应用程序未在对等方协作基础结构中注册。  
  
-   由 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> 对象指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 无效。</exception>
        <block subset="none" type="usage">
          <para>调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invite (applicationToInvite As PeerApplication, message As String, invitationData As Byte()) As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">要向其发送邀请的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</param>
        <param name="message">要与应用程序邀请一起发送到远程对等方的消息。</param>
        <param name="invitationData">与邀请关联的用户定义的数据 Blob。  其大小不能超过 16,384 字节。</param>
        <summary>发送加入由发送方发起的指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 的指定邀请。</summary>
        <returns>从收到该邀请的对等方发出的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用方不需要登录到<xref:System.Net.PeerToPeer.Collaboration>才能成功完成此方法的基础结构。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>从被邀请者不接受邀请协作被邀请者相同。 如果邀请发送到未安装应用程序的远程对等，将自动拒绝邀请。  
  
 调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState.Unrestricted>。 当对等协作会话开始时，将创建此状态。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 不能为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已释放。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">当前应用程序的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或为空。</exception>
        <block subset="none" type="usage">
          <para>调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">要向其发送邀请的终结点或远程对等方。</param>
        <param name="applicationToInvite">要为其发送邀请的应用程序。</param>
        <param name="message">要与应用程序邀请一起发送到远程对等方的消息。  消息的长度不能超过 255 个 Unicode 字符。</param>
        <param name="invitationData">与邀请关联的用户定义的数据 Blob。  其大小不能超过 16,384 字节。</param>
        <summary>向指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 发送指定的邀请，以使之加入由发送方发起的指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 应用程序。</summary>
        <returns>从收到该邀请的对等方发出的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用方不需要登录到<xref:System.Net.PeerToPeer.Collaboration>才能成功完成此方法的基础结构。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>从被邀请者不接受邀请协作被邀请者相同。 如果邀请发送到未安装应用程序的远程对等，将自动拒绝邀请。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="PeerEndPoint" /> 中的终结点不能为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象不能为空。  
  
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 和 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象不能为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已释放。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">当前应用程序的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或为空。</exception>
        <block subset="none" type="usage">
          <para>调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InviteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>为一个终结点开始一个异步邀请操作，以加入由邀请的发件人赞助的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 应用程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用方不需要登录到<xref:System.Net.PeerToPeer.Collaboration>才能成功完成此方法的基础结构。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>从被邀请者不接受邀请协作被邀请者相同。 如果邀请发送到未安装应用程序的远程对等，将自动拒绝邀请。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>在中定义其他重载<see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />类而不是子类<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />和<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。  
  
 调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InviteAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InviteAsync(System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">要传递给异步操作回调的用户定义的对象。 也用于标识取消的异步操作。 必须在正在进行的所有异步邀请操作中指定此参数且此参数具有唯一性。</param>
        <summary>为一个终结点开始一个异步邀请操作，以加入由邀请的发件人赞助的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 应用程序。 使用指定的 <see cref="T:System.Object" /> 标识邀请。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用方不需要登录到<xref:System.Net.PeerToPeer.Collaboration>才能成功完成此方法的基础结构。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>从被邀请者不接受邀请协作被邀请者相同。 如果邀请发送到未安装应用程序的远程对等，将自动拒绝邀请。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="UserToken" /> 不能为 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已释放。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   当前应用程序的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或为空。  
  
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 不能为 <see langword="null." /></exception>
        <block subset="none" type="usage">
          <para>在中定义其他重载<see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />类而不是子类<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />和<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。  
  
 调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">要向其发送邀请的终结点或远程对等方。</param>
        <param name="userToken">要传递给异步操作回调的用户定义的对象。 也用于标识取消的异步操作。 必须在正在进行的所有异步邀请操作中指定此参数且此参数具有唯一性。</param>
        <summary>为指定的对等终结点开始异步邀请操作，以加入由邀请的发件人赞助的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 应用程序。 使用指定的 <see cref="T:System.Object" /> 标识邀请。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用方不需要登录到<xref:System.Net.PeerToPeer.Collaboration>才能成功完成此方法的基础结构。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>从被邀请者不接受邀请协作被邀请者相同。 如果邀请发送到未安装应用程序的远程对等，将自动拒绝邀请。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" /> 不能为 <see langword="null." />  
  
-   <paramref name="peerEndPoint" /> 中的终结点不能为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peerEndPoint" /> 对象不能为 <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已释放。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">当前应用程序的 <see cref="T:System.Guid" /> 不存在或为空。</exception>
        <block subset="none" type="usage">
          <para>在中定义其他重载<see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />类而不是子类<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />和<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。  
  
 调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InviteAsync (applicationToInvite As PeerApplication, message As String, invitationData As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">要为其发送邀请的应用程序。</param>
        <param name="message">要与应用程序邀请一起发送到远程对等方的消息。  消息的长度不能超过 255 个 Unicode 字符。</param>
        <param name="invitationData">与邀请关联的用户定义的数据 Blob。  其大小不能超过 16,384 字节。</param>
        <param name="userToken">要传递给异步操作回调的用户定义的对象。 也用于标识取消的异步操作。 必须在正在进行的所有异步邀请操作中指定此参数且此参数具有唯一性。</param>
        <summary>为指定的对等终结点开始异步邀请操作，以加入由邀请的发件人赞助的指定协作 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用方不需要登录到<xref:System.Net.PeerToPeer.Collaboration>才能成功完成此方法的基础结构。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>从被邀请者不接受邀请协作被邀请者相同。 如果邀请发送到未安装应用程序的远程对等，将自动拒绝邀请。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="UserToken" /> 不能为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象不能为 <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已释放。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   当前应用程序的 <see cref="T:System.Guid" /> 不存在或为空。  
  
-   终结点集合为空或 <see langword="null." /></exception>
        <block subset="none" type="usage">
          <para>在中定义其他重载<see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />类而不是子类<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />和<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。  
  
 调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, byte[] invitationData, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, unsigned int8[] invitationData, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">要向其发送邀请的终结点或远程对等方。</param>
        <param name="message">要与应用程序邀请一起发送到远程对等方的消息。  消息的长度不能超过 255 个 Unicode 字符。</param>
        <param name="invitationData">与邀请关联的用户定义的数据 Blob。  其大小不能超过 16,384 字节。</param>
        <param name="applicationToInvite">要为其发送邀请的应用程序。</param>
        <param name="userToken">要传递给异步操作回调的用户定义的对象。 也用于标识取消的异步操作。 必须在正在进行的所有异步邀请操作中指定此参数且此参数具有唯一性。</param>
        <summary>为指定的 <paramref name="peerEndPoint" /> 开始一个异步邀请操作，以加入由邀请的发件人赞助的指定协作 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用方不需要登录到<xref:System.Net.PeerToPeer.Collaboration>才能成功完成此方法的基础结构。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>从被邀请者不接受邀请协作被邀请者相同。 如果邀请发送到未安装应用程序的远程对等，将自动拒绝邀请。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" /> 不能为 null。  
  
-   由 <paramref name="peerEndPoint" /> 指定的终结点不能为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 和 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象不能为 <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已释放。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">当前应用程序的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或为空。</exception>
        <block subset="none" type="usage">
          <para>在中定义其他重载<see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />类而不是子类<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />和<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。  
  
 调用此方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 当对等协作会话开始时，将创建此状态。</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="IsSubscribed">
      <MemberSignature Language="C#" Value="public bool IsSubscribed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubscribed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSubscribed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSubscribed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 是已订阅终结点，还是已取消对终结点的订阅。 此属性还会获取或设置另一个值，该值指定当前对等主机或宿主应用程序是已订阅此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />，还是已取消对它的订阅。</summary>
        <value>
          如果此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 已订阅此终结点，则为 <see langword="True" />；如果联系人尚未订阅或已取消订阅，则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在许多情况下，<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>不同时，作为对等主机。 对等主机都有一个实例内的<xref:System.Net.PeerToPeer.Collaboration.ContactManager>远程对等方，并且关系是它们已邀请对等进行协作。  终结点都有"Me"实例在其自己的联系人管理器和对等主机，但未指定关系。  
  
 如果对等主机处于<xref:System.Net.PeerToPeer.Collaboration.ContactManager>，并不适用于选择的对等联系人<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>，将其<xref:System.Net.PeerToPeer.Collaboration.SubscriptionType>阻止，而不是从主机联系人管理器中删除其项可以具有的值。  
  
 没有本地对等方、 远程对等节点、 对等主机和订阅之间的多对多关系。  订阅是每个用户，而不是每个进程，每个应用程序，或每个域。 因此，订阅与<xref:System.Net.PeerToPeer.Collaboration.PeerContact>对象是否为已订阅的联系人列表，并从中期望更新。  这些联系人要么已更新其自己的应用程序、 对象和状态信息，或它们已更新有关中的联系人信息<xref:System.Net.PeerToPeer.Collaboration.ContactManager>。  
  
 此属性始终返回`true`的对象是否<xref:System.Net.PeerToPeer.Collaboration.PeerContact>它表示本地计算机或"Me"联系人，因为联系人始终会订阅本身。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Nickname">
      <MemberSignature Language="C#" Value="public string Nickname { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Nickname" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
      <MemberSignature Language="VB.NET" Value="Public Property Nickname As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Nickname { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个字符串，该字符串表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的 <paramref name="Nickname" />。</summary>
        <value>
          一个 <see cref="T:System.String" />，表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的昵称。 此属性的默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以用于一个昵称<xref:System.Net.PeerToPeer.Collaboration.PeerContact>对象当有多个对等方，具有相同的显示名称。  协作会话还可以使用该别名来指定更大的协作工作中常用的远程对等节点。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="ObjectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ ObjectChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>只要与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 发生更改，就会发出此事件信号。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState.Unrestricted>。 当对等协作会话开始时，将创建此状态。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnApplicationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnApplicationChanged (System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApplicationChanged(class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnApplicationChanged (appChangedArgs As ApplicationChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnApplicationChanged(System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^ appChangedArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="appChangedArgs">
          <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /> 对象，要将其要传递给与 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> 事件关联的代理。</param>
        <summary>引发 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 启动、 注册或注销协作基础结构从应用程序时，将发生应用程序更改。  它们还出现时对等节点加入或离开协作会话或更改网络终结点位置。  对等作用域更改还可能会影响应用程序中的更改。  
  
 从此类继承的类可以重写此方法以在事件发生时执行其他任务。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在派生类中，一定要调用基类实现此方法，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectChanged (System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectChanged(class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectChanged (objChangedArgs As ObjectChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectChanged(System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^ objChangedArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="objChangedArgs">对象更改的类型，由 <see cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" /> 指定。</param>
        <summary>当远程对等添加、更新或删除 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 时将引发 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName="OnPresenceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPresenceChanged (System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPresenceChanged(class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPresenceChanged (presenceChangedArgs As PresenceChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPresenceChanged(System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^ presenceChangedArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presenceChangedArgs" Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="presenceChangedArgs">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" /> 对象，要将其要传递给与 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> 事件关联的代理。</param>
        <summary>当对等的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 发生更改时，引发 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 状态更改发生时从应用程序对等号、 应用程序在注册或注销从协作基础结构，或对等方从<xref:System.Net.PeerToPeer.Collaboration.PeerContact>或<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeCompleted">
      <MemberSignature Language="C#" Value="protected void OnSubscribeCompleted (System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSubscribeCompleted(class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSubscribeCompleted (e As SubscribeCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSubscribeCompleted(System::Net::PeerToPeer::Collaboration::SubscribeCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">与 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> 事件关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" /> 或 <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" /> 对象。</param>
        <summary>引发 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从此类继承的类可以重写此方法来执行其他任务时<xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted>事件发生。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生的类必须调用此方法的基类实现，以便已注册的委托对事件进行接收。</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PeerEndPoints">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PeerEndPoints As PeerEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ PeerEndPoints { System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
        <value>与此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 集合。 此属性的默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 是否<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>是一种本地对等方、 远程对等方，或对此实例所表示的对等联系人等主机与是否存在无关<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>任一终结点中<xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection>或<xref:System.Net.PeerToPeer.Collaboration.ContactManager>。  
  
   
  
## Examples  
 下面的代码示例演示的正确用法<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints%2A>属性：  
  
 [!code-csharp[NCLPNRPContacts#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 <see cref="T:System.Net.PeerToPeer.PeerName" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
        <value>
          一个 <see cref="T:System.String" />，表示 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。 除非显式指定，否则对于引用类型，所有属性的默认值均为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 没有任何两个联系人的通讯簿中可以具有相同<xref:System.Net.PeerToPeer.PeerName>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PresenceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ PresenceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>只要 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的状态发生更改，就会引发此事件。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public virtual void Subscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subscribe ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subscribe();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的调用对等方，这样对等方就可接收此后所有与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 相关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 更新后，将异步发生<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法成功。 因此，很可能<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>要添加到的集合<xref:System.Net.PeerToPeer.Collaboration.PeerContact>之前关联<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name%2A>提供。  
  
 若要监视这些更改，建议用户订阅相关的事件;例如， <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged>。  
  
 调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState.Unrestricted>。 当对等协作会话开始时，将创建此状态。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">调用对等方未登录到网络邻居。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已释放。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" /> 操作。 失败原因可能是无法与对等方建立 TCP 连接。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAllowed">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Property SubscribeAllowed As SubscriptionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Collaboration::SubscriptionType SubscribeAllowed { System::Net::PeerToPeer::Collaboration::SubscriptionType get(); void set(System::Net::PeerToPeer::Collaboration::SubscriptionType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.SubscriptionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定是否将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 公开给特定的协作事件，这些事件与拥有此 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 对象所驻留的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的对等方或应用程序关联。</summary>
        <value>
          一个 <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" /> 枚举值，指定是否将此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 公开给属于对等主机或承载应用程序的协作事件。 除非显式指定，否则对于引用类型，所有属性的默认值均为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性设置为<xref:System.Net.PeerToPeer.Collaboration.SubscriptionType.Allowed>意味着指定此远程对等方<xref:System.Net.PeerToPeer.Collaboration.PeerContact>可以看到已注册应用程序、 对象和状态信息的用户或应用程序拥有<xref:System.Net.PeerToPeer.Collaboration.ContactManager>此<xref:System.Net.PeerToPeer.Collaboration.PeerContact>对象驻留。  
  
 此属性不起任何作用<xref:System.Net.PeerToPeer.Collaboration.PeerContact>表示本地计算机或"Me"联系人，因为联系人始终会订阅本身的实例。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />  
  
 对象。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAsync">
      <MemberSignature Language="C#" Value="public virtual void SubscribeAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubscribeAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubscribeAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubscribeAsync(System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">用户定义的 <see cref="T:System.Object" />，它包含 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> 操作的相关信息。</param>
        <summary>异步订阅调用对等方到 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />，这样对等方就可接收此后与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 相关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted>完成此操作后引发事件。 如果协作活动不需要是异步的<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>应改为使用方法。  
  
 调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState.Unrestricted>。 当对等协作会话开始时，将创建此状态。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="UserToken" /> 不能为 <see langword="null." /></exception>
        <exception cref="T:System.InvalidOperationException">调用对等方未登录到网络邻居。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已释放。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> 标识符重复。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubscribeCompleted As EventHandler(Of SubscribeCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::SubscribeCompletedEventArgs ^&gt; ^ SubscribeCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在完成订阅操作时引发。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当引发此事件，错误属性上的<xref:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs>对象应检查以确定是否<xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync%2A>过程已成功完成。  
  
 调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState.Unrestricted>。 当对等协作会话开始时，将创建此状态。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">保存与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象关联的序列化数据。</param>
        <param name="context">包含与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象关联的序列化流的目标。</param>
        <summary>实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例所需的数据。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回与 <see cref="T:System.String" /> 关联的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 表示形式。</summary>
        <returns>
          <see cref="T:System.String" /> 的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" /> 表示形式。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 序列化为一个 XML 字符串，以供持久存储或网络传输时使用。</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的 XML 编码。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" /> 操作。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermission" />
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public virtual void Unsubscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Unsubscribe ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unsubscribe();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>删除对 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的订阅，其结果为调用对等方不再接收与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果调用的对等方未订阅<xref:System.Net.PeerToPeer.Collaboration.PeerContact>指定结果是不执行任何操作。 调用对等方可以验证是否其订阅事件由与此实例的对等节点<xref:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed%2A>属性。  
  
 调用此方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState.Unrestricted>。 当对等协作会话开始时，将创建此状态。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" />
      </Docs>
    </Member>
  </Members>
</Type>