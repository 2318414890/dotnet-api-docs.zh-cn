<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ParamArrayAttribute.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bbdd51cde6603fd337db607533c7be2ebff268a2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bbdd51cde6603fd337db607533c7be2ebff268a2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ParamArrayAttribute">
          <source>Indicates that a method will allow a variable number of arguments in its invocation.</source>
          <target state="translated">指示方法在其调用中将允许数目可变的参数。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ParamArrayAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ParamArrayAttribute&gt;</ph> indicates that a method parameter is a parameter array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ParamArrayAttribute&gt;</ph>指示方法参数是参数数组。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>A parameter array allows the specification of an unknown number of arguments.</source>
          <target state="translated">参数数组允许未知数量的自变量的规范。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>A parameter array must be the last parameter in a formal parameter list, and it must be a single-dimension array.</source>
          <target state="translated">参数数组必须是形参列表中中的最后一个参数，并且它必须是一维数组。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>When the method is called, a parameter array permits arguments to a method to be specified in either of two ways:</source>
          <target state="translated">当调用该方法时，允许参数数组对应于方法，以在两种方式之一中指定的自变量：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>As a single expression of a type that is implicitly convertible to the parameter array type.</source>
          <target state="translated">作为一种隐式转换为参数数组类型的单个表达式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The parameter array functions as a value parameter.</source>
          <target state="translated">作为值参数的函数参数数组。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>As zero or more arguments, where each argument is an expression of a type that is implictly convertible to the type of the parameter array element.</source>
          <target state="translated">作为零个或多个参数，其中每个参数都是隐式转换为参数数组元素的类型的类型的表达式。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The example in the next section illustrates both calling conventions.</source>
          <target state="translated">下一节中的示例阐释了这两个调用约定。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>Typically, the <ph id="ph1">&lt;xref:System.ParamArrayAttribute&gt;</ph> is not used directly in code.</source>
          <target state="translated">通常情况下，<ph id="ph1">&lt;xref:System.ParamArrayAttribute&gt;</ph>不在代码中直接使用。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>Instead, individual language keywords, such as <ph id="ph1">`ParamArray`</ph> in Visual Basic and <ph id="ph2">`params`</ph> in C#, are used as wrappers for the <ph id="ph3">&lt;xref:System.ParamArrayAttribute&gt;</ph> class.</source>
          <target state="translated">相反，各个语言关键字，如<ph id="ph1">`ParamArray`</ph>在 Visual Basic 中和<ph id="ph2">`params`</ph>在 C# 中，用作包装为<ph id="ph3">&lt;xref:System.ParamArrayAttribute&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>Some languages, such as C#, may even require the use of the language keyword and prohibit the use of <ph id="ph1">&lt;xref:System.ParamArrayAttribute&gt;</ph>.</source>
          <target state="translated">某些语言中的，如 C# 中，甚至可能需要使用该语言关键字和禁止使用<ph id="ph1">&lt;xref:System.ParamArrayAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>During overload resolution, when compilers that support parameter arrays encounter a method overload that does not exist but has one fewer parameter than an overload that includes a parameter array, they will replace the method with the overload that includes the parameter array.</source>
          <target state="translated">在重载解析过程支持参数数组的编译器遇到不存在，但具有比的重载，包括参数数组，一个更少的参数的方法重载时它们将方法替换包括的重载参数数组。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>For example, a call to the <ph id="ph1">`String.Split()`</ph> instance method (which does not exist in the <ph id="ph2">&lt;xref:System.String&gt;</ph> class) is resolved as a call to the <ph id="ph3">&lt;xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">例如，调用<ph id="ph1">`String.Split()`</ph>实例方法 (其中中不存在<ph id="ph2">&lt;xref:System.String&gt;</ph>类) 解析为对的调用<ph id="ph3">&lt;xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The compiler will also pass an empty array of the required type to the method.</source>
          <target state="translated">编译器还会将所需的类型的空数组传递给方法。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>This means that the method must always be prepared to handle an array whose length is zero when it processes the elements in the parameter array.</source>
          <target state="translated">这意味着，该方法必须始终准备好处理在处理参数数组中的元素时，其长度为零的数组。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The example provides an illustration.</source>
          <target state="translated">说明如示例所示。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">有关使用属性的详细信息，请参阅<bpt id="p1">[</bpt>属性<ept id="p1">](~/docs/standard/attributes/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The following example defines a <ph id="ph1">`Temperature`</ph> class that includes a <ph id="ph2">`Display`</ph> method, which is intended to display one or more formatted temperature values.</source>
          <target state="translated">下面的示例定义<ph id="ph1">`Temperature`</ph>类，包含<ph id="ph2">`Display`</ph>方法，其目的是显示一个或多个格式化的温度值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The method has a single parameter, <ph id="ph1">`formats`</ph>, which is defined as a parameter array.</source>
          <target state="translated">该方法只有一个参数， <ph id="ph1">`formats`</ph>，其定义为参数数组。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>The following example illustrates three different calls to the <ph id="ph1">`Temperature.Display`</ph> method.</source>
          <target state="translated">下面的示例演示对三个不同调用<ph id="ph1">`Temperature.Display`</ph>方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>In the first, the method is passed an array of format strings.</source>
          <target state="translated">在第一个，该方法传递一个格式字符串数组。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>In the second, the method is passed four individual format strings as arguments.</source>
          <target state="translated">在第二个，该方法传递四个单独的格式字符串作为自变量。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>In the third, the method is called with no arguments.</source>
          <target state="translated">在第三个、 不带任何参数调用方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ParamArrayAttribute">
          <source>As the output from the example illustrates, the Visual Basic and C# compilers translate this into a call to the <ph id="ph1">`Display`</ph> method with an empty string array.</source>
          <target state="translated">如示例输出所示，则 Visual Basic 和 C# 编译器将此转换调用<ph id="ph1">`Display`</ph>与非空字符串数组的方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ParamArrayAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ParamArrayAttribute" /&gt;</ph> class with default properties.</source>
          <target state="translated">使用默认属性初始化 <ph id="ph1">&lt;see cref="T:System.ParamArrayAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>