<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IObserver`1.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53facb3d52ed4cf715a9c826dd48e65f8e79aa81b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3facb3d52ed4cf715a9c826dd48e65f8e79aa81b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The object that provides notification information.</source>
          <target state="translated">提供通知信息的对象。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IObserver`1">
          <source>Provides a mechanism for receiving push-based notifications.</source>
          <target state="translated">提供用于接收基于推送的通知的机制。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> and <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph>和<ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph>接口提供通用的机制，以基于推送的通知，也称为观察程序设计模式。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph> interface represents the class that sends notifications (the provider); the <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> interface represents the class that receives them (the observer).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObservable%601&gt;</ph>接口表示发送通知 （提供程序）; 类<ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph>接口表示接收它们 （观察者） 的类。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source><ph id="ph1">`T`</ph> represents the class that provides the notification information.</source>
          <target state="translated"><ph id="ph1">`T`</ph> 表示提供通知信息的类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>An <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> implementation arranges to receive notifications from a provider (an <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementation) by passing an instance of itself to the provider's <ph id="ph3">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph>实现排列从提供程序接收通知 (<ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph>实现) 通过将自身的一个实例传递给提供程序的<ph id="ph3">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>This method returns an <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> object that can be used to unsubscribe the observer before the provider finishes sending notifications.</source>
          <target state="translated">此方法返回<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>可以用于取消订阅之前提供程序观察者对象完成发送通知。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> interface defines the following three methods that the observer must implement:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph>接口定义观察者必须实现以下三种方法：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method, which is typically called by the provider to supply the observer with new data or state information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph>方法，这通常称为提供程序提供观察程序提供新的数据或状态信息。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method, which is typically called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph>方法，通常会调用的提供商联系，以指示数据是不可用，无法访问，或已损坏，或提供程序遇到某些其他错误条件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method, which is typically called by the provider to indicate that it has finished sending notifications to observers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph>方法，这通常称为提供程序，以指示它已完成将通知发送给观察者。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following example illustrates the observer design pattern.</source>
          <target state="translated">下面的示例演示观察程序设计模式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It defines a <ph id="ph1">`Location`</ph> class that contains latitude and longitude information.</source>
          <target state="translated">它定义<ph id="ph1">`Location`</ph>包含纬度和经度信息的类。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationReporter`</ph> class provides the <ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`LocationReporter`</ph>类提供<ph id="ph2">&lt;xref:System.IObserver%601&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It displays information about the current location to the console.</source>
          <target state="translated">它向控制台显示有关当前的位置的信息。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Its constructor includes a <ph id="ph1">`name`</ph> parameter, which allows the <ph id="ph2">`LocationReporter`</ph> instance to identify itself in its string output.</source>
          <target state="translated">其构造函数包括<ph id="ph1">`name`</ph>参数，它允许<ph id="ph2">`LocationReporter`</ph>实例在其字符串输出中标识自身。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It also includes a <ph id="ph1">`Subscribe`</ph> method, which wraps a call to the provider's <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph> method.</source>
          <target state="translated">它还包括<ph id="ph1">`Subscribe`</ph>方法，该包装到提供程序的调用方法<ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>This enables the method to assign the returned <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> reference to a private variable.</source>
          <target state="translated">这样，方法将返回<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>到私有变量的引用。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationReporter`</ph> class also includes an <ph id="ph2">`Unsubscribe`</ph> method, which calls the <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method of the object returned by the <ph id="ph4">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`LocationReporter`</ph>类还进行了<ph id="ph2">`Unsubscribe`</ph>方法，后者将调用<ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>方法返回的对象<ph id="ph4">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following code defines the <ph id="ph1">`LocationReporter`</ph> class.</source>
          <target state="translated">下面的代码定义<ph id="ph1">`LocationReporter`</ph>类。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationTracker`</ph> class provides the <ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`LocationTracker`</ph>类提供<ph id="ph2">&lt;xref:System.IObservable%601&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Its <ph id="ph1">`TrackLocation`</ph> method is passed a nullable <ph id="ph2">`Location`</ph> object that contains the latitude and longitude data.</source>
          <target state="translated">其<ph id="ph1">`TrackLocation`</ph>方法传递一个可以为 null<ph id="ph2">`Location`</ph>包含纬度和经度数据的对象。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>If the <ph id="ph1">`Location`</ph> value is not <ph id="ph2">`null`</ph>, the <ph id="ph3">`TrackLocation`</ph> method calls the <ph id="ph4">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method of each observer.</source>
          <target state="translated">如果<ph id="ph1">`Location`</ph>值不是<ph id="ph2">`null`</ph>、<ph id="ph3">`TrackLocation`</ph>方法调用<ph id="ph4">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph>的每个观察程序的方法。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>If the <ph id="ph1">`Location`</ph> value is <ph id="ph2">`null`</ph>, the <ph id="ph3">`TrackLocation`</ph> method instantiates a <ph id="ph4">`LocationNotFoundException`</ph> object, which is shown in the following example.</source>
          <target state="translated">如果<ph id="ph1">`Location`</ph>值是<ph id="ph2">`null`</ph>、<ph id="ph3">`TrackLocation`</ph>方法实例化<ph id="ph4">`LocationNotFoundException`</ph>对象，在下面的示例所示。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>It then calls each observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method and passes it the <ph id="ph2">`LocationNotFoundException`</ph> object.</source>
          <target state="translated">然后，它调用每个观察程序<ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph>方法并将其传递<ph id="ph2">`LocationNotFoundException`</ph>对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Note that <ph id="ph1">`LocationNotFoundException`</ph> derives from <ph id="ph2">&lt;xref:System.Exception&gt;</ph> but does not add any new members.</source>
          <target state="translated">请注意，<ph id="ph1">`LocationNotFoundException`</ph>派生自<ph id="ph2">&lt;xref:System.Exception&gt;</ph>但未添加任何新的成员。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>Observers register to receive notifications from a <ph id="ph1">`TrackLocation`</ph> object by calling its <ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method, which assigns a reference to the observer object to a private generic <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object.</source>
          <target state="translated">观察者注册以接收通知从<ph id="ph1">`TrackLocation`</ph>对象通过调用其<ph id="ph2">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph>方法，将对观察程序对象的引用分配给私有泛型<ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The method returns an <ph id="ph1">`Unsubscriber`</ph> object, which is an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> implementation that enables observers to stop receiving notifications.</source>
          <target state="translated">该方法返回<ph id="ph1">`Unsubscriber`</ph>对象，它是<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>使观察程序停止接收通知的实现。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The <ph id="ph1">`LocationTracker`</ph> class also includes an <ph id="ph2">`EndTransmission`</ph> method.</source>
          <target state="translated"><ph id="ph1">`LocationTracker`</ph>类还进行了<ph id="ph2">`EndTransmission`</ph>方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>When no further location data is available, the method calls each observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method and then clears the internal list of observers.</source>
          <target state="translated">当没有更多位置数据可用时，该方法调用每个观察程序<ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph>方法，然后再清除观察者的内部列表。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IObserver`1">
          <source>The following code then instantiates the provider and the observer.</source>
          <target state="translated">提供程序和观察者，然后实例化下面的代码。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnCompleted">
          <source>Notifies the observer that the provider has finished sending push-based notifications.</source>
          <target state="translated">通知观察者提供程序已完成发送基于推送的通知。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>When the observer's <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> implementation is called, the <ph id="ph2">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method can optionally call the <ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.IDisposable&gt;</ph> object that was returned to the observer when it called the <ph id="ph5">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">当观察程序的<ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph>调用实现，<ph id="ph2">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph>方法可以根据需要调用<ph id="ph3">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>方法<ph id="ph4">&lt;xref:System.IDisposable&gt;</ph>对象调用时返回到观察者<ph id="ph5">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">下面的示例提供的实现<ph id="ph1">&lt;xref:System.IObserver%601.OnCompleted%2A&gt;</ph>纬度/经度跟踪应用程序中的方法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>The method simply reports that no further data is available and calls the provider's <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">该方法仅报告没有更多数据可用，然后调用提供程序的<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnCompleted">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">请参阅示例部分<ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph>有关完整示例的主题。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>An object that provides additional information about the error.</source>
          <target state="translated">提供有关错误的附加信息的对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>Notifies the observer that the provider has experienced an error condition.</source>
          <target state="translated">通知观察者提供程序遇到错误情况。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>Although <ph id="ph1">`error`</ph> is an object that is derived from <ph id="ph2">&lt;xref:System.Exception?displayProperty=nameWithType&gt;</ph>, it does not necessarily represent an exception that is thrown by the provider.</source>
          <target state="translated">尽管<ph id="ph1">`error`</ph>是一个对象，派生自<ph id="ph2">&lt;xref:System.Exception?displayProperty=nameWithType&gt;</ph>，不一定表示由提供程序引发的异常。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>It can also represent a routine or expected error condition, such as data that is missing or unavailable.</source>
          <target state="translated">它还可以表示例程或预期的错误条件，例如数据丢失或不可用。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method should be seen as informational, and the provider should not expect the observer to provide error handling.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph>方法应被视为信息性消息、 和提供程序不应指望观察者提供错误处理。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">下面的示例提供的实现<ph id="ph1">&lt;xref:System.IObserver%601.OnError%2A&gt;</ph>纬度/经度跟踪应用程序中的方法。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>The method simply reports that data is currently unavailable; it does not make use of the <ph id="ph1">&lt;xref:System.Exception&gt;</ph> object passed to it as a parameter.</source>
          <target state="translated">该方法仅报告数据当前不可用;它不会进行使用<ph id="ph1">&lt;xref:System.Exception&gt;</ph>对象作为参数传递给它。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnError(System.Exception)">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">请参阅示例部分<ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph>有关完整示例的主题。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnNext(`0)">
          <source>The current notification information.</source>
          <target state="translated">当前通知信息。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IObserver`1.OnNext(`0)">
          <source>Provides the observer with new data.</source>
          <target state="translated">向观察者提供新数据。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>After an observer has called a provider's <ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph> method, the provider calls the observer's <ph id="ph2">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method to provide notifications.</source>
          <target state="translated">观察程序已调用提供程序的后<ph id="ph1">&lt;xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType&gt;</ph>方法，该提供程序调用观察程序的<ph id="ph2">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph>方法以提供通知。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>The following example provides an implementation of the <ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph> method in a latitude/longitude tracking application.</source>
          <target state="translated">下面的示例提供的实现<ph id="ph1">&lt;xref:System.IObserver%601.OnNext%2A&gt;</ph>纬度/经度跟踪应用程序中的方法。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IObserver`1.OnNext(`0)">
          <source>See the Example section of the <ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph> topic for the complete example.</source>
          <target state="translated">请参阅示例部分<ph id="ph1">&lt;xref:System.IObserver%601&gt;</ph>有关完整示例的主题。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>