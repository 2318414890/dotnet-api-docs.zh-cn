<Type Name="Single" FullName="System.Single">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="77e71ab8535b5bfefd6030c3226091df1a03daa3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36429410" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Single : IComparable, IComparable&lt;float&gt;, IConvertible, IEquatable&lt;float&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit float32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;float32&gt;, class System.IConvertible, class System.IEquatable`1&lt;float32&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Single" />
  <TypeSignature Language="VB.NET" Value="Public Structure Single&#xA;Implements IComparable, IComparable(Of Single), IConvertible, IEquatable(Of Single), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Single : IComparable, IComparable&lt;float&gt;, IConvertible, IEquatable&lt;float&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type single = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Single&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Single&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0ba6b-101">表示一个单精度浮点数。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ba6b-101">Represents a single-precision floating-point number.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-102"><xref:System.Single>值类型值范围从-3.402823 e 38 到 + 3.402823 e 38，以及正或负零，表示单精度 32 位数字<xref:System.Single.PositiveInfinity>， <xref:System.Single.NegativeInfinity>，并不是数字 (<xref:System.Single.NaN>)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-102">The <xref:System.Single> value type represents a single-precision 32-bit number with values ranging from negative 3.402823e38 to positive 3.402823e38, as well as positive or negative zero, <xref:System.Single.PositiveInfinity>, <xref:System.Single.NegativeInfinity>, and not a number (<xref:System.Single.NaN>).</span></span> <span data-ttu-id="0ba6b-103">它旨在表示而言是非常大 （如行星或星系之间的距离） 或极小 （例如千克一种材料的分子质量） 且通常是不精确 （如到另一个太阳系地球距离的值).</span><span class="sxs-lookup"><span data-stu-id="0ba6b-103">It is intended to represent values that are extremely large (such as distances between planets or galaxies) or extremely small (such as the molecular mass of a substance in kilograms) and that often are imprecise (such as the distance from earth to another solar system).</span></span> <span data-ttu-id="0ba6b-104"><xref:System.Single>类型符合 IEC 60559: 1989 (IEEE 754) 二进制浮点算术标准。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-104">The <xref:System.Single> type complies with the IEC 60559:1989 (IEEE 754) standard for binary floating-point arithmetic.</span></span>  
  
 <span data-ttu-id="0ba6b-105">本主题包括以下各节：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-105">This topic consists of the following sections:</span></span>  
  
-   [<span data-ttu-id="0ba6b-106">浮点表示形式和精度</span><span class="sxs-lookup"><span data-stu-id="0ba6b-106">Floating-point representation and precision</span></span>](#Precision)  
  
-   [<span data-ttu-id="0ba6b-107">相等性测试</span><span class="sxs-lookup"><span data-stu-id="0ba6b-107">Testing for equality</span></span>](#Equality)  
  
-   [<span data-ttu-id="0ba6b-108">浮点值和异常</span><span class="sxs-lookup"><span data-stu-id="0ba6b-108">Floating-point values and exceptions</span></span>](#Exceptions)  
  
-   [<span data-ttu-id="0ba6b-109">类型转换和单个结构</span><span class="sxs-lookup"><span data-stu-id="0ba6b-109">Type conversion and the Single structure</span></span>](#Conversion)  
  
-   [<span data-ttu-id="0ba6b-110">浮点功能</span><span class="sxs-lookup"><span data-stu-id="0ba6b-110">Floating-point functionality</span></span>](#Functionality)  
  
 <span data-ttu-id="0ba6b-111"><xref:System.Single?displayProperty=nameWithType> 提供用于比较此实例的值转换为其字符串表示形式，并将数字的字符串表示转换为此类型的实例的类型的实例方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-111"><xref:System.Single?displayProperty=nameWithType> provides methods to compare instances of this type, to convert the value of an instance to its string representation, and to convert the string representation of a number to an instance of this type.</span></span> <span data-ttu-id="0ba6b-112">有关格式规范代码如何控制的字符串表示形式的值类型的信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)，[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)，和[自定义数值格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-112">For information about how format specification codes control the string representation of value types, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
<a name="Precision"></a>   
## <a name="floating-point-representation-and-precision"></a><span data-ttu-id="0ba6b-113">浮点表示形式和精度</span><span class="sxs-lookup"><span data-stu-id="0ba6b-113">Floating-point representation and precision</span></span>  
 <span data-ttu-id="0ba6b-114"><xref:System.Single>数据类型将单精度浮点值存储在 32 位的二进制格式下, 表中所示：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-114">The <xref:System.Single> data type stores single-precision floating-point values in a 32-bit binary format, as shown in the following table:</span></span>  
  
|<span data-ttu-id="0ba6b-115">部件</span><span class="sxs-lookup"><span data-stu-id="0ba6b-115">Part</span></span>|<span data-ttu-id="0ba6b-116">位</span><span class="sxs-lookup"><span data-stu-id="0ba6b-116">Bits</span></span>|  
|----------|----------|  
|<span data-ttu-id="0ba6b-117">有效数或尾数</span><span class="sxs-lookup"><span data-stu-id="0ba6b-117">Significand or mantissa</span></span>|<span data-ttu-id="0ba6b-118">0-22</span><span class="sxs-lookup"><span data-stu-id="0ba6b-118">0-22</span></span>|  
|<span data-ttu-id="0ba6b-119">指数</span><span class="sxs-lookup"><span data-stu-id="0ba6b-119">Exponent</span></span>|<span data-ttu-id="0ba6b-120">23-30</span><span class="sxs-lookup"><span data-stu-id="0ba6b-120">23-30</span></span>|  
|<span data-ttu-id="0ba6b-121">登录 (0 = 正数、 1 = 负)</span><span class="sxs-lookup"><span data-stu-id="0ba6b-121">Sign (0 = positive, 1 = negative)</span></span>|<span data-ttu-id="0ba6b-122">31</span><span class="sxs-lookup"><span data-stu-id="0ba6b-122">31</span></span>|  
  
 <span data-ttu-id="0ba6b-123">就像小数部分不能精确表示某些小数部分的值 (如 1/3 或<xref:System.Math.PI?displayProperty=nameWithType>)，二进制分数 （竖式） 不能表示某些小数部分值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-123">Just as decimal fractions are unable to precisely represent some fractional values (such as 1/3 or <xref:System.Math.PI?displayProperty=nameWithType>), binary fractions are unable to represent some fractional values.</span></span> <span data-ttu-id="0ba6b-124">例如，2/10，表示通过以小数值的.2 精确地，由为二进制分数，具有模式"1100"重复向无穷远的.0011111001001100 表示。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-124">For example, 2/10, which is represented precisely by .2 as a decimal fraction, is represented by .0011111001001100 as a binary fraction, with the pattern "1100" repeating to infinity.</span></span> <span data-ttu-id="0ba6b-125">在这种情况下，浮点值提供一个数字，它表示的不精确表示。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-125">In this case, the floating-point value provides an imprecise representation of the number that it represents.</span></span> <span data-ttu-id="0ba6b-126">执行其他数学运算上的原始的浮点值通常会增加其缺乏精度。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-126">Performing additional mathematical operations on the original floating-point value often increases its lack of precision.</span></span> <span data-ttu-id="0ba6b-127">例如，如果比较相乘.3 通过 10 的结果，添加.3 到.3 9 次，你将看到这种添加会生成不太精确的结果，因为它涉及比乘法的八个更多操作。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-127">For example, if you compare the results of multiplying .3 by 10 and adding .3 to .3 nine times, you will see that addition produces the less precise result, because it involves eight more operations than multiplication.</span></span> <span data-ttu-id="0ba6b-128">请注意，这种不一致是仅当你显示这两个明显<xref:System.Single>通过使用"R"的值[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)，后者，如果有必要，将显示所有 9 位精度支持<xref:System.Single>类型。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-128">Note that this disparity is apparent only if you display the two <xref:System.Single> values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md), which, if necessary, displays all 9 digits of precision supported by the <xref:System.Single> type.</span></span>  
  
 [!code-csharp[System.Single.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/representation1.cs#3)]
 [!code-vb[System.Single.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/representation1.vb#3)]  
  
 <span data-ttu-id="0ba6b-129">一些数字，不能精确表示为小数部分组成的二进制值，因为浮点数可以只是近似的实际数量。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-129">Because some numbers cannot be represented exactly as fractional binary values, floating-point numbers can only approximate real numbers.</span></span>  
  
 <span data-ttu-id="0ba6b-130">所有的浮点数必须有限的数量的有效位数，同时还确定浮点值如何准确地模拟实际数目。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-130">All floating-point numbers have a limited number of significant digits, which also determines how accurately a floating-point value approximates a real number.</span></span> <span data-ttu-id="0ba6b-131">A<xref:System.Single>值具有最多 7 个小数位的精度，尽管它在内部维护最多的 9 位。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-131">A <xref:System.Single> value has up to 7 decimal digits of precision, although a maximum of 9 digits is maintained internally.</span></span> <span data-ttu-id="0ba6b-132">这意味着某些浮点运算可能缺少要更改的浮点值的精度。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-132">This means that some floating-point operations may lack the precision to change a floating-point value.</span></span> <span data-ttu-id="0ba6b-133">下面的示例定义一个大型的单精度浮点值，并将的产品<xref:System.Single.Epsilon?displayProperty=nameWithType>和一个 quadrillion 到它。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-133">The following example defines a large single-precision floating-point value, and then adds the product of <xref:System.Single.Epsilon?displayProperty=nameWithType> and one quadrillion to it.</span></span> <span data-ttu-id="0ba6b-134">但是，该产品是太小，无法修改原始的浮点值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-134">However, the product is too small to modify the original floating-point value.</span></span> <span data-ttu-id="0ba6b-135">其最低有效位数是千分位，而在产品中的最高有效位是 1<sup>-312</sup>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-135">Its least significant digit is thousandths, whereas the most significant digit in the product is 1<sup>-312</sup>.</span></span>  
  
 [!code-csharp[System.Single.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/representation2.cs#4)]
 [!code-vb[System.Single.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/representation2.vb#4)]  
  
 <span data-ttu-id="0ba6b-136">有限的精度的浮点数的有几个结果：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-136">The limited precision of a floating-point number has several consequences:</span></span>  
  
-   <span data-ttu-id="0ba6b-137">两个似乎相等的特定精度的浮点数可能不相等的因为其最低有效位数不同。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-137">Two floating-point numbers that appear equal for a particular precision might not compare equal because their least significant digits are different.</span></span> <span data-ttu-id="0ba6b-138">在下面的示例中，一系列数字加在一起，并具有其预期的总比较其总量。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-138">In the following example, a series of numbers are added together, and their total is compared with their expected total.</span></span> <span data-ttu-id="0ba6b-139">尽管两个值看起来相同，调用`Equals`方法表示它们不是。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-139">Although the two values appear to be the same, a call to the `Equals` method indicates that they are not.</span></span>  
  
     [!code-csharp[System.Single.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/precisionlist3.cs#6)]
     [!code-vb[System.Single.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/precisionlist3.vb#6)]  
  
     <span data-ttu-id="0ba6b-140">如果更改中的格式项<xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%29?displayProperty=nameWithType>语句从`{0}`和`{1}`到`{0:R}`和`{1:R}`以显示两个的全部有效数字<xref:System.Single>很明显的两个值相等的值，因为在添加操作期间的精度的损失。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-140">If you change the format items in the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%29?displayProperty=nameWithType> statement from `{0}` and `{1}` to `{0:R}` and `{1:R}` to display all significant digits of the two <xref:System.Single> values, it is clear that the two values are unequal because of a loss of precision during the addition operations.</span></span> <span data-ttu-id="0ba6b-141">在这种情况下，通过调用来解决此问题<xref:System.Math.Round%28System.Double%2CSystem.Int32%29?displayProperty=nameWithType>方法要舍入<xref:System.Single>到所需精度之前执行比较的值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-141">In this case, the issue can be resolved by calling the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29?displayProperty=nameWithType> method to round the <xref:System.Single> values to the desired precision before performing the comparison.</span></span>  
  
-   <span data-ttu-id="0ba6b-142">使用浮点数的数学或比较操作可能不生成相同的结果如果使用十进制数，因为二进制浮点数可能不等于的十进制数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-142">A mathematical or comparison operation that uses a floating-point number might not yield the same result if a decimal number is used, because the binary floating-point number might not equal the decimal number.</span></span> <span data-ttu-id="0ba6b-143">前面的示例所示这显示相乘.3 通过 10 和添加.3 到.3 9 次的结果。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-143">A previous example illustrated this by displaying the result of multiplying .3 by 10 and adding .3 to .3 nine times.</span></span>  
  
     <span data-ttu-id="0ba6b-144">重要中带小数值的数字运算的准确性时，请使用<xref:System.Decimal>类型而不是<xref:System.Single>类型。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-144">When accuracy in numeric operations with fractional values is important, use the <xref:System.Decimal> type instead of the <xref:System.Single> type.</span></span> <span data-ttu-id="0ba6b-145">当在使用的范围以外的整数值的数值运算中的准确性<xref:System.Int64>或<xref:System.UInt64>类型是重要的是，使用<xref:System.Numerics.BigInteger>类型。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-145">When accuracy in numeric operations with integral values beyond the range of the <xref:System.Int64> or <xref:System.UInt64> types is important, use the <xref:System.Numerics.BigInteger> type.</span></span>  
  
-   <span data-ttu-id="0ba6b-146">一个值可能不往返，如果涉及到浮点数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-146">A value might not round-trip if a floating-point number is involved.</span></span> <span data-ttu-id="0ba6b-147">一个值是指保存/还原，如果运算将原始的浮点数转换为另一个窗体、 反向操作可转换回浮点数，转换后的形式并最终的浮点数等于原始浮点数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-147">A value is said to round-trip if an operation converts an original floating-point number to another form, an inverse operation transforms the converted form back to a floating-point number, and the final floating-point number is equal to the original floating-point number.</span></span> <span data-ttu-id="0ba6b-148">往返行程可能会失败，因为一个或多个最低有效位数丢失或更改在转换中。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-148">The round trip might fail because one or more least significant digits are lost or changed in a conversion.</span></span> <span data-ttu-id="0ba6b-149">在下面的示例中，三个<xref:System.Single>值转换为字符串并保存在文件中。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-149">In the following example, three <xref:System.Single> values are converted to strings and saved in a file.</span></span> <span data-ttu-id="0ba6b-150">如输出所示，尽管值看起来相同，则还原的值不等于原始值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-150">As the output shows, although the values appear to be identical, the restored values are not equal to the original values.</span></span>  
  
     [!code-csharp[System.Single.Structure#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/precisionlist4a.cs#17)]
     [!code-vb[System.Single.Structure#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/PrecisionList4a.vb#17)]  
  
     <span data-ttu-id="0ba6b-151">在这种情况下，这些值可以为成功往返过程通过使用"G9"[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)若要保留完整的精度<xref:System.Single>值，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-151">In this case, the values can be successfully round-tripped by using the "G9" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to preserve the full precision of <xref:System.Single> values, as the following example shows.</span></span>  
  
     [!code-csharp[System.Single.Structure#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/PrecisionList5a.cs#18)]
     [!code-vb[System.Single.Structure#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/PrecisionList5a.vb#18)]  
  
-   <span data-ttu-id="0ba6b-152"><xref:System.Single> 值具有比精度降低<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-152"><xref:System.Single> values have less precision than <xref:System.Double> values.</span></span> <span data-ttu-id="0ba6b-153">A<xref:System.Single>值转换为看似等效<xref:System.Double>通常不等于<xref:System.Double>由于精度的差异值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-153">A <xref:System.Single> value that is converted to a seemingly equivalent <xref:System.Double> often does not equal the <xref:System.Double> value because of differences in precision.</span></span> <span data-ttu-id="0ba6b-154">在下面的示例中，相同的除法运算的结果赋给<xref:System.Double>值和<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-154">In the following example, the result of identical division operations is assigned to a <xref:System.Double> value and a <xref:System.Single> value.</span></span> <span data-ttu-id="0ba6b-155">后<xref:System.Single>值被强制转换为<xref:System.Double>，两个值的比较显示，它们不相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-155">After the <xref:System.Single> value is cast to a <xref:System.Double>, a comparison of the two values shows that they are unequal.</span></span>  
  
     [!code-csharp[System.Double.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/precisionlist1.cs#5)]
     [!code-vb[System.Double.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/precisionlist1.vb#5)]  
  
     <span data-ttu-id="0ba6b-156">若要避免此问题，使用<xref:System.Double>数据类型代替了<xref:System.Single>数据类型或使用<xref:System.Math.Round%2A>方法，以便这两个值具有相同的精度。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-156">To avoid this problem, either use the <xref:System.Double> data type in place of the <xref:System.Single> data type, or use the <xref:System.Math.Round%2A> method so that both values have the same precision.</span></span>  
  
<a name="Equality"></a>   
## <a name="testing-for-equality"></a><span data-ttu-id="0ba6b-157">相等性测试</span><span class="sxs-lookup"><span data-stu-id="0ba6b-157">Testing for equality</span></span>  
 <span data-ttu-id="0ba6b-158">将被视为相等，两个<xref:System.Single>值必须表示相同的值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-158">To be considered equal, two <xref:System.Single> values must represent identical values.</span></span> <span data-ttu-id="0ba6b-159">但是，由于的精度值，之间的差异或由于一个或两个值的精度损失，预计通常会相同的浮点值打开要由于其最低有效位的不相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-159">However, because of differences in precision between values, or because of a loss of precision by one or both values, floating-point values that are expected to be identical often turn out to be unequal due to differences in their least significant digits.</span></span> <span data-ttu-id="0ba6b-160">因此，调用<xref:System.Single.Equals%2A>方法来确定两个值是否相等或对的调用<xref:System.Single.CompareTo%2A>方法来确定两个之间的关系<xref:System.Single>值，通常会产生意外的结果。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-160">As a result, calls to the <xref:System.Single.Equals%2A> method to determine whether two values are equal, or calls to the <xref:System.Single.CompareTo%2A> method to determine the relationship between two <xref:System.Single> values, often yield unexpected results.</span></span> <span data-ttu-id="0ba6b-161">这是很明显的以下示例中，其中两个显然是等于<xref:System.Single>值变得是不相等，因为第一个值具有 7 位精度，而第二个值具有 9。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-161">This is evident in the following example, where two apparently equal <xref:System.Single> values turn out to be unequal, because the first value has 7 digits of precision, whereas the second value has 9.</span></span>  
  
 [!code-csharp[System.Single.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/comparison1.cs#9)]
 [!code-vb[System.Single.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/comparison1.vb#9)]  
  
 <span data-ttu-id="0ba6b-162">计算的值，请按照不同的代码路径和的操作的不同的方式通常证明是不相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-162">Calculated values that follow different code paths and that are manipulated in different ways often prove to be unequal.</span></span> <span data-ttu-id="0ba6b-163">在下面的示例中，一个<xref:System.Single>值平方值，且然后计算平方根还原原始值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-163">In the following example, one <xref:System.Single> value is squared, and then the square root is calculated to restore the original value.</span></span> <span data-ttu-id="0ba6b-164">第二个<xref:System.Single>乘以 3.51 和平方值之前的结果的平方根除以 3.51 还原原始值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-164">A second <xref:System.Single> is multiplied by 3.51 and squared before the square root of the result is divided by 3.51 to restore the original value.</span></span> <span data-ttu-id="0ba6b-165">尽管两个值似乎是相同的但调用<xref:System.Single.Equals%28System.Single%29>方法指示它们是否不相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-165">Although the two values appear to be identical, a call to the <xref:System.Single.Equals%28System.Single%29> method indicates that they are not equal.</span></span> <span data-ttu-id="0ba6b-166">使用"G9"标准格式字符串来返回结果字符串，用于显示每个的所有有效位<xref:System.Single>值显示第二个值是.0000000000001 小于第一个。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-166">Using the "G9" standard format string to return a result string that displays all the significant digits of each <xref:System.Single> value shows that the second value is .0000000000001 less than the first.</span></span>  
  
 [!code-csharp[System.Single.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/comparison2.cs#10)]
 [!code-vb[System.Single.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/comparison2.vb#10)]  
  
 <span data-ttu-id="0ba6b-167">在其中发生精度损失是可能会影响比较的结果的情况下，可以使用以下方法，而不是调用<xref:System.Single.Equals%2A>或<xref:System.Single.CompareTo%2A>方法：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-167">In cases where a loss of precision is likely to affect the result of a comparison, you can use the following techniques instead of calling the <xref:System.Single.Equals%2A> or <xref:System.Single.CompareTo%2A> method:</span></span>  
  
-   <span data-ttu-id="0ba6b-168">调用<xref:System.Math.Round%2A?displayProperty=nameWithType>方法，以确保这两个值具有相同的精度。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-168">Call the <xref:System.Math.Round%2A?displayProperty=nameWithType> method to ensure that both values have the same precision.</span></span> <span data-ttu-id="0ba6b-169">下面的示例修改了前面的示例以使用此方法，以便两个小数部分的值相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-169">The following example modifies a previous example to use this approach so that two fractional values are equivalent.</span></span>  
  
     [!code-csharp[System.Single.Structure#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/comparison3.cs#11)]
     [!code-vb[System.Single.Structure#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/comparison3.vb#11)]  
  
     <span data-ttu-id="0ba6b-170">请注意，精度问题仍然适用于的中点值舍入。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-170">Note that the problem of precision still applies to rounding of midpoint values.</span></span> <span data-ttu-id="0ba6b-171">有关更多信息，请参见 <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-171">For more information, see the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="0ba6b-172">而不是相等的大致相等性测试。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-172">Test for approximate equality instead of equality.</span></span> <span data-ttu-id="0ba6b-173">此方法需要定义任一绝对量所依据的两个值可以与不同，但仍要相等，或你定义所依据的较小值可以分离从更大的值相对量。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-173">This technique requires that you define either an absolute amount by which the two values can differ but still be equal, or that you define a relative amount by which the smaller value can diverge from the larger value.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="0ba6b-174"><xref:System.Single.Epsilon?displayProperty=nameWithType> 有时使用作为两个之间的距离的绝对度量<xref:System.Single>值时测试是否相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-174"><xref:System.Single.Epsilon?displayProperty=nameWithType> is sometimes used as an absolute measure of the distance between two <xref:System.Single> values when testing for equality.</span></span>  <span data-ttu-id="0ba6b-175">但是，<xref:System.Single.Epsilon?displayProperty=nameWithType>测量的最小可能值，可以添加到，或相减，<xref:System.Single>其值为零。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-175">However, <xref:System.Single.Epsilon?displayProperty=nameWithType> measures the smallest possible value that can be added to, or subtracted from, a <xref:System.Single> whose value is zero.</span></span> <span data-ttu-id="0ba6b-176">对于大多数正和负<xref:System.Single>值、 的值<xref:System.Single.Epsilon?displayProperty=nameWithType>太小以致无法检测到。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-176">For most positive and negative <xref:System.Single> values, the value of <xref:System.Single.Epsilon?displayProperty=nameWithType> is too small to be detected.</span></span> <span data-ttu-id="0ba6b-177">因此，除了均为零的值，不建议在相等的测试中使用它。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-177">Therefore, except for values that are zero, we do not recommend its use in tests for equality.</span></span>  
  
     <span data-ttu-id="0ba6b-178">下面的示例使用后一种方法来定义`IsApproximatelyEqual`测试两个值之间的相对差异的方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-178">The following example uses the latter approach to define an `IsApproximatelyEqual` method that tests the relative difference between two values.</span></span> <span data-ttu-id="0ba6b-179">它还将对的调用的结果进行比较`IsApproximatelyEqual`方法和<xref:System.Single.Equals%28System.Single%29>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-179">It also contrasts the result of calls to the `IsApproximatelyEqual` method and the <xref:System.Single.Equals%28System.Single%29> method.</span></span>  
  
     [!code-csharp[System.Single.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/comparison4.cs#12)]
     [!code-vb[System.Single.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/comparison4.vb#12)]  
  
<a name="Exceptions"></a>   
## <a name="floating-point-values-and-exceptions"></a><span data-ttu-id="0ba6b-180">浮点值和异常</span><span class="sxs-lookup"><span data-stu-id="0ba6b-180">Floating-point values and exceptions</span></span>  
 <span data-ttu-id="0ba6b-181">具有浮点值的操作不会引发异常，与操作的整数类型，由零个或溢出在非法操作，例如除法的情况下引发异常。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-181">Operations with floating-point values do not throw exceptions, unlike operations with integral types, which throw exceptions in cases of illegal operations such as division by zero or overflow.</span></span>  <span data-ttu-id="0ba6b-182">相反，在这些情况下，浮点运算的结果为零、 正无穷大、 负无穷大或非数值 (NaN):</span><span class="sxs-lookup"><span data-stu-id="0ba6b-182">Instead, in these situations, the result of a floating-point operation is zero, positive infinity, negative infinity, or not a number (NaN):</span></span>  
  
-   <span data-ttu-id="0ba6b-183">如果浮点运算的结果太小，目标格式，则结果为零。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-183">If the result of a floating-point operation is too small for the destination format, the result is zero.</span></span> <span data-ttu-id="0ba6b-184">这会时发生相乘两个非常小的浮点数，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-184">This can occur when two very small floating-point numbers are multiplied, as the following example shows.</span></span>  
  
     [!code-csharp[System.Single.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/exceptional1.cs#1)]
     [!code-vb[System.Single.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/exceptional1.vb#1)]  
  
-   <span data-ttu-id="0ba6b-185">如果浮点运算的结果的大小超出目标格式的范围，该操作的结果是<xref:System.Single.PositiveInfinity>或<xref:System.Single.NegativeInfinity>以适合结果的符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-185">If the magnitude of the result of a floating-point operation exceeds the range of the destination format, the result of the operation is <xref:System.Single.PositiveInfinity> or <xref:System.Single.NegativeInfinity>, as appropriate for the sign of the result.</span></span> <span data-ttu-id="0ba6b-186">溢出操作的结果<xref:System.Single.MaxValue?displayProperty=nameWithType>是<xref:System.Single.PositiveInfinity>，和溢出操作的结果<xref:System.Single.MinValue?displayProperty=nameWithType>是<xref:System.Single.NegativeInfinity>，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-186">The result of an operation that overflows <xref:System.Single.MaxValue?displayProperty=nameWithType> is <xref:System.Single.PositiveInfinity>, and the result of an operation that overflows <xref:System.Single.MinValue?displayProperty=nameWithType> is <xref:System.Single.NegativeInfinity>, as the following example shows.</span></span>  
  
     [!code-csharp[System.Single.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/exceptional2.cs#2)]
     [!code-vb[System.Single.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/exceptional2.vb#2)]  
  
     <span data-ttu-id="0ba6b-187"><xref:System.Single.PositiveInfinity> 也通过零正被除数，可能会造成一个除法运算和<xref:System.Single.NegativeInfinity>负被除数的零的除法运算的结果。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-187"><xref:System.Single.PositiveInfinity> also results from a division by zero with a positive dividend, and <xref:System.Single.NegativeInfinity> results from a division by zero with a negative dividend.</span></span>  
  
-   <span data-ttu-id="0ba6b-188">如果浮点运算无效，该操作的结果是<xref:System.Single.NaN>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-188">If a floating-point operation is invalid, the result of the operation is <xref:System.Single.NaN>.</span></span> <span data-ttu-id="0ba6b-189">例如，<xref:System.Single.NaN>结果从以下操作：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-189">For example, <xref:System.Single.NaN> results from the following operations:</span></span>  
  
    -   <span data-ttu-id="0ba6b-190">被零除与被除数为零。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-190">Division by zero with a dividend of zero.</span></span> <span data-ttu-id="0ba6b-191">注意除法运算的其他情况下由零个结果中任意一种<xref:System.Single.PositiveInfinity>或<xref:System.Single.NegativeInfinity>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-191">Note that other cases of division by zero result in either <xref:System.Single.PositiveInfinity> or <xref:System.Single.NegativeInfinity>.</span></span>  
  
    -   <span data-ttu-id="0ba6b-192">使用无效输入任何浮点运算。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-192">Any floating-point operation with invalid input.</span></span> <span data-ttu-id="0ba6b-193">例如，尝试查找负数值的平方根返回<xref:System.Single.NaN>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-193">For example, attempting to find the square root of a negative value returns <xref:System.Single.NaN>.</span></span>  
  
    -   <span data-ttu-id="0ba6b-194">其值的参数与任何操作<xref:System.Single.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-194">Any operation with an argument whose value is <xref:System.Single.NaN?displayProperty=nameWithType>.</span></span>  
  
<a name="Conversion"></a>   
## <a name="type-conversions-and-the-single-structure"></a><span data-ttu-id="0ba6b-195">类型转换和单个结构</span><span class="sxs-lookup"><span data-stu-id="0ba6b-195">Type conversions and the Single structure</span></span>  
 <span data-ttu-id="0ba6b-196"><xref:System.Single>结构未定义任何显式或隐式转换运算符; 相反，由编译器实现转换。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-196">The <xref:System.Single> structure does not define any explicit or implicit conversion operators; instead, conversions are implemented by the compiler.</span></span>  
  
 <span data-ttu-id="0ba6b-197">下表列出了其他基元数值类型为值的可能的转换<xref:System.Single>值，它还指明了是否扩大或收缩转换以及是否生成<xref:System.Single>可能具有比精度降低原始值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-197">The following table lists the possible conversions of a value of the other primitive numeric types to a <xref:System.Single> value, It also indicates whether the conversion is widening or narrowing and whether the resulting <xref:System.Single> may have less precision than the original value.</span></span>  
  
|<span data-ttu-id="0ba6b-198">从</span><span class="sxs-lookup"><span data-stu-id="0ba6b-198">Conversion from</span></span>|<span data-ttu-id="0ba6b-199">扩大/收缩。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-199">Widening/narrowing</span></span>|<span data-ttu-id="0ba6b-200">可能丢失精度</span><span class="sxs-lookup"><span data-stu-id="0ba6b-200">Possible loss of precision</span></span>|  
|---------------------|-------------------------|--------------------------------|  
|<xref:System.Byte>|<span data-ttu-id="0ba6b-201">Widening</span><span class="sxs-lookup"><span data-stu-id="0ba6b-201">Widening</span></span>|<span data-ttu-id="0ba6b-202">否</span><span class="sxs-lookup"><span data-stu-id="0ba6b-202">No</span></span>|  
|<xref:System.Decimal>|<span data-ttu-id="0ba6b-203">Widening</span><span class="sxs-lookup"><span data-stu-id="0ba6b-203">Widening</span></span><br /><br /> <span data-ttu-id="0ba6b-204">请注意，C# 需要强制转换运算符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-204">Note that C# requires a cast operator.</span></span>|<span data-ttu-id="0ba6b-205">可以。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-205">Yes.</span></span> <span data-ttu-id="0ba6b-206"><xref:System.Decimal> 支持精度; 29 十进制的数字<xref:System.Single>支持 9。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-206"><xref:System.Decimal> supports 29 decimal digits of precision; <xref:System.Single> supports 9.</span></span>|  
|<xref:System.Double>|<span data-ttu-id="0ba6b-207">收缩;范围以外的值转换为<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>或<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-207">Narrowing; out-of-range values are converted to <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> or <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="0ba6b-208">可以。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-208">Yes.</span></span> <span data-ttu-id="0ba6b-209"><xref:System.Double> 支持 17 个小数位的精度;<xref:System.Single>支持 9。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-209"><xref:System.Double> supports 17 decimal digits of precision; <xref:System.Single> supports 9.</span></span>|  
|<xref:System.Int16>|<span data-ttu-id="0ba6b-210">Widening</span><span class="sxs-lookup"><span data-stu-id="0ba6b-210">Widening</span></span>|<span data-ttu-id="0ba6b-211">否</span><span class="sxs-lookup"><span data-stu-id="0ba6b-211">No</span></span>|  
|<xref:System.Int32>|<span data-ttu-id="0ba6b-212">Widening</span><span class="sxs-lookup"><span data-stu-id="0ba6b-212">Widening</span></span>|<span data-ttu-id="0ba6b-213">可以。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-213">Yes.</span></span> <span data-ttu-id="0ba6b-214"><xref:System.Int32> 支持 10 个十进制数字的精度;<xref:System.Single>支持 9。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-214"><xref:System.Int32> supports 10 decimal digits of precision; <xref:System.Single> supports 9.</span></span>|  
|<xref:System.Int64>|<span data-ttu-id="0ba6b-215">Widening</span><span class="sxs-lookup"><span data-stu-id="0ba6b-215">Widening</span></span>|<span data-ttu-id="0ba6b-216">可以。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-216">Yes.</span></span> <span data-ttu-id="0ba6b-217"><xref:System.Int64> 支持精度; 19 十进制的数字<xref:System.Single>支持 9。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-217"><xref:System.Int64> supports 19 decimal digits of precision; <xref:System.Single> supports 9.</span></span>|  
|<xref:System.SByte>|<span data-ttu-id="0ba6b-218">Widening</span><span class="sxs-lookup"><span data-stu-id="0ba6b-218">Widening</span></span>|<span data-ttu-id="0ba6b-219">否</span><span class="sxs-lookup"><span data-stu-id="0ba6b-219">No</span></span>|  
|<xref:System.UInt16>|<span data-ttu-id="0ba6b-220">Widening</span><span class="sxs-lookup"><span data-stu-id="0ba6b-220">Widening</span></span>|<span data-ttu-id="0ba6b-221">否</span><span class="sxs-lookup"><span data-stu-id="0ba6b-221">No</span></span>|  
|<xref:System.UInt32>|<span data-ttu-id="0ba6b-222">Widening</span><span class="sxs-lookup"><span data-stu-id="0ba6b-222">Widening</span></span>|<span data-ttu-id="0ba6b-223">可以。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-223">Yes.</span></span> <span data-ttu-id="0ba6b-224"><xref:System.UInt32> 支持 10 个十进制数字的精度;<xref:System.Single>支持 9。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-224"><xref:System.UInt32> supports 10 decimal digits of precision; <xref:System.Single> supports 9.</span></span>|  
|<xref:System.UInt64>|<span data-ttu-id="0ba6b-225">Widening</span><span class="sxs-lookup"><span data-stu-id="0ba6b-225">Widening</span></span>|<span data-ttu-id="0ba6b-226">可以。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-226">Yes.</span></span> <span data-ttu-id="0ba6b-227"><xref:System.Int64> 支持精度; 20 十进制的数字<xref:System.Single>支持 9。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-227"><xref:System.Int64> supports 20 decimal digits of precision; <xref:System.Single> supports 9.</span></span>|  
  
 <span data-ttu-id="0ba6b-228">以下示例将转换到其他基元数值类型的最小值或最大值<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-228">The following example converts the minimum or maximum value of other primitive numeric types to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Single.Structure#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/convert1.cs#20)]
 [!code-vb[System.Single.Structure#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/convert1.vb#20)]  
  
 <span data-ttu-id="0ba6b-229">此外，<xref:System.Double>值<xref:System.Double.NaN?displayProperty=nameWithType>， <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>，和<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>隐蔽到<xref:System.Single.NaN?displayProperty=nameWithType>， <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>，和<xref:System.Single.NegativeInfinity?displayProperty=nameWithType>分别。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-229">In addition, the <xref:System.Double> values <xref:System.Double.NaN?displayProperty=nameWithType>, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> covert to <xref:System.Single.NaN?displayProperty=nameWithType>, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="0ba6b-230">请注意，转换到某些数值类型的值<xref:System.Single>值可能涉及精度损失。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-230">Note that the conversion of the value of some numeric types to a <xref:System.Single> value can involve a loss of precision.</span></span> <span data-ttu-id="0ba6b-231">如示例所示，转换时，是可能发生精度损失<xref:System.Decimal>， <xref:System.Double>， <xref:System.Int32>， <xref:System.Int64>， <xref:System.UInt32>，和<xref:System.UInt64>值复制到<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-231">As the example illustrates, a loss of precision is possible when converting <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt32>, and <xref:System.UInt64> values to <xref:System.Single> values.</span></span>  
  
 <span data-ttu-id="0ba6b-232">转换<xref:System.Single>值赋给<xref:System.Double>的扩大转换。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-232">The conversion of a <xref:System.Single> value to a <xref:System.Double> is a widening conversion.</span></span> <span data-ttu-id="0ba6b-233">如果，转换可能导致精度损失<xref:System.Double>类型不具有的精确表示形式<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-233">The conversion may result in a loss of precision if the <xref:System.Double> type does not have a precise representation for the <xref:System.Single> value.</span></span>  
  
 <span data-ttu-id="0ba6b-234">转换<xref:System.Single>值到任何基元数值数据类型的值而不<xref:System.Double>是收缩转换，需要转换运算符 （在 C# 中) 或转换方法 （在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-234">The conversion of a <xref:System.Single> value to a value of any primitive numeric data type other than a <xref:System.Double> is a narrowing conversion and requires a cast operator (in C#) or a conversion method (in Visual Basic).</span></span> <span data-ttu-id="0ba6b-235">范围外的目标数据类型，这由目标类型定义的值`MinValue`和`MaxValue`属性下, 表中所示的行为。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-235">Values that are outside the range of the target data type, which are defined by the target type's `MinValue` and `MaxValue` properties, behave as shown in the following table.</span></span>  
  
|<span data-ttu-id="0ba6b-236">目标类型</span><span class="sxs-lookup"><span data-stu-id="0ba6b-236">Target type</span></span>|<span data-ttu-id="0ba6b-237">结果</span><span class="sxs-lookup"><span data-stu-id="0ba6b-237">Result</span></span>|  
|-----------------|------------|  
|<span data-ttu-id="0ba6b-238">任何整数类型</span><span class="sxs-lookup"><span data-stu-id="0ba6b-238">Any integral type</span></span>|<span data-ttu-id="0ba6b-239"><xref:System.OverflowException>异常，则转换发生在检查的上下文。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-239">An <xref:System.OverflowException> exception if the conversion occurs in a checked context.</span></span><br /><br /> <span data-ttu-id="0ba6b-240">如果转换发生在 unchecked 上下文 （C# 中默认值），转换操作成功，但值溢出。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-240">If the conversion occurs in an unchecked context (the default in C#), the conversion operation succeeds but the value overflows.</span></span>|  
|<xref:System.Decimal>|<span data-ttu-id="0ba6b-241"><xref:System.OverflowException>异常，</span><span class="sxs-lookup"><span data-stu-id="0ba6b-241">An <xref:System.OverflowException> exception,</span></span>|  
  
 <span data-ttu-id="0ba6b-242">此外， <xref:System.Single.NaN?displayProperty=nameWithType>， <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>，和<xref:System.Single.NegativeInfinity?displayProperty=nameWithType>引发<xref:System.OverflowException>转换为在 checked 的上下文中，但这些值溢出时转换为未选中的上下文内的整数的整数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-242">In addition, <xref:System.Single.NaN?displayProperty=nameWithType>, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> throw an <xref:System.OverflowException> for conversions to integers in a checked context, but these values overflow when converted to integers in an unchecked context.</span></span> <span data-ttu-id="0ba6b-243">转换到<xref:System.Decimal>，它们总是引发<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-243">For conversions to <xref:System.Decimal>, they always throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="0ba6b-244">转换到<xref:System.Double>，它们转换为<xref:System.Double.NaN?displayProperty=nameWithType>， <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>，和<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>分别。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-244">For conversions to <xref:System.Double>, they convert to <xref:System.Double.NaN?displayProperty=nameWithType>, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="0ba6b-245">请注意，精度损失可能造成从转换<xref:System.Single>到另一种数值类型的值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-245">Note that a loss of precision may result from converting a <xref:System.Single> value to another numeric type.</span></span> <span data-ttu-id="0ba6b-246">在将非整型的转换的情况下<xref:System.Single>值，如示例输出所示，小数部分时丢失<xref:System.Single>值舍入 （如 Visual Basic 中)，或者截断 （如 C# 中)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-246">In the case of converting non-integral <xref:System.Single> values, as the output from the example shows, the fractional component is lost when the <xref:System.Single> value is either rounded (as in Visual Basic) or truncated (as in C#).</span></span> <span data-ttu-id="0ba6b-247">转换到<xref:System.Decimal>值，<xref:System.Single>值中的目标数据类型不能有精确的表示形式。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-247">For conversions to <xref:System.Decimal> values, the <xref:System.Single> value may not have a precise representation in the target data type.</span></span>  
  
 <span data-ttu-id="0ba6b-248">以下示例将转换的数字<xref:System.Single>到几个其他数值类型的值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-248">The following example converts a number of <xref:System.Single> values to several other numeric types.</span></span> <span data-ttu-id="0ba6b-249">转换发生在 checked 上下文中在 Visual Basic （默认值） 和 C# 中 (由于[检查](~/docs/csharp/language-reference/keywords/checked.md)关键字)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-249">The conversions occur in a checked context in Visual Basic (the default) and in C# (because of the [checked](~/docs/csharp/language-reference/keywords/checked.md) keyword).</span></span> <span data-ttu-id="0ba6b-250">示例输出显示转换的结果中这两个检查未选中的上下文。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-250">The output from the example shows the result for conversions in both a checked an unchecked context.</span></span> <span data-ttu-id="0ba6b-251">可以在 Visual Basic 中未选中的上下文中执行转换，通过使用编译`/removeintchecks+`编译器开关和 C# 通过注释掉`checked`语句。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-251">You can perform conversions in an unchecked context in Visual Basic by compiling with the `/removeintchecks+` compiler switch and in C# by commenting out the `checked` statement.</span></span>  
  
 [!code-csharp[System.Single.Structure#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/convert2.cs#21)]
 [!code-vb[System.Single.Structure#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/convert2.vb#21)]  
  
 <span data-ttu-id="0ba6b-252">数值类型的转换的详细信息，请参阅[.NET Framework 中的类型转换](~/docs/standard/base-types/type-conversion.md)和[类型转换表](~/docs/standard/base-types/conversion-tables.md)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-252">For more information on the conversion of numeric types, see [Type Conversion in the .NET Framework](~/docs/standard/base-types/type-conversion.md) and [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md).</span></span>  
  
<a name="Functionality"></a>   
## <a name="floating-point-functionality"></a><span data-ttu-id="0ba6b-253">浮点功能</span><span class="sxs-lookup"><span data-stu-id="0ba6b-253">Floating-point functionality</span></span>  
 <span data-ttu-id="0ba6b-254"><xref:System.Single>结构和相关的类型提供多种方法来执行以下类别的操作：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-254">The <xref:System.Single> structure and related types provide methods to perform the following categories of operations:</span></span>  
  
-   <span data-ttu-id="0ba6b-255">**值比较**。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-255">**Comparison of values**.</span></span> <span data-ttu-id="0ba6b-256">你可以调用<xref:System.Single.Equals%2A>方法来确定是否两个<xref:System.Single>值是否相等，则<xref:System.Single.CompareTo%2A>方法来确定两个值之间的关系。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-256">You can call the <xref:System.Single.Equals%2A> method to determine whether two <xref:System.Single> values are equal, or the <xref:System.Single.CompareTo%2A> method to determine the relationship between two values.</span></span>  
  
     <span data-ttu-id="0ba6b-257"><xref:System.Single>结构还支持一组完整的比较运算符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-257">The <xref:System.Single> structure also supports a complete set of comparison operators.</span></span> <span data-ttu-id="0ba6b-258">例如，你可以测试相等，或确定一个值是否大于或等于另一个值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-258">For example, you can test for equality or inequality, or determine whether one value is greater than or equal to another value.</span></span> <span data-ttu-id="0ba6b-259">如果其中一个操作数是<xref:System.Double>、<xref:System.Single>值转换为<xref:System.Double>之前执行比较。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-259">If one of the operands is a <xref:System.Double>, the <xref:System.Single> value is converted to a <xref:System.Double> before performing the comparison.</span></span> <span data-ttu-id="0ba6b-260">如果其中一个操作数为整数类型，它将转换为<xref:System.Single>之前执行比较。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-260">If one of the operands is an integral type, it is converted to a <xref:System.Single> before performing the comparison.</span></span> <span data-ttu-id="0ba6b-261">虽然这些扩大转换，但它们可能需要精度损失。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-261">Although these are widening conversions, they may involve a loss of precision.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="0ba6b-262">由于的精度，差异两个<xref:System.Single>应相等的值可能会发现不相等，这会影响比较的结果。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-262">Because of differences in precision, two <xref:System.Single> values that you expect to be equal may turn out to be unequal, which affects the result of the comparison.</span></span> <span data-ttu-id="0ba6b-263">请参阅[相等性测试](#Equality)比较两个有关详细信息的部分<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-263">See the [Testing for equality](#Equality) section for more information about comparing two <xref:System.Single> values.</span></span>  
  
     <span data-ttu-id="0ba6b-264">你还可以调用<xref:System.Single.IsNaN%2A>， <xref:System.Single.IsInfinity%2A>， <xref:System.Single.IsPositiveInfinity%2A>，和<xref:System.Single.IsNegativeInfinity%2A>方法来测试这些特殊值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-264">You can also call the <xref:System.Single.IsNaN%2A>, <xref:System.Single.IsInfinity%2A>, <xref:System.Single.IsPositiveInfinity%2A>, and <xref:System.Single.IsNegativeInfinity%2A> methods to test for these special values.</span></span>  
  
-   <span data-ttu-id="0ba6b-265">**数学运算**。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-265">**Mathematical operations**.</span></span> <span data-ttu-id="0ba6b-266">按语言编译器和公共中间语言 (CIL) 说明而不是实现常见的算术运算，例如加法、 减法、 乘法和除法<xref:System.Single>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-266">Common arithmetic operations such as addition, subtraction, multiplication, and division are implemented by language compilers and Common Intermediate Language (CIL) instructions rather than by <xref:System.Single> methods.</span></span> <span data-ttu-id="0ba6b-267">如果数学运算中的另一个操作数是<xref:System.Double>、<xref:System.Single>转换为<xref:System.Double>执行此操作和操作的结果也是之前<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-267">If the other operand in a mathematical operation is a <xref:System.Double>, the <xref:System.Single> is converted to a <xref:System.Double> before performing the operation, and the result of the operation is also a <xref:System.Double> value.</span></span> <span data-ttu-id="0ba6b-268">如果另一个操作数是整数类型，它将转换为<xref:System.Single>执行此操作和操作的结果也是之前<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-268">If the other operand is an integral type, it is converted to a <xref:System.Single> before performing the operation, and the result of the operation is also a <xref:System.Single> value.</span></span>  
  
     <span data-ttu-id="0ba6b-269">你可以通过调用来执行其他数学运算`static`(`Shared`在 Visual Basic 中) 中的方法<xref:System.Math?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-269">You can perform other mathematical operations by calling `static` (`Shared` in Visual Basic) methods in the <xref:System.Math?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="0ba6b-270">其中包括常用于算术的其他方法 (如<xref:System.Math.Abs%2A?displayProperty=nameWithType>， <xref:System.Math.Sign%2A?displayProperty=nameWithType>，和<xref:System.Math.Sqrt%2A?displayProperty=nameWithType>)，geometry (如<xref:System.Math.Cos%2A?displayProperty=nameWithType>和<xref:System.Math.Sin%2A?displayProperty=nameWithType>)，和微积分 (如<xref:System.Math.Log%2A?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-270">These include additional methods commonly used for arithmetic (such as <xref:System.Math.Abs%2A?displayProperty=nameWithType>, <xref:System.Math.Sign%2A?displayProperty=nameWithType>, and <xref:System.Math.Sqrt%2A?displayProperty=nameWithType>), geometry (such as <xref:System.Math.Cos%2A?displayProperty=nameWithType> and <xref:System.Math.Sin%2A?displayProperty=nameWithType>), and calculus (such as <xref:System.Math.Log%2A?displayProperty=nameWithType>).</span></span>  <span data-ttu-id="0ba6b-271">在所有情况下，<xref:System.Single>值转换为<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-271">In all cases, the <xref:System.Single> value is converted to a <xref:System.Double>.</span></span>  
  
     <span data-ttu-id="0ba6b-272">您还可以操作中的单个位<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-272">You can also manipulate the individual bits in a <xref:System.Single> value.</span></span> <span data-ttu-id="0ba6b-273"><xref:System.BitConverter.GetBytes%28System.Single%29?displayProperty=nameWithType>方法返回其位模式中的字节数组。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-273">The <xref:System.BitConverter.GetBytes%28System.Single%29?displayProperty=nameWithType> method returns its bit pattern in a byte array.</span></span>  <span data-ttu-id="0ba6b-274">通过将传递到该字节数组<xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType>方法，你可以还保留<xref:System.Single>值的位模式中的 32 位整数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-274">By passing that byte array to the <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> method, you can also preserve the <xref:System.Single> value's bit pattern in a 32-bit integer.</span></span>  
  
-   <span data-ttu-id="0ba6b-275">**舍入**。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-275">**Rounding**.</span></span> <span data-ttu-id="0ba6b-276">舍入通常用作一种技术来减少引起问题的浮点表示形式和精度值之间的差异的影响。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-276">Rounding is often used as a technique for reducing the impact of differences between values caused by problems of floating-point representation and precision.</span></span> <span data-ttu-id="0ba6b-277">您可以舍入<xref:System.Single>值通过调用<xref:System.Math.Round%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-277">You can round a <xref:System.Single> value by calling the <xref:System.Math.Round%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0ba6b-278">但请注意，<xref:System.Single>值转换为<xref:System.Double>调用该方法，并转换可能涉及精度损失之前。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-278">However, note  that the <xref:System.Single> value is converted to a <xref:System.Double> before the method is called, and the conversion can involve a loss of precision.</span></span>  
  
-   <span data-ttu-id="0ba6b-279">**格式设置**。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-279">**Formatting**.</span></span> <span data-ttu-id="0ba6b-280">你可以将转换<xref:System.Single>为通过调用其字符串表示形式的值<xref:System.Single.ToString%2A>方法或通过使用[复合格式设置](~/docs/standard/base-types/composite-formatting.md)功能。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-280">You can convert a <xref:System.Single> value to its string representation by calling the <xref:System.Single.ToString%2A> method or by using the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature.</span></span> <span data-ttu-id="0ba6b-281">有关如何格式字符串控制浮点值的字符串表示的信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)主题。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-281">For information about how format strings control the string representation of floating-point values, see the [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md) topics.</span></span>  
  
-   <span data-ttu-id="0ba6b-282">**分析字符串**。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-282">**Parsing strings**.</span></span> <span data-ttu-id="0ba6b-283">你可以将转换为浮点值的字符串表示<xref:System.Single>值通过调用<xref:System.Single.Parse%2A>或<xref:System.Single.TryParse%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-283">You can convert the string representation of a floating-point value to a <xref:System.Single> value by calling the <xref:System.Single.Parse%2A> or <xref:System.Single.TryParse%2A> method.</span></span> <span data-ttu-id="0ba6b-284">如果分析操作失败，<xref:System.Single.Parse%2A>方法引发异常，而<xref:System.Single.TryParse%2A>方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-284">If the parse operation fails, the <xref:System.Single.Parse%2A> method throws an exception, whereas the <xref:System.Single.TryParse%2A> method returns `false`.</span></span>  
  
-   <span data-ttu-id="0ba6b-285">**类型转换**。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-285">**Type conversion**.</span></span> <span data-ttu-id="0ba6b-286"><xref:System.Single>结构可提供的显式接口实现<xref:System.IConvertible>接口，支持任何两个的标准.NET Framework 数据类型之间的转换。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-286">The <xref:System.Single> structure provides an explicit interface implementation for the <xref:System.IConvertible> interface, which supports conversion between any two standard .NET Framework data types.</span></span> <span data-ttu-id="0ba6b-287">语言编译器还支持所有其他标准数值类型除外的转换值的隐式转换<xref:System.Double>到<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-287">Language compilers also support the implicit conversion of values for all other standard numeric types except for the conversion of <xref:System.Double> to <xref:System.Single> values.</span></span> <span data-ttu-id="0ba6b-288">以外的其他任何标准数值类型的值转换<xref:System.Double>到<xref:System.Single>的扩大转换和不需要使用强制转换运算符或转换方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-288">Conversion of a value of any standard numeric type other than a <xref:System.Double> to a <xref:System.Single> is a widening conversion and does not require the use of a casting operator or conversion method.</span></span>  
  
     <span data-ttu-id="0ba6b-289">但是，32 位和 64 位整数值的转换可能涉及精度损失。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-289">However, conversion of 32-bit and 64-bit integer values can involve a loss of precision.</span></span> <span data-ttu-id="0ba6b-290">下表列出了适用于 32 位，64 位精度的差异和<xref:System.Double>类型：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-290">The following table lists the differences in precision for 32-bit, 64-bit, and <xref:System.Double> types:</span></span>  
  
    |<span data-ttu-id="0ba6b-291">类型</span><span class="sxs-lookup"><span data-stu-id="0ba6b-291">Type</span></span>|<span data-ttu-id="0ba6b-292">（在十进制数字） 的最大精度</span><span class="sxs-lookup"><span data-stu-id="0ba6b-292">Maximum precision (in decimal digits)</span></span>|<span data-ttu-id="0ba6b-293">内部精度 （十进制数字）</span><span class="sxs-lookup"><span data-stu-id="0ba6b-293">Internal precision (in decimal digits)</span></span>|  
    |----------|---------------------------------------------|----------------------------------------------|  
    |<xref:System.Double>|<span data-ttu-id="0ba6b-294">15</span><span class="sxs-lookup"><span data-stu-id="0ba6b-294">15</span></span>|<span data-ttu-id="0ba6b-295">17</span><span class="sxs-lookup"><span data-stu-id="0ba6b-295">17</span></span>|  
    |<span data-ttu-id="0ba6b-296"><xref:System.Int32> 和 <xref:System.UInt32></span><span class="sxs-lookup"><span data-stu-id="0ba6b-296"><xref:System.Int32> and <xref:System.UInt32></span></span>|<span data-ttu-id="0ba6b-297">10</span><span class="sxs-lookup"><span data-stu-id="0ba6b-297">10</span></span>|<span data-ttu-id="0ba6b-298">10</span><span class="sxs-lookup"><span data-stu-id="0ba6b-298">10</span></span>|  
    |<span data-ttu-id="0ba6b-299"><xref:System.Int64> 和 <xref:System.UInt64></span><span class="sxs-lookup"><span data-stu-id="0ba6b-299"><xref:System.Int64> and <xref:System.UInt64></span></span>|<span data-ttu-id="0ba6b-300">19</span><span class="sxs-lookup"><span data-stu-id="0ba6b-300">19</span></span>|<span data-ttu-id="0ba6b-301">19</span><span class="sxs-lookup"><span data-stu-id="0ba6b-301">19</span></span>|  
    |<xref:System.Single>|<span data-ttu-id="0ba6b-302">7</span><span class="sxs-lookup"><span data-stu-id="0ba6b-302">7</span></span>|<span data-ttu-id="0ba6b-303">9</span><span class="sxs-lookup"><span data-stu-id="0ba6b-303">9</span></span>|  
  
     <span data-ttu-id="0ba6b-304">精度问题最常影响<xref:System.Single>值转换为<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-304">The problem of precision most frequently affects <xref:System.Single> values that are converted to <xref:System.Double> values.</span></span> <span data-ttu-id="0ba6b-305">在下面的示例中，由相同的除法运算的两个值是否不相等，因为值之一是单精度浮点值转换为<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-305">In the following example, two values produced by identical division operations are unequal, because one of the values is a single-precision floating point value that is converted to a <xref:System.Double>.</span></span>  
  
     [!code-csharp[System.Single.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/precisionlist1.cs#5)]
     [!code-vb[System.Single.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/precisionlist1.vb#5)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="0ba6b-306">此类型的所有成员都是线程安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ba6b-306">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="0ba6b-307">实际上，看起来要修改实例状态的成员返回使用新值初始化的新实例。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ba6b-307">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="0ba6b-308">作为与任何其他类型，读取和写入到共享的变量，其中包含此类型的实例必须受使用锁来确保的线程安全性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0ba6b-308">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Decimal" />
    <altmember cref="T:System.Double" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ba6b-309">将此实例与指定对象或其他 <see cref="T:System.Single" /> 实例进行比较，并返回一个整数，该整数指示此实例的值是小于、等于还是大于指定对象或其他 <see cref="T:System.Single" /> 实例的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-309">Compares this instance to a specified object or to another <see cref="T:System.Single" /> instance and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object or the other <see cref="T:System.Single" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="single.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0ba6b-310">要比较的对象，或为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-310">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-311">将此实例与指定对象进行比较，并返回一个整数，该整数指示此实例的值是小于、等于还是大于指定对象的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-311">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-312">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-312">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="0ba6b-313">
            <list type="table">
              <listheader>
                <term> 返回值  </term>
                <description> 描述  </description>
              </listheader>
              <item>
                <term> 小于零  </term>
                <description> 此实例小于 <paramref name="value" />。  - 或 -  此实例不是数字 (<see cref="F:System.Single.NaN" />)，而 <paramref name="value" /> 是数字。</description>
              </item>
              <item>
                <term> 零  </term>
                <description> 此实例等于 <paramref name="value" />。  - 或 -  此实例和值均不为数字 (<see cref="F:System.Single.NaN" />)、<see cref="F:System.Single.PositiveInfinity" /> 或 <see cref="F:System.Single.NegativeInfinity" />。</description>
              </item>
              <item>
                <term> 大于零  </term>
                <description> 此实例大于 <paramref name="value" />。  - 或 -  此实例是数字，而 <paramref name="value" /> 不是数字 (<see cref="F:System.Single.NaN" />)。  - 或 -  <paramref name="value" /> 为 <see langword="null" />。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-313">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is less than <paramref name="value" />.  -or-  This instance is not a number (<see cref="F:System.Single.NaN" />) and <paramref name="value" /> is a number.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  -or-  This instance and value are both not a number (<see cref="F:System.Single.NaN" />), <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is greater than <paramref name="value" />.  -or-  This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Single.NaN" />).  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-314">`value`参数必须是`null`或实例<xref:System.Single>; 否则为将引发异常。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-314">The `value` parameter must be `null` or an instance of <xref:System.Single>; otherwise, an exception is thrown.</span></span> <span data-ttu-id="0ba6b-315">任何实例<xref:System.Single>，无论其值被视为大于`null`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-315">Any instance of <xref:System.Single>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="0ba6b-316">值必须完全相同，将被视为相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-316">Values must be identical to be considered equal.</span></span> <span data-ttu-id="0ba6b-317">尤其是当浮点值依赖于多个数学运算，它是一种常见的他们丢失精度输入其值是除其最低有效位数几乎完全相同。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-317">Particularly when floating-point values depend on multiple mathematical operations, it is common for them to lose precision and for their values to be nearly identical except for their least significant digits.</span></span> <span data-ttu-id="0ba6b-318">因此，返回值的<xref:System.Single.CompareTo%2A>方法看上去可能令人惊讶的时段。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-318">Because of this, the return value of the <xref:System.Single.CompareTo%2A> method may seem surprising at times.</span></span> <span data-ttu-id="0ba6b-319">例如，通过同样的值跟除法的特定值的乘法应生成原始值，但在以下示例中，计算的值被证明大于原始值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-319">For example, multiplication by a particular value followed by division by the same value should produce the original value, but in the following example, the computed value turns out to be greater than the original value.</span></span> <span data-ttu-id="0ba6b-320">通过使用"R"显示两个值的所有有效位数[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)指示该计算的值不同于其最低有效位数中的原始值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-320">Showing all significant digits of the two values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) indicates that the computed value differs from the original value in its least significant digits.</span></span> <span data-ttu-id="0ba6b-321">有关处理这种比较的信息，请参阅备注部分的<xref:System.Single.Equals%28System.Single%29>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-321">For information about handling such comparisons, see the Remarks section of the <xref:System.Single.Equals%28System.Single%29> method.</span></span>  
  
 [!code-csharp[System.Single.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.compareto/cs/compareto3.cs#2)]
 [!code-vb[System.Single.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.compareto/vb/compareto3.vb#2)]  
  
 <span data-ttu-id="0ba6b-322">实现此方法是为了支持<xref:System.IComparable>接口。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-322">This method is implemented to support the <xref:System.IComparable> interface.</span></span> <span data-ttu-id="0ba6b-323">请注意，尽管<xref:System.Single.NaN>不被视为可等于另一个<xref:System.Single.NaN>（即使是其自身），<xref:System.IComparable>接口也要求`A.CompareTo(A)`返回零。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-323">Note that, although a <xref:System.Single.NaN> is not considered to be equal to another <xref:System.Single.NaN> (even itself), the <xref:System.IComparable> interface requires that `A.CompareTo(A)` return zero.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="0ba6b-324">在比较中的精度</span><span class="sxs-lookup"><span data-stu-id="0ba6b-324">Precision in Comparisons</span></span>  
 <span data-ttu-id="0ba6b-325">超出有案可稽的精度的浮点数的精度是特定于实现和.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-325">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="0ba6b-326">因此，两个特定的数字的比较可能会更改.NET Framework 各版本之间因为精度的数字的内部表示形式可能会更改。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-326">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-327">下面的代码示例演示<xref:System.Single.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-327">The following code example demonstrates the <xref:System.Single.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[System.Single#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#16)]
 [!code-csharp[System.Single#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#16)]
 [!code-vb[System.Single#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0ba6b-328">
            <paramref name="value" /> 不是 <see cref="T:System.Single" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-328">
              <paramref name="value" /> is not a <see cref="T:System.Single" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Single.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.CompareTo(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(float value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : single -&gt; int&#xA;override this.CompareTo : single -&gt; int" Usage="single.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0ba6b-329">要比较的单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-329">A single-precision floating-point number to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-330">将此实例与指定的单精度浮点数进行比较，并返回一个整数，该整数指示此实例的值是小于、等于还是大于指定单精度浮点数的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-330">Compares this instance to a specified single-precision floating-point number and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-331">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-331">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="0ba6b-332">
            <list type="table">
              <listheader>
                <term> 返回值  </term>
                <description> 描述  </description>
              </listheader>
              <item>
                <term> 小于零  </term>
                <description> 此实例小于 <paramref name="value" />。  - 或 -  此实例不是数字 (<see cref="F:System.Single.NaN" />)，而 <paramref name="value" /> 是数字。</description>
              </item>
              <item>
                <term> 零  </term>
                <description> 此实例等于 <paramref name="value" />。- 或 -  此实例和 <paramref name="value" /> 均不为数字 (<see cref="F:System.Single.NaN" />)、<see cref="F:System.Single.PositiveInfinity" /> 或 <see cref="F:System.Single.NegativeInfinity" />。</description>
              </item>
              <item>
                <term> 大于零  </term>
                <description> 此实例大于 <paramref name="value" />。  - 或 -  此实例是数字，而 <paramref name="value" /> 不是数字 (<see cref="F:System.Single.NaN" />)。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-332">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance is less than <paramref name="value" />.  -or-  This instance is not a number (<see cref="F:System.Single.NaN" />) and <paramref name="value" /> is a number.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance is equal to <paramref name="value" />.  -or-  Both this instance and <paramref name="value" /> are not a number (<see cref="F:System.Single.NaN" />), <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance is greater than <paramref name="value" />.  -or-  This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Single.NaN" />).  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-333">值必须完全相同，将被视为相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-333">Values must be identical to be considered equal.</span></span> <span data-ttu-id="0ba6b-334">很常见的浮点值丢失精度和变得几乎完全相同，但其最低有效位数，除外，尤其是当的值取决于多个数学运算。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-334">It is common for floating-point values to lose precision and to become nearly identical except for their least significant digits, especially when the values depend on multiple mathematical operations.</span></span> <span data-ttu-id="0ba6b-335">因此，返回值的<xref:System.Single.CompareTo%2A>方法有时看上去可能令人惊讶。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-335">Because of this, the return value of the <xref:System.Single.CompareTo%2A> method at times may seem surprising.</span></span> <span data-ttu-id="0ba6b-336">例如，任何值后, 接除法同样的值乘以应生成原始值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-336">For example, multiplication by any value followed by division by the same value should produce the original value.</span></span> <span data-ttu-id="0ba6b-337">但是，在下面的示例中，计算的值被证明大于原始值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-337">However, in the following example, the computed value turns out to be greater than the original value.</span></span> <span data-ttu-id="0ba6b-338">通过使用"R"显示两个值的所有有效位数[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)指示该计算的值不同于其最低有效位数中的原始值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-338">Showing all significant digits of the two values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) indicates that the computed value differs from the original value in its least significant digits.</span></span> <span data-ttu-id="0ba6b-339">有关处理这种比较的信息，请参阅备注部分的<xref:System.Single.Equals%28System.Single%29>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-339">For information about handling such comparisons, see the Remarks section of the <xref:System.Single.Equals%28System.Single%29> method.</span></span>  
  
 [!code-csharp[System.Single.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.compareto/cs/compareto2.cs#1)]
 [!code-vb[System.Single.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.compareto/vb/compareto2.vb#1)]  
  
 <span data-ttu-id="0ba6b-340">此方法实现<xref:System.IComparable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.Single.CompareTo%2A?displayProperty=nameWithType>方法因为它不具有要转换`value`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-340">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Single.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="0ba6b-341">请注意，虽然一个对象，其值是<xref:System.Single.NaN>不被视为等于另一个对象，其值是<xref:System.Single.NaN>（即使是其自身），<xref:System.IComparable%601>接口也要求`A.CompareTo(A)`返回零。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-341">Note that, although an object whose value is <xref:System.Single.NaN> is not considered equal to another object whose value is <xref:System.Single.NaN> (even itself), the <xref:System.IComparable%601> interface requires that `A.CompareTo(A)` return zero.</span></span>  
  
## <a name="widening-conversions"></a><span data-ttu-id="0ba6b-342">扩大转换</span><span class="sxs-lookup"><span data-stu-id="0ba6b-342">Widening Conversions</span></span>  
 <span data-ttu-id="0ba6b-343">具体取决于您的编程语言，它可能会对代码<xref:System.Single.CompareTo%2A>其中的参数类型具有较少的位的方法 （为较窄） 比实例类型。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-343">Depending on your programming language, it might be possible to code a <xref:System.Single.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="0ba6b-344">这可能是因为某些编程语言中执行的隐式的扩大转换，它表示具有任意数量的位的实例作为类型参数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-344">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="0ba6b-345">例如，假设实例类型是<xref:System.Single>和参数类型是<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-345">For example, suppose the instance type is <xref:System.Single> and the parameter type is <xref:System.Int32>.</span></span> <span data-ttu-id="0ba6b-346">Microsoft C# 编译器生成的指令来表示形式的参数值<xref:System.Single>对象，然后生成<xref:System.Single.CompareTo%28System.Single%29?displayProperty=nameWithType>比较实例的值和参数的扩大的表示的方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-346">The Microsoft C# compiler generates instructions to represent the value of the parameter as a <xref:System.Single> object, then generates a <xref:System.Single.CompareTo%28System.Single%29?displayProperty=nameWithType> method that compares the values of the instance and the widened representation of the parameter.</span></span>  
  
 <span data-ttu-id="0ba6b-347">咨询你的编程语言的文档，以确定其编译器是否执行数值类型的隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-347">Consult your programming language's documentation to determine if its compiler performs implicit widening conversions of numeric types.</span></span> <span data-ttu-id="0ba6b-348">有关详细信息，请参阅[类型转换表](~/docs/standard/base-types/conversion-tables.md)主题。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-348">For more information, see the [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md) topic.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="0ba6b-349">在比较中的精度</span><span class="sxs-lookup"><span data-stu-id="0ba6b-349">Precision in Comparisons</span></span>  
 <span data-ttu-id="0ba6b-350">超出有案可稽的精度的浮点数的精度是特定于实现和.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-350">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="0ba6b-351">因此，两个特定的数字的比较可能会更改.NET Framework 各版本之间因为精度的数字的内部表示形式可能会更改。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-351">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-352">下面的代码示例演示泛型和非泛型版本的<xref:System.Single.CompareTo%2A>多个值和引用类型的方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-352">The following code example demonstrates generic and nongeneric versions of the <xref:System.Single.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Epsilon">
      <MemberSignature Language="C#" Value="public const float Epsilon = 1.401298E-45;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 Epsilon = float32(1.401298E-45)" />
      <MemberSignature Language="DocId" Value="F:System.Single.Epsilon" />
      <MemberSignature Language="VB.NET" Value="Public Const Epsilon As Single  = 1.401298E-45" />
      <MemberSignature Language="C++ CLI" Value="public: float Epsilon = 1.401298E-45;" />
      <MemberSignature Language="F#" Value="val mutable Epsilon : single" Usage="System.single.Epsilon" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>1.401298E-45</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ba6b-353">表示大于零的最小正 <see cref="T:System.Single" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-353">Represents the smallest positive <see cref="T:System.Single" /> value that is greater than zero.</span>
          </span>
          <span data-ttu-id="0ba6b-354">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-354">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-355">值<xref:System.Single.Epsilon>属性反映的最小正<xref:System.Single>很重要数字的操作或比较的值时的值<xref:System.Single>实例为零。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-355">The value of the <xref:System.Single.Epsilon> property reflects the smallest positive <xref:System.Single> value that is significant in numeric operations or comparisons when the value of the <xref:System.Single> instance is zero.</span></span> <span data-ttu-id="0ba6b-356">例如，以下代码所示，零和<xref:System.Single.Epsilon>被视为不相等的值，而零和一半的值<xref:System.Single.Epsilon>被视为相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-356">For example, the following code shows that zero and <xref:System.Single.Epsilon> are considered to be unequal values, whereas zero and half the value of <xref:System.Single.Epsilon> are considered to be equal.</span></span>  
  
 [!code-csharp[System.Single.Epsilon#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Epsilon/cs/epsilon.cs#5)]
 [!code-vb[System.Single.Epsilon#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Epsilon/vb/epsilon.vb#5)]  
  
 <span data-ttu-id="0ba6b-357">更确切地说，单精度浮点格式包含一个符号、 一个 23 位尾数或有效位数和一个 8 位指数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-357">More precisely, the single-precision floating-point format consists of a sign, a 23-bit mantissa or significand, and an 8-bit exponent.</span></span> <span data-ttu-id="0ba6b-358">如下面的示例所示，零将具有-126 指数和尾数的 0。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-358">As the following example shows, zero has an exponent of -126 and a mantissa of 0.</span></span> <span data-ttu-id="0ba6b-359"><xref:System.Single.Epsilon> 具有-126 指数和尾数的 1。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-359"><xref:System.Single.Epsilon> has an exponent of -126 and a mantissa of 1.</span></span> <span data-ttu-id="0ba6b-360">这意味着，<xref:System.Single.Epsilon?displayProperty=nameWithType>是最小正<xref:System.Single>值是否大于零，表示最小可能值和最小可能增量<xref:System.Single>其指数是-126。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-360">This means that <xref:System.Single.Epsilon?displayProperty=nameWithType> is the smallest positive <xref:System.Single> value that is greater than zero and represents the smallest possible value and the smallest possible increment for a <xref:System.Single> whose exponent is -126.</span></span>  
  
 [!code-csharp[System.Single.Epsilon#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Epsilon/cs/epsilon1.cs#6)]
 [!code-vb[System.Single.Epsilon#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Epsilon/vb/epsilon1.vb#6)]  
  
 <span data-ttu-id="0ba6b-361">但是，<xref:System.Single.Epsilon>属性不是常规度量值的精度<xref:System.Single>键入; 它仅适用于<xref:System.Single>具有零值的实例。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-361">However, the <xref:System.Single.Epsilon> property is not a general measure of precision of the <xref:System.Single> type; it applies only to <xref:System.Single> instances that have a value of zero.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ba6b-362">值<xref:System.Single.Epsilon>属性不是等效于计算机 epsilon，表示相对的错误，因为浮点算术舍入的上限。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-362">The value of the <xref:System.Single.Epsilon> property is not equivalent to machine epsilon, which represents the upper bound of the relative error due to rounding in floating-point arithmetic.</span></span>  
  
 <span data-ttu-id="0ba6b-363">此常量的值为 1.4 e-45。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-363">The value of this constant is 1.4e-45.</span></span>  
  
 <span data-ttu-id="0ba6b-364">两个显然是等效的浮点数的比较结果可能会为不相等，由于其最低有效位的差异。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-364">Two apparently equivalent floating-point numbers might not compare equal because of differences in their least significant digits.</span></span> <span data-ttu-id="0ba6b-365">例如，C# 表达式`(float)1/3 == (float)0.33333`，不比较相等的因为在左侧的除法运算具有最大精度，而右侧常量是仅精确到指定的位数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-365">For example, the C# expression, `(float)1/3 == (float)0.33333`, does not compare equal because the division operation on the left side has maximum precision while the constant on the right side is precise only to the specified digits.</span></span> <span data-ttu-id="0ba6b-366">如果你创建自定义算法来确定是否可视为两个浮点数字相等，则必须使用一个值，大于<xref:System.Single.Epsilon>要建立两个值的差异的可接受绝对边距常量视为相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-366">If you create a custom algorithm that determines whether two floating-point numbers can be considered equal, you must use a value that is greater than the <xref:System.Single.Epsilon> constant to establish the acceptable absolute margin of difference for the two values to be considered equal.</span></span> <span data-ttu-id="0ba6b-367">(通常情况下，相应的边距的差异大于多次<xref:System.Single.Epsilon>。)</span><span class="sxs-lookup"><span data-stu-id="0ba6b-367">(Typically, that margin of difference is many times greater than <xref:System.Single.Epsilon>.)</span></span>  
  
## <a name="platform-notes"></a><span data-ttu-id="0ba6b-368">平台说明</span><span class="sxs-lookup"><span data-stu-id="0ba6b-368">Platform Notes</span></span>  
 <span data-ttu-id="0ba6b-369">ARM 系统的值上<xref:System.Single.Epsilon>常量是太小以致无法检测到，因此它相当于零。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-369">On ARM systems, the value of the <xref:System.Single.Epsilon> constant is too small to be detected, so it equates to zero.</span></span> <span data-ttu-id="0ba6b-370">你可以定义等于 1.175494351E 备用 epsilon 值-38 相反。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-370">You can define an alternative epsilon value that equals 1.175494351E-38 instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ba6b-371">返回一个值，该值指示 <see cref="T:System.Single" /> 的两个实例是否表示同一个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-371">Returns a value indicating whether two instances of <see cref="T:System.Single" /> represent the same value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="single.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0ba6b-372">与此实例进行比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-372">An object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-373">返回一个值，该值指示此实例是否等于指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-373">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-374">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.Single" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-374">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Single" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-375"><xref:System.Single.Equals%2A>方法应多加小心，因为两个显然相等的值可能会由于不同的两个值的精度不相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-375">The <xref:System.Single.Equals%2A> method should be used with caution, because two apparently equivalent values can be unequal due to the differing precision of the two values.</span></span> <span data-ttu-id="0ba6b-376">下面的示例报告<xref:System.Single>值.3333 和<xref:System.Single>返回除以 1 3 是否不相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-376">The following example reports that the <xref:System.Single> value .3333 and the <xref:System.Single> returned by dividing 1 by 3 are unequal.</span></span>  
  
 [!code-csharp[System.Single.Epsilon#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Epsilon/cs/SingleEquals_25051.cs#3)]
 [!code-vb[System.Single.Epsilon#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Epsilon/vb/SingleEquals_25051.vb#3)]  
  
 <span data-ttu-id="0ba6b-377">而不是比较相等性，建议采用的一种方法是定义两个值之间的差异可接受范围 (如。 01%的值之一)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-377">Rather than comparing for equality, one recommended technique involves defining an acceptable margin of difference between two values (such as .01% of one of the values).</span></span> <span data-ttu-id="0ba6b-378">如果两个值之间的差异的绝对值是小于或等于该边距，区别是可能是由于精度的不同，并因此的值很可能相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-378">If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to differences in precision and, therefore, the values are likely to be equal.</span></span> <span data-ttu-id="0ba6b-379">下面的示例使用此方法来比较.33333 和 1/3，这两个<xref:System.Single>前面的代码示例找到要不相等的值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-379">The following example uses this technique to compare .33333 and 1/3, the two <xref:System.Single> values that the previous code example found to be unequal.</span></span>  
  
 [!code-csharp[System.Single.Epsilon#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Epsilon/cs/SingleEquals_25051.cs#4)]
 [!code-vb[System.Single.Epsilon#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Epsilon/vb/SingleEquals_25051.vb#4)]  
  
 <span data-ttu-id="0ba6b-380">在这种情况下，值相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-380">In this case, the values are equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ba6b-381">因为<xref:System.Single.Epsilon>定义的最小的表达式必须大于差异的边距其范围是接近于零的正值， <xref:System.Single.Epsilon>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-381">Because <xref:System.Single.Epsilon> defines the minimum expression of a positive value whose range is near zero, the margin of difference must be greater than <xref:System.Single.Epsilon>.</span></span> <span data-ttu-id="0ba6b-382">通常情况下，大于多次<xref:System.Single.Epsilon>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-382">Typically, it is many times greater than <xref:System.Single.Epsilon>.</span></span>  
  
 <span data-ttu-id="0ba6b-383">超出有案可稽的精度的浮点数的精度是特定于实现和.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-383">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="0ba6b-384">因此，两个特定的数字的比较可能会更改.NET Framework 各版本之间因为精度的数字的内部表示形式可能会更改。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-384">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-385">下面的代码示例演示<xref:System.Single.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-385">The following code example demonstrates the <xref:System.Single.Equals%2A> method.</span></span>  
  
 [!code-cpp[System.Single#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#17)]
 [!code-csharp[System.Single#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#17)]
 [!code-vb[System.Single#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#17)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="0ba6b-386">
            <para>编译器重载决策可能应对明显的差异的两个行为<see cref="M:System.Single.Equals(System.Object)" />方法重载。如果之间的隐式转换<paramref name="obj" />自变量和一个<see cref="T:System.Single" />定义和自变量并不类型化为<see cref="T:System.Object" />，编译器可能会执行隐式转换和调用<see cref="M:System.Single.Equals(System.Single)" />方法。否则，它们调用<see cref="M:System.Single.Equals(System.Object)" />方法，始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.Single" />值。下面的示例阐释了两个方法重载之间的行为差异。对于所有的基元数值类型，除<see cref="T:System.Double" />在 Visual Basic 和除<see cref="T:System.Decimal" />和<see cref="T:System.Double" />C# 中的第一个比较返回<see langword="true" />因为编译器自动执行一个的扩大转换，调用<see cref="M:System.Single.Equals(System.Single)" />方法，而第二个比较返回<see langword="false" />由于编译器调用<see cref="M:System.Single.Equals(System.Object)" />方法。 [！ code-csharp[System.Single.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.equals/cs/equalsoverl.cs#2)][！ code-vb[System.Single.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.equals/vb/equalsoverl.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-386">
              <para>Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Single.Equals(System.Object)" /> method overloads. If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Single" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Single.Equals(System.Single)" /> method. Otherwise, they call the <see cref="M:System.Single.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Single" /> value. The following example illustrates the difference in behavior between the two method overloads. In the case of all primitive numeric types except for <see cref="T:System.Double" /> in Visual Basic and except for <see cref="T:System.Decimal" /> and <see cref="T:System.Double" /> in C#, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Single.Equals(System.Single)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Single.Equals(System.Object)" /> method.  [!code-csharp[System.Single.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Single.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.equals/vb/equalsoverl.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Single.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (float obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(float32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.Equals(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(float obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : single -&gt; bool" Usage="single.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0ba6b-387">与此实例进行比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-387">An object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-388">返回一个值，该值指示此实例和指定的 <see cref="T:System.Single" /> 对象是否表示相同的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-388">Returns a value indicating whether this instance and a specified <see cref="T:System.Single" /> object represent the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-389">如果 <paramref name="obj" /> 等于此实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-389">
              <see langword="true" /> if <paramref name="obj" /> is equal to this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-390">此方法实现<xref:System.IEquatable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.Single.Equals%2A>因为它不具有要转换`obj`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-390">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Single.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
## <a name="widening-conversions"></a><span data-ttu-id="0ba6b-391">扩大转换</span><span class="sxs-lookup"><span data-stu-id="0ba6b-391">Widening Conversions</span></span>  
 <span data-ttu-id="0ba6b-392">具体取决于您的编程语言，它可能会对代码<xref:System.Single.Equals%2A>其中的参数类型具有较少的位的方法 （为较窄） 比实例类型。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-392">Depending on your programming language, it might be possible to code an <xref:System.Single.Equals%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="0ba6b-393">这可能是因为某些编程语言中执行的隐式的扩大转换，它表示具有任意数量的位的实例作为类型参数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-393">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="0ba6b-394">例如，假设实例类型是<xref:System.Single>和参数类型是<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-394">For example, suppose the instance type is <xref:System.Single> and the parameter type is <xref:System.Int32>.</span></span> <span data-ttu-id="0ba6b-395">Microsoft C# 编译器生成的指令来表示形式的参数值<xref:System.Single>对象，，然后生成<xref:System.Single.Equals%28System.Single%29?displayProperty=nameWithType>比较实例的值和参数的扩大的表示的方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-395">The Microsoft C# compiler generates instructions to represent the value of the parameter as a <xref:System.Single> object, and then generates a <xref:System.Single.Equals%28System.Single%29?displayProperty=nameWithType> method that compares the values of the instance and the widened representation of the parameter.</span></span>  
  
 <span data-ttu-id="0ba6b-396">咨询你的编程语言的文档，以确定其编译器是否执行数值类型的隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-396">Consult your programming language's documentation to determine if its compiler performs implicit widening conversions of numeric types.</span></span> <span data-ttu-id="0ba6b-397">有关详细信息，请参阅[类型转换表](~/docs/standard/base-types/conversion-tables.md)主题。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-397">For more information, see the [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md) topic.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="0ba6b-398">在比较中的精度</span><span class="sxs-lookup"><span data-stu-id="0ba6b-398">Precision in Comparisons</span></span>  
 <span data-ttu-id="0ba6b-399"><xref:System.Single.Equals%2A>方法应多加小心，因为两个显然相等的值可能是由于两个值的精度不同不相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-399">The <xref:System.Single.Equals%2A> method should be used with caution, because two apparently equivalent values can be unequal because of the differing precision of the two values.</span></span> <span data-ttu-id="0ba6b-400">下面的示例报告<xref:System.Single>值.3333 和<xref:System.Single>返回除以 1 3 是否不相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-400">The following example reports that the <xref:System.Single> value .3333 and the <xref:System.Single> returned by dividing 1 by 3 are unequal.</span></span>  
  
 [!code-csharp[System.Single.Epsilon#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Epsilon/cs/SingleEquals_25051.cs#1)]
 [!code-vb[System.Single.Epsilon#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Epsilon/vb/SingleEquals_25051.vb#1)]  
  
 <span data-ttu-id="0ba6b-401">避免与比较相等性涉及定义两个值之间的差异可接受范围相关的问题的一个比较技术 (如。 01%的值之一)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-401">One comparison technique that avoids the problems associated with comparing for equality involves defining an acceptable margin of difference between two values (such as .01% of one of the values).</span></span> <span data-ttu-id="0ba6b-402">如果两个值之间的差异的绝对值是小于或等于该边距，区别是，可能需要的结果精度方面的差异，并因此的值很可能相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-402">If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be an outcome of differences in precision and, therefore, the values are likely to be equal.</span></span> <span data-ttu-id="0ba6b-403">下面的示例使用此方法来比较.33333 和 1/3，是这两个<xref:System.Single>前面的代码示例找到要不相等的值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-403">The following example uses this technique to compare .33333 and 1/3, which are the two <xref:System.Single> values that the previous code example found to be unequal.</span></span>  
  
 [!code-csharp[System.Single.Epsilon#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Epsilon/cs/SingleEquals_25051.cs#2)]
 [!code-vb[System.Single.Epsilon#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Epsilon/vb/SingleEquals_25051.vb#2)]  
  
 <span data-ttu-id="0ba6b-404">在这种情况下，值相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-404">In this case, the values are equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ba6b-405">因为<xref:System.Single.Epsilon>定义的最小的表达式必须大于差异的边距其范围是接近于零的正值， <xref:System.Single.Epsilon>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-405">Because <xref:System.Single.Epsilon> defines the minimum expression of a positive value whose range is near zero, the margin of difference must be greater than <xref:System.Single.Epsilon>.</span></span> <span data-ttu-id="0ba6b-406">通常情况下，大于多次<xref:System.Single.Epsilon>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-406">Typically, it is many times greater than <xref:System.Single.Epsilon>.</span></span> <span data-ttu-id="0ba6b-407">因此，我们建议你不要使用<xref:System.Double.Epsilon>比较时<xref:System.Double>值是否相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-407">Because of this, we recommend that you do not use <xref:System.Double.Epsilon> when comparing <xref:System.Double> values for equality.</span></span>  
  
 <span data-ttu-id="0ba6b-408">另一种技术，可避免与比较相等性相关的问题涉及比较两个浮点数与某些绝对值的数值之间的差异。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-408">A second technique that avoids the problems associated with comparing for equality involves comparing the difference between two floating-point numbers with some absolute value.</span></span> <span data-ttu-id="0ba6b-409">如果差异在于小于或等于该绝对值的数值，数字相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-409">If the difference is less than or equal to that absolute value, the numbers are equal.</span></span> <span data-ttu-id="0ba6b-410">如果较高，则数字不相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-410">If it is greater, the numbers are not equal.</span></span> <span data-ttu-id="0ba6b-411">若要执行此操作的一种方法是任意选择绝对值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-411">One way to do this is to arbitrarily select an absolute value.</span></span> <span data-ttu-id="0ba6b-412">但是，这会产生问题，，因为差异可接受范围取决于的量<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-412">However, this is problematic, because an acceptable margin of difference depends on the magnitude of the <xref:System.Single> values.</span></span> <span data-ttu-id="0ba6b-413">第二种方式利用浮点格式的设计功能： 中两个浮点值的整数表示的尾数组件之间的差异指示分隔的可能的浮点值的数目两个值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-413">A second way takes advantage of a design feature of the floating-point format: The difference between the mantissa components in the integer representations of two floating-point values indicates the number of possible floating-point values that separates the two values.</span></span> <span data-ttu-id="0ba6b-414">例如，0.0 之间的差异和<xref:System.Single.Epsilon>为 1，因为<xref:System.Single.Epsilon>使用时是可表示的最小值<xref:System.Single>其值为零。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-414">For example, the difference between 0.0 and <xref:System.Single.Epsilon> is 1, because <xref:System.Single.Epsilon> is the smallest representable value when working with a <xref:System.Single> whose value is zero.</span></span> <span data-ttu-id="0ba6b-415">下面的示例使用此方法来比较.33333 和 1/3，是这两个<xref:System.Double>值与前面的代码示例<xref:System.Single.Equals%28System.Single%29>方法找到要不相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-415">The following example uses this technique to compare .33333 and 1/3, which are the two <xref:System.Double> values that the previous code example with the <xref:System.Single.Equals%28System.Single%29> method found to be unequal.</span></span> <span data-ttu-id="0ba6b-416">请注意，该示例使用<xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>和<xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType>方法将一个单精度浮点值转换为其整数表示形式。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-416">Note that the example uses the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> and <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> methods to convert a single-precision floating-point value to its integer representation.</span></span>  
  
 [!code-csharp[System.Single.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.equals/cs/equalsabs1.cs#1)]
 [!code-vb[System.Single.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.equals/vb/equalsabs1.vb#1)]  
  
 <span data-ttu-id="0ba6b-417">超出有案可稽的精度的浮点数的精度是特定于实现和.NET Framework 版本。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-417">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="0ba6b-418">因此，两个数字的比较可能会产生不同的结果，具体取决于版本的.NET Framework 中，因为精度的数字的内部表示形式可能会更改。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-418">Consequently, a comparison of two numbers might produce different results depending on the version of the .NET Framework, because the precision of the numbers' internal representation might change.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="0ba6b-419">
            <para>编译器重载决策可能应对明显的差异的两个行为<see cref="M:System.Single.Equals(System.Object)" />方法重载。如果之间的隐式转换<paramref name="obj" />自变量和一个<see cref="T:System.Single" />定义和自变量并不类型化为<see cref="T:System.Object" />，编译器可能会执行隐式转换和调用<see cref="M:System.Single.Equals(System.Single)" />方法。否则，它们调用<see cref="M:System.Single.Equals(System.Object)" />方法，始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.Single" />值。下面的示例阐释了两个方法重载之间的行为差异。对于所有的基元数值类型，除<see cref="T:System.Double" />在 Visual Basic 和除<see cref="T:System.Decimal" />和<see cref="T:System.Double" />C# 中的第一个比较返回<see langword="true" />因为编译器自动执行一个的扩大转换，调用<see cref="M:System.Single.Equals(System.Single)" />方法，而第二个比较返回<see langword="false" />由于编译器调用<see cref="M:System.Single.Equals(System.Object)" />方法。 [！ code-csharp[System.Single.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.equals/cs/equalsoverl.cs#2)][！ code-vb[System.Single.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.equals/vb/equalsoverl.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-419">
              <para>Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Single.Equals(System.Object)" /> method overloads. If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Single" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Single.Equals(System.Single)" /> method. Otherwise, they call the <see cref="M:System.Single.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Single" /> value. The following example illustrates the difference in behavior between the two method overloads. In the case of all primitive numeric types except for <see cref="T:System.Double" /> in Visual Basic and except for <see cref="T:System.Decimal" /> and <see cref="T:System.Double" /> in C#, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Single.Equals(System.Single)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Single.Equals(System.Object)" /> method.  [!code-csharp[System.Single.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Single.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.equals/vb/equalsoverl.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Single.Equals(System.Object)" />
        <altmember cref="Overload:System.Single.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="single.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ba6b-420">返回此实例的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-420">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-421">32 位有符号整数哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-421">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="single.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ba6b-422">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Single" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-422">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-423">枚举常数 <see cref="F:System.TypeCode.Single" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-423">The enumerated constant, <see cref="F:System.TypeCode.Single" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="IsFinite">
      <MemberSignature Language="C#" Value="public static bool IsFinite (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFinite(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsFinite(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFinite (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFinite(float f);" />
      <MemberSignature Language="F#" Value="static member IsFinite : single -&gt; bool" Usage="System.single.IsFinite f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInfinity">
      <MemberSignature Language="C#" Value="public static bool IsInfinity (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsInfinity(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsInfinity(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsInfinity (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsInfinity(float f);" />
      <MemberSignature Language="F#" Value="static member IsInfinity : single -&gt; bool" Usage="System.single.IsInfinity f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">
          <span data-ttu-id="0ba6b-424">单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-424">A single-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-425">返回一个值，该值指示指定数字是计算为负无穷大还是正无穷大。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-425">Returns a value indicating whether the specified number evaluates to negative or positive infinity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-426">如果 <paramref name="f" /> 的计算结果为 <see cref="F:System.Single.PositiveInfinity" /> 或 <see cref="F:System.Single.NegativeInfinity" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-426">
              <see langword="true" /> if <paramref name="f" /> evaluates to <see cref="F:System.Single.PositiveInfinity" /> or <see cref="F:System.Single.NegativeInfinity" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-427">浮点运算返回<xref:System.Single.PositiveInfinity>或<xref:System.Single.NegativeInfinity>以发出信号溢出状况。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-427">Floating-point operations return <xref:System.Single.PositiveInfinity> or <xref:System.Single.NegativeInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-428">下面的代码示例演示<xref:System.Single.IsInfinity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-428">The following code example demonstrates the <xref:System.Single.IsInfinity%2A> method.</span></span>  
  
 [!code-cpp[System.Single#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#11)]
 [!code-csharp[System.Single#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#11)]
 [!code-vb[System.Single#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.IsPositiveInfinity(System.Single)" />
        <altmember cref="M:System.Single.IsNegativeInfinity(System.Single)" />
        <altmember cref="F:System.Single.PositiveInfinity" />
        <altmember cref="F:System.Single.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsNaN">
      <MemberSignature Language="C#" Value="public static bool IsNaN (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNaN(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsNaN(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNaN (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNaN(float f);" />
      <MemberSignature Language="F#" Value="static member IsNaN : single -&gt; bool" Usage="System.single.IsNaN f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">
          <span data-ttu-id="0ba6b-429">单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-429">A single-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-430">返回一个值，该值指示指定的值是否不为数字 (<see cref="F:System.Single.NaN" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-430">Returns a value that indicates whether the specified value is not a number (<see cref="F:System.Single.NaN" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-431">如果 <paramref name="f" /> 计算为非数字 (<see cref="F:System.Single.NaN" />)，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-431">
              <see langword="true" /> if <paramref name="f" /> evaluates to not a number (<see cref="F:System.Single.NaN" />); otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-432">浮点运算返回<xref:System.Single.NaN>以指示该操作的结果是不确定。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-432">Floating-point operations return <xref:System.Single.NaN> to signal that that result of the operation is undefined.</span></span> <span data-ttu-id="0ba6b-433">例如，将除以 0.0 0.0 会导致<xref:System.Single.NaN>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-433">For example, dividing 0.0 by 0.0 results in <xref:System.Single.NaN>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ba6b-434"><xref:System.Single.IsNaN%2A> 返回`false`如果<xref:System.Single>值可以是<xref:System.Single.PositiveInfinity>或<xref:System.Single.NegativeInfinity>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-434"><xref:System.Single.IsNaN%2A> returns `false` if a <xref:System.Single> value is either <xref:System.Single.PositiveInfinity> or <xref:System.Single.NegativeInfinity>.</span></span> <span data-ttu-id="0ba6b-435">若要测试这些值，请使用<xref:System.Single.IsInfinity%2A>， <xref:System.Single.IsPositiveInfinity%2A>，和<xref:System.Single.IsNegativeInfinity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-435">To test for these values, use the <xref:System.Single.IsInfinity%2A>, <xref:System.Single.IsPositiveInfinity%2A>, and <xref:System.Single.IsNegativeInfinity%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-436">下面的代码示例演示<xref:System.Single.IsNaN%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-436">The following code example demonstrates the <xref:System.Single.IsNaN%2A> method.</span></span>  
  
 [!code-cpp[System.Single#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#8)]
 [!code-csharp[System.Single#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#8)]
 [!code-vb[System.Single#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Single.NaN" />
      </Docs>
    </Member>
    <Member MemberName="IsNegative">
      <MemberSignature Language="C#" Value="public static bool IsNegative (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNegative(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsNegative(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNegative (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNegative(float f);" />
      <MemberSignature Language="F#" Value="static member IsNegative : single -&gt; bool" Usage="System.single.IsNegative f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegativeInfinity">
      <MemberSignature Language="C#" Value="public static bool IsNegativeInfinity (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNegativeInfinity(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsNegativeInfinity(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNegativeInfinity (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNegativeInfinity(float f);" />
      <MemberSignature Language="F#" Value="static member IsNegativeInfinity : single -&gt; bool" Usage="System.single.IsNegativeInfinity f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">
          <span data-ttu-id="0ba6b-437">单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-437">A single-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-438">返回一个值，通过该值指示指定数字是否计算为负无穷大。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-438">Returns a value indicating whether the specified number evaluates to negative infinity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-439">如果 <paramref name="f" /> 的计算结果为 <see cref="F:System.Single.NegativeInfinity" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-439">
              <see langword="true" /> if <paramref name="f" /> evaluates to <see cref="F:System.Single.NegativeInfinity" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-440">浮点运算返回<xref:System.Single.NegativeInfinity>以发出信号溢出状况。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-440">Floating-point operations return <xref:System.Single.NegativeInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-441">下面的代码示例演示<xref:System.Single.IsNegativeInfinity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-441">The following code example demonstrates the <xref:System.Single.IsNegativeInfinity%2A> method.</span></span>  
  
 [!code-cpp[System.Single#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#13)]
 [!code-csharp[System.Single#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#13)]
 [!code-vb[System.Single#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.IsInfinity(System.Single)" />
        <altmember cref="M:System.Single.IsPositiveInfinity(System.Single)" />
        <altmember cref="F:System.Single.PositiveInfinity" />
        <altmember cref="F:System.Single.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsNormal">
      <MemberSignature Language="C#" Value="public static bool IsNormal (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNormal(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsNormal(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNormal (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNormal(float f);" />
      <MemberSignature Language="F#" Value="static member IsNormal : single -&gt; bool" Usage="System.single.IsNormal f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPositiveInfinity">
      <MemberSignature Language="C#" Value="public static bool IsPositiveInfinity (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPositiveInfinity(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsPositiveInfinity(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPositiveInfinity (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPositiveInfinity(float f);" />
      <MemberSignature Language="F#" Value="static member IsPositiveInfinity : single -&gt; bool" Usage="System.single.IsPositiveInfinity f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">
          <span data-ttu-id="0ba6b-442">单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-442">A single-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-443">返回一个值，通过该值指示指定数字是否计算为正无穷大。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-443">Returns a value indicating whether the specified number evaluates to positive infinity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-444">如果 <paramref name="f" /> 的计算结果为 <see cref="F:System.Single.PositiveInfinity" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-444">
              <see langword="true" /> if <paramref name="f" /> evaluates to <see cref="F:System.Single.PositiveInfinity" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-445">浮点运算返回<xref:System.Single.PositiveInfinity>以发出信号溢出状况。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-445">Floating-point operations return <xref:System.Single.PositiveInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-446">下面的代码示例演示<xref:System.Single.IsPositiveInfinity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-446">The following code example demonstrates the <xref:System.Single.IsPositiveInfinity%2A> method.</span></span>  
  
 [!code-cpp[System.Single#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#12)]
 [!code-csharp[System.Single#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#12)]
 [!code-vb[System.Single#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.IsInfinity(System.Single)" />
        <altmember cref="M:System.Single.IsNegativeInfinity(System.Single)" />
        <altmember cref="F:System.Single.PositiveInfinity" />
        <altmember cref="F:System.Single.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsSubnormal">
      <MemberSignature Language="C#" Value="public static bool IsSubnormal (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSubnormal(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsSubnormal(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSubnormal (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSubnormal(float f);" />
      <MemberSignature Language="F#" Value="static member IsSubnormal : single -&gt; bool" Usage="System.single.IsSubnormal f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const float MaxValue = 3.402823E+38;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 MaxValue = float32(3.402823E+38)" />
      <MemberSignature Language="DocId" Value="F:System.Single.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Single  = 3.402823E+38" />
      <MemberSignature Language="C++ CLI" Value="public: float MaxValue = 3.402823E+38;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : single" Usage="System.single.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>3.402823E+38</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ba6b-447">表示 <see cref="T:System.Single" /> 的最大可能值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-447">Represents the largest possible value of <see cref="T:System.Single" />.</span>
          </span>
          <span data-ttu-id="0ba6b-448">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-448">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-449">此常量的值为正 3.40282347 e + 38。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-449">The value of this constant is positive 3.40282347E+38.</span></span>  
  
 <span data-ttu-id="0ba6b-450">超过了操作的结果<xref:System.Single.MaxValue?displayProperty=nameWithType>是<xref:System.Single.PositiveInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-450">The result of an operation that exceeds <xref:System.Single.MaxValue?displayProperty=nameWithType> is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0ba6b-451">在下面的示例中，<xref:System.Single.PositiveInfinity?displayProperty=nameWithType>会从添加、 乘法和求幂的操作时的结果超出了<xref:System.Single.MaxValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-451">In the following example, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> results from addition, multiplication, and exponentiation operations when the result exceeds <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Single.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.maxvalue/cs/maxvalueex.cs#1)]
 [!code-vb[System.Single.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.maxvalue/vb/maxvalueex.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-452">下面的代码示例演示<xref:System.Single.MaxValue>常量。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-452">The following code example demonstrates the <xref:System.Single.MaxValue> constant.</span></span>  
  
 [!code-cpp[System.Single#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#4)]
 [!code-csharp[System.Single#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#4)]
 [!code-vb[System.Single#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Single.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const float MinValue = -3.402823E+38;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 MinValue = float32(-3.402823E+38)" />
      <MemberSignature Language="DocId" Value="F:System.Single.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Single  = -3.402823E+38" />
      <MemberSignature Language="C++ CLI" Value="public: float MinValue = -3.402823E+38;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : single" Usage="System.single.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>-3.402823E+38</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ba6b-453">表示 <see cref="T:System.Single" /> 的最小可能值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-453">Represents the smallest possible value of <see cref="T:System.Single" />.</span>
          </span>
          <span data-ttu-id="0ba6b-454">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-454">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-455">此常量的值是-3.402823 e 38。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-455">The value of this constant is negative 3.402823e38.</span></span>  
  
 <span data-ttu-id="0ba6b-456">是操作的结果小于<xref:System.Single.MinValue?displayProperty=nameWithType>是<xref:System.Single.NegativeInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-456">The result of an operation that is less than <xref:System.Single.MinValue?displayProperty=nameWithType> is <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0ba6b-457">在下面的示例中，<xref:System.Single.NegativeInfinity?displayProperty=nameWithType>源于减法和乘法操作，如果结果为小于<xref:System.Single.MinValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-457">In the following example, <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> results from subtraction and multiplication operations when the result is less than <xref:System.Single.MinValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Single.MinValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.minvalue/cs/minvalueex.cs#1)]
 [!code-vb[System.Single.MinValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.minvalue/vb/minvalueex.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-458">下面的代码示例演示<xref:System.Single.MinValue>常量。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-458">The following code example demonstrates the <xref:System.Single.MinValue> constant.</span></span>  
  
 [!code-cpp[System.Single#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#5)]
 [!code-csharp[System.Single#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#5)]
 [!code-vb[System.Single#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Single.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="NaN">
      <MemberSignature Language="C#" Value="public const float NaN = NaN;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 NaN = float32(NaN)" />
      <MemberSignature Language="DocId" Value="F:System.Single.NaN" />
      <MemberSignature Language="VB.NET" Value="Public Const NaN As Single  = NaN" />
      <MemberSignature Language="C++ CLI" Value="public: float NaN = NaN;" />
      <MemberSignature Language="F#" Value="val mutable NaN : single" Usage="System.single.NaN" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>NaN</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ba6b-459">表示非数字 (<see langword="NaN" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-459">Represents not a number (<see langword="NaN" />).</span>
          </span>
          <span data-ttu-id="0ba6b-460">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-460">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-461">方法或运算符返回<xref:System.Single.NaN>时的操作的结果是不确定。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-461">A method or operator returns <xref:System.Single.NaN> when the result of an operation is undefined.</span></span> <span data-ttu-id="0ba6b-462">例如，零被零除的结果是<xref:System.Single.NaN>，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-462">For example, the result of dividing zero by zero is <xref:System.Single.NaN>, as the following example shows.</span></span> <span data-ttu-id="0ba6b-463">(但请注意，返回非零数字除以零<xref:System.Single.PositiveInfinity>或<xref:System.Single.NegativeInfinity>，取决于除数的符号。)</span><span class="sxs-lookup"><span data-stu-id="0ba6b-463">(But note that dividing a non-zero number by zero returns either <xref:System.Single.PositiveInfinity> or <xref:System.Single.NegativeInfinity>, depending on the sign of the divisor.)</span></span>  
  
 [!code-csharp[System.Single.NaN#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.nan/cs/nan1.cs#1)]
 [!code-vb[System.Single.NaN#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.nan/vb/nan1.vb#1)]  
  
 <span data-ttu-id="0ba6b-464">此外，一种方法调用与<xref:System.Single.NaN>值或上的操作<xref:System.Single.NaN>值返回<xref:System.Single.NaN>，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-464">In addition, a method call with a <xref:System.Single.NaN> value or an operation on a <xref:System.Single.NaN> value returns <xref:System.Single.NaN>, as the following example shows.</span></span>  
  
 [!code-csharp[System.Single.NaN#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.nan/cs/nan1.cs#2)]
 [!code-vb[System.Single.NaN#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.nan/vb/nan1.vb#2)]  
  
 <span data-ttu-id="0ba6b-465">使用<xref:System.Single.IsNaN%2A>方法来确定是否一个值不是数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-465">Use the <xref:System.Single.IsNaN%2A> method to determine whether a value is not a number.</span></span> <span data-ttu-id="0ba6b-466">一般情况下，<xref:System.Single>运算符不能用于比较<xref:System.Single.NaN?displayProperty=nameWithType>与其他<xref:System.Single>值，尽管比较方法 (如<xref:System.Single.Equals%2A>和<xref:System.Single.CompareTo%2A>) 可以。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-466">In general, <xref:System.Single> operators cannot be used to compare <xref:System.Single.NaN?displayProperty=nameWithType> with other <xref:System.Single> values, although comparison methods (such as <xref:System.Single.Equals%2A> and <xref:System.Single.CompareTo%2A>) can.</span></span> <span data-ttu-id="0ba6b-467">下面的示例演示的之间的行为差异<xref:System.Single>比较运算符和方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-467">The following example illustrates the difference in behavior between <xref:System.Single> comparison operators and methods.</span></span>  
  
 [!code-csharp[System.Single.NaN#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.nan/cs/single.nan4.cs#4)]
 [!code-vb[System.Single.NaN#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.nan/vb/single.nan4.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-468">下面的示例演示<xref:System.Single.NaN>常量。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-468">The following example demonstrates the <xref:System.Single.NaN> constant.</span></span>  
  
 [!code-cpp[System.Single#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#7)]
 [!code-csharp[System.Single#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#7)]
 [!code-vb[System.Single#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.IsNaN(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinity">
      <MemberSignature Language="C#" Value="public const float NegativeInfinity = -Infinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 NegativeInfinity = float32(-Infinity)" />
      <MemberSignature Language="DocId" Value="F:System.Single.NegativeInfinity" />
      <MemberSignature Language="VB.NET" Value="Public Const NegativeInfinity As Single  = -Infinity" />
      <MemberSignature Language="C++ CLI" Value="public: float NegativeInfinity = -Infinity;" />
      <MemberSignature Language="F#" Value="val mutable NegativeInfinity : single" Usage="System.single.NegativeInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>-Infinity</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ba6b-469">表示负无穷。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-469">Represents negative infinity.</span>
          </span>
          <span data-ttu-id="0ba6b-470">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-470">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-471">此常量的值是被零除负数的结果。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-471">The value of this constant is the result of dividing a negative number by zero.</span></span>  
  
 <span data-ttu-id="0ba6b-472">如果操作的结果，则返回此常量小于<xref:System.Single.MinValue>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-472">This constant is returned when the result of an operation is less than <xref:System.Single.MinValue>.</span></span>  
  
 <span data-ttu-id="0ba6b-473">使用<xref:System.Single.IsNegativeInfinity%2A>来确定一个值是否计算为负无穷大。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-473">Use <xref:System.Single.IsNegativeInfinity%2A> to determine whether a value evaluates to negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-474">下面的代码示例演示<xref:System.Single.NegativeInfinity>常量。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-474">The following code example demonstrates the <xref:System.Single.NegativeInfinity> constant.</span></span>  
  
 [!code-cpp[System.Single#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#9)]
 [!code-csharp[System.Single#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#9)]
 [!code-vb[System.Single#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.IsNegativeInfinity(System.Single)" />
        <altmember cref="M:System.Single.IsInfinity(System.Single)" />
        <altmember cref="F:System.Single.PositiveInfinity" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (float left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(float32 left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.op_Equality(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Single, right As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(float left, float right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : single * single -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="right" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0ba6b-475">要比较的第一个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-475">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0ba6b-476">要比较的第二个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-476">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-477">返回一个值，该值指示两个指定的 <see cref="T:System.Single" /> 值是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-477">Returns a value that indicates whether two specified <see cref="T:System.Single" /> values are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-478">如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-478">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-479"><xref:System.Single.op_Equality%2A>方法定义的相等运算符<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-479">The <xref:System.Single.op_Equality%2A> method defines the equality operator for <xref:System.Single> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (float left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(float32 left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.op_GreaterThan(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Single, right As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(float left, float right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : single * single -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="right" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0ba6b-480">要比较的第一个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-480">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0ba6b-481">要比较的第二个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-481">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-482">返回一个值，该值指示指定的 <see cref="T:System.Single" /> 值是否大于另一个指定的 <see cref="T:System.Single" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-482">Returns a value that indicates whether a specified <see cref="T:System.Single" /> value is greater than another specified <see cref="T:System.Single" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-483">如果 <see langword="true" /> 大于 <paramref name="left" />，则为 <paramref name="right" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-483">
              <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-484"><xref:System.Single.op_GreaterThan%2A>方法定义的较大的操作-比运算符<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-484">The <xref:System.Single.op_GreaterThan%2A> method defines the operation of the greater-than operator for <xref:System.Single> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (float left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(float32 left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.op_GreaterThanOrEqual(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Single, right As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(float left, float right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : single * single -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="right" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0ba6b-485">要比较的第一个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-485">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0ba6b-486">要比较的第二个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-486">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-487">返回一个值，该值指示指定的 <see cref="T:System.Single" /> 值是否大于或等于另一个指定的 <see cref="T:System.Single" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-487">Returns a value that indicates whether a specified <see cref="T:System.Single" /> value is greater than or equal to another specified <see cref="T:System.Single" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-488">如果 <paramref name="left" /> 大于等于 <paramref name="right" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-488">
              <see langword="true" /> if <paramref name="left" /> is greater than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-489"><xref:System.Single.op_GreaterThanOrEqual%2A>方法定义为大于或等于运算符的运算<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-489">The <xref:System.Single.op_GreaterThanOrEqual%2A> method defines the operation of the greater-than-or-equal operator for <xref:System.Single> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (float left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(float32 left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.op_Inequality(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Single, right As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(float left, float right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : single * single -&gt; bool" Usage="System.single.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="right" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0ba6b-490">要比较的第一个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-490">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0ba6b-491">要比较的第二个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-491">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-492">返回一个值，该值指示两个指定的 <see cref="T:System.Single" /> 值是否不相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-492">Returns a value that indicates whether two specified <see cref="T:System.Single" /> values are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-493">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-493">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-494"><xref:System.Single.op_Inequality%2A>方法定义的不相等运算符<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-494">The <xref:System.Single.op_Inequality%2A> method defines the inequality operator for <xref:System.Single> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (float left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(float32 left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.op_LessThan(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Single, right As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(float left, float right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : single * single -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="right" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0ba6b-495">要比较的第一个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-495">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0ba6b-496">要比较的第二个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-496">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-497">返回一个值，该值指示指定的 <see cref="T:System.Single" /> 值是否小于另一个指定的 <see cref="T:System.Single" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-497">Returns a value that indicates whether a specified <see cref="T:System.Single" /> value is less than another specified <see cref="T:System.Single" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-498">如果 <paramref name="left" /> 小于 <paramref name="right" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-498">
              <see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-499"><xref:System.Single.op_LessThan%2A>方法定义小于运算的运算符比<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-499">The <xref:System.Single.op_LessThan%2A> method defines the operation of the less-than operator for <xref:System.Single> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (float left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(float32 left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.op_LessThanOrEqual(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Single, right As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(float left, float right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : single * single -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="right" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0ba6b-500">要比较的第一个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-500">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0ba6b-501">要比较的第二个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-501">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-502">返回一个值，该值指示指定的 <see cref="T:System.Single" /> 值是否小于或等于另一个指定的 <see cref="T:System.Single" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-502">Returns a value that indicates whether a specified <see cref="T:System.Single" /> value is less than or equal to another specified <see cref="T:System.Single" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-503">如果 <paramref name="left" /> 小于等于 <paramref name="right" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-503">
              <see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-504"><xref:System.Single.op_LessThanOrEqual%2A>方法定义的小于或等于运算符的运算<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-504">The <xref:System.Single.op_LessThanOrEqual%2A> method defines the operation of the less-than-or-equal operator for <xref:System.Single> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ba6b-505">将数字的字符串表示形式转换为它的等效单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-505">Converts the string representation of a number to its single-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Single.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static float Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; single" Usage="System.single.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0ba6b-506">包含要转换的数字的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-506">A string that contains a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-507">将数字的字符串表示形式转换为它的等效单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-507">Converts the string representation of a number to its single-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-508">与 <paramref name="s" /> 中指定的数值或符号等效的单精度浮点数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-508">A single-precision floating-point number equivalent to the numeric value or symbol specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-509">`s`参数可以包含当前区域性的<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>，或格式的字符串：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-509">The `s` parameter can contain the current culture's <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or a string of the form:</span></span>  
  
 <span data-ttu-id="0ba6b-510">[*ws*] [*登录*] [*整型数字*[*，*]]*整型数字*[*。*[*小数位数*]] [e [*登录*]*指数数字*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="0ba6b-510">[*ws*][*sign*] [*integral-digits*[*,*]]*integral-digits*[*.*[*fractional-digits*]][e[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="0ba6b-511">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-511">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="0ba6b-512">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-512">The following table describes each element.</span></span>  
  
|<span data-ttu-id="0ba6b-513">元素</span><span class="sxs-lookup"><span data-stu-id="0ba6b-513">Element</span></span>|<span data-ttu-id="0ba6b-514">描述</span><span class="sxs-lookup"><span data-stu-id="0ba6b-514">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0ba6b-515">*ws*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-515">*ws*</span></span>|<span data-ttu-id="0ba6b-516">一系列的空白字符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-516">A series of white space characters.</span></span>|  
|<span data-ttu-id="0ba6b-517">*sign*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-517">*sign*</span></span>|<span data-ttu-id="0ba6b-518">负号符号或正号符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-518">A negative sign symbol or a positive sign symbol.</span></span> <span data-ttu-id="0ba6b-519">有效的符号字符由<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-519">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="0ba6b-520">可以使用仅前导符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-520">Only a leading sign can be used.</span></span>|  
|<span data-ttu-id="0ba6b-521">*整型数字*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-521">*integral-digits*</span></span>|<span data-ttu-id="0ba6b-522">一系列的范围从 0 到 9 的指定数的整数部分的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-522">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="0ba6b-523">运行*整型数字*进行分区的组分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-523">Runs of *integral-digits* can be partitioned by a group-separator symbol.</span></span> <span data-ttu-id="0ba6b-524">例如，在某些区域性使用逗号 （，） 作为千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-524">For example, in some cultures a comma (,) separates groups of thousands.</span></span> <span data-ttu-id="0ba6b-525">*整型数字*元素可以是缺少如果字符串包含*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-525">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="0ba6b-526">*，*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-526">*,*</span></span>|<span data-ttu-id="0ba6b-527">特定于区域性的千位分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-527">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="0ba6b-528">*.*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-528">*.*</span></span>|<span data-ttu-id="0ba6b-529">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-529">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="0ba6b-530">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-530">*fractional-digits*</span></span>|<span data-ttu-id="0ba6b-531">一系列的范围从 0 到 9 的指定数的小数部分的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-531">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="0ba6b-532">E</span><span class="sxs-lookup"><span data-stu-id="0ba6b-532">E</span></span>|<span data-ttu-id="0ba6b-533">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-533">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="0ba6b-534">*指数数字*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-534">*exponential-digits*</span></span>|<span data-ttu-id="0ba6b-535">一系列的范围从 0 到 9 的指定指数的位数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-535">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="0ba6b-536">`s`参数被解释结合使用<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-536">The `s` parameter is interpreted using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="0ba6b-537">这意味着该空白和千位分隔符可以但不是货币符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-537">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="0ba6b-538">若要显式定义的元素 (如货币符号、 千位分隔符和空白区域)，可出现在`s`，使用<xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%29>方法重载。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-538">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method overload.</span></span>  
  
 <span data-ttu-id="0ba6b-539">`s`通过使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-539">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="0ba6b-540">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-540">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="0ba6b-541">若要通过使用特定区域性的格式设置信息中分析字符串，使用<xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29>或<xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-541">To parse a string by using the formatting information of a specific culture, use the <xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="0ba6b-542">通常，如果你通过<xref:System.Single.Parse%2A>方法通过调用创建的字符串<xref:System.Single.ToString%2A>方法时，原始<xref:System.Single>返回值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-542">Ordinarily, if you pass the <xref:System.Single.Parse%2A> method a string that is created by calling the <xref:System.Single.ToString%2A> method, the original <xref:System.Single> value is returned.</span></span> <span data-ttu-id="0ba6b-543">但是，由于精度损失，值可能不相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-543">However, because of a loss of precision, the values may not be equal.</span></span>  
  
 <span data-ttu-id="0ba6b-544">如果在遇到分隔符`s`期间执行分析操作，并适用的货币或小数位的参数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-544">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="0ba6b-545">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-545">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-546">下面的示例使用<xref:System.Single.Parse%28System.String%29>方法将一个字符串数组转换为等效<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-546">The following example uses the <xref:System.Single.Parse%28System.String%29> method to convert an array of strings to equivalent <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Single.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Parse/CS/parse1.cs#2)]
 [!code-vb[System.Single.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Parse/VB/parse1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0ba6b-547">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-547">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0ba6b-548">
            <paramref name="s" /> 不表示一个有效格式的数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-548">
              <paramref name="s" /> does not represent a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="0ba6b-549">
            <paramref name="s" /> 表示小于 <see cref="F:System.Single.MinValue" /> 或大于 <see cref="F:System.Single.MaxValue" /> 的数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-549">
              <paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Single.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static float Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; single" Usage="System.single.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0ba6b-550">包含要转换的数字的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-550">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="0ba6b-551">枚举值的按位组合，用于指示可出现在 <c>s</c> 中的样式元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-551">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span>
          </span>
          <span data-ttu-id="0ba6b-552">一个用来指定的典型值为 <see cref="F:System.Globalization.NumberStyles.Float" /> 与 <see cref="F:System.Globalization.NumberStyles.AllowThousands" /> 的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-552">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-553">将具有指定样式的数字的字符串表示形式转换为它的等效单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-553">Converts the string representation of a number in a specified style to its single-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-554">与在 <paramref name="s" /> 中指定的数值或符号等效的单精度浮点数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-554">A single-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-555">`style`参数定义的样式元素 (如空白、 千位分隔符和货币符号)，可以用在`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-555">The `style` parameter defines the style elements (such as white space, thousands separators, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="0ba6b-556">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-556">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="0ba6b-557">以下<xref:System.Globalization.NumberStyles>不支持成员：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-557">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="0ba6b-558">`s`参数可以包含当前区域性的<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-558">The `s` parameter can contain the current culture's <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>.</span></span> <span data-ttu-id="0ba6b-559">根据值`style`，它还可以采用以下形式：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-559">Depending on the value of `style`, it can also take the form:</span></span>  
  
 <span data-ttu-id="0ba6b-560">[*ws*] [*$*] [*登录*] [*整型数字*[*，*]]*整型数字*[*。*[*小数位数*]] [E [*登录*]*指数数字*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="0ba6b-560">[*ws*][*$*][*sign*][*integral-digits*[*,*]]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="0ba6b-561">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-561">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="0ba6b-562">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-562">The following table describes each element.</span></span>  
  
 <span data-ttu-id="0ba6b-563">*ws*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-563">*ws*</span></span>  
 <span data-ttu-id="0ba6b-564">一系列的空白字符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-564">A series of white-space characters.</span></span> <span data-ttu-id="0ba6b-565">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-565">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>  
  
 $  
 <span data-ttu-id="0ba6b-566">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-566">A culture-specific currency symbol.</span></span> <span data-ttu-id="0ba6b-567">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-567">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="0ba6b-568">当前区域性的货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-568">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="0ba6b-569">*sign*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-569">*sign*</span></span>  
 <span data-ttu-id="0ba6b-570">负号符号 （-） 或正号符号 （+）。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-570">A negative sign symbol (-) or a positive sign symbol (+).</span></span> <span data-ttu-id="0ba6b-571">符号可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-571">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="0ba6b-572">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-572">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="0ba6b-573">*整型数字*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-573">*integral-digits*</span></span>  
 <span data-ttu-id="0ba6b-574">一系列的范围从 0 到 9 的指定数的整数部分的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-574">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="0ba6b-575">*整型数字*元素可以是缺少如果字符串包含*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-575">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>  
  
 <span data-ttu-id="0ba6b-576">,</span><span class="sxs-lookup"><span data-stu-id="0ba6b-576">,</span></span>  
 <span data-ttu-id="0ba6b-577">特定于区域性的组分隔符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-577">A culture-specific group separator.</span></span> <span data-ttu-id="0ba6b-578">当前区域性的组分隔符符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志</span><span class="sxs-lookup"><span data-stu-id="0ba6b-578">The current culture's group separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag</span></span>  
  
 <span data-ttu-id="0ba6b-579">.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-579">.</span></span>  
 <span data-ttu-id="0ba6b-580">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-580">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="0ba6b-581">当前区域性的小数点符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-581">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="0ba6b-582">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-582">*fractional-digits*</span></span>  
 <span data-ttu-id="0ba6b-583">一系列的范围从 0 到 9 的指定数的小数部分的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-583">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="0ba6b-584">小数位数可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-584">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="0ba6b-585">E</span><span class="sxs-lookup"><span data-stu-id="0ba6b-585">E</span></span>  
 <span data-ttu-id="0ba6b-586">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-586">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="0ba6b-587">`value`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-587">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="0ba6b-588">*指数数字*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-588">*exponential-digits*</span></span>  
 <span data-ttu-id="0ba6b-589">一系列的范围从 0 到 9 的指定指数的位数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-589">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>  
  
 <span data-ttu-id="0ba6b-590">仅为数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>样式) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-590">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="0ba6b-591">剩余<xref:System.Globalization.NumberStyles?displayProperty=nameWithType>成员控件可能会存在，但不是需要为存在于输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-591">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="0ba6b-592">下表指示个别<xref:System.Globalization.NumberStyles>标志会影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-592">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="0ba6b-593">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="0ba6b-593">NumberStyles value</span></span>|<span data-ttu-id="0ba6b-594">元素允许在`s`除数字之外</span><span class="sxs-lookup"><span data-stu-id="0ba6b-594">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="0ba6b-595">*整型数字*仅元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-595">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="0ba6b-596">小数点 (*。*) 和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-596">The decimal point (*.*) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="0ba6b-597">"E"或者"E"字符，它指示指数记数法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-597">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="0ba6b-598">此标志本身支持值的形式*数字*E*数字*; 其他标志需要为成功分析与此类元素为正或负号和小数点符号的字符串。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-598">This flag by itself supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="0ba6b-599">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-599">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="0ba6b-600">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-600">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="0ba6b-601">*登录*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-601">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="0ba6b-602">*登录*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-602">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="0ba6b-603">*登录*在括号内包含的数字值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-603">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="0ba6b-604">千位分隔符 （，） 元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-604">The thousands separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="0ba6b-605">货币 （$） 元素中。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-605">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="0ba6b-606">所有元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-606">All elements.</span></span> <span data-ttu-id="0ba6b-607">但是，`s`不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-607">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="0ba6b-608">*Ws*元素的开头或末尾`s`，*登录*开头`s`，和小数点 （.） 符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-608">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="0ba6b-609">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-609">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="0ba6b-610">`ws`， `sign`，千位分隔符 （，） 和小数点 （.） 元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-610">The `ws`, `sign`, thousands separator (,) and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="0ba6b-611">所有元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-611">All elements.</span></span> <span data-ttu-id="0ba6b-612">但是，`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-612">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="0ba6b-613">一些示例`s`包括"100"、"-123456789"、"123.45 e + 6"、"+ 500"、"5e2"、"3.1416"，"600"、"-。 123" 和"-Infinity"。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-613">Some examples of `s` are "100", "-123,456,789", "123.45e+6", "+500", "5e2", "3.1416", "600.", "-.123", and "-Infinity".</span></span>  
  
 <span data-ttu-id="0ba6b-614">`s`使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-614">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="0ba6b-615">若要指定分析操作使用其格式设置信息的区域性，调用<xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>重载。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-615">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
 <span data-ttu-id="0ba6b-616">通常，如果你通过<xref:System.Single.Parse%2A>方法通过调用创建的字符串<xref:System.Single.ToString%2A>方法时，原始<xref:System.Single>返回值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-616">Ordinarily, if you pass the <xref:System.Single.Parse%2A> method a string that is created by calling the <xref:System.Single.ToString%2A> method, the original <xref:System.Single> value is returned.</span></span> <span data-ttu-id="0ba6b-617">但是，由于精度损失，值可能不相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-617">However, because of a loss of precision, the values may not be equal.</span></span>  
  
 <span data-ttu-id="0ba6b-618">如果在遇到分隔符`s`期间执行分析操作，并适用的货币或小数位的参数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-618">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="0ba6b-619">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-619">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-620">下面的示例使用<xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%29>方法，以便分析的字符串表示形式<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-620">The following example uses the <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method to parse the string representations of <xref:System.Single> values.</span></span> <span data-ttu-id="0ba6b-621">该示例使用 EN-US 区域性的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-621">The example uses formatting information for the en-US culture.</span></span>  
  
 [!code-csharp[System.Single.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Parse/CS/parse2.cs#3)]
 [!code-vb[System.Single.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Parse/VB/parse2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0ba6b-622">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-622">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0ba6b-623">
            <paramref name="s" /> 不是一个具有有效格式的数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-623">
              <paramref name="s" /> is not a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="0ba6b-624">
            <paramref name="s" /> 表示一个小于 <see cref="F:System.Single.MinValue" /> 或大于 <see cref="F:System.Single.MaxValue" /> 的数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-624">
              <paramref name="s" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0ba6b-625">
            <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-625">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="0ba6b-626">- 或 -  <paramref name="style" /> 包括 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-626">-or-  <paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Single.ToString" />
        <altmember cref="Overload:System.Single.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static float Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; single" Usage="System.single.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0ba6b-627">包含要转换的数字的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-627">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="0ba6b-628">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-628">An object that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-629">将具有指定区域性特定格式的数字的字符串表示形式转换为它的等效单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-629">Converts the string representation of a number in a specified culture-specific format to its single-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-630">与 <paramref name="s" /> 中指定的数值或符号等效的单精度浮点数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-630">A single-precision floating-point number equivalent to the numeric value or symbol specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-631">此重载通常用于将可在多个方面与格式设置的文本转换<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-631">This overload is typically used to convert text that can be formatted in a variety of ways to a <xref:System.Single> value.</span></span> <span data-ttu-id="0ba6b-632">例如，它可以用于将转换到 HTML 文本框中为数值用户输入的文本。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-632">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="0ba6b-633">`s`参数被解释结合使用<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-633">The `s` parameter is interpreted using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="0ba6b-634">`s`参数可以包含<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>，或<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>为指定的区域性`provider`，也可以包含形式的字符串：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-634">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> for the culture specified by `provider`, or it can contain a string of the form:</span></span>  
  
 <span data-ttu-id="0ba6b-635">[*ws*][*sign*]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="0ba6b-635">[*ws*][*sign*]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="0ba6b-636">可选元素括在方括号 （[和]）。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-636">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="0ba6b-637">包含字词"数字"的元素包含的范围从 0 到 9 的数字字符序列。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-637">Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span>  
  
|<span data-ttu-id="0ba6b-638">元素</span><span class="sxs-lookup"><span data-stu-id="0ba6b-638">Element</span></span>|<span data-ttu-id="0ba6b-639">描述</span><span class="sxs-lookup"><span data-stu-id="0ba6b-639">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0ba6b-640">*ws*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-640">*ws*</span></span>|<span data-ttu-id="0ba6b-641">一系列的空白字符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-641">A series of white-space characters.</span></span>|  
|<span data-ttu-id="0ba6b-642">*sign*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-642">*sign*</span></span>|<span data-ttu-id="0ba6b-643">负号符号 （-） 或正号符号 （+）。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-643">A negative sign symbol (-) or a positive sign symbol (+).</span></span>|  
|<span data-ttu-id="0ba6b-644">*整型数字*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-644">*integral-digits*</span></span>|<span data-ttu-id="0ba6b-645">一系列的范围从 0 到 9 的指定数的整数部分的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-645">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="0ba6b-646">运行*整型数字*进行分区的组分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-646">Runs of *integral-digits* can be partitioned by a group-separator symbol.</span></span> <span data-ttu-id="0ba6b-647">例如，在某些区域性使用逗号 （，） 作为千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-647">For example, in some cultures a comma (,) separates groups of thousands.</span></span> <span data-ttu-id="0ba6b-648">*整型数字*元素可以是缺少如果字符串包含*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-648">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="0ba6b-649">.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-649">.</span></span>|<span data-ttu-id="0ba6b-650">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-650">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="0ba6b-651">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-651">*fractional-digits*</span></span>|<span data-ttu-id="0ba6b-652">一系列的范围从 0 到 9 的指定数的小数部分的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-652">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="0ba6b-653">E</span><span class="sxs-lookup"><span data-stu-id="0ba6b-653">E</span></span>|<span data-ttu-id="0ba6b-654">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-654">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="0ba6b-655">*指数数字*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-655">*exponential-digits*</span></span>|<span data-ttu-id="0ba6b-656">一系列的范围从 0 到 9 的指定指数的位数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-656">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="0ba6b-657">有关数值格式的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)主题。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-657">For more information about numeric formats, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic.</span></span>  
  
 <span data-ttu-id="0ba6b-658">`provider`参数是<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供区域性特定格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-658">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="0ba6b-659">当<xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29>调用方法时，它调用`provider`参数的<xref:System.IFormatProvider.GetFormat%2A>方法并将其传递<xref:System.Type>对象，表示<xref:System.Globalization.NumberFormatInfo>类型。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-659">When the <xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="0ba6b-660"><xref:System.IFormatProvider.GetFormat%2A>方法然后返回<xref:System.Globalization.NumberFormatInfo>提供的格式有关的信息的对象`s`参数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-660">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information about the format of the `s` parameter.</span></span> <span data-ttu-id="0ba6b-661">有三种方法使用`provider`参数来提供到分析操作的自定义格式设置信息：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-661">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="0ba6b-662">你可以将传递<xref:System.Globalization.CultureInfo>表示的区域性的提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-662">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="0ba6b-663">其<xref:System.Globalization.CultureInfo.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供该区域性的数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-663">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="0ba6b-664">你可以将传递的实际<xref:System.Globalization.NumberFormatInfo>提供数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-664">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="0ba6b-665">(其实现<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="0ba6b-665">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="0ba6b-666">你可以传递的自定义对象，实现<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-666">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="0ba6b-667">其<xref:System.IFormatProvider.GetFormat%2A>方法实例化，并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-667">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="0ba6b-668">如果`provider`是`null`或<xref:System.Globalization.NumberFormatInfo>无法获取，格式设置信息使用当前系统区域性的。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-668">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> cannot be obtained, the formatting information for the current system culture is used.</span></span>  
  
 <span data-ttu-id="0ba6b-669">如果在遇到分隔符`s`期间执行分析操作，并适用的货币或小数位的参数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-669">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="0ba6b-670">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-670">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
 <span data-ttu-id="0ba6b-671">一些示例`s`包括"100"、"-123456789"、"123.45 e + 6"、"+ 500"、"5e2"、"3.1416"，"600"、"-。 123" 和"-Infinity"。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-671">Some examples of `s` are "100", "-123,456,789", "123.45e+6", "+500", "5e2", "3.1416", "600.", "-.123", and "-Infinity".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-672">下面的示例是按钮单击事件处理程序的 Web 窗体。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-672">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="0ba6b-673">它使用返回的数组<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>属性来确定用户的区域设置。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-673">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="0ba6b-674">它然后实例化<xref:System.Globalization.CultureInfo>对应于该区域设置的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-674">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="0ba6b-675"><xref:System.Globalization.NumberFormatInfo>对象所属的<xref:System.Globalization.CultureInfo>对象随后会传递给<xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29>方法将用户输入转换为<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-675">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[ParseMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#1)]
 [!code-vb[ParseMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0ba6b-676">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-676">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0ba6b-677">
            <paramref name="s" /> 不表示一个有效格式的数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-677">
              <paramref name="s" /> does not represent a number in a valid format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="0ba6b-678">
            <paramref name="s" /> 表示小于 <see cref="F:System.Single.MinValue" /> 或大于 <see cref="F:System.Single.MaxValue" /> 的数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-678">
              <paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Single.ToString" />
        <altmember cref="Overload:System.Single.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static float Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.AllowDecimalPoint | System.Globalization.NumberStyles.AllowExponent | System.Globalization.NumberStyles.AllowLeadingSign | System.Globalization.NumberStyles.AllowLeadingWhite | System.Globalization.NumberStyles.AllowThousands | System.Globalization.NumberStyles.AllowTrailingWhite | System.Globalization.NumberStyles.Float | System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.AllowDecimalPoint | System.Globalization.NumberStyles.AllowExponent | System.Globalization.NumberStyles.AllowLeadingSign | System.Globalization.NumberStyles.AllowLeadingWhite | System.Globalization.NumberStyles.AllowThousands | System.Globalization.NumberStyles.AllowTrailingWhite | System.Globalization.NumberStyles.Float | System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Single" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; single" Usage="System.single.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static float Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; single" Usage="System.single.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0ba6b-679">包含要转换的数字的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-679">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="0ba6b-680">枚举值的按位组合，用于指示可出现在 <c>s</c> 中的样式元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-680">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span>
          </span>
          <span data-ttu-id="0ba6b-681">一个用来指定的典型值为 <see cref="F:System.Globalization.NumberStyles.Float" /> 与 <see cref="F:System.Globalization.NumberStyles.AllowThousands" /> 的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-681">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="0ba6b-682">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-682">An object that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-683">将具有指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-683">Converts the string representation of a number in a specified style and culture-specific format to its single-precision floating-point number equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-684">与 <paramref name="s" /> 中指定的数值或符号等效的单精度浮点数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-684">A single-precision floating-point number equivalent to the numeric value or symbol specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-685">`style`参数定义的样式元素 (如空白、 千位分隔符和货币符号)，可以用在`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-685">The `style` parameter defines the style elements (such as white space, thousands separators, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="0ba6b-686">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-686">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="0ba6b-687">以下<xref:System.Globalization.NumberStyles>不支持成员：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-687">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="0ba6b-688">`s`参数可以包含<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>，或<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>为指定的区域性`provider`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-688">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> for the culture specified by `provider`.</span></span> <span data-ttu-id="0ba6b-689">根据值`style`，它还可以采用以下形式：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-689">Depending on the value of `style`, it can also take the form:</span></span>  
  
 <span data-ttu-id="0ba6b-690">[*ws*] [*$*] [*登录*] [*整型数字*，]*整型数字*[。 [*小数位数*]][E [*登录*]*指数数字*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="0ba6b-690">[*ws*] [*$*] [*sign*][*integral-digits*,]*integral-digits*[.[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="0ba6b-691">括在方括号 （[和]） 是可选元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-691">Elements framed in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="0ba6b-692">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-692">The following table describes each element.</span></span>  
  
|<span data-ttu-id="0ba6b-693">元素</span><span class="sxs-lookup"><span data-stu-id="0ba6b-693">Element</span></span>|<span data-ttu-id="0ba6b-694">描述</span><span class="sxs-lookup"><span data-stu-id="0ba6b-694">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0ba6b-695">*ws*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-695">*ws*</span></span>|<span data-ttu-id="0ba6b-696">一系列的空白字符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-696">A series of white-space characters.</span></span> <span data-ttu-id="0ba6b-697">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-697">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|$|<span data-ttu-id="0ba6b-698">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-698">A culture-specific currency symbol.</span></span> <span data-ttu-id="0ba6b-699">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-699">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="0ba6b-700">当前区域性的货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-700">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0ba6b-701">*sign*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-701">*sign*</span></span>|<span data-ttu-id="0ba6b-702">负号符号 （-） 或正号符号 （+）。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-702">A negative sign symbol (-) or a positive sign symbol (+).</span></span> <span data-ttu-id="0ba6b-703">符号可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-703">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="0ba6b-704">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-704">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0ba6b-705">*整型数字*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-705">*integral-digits*</span></span>|<span data-ttu-id="0ba6b-706">一系列的范围从 0 到 9 的指定数的整数部分的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-706">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="0ba6b-707">*整型数字*元素可以是缺少如果字符串包含*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-707">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="0ba6b-708">,</span><span class="sxs-lookup"><span data-stu-id="0ba6b-708">,</span></span>|<span data-ttu-id="0ba6b-709">特定于区域性的组分隔符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-709">A culture-specific group separator.</span></span> <span data-ttu-id="0ba6b-710">当前区域性的组分隔符符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志</span><span class="sxs-lookup"><span data-stu-id="0ba6b-710">The current culture's group separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag</span></span>|  
|<span data-ttu-id="0ba6b-711">.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-711">.</span></span>|<span data-ttu-id="0ba6b-712">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-712">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="0ba6b-713">当前区域性的小数点符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-713">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0ba6b-714">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-714">*fractional-digits*</span></span>|<span data-ttu-id="0ba6b-715">一系列的范围从 0 到 9 的指定数的小数部分的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-715">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="0ba6b-716">小数位数可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-716">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0ba6b-717">E</span><span class="sxs-lookup"><span data-stu-id="0ba6b-717">E</span></span>|<span data-ttu-id="0ba6b-718">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-718">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="0ba6b-719">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-719">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0ba6b-720">*指数数字*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-720">*exponential-digits*</span></span>|<span data-ttu-id="0ba6b-721">一系列的范围从 0 到 9 的指定指数的位数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-721">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="0ba6b-722">仅为数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>样式) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-722">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="0ba6b-723">剩余<xref:System.Globalization.NumberStyles?displayProperty=nameWithType>成员控件可能会存在，但不是需要为存在于输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-723">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="0ba6b-724">下表指示个别<xref:System.Globalization.NumberStyles>标志会影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-724">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="0ba6b-725">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="0ba6b-725">NumberStyles value</span></span>|<span data-ttu-id="0ba6b-726">元素允许在`s`除数字之外</span><span class="sxs-lookup"><span data-stu-id="0ba6b-726">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="0ba6b-727">*整型数字*仅元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-727">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="0ba6b-728">小数点 (*。*) 和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-728">The decimal point (*.*) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="0ba6b-729">"E"或者"E"字符，它指示指数记数法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-729">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="0ba6b-730">此标志本身支持值的形式*数字*E*数字*; 其他标志需要为成功分析与此类元素为正或负号和小数点符号的字符串。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-730">This flag by itself supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="0ba6b-731">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-731">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="0ba6b-732">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-732">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="0ba6b-733">*登录*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-733">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="0ba6b-734">*登录*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-734">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="0ba6b-735">*登录*在括号内包含的数字值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-735">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="0ba6b-736">千位分隔符 （，） 元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-736">The thousands separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="0ba6b-737">货币 （$） 元素中。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-737">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="0ba6b-738">所有元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-738">All elements.</span></span> <span data-ttu-id="0ba6b-739">但是，`s`不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-739">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="0ba6b-740">*Ws*元素的开头或末尾`s`，*登录*开头`s`，和小数点 （.） 符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-740">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="0ba6b-741">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-741">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="0ba6b-742">`ws`， `sign`，千位分隔符 （，） 和小数点 （.） 元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-742">The `ws`, `sign`, thousands separator (,) and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="0ba6b-743">所有元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-743">All elements.</span></span> <span data-ttu-id="0ba6b-744">但是，`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-744">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="0ba6b-745">`provider`参数是<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-745">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="0ba6b-746">其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>对象，提供区域性特定信息的格式`value`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-746">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="0ba6b-747">通常情况下，`provider`可以是以下任何一个：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-747">Typically, `provider` can be any one of the following:</span></span>  
  
-   <span data-ttu-id="0ba6b-748">A<xref:System.Globalization.CultureInfo>表示提供数字格式设置信息的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-748">A <xref:System.Globalization.CultureInfo> object that represents the culture that provides numeric formatting information.</span></span> <span data-ttu-id="0ba6b-749">其<xref:System.Globalization.CultureInfo.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-749">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span>  
  
-   <span data-ttu-id="0ba6b-750">A<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-750">A <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="0ba6b-751">(其实现<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="0ba6b-751">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="0ba6b-752">实现一个自定义对象<xref:System.IFormatProvider>并使用<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>方法实例化并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-752">A custom object that implements <xref:System.IFormatProvider> and uses the <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> method to instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="0ba6b-753">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>对象使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-753">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
 <span data-ttu-id="0ba6b-754">如果在遇到分隔符`s`期间执行分析操作，并适用的货币或小数位的参数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-754">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="0ba6b-755">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-755">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-756">下面的代码示例使用<xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法，以便分析的字符串表示形式<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-756">The following code example uses the <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to parse the string representations of <xref:System.Single> values.</span></span> <span data-ttu-id="0ba6b-757">数组中的每个字符串进行分析使用 EN-US、 NL-NL 和一个自定义区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-757">Each string in an array is parsed using the formatting conventions of the en-US, nl-NL, and a custom culture.</span></span> <span data-ttu-id="0ba6b-758">自定义区域性以下划线 (_) 和其组大小为两个定义组分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-758">The custom culture defines its group separator symbol as the underscore ("_") and its group size as two.</span></span>  
  
 [!code-csharp[System.Single.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Parse/CS/parse3.cs#4)]
 [!code-vb[System.Single.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Parse/VB/parse3.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0ba6b-759">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-759">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0ba6b-760">
            <paramref name="s" /> 不代表数字值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-760">
              <paramref name="s" /> does not represent a numeric value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0ba6b-761">
            <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-761">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="0ba6b-762">- 或 -  <paramref name="style" /> 为 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-762">-or-  <paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="0ba6b-763">
            <paramref name="s" /> 表示一个小于 <see cref="F:System.Single.MinValue" /> 或大于 <see cref="F:System.Single.MaxValue" /> 的数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-763">
              <paramref name="s" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Single.ToString" />
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinity">
      <MemberSignature Language="C#" Value="public const float PositiveInfinity = Infinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 PositiveInfinity = float32(Infinity)" />
      <MemberSignature Language="DocId" Value="F:System.Single.PositiveInfinity" />
      <MemberSignature Language="VB.NET" Value="Public Const PositiveInfinity As Single  = Infinity" />
      <MemberSignature Language="C++ CLI" Value="public: float PositiveInfinity = Infinity;" />
      <MemberSignature Language="F#" Value="val mutable PositiveInfinity : single" Usage="System.single.PositiveInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>Infinity</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0ba6b-764">表示正无穷。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-764">Represents positive infinity.</span>
          </span>
          <span data-ttu-id="0ba6b-765">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-765">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-766">此常量的值为正数值除以零的结果。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-766">The value of this constant is the result of dividing a positive number by zero.</span></span>  
  
 <span data-ttu-id="0ba6b-767">操作的结果不大于时返回此常量<xref:System.Single.MaxValue>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-767">This constant is returned when the result of an operation is greater than <xref:System.Single.MaxValue>.</span></span>  
  
 <span data-ttu-id="0ba6b-768">使用<xref:System.Single.IsPositiveInfinity%2A>以确定值是否计算为正无穷大。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-768">Use <xref:System.Single.IsPositiveInfinity%2A> to determine whether a value evaluates to positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-769">下面的代码示例演示<xref:System.Single.PositiveInfinity>常量。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-769">The following code example demonstrates the <xref:System.Single.PositiveInfinity> constant.</span></span>  
  
 [!code-cpp[System.Single#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#10)]
 [!code-csharp[System.Single#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#10)]
 [!code-vb[System.Single#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.IsPositiveInfinity(System.Single)" />
        <altmember cref="M:System.Single.IsInfinity(System.Single)" />
        <altmember cref="F:System.Single.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-770">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-770">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-771">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-771">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-772">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-772">
              <see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-773">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-773">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ba6b-774">它只能在 <xref:System.Single> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-774">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0ba6b-775">建议的替代项是调用<xref:System.Convert.ToBoolean%28System.Single%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-775">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-776">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-776">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-777">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-777">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-778">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-778">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-779">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-779">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ba6b-780">它只能在 <xref:System.Single> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-780">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0ba6b-781">建议的替代项是调用<xref:System.Convert.ToByte%28System.Single%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-781">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-782">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-782">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-783">不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-783">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="0ba6b-784">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-784">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-785">不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-785">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="0ba6b-786">不返回任何值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-786">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0ba6b-787">在所有情况下。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-787">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-788">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-788">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-789">不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-789">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="0ba6b-790">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-790">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-791">不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-791">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="0ba6b-792">不返回任何值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-792">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0ba6b-793">在所有情况下。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-793">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-794">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-794">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-795">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-795">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-796">当前实例的值，已转换为 <see cref="T:System.Decimal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-796">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-797">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-797">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ba6b-798">它只能在 <xref:System.Single> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-798">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0ba6b-799">建议的替代项是调用<xref:System.Convert.ToDecimal%28System.Single%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-799">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-800">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-800">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-801">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-801">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-802">当前实例的值，已转换为 <see cref="T:System.Double" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-802">The value of the current instance, converted to a <see cref="T:System.Double" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-803">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-803">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ba6b-804">它只能在 <xref:System.Single> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-804">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0ba6b-805">建议的替代项是调用<xref:System.Convert.ToDouble%28System.Single%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-805">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-806">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-806">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-807">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-807">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-808">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-808">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-809">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-809">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ba6b-810">它只能在 <xref:System.Single> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-810">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0ba6b-811">建议的替代项是调用<xref:System.Convert.ToInt16%28System.Single%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-811">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-812">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-812">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-813">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-813">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-814">当前实例的值，已转换为 <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-814">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-815">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-815">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ba6b-816">它只能在 <xref:System.Single> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-816">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0ba6b-817">建议的替代项是调用<xref:System.Convert.ToInt32%28System.Single%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-817">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-818">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-818">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-819">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-819">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-820">当前实例的值，已转换为 <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-820">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-821">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-821">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ba6b-822">它只能在 <xref:System.Single> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-822">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0ba6b-823">建议的替代项是调用<xref:System.Convert.ToInt64%28System.Single%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-823">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-824">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-824">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-825">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-825">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-826">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-826">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-827">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-827">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ba6b-828">它只能在 <xref:System.Single> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-828">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0ba6b-829">建议的替代项是调用<xref:System.Convert.ToSByte%28System.Single%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-829">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-830">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-830">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-831">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-831">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-832">当前实例的值，未更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-832">The value of the current instance, unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-833">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-833">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ba6b-834">它只能在 <xref:System.Single> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-834">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0ba6b-835">此 <see cref="T:System.Single" /> 值要转换为的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-835">The type to which to convert this <see cref="T:System.Single" /> value.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="0ba6b-836">提供有关返回值格式信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-836">An object that supplies information about the format of the returned value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-837">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-837">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-838">当前实例的值，已转换为 <paramref name="type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-838">The value of the current instance, converted to <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-839">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-839">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ba6b-840">它只能在 <xref:System.Single> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-840">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0ba6b-841">建议的替代项是调用`static`(`Shared`在 Visual Basic 中)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-841">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-842">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-842">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-843">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-843">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-844">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-844">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-845">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-845">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ba6b-846">它只能在 <xref:System.Single> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-846">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0ba6b-847">建议的替代项是调用<xref:System.Convert.ToUInt16%28System.Single%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-847">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-848">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-848">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-849">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-849">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-850">当前实例的值，已转换为 <see cref="T:System.UInt32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-850">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-851">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-851">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ba6b-852">它只能在 <xref:System.Single> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-852">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0ba6b-853">建议的替代项是调用<xref:System.Convert.ToUInt32%28System.Single%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-853">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-854">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-854">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-855">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-855">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-856">当前实例的值，已转换为 <see cref="T:System.UInt64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-856">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-857">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-857">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ba6b-858">它只能在 <xref:System.Single> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-858">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0ba6b-859">建议的替代项是调用<xref:System.Convert.ToUInt64%28System.Single%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-859">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ba6b-860">将此实例的数值转换为其等效的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-860">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="single.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0ba6b-861">将此实例的数值转换为其等效的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-861">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-862">此实例的值的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-862">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-863"><xref:System.Single.ToString>方法格式<xref:System.Single>默认值 （"G"或常规） 中的值的当前区域性的格式。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-863">The <xref:System.Single.ToString> method formats a <xref:System.Single> value in the default ("G", or general) format of the current culture.</span></span> <span data-ttu-id="0ba6b-864">如果你想要指定其他文件格式或区域性，使用的其他重载<xref:System.Single.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-864">If you want to specify a different format or culture, use the other overloads of the <xref:System.Single.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="0ba6b-865">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-865">To use format</span></span>|<span data-ttu-id="0ba6b-866">区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-866">For culture</span></span>|<span data-ttu-id="0ba6b-867">使用的重载</span><span class="sxs-lookup"><span data-stu-id="0ba6b-867">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="0ba6b-868">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-868">Default ("G") format</span></span>|<span data-ttu-id="0ba6b-869">特定区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-869">A specific culture</span></span>|<xref:System.Single.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="0ba6b-870">特定的格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-870">A specific format</span></span>|<span data-ttu-id="0ba6b-871">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-871">Default (current) culture</span></span>|<xref:System.Single.ToString%28System.String%29>|  
|<span data-ttu-id="0ba6b-872">特定的格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-872">A specific format</span></span>|<span data-ttu-id="0ba6b-873">特定区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-873">A specific culture</span></span>|<xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="0ba6b-874">返回值可以是<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>，或格式的字符串：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-874">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or a string of the form:</span></span>  
  
 <span data-ttu-id="0ba6b-875">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</span><span class="sxs-lookup"><span data-stu-id="0ba6b-875">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</span></span>  
  
 <span data-ttu-id="0ba6b-876">可选元素括在方括号 （[和]）。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-876">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="0ba6b-877">包含字词"数字"的元素包含的范围从 0 到 9 的数字字符序列。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-877">Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span> <span data-ttu-id="0ba6b-878">下表列出每个元素：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-878">The following table lists each element:</span></span>  
  
|<span data-ttu-id="0ba6b-879">元素</span><span class="sxs-lookup"><span data-stu-id="0ba6b-879">Element</span></span>|<span data-ttu-id="0ba6b-880">描述</span><span class="sxs-lookup"><span data-stu-id="0ba6b-880">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0ba6b-881">*sign*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-881">*sign*</span></span>|<span data-ttu-id="0ba6b-882">负号或正号符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-882">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="0ba6b-883">*整型数字*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-883">*integral-digits*</span></span>|<span data-ttu-id="0ba6b-884">一系列的指定数的整数部分的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-884">A series of digits specifying the integral part of the number.</span></span> <span data-ttu-id="0ba6b-885">整型数字可以是 absent 是否存在小数位数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-885">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="0ba6b-886">'.'</span><span class="sxs-lookup"><span data-stu-id="0ba6b-886">'.'</span></span>|<span data-ttu-id="0ba6b-887">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-887">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="0ba6b-888">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-888">*fractional-digits*</span></span>|<span data-ttu-id="0ba6b-889">指定数字的小数部分位数一系列。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-889">A series of digits specifying the fractional part of the number.</span></span>|  
|<span data-ttu-id="0ba6b-890">e</span><span class="sxs-lookup"><span data-stu-id="0ba6b-890">'e'</span></span>|<span data-ttu-id="0ba6b-891">小写字符 e，该值指示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-891">A lowercase character 'e', indicating exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="0ba6b-892">*指数数字*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-892">*exponential-digits*</span></span>|<span data-ttu-id="0ba6b-893">一系列的指定指数的位数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-893">A series of digits specifying an exponent.</span></span>|  
  
 <span data-ttu-id="0ba6b-894">返回值的一些示例为"100"、"-123456789"、"123.45 e + 6"、"500"、"3.1416"、"600"、"-0.123"和"-Infinity"。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-894">Some examples of the return value are "100", "-123,456,789", "123.45e+6", "500", "3.1416", "600", "-0.123", and "-Infinity".</span></span>  
  
 <span data-ttu-id="0ba6b-895">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-895">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0ba6b-896">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-896">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0ba6b-897">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-897">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-898">下面的示例使用默认值<xref:System.Single.ToString%2A?displayProperty=nameWithType>方法以显示的字符串表示形式的大量<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-898">The following example uses the default <xref:System.Single.ToString%2A?displayProperty=nameWithType> method to display the string representations of a number of <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Single.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.ToString/CS/ToString1.cs#1)]
 [!code-vb[System.Single.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.ToString/VB/ToString1.vb#1)]  
  
 <span data-ttu-id="0ba6b-899">下面的代码示例演示如何使用<xref:System.Single.Parse%28System.String%29>方法以及<xref:System.Single.ToString>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-899">The following code example illustrates the use of the <xref:System.Single.Parse%28System.String%29> method along with the <xref:System.Single.ToString> method.</span></span>  
  
 [!code-cpp[System.Single#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#3)]
 [!code-csharp[System.Single#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#3)]
 [!code-vb[System.Single#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="single.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="0ba6b-900">一个提供区域性特定的格式设置信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-900">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-901">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-901">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-902">此实例的值的字符串表示形式，由 <paramref name="provider" /> 指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-902">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-903"><xref:System.Single.ToString%28System.IFormatProvider%29>方法格式<xref:System.Single>默认值 （"G"或常规） 中的值指定区域性的格式。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-903">The <xref:System.Single.ToString%28System.IFormatProvider%29> method formats a <xref:System.Single> value in the default ("G", or general) format of a specified culture.</span></span> <span data-ttu-id="0ba6b-904">如果你想要指定不同的格式或当前区域性，使用的其他重载<xref:System.Single.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-904">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Single.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="0ba6b-905">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-905">To use format</span></span>|<span data-ttu-id="0ba6b-906">区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-906">For culture</span></span>|<span data-ttu-id="0ba6b-907">使用的重载</span><span class="sxs-lookup"><span data-stu-id="0ba6b-907">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="0ba6b-908">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-908">Default ("G") format</span></span>|<span data-ttu-id="0ba6b-909">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-909">Default (current) culture</span></span>|<xref:System.Single.ToString>|  
|<span data-ttu-id="0ba6b-910">特定的格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-910">A specific format</span></span>|<span data-ttu-id="0ba6b-911">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-911">Default (current) culture</span></span>|<xref:System.Single.ToString%28System.String%29>|  
|<span data-ttu-id="0ba6b-912">特定的格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-912">A specific format</span></span>|<span data-ttu-id="0ba6b-913">特定区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-913">A specific culture</span></span>|<xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="0ba6b-914">返回值可以是<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>，或格式的字符串：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-914">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or a string of the form:</span></span>  
  
 <span data-ttu-id="0ba6b-915">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</span><span class="sxs-lookup"><span data-stu-id="0ba6b-915">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</span></span>  
  
 <span data-ttu-id="0ba6b-916">可选元素括在方括号 （[和]）。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-916">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="0ba6b-917">包含"digits"一词的元素包含的范围从 0 到 9 的数字字符序列。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-917">Elements containing the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span> <span data-ttu-id="0ba6b-918">下表列出每个元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-918">The following table lists each element.</span></span>  
  
|<span data-ttu-id="0ba6b-919">元素</span><span class="sxs-lookup"><span data-stu-id="0ba6b-919">Element</span></span>|<span data-ttu-id="0ba6b-920">描述</span><span class="sxs-lookup"><span data-stu-id="0ba6b-920">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0ba6b-921">Sign</span><span class="sxs-lookup"><span data-stu-id="0ba6b-921">sign</span></span>|<span data-ttu-id="0ba6b-922">负号或正号符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-922">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="0ba6b-923">整型数字</span><span class="sxs-lookup"><span data-stu-id="0ba6b-923">integral-digits</span></span>|<span data-ttu-id="0ba6b-924">一系列的指定数的整数部分的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-924">A series of digits specifying the integral part of the number.</span></span> <span data-ttu-id="0ba6b-925">整型数字可以是 absent 是否存在小数位数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-925">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="0ba6b-926">'.'</span><span class="sxs-lookup"><span data-stu-id="0ba6b-926">'.'</span></span>|<span data-ttu-id="0ba6b-927">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-927">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="0ba6b-928">小数位数</span><span class="sxs-lookup"><span data-stu-id="0ba6b-928">fractional-digits</span></span>|<span data-ttu-id="0ba6b-929">指定数字的小数部分位数一系列。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-929">A series of digits specifying the fractional part of the number.</span></span>|  
|<span data-ttu-id="0ba6b-930">e</span><span class="sxs-lookup"><span data-stu-id="0ba6b-930">'e'</span></span>|<span data-ttu-id="0ba6b-931">小写字符 e，该值指示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-931">A lowercase character 'e', indicating exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="0ba6b-932">指数数字</span><span class="sxs-lookup"><span data-stu-id="0ba6b-932">exponential-digits</span></span>|<span data-ttu-id="0ba6b-933">一系列的指定指数的位数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-933">A series of digits specifying an exponent.</span></span>|  
  
 <span data-ttu-id="0ba6b-934">返回值的一些示例为"100"、"-123456789"、"123.45 e + 6"、"500"、"3.1416"、"600"、"-0.123"和"-Infinity"。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-934">Some examples of the return value are "100", "-123,456,789", "123.45e+6", "500", "3.1416", "600", "-0.123", and "-Infinity".</span></span>  
  
 <span data-ttu-id="0ba6b-935">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-935">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0ba6b-936">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-936">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0ba6b-937">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-937">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="0ba6b-938">`provider`参数是<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-938">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="0ba6b-939">通常情况下，`provider`是<xref:System.Globalization.CultureInfo>对象或<xref:System.Globalization.NumberFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-939">Typically, `provider` is a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="0ba6b-940">`provider`参数提供区域性特定信息设置格式时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-940">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="0ba6b-941">如果`provider`是`null`，返回值的格式使用<xref:System.Globalization.NumberFormatInfo>为当前区域性的数据。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-941">If `provider` is `null`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> data for the current culture.</span></span>  
  
 <span data-ttu-id="0ba6b-942">要转换<xref:System.Single>为使用指定的区域性和一个特定的格式字符串，调用其字符串表示形式的值<xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-942">To convert a <xref:System.Single> value to its string representation using a specified culture and a specific format string, call the <xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-943">下面的示例显示的字符串表示形式两个<xref:System.Single>值使用<xref:System.Globalization.CultureInfo>表示几种不同区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-943">The following example displays the string representation of two <xref:System.Single> values using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Single.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.ToString/CS/ToString1.cs#2)]
 [!code-vb[System.Single.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.ToString/VB/ToString1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="single.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="0ba6b-944">一个数值格式字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-944">A numeric format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-945">使用指定的格式，将此实例的数值转换为它的等效字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-945">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-946">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-946">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-947"><xref:System.Single.ToString%28System.String%29>方法格式<xref:System.Single>通过使用当前区域性的约定指定的格式的值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-947">The <xref:System.Single.ToString%28System.String%29> method formats a <xref:System.Single> value in a specified format by using the conventions of the current culture.</span></span> <span data-ttu-id="0ba6b-948">如果你想要使用默认值 （"G"或常规） 格式或指定不同的区域性，请使用其他重载的<xref:System.Single.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-948">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Single.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="0ba6b-949">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-949">To use format</span></span>|<span data-ttu-id="0ba6b-950">区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-950">For culture</span></span>|<span data-ttu-id="0ba6b-951">使用的重载</span><span class="sxs-lookup"><span data-stu-id="0ba6b-951">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="0ba6b-952">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-952">Default ("G") format</span></span>|<span data-ttu-id="0ba6b-953">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-953">Default (current) culture</span></span>|<xref:System.Single.ToString>|  
|<span data-ttu-id="0ba6b-954">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-954">Default ("G") format</span></span>|<span data-ttu-id="0ba6b-955">特定区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-955">A specific culture</span></span>|<xref:System.Single.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="0ba6b-956">特定的格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-956">A specific format</span></span>|<span data-ttu-id="0ba6b-957">特定区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-957">A specific culture</span></span>|<xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="0ba6b-958">返回值可以是<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>，或当前实例所指定的值的字符串表示`format`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-958">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or the string representation of the value of the current instance, as specified by `format`.</span></span>  
  
 <span data-ttu-id="0ba6b-959">`format`参数可以是任何有效的标准数字格式说明符 （D 和 X，除外） 以及自定义数字格式说明符的任意组合。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-959">The `format` parameter can be any valid standard numeric format specifier except for D and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="0ba6b-960">如果格式是`null`或空字符串，返回值格式与常规的数字格式说明符 ("G")。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-960">If format is `null` or an empty string, the return value is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="0ba6b-961">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-961">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0ba6b-962">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-962">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0ba6b-963">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-963">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="0ba6b-964">默认情况下，返回的值仅包含 7 位精度但内部维护最多的 9 位。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-964">By default, the return value only contains 7 digits of precision although a maximum of 9 digits is maintained internally.</span></span> <span data-ttu-id="0ba6b-965">如果此实例的值大于 7 位<xref:System.Single.ToString%28System.String%29>返回<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>或<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>而不是预期的版本号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-965">If the value of this instance has greater than 7 digits, <xref:System.Single.ToString%28System.String%29> returns <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> instead of the expected number.</span></span> <span data-ttu-id="0ba6b-966">如果需要更高的精度，指定`format`与"G9"格式规范，后者始终返回 9 位精度或"R"，它返回 7 位如果可以用该精度或 9 的数字表示数，如果仅可以表示的数与最大精度。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-966">If you require more precision, specify `format` with the "G9" format specification, which always returns 9 digits of precision, or "R", which returns 7 digits if the number can be represented with that precision or 9 digits if the number can only be represented with maximum precision.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-967">下面的示例定义一个数值，并将其格式化为货币值使用"C"标准数字格式字符串为三个小数位的数字值以及通过使用"N"标准数字格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-967">The following example defines a numeric value and formats it as a currency value by using the "C" standard numeric format string and as a numeric value to three decimal places by using the "N" standard numeric format string.</span></span> <span data-ttu-id="0ba6b-968">结果字符串设置格式的使用 EN-US 区域性的约定。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-968">The result strings are formatted by using the conventions of the en-US culture.</span></span> <span data-ttu-id="0ba6b-969">数字格式字符串的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-969">For more information on numeric format strings, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
 [!code-csharp[System.Single.ToString#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.ToString/CS/ToString7.cs#7)]
 [!code-vb[System.Single.ToString#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.ToString/VB/ToString7.vb#7)]  
  
 <span data-ttu-id="0ba6b-970">下面的示例显示几个<xref:System.Single>使用每个支持标准数字格式说明符以及两个自定义数字格式字符串值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-970">The following example displays several <xref:System.Single> values using each of the supported standard numeric format specifiers together with two custom numeric format strings.</span></span> <span data-ttu-id="0ba6b-971">这些自定义格式字符串中的一个演示如何以填充<xref:System.Single>用前导零的值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-971">One of those custom format strings illustrates how to pad a <xref:System.Single> value with leading zeros.</span></span> <span data-ttu-id="0ba6b-972">在将数字的值转换为字符串，该示例使用 EN-US 区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-972">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Single.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.ToString/CS/ToString1.cs#3)]
 [!code-vb[System.Single.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.ToString/VB/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0ba6b-973">
            <paramref name="format" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-973">
              <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:System.Single.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="single.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="0ba6b-974">一个数值格式字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-974">A numeric format string.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="0ba6b-975">一个提供区域性特定的格式设置信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-975">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-976">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-976">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-977">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-977">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-978"><xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29>方法格式<xref:System.Single>采用指定区域性的指定格式的值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-978">The <xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Single> value in a specified format of a specified culture.</span></span> <span data-ttu-id="0ba6b-979">如果你想要使用默认格式或区域性设置，使用的其他重载<xref:System.Single.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-979">If you want to use default format or culture settings, use the other overloads of the <xref:System.Single.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="0ba6b-980">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-980">To use format</span></span>|<span data-ttu-id="0ba6b-981">区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-981">For culture</span></span>|<span data-ttu-id="0ba6b-982">使用的重载</span><span class="sxs-lookup"><span data-stu-id="0ba6b-982">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="0ba6b-983">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-983">Default ("G") format</span></span>|<span data-ttu-id="0ba6b-984">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-984">Default (current) culture</span></span>|<xref:System.Single.ToString>|  
|<span data-ttu-id="0ba6b-985">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-985">Default ("G") format</span></span>|<span data-ttu-id="0ba6b-986">特定区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-986">A specific culture</span></span>|<xref:System.Single.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="0ba6b-987">特定的格式</span><span class="sxs-lookup"><span data-stu-id="0ba6b-987">A specific format</span></span>|<span data-ttu-id="0ba6b-988">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="0ba6b-988">Default (current) culture</span></span>|<xref:System.Single.ToString%28System.String%29>|  
  
 <span data-ttu-id="0ba6b-989">返回值可以是<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>，或当前实例所指定的值的字符串表示`format`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-989">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or the string representation of the value of the current instance, as specified by `format`.</span></span>  
  
 <span data-ttu-id="0ba6b-990">`format`参数可以是任何有效的标准数字格式说明符 （D 和 X，除外） 以及自定义数字格式说明符的任意组合。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-990">The `format` parameter can be any valid standard numeric format specifier except for D and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="0ba6b-991">如果`format`是`null`或空字符串，此实例的返回值格式与常规的数字格式说明符 ("G")。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-991">If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="0ba6b-992">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-992">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0ba6b-993">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-993">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0ba6b-994">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-994">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="0ba6b-995">`provider`参数是<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-995">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="0ba6b-996">通常情况下，`provider`是<xref:System.Globalization.CultureInfo>对象或<xref:System.Globalization.NumberFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-996">Typically, `provider` is a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="0ba6b-997">`provider`参数提供区域性特定信息设置格式时使用。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-997">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="0ba6b-998">如果`provider`是`null`，返回的值进行格式设置<xref:System.Globalization.NumberFormatInfo>为当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-998">If `provider` is `null`, the return value is formatted with the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
 <span data-ttu-id="0ba6b-999">默认情况下，返回的值仅包含 7 位精度但内部维护最多的 9 位。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-999">By default, the return value only contains 7 digits of precision although a maximum of 9 digits is maintained internally.</span></span> <span data-ttu-id="0ba6b-1000">如果此实例的值大于 7 位<xref:System.Single.ToString%2A>返回<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>或<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>而不是预期的版本号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1000">If the value of this instance has greater than 7 digits, <xref:System.Single.ToString%2A> returns <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> instead of the expected number.</span></span> <span data-ttu-id="0ba6b-1001">如果需要更高的精度，指定`format`与"G9"格式规范，后者始终返回 9 位精度或"R"，它返回 7 位如果可以用该精度或 9 的数字表示数，如果仅可以表示的数与最大精度。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1001">If you require more precision, specify `format` with the "G9" format specification, which always returns 9 digits of precision, or "R", which returns 7 digits if the number can be represented with that precision or 9 digits if the number can only be represented with maximum precision.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-1002">下面的示例显示<xref:System.Single>值的每个支持标准数字格式说明符用于多个不同的区域性。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1002">The following example displays a <xref:System.Single> value using each of the supported standard numeric format specifiers for several different cultures.</span></span>  
  
 [!code-csharp[System.Single.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.ToString/CS/ToString1.cs#4)]
 [!code-vb[System.Single.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.ToString/VB/ToString1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="single.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0ba6b-1003">将数字的字符串表示形式转换为它的等效单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1003">Converts the string representation of a number to its single-precision floating-point number equivalent.</span>
          </span>
          <span data-ttu-id="0ba6b-1004">一个指示转换是否成功的返回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1004">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Single.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out float result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] float32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.TryParse(System.ReadOnlySpan{System.Char},System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] float % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.single.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out float result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] float32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.TryParse(System.String,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] float % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.single.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0ba6b-1005">表示要转换的数字的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1005">A string representing a number to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="0ba6b-1006">当此方法返回时，如果转换成功，则包含与 <c>s</c> 所包含的数值或符号等效的单精度浮点数字；如果转换失败，则包含零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1006">When this method returns, contains single-precision floating-point number equivalent to the numeric value or symbol contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="0ba6b-1007">如果 <c>s</c> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、不是有效格式的数字，或者表示的数字小于 <see cref="F:System.Single.MinValue" /> 或大于 <see cref="F:System.Single.MaxValue" />，则转换失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1007">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not a number in a valid format, or represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
          <span data-ttu-id="0ba6b-1008">此参数未经初始化即进行传递；最初在 <c>result</c> 中提供的任何值都会被覆盖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1008">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-1009">将数字的字符串表示形式转换为它的等效单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1009">Converts the string representation of a number to its single-precision floating-point number equivalent.</span>
          </span>
          <span data-ttu-id="0ba6b-1010">一个指示转换是否成功的返回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1010">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-1011">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1011">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-1012">此重载区别<xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType>通过返回一个布尔值，该值指示是否分析操作成功，而不是返回的已分析的数字值的方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1012">This overload differs from the <xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="0ba6b-1013">不必使用异常处理来测试是否<xref:System.FormatException>的事件中`s`无效，无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1013">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="0ba6b-1014">`s`参数可以包含<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A> （字符串比较是区分大小写） 或格式的字符串：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1014">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A> (the string comparison is case-sensitive), or a string of the form:</span></span>  
  
 <span data-ttu-id="0ba6b-1015">[ws][sign][integral-digits,]integral-digits[.[fractional-digits]][e[sign]exponential-digits][ws]</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1015">[ws][sign][integral-digits,]integral-digits[.[fractional-digits]][e[sign]exponential-digits][ws]</span></span>  
  
 <span data-ttu-id="0ba6b-1016">括号中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1016">Elements in square brackets are optional.</span></span> <span data-ttu-id="0ba6b-1017">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1017">The following table describes each element.</span></span>  
  
|<span data-ttu-id="0ba6b-1018">元素</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1018">Element</span></span>|<span data-ttu-id="0ba6b-1019">描述</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1019">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0ba6b-1020">*ws*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1020">*ws*</span></span>|<span data-ttu-id="0ba6b-1021">一系列的空白字符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1021">A series of white-space characters.</span></span>|  
|<span data-ttu-id="0ba6b-1022">*sign*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1022">*sign*</span></span>|<span data-ttu-id="0ba6b-1023">负号或正号符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1023">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="0ba6b-1024">*整型数字*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1024">*integral-digits*</span></span>|<span data-ttu-id="0ba6b-1025">一系列数字字符，范围从 0 到 9 的指定数的整数部分。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1025">A series of numeric characters ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="0ba6b-1026">整型数字可以是 absent 是否存在小数位数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1026">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="0ba6b-1027">*，*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1027">*,*</span></span>|<span data-ttu-id="0ba6b-1028">区域性特定的组分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1028">A culture-specific group separator symbol.</span></span>|  
|<span data-ttu-id="0ba6b-1029">*.*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1029">*.*</span></span>|<span data-ttu-id="0ba6b-1030">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1030">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="0ba6b-1031">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1031">*fractional-digits*</span></span>|<span data-ttu-id="0ba6b-1032">一系列数字字符，范围从 0 到 9 的指定数的小数部分。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1032">A series of numeric characters ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="0ba6b-1033">*E*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1033">*E*</span></span>|<span data-ttu-id="0ba6b-1034">一个大写或小写字符 e 指示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1034">An uppercase or lowercase character 'e', that indicates exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="0ba6b-1035">*指数数字*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1035">*exponential-digits*</span></span>|<span data-ttu-id="0ba6b-1036">一系列数字字符，范围从 0 到 9 的指定指数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1036">A series of numeric characters ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="0ba6b-1037">`s`参数被解释结合使用<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1037">The `s` parameter is interpreted using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="0ba6b-1038">这意味着该空白和千位分隔符可以但不是货币符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1038">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="0ba6b-1039">若要显式定义的元素 (如货币符号、 千位分隔符和空白区域)，可出现在`s`，使用<xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29>方法重载。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1039">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29> method overload.</span></span>  
  
 <span data-ttu-id="0ba6b-1040">`s`使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1040">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="0ba6b-1041">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1041">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0ba6b-1042">为分析字符串使用的格式信息的一些其他指定区域性，请使用<xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29>方法重载。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1042">To parse a string using the formatting information of some other specified culture, use the <xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29> method overload.</span></span>  
  
 <span data-ttu-id="0ba6b-1043">通常，如果你通过<xref:System.Single.TryParse%2A?displayProperty=nameWithType>方法通过调用创建的字符串<xref:System.Single.ToString%2A?displayProperty=nameWithType>方法时，原始<xref:System.Single>返回值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1043">Ordinarily, if you pass the <xref:System.Single.TryParse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Single> value is returned.</span></span> <span data-ttu-id="0ba6b-1044">但是，由于精度损失，值可能不相等。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1044">However, because of a loss of precision, the values may not be equal.</span></span>  
  
 <span data-ttu-id="0ba6b-1045">如果在遇到分隔符`s`期间执行分析操作，并适用的货币或小数位的参数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1045">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="0ba6b-1046">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1046">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-1047">下面的示例使用<xref:System.Single.TryParse%28System.String%2CSystem.Single%40%29>方法将转换的字符串表示形式个数值赋给<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1047">The following example uses the <xref:System.Single.TryParse%28System.String%2CSystem.Single%40%29> method to convert the string representations of numeric values to <xref:System.Single> values.</span></span> <span data-ttu-id="0ba6b-1048">它假设该 EN-US 当前区域性。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1048">It assumes that en-US is the current culture.</span></span>  
  
 [!code-csharp[System.Single.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.Single.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.Parse(System.String)" />
        <altmember cref="M:System.Single.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out float result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] float32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] float % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.single.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out float result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] float32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] float % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.single.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0ba6b-1049">表示要转换的数字的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1049">A string representing a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="0ba6b-1050">枚举值的按位组合，指示 <c>s</c> 允许使用的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1050">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span>
          </span>
          <span data-ttu-id="0ba6b-1051">一个用来指定的典型值为 <see cref="F:System.Globalization.NumberStyles.Float" /> 与 <see cref="F:System.Globalization.NumberStyles.AllowThousands" /> 的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1051">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="0ba6b-1052">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1052">An object that supplies culture-specific formatting information about <c>s</c>.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="0ba6b-1053">当此方法返回时，如果转换成功，则包含与 <c>s</c> 所包含的数值或符号等效的单精度浮点数字；如果转换失败，则包含零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1053">When this method returns, contains the single-precision floating-point number equivalent to the numeric value or symbol contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="0ba6b-1054">如果 <c>s</c> 参数为 <see langword="null" /> 或为 <see cref="F:System.String.Empty" />、格式不符合 <c>style</c>、表示的数小于 <see cref="F:System.Single.MinValue" /> 或大于 <see cref="F:System.Single.MaxValue" />，或者 <c>style</c> 不是 <see cref="T:System.Globalization.NumberStyles" /> 枚举的常量的有效组合，则转换失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1054">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />, or if <c>style</c> is not a valid combination of <see cref="T:System.Globalization.NumberStyles" /> enumerated constants.</span>
          </span>
          <span data-ttu-id="0ba6b-1055">此参数未经初始化即进行传递；最初在 <c>result</c> 中提供的任何值都会被覆盖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1055">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0ba6b-1056">将具有指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1056">Converts the string representation of a number in a specified style and culture-specific format to its single-precision floating-point number equivalent.</span>
          </span>
          <span data-ttu-id="0ba6b-1057">一个指示转换是否成功的返回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1057">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0ba6b-1058">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1058">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ba6b-1059">此重载区别<xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>通过返回一个布尔值，该值指示是否分析操作成功，而不是返回的已分析的数字值的方法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1059">This overload differs from the <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="0ba6b-1060">不必使用异常处理来测试是否<xref:System.FormatException>的事件中`s`无效，无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1060">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="0ba6b-1061">`style`参数定义的允许的格式`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1061">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="0ba6b-1062">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1062">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="0ba6b-1063">以下<xref:System.Globalization.NumberStyles>不支持成员：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1063">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>  
  
 <span data-ttu-id="0ba6b-1064">`s`参数可以包含<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>， <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>，<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>由指定的区域性`provider`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1064">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A> for the culture indicated by `provider`.</span></span> <span data-ttu-id="0ba6b-1065">此外，根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1065">In addition, depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="0ba6b-1066">[ws][$][登录][整型数字，] 整数位 [.fractional-数字] [e [登录] / 指数-数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1066">[ws] [$] [sign][integral-digits,]integral-digits[.fractional-digits][e[sign]exponential-digits][ws]</span></span>  
  
 <span data-ttu-id="0ba6b-1067">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1067">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="0ba6b-1068">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1068">The following table describes each element.</span></span>  
  
|<span data-ttu-id="0ba6b-1069">元素</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1069">Element</span></span>|<span data-ttu-id="0ba6b-1070">描述</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1070">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0ba6b-1071">*ws*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1071">*ws*</span></span>|<span data-ttu-id="0ba6b-1072">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1072">Optional white space.</span></span> <span data-ttu-id="0ba6b-1073">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1073">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="0ba6b-1074">它可以在末尾显示`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1074">It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="0ba6b-1075">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1075">A culture-specific currency symbol.</span></span> <span data-ttu-id="0ba6b-1076">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>或<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>属性<xref:System.Globalization.NumberFormatInfo>返回对象<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1076">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method of the `provider` parameter.</span></span> <span data-ttu-id="0ba6b-1077">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1077">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0ba6b-1078">*sign*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1078">*sign*</span></span>|<span data-ttu-id="0ba6b-1079">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1079">An optional sign.</span></span> <span data-ttu-id="0ba6b-1080">符号可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1080">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="0ba6b-1081">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1081">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0ba6b-1082">*整型数字*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1082">*integral-digits*</span></span>|<span data-ttu-id="0ba6b-1083">一系列的范围从 0 到 9 的指定数的整数部分的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1083">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="0ba6b-1084">整型数字可以是 absent 是否存在小数位数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1084">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="0ba6b-1085">*，*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1085">*,*</span></span>|<span data-ttu-id="0ba6b-1086">特定于区域性的千位分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1086">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="0ba6b-1087">当前区域性的千位分隔符符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1087">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0ba6b-1088">*.*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1088">*.*</span></span>|<span data-ttu-id="0ba6b-1089">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1089">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="0ba6b-1090">当前区域性的小数点符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1090">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0ba6b-1091">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1091">*fractional-digits*</span></span>|<span data-ttu-id="0ba6b-1092">一系列的范围从 0 到 9 的指定数的小数部分的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1092">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="0ba6b-1093">小数位数可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1093">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0ba6b-1094">*e*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1094">*e*</span></span>|<span data-ttu-id="0ba6b-1095">E 或 E 字符，指示`s`可以表示的数字使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1095">The e or E character, which indicates that `s` can represent a number using exponential notation.</span></span> <span data-ttu-id="0ba6b-1096">`s`参数可以表示指数记数法的数字，如果 style 包含<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1096">The `s` parameter can represent a number in exponential notation if style includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0ba6b-1097">*指数数字*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1097">*exponential-digits*</span></span>|<span data-ttu-id="0ba6b-1098">一系列的范围从 0 到 9 的指定指数的位数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1098">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="0ba6b-1099">仅为数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>样式) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1099">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="0ba6b-1100">剩余<xref:System.Globalization.NumberStyles?displayProperty=nameWithType>成员控件可能但不是需要输入字符串中存在的元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1100">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="0ba6b-1101">下表指示个别<xref:System.Globalization.NumberStyles>标志会影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1101">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="0ba6b-1102">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1102">NumberStyles value</span></span>|<span data-ttu-id="0ba6b-1103">除数字之外的 s 中允许的元素</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1103">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="0ba6b-1104">*整型数字*仅元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1104">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="0ba6b-1105">*.*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1105">The *.*</span></span> <span data-ttu-id="0ba6b-1106">和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1106">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="0ba6b-1107">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1107">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="0ba6b-1108">此标志本身支持值的形式*整型数字*E*指数数字*; 其他标志需要为成功分析字符串中与此类元素作为指数记数法正或负号和小数点符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1108">This flag by itself supports values in the form *integral-digits*E*exponential-digits*; additional flags are needed to successfully parse strings in exponential notation with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="0ba6b-1109">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1109">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="0ba6b-1110">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1110">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="0ba6b-1111">*登录*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1111">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="0ba6b-1112">*登录*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1112">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="0ba6b-1113">*登录*在括号内包含的数字值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1113">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="0ba6b-1114">*，* 元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1114">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="0ba6b-1115">* $ *元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1115">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="0ba6b-1116">全部。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1116">All.</span></span> <span data-ttu-id="0ba6b-1117">`s`参数不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1117">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="0ba6b-1118">*Ws*元素的开头或末尾`s`，*登录*开头`s`，和 *。*</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1118">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="0ba6b-1119">符号。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1119">symbol.</span></span> <span data-ttu-id="0ba6b-1120">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1120">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="0ba6b-1121">`ws`， `sign`，千位分隔符 (*，)，* 和小数点 (*。*) 元素。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1121">The `ws`, `sign`, thousands separator (*,),* and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="0ba6b-1122">所有样式，除`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1122">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="0ba6b-1123">`provider`参数是<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供区域性特定格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1123">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="0ba6b-1124">当<xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29>调用方法时，它调用`provider`参数的<xref:System.IFormatProvider.GetFormat%2A>方法并将其传递<xref:System.Type>对象，表示<xref:System.Globalization.NumberFormatInfo>类型。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1124">When the <xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="0ba6b-1125"><xref:System.IFormatProvider.GetFormat%2A>方法然后返回<xref:System.Globalization.NumberFormatInfo>提供的格式有关的信息的对象`s`参数。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1125">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information about the format of the `s` parameter.</span></span> <span data-ttu-id="0ba6b-1126">有三种方法使用`provider`参数来提供到分析操作的自定义格式设置信息：</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1126">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="0ba6b-1127">你可以将传递<xref:System.Globalization.CultureInfo>表示的区域性的提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1127">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="0ba6b-1128">其<xref:System.Globalization.CultureInfo.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供该区域性的数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1128">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="0ba6b-1129">你可以将传递的实际<xref:System.Globalization.NumberFormatInfo>提供数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1129">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="0ba6b-1130">(其实现<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1130">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="0ba6b-1131">你可以传递的自定义对象，实现<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1131">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="0ba6b-1132">其<xref:System.IFormatProvider.GetFormat%2A>方法实例化，并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1132">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="0ba6b-1133">如果`provider`是`null`的格式`s`解释基于<xref:System.Globalization.NumberFormatInfo>当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1133">If `provider` is `null`, the formatting of `s` is interpreted based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
 <span data-ttu-id="0ba6b-1134">如果在遇到分隔符`s`期间执行分析操作，并适用的货币或小数位的参数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1134">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="0ba6b-1135">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1135">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ba6b-1136">下面的示例演示了利用<xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29?displayProperty=nameWithType>方法，以便分析的字符串表示形式的特定样式，其格式使用特定区域性的约定的数字。</span><span class="sxs-lookup"><span data-stu-id="0ba6b-1136">The following example demonstrates the use of the <xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29?displayProperty=nameWithType> method to parse the string representation of numbers that have a particular style and are formatted using the conventions of a particular culture.</span></span>  
  
 [!code-csharp[System.Single.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.tryparse/cs/tryparse1.cs#2)]
 [!code-vb[System.Single.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.tryparse/vb/tryparse1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0ba6b-1137">
            <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1137">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="0ba6b-1138">- 或 -  <paramref name="style" /> 为 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0ba6b-1138">-or-  <paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Single.Parse(System.String)" />
        <altmember cref="M:System.Single.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>