<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICloneable.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac516f82c5c56038b15f02ee49bceba76f633586c47.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">16f82c5c56038b15f02ee49bceba76f633586c47</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ICloneable">
          <source>Supports cloning, which creates a new instance of a class with the same value as an existing instance.</source>
          <target state="translated">支持克隆，即用与现有实例相同的值创建类的新实例。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICloneable">
          <source>The <ph id="ph1">&lt;xref:System.ICloneable&gt;</ph> interface enables you to provide a customized implementation that creates a copy of an existing object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ICloneable&gt;</ph>接口使你能够创建现有对象的副本的自定义的实现。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICloneable">
          <source>The <ph id="ph1">&lt;xref:System.ICloneable&gt;</ph> interface contains one member, the <ph id="ph2">&lt;xref:System.ICloneable.Clone%2A&gt;</ph> method, which is intended to provide cloning support beyond that supplied by <ph id="ph3">&lt;xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ICloneable&gt;</ph>接口包含一个成员，<ph id="ph2">&lt;xref:System.ICloneable.Clone%2A&gt;</ph>方法，旨在提供超出由提供的克隆支持<ph id="ph3">&lt;xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICloneable">
          <source>For more information about cloning, deep versus shallow copies, and examples, see the <ph id="ph1">&lt;xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">有关克隆、 深与浅表副本和示例的详细信息，请参阅<ph id="ph1">&lt;xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICloneable">
          <source>The <ph id="ph1">&lt;see cref="T:System.ICloneable" /&gt;</ph> interface simply requires that your implementation of the <ph id="ph2">&lt;see cref="M:System.ICloneable.Clone" /&gt;</ph> method return a copy of the current object instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ICloneable" /&gt;</ph>接口只是要求的实现<ph id="ph2">&lt;see cref="M:System.ICloneable.Clone" /&gt;</ph>方法返回当前对象实例的副本。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICloneable">
          <source>It does not specify whether the cloning operation performs a deep copy, a shallow copy, or something in between.</source>
          <target state="translated">未指定在克隆操作执行的深层副本、 的浅表副本，或两者之间的内容。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICloneable">
          <source>Nor does it require all property values of the original instance to be copied to the new instance.</source>
          <target state="translated">也不要求要复制到新的实例的原始实例的所有属性值。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICloneable">
          <source>For example, the <ph id="ph1">&lt;see cref="M:System.Globalization.NumberFormatInfo.Clone" /&gt;</ph> method performs a shallow copy of all properties except the <ph id="ph2">&lt;see cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" /&gt;</ph> property; it always sets this property value to <ph id="ph3">&lt;see langword="false" /&gt;</ph> in the cloned object.</source>
          <target state="translated">例如，<ph id="ph1">&lt;see cref="M:System.Globalization.NumberFormatInfo.Clone" /&gt;</ph>方法执行所有的属性除外的浅表副本<ph id="ph2">&lt;see cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" /&gt;</ph>属性; 它始终将此属性的值设置为<ph id="ph3">&lt;see langword="false" /&gt;</ph>中克隆的对象。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ICloneable">
          <source>Because callers of <ph id="ph1">&lt;see cref="M:System.ICloneable.Clone" /&gt;</ph> cannot depend on the method performing a predictable cloning operation, we recommend that <ph id="ph2">&lt;see cref="T:System.ICloneable" /&gt;</ph> not be implemented in public APIs.</source>
          <target state="translated">因为的调用方<ph id="ph1">&lt;see cref="M:System.ICloneable.Clone" /&gt;</ph>不能依赖于执行可预测的方法克隆操作，我们建议，<ph id="ph2">&lt;see cref="T:System.ICloneable" /&gt;</ph>不在公共 Api 中实现。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ICloneable.Clone">
          <source>Creates a new object that is a copy of the current instance.</source>
          <target state="translated">创建作为当前实例副本的新对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ICloneable.Clone">
          <source>A new object that is a copy of this instance.</source>
          <target state="translated">作为此实例副本的新对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICloneable.Clone">
          <source>The resulting clone must be of the same type as, or compatible with, the original instance.</source>
          <target state="translated">生成的克隆必须为相同类型，或与原始实例兼容。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICloneable.Clone">
          <source>An implementation of <ph id="ph1">&lt;xref:System.ICloneable.Clone%2A&gt;</ph> can perform either a deep copy or a shallow copy.</source>
          <target state="translated">实现<ph id="ph1">&lt;xref:System.ICloneable.Clone%2A&gt;</ph>可以执行的深层副本或的浅表副本。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICloneable.Clone">
          <source>In a deep copy, all objects are duplicated; in a shallow copy, only the top-level objects are duplicated and the lower levels contain references.</source>
          <target state="translated">中的深层副本会复制所有对象;在浅表副本中，仅了顶级对象都进行了复制和较低级别包含的引用。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICloneable.Clone">
          <source>Because callers of <ph id="ph1">&lt;xref:System.ICloneable.Clone%2A&gt;</ph> cannot depend on the method performing a predictable cloning operation, we recommend that <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> not be implemented in public APIs.</source>
          <target state="translated">因为的调用方<ph id="ph1">&lt;xref:System.ICloneable.Clone%2A&gt;</ph>不能依赖于执行可预测的方法克隆操作，我们建议，<ph id="ph2">&lt;xref:System.ICloneable&gt;</ph>不在公共 Api 中实现。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ICloneable.Clone">
          <source>See <ph id="ph1">&lt;xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType&gt;</ph> for more information on cloning, deep versus shallow copies, and examples.</source>
          <target state="translated">请参阅<ph id="ph1">&lt;xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType&gt;</ph>上克隆、 深与浅表副本和示例的详细信息。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>