<Type Name="TypeAccessException" FullName="System.TypeAccessException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8bd1a65f5aed507ade9707ac2aa4fd591887762a" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57953185" /></Metadata><TypeSignature Language="C#" Value="public class TypeAccessException : TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TypeAccessException extends System.TypeLoadException" />
  <TypeSignature Language="DocId" Value="T:System.TypeAccessException" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeAccessException&#xA;Inherits TypeLoadException" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeAccessException : TypeLoadException" />
  <TypeSignature Language="F#" Value="type TypeAccessException = class&#xA;    inherit TypeLoadException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.TypeLoadException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0a7bf-101">当方法试图使用它无权访问的类型时引发的异常。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-101">The exception that is thrown when a method attempts to use a type that it does not have access to.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7bf-102"><xref:System.TypeAccessException> 方法会尝试将对象转换为不能从方法访问的类型时引发。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-102"><xref:System.TypeAccessException> is thrown when a method attempts to cast an object to a type that is not accessible from the method.</span></span> <span data-ttu-id="0a7bf-103">例如，匿名托管动态方法不能访问安全关键类型，因为该方法为[透明](~/docs/framework/misc/security-transparent-code.md)。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-103">For example, an anonymously hosted dynamic method cannot access a security-critical type because the method is [transparent](~/docs/framework/misc/security-transparent-code.md).</span></span> <span data-ttu-id="0a7bf-104">如果方法包含<xref:System.Reflection.Emit.OpCodes.Castclass?displayProperty=nameWithType>强制转换为安全关键类型，或作为一个其类型参数，具有安全关键类型的泛型类型的对象的指令<xref:System.TypeAccessException>由 JIT 编译器引发。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-104">If the method contains a <xref:System.Reflection.Emit.OpCodes.Castclass?displayProperty=nameWithType> instruction that casts an object to a security-critical type, or to a generic type that has a security-critical type as one of its type parameters, <xref:System.TypeAccessException> is thrown by the JIT compiler.</span></span>  
  
 <span data-ttu-id="0a7bf-105">同样，<xref:System.TypeAccessException>使用从另一个程序集的内部类型的动态方法时引发。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-105">Similarly, <xref:System.TypeAccessException> is thrown for a dynamic method that uses an internal type from another assembly.</span></span> <span data-ttu-id="0a7bf-106">一种方法可能没有访问它的包含类型、 其返回类型或其参数类型之一。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-106">A method might not have access to its containing type, its return type, or one of its parameter types.</span></span>  
  
 <span data-ttu-id="0a7bf-107">通过使用编译的应用[!INCLUDE[net_native](~/includes/net-native-md.md)]工具链可能会在运行时引发异常。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-107">Apps compiled by using the [!INCLUDE[net_native](~/includes/net-native-md.md)] tool chain may throw a  exception at runtime.</span></span>  <span data-ttu-id="0a7bf-108">仅限内部的异常类型派生自<xref:System.TypeAccessException>。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-108">is an internal-only exception type derived from <xref:System.TypeAccessException>.</span></span> <span data-ttu-id="0a7bf-109">该异常指示应用程序成功执行所需的元数据不在运行时存在。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-109">The exception indicates that metadata needed for the successful execution of an app is not present at runtime.</span></span> <span data-ttu-id="0a7bf-110">不应使用`try` / `catch`块来处理异常。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-110">You should not use a `try`/`catch` block to handle the exception.</span></span> <span data-ttu-id="0a7bf-111">相反，应确定缺少哪些元数据，并修改应用的以确保在运行时存在。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-111">Instead, you should determine what metadata is missing and modify your app's  to ensure that it is present at runtime.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a7bf-112">初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-112">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a7bf-113">使用由系统提供的用于描述错误的消息初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-113">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a system-supplied message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7bf-114">此构造函数初始化<xref:System.Exception.Message%2A>属性的新实例，为系统提供的消息描述错误，如"试图访问失败的类型"。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-114">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Attempt to access the type failed."</span></span> <span data-ttu-id="0a7bf-115">此消息将当前系统区域性考虑在内。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-115">This message takes the current system culture into account.</span></span>  
  
 <span data-ttu-id="0a7bf-116">下表显示 <xref:System.TypeAccessException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-116">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="0a7bf-117">Property</span><span class="sxs-lookup"><span data-stu-id="0a7bf-117">Property</span></span>|<span data-ttu-id="0a7bf-118">“值”</span><span class="sxs-lookup"><span data-stu-id="0a7bf-118">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="0a7bf-119">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-119">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="0a7bf-120">本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-120">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="0a7bf-121">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="0a7bf-121">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new TypeAccessException : string -&gt; TypeAccessException" Usage="new System.TypeAccessException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0a7bf-122">描述该异常的消息。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-122">The message that describes the exception.</span></span> <span data-ttu-id="0a7bf-123">此构造函数的调用方必须确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-123">The caller of this constructor must ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="0a7bf-124">使用指定的描述错误的消息初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-124">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a specified message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7bf-125">下表显示 <xref:System.TypeAccessException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-125">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="0a7bf-126">Property</span><span class="sxs-lookup"><span data-stu-id="0a7bf-126">Property</span></span>|<span data-ttu-id="0a7bf-127">“值”</span><span class="sxs-lookup"><span data-stu-id="0a7bf-127">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="0a7bf-128">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-128">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="0a7bf-129">`message` 中指定的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-129">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="0a7bf-130">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="0a7bf-130">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeAccessException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeAccessException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new TypeAccessException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; TypeAccessException" Usage="new System.TypeAccessException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="0a7bf-131">包含序列化数据的对象。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-131">The object that holds the serialized data.</span></span></param>
        <param name="context"><span data-ttu-id="0a7bf-132">关于来源和目标的上下文信息</span><span class="sxs-lookup"><span data-stu-id="0a7bf-132">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="0a7bf-133">用序列化数据初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-133">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7bf-134">反序列化来重建通过流传输的异常对象期间调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-134">This constructor is called during deserialization to reconstitute the exception object that was transmitted over a stream.</span></span> <span data-ttu-id="0a7bf-135">有关详细信息，请参阅[XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-135">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="0a7bf-136">XML 和 SOAP 序列化</span><span class="sxs-lookup"><span data-stu-id="0a7bf-136">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new TypeAccessException : string * Exception -&gt; TypeAccessException" Usage="new System.TypeAccessException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0a7bf-137">描述该异常的消息。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-137">The message that describes the exception.</span></span> <span data-ttu-id="0a7bf-138">此构造函数的调用方必须确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-138">The caller of this constructor must ensure that this string has been localized for the current system culture.</span></span></param>
        <param name="inner"><span data-ttu-id="0a7bf-139">导致当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-139">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="0a7bf-140">如果 <paramref name="inner" /> 参数不为 <see langword="null" />，则当前异常将在处理内部异常的 <see langword="catch" /> 块中引发。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-140">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="0a7bf-141">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-141">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a7bf-142">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-142">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="0a7bf-143"><xref:System.Exception.InnerException%2A> 属性返回的值与传递到构造函数中的值相同；或者，如果 `null` 属性没有向构造函数提供内部异常值，则为 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-143">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="0a7bf-144">下表显示 <xref:System.TypeAccessException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-144">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="0a7bf-145">Property</span><span class="sxs-lookup"><span data-stu-id="0a7bf-145">Property</span></span>|<span data-ttu-id="0a7bf-146">“值”</span><span class="sxs-lookup"><span data-stu-id="0a7bf-146">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="0a7bf-147">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-147">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="0a7bf-148">`message` 中指定的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="0a7bf-148">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="0a7bf-149">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="0a7bf-149">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>