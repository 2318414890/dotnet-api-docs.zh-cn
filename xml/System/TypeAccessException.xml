<Type Name="TypeAccessException" FullName="System.TypeAccessException">
  <TypeSignature Language="C#" Value="public class TypeAccessException : TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TypeAccessException extends System.TypeLoadException" />
  <TypeSignature Language="DocId" Value="T:System.TypeAccessException" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeAccessException&#xA;Inherits TypeLoadException" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeAccessException : TypeLoadException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.TypeLoadException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0fbb9-101">当方法试图使用它无权访问的类型时引发的异常。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-101">The exception that is thrown when a method attempts to use a type that it does not have access to.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fbb9-102"><xref:System.TypeAccessException> 当方法试图强制转换为不能从该方法访问的类型的对象时引发。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-102"><xref:System.TypeAccessException> is thrown when a method attempts to cast an object to a type that is not accessible from the method.</span></span> <span data-ttu-id="0fbb9-103">例如，一个匿名托管的动态方法不能访问安全关键类型，由于该方法是[透明](~/docs/framework/misc/security-transparent-code.md)。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-103">For example, an anonymously hosted dynamic method cannot access a security-critical type because the method is [transparent](~/docs/framework/misc/security-transparent-code.md).</span></span> <span data-ttu-id="0fbb9-104">如果方法包含<xref:System.Reflection.Emit.OpCodes.Castclass?displayProperty=nameWithType>将强制转换为安全关键类型，或作为一个其类型参数，具有安全关键类型的泛型类型的对象的指令<xref:System.TypeAccessException>引发由 JIT 编译器。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-104">If the method contains a <xref:System.Reflection.Emit.OpCodes.Castclass?displayProperty=nameWithType> instruction that casts an object to a security-critical type, or to a generic type that has a security-critical type as one of its type parameters, <xref:System.TypeAccessException> is thrown by the JIT compiler.</span></span>  
  
 <span data-ttu-id="0fbb9-105">同样，<xref:System.TypeAccessException>使用从另一个程序集的内部类型的动态方法时引发。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-105">Similarly, <xref:System.TypeAccessException> is thrown for a dynamic method that uses an internal type from another assembly.</span></span> <span data-ttu-id="0fbb9-106">一种方法可能没有访问它的包含类型、 其返回类型，或其参数类型之一。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-106">A method might not have access to its containing type, its return type, or one of its parameter types.</span></span>  
  
 <span data-ttu-id="0fbb9-107">使用编译的应用[!INCLUDE[net_native](~/includes/net-native-md.md)]工具链可能会在运行时引发了异常。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-107">Apps compiled by using the [!INCLUDE[net_native](~/includes/net-native-md.md)] tool chain may throw a  exception at runtime.</span></span>  <span data-ttu-id="0fbb9-108">仅限内部使用的异常类型派生自<xref:System.TypeAccessException>。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-108">is an internal-only exception type derived from <xref:System.TypeAccessException>.</span></span> <span data-ttu-id="0fbb9-109">该异常指示成功执行的应用程序所需的元数据不在运行时存在。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-109">The exception indicates that metadata needed for the successful execution of an app is not present at runtime.</span></span> <span data-ttu-id="0fbb9-110">不应使用`try` / `catch`块来处理异常。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-110">You should not use a `try`/`catch` block to handle the exception.</span></span> <span data-ttu-id="0fbb9-111">相反，应确定哪些元数据是缺少，并修改应用程序的以确保在运行时存在。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-111">Instead, you should determine what metadata is missing and modify your app's  to ensure that it is present at runtime.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0fbb9-112">初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-112">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0fbb9-113">使用由系统提供的用于描述错误的消息初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-113">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a system-supplied message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fbb9-114">此构造函数初始化<xref:System.Exception.Message%2A>为系统提供的消息描述诸如"地尝试访问失败的类型。"的错误，将新实例的属性</span><span class="sxs-lookup"><span data-stu-id="0fbb9-114">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Attempt to access the type failed."</span></span> <span data-ttu-id="0fbb9-115">此消息将当前系统区域性考虑在内。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-115">This message takes the current system culture into account.</span></span>  
  
 <span data-ttu-id="0fbb9-116">下表显示 <xref:System.TypeAccessException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-116">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="0fbb9-117">Property</span><span class="sxs-lookup"><span data-stu-id="0fbb9-117">Property</span></span>|<span data-ttu-id="0fbb9-118">“值”</span><span class="sxs-lookup"><span data-stu-id="0fbb9-118">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="0fbb9-119">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-119">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="0fbb9-120">本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-120">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0fbb9-121">描述该异常的消息。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-121">The message that describes the exception.</span></span> <span data-ttu-id="0fbb9-122">此构造函数的调用方必须确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-122">The caller of this constructor must ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="0fbb9-123">使用指定的描述错误的消息初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-123">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a specified message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fbb9-124">下表显示 <xref:System.TypeAccessException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-124">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="0fbb9-125">Property</span><span class="sxs-lookup"><span data-stu-id="0fbb9-125">Property</span></span>|<span data-ttu-id="0fbb9-126">“值”</span><span class="sxs-lookup"><span data-stu-id="0fbb9-126">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="0fbb9-127">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-127">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="0fbb9-128">`message` 中指定的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-128">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeAccessException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeAccessException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="0fbb9-129">包含序列化数据的对象。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-129">The object that holds the serialized data.</span></span></param>
        <param name="context"><span data-ttu-id="0fbb9-130">关于来源和目标的上下文信息</span><span class="sxs-lookup"><span data-stu-id="0fbb9-130">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="0fbb9-131">用序列化数据初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-131">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fbb9-132">在反序列化，以便重建通过流传输的异常对象过程中调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-132">This constructor is called during deserialization to reconstitute the exception object that was transmitted over a stream.</span></span> <span data-ttu-id="0fbb9-133">有关详细信息，请参阅[XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-133">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException(System::String ^ message, Exception ^ inner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0fbb9-134">描述该异常的消息。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-134">The message that describes the exception.</span></span> <span data-ttu-id="0fbb9-135">此构造函数的调用方必须确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-135">The caller of this constructor must ensure that this string has been localized for the current system culture.</span></span></param>
        <param name="inner"><span data-ttu-id="0fbb9-136">导致当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-136">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="0fbb9-137">如果 <c>inner</c> 参数不为 <see langword="null" />，则当前异常会在处理内部异常的 <see langword="catch" /> 块中引发。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-137">If the <c>inner</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="0fbb9-138">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-138">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fbb9-139">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-139">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="0fbb9-140"><xref:System.Exception.InnerException%2A> 属性返回的值与传递到构造函数中的值相同；或者，如果 `null` 属性没有向构造函数提供内部异常值，则为 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-140">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="0fbb9-141">下表显示 <xref:System.TypeAccessException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-141">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="0fbb9-142">Property</span><span class="sxs-lookup"><span data-stu-id="0fbb9-142">Property</span></span>|<span data-ttu-id="0fbb9-143">“值”</span><span class="sxs-lookup"><span data-stu-id="0fbb9-143">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="0fbb9-144">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-144">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="0fbb9-145">`message` 中指定的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="0fbb9-145">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>