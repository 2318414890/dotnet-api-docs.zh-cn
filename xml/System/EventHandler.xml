<Type Name="EventHandler" FullName="System.EventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3058760c0eb1545e669ee6bd61bb90901585ac3e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30726971" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventHandler(System::Object ^ sender, EventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="c29ef-101">事件源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c29ef-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="c29ef-102">不包含事件数据的对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c29ef-102">An object that contains no event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="c29ef-103">表示将用于处理不具有事件数据的事件的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c29ef-103">Represents the method that will handle an event that has no event data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c29ef-104">.NET Framework 中的事件模型基于具有与其处理程序连接事件的事件委托。</span><span class="sxs-lookup"><span data-stu-id="c29ef-104">The event model in the .NET Framework is based on having an event delegate that connects an event with its handler.</span></span> <span data-ttu-id="c29ef-105">若要引发事件，需要两个元素：</span><span class="sxs-lookup"><span data-stu-id="c29ef-105">To raise an event, two elements are needed:</span></span>  
  
-   <span data-ttu-id="c29ef-106">提供对事件作出响应的标识的方法的委托。</span><span class="sxs-lookup"><span data-stu-id="c29ef-106">A delegate that identifies the method that provides the response to the event.</span></span>  
  
-   <span data-ttu-id="c29ef-107">（可选） 保持的类的事件数据，如果事件提供数据。</span><span class="sxs-lookup"><span data-stu-id="c29ef-107">Optionally, a class that holds the event data, if the event provides data.</span></span>  
  
 <span data-ttu-id="c29ef-108">委托是一种定义的签名，也就是说，返回值类型和方法的参数列表类型。</span><span class="sxs-lookup"><span data-stu-id="c29ef-108">The delegate is a type that defines a signature, that is, the return value type and parameter list types for a method.</span></span> <span data-ttu-id="c29ef-109">可以使用的委托类型来声明变量可引用具有相同的签名与委托的任何方法。</span><span class="sxs-lookup"><span data-stu-id="c29ef-109">You can use the delegate type to declare a variable that can refer to any method with the same signature as the delegate.</span></span>  
  
 <span data-ttu-id="c29ef-110">事件处理程序委托的标准签名定义的方法，不返回值。</span><span class="sxs-lookup"><span data-stu-id="c29ef-110">The standard signature of an event handler delegate defines a method that does not return a value.</span></span> <span data-ttu-id="c29ef-111">此方法的第一个参数属于类型<xref:System.Object>和指引发事件的实例。</span><span class="sxs-lookup"><span data-stu-id="c29ef-111">This method's first parameter is of type <xref:System.Object> and refers to the instance that raises the event.</span></span> <span data-ttu-id="c29ef-112">其第二个参数派生自类型<xref:System.EventArgs>并保存事件数据。</span><span class="sxs-lookup"><span data-stu-id="c29ef-112">Its second parameter is derived from type <xref:System.EventArgs> and holds the event data.</span></span> <span data-ttu-id="c29ef-113">如果事件不生成事件数据，第二个参数是只需值<xref:System.EventArgs.Empty?displayProperty=nameWithType>字段。</span><span class="sxs-lookup"><span data-stu-id="c29ef-113">If the event does not generate event data, the second parameter is simply the value of the <xref:System.EventArgs.Empty?displayProperty=nameWithType> field.</span></span> <span data-ttu-id="c29ef-114">否则，第二个参数是派生的类型从<xref:System.EventArgs>并提供任何字段或属性需要以保存事件数据。</span><span class="sxs-lookup"><span data-stu-id="c29ef-114">Otherwise, the second parameter is a type derived from <xref:System.EventArgs> and supplies any fields or properties needed to hold the event data.</span></span>  
  
 <span data-ttu-id="c29ef-115"><xref:System.EventHandler>委托是一个预定义的委托，专用于表示不生成的数据的事件的事件处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="c29ef-115">The <xref:System.EventHandler> delegate is a predefined delegate that specifically represents an event handler method for an event that does not generate data.</span></span> <span data-ttu-id="c29ef-116">如果你的事件会生成数据，则必须使用泛型<xref:System.EventHandler%601>委托类。</span><span class="sxs-lookup"><span data-stu-id="c29ef-116">If your event does generate data, you must use the generic <xref:System.EventHandler%601> delegate class.</span></span>  
  
 <span data-ttu-id="c29ef-117">若要将事件与将处理该事件的方法相关联，添加到事件的委托的一个实例。</span><span class="sxs-lookup"><span data-stu-id="c29ef-117">To associate the event with the method that will handle the event, add an instance of the delegate to the event.</span></span> <span data-ttu-id="c29ef-118">除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="c29ef-118">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span>  
  
 <span data-ttu-id="c29ef-119">有关事件处理程序委托的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="c29ef-119">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c29ef-120">下面的示例显示名为事件`ThresholdReached`关联<xref:System.EventHandler>委托。</span><span class="sxs-lookup"><span data-stu-id="c29ef-120">The following example shows an event named `ThresholdReached` that is associated with an <xref:System.EventHandler> delegate.</span></span> <span data-ttu-id="c29ef-121">分配给该方法<xref:System.EventHandler>调用委托`OnThresholdReached`方法。</span><span class="sxs-lookup"><span data-stu-id="c29ef-121">The method assigned to the <xref:System.EventHandler> delegate is called in the `OnThresholdReached` method.</span></span>  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EventHandler`1" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>