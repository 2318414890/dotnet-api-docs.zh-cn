<Type Name="OutOfMemoryException" FullName="System.OutOfMemoryException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="910934c01288ec01071b99b363ba0c0e473ede08" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728551" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OutOfMemoryException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit OutOfMemoryException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.OutOfMemoryException" />
  <TypeSignature Language="VB.NET" Value="Public Class OutOfMemoryException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutOfMemoryException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="08381-101">没有足够的内存继续执行程序时引发的异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="08381-101">The exception that is thrown when there is not enough memory to continue the execution of a program.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08381-102"><xref:System.OutOfMemoryException>异常具有两个主要原因：</span><span class="sxs-lookup"><span data-stu-id="08381-102">An <xref:System.OutOfMemoryException> exception has two major causes:</span></span>  
  
-   <span data-ttu-id="08381-103">您试图从中展开<xref:System.Text.StringBuilder>对象定义的长度超出其<xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="08381-103">You are attempting to expand a <xref:System.Text.StringBuilder> object beyond the length defined by its <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="08381-104">公共语言运行时无法分配连续内存不足，无法成功执行操作。</span><span class="sxs-lookup"><span data-stu-id="08381-104">The common language runtime cannot allocate enough contiguous memory to successfully perform an operation.</span></span> <span data-ttu-id="08381-105">通过要求将内存分配任何属性分配或方法调用可能会引发此异常。</span><span class="sxs-lookup"><span data-stu-id="08381-105">This exception can be thrown by any property assignment or method call that requires a memory allocation.</span></span> <span data-ttu-id="08381-106">有关详细信息的原因<xref:System.OutOfMemoryException>异常，请参阅["内存不足"不是指物理内存](http://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx)。</span><span class="sxs-lookup"><span data-stu-id="08381-106">For more information on the cause of the <xref:System.OutOfMemoryException> exception, see ["Out of Memory" Does Not Refer to Physical Memory](http://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx).</span></span>  
  
     <span data-ttu-id="08381-107">这种类型的<xref:System.OutOfMemoryException>异常表示灾难性故障。</span><span class="sxs-lookup"><span data-stu-id="08381-107">This type of <xref:System.OutOfMemoryException> exception represents a catastrophic failure.</span></span> <span data-ttu-id="08381-108">如果你选择处理异常，则应包含`catch`调用块<xref:System.Environment.FailFast%2A?displayProperty=nameWithType>终止你的应用程序，然后向系统事件日志中，添加一个条目，如以下示例执行的方法。</span><span class="sxs-lookup"><span data-stu-id="08381-108">If you choose to handle the exception, you should include a `catch` block that calls the <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> method to terminate your app and add an entry to the system event log, as the following example does.</span></span>  
  
     [!code-csharp[System.OutOfMemoryException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/failfast1.cs#2)]
     [!code-vb[System.OutOfMemoryException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/failfast1.vb#2)]  
  
 <span data-ttu-id="08381-109">某些在其下，将引发异常，并为消除它可以采取的操作包括以下条件：</span><span class="sxs-lookup"><span data-stu-id="08381-109">Some of the conditions under which the exception is thrown and the actions you can take to eliminate it include the following:</span></span>  
  
 <span data-ttu-id="08381-110">正在调用<xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="08381-110">You are calling the <xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType> method.</span></span>  
 <span data-ttu-id="08381-111">您试图从中延长的等待<xref:System.Text.StringBuilder>对象指定的大小超出其<xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="08381-111">You are attempting to increase the length of a <xref:System.Text.StringBuilder> object beyond the size specified by its <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="08381-112">下面的示例演示<xref:System.OutOfMemoryException>通过调用引发的异常<xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType>方法时此示例尝试将会导致对象的一个字符串插入<xref:System.Text.StringBuilder.Length%2A>属性超过其最大容量。</span><span class="sxs-lookup"><span data-stu-id="08381-112">The following example illustrates the <xref:System.OutOfMemoryException> exception thrown by a call to the <xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> method when the example tries to insert a string that would cause the object's <xref:System.Text.StringBuilder.Length%2A> property to exceed its maximum capacity.</span></span>  
  
 [!code-csharp[System.OutOfMemoryException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/sb_example1.cs#1)]
 [!code-vb[System.OutOfMemoryException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/sb_example1.vb#1)]  
  
 <span data-ttu-id="08381-113">你可以执行下列任一操作以解决错误：</span><span class="sxs-lookup"><span data-stu-id="08381-113">You can do either of the following to address the error:</span></span>  
  
-   <span data-ttu-id="08381-114">将对的调用<xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType>构造函数的调用任何其他<xref:System.Text.StringBuilder>构造函数重载。</span><span class="sxs-lookup"><span data-stu-id="08381-114">Replace the call to the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor with a call any other <xref:System.Text.StringBuilder> constructor overload.</span></span> <span data-ttu-id="08381-115">最大容量你<xref:System.Text.StringBuilder>对象将设置为其默认值，该值是<xref:System.Int32.MaxValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="08381-115">The maximum capacity of your <xref:System.Text.StringBuilder> object will be set to its default value, which is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="08381-116">调用<xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType>具有构造函数`maxCapacity`足够大，以适应到任何扩展的值<xref:System.Text.StringBuilder>对象。</span><span class="sxs-lookup"><span data-stu-id="08381-116">Call the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor with a `maxCapacity` value that is large enough to accommodate any expansions to the <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="08381-117">作为 32 位进程中运行你的应用程序。</span><span class="sxs-lookup"><span data-stu-id="08381-117">Your app runs as a 32-bit process.</span></span>  
 <span data-ttu-id="08381-118">32 位进程可以分配最多的 32 位系统上的用户模式虚拟内存的 2 GB 和 4 GB 的虚拟用户模式在 64 位系统上的内存。</span><span class="sxs-lookup"><span data-stu-id="08381-118">32-bit processes can allocate a maximum of 2GB of virtual user-mode memory on 32-bit systems, and 4GB of virtual user-mode memory on 64-bit systems.</span></span> <span data-ttu-id="08381-119">这可以使公共语言运行时，需要分配大量的时分配足够的连续内存的难度。</span><span class="sxs-lookup"><span data-stu-id="08381-119">This can make it more difficult for the common language runtime to allocate sufficient contiguous memory when a large allocation is needed.</span></span> <span data-ttu-id="08381-120">与此相反，64 位进程可以分配最多 8 TB 的虚拟内存。</span><span class="sxs-lookup"><span data-stu-id="08381-120">In contrast, 64-bit processes can allocate up to 8TB of virtual memory.</span></span> <span data-ttu-id="08381-121">若要解决此异常，请重新编译你的应用以面向 64 位平台。</span><span class="sxs-lookup"><span data-stu-id="08381-121">To address this exception, recompile your app to target a 64-bit platform.</span></span> <span data-ttu-id="08381-122">有关面向 Visual Studio 中的特定平台的信息，请参阅[如何： 向目标平台的配置项目](http://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76)。</span><span class="sxs-lookup"><span data-stu-id="08381-122">For information on targeting specific platforms in Visual Studio, see [How to: Configure Projects to Target Platforms](http://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76).</span></span>  
  
 <span data-ttu-id="08381-123">应用正在泄露非托管的资源</span><span class="sxs-lookup"><span data-stu-id="08381-123">Your app is leaking unmanaged resources</span></span>  
 <span data-ttu-id="08381-124">虽然垃圾回收器能够释放内存分配给托管类型，它不会管理分配给非托管资源，如操作系统将处理 （包括文件、 内存映射文件、 管道、 注册表项和等待句柄的句柄） 的内存和直接由 Windows API 调用或对内存分配函数的调用如分配内存块`malloc`。</span><span class="sxs-lookup"><span data-stu-id="08381-124">Although the garbage collector is able to free memory allocated to managed types, it does not manage memory allocated to unmanaged resources such as operating system handles (including handles to files, memory-mapped files, pipes, registry keys, and wait handles) and memory blocks allocated directly by Windows API calls or by calls to memory allocation functions such as `malloc`.</span></span> <span data-ttu-id="08381-125">使用非托管的资源的类型实现<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="08381-125">Types that consume unmanaged resources implement the <xref:System.IDisposable> interface.</span></span>  
  
 <span data-ttu-id="08381-126">如果你正在使用非托管的资源的类型，你应确保调用其<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>方法使用它完成。</span><span class="sxs-lookup"><span data-stu-id="08381-126">If you are consuming a type that uses unmanaged resources, you should be sure to call its <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method when you have finished using it.</span></span> <span data-ttu-id="08381-127">(某些类型还实现`Close`方法在功能上与相同`Dispose`方法。)有关详细信息，请参阅[使用对象，实现 IDisposable](~/docs/standard/garbage-collection/using-objects.md)主题。</span><span class="sxs-lookup"><span data-stu-id="08381-127">(Some types also implement a `Close` method that is identical in function to a `Dispose` method.) For more information, see the [Using Objects That Implement IDisposable](~/docs/standard/garbage-collection/using-objects.md) topic.</span></span>  
  
 <span data-ttu-id="08381-128">如果你已创建使用非托管的资源的类型，请确保您具有实现的释放模式并且，如果有必要，请提供终结器。</span><span class="sxs-lookup"><span data-stu-id="08381-128">If you have created a type that uses unmanaged resources, make sure that you have implemented the Dispose pattern and, if necessary, supplied a finalizer.</span></span> <span data-ttu-id="08381-129">有关详细信息，请参阅[释放模式](~/docs/standard/design-guidelines/dispose-pattern.md)，[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)，和<xref:System.Object.Finalize%2A?displayProperty=nameWithType>主题。</span><span class="sxs-lookup"><span data-stu-id="08381-129">For more information, see the [Dispose Pattern](~/docs/standard/design-guidelines/dispose-pattern.md), [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md), and <xref:System.Object.Finalize%2A?displayProperty=nameWithType> topics.</span></span>  
  
 <span data-ttu-id="08381-130">你尝试在 64 位进程中创建一个大数组。</span><span class="sxs-lookup"><span data-stu-id="08381-130">You are attempting to create a large array in a 64-bit process.</span></span>  
 <span data-ttu-id="08381-131">默认情况下，公共语言运行时不允许其大小超过 2 GB 的单个对象。</span><span class="sxs-lookup"><span data-stu-id="08381-131">By default, the common language runtime does not allow single objects whose size exceeds 2GB.</span></span> <span data-ttu-id="08381-132">若要覆盖此默认设置，可以使用配置文件设置以启用其总大小超过 2 GB 的数组。</span><span class="sxs-lookup"><span data-stu-id="08381-132">To override this default, you can use the  configuration file setting to enable arrays whose total size exceeds 2 GB.</span></span>  
  
 <span data-ttu-id="08381-133">你正在使用非常大的数据 （如数组、 集合或数据库的数据集） 的集在内存中。</span><span class="sxs-lookup"><span data-stu-id="08381-133">You are working with very large sets of data (such as arrays, collections, or database data sets) in memory.</span></span>  
 <span data-ttu-id="08381-134">当数据结构或驻留在内存中的数据集变得很大，公共语言运行时不能对它们进行分配足够的连续内存时<xref:System.OutOfMemoryException>异常结果。</span><span class="sxs-lookup"><span data-stu-id="08381-134">When data structures or data sets that reside in memory become so large that the common language runtime is unable to allocate enough contiguous memory for them, an <xref:System.OutOfMemoryException> exception results.</span></span>  
  
 <span data-ttu-id="08381-135">若要防止<xref:System.OutOfMemoryException>例外情况之外，你必须修改你的应用程序，以便更少的数据是驻留在内存中，或者数据划分为需要较小的内存分配的段。</span><span class="sxs-lookup"><span data-stu-id="08381-135">To prevent the <xref:System.OutOfMemoryException> exceptions, you must modify your application so that less data is resident in memory, or the data is divided into segments that require smaller memory allocations.</span></span> <span data-ttu-id="08381-136">例如:</span><span class="sxs-lookup"><span data-stu-id="08381-136">For example:</span></span>  
  
-   <span data-ttu-id="08381-137">如果你是从数据库检索的所有数据并且然后应用程序，尽量减少到服务器的过程中对其进行筛选，则应修改查询返回仅的应用程序需要的数据子集。</span><span class="sxs-lookup"><span data-stu-id="08381-137">If you are retrieving all of the data from a database and then filtering it in your app to minimize trips to the server, you should modify your queries to return only the subset of data that your app needs.</span></span> <span data-ttu-id="08381-138">在使用大型表，多个查询几乎始终是详细信息比检索所有单个表中的数据，然后操作效率高。</span><span class="sxs-lookup"><span data-stu-id="08381-138">When working with large tables, multiple queries are almost always more efficient than retrieving all of the data in a single table and then manipulating it.</span></span>  
  
-   <span data-ttu-id="08381-139">如果在执行用户动态创建的查询，应确保查询所返回的记录的数量是有限。</span><span class="sxs-lookup"><span data-stu-id="08381-139">If you are executing queries that users create dynamically, you should ensure that the number of records returned by the query is limited.</span></span>  
  
-   <span data-ttu-id="08381-140">如果你使用的大型数组或对象的其他集合中的大小会导致<xref:System.OutOfMemoryException>异常，则应修改你的应用程序，以便数据在子集而不是在一次使用它。</span><span class="sxs-lookup"><span data-stu-id="08381-140">If you are using large arrays or other collection objects whose size results in an <xref:System.OutOfMemoryException> exception, you should modify your application to work the data in subsets rather than to work with it all at once.</span></span>  
  
 <span data-ttu-id="08381-141">下面的示例获取一个数组，其中包括 200 万个浮点值，然后计算其平均值。</span><span class="sxs-lookup"><span data-stu-id="08381-141">The following example gets a array that consists of 200 million floating-point values and then calculates their mean.</span></span> <span data-ttu-id="08381-142">示例输出显示，因为该示例在内存中存储整个数组，其计算平均值之前,<xref:System.OutOfMemoryException>是引发。</span><span class="sxs-lookup"><span data-stu-id="08381-142">The output from the example shows that, because the example stores the entire array in memory before it calculates the mean, an <xref:System.OutOfMemoryException> is is thrown.</span></span>  
  
 [!code-csharp[System.OutOfMemoryException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/data1.cs#3)]
 [!code-vb[System.OutOfMemoryException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/data1.vb#3)]  
  
 <span data-ttu-id="08381-143">下面的示例消除<xref:System.OutOfMemoryException>异常处理的传入数据，但不存储在内存中，序列化到文件数据，如有必要以允许进一步处理 （这些行注释出在示例中，整个数据集由于在这种情况下它们生成一个文件，其大小是大于 1 GB），并返回到调用例程的计算的平均值和事例数。</span><span class="sxs-lookup"><span data-stu-id="08381-143">The following example eliminates the <xref:System.OutOfMemoryException> exception by processing the incoming data without storing the entire data set in memory, serializing the data to a file if necessary to permit further processing (these lines are commented out in the example, since in this case they produce a file whose size is greater than 1GB), and returning the calculated mean and the number of cases to the calling routine.</span></span>  
  
 [!code-csharp[System.OutOfMemoryException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/data2.cs#4)]
 [!code-vb[System.OutOfMemoryException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/data2.vb#4)]  
  
 <span data-ttu-id="08381-144">重复串联大的字符串。</span><span class="sxs-lookup"><span data-stu-id="08381-144">You are repeatedly concatenating large strings.</span></span>  
 <span data-ttu-id="08381-145">由于字符串是不可变，每个字符串串联操作将创建一个新字符串。</span><span class="sxs-lookup"><span data-stu-id="08381-145">Because strings are immutable, each string concatenation operation creates a new string.</span></span> <span data-ttu-id="08381-146">用于小字符串，或对于少量的串联运算的影响可以忽略不计。</span><span class="sxs-lookup"><span data-stu-id="08381-146">The impact for small strings, or for a small number of concatenation operations, is negligible.</span></span> <span data-ttu-id="08381-147">但对于大的字符串或非常大量的串联运算，字符串串联可能导致出现大量的内存分配和内存碎片，性能不佳，并有可能延长<xref:System.OutOfMemoryException>异常。</span><span class="sxs-lookup"><span data-stu-id="08381-147">But for large strings or a very large number of concatenation operations, string concatenation can lead to a large number of memory allocations and memory fragmentation, poor performance, and possibly <xref:System.OutOfMemoryException> exceptions.</span></span>  
  
 <span data-ttu-id="08381-148">当连接大的字符串，或者执行大量的串联运算，您应改用<xref:System.Text.StringBuilder>类而不是<xref:System.String>类。</span><span class="sxs-lookup"><span data-stu-id="08381-148">When concatenating large strings or performing a large number of concatenation operations, you should use the <xref:System.Text.StringBuilder> class instead of the <xref:System.String> class.</span></span> <span data-ttu-id="08381-149">完成后操作字符串的操作后，将转换<xref:System.Text.StringBuilder>实例与通过调用字符串<xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="08381-149">When you have finished manipulating the string, convert the <xref:System.Text.StringBuilder> instance to a string by calling the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="08381-150">将大量对象的固定在内存中。</span><span class="sxs-lookup"><span data-stu-id="08381-150">You pin a large number of objects in memory.</span></span>  
 <span data-ttu-id="08381-151">很长一段固定在内存中的大量对象可能使困难为垃圾回收器分配的内存的连续块。</span><span class="sxs-lookup"><span data-stu-id="08381-151">Pinning a large number of objects in memory for long periods can make it difficult for the garbage collector to allocate contiguous blocks of memory.</span></span> <span data-ttu-id="08381-152">如果你固定大量对象在内存中，例如通过使用`fixed`语句在 C# 中或通过调用<xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType>的句柄类型具有方法<xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType>，你可以执行以下操作为地址<xref:System.OutOfMemoryException>异常。</span><span class="sxs-lookup"><span data-stu-id="08381-152">If you've pinned a large number of objects in memory, for example by using the `fixed` statement in C# or by calling the <xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType> method with a handle type of <xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType>, you can do the following to address the <xref:System.OutOfMemoryException> exception.</span></span>  
  
-   <span data-ttu-id="08381-153">评估是否真的需要固定，每个对象</span><span class="sxs-lookup"><span data-stu-id="08381-153">Evaluate whether each object really needs to be pinned,</span></span>  
  
-   <span data-ttu-id="08381-154">确保每个对象已取消固定越早越好。</span><span class="sxs-lookup"><span data-stu-id="08381-154">Ensure that each object is unpinned as soon as possible.</span></span>  
  
-   <span data-ttu-id="08381-155">请确保每个调用到<xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType>到 pin 内存的方法具有相应地调用<xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType>方法来取消固定的内存。</span><span class="sxs-lookup"><span data-stu-id="08381-155">Make sure that each call to the <xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType> method to pin memory has a corresponding call to the <xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType> method to unpin that memory.</span></span>  
  
 <span data-ttu-id="08381-156">以下 Microsoft 中间 (MSIL) 指令引发<xref:System.OutOfMemoryException>异常：</span><span class="sxs-lookup"><span data-stu-id="08381-156">The following Microsoft intermediate (MSIL) instructions throw an <xref:System.OutOfMemoryException> exception:</span></span>  
  
-   [<span data-ttu-id="08381-157">box</span><span class="sxs-lookup"><span data-stu-id="08381-157">box</span></span>](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.box.aspx)  
  
-   [<span data-ttu-id="08381-158">newarr</span><span class="sxs-lookup"><span data-stu-id="08381-158">newarr</span></span>](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newarr.aspx)  
  
-   <span data-ttu-id="08381-159">[newobj](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)newobj</span><span class="sxs-lookup"><span data-stu-id="08381-159">[newobj](http://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)newobj</span></span>  
  
 <span data-ttu-id="08381-160"><xref:System.OutOfMemoryException> 使用 HRESULT `COR_E_OUTOFMEMORY`，它具有值已用完 0x8007000E。</span><span class="sxs-lookup"><span data-stu-id="08381-160"><xref:System.OutOfMemoryException> uses the HRESULT `COR_E_OUTOFMEMORY`, which has the value 0x8007000E.</span></span>  
  
 <span data-ttu-id="08381-161">有关的实例的初始属性值的列表<xref:System.OutOfMemoryException>，请参阅<xref:System.OutOfMemoryException.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="08381-161">For a list of initial property values for an instance of <xref:System.OutOfMemoryException>, see the <xref:System.OutOfMemoryException.%23ctor%2A> constructors.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="08381-162">继承的值<xref:System.Exception.Data%2A>属性始终是`null`。</span><span class="sxs-lookup"><span data-stu-id="08381-162">The value of the inherited <xref:System.Exception.Data%2A> property is always `null`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="08381-163">初始化 <see cref="T:System.OutOfMemoryException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08381-163">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="08381-164">初始化 <see cref="T:System.OutOfMemoryException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08381-164">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08381-165">此构造函数初始化<xref:System.Exception.Message%2A>为系统提供的消息的描述错误，如"没有足够的内存来继续执行程序。"的新实例的属性</span><span class="sxs-lookup"><span data-stu-id="08381-165">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "There was not enough memory to continue the execution of the program."</span></span> <span data-ttu-id="08381-166">此消息将当前系统区域性考虑在内。</span><span class="sxs-lookup"><span data-stu-id="08381-166">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="08381-167">下表显示 <xref:System.OutOfMemoryException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="08381-167">The following table shows the initial property values for an instance of <xref:System.OutOfMemoryException>.</span></span>  
  
|<span data-ttu-id="08381-168">Property</span><span class="sxs-lookup"><span data-stu-id="08381-168">Property</span></span>|<span data-ttu-id="08381-169">“值”</span><span class="sxs-lookup"><span data-stu-id="08381-169">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="08381-170">`null`。</span><span class="sxs-lookup"><span data-stu-id="08381-170">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="08381-171">本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="08381-171">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="08381-172">描述错误的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08381-172">The message that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08381-173">用指定的错误消息初始化 <see cref="T:System.OutOfMemoryException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08381-173">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08381-174">`message` 参数的内容应为人所理解。</span><span class="sxs-lookup"><span data-stu-id="08381-174">The content of the `message` parameter is intended to be understood by humans.</span></span> <span data-ttu-id="08381-175">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="08381-175">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="08381-176">下表显示 <xref:System.OutOfMemoryException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="08381-176">The following table shows the initial property values for an instance of <xref:System.OutOfMemoryException>.</span></span>  
  
|<span data-ttu-id="08381-177">Property</span><span class="sxs-lookup"><span data-stu-id="08381-177">Property</span></span>|<span data-ttu-id="08381-178">“值”</span><span class="sxs-lookup"><span data-stu-id="08381-178">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="08381-179">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="08381-179">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="08381-180">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="08381-180">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OutOfMemoryException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OutOfMemoryException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="08381-181">承载序列化对象数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08381-181">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="08381-182">关于来源和目标的上下文信息</span>
          <span class="sxs-lookup">
            <span data-stu-id="08381-182">The contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08381-183">用序列化数据初始化 <see cref="T:System.OutOfMemoryException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08381-183">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08381-184">此构造函数在反序列化过程中调用，以便重建通过流传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="08381-184">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="08381-185">有关详细信息，请参阅[XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="08381-185">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="08381-186">解释异常原因的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08381-186">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="08381-187">导致当前异常的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08381-187">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="08381-188">如果 <c>innerException</c> 参数不是空引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 <see langword="catch" /> 块中引发当前异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08381-188">If the <c>innerException</c> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="08381-189">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.OutOfMemoryException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="08381-189">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08381-190">因前一个异常而直接引发的异常可以在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="08381-190">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="08381-191"><xref:System.Exception.InnerException%2A> 属性返回传递到构造函数中的相同值，或者如果 `Nothing` 属性不向构造函数提供内部异常值，则为空引用（在 Visual Basic 中为 <xref:System.Exception.InnerException%2A>）。</span><span class="sxs-lookup"><span data-stu-id="08381-191">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="08381-192">下表显示 <xref:System.OutOfMemoryException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="08381-192">The following table shows the initial property values for an instance of <xref:System.OutOfMemoryException>.</span></span>  
  
|<span data-ttu-id="08381-193">Property</span><span class="sxs-lookup"><span data-stu-id="08381-193">Property</span></span>|<span data-ttu-id="08381-194">“值”</span><span class="sxs-lookup"><span data-stu-id="08381-194">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="08381-195">内部异常引用。</span><span class="sxs-lookup"><span data-stu-id="08381-195">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="08381-196">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="08381-196">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>