<Type Name="OutOfMemoryException" FullName="System.OutOfMemoryException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="53e525db32241e86a4ce634203a6041f3a7b4c1a" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51880071" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OutOfMemoryException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit OutOfMemoryException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.OutOfMemoryException" />
  <TypeSignature Language="VB.NET" Value="Public Class OutOfMemoryException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutOfMemoryException : SystemException" />
  <TypeSignature Language="F#" Value="type OutOfMemoryException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="adc9e-101">没有足够的内存继续执行程序时引发的异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="adc9e-101">The exception that is thrown when there is not enough memory to continue the execution of a program.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adc9e-102"><xref:System.OutOfMemoryException>异常有两个主要原因：</span><span class="sxs-lookup"><span data-stu-id="adc9e-102">An <xref:System.OutOfMemoryException> exception has two major causes:</span></span>  
  
-   <span data-ttu-id="adc9e-103">尝试展开<xref:System.Text.StringBuilder>对象定义的长度超出其<xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="adc9e-103">You are attempting to expand a <xref:System.Text.StringBuilder> object beyond the length defined by its <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="adc9e-104">公共语言运行时无法分配连续内存不足，无法成功执行操作。</span><span class="sxs-lookup"><span data-stu-id="adc9e-104">The common language runtime cannot allocate enough contiguous memory to successfully perform an operation.</span></span> <span data-ttu-id="adc9e-105">可以由任何需要的内存分配的属性赋值或方法调用引发此异常。</span><span class="sxs-lookup"><span data-stu-id="adc9e-105">This exception can be thrown by any property assignment or method call that requires a memory allocation.</span></span> <span data-ttu-id="adc9e-106">有关详细信息的原因<xref:System.OutOfMemoryException>异常，请参阅["内存不足"不是指物理内存](https://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx)。</span><span class="sxs-lookup"><span data-stu-id="adc9e-106">For more information on the cause of the <xref:System.OutOfMemoryException> exception, see ["Out of Memory" Does Not Refer to Physical Memory](https://blogs.msdn.com/b/ericlippert/archive/2009/06/08/out-of-memory-does-not-refer-to-physical-memory.aspx).</span></span>  
  
     <span data-ttu-id="adc9e-107">这种类型的<xref:System.OutOfMemoryException>异常表示发生灾难性故障。</span><span class="sxs-lookup"><span data-stu-id="adc9e-107">This type of <xref:System.OutOfMemoryException> exception represents a catastrophic failure.</span></span> <span data-ttu-id="adc9e-108">如果您选择要处理的异常，应包括`catch`块调用<xref:System.Environment.FailFast%2A?displayProperty=nameWithType>方法来终止您的应用程序并向系统事件日志中，添加一个条目，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="adc9e-108">If you choose to handle the exception, you should include a `catch` block that calls the <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> method to terminate your app and add an entry to the system event log, as the following example does.</span></span>  
  
     [!code-csharp[System.OutOfMemoryException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/failfast1.cs#2)]
     [!code-vb[System.OutOfMemoryException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/failfast1.vb#2)]  
  
 <span data-ttu-id="adc9e-109">某些在其下引发异常，并且可用于消除它的操作包括以下条件：</span><span class="sxs-lookup"><span data-stu-id="adc9e-109">Some of the conditions under which the exception is thrown and the actions you can take to eliminate it include the following:</span></span>  
  
 <span data-ttu-id="adc9e-110">正在调用<xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="adc9e-110">You are calling the <xref:System.Text.StringBuilder.Insert%2A?displayProperty=nameWithType> method.</span></span>  
 <span data-ttu-id="adc9e-111">尝试增加的长度<xref:System.Text.StringBuilder>对象指定的大小超出其<xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="adc9e-111">You are attempting to increase the length of a <xref:System.Text.StringBuilder> object beyond the size specified by its <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="adc9e-112">下面的示例阐释<xref:System.OutOfMemoryException>通过调用引发异常<xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType>方法时此示例尝试将导致对象的字符串插入<xref:System.Text.StringBuilder.Length%2A>属性超过其最大容量。</span><span class="sxs-lookup"><span data-stu-id="adc9e-112">The following example illustrates the <xref:System.OutOfMemoryException> exception thrown by a call to the <xref:System.Text.StringBuilder.Insert%28System.Int32%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> method when the example tries to insert a string that would cause the object's <xref:System.Text.StringBuilder.Length%2A> property to exceed its maximum capacity.</span></span>  
  
 [!code-csharp[System.OutOfMemoryException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/sb_example1.cs#1)]
 [!code-vb[System.OutOfMemoryException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/sb_example1.vb#1)]  
  
 <span data-ttu-id="adc9e-113">您可以执行以下操作来解决此错误：</span><span class="sxs-lookup"><span data-stu-id="adc9e-113">You can do either of the following to address the error:</span></span>  
  
-   <span data-ttu-id="adc9e-114">替换为调用<xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType>构造函数通过调用任何其他<xref:System.Text.StringBuilder>构造函数重载。</span><span class="sxs-lookup"><span data-stu-id="adc9e-114">Replace the call to the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor with a call any other <xref:System.Text.StringBuilder> constructor overload.</span></span> <span data-ttu-id="adc9e-115">最大容量为你<xref:System.Text.StringBuilder>对象将设置为其默认值，即<xref:System.Int32.MaxValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="adc9e-115">The maximum capacity of your <xref:System.Text.StringBuilder> object will be set to its default value, which is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="adc9e-116">调用<xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType>构造函数与`maxCapacity`该值是否足够大以容纳任何扩展到<xref:System.Text.StringBuilder>对象。</span><span class="sxs-lookup"><span data-stu-id="adc9e-116">Call the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor with a `maxCapacity` value that is large enough to accommodate any expansions to the <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="adc9e-117">您的应用程序以 32 位进程形式运行。</span><span class="sxs-lookup"><span data-stu-id="adc9e-117">Your app runs as a 32-bit process.</span></span>  
 <span data-ttu-id="adc9e-118">32 位进程可以分配最多 2 GB 的 32 位系统上的虚拟用户模式内存，4 GB 的 64 位系统上的用户模式虚拟内存。</span><span class="sxs-lookup"><span data-stu-id="adc9e-118">32-bit processes can allocate a maximum of 2GB of virtual user-mode memory on 32-bit systems, and 4GB of virtual user-mode memory on 64-bit systems.</span></span> <span data-ttu-id="adc9e-119">这会使公共语言运行时根据需要分配大量的分配足够的连续内存更困难。</span><span class="sxs-lookup"><span data-stu-id="adc9e-119">This can make it more difficult for the common language runtime to allocate sufficient contiguous memory when a large allocation is needed.</span></span> <span data-ttu-id="adc9e-120">与此相反，64 位进程可以分配多达 8 TB 的虚拟内存。</span><span class="sxs-lookup"><span data-stu-id="adc9e-120">In contrast, 64-bit processes can allocate up to 8TB of virtual memory.</span></span> <span data-ttu-id="adc9e-121">若要解决此异常，请重新编译您的应用程序以面向 64 位平台。</span><span class="sxs-lookup"><span data-stu-id="adc9e-121">To address this exception, recompile your app to target a 64-bit platform.</span></span> <span data-ttu-id="adc9e-122">针对 Visual Studio 中的特定平台的信息，请参阅[如何： 配置项目以面向平台](https://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76)。</span><span class="sxs-lookup"><span data-stu-id="adc9e-122">For information on targeting specific platforms in Visual Studio, see [How to: Configure Projects to Target Platforms](https://msdn.microsoft.com/library/845302fc-273d-4f81-820a-7296ce91bd76).</span></span>  
  
 <span data-ttu-id="adc9e-123">应用正在泄露非托管的资源</span><span class="sxs-lookup"><span data-stu-id="adc9e-123">Your app is leaking unmanaged resources</span></span>  
 <span data-ttu-id="adc9e-124">虽然垃圾回收器可以释放内存分配给托管类型，它不会管理分配给非托管资源，如操作系统处理 （包括文件、 内存映射文件、 管道、 注册表项和等待句柄的句柄） 的内存和直接由 Windows API 调用或对内存分配函数的调用如分配内存块`malloc`。</span><span class="sxs-lookup"><span data-stu-id="adc9e-124">Although the garbage collector is able to free memory allocated to managed types, it does not manage memory allocated to unmanaged resources such as operating system handles (including handles to files, memory-mapped files, pipes, registry keys, and wait handles) and memory blocks allocated directly by Windows API calls or by calls to memory allocation functions such as `malloc`.</span></span> <span data-ttu-id="adc9e-125">使用非托管的资源的类型可实现<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="adc9e-125">Types that consume unmanaged resources implement the <xref:System.IDisposable> interface.</span></span>  
  
 <span data-ttu-id="adc9e-126">如果您正在使用使用非托管的资源的类型，您应确保调用其<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>方法使用它完成。</span><span class="sxs-lookup"><span data-stu-id="adc9e-126">If you are consuming a type that uses unmanaged resources, you should be sure to call its <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method when you have finished using it.</span></span> <span data-ttu-id="adc9e-127">(某些类型还实现`Close`方法在功能上与相同`Dispose`方法。)有关详细信息，请参阅[使用对象，实现 IDisposable](~/docs/standard/garbage-collection/using-objects.md)主题。</span><span class="sxs-lookup"><span data-stu-id="adc9e-127">(Some types also implement a `Close` method that is identical in function to a `Dispose` method.) For more information, see the [Using Objects That Implement IDisposable](~/docs/standard/garbage-collection/using-objects.md) topic.</span></span>  
  
 <span data-ttu-id="adc9e-128">如果已创建使用非托管的资源的类型，请确保你已实现 Dispose 模式并，如有必要，提供终结器。</span><span class="sxs-lookup"><span data-stu-id="adc9e-128">If you have created a type that uses unmanaged resources, make sure that you have implemented the Dispose pattern and, if necessary, supplied a finalizer.</span></span> <span data-ttu-id="adc9e-129">有关详细信息，请参阅[Dispose 模式](~/docs/standard/design-guidelines/dispose-pattern.md)，[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)，和<xref:System.Object.Finalize%2A?displayProperty=nameWithType>主题。</span><span class="sxs-lookup"><span data-stu-id="adc9e-129">For more information, see the [Dispose Pattern](~/docs/standard/design-guidelines/dispose-pattern.md), [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md), and <xref:System.Object.Finalize%2A?displayProperty=nameWithType> topics.</span></span>  
  
 <span data-ttu-id="adc9e-130">您正在尝试在 64 位进程中创建一个大数组。</span><span class="sxs-lookup"><span data-stu-id="adc9e-130">You are attempting to create a large array in a 64-bit process.</span></span>  
 <span data-ttu-id="adc9e-131">默认情况下，公共语言运行时不允许其大小超过 2 GB 的单个对象。</span><span class="sxs-lookup"><span data-stu-id="adc9e-131">By default, the common language runtime does not allow single objects whose size exceeds 2GB.</span></span> <span data-ttu-id="adc9e-132">若要替代此默认设置，可以使用配置文件设置以启用总大小超过 2 GB 的数组。</span><span class="sxs-lookup"><span data-stu-id="adc9e-132">To override this default, you can use the  configuration file setting to enable arrays whose total size exceeds 2 GB.</span></span>  
  
 <span data-ttu-id="adc9e-133">你正在使用非常大 （如数组、 集合或数据库的数据集） 的数据集在内存中。</span><span class="sxs-lookup"><span data-stu-id="adc9e-133">You are working with very large sets of data (such as arrays, collections, or database data sets) in memory.</span></span>  
 <span data-ttu-id="adc9e-134">当数据结构或驻留在内存中的数据集变得太大，公共语言运行时无法为它们分配连续内存不足时<xref:System.OutOfMemoryException>异常结果。</span><span class="sxs-lookup"><span data-stu-id="adc9e-134">When data structures or data sets that reside in memory become so large that the common language runtime is unable to allocate enough contiguous memory for them, an <xref:System.OutOfMemoryException> exception results.</span></span>  
  
 <span data-ttu-id="adc9e-135">若要防止<xref:System.OutOfMemoryException>异常，则必须修改应用程序，以便更少的数据驻留在内存中，或将数据划分成需要的较小的内存分配的段。</span><span class="sxs-lookup"><span data-stu-id="adc9e-135">To prevent the <xref:System.OutOfMemoryException> exceptions, you must modify your application so that less data is resident in memory, or the data is divided into segments that require smaller memory allocations.</span></span> <span data-ttu-id="adc9e-136">例如:</span><span class="sxs-lookup"><span data-stu-id="adc9e-136">For example:</span></span>  
  
-   <span data-ttu-id="adc9e-137">如果是从数据库检索的所有数据，然后对其进行筛选以最大程度减少往返服务器应用程序中，您应修改查询以返回仅应用所需的数据子集。</span><span class="sxs-lookup"><span data-stu-id="adc9e-137">If you are retrieving all of the data from a database and then filtering it in your app to minimize trips to the server, you should modify your queries to return only the subset of data that your app needs.</span></span> <span data-ttu-id="adc9e-138">使用大型表时，多个查询时，几乎总是的详细信息比检索所有单个表中的数据，然后对其进行处理的效率高。</span><span class="sxs-lookup"><span data-stu-id="adc9e-138">When working with large tables, multiple queries are almost always more efficient than retrieving all of the data in a single table and then manipulating it.</span></span>  
  
-   <span data-ttu-id="adc9e-139">如果在执行用户动态创建的查询，应确保由查询返回的记录数会受到限制。</span><span class="sxs-lookup"><span data-stu-id="adc9e-139">If you are executing queries that users create dynamically, you should ensure that the number of records returned by the query is limited.</span></span>  
  
-   <span data-ttu-id="adc9e-140">如果使用的大型数组或对象的其他集合中的其大小结果<xref:System.OutOfMemoryException>异常，则应修改应用程序能够将数据子集而不是一次性全部使用它。</span><span class="sxs-lookup"><span data-stu-id="adc9e-140">If you are using large arrays or other collection objects whose size results in an <xref:System.OutOfMemoryException> exception, you should modify your application to work the data in subsets rather than to work with it all at once.</span></span>  
  
 <span data-ttu-id="adc9e-141">以下示例将获取一个数组，其中包括 200 万个浮点值，然后计算其平均值。</span><span class="sxs-lookup"><span data-stu-id="adc9e-141">The following example gets a array that consists of 200 million floating-point values and then calculates their mean.</span></span> <span data-ttu-id="adc9e-142">该示例的输出显示，因为该示例在内存中存储整个数组，它会计算平均值之前,<xref:System.OutOfMemoryException>是引发。</span><span class="sxs-lookup"><span data-stu-id="adc9e-142">The output from the example shows that, because the example stores the entire array in memory before it calculates the mean, an <xref:System.OutOfMemoryException> is is thrown.</span></span>  
  
 [!code-csharp[System.OutOfMemoryException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/data1.cs#3)]
 [!code-vb[System.OutOfMemoryException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/data1.vb#3)]  
  
 <span data-ttu-id="adc9e-143">下面的示例可消除<xref:System.OutOfMemoryException>由处理传入的数据，而不是将整个数据集存储在内存中，序列化到文件数据，如有必要以允许进一步处理 （这些行中注释掉示例中，异常由于这种情况下它们生成一个文件，其大小是大于 1 GB），并将计算的平均值和事例数返回到调用例程。</span><span class="sxs-lookup"><span data-stu-id="adc9e-143">The following example eliminates the <xref:System.OutOfMemoryException> exception by processing the incoming data without storing the entire data set in memory, serializing the data to a file if necessary to permit further processing (these lines are commented out in the example, since in this case they produce a file whose size is greater than 1GB), and returning the calculated mean and the number of cases to the calling routine.</span></span>  
  
 [!code-csharp[System.OutOfMemoryException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.outofmemoryexception/cs/data2.cs#4)]
 [!code-vb[System.OutOfMemoryException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.outofmemoryexception/vb/data2.vb#4)]  
  
 <span data-ttu-id="adc9e-144">重复连接长字符串。</span><span class="sxs-lookup"><span data-stu-id="adc9e-144">You are repeatedly concatenating large strings.</span></span>  
 <span data-ttu-id="adc9e-145">由于字符串是不可变，每个字符串串联操作将创建一个新字符串。</span><span class="sxs-lookup"><span data-stu-id="adc9e-145">Because strings are immutable, each string concatenation operation creates a new string.</span></span> <span data-ttu-id="adc9e-146">对于小字符串，或对于串联操作中，较少数量的影响可以忽略不计。</span><span class="sxs-lookup"><span data-stu-id="adc9e-146">The impact for small strings, or for a small number of concatenation operations, is negligible.</span></span> <span data-ttu-id="adc9e-147">但对于大型字符串或非常大量的串联操作中，字符串串联可能会导致大量的内存分配和内存碎片，性能不佳，并可能<xref:System.OutOfMemoryException>异常。</span><span class="sxs-lookup"><span data-stu-id="adc9e-147">But for large strings or a very large number of concatenation operations, string concatenation can lead to a large number of memory allocations and memory fragmentation, poor performance, and possibly <xref:System.OutOfMemoryException> exceptions.</span></span>  
  
 <span data-ttu-id="adc9e-148">当连接长字符串，或执行大量的串联操作中，您应使用<xref:System.Text.StringBuilder>类而不是<xref:System.String>类。</span><span class="sxs-lookup"><span data-stu-id="adc9e-148">When concatenating large strings or performing a large number of concatenation operations, you should use the <xref:System.Text.StringBuilder> class instead of the <xref:System.String> class.</span></span> <span data-ttu-id="adc9e-149">完成操作字符串后，将转换<xref:System.Text.StringBuilder>实例与通过调用字符串<xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="adc9e-149">When you have finished manipulating the string, convert the <xref:System.Text.StringBuilder> instance to a string by calling the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="adc9e-150">将大量对象固定在内存中。</span><span class="sxs-lookup"><span data-stu-id="adc9e-150">You pin a large number of objects in memory.</span></span>  
 <span data-ttu-id="adc9e-151">很长一段固定内存中的大量对象可以使难以垃圾回收器分配的内存的连续块。</span><span class="sxs-lookup"><span data-stu-id="adc9e-151">Pinning a large number of objects in memory for long periods can make it difficult for the garbage collector to allocate contiguous blocks of memory.</span></span> <span data-ttu-id="adc9e-152">如果已将固定大量对象在内存中，例如通过使用`fixed`语句在 C# 或通过调用<xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType>方法的句柄类型替换<xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType>，您可以执行以下操作为地址<xref:System.OutOfMemoryException>异常。</span><span class="sxs-lookup"><span data-stu-id="adc9e-152">If you've pinned a large number of objects in memory, for example by using the `fixed` statement in C# or by calling the <xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType> method with a handle type of <xref:System.Runtime.InteropServices.GCHandleType.Pinned?displayProperty=nameWithType>, you can do the following to address the <xref:System.OutOfMemoryException> exception.</span></span>  
  
-   <span data-ttu-id="adc9e-153">评估是否真的需要固定，每个对象</span><span class="sxs-lookup"><span data-stu-id="adc9e-153">Evaluate whether each object really needs to be pinned,</span></span>  
  
-   <span data-ttu-id="adc9e-154">请确保每个对象已取消固定越早越好。</span><span class="sxs-lookup"><span data-stu-id="adc9e-154">Ensure that each object is unpinned as soon as possible.</span></span>  
  
-   <span data-ttu-id="adc9e-155">请确保每个调用到<xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType>pin 内存的方法具有相应地调用<xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType>方法来取消固定的内存。</span><span class="sxs-lookup"><span data-stu-id="adc9e-155">Make sure that each call to the <xref:System.Runtime.InteropServices.GCHandle.Alloc%28System.Object%2CSystem.Runtime.InteropServices.GCHandleType%29?displayProperty=nameWithType> method to pin memory has a corresponding call to the <xref:System.Runtime.InteropServices.GCHandle.Free%2A?displayProperty=nameWithType> method to unpin that memory.</span></span>  
  
 <span data-ttu-id="adc9e-156">以下 Microsoft 中间 (MSIL) 指令引发<xref:System.OutOfMemoryException>异常：</span><span class="sxs-lookup"><span data-stu-id="adc9e-156">The following Microsoft intermediate (MSIL) instructions throw an <xref:System.OutOfMemoryException> exception:</span></span>  
  
-   [<span data-ttu-id="adc9e-157">box</span><span class="sxs-lookup"><span data-stu-id="adc9e-157">box</span></span>](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.box.aspx)  
  
-   [<span data-ttu-id="adc9e-158">newarr</span><span class="sxs-lookup"><span data-stu-id="adc9e-158">newarr</span></span>](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.newarr.aspx)  
  
-   <span data-ttu-id="adc9e-159">[newobj](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)newobj</span><span class="sxs-lookup"><span data-stu-id="adc9e-159">[newobj](https://msdn.microsoft.com/library/system.reflection.emit.opcodes.newobj.aspx)newobj</span></span>  
  
 <span data-ttu-id="adc9e-160"><xref:System.OutOfMemoryException> 使用 HRESULT `COR_E_OUTOFMEMORY`，其中包含已用完 0x8007000E 的值。</span><span class="sxs-lookup"><span data-stu-id="adc9e-160"><xref:System.OutOfMemoryException> uses the HRESULT `COR_E_OUTOFMEMORY`, which has the value 0x8007000E.</span></span>  
  
 <span data-ttu-id="adc9e-161">有关实例的初始属性值的列表<xref:System.OutOfMemoryException>，请参阅<xref:System.OutOfMemoryException.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="adc9e-161">For a list of initial property values for an instance of <xref:System.OutOfMemoryException>, see the <xref:System.OutOfMemoryException.%23ctor%2A> constructors.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="adc9e-162">值继承<xref:System.Exception.Data%2A>属性始终为`null`。</span><span class="sxs-lookup"><span data-stu-id="adc9e-162">The value of the inherited <xref:System.Exception.Data%2A> property is always `null`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md">
      <span data-ttu-id="adc9e-163">处理和引发异常</span>
      <span class="sxs-lookup">
        <span data-stu-id="adc9e-163">Handling and Throwing Exceptions</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="adc9e-164">初始化 <see cref="T:System.OutOfMemoryException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="adc9e-164">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="adc9e-165">初始化 <see cref="T:System.OutOfMemoryException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="adc9e-165">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adc9e-166">此构造函数初始化<xref:System.Exception.Message%2A>为系统提供的错误进行描述，如"没有足够的内存来继续执行程序。"的消息的新实例的属性</span><span class="sxs-lookup"><span data-stu-id="adc9e-166">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "There was not enough memory to continue the execution of the program."</span></span> <span data-ttu-id="adc9e-167">此消息将当前系统区域性考虑在内。</span><span class="sxs-lookup"><span data-stu-id="adc9e-167">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="adc9e-168">下表显示 <xref:System.OutOfMemoryException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="adc9e-168">The following table shows the initial property values for an instance of <xref:System.OutOfMemoryException>.</span></span>  
  
|<span data-ttu-id="adc9e-169">Property</span><span class="sxs-lookup"><span data-stu-id="adc9e-169">Property</span></span>|<span data-ttu-id="adc9e-170">“值”</span><span class="sxs-lookup"><span data-stu-id="adc9e-170">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="adc9e-171">`null`。</span><span class="sxs-lookup"><span data-stu-id="adc9e-171">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="adc9e-172">本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="adc9e-172">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : string -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="adc9e-173">描述错误的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="adc9e-173">The message that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="adc9e-174">用指定的错误消息初始化 <see cref="T:System.OutOfMemoryException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="adc9e-174">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adc9e-175">`message` 参数的内容应为人所理解。</span><span class="sxs-lookup"><span data-stu-id="adc9e-175">The content of the `message` parameter is intended to be understood by humans.</span></span> <span data-ttu-id="adc9e-176">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="adc9e-176">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="adc9e-177">下表显示 <xref:System.OutOfMemoryException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="adc9e-177">The following table shows the initial property values for an instance of <xref:System.OutOfMemoryException>.</span></span>  
  
|<span data-ttu-id="adc9e-178">Property</span><span class="sxs-lookup"><span data-stu-id="adc9e-178">Property</span></span>|<span data-ttu-id="adc9e-179">“值”</span><span class="sxs-lookup"><span data-stu-id="adc9e-179">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="adc9e-180">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="adc9e-180">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="adc9e-181">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="adc9e-181">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OutOfMemoryException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OutOfMemoryException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="adc9e-182">承载序列化对象数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="adc9e-182">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="adc9e-183">关于来源和目标的上下文信息</span>
          <span class="sxs-lookup">
            <span data-stu-id="adc9e-183">The contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="adc9e-184">用序列化数据初始化 <see cref="T:System.OutOfMemoryException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="adc9e-184">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adc9e-185">此构造函数在反序列化过程中调用，以便重建通过流传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="adc9e-185">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="adc9e-186">有关详细信息，请参阅[XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="adc9e-186">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">
          <span data-ttu-id="adc9e-187">XML 和 SOAP 序列化</span>
          <span class="sxs-lookup">
            <span data-stu-id="adc9e-187">XML and SOAP Serialization</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfMemoryException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutOfMemoryException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new OutOfMemoryException : string * Exception -&gt; OutOfMemoryException" Usage="new System.OutOfMemoryException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="adc9e-188">解释异常原因的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="adc9e-188">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="adc9e-189">导致当前异常的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="adc9e-189">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="adc9e-190">如果 <c>innerException</c> 参数不是空引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 <see langword="catch" /> 块中引发当前异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="adc9e-190">If the <c>innerException</c> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="adc9e-191">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.OutOfMemoryException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="adc9e-191">Initializes a new instance of the <see cref="T:System.OutOfMemoryException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adc9e-192">因前一个异常而直接引发的异常可以在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="adc9e-192">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="adc9e-193"><xref:System.Exception.InnerException%2A> 属性返回传递到构造函数中的相同值，或者如果 `Nothing` 属性不向构造函数提供内部异常值，则为空引用（在 Visual Basic 中为 <xref:System.Exception.InnerException%2A>）。</span><span class="sxs-lookup"><span data-stu-id="adc9e-193">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="adc9e-194">下表显示 <xref:System.OutOfMemoryException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="adc9e-194">The following table shows the initial property values for an instance of <xref:System.OutOfMemoryException>.</span></span>  
  
|<span data-ttu-id="adc9e-195">Property</span><span class="sxs-lookup"><span data-stu-id="adc9e-195">Property</span></span>|<span data-ttu-id="adc9e-196">“值”</span><span class="sxs-lookup"><span data-stu-id="adc9e-196">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="adc9e-197">内部异常引用。</span><span class="sxs-lookup"><span data-stu-id="adc9e-197">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="adc9e-198">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="adc9e-198">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md">
          <span data-ttu-id="adc9e-199">处理和引发异常</span>
          <span class="sxs-lookup">
            <span data-stu-id="adc9e-199">Handling and Throwing Exceptions</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>