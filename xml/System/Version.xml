<Type Name="Version" FullName="System.Version">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fff61fd37ea7bfb95149ba7bd0784859f38aa748" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39886572" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Version : ICloneable, IComparable, IComparable&lt;Version&gt;, IEquatable&lt;Version&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Version extends System.Object implements class System.ICloneable, class System.IComparable, class System.IComparable`1&lt;class System.Version&gt;, class System.IEquatable`1&lt;class System.Version&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Version" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Version&#xA;Implements ICloneable, IComparable, IComparable(Of Version), IEquatable(Of Version)" />
  <TypeSignature Language="C++ CLI" Value="public ref class Version sealed : ICloneable, IComparable, IComparable&lt;Version ^&gt;, IEquatable&lt;Version ^&gt;" />
  <TypeSignature Language="F#" Value="type Version = class&#xA;    interface ICloneable&#xA;    interface IComparable&#xA;    interface IComparable&lt;Version&gt;&#xA;    interface IEquatable&lt;Version&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Version&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Version&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="40afd-101">表示程序集、操作系统或公共语言运行时的版本号。</span>
      <span class="sxs-lookup">
        <span data-stu-id="40afd-101">Represents the version number of an assembly, operating system, or the common language runtime.</span>
      </span>
      <span data-ttu-id="40afd-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="40afd-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-103">版本号由二到四个部分组成： 主要、 次要、 内部版本号和修订版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-103">Version numbers consist of two to four components: major, minor, build, and revision.</span></span> <span data-ttu-id="40afd-104">主版本号和次组件是必需的;内部版本号和修订组件是可选的但是如果定义修订号部分，则需要生成组件。</span><span class="sxs-lookup"><span data-stu-id="40afd-104">The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined.</span></span> <span data-ttu-id="40afd-105">所有定义的部分必须是大于或等于 0 的整数。</span><span class="sxs-lookup"><span data-stu-id="40afd-105">All defined components must be integers greater than or equal to 0.</span></span> <span data-ttu-id="40afd-106">版本号的格式如下所示 (可选组件显示在方括号 （[和]）：</span><span class="sxs-lookup"><span data-stu-id="40afd-106">The format of the version number is as follows (optional components are shown in square brackets ([ and ]):</span></span>  
  
 <span data-ttu-id="40afd-107">*主要*。*次要*[。*构建*[。*修订*]]</span><span class="sxs-lookup"><span data-stu-id="40afd-107">*major*.*minor*[.*build*[.*revision*]]</span></span>  
  
 <span data-ttu-id="40afd-108">组件使用约定，如下所示：</span><span class="sxs-lookup"><span data-stu-id="40afd-108">The components are used by convention as follows:</span></span>  
  
-   <span data-ttu-id="40afd-109">*主要*： 具有相同名称但不同主要版本的程序集不能互换。</span><span class="sxs-lookup"><span data-stu-id="40afd-109">*Major*: Assemblies with the same name but different major versions are not interchangeable.</span></span> <span data-ttu-id="40afd-110">更高版本的版本号可能表示向后兼容性不能假定其中一个产品的主要重写。</span><span class="sxs-lookup"><span data-stu-id="40afd-110">A higher version number might indicate a major rewrite of a product where backward compatibility cannot be assumed.</span></span>  
  
-   <span data-ttu-id="40afd-111">*次要*： 如果名称和两个程序集的主版本号是相同的但次版本号不同，这指示照顾到向后兼容性显著增强。</span><span class="sxs-lookup"><span data-stu-id="40afd-111">*Minor*: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility.</span></span> <span data-ttu-id="40afd-112">产品的点版本或完全向后兼容的新版本的产品，可能表示此更高版本的次版本号。</span><span class="sxs-lookup"><span data-stu-id="40afd-112">This higher minor version number might indicate a point release of a product or a fully backward-compatible new version of a product.</span></span>  
  
-   <span data-ttu-id="40afd-113">*生成*： 生成号的不同表示同一源的重新编译。</span><span class="sxs-lookup"><span data-stu-id="40afd-113">*Build*: A difference in build number represents a recompilation of the same source.</span></span> <span data-ttu-id="40afd-114">处理器、 平台或编译器发生更改时，可能使用不同的内部版本号。</span><span class="sxs-lookup"><span data-stu-id="40afd-114">Different build numbers might be used when the processor, platform, or compiler changes.</span></span>  
  
-   <span data-ttu-id="40afd-115">*修订*： 名称、 主要和次要版本号相同但修订版本号不同的程序集应是完全可互换。</span><span class="sxs-lookup"><span data-stu-id="40afd-115">*Revision*: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable.</span></span> <span data-ttu-id="40afd-116">可能在修复安全漏洞中以前发布的程序集的生成中使用更高版本的修订号。</span><span class="sxs-lookup"><span data-stu-id="40afd-116">A higher revision number might be used in a build that fixes a security hole in a previously released assembly.</span></span>  
  
 <span data-ttu-id="40afd-117">只有内部版本号或修订号不同的后续版本的程序集视为可对先前版本的修补程序更新。</span><span class="sxs-lookup"><span data-stu-id="40afd-117">Subsequent versions of an assembly that differ only by build or revision numbers are considered to be Hotfix updates of the prior version.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="40afd-118">值<xref:System.Version>尚未显式分配值的属性是未定义 (-1)。</span><span class="sxs-lookup"><span data-stu-id="40afd-118">The value of <xref:System.Version> properties that have not been explicitly assigned a value is undefined (-1).</span></span>  
  
 <span data-ttu-id="40afd-119">从.NET Framework 2.0 开始<xref:System.Version.MajorRevision%2A>和<xref:System.Version.MinorRevision%2A>属性，你可以识别的应用程序，例如，可以解决问题，您可以释放永久的解决方案之前的临时版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-119">Starting with .NET Framework 2.0, the <xref:System.Version.MajorRevision%2A> and <xref:System.Version.MinorRevision%2A> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.</span></span>  <span data-ttu-id="40afd-120">此外，Windows NT 操作系统使用<xref:System.Version.MajorRevision%2A>属性进行编码的 service pack 编号。</span><span class="sxs-lookup"><span data-stu-id="40afd-120">Furthermore, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.</span></span>  
  
## <a name="assigning-version-information-to-assemblies"></a><span data-ttu-id="40afd-121">将版本信息分配给程序集</span><span class="sxs-lookup"><span data-stu-id="40afd-121">Assigning Version Information to Assemblies</span></span>  
 <span data-ttu-id="40afd-122">通常，<xref:System.Version>类不使用要分配给程序集的版本号。</span><span class="sxs-lookup"><span data-stu-id="40afd-122">Ordinarily, the <xref:System.Version> class is not used to assign a version number to an assembly.</span></span> <span data-ttu-id="40afd-123">相反，<xref:System.Reflection.AssemblyVersionAttribute>类用于定义程序集的版本，如本主题中的示例所示。</span><span class="sxs-lookup"><span data-stu-id="40afd-123">Instead, the <xref:System.Reflection.AssemblyVersionAttribute> class is used to define an assembly's version, as illustrated by the example in this topic.</span></span>  
  
## <a name="retrieving-version-information"></a><span data-ttu-id="40afd-124">检索版本信息</span><span class="sxs-lookup"><span data-stu-id="40afd-124">Retrieving Version Information</span></span>  
 <span data-ttu-id="40afd-125"><xref:System.Version> 对象通常用于存储有关某个系统或应用程序组件 （如操作系统）、 公共语言运行时，当前应用程序的可执行文件或特定的程序集版本信息。</span><span class="sxs-lookup"><span data-stu-id="40afd-125"><xref:System.Version> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly.</span></span> <span data-ttu-id="40afd-126">下面的示例演示了一些最常见的方案：</span><span class="sxs-lookup"><span data-stu-id="40afd-126">The following examples illustrate some of the most common scenarios:</span></span>  
  
-   <span data-ttu-id="40afd-127">正在检索的操作系统版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-127">Retrieving the operating system version.</span></span> <span data-ttu-id="40afd-128">下面的示例使用<xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType>属性检索的操作系统的版本号。</span><span class="sxs-lookup"><span data-stu-id="40afd-128">The following example uses the <xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType> property to retrieve the version number of the operating system.</span></span>  
  
     [!code-csharp[System.Version.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#1)]
     [!code-vb[System.Version.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#1)]  
  
-   <span data-ttu-id="40afd-129">正在检索公共语言运行时的版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-129">Retrieving the version of the common language runtime.</span></span> <span data-ttu-id="40afd-130">下面的示例使用<xref:System.Environment.Version%2A?displayProperty=nameWithType>属性来检索有关公共语言运行时版本信息。</span><span class="sxs-lookup"><span data-stu-id="40afd-130">The following example uses the <xref:System.Environment.Version%2A?displayProperty=nameWithType> property to retrieve version information about the common language runtime.</span></span>  
  
     [!code-csharp[System.Version.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#2)]
     [!code-vb[System.Version.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#2)]  
  
-   <span data-ttu-id="40afd-131">正在检索当前应用程序的程序集版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-131">Retrieving the current application's assembly version.</span></span> <span data-ttu-id="40afd-132">下面的示例使用<xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType>方法来获取对引用<xref:System.Reflection.Assembly>对象，它表示应用程序可执行文件，然后检索其程序集的版本号。</span><span class="sxs-lookup"><span data-stu-id="40afd-132">The following example uses the <xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType> method to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the application executable and then retrieves its assembly version number.</span></span>  
  
     [!code-csharp[System.Version.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentapp.cs#5)]
     [!code-vb[System.Version.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentapp.vb#5)]  
  
-   <span data-ttu-id="40afd-133">正在检索当前程序集的程序集版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-133">Retrieving the current assembly's assembly version.</span></span> <span data-ttu-id="40afd-134">下面的示例使用<xref:System.Type.Assembly%2A?displayProperty=nameWithType>属性来获取对引用<xref:System.Reflection.Assembly>对象，表示程序集，它包含应用程序入口点，然后检索其版本信息。</span><span class="sxs-lookup"><span data-stu-id="40afd-134">The following example uses the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the assembly that contains the application entry point, and then retrieves its version information.</span></span>  
  
     [!code-csharp[System.Version.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentassem.cs#4)]
     [!code-vb[System.Version.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentassem.vb#4)]  
  
-   <span data-ttu-id="40afd-135">检索特定的程序集的版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-135">Retrieving the version of a specific assembly.</span></span> <span data-ttu-id="40afd-136">下面的示例使用<xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType>方法来获取对引用<xref:System.Reflection.Assembly>具有特定文件名称，然后检索其版本信息的对象。</span><span class="sxs-lookup"><span data-stu-id="40afd-136">The following example uses the <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType> method to obtain a reference to an <xref:System.Reflection.Assembly> object that has a particular file name, and then retrieves its version information.</span></span> <span data-ttu-id="40afd-137">请注意其他几种方法，还存在要实例化<xref:System.Reflection.Assembly>按文件名称或强名称的对象。</span><span class="sxs-lookup"><span data-stu-id="40afd-137">Note that several other methods also exist to instantiate an <xref:System.Reflection.Assembly> object by file name or by strong name.</span></span>  
  
     [!code-csharp[System.Version.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/specificassem.cs#3)]
     [!code-vb[System.Version.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/specificassem.vb#3)]  
  
-   <span data-ttu-id="40afd-138">检索一个 ClickOnce 应用程序的发布版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-138">Retrieving the Publish Version of a ClickOnce application.</span></span> <span data-ttu-id="40afd-139">下面的示例使用<xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType>属性来显示应用程序的发布版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-139">The following example uses the <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType> property to display an application's Publish Version.</span></span> <span data-ttu-id="40afd-140">请注意其成功执行要求的示例应用程序标识设置。</span><span class="sxs-lookup"><span data-stu-id="40afd-140">Note that its successful execution requires the example's application identity to be set.</span></span> <span data-ttu-id="40afd-141">这是由 Visual Studio 发布向导自动处理。</span><span class="sxs-lookup"><span data-stu-id="40afd-141">This is handled automatically by the Visual Studio Publish Wizard.</span></span>  
  
     [!code-csharp[System.Version.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/clickonce.cs#7)]
     [!code-vb[System.Version.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/clickonce.vb#7)]  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="40afd-142">ClickOnce 部署的应用程序的发布版本是完全独立于其程序集版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-142">The Publish Version of an application for ClickOnce deployment is completely independent of its assembly version.</span></span>  
  
## <a name="comparing-version-objects"></a><span data-ttu-id="40afd-143">比较版本对象</span><span class="sxs-lookup"><span data-stu-id="40afd-143">Comparing Version Objects</span></span>  
 <span data-ttu-id="40afd-144">可以使用<xref:System.Version.CompareTo%2A>方法以确定其中是否<xref:System.Version>对象是早于、 等于还是晚于第二个<xref:System.Version>对象。</span><span class="sxs-lookup"><span data-stu-id="40afd-144">You can use the <xref:System.Version.CompareTo%2A> method to determine whether one <xref:System.Version> object is earlier than, the same as, or later than a second <xref:System.Version> object.</span></span> <span data-ttu-id="40afd-145">下面的示例指示版本 2.1 晚于 2.0 版。</span><span class="sxs-lookup"><span data-stu-id="40afd-145">The following example indicates that Version 2.1 is later than Version 2.0.</span></span>  
  
 [!code-csharp[System.Version.Class.Comparing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons1.cs#1)]
 [!code-vb[System.Version.Class.Comparing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons1.vb#1)]  
  
 <span data-ttu-id="40afd-146">两个版本对等，主要版本号、 次版本、 生成、 版本号和修订号的第一个<xref:System.Version>对象必须与第二个相同<xref:System.Version>对象。</span><span class="sxs-lookup"><span data-stu-id="40afd-146">For two versions to be equal, the major, minor, build, and revision numbers of the first <xref:System.Version> object must be identical to those of the second <xref:System.Version> object.</span></span> <span data-ttu-id="40afd-147">如果内部版本号或修订的数<xref:System.Version>对象是未定义，该<xref:System.Version>对象被认为是早于<xref:System.Version>对象其生成或修订号等于零。</span><span class="sxs-lookup"><span data-stu-id="40afd-147">If the build or revision number of a <xref:System.Version> object is undefined, that <xref:System.Version> object is considered to be earlier than a <xref:System.Version> object whose build or revision number is equal to zero.</span></span> <span data-ttu-id="40afd-148">下面的示例阐释了这一点通过比较三个<xref:System.Version>具有未定义版本组件的对象。</span><span class="sxs-lookup"><span data-stu-id="40afd-148">The following example illustrates this by comparing three <xref:System.Version> objects that have undefined version components.</span></span>  
  
 [!code-csharp[System.Version.Class.Comparing#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons2.cs#2)]
 [!code-vb[System.Version.Class.Comparing#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons2.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="40afd-149">下面的示例使用<xref:System.Reflection.AssemblyVersionAttribute>属性要分配给程序集的版本号。</span><span class="sxs-lookup"><span data-stu-id="40afd-149">The following example uses the <xref:System.Reflection.AssemblyVersionAttribute> attribute to assign a version number to an assembly.</span></span> <span data-ttu-id="40afd-150">在编译时，此版本的信息与程序集的元数据存储。</span><span class="sxs-lookup"><span data-stu-id="40afd-150">At compile time, this version information is stored with the assembly's metadata.</span></span> <span data-ttu-id="40afd-151">在运行时，该示例将检索的值<xref:System.Type.Assembly%2A?displayProperty=nameWithType>中要获取对执行的程序集的引用的程序集找到的类型的属性，并检索从程序集的版本信息<xref:System.Reflection.AssemblyName.Version%2A>属性的<xref:System.Reflection.AssemblyName>返回对象<xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="40afd-151">At run time, the example retrieves the value of the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property on a type found in the assembly to get a reference to the executing assembly, and it retrieves the assembly's version information from the <xref:System.Reflection.AssemblyName.Version%2A> property of the <xref:System.Reflection.AssemblyName> object returned by the <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Version.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/example1.cs#6)]
 [!code-vb[System.Version.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/example1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="40afd-152">使用指定的主版本号、次版本号、内部版本号和修订号初始化 <see cref="T:System.Version" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-152">Initializes a new instance of the <see cref="T:System.Version" /> class with the specified major, minor, build, and revision numbers.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="40afd-153">初始化 <see cref="T:System.Version" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-153">Initializes a new instance of the <see cref="T:System.Version" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-154">此构造函数创建<xref:System.Version>具有以下属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="40afd-154">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="40afd-155">Property</span><span class="sxs-lookup"><span data-stu-id="40afd-155">Property</span></span>|<span data-ttu-id="40afd-156">“值”</span><span class="sxs-lookup"><span data-stu-id="40afd-156">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|<span data-ttu-id="40afd-157">0</span><span class="sxs-lookup"><span data-stu-id="40afd-157">0</span></span>|  
|<xref:System.Version.Minor%2A>|<span data-ttu-id="40afd-158">0</span><span class="sxs-lookup"><span data-stu-id="40afd-158">0</span></span>|  
|<xref:System.Version.Build%2A>|<span data-ttu-id="40afd-159">未定义 (-1)</span><span class="sxs-lookup"><span data-stu-id="40afd-159">undefined (-1)</span></span>|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="40afd-160">未定义 (-1)</span><span class="sxs-lookup"><span data-stu-id="40afd-160">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (version As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(System::String ^ version);" />
      <MemberSignature Language="F#" Value="new Version : string -&gt; Version" Usage="new System.Version version" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version">
          <span data-ttu-id="40afd-161">一个包含主要版本号、次要版本号、内部版本号和修订号的字符串，其中的各个号之间以句点字符（“.”）分隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-161">A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-162">使用指定的字符串初始化 <see cref="T:System.Version" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-162">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-163">`version`参数可以包含仅组件的主要版本号、 次要版本号、 内部版本号和修订，在该顺序，以及所有用句点分隔的。</span><span class="sxs-lookup"><span data-stu-id="40afd-163">The `version` parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods.</span></span> <span data-ttu-id="40afd-164">必须至少两个组件，并且最多四个。</span><span class="sxs-lookup"><span data-stu-id="40afd-164">There must be at least two components, and at most four.</span></span> <span data-ttu-id="40afd-165">前两个组件都假定主版本号和次。</span><span class="sxs-lookup"><span data-stu-id="40afd-165">The first two components are assumed to be major and minor.</span></span> <span data-ttu-id="40afd-166">未指定组件的值未定义。</span><span class="sxs-lookup"><span data-stu-id="40afd-166">The value of unspecified components is undefined.</span></span>  
  
 <span data-ttu-id="40afd-167">版本号的格式如下所示。</span><span class="sxs-lookup"><span data-stu-id="40afd-167">The format of the version number is as follows.</span></span> <span data-ttu-id="40afd-168">可选组件显示在方括号 ([和]):</span><span class="sxs-lookup"><span data-stu-id="40afd-168">Optional components are shown in square brackets ('[' and ']'):</span></span>  
  
 <span data-ttu-id="40afd-169">主要版本号.次要版本号[.内部版本号[.修订号]]</span><span class="sxs-lookup"><span data-stu-id="40afd-169">major.minor[.build[.revision]]</span></span>  
  
 <span data-ttu-id="40afd-170">所有定义的部分必须是大于或等于 0 的整数。</span><span class="sxs-lookup"><span data-stu-id="40afd-170">All defined components must be integers greater than or equal to 0.</span></span> <span data-ttu-id="40afd-171">例如，如果主版本号是 6，次版本号是 2 的生成号为 1，和修订号为 3，然后`version`应为"6.2.1.3"。</span><span class="sxs-lookup"><span data-stu-id="40afd-171">For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then `version` should be "6.2.1.3".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="40afd-172">
            <paramref name="version" /> 少于两个部分或多于四个部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-172">
              <paramref name="version" /> has fewer than two components or more than four components.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40afd-173">
            <paramref name="version" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-173">
              <paramref name="version" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="40afd-174">主要版本号、次要版本号、内部版本号或修订号部分小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-174">A major, minor, build, or revision component is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="40afd-175">
            <paramref name="version" /> 的至少一个部分未分析为整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-175">At least one component of <paramref name="version" /> does not parse to an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="40afd-176">
            <paramref name="version" /> 至少有一个部分表示大于 <see cref="F:System.Int32.MaxValue" /> 的数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-176">At least one component of <paramref name="version" /> represents a number greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor);" />
      <MemberSignature Language="F#" Value="new Version : int * int -&gt; Version" Usage="new System.Version (major, minor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major">
          <span data-ttu-id="40afd-177">主版本号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-177">The major version number.</span>
          </span>
        </param>
        <param name="minor">
          <span data-ttu-id="40afd-178">次版本号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-178">The minor version number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-179">使用指定的主要版本号值和次要版本号值初始化 <see cref="T:System.Version" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-179">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified major and minor values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-180">此构造函数创建<xref:System.Version>具有以下属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="40afd-180">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="40afd-181">Property</span><span class="sxs-lookup"><span data-stu-id="40afd-181">Property</span></span>|<span data-ttu-id="40afd-182">“值”</span><span class="sxs-lookup"><span data-stu-id="40afd-182">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|<span data-ttu-id="40afd-183">未定义 (-1)</span><span class="sxs-lookup"><span data-stu-id="40afd-183">undefined (-1)</span></span>|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="40afd-184">未定义 (-1)</span><span class="sxs-lookup"><span data-stu-id="40afd-184">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="40afd-185">
            <paramref name="major" /> 或 <paramref name="minor" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-185">
              <paramref name="major" /> or <paramref name="minor" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor, int build);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor, int32 build) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer, build As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor, int build);" />
      <MemberSignature Language="F#" Value="new Version : int * int * int -&gt; Version" Usage="new System.Version (major, minor, build)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="build" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major">
          <span data-ttu-id="40afd-186">主版本号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-186">The major version number.</span>
          </span>
        </param>
        <param name="minor">
          <span data-ttu-id="40afd-187">次版本号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-187">The minor version number.</span>
          </span>
        </param>
        <param name="build">
          <span data-ttu-id="40afd-188">内部版本号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-188">The build number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-189">使用指定的主要版本号、次要版本号和内部版本号值初始化 <see cref="T:System.Version" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-189">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified major, minor, and build values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-190">此构造函数创建<xref:System.Version>具有以下属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="40afd-190">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="40afd-191">Property</span><span class="sxs-lookup"><span data-stu-id="40afd-191">Property</span></span>|<span data-ttu-id="40afd-192">“值”</span><span class="sxs-lookup"><span data-stu-id="40afd-192">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|`build`|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="40afd-193">未定义 (-1)</span><span class="sxs-lookup"><span data-stu-id="40afd-193">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="40afd-194">
            <paramref name="major" />、<paramref name="minor" /> 或 <paramref name="build" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-194">
              <paramref name="major" />, <paramref name="minor" />, or <paramref name="build" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor, int build, int revision);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor, int32 build, int32 revision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer, build As Integer, revision As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor, int build, int revision);" />
      <MemberSignature Language="F#" Value="new Version : int * int * int * int -&gt; Version" Usage="new System.Version (major, minor, build, revision)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="build" Type="System.Int32" />
        <Parameter Name="revision" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major">
          <span data-ttu-id="40afd-195">主版本号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-195">The major version number.</span>
          </span>
        </param>
        <param name="minor">
          <span data-ttu-id="40afd-196">次版本号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-196">The minor version number.</span>
          </span>
        </param>
        <param name="build">
          <span data-ttu-id="40afd-197">内部版本号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-197">The build number.</span>
          </span>
        </param>
        <param name="revision">
          <span data-ttu-id="40afd-198">修订号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-198">The revision number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-199">使用指定的主版本号、次版本号、内部版本号和修订号初始化 <see cref="T:System.Version" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-199">Initializes a new instance of the <see cref="T:System.Version" /> class with the specified major, minor, build, and revision numbers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-200">此构造函数创建<xref:System.Version>具有以下属性值的对象。</span><span class="sxs-lookup"><span data-stu-id="40afd-200">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="40afd-201">Property</span><span class="sxs-lookup"><span data-stu-id="40afd-201">Property</span></span>|<span data-ttu-id="40afd-202">“值”</span><span class="sxs-lookup"><span data-stu-id="40afd-202">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|`build`|  
|<xref:System.Version.Revision%2A>|`revision`|  
  
   
  
## Examples  
 <span data-ttu-id="40afd-203">下面的代码示例演示<xref:System.Version.%23ctor%2A>构造函数，并<xref:System.Version.Major%2A>， <xref:System.Version.Minor%2A>， <xref:System.Version.Build%2A>， <xref:System.Version.Revision%2A>， <xref:System.Version.MajorRevision%2A>，和<xref:System.Version.MinorRevision%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="40afd-203">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="40afd-204">
            <paramref name="major" />、<paramref name="minor" />、<paramref name="build" /> 或 <paramref name="revision" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-204">
              <paramref name="major" />, <paramref name="minor" />, <paramref name="build" />, or <paramref name="revision" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public int Build { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Build" />
      <MemberSignature Language="DocId" Value="P:System.Version.Build" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Build As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Build { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Build : int" Usage="System.Version.Build" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afd-205">获取当前 <see cref="T:System.Version" /> 对象版本号的内部版本号部分的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-205">Gets the value of the build component of the version number for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afd-206">内部版本号或 -1（如果未定义内部版本号）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-206">The build number, or -1 if the build number is undefined.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-207">例如，如果版本号为 6.2.1.3，生成号为 1。</span><span class="sxs-lookup"><span data-stu-id="40afd-207">For example, if the version number is 6.2.1.3, the build number is 1.</span></span> <span data-ttu-id="40afd-208">如果版本号为 6.2，未定义内部版本号。</span><span class="sxs-lookup"><span data-stu-id="40afd-208">If the version number is 6.2, the build number is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40afd-209">下面的代码示例演示<xref:System.Version.%23ctor%2A>构造函数，并<xref:System.Version.Major%2A>， <xref:System.Version.Minor%2A>， <xref:System.Version.Build%2A>， <xref:System.Version.Revision%2A>， <xref:System.Version.MajorRevision%2A>，和<xref:System.Version.MinorRevision%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="40afd-209">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="version.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="40afd-210">返回一个新的 <see cref="T:System.Version" /> 对象，该对象的值与当前的 <see cref="T:System.Version" /> 对象相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-210">Returns a new <see cref="T:System.Version" /> object whose value is the same as the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-211">一个新的 <see cref="T:System.Object" />，其值为当前 <see cref="T:System.Version" /> 对象的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-211">A new <see cref="T:System.Object" /> whose values are a copy of the current <see cref="T:System.Version" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-212">如果返回值的类型很重要，强制转换<xref:System.Object>到此方法返回的实例<xref:System.Version>对象。</span><span class="sxs-lookup"><span data-stu-id="40afd-212">If the type of the return value is important, cast the <xref:System.Object> instance that is returned by this method to a <xref:System.Version> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="40afd-213">将当前 <see cref="T:System.Version" /> 对象与指定的对象或 <see cref="T:System.Version" /> 进行比较，并返回二者相对值的一个指示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-213">Compares the current <see cref="T:System.Version" /> object to a specified object or <see cref="T:System.Version" /> and returns an indication of their relative values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (version As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ version);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="version.CompareTo version" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="version">
          <span data-ttu-id="40afd-214">要比较的对象，或为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-214">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-215">将当前 <see cref="T:System.Version" /> 对象与指定的对象进行比较，并返回二者相对值的一个指示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-215">Compares the current <see cref="T:System.Version" /> object to a specified object and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-216">一个有符号整数，它指示两个对象的相对值，如下表所示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-216">A signed integer that indicates the relative values of the two objects, as shown in the following table.</span>
          </span>
          <span data-ttu-id="40afd-217">
            <list type="table">
              <listheader>
                <term> 返回值 </term>
                <description> 含义 </description>
              </listheader>
              <item>
                <term> 小于零 </term>
                <description> 当前 <see cref="T:System.Version" /> 对象的版本早于 <paramref name="version" />。</description>
              </item>
              <item>
                <term> 零 </term>
                <description> 当前 <see cref="T:System.Version" /> 对象的版本与 <paramref name="version" /> 相同。</description>
              </item>
              <item>
                <term> 大于零 </term>
                <description> 当前 <see cref="T:System.Version" /> 对象是 <paramref name="version" /> 之后的一个版本。或 <paramref name="version" /> 为 <see langword="null" />。</description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-217">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The current <see cref="T:System.Version" /> object is a version before <paramref name="version" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The current <see cref="T:System.Version" /> object is the same version as <paramref name="version" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The current <see cref="T:System.Version" /> object is a version subsequent to <paramref name="version" />.  -or-  <paramref name="version" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-218">组件`Version`递减的重要性顺序是： 主要、 次要、 内部版本号和修订版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-218">The components of `Version` in decreasing order of importance are: major, minor, build, and revision.</span></span> <span data-ttu-id="40afd-219">未知的组件被假定为早于已知的任何组件。</span><span class="sxs-lookup"><span data-stu-id="40afd-219">An unknown component is assumed to be older than any known component.</span></span>  
  
 <span data-ttu-id="40afd-220">例如:</span><span class="sxs-lookup"><span data-stu-id="40afd-220">For example:</span></span>  
  
-   <span data-ttu-id="40afd-221">1.1 版是以前的版本 1.1.0</span><span class="sxs-lookup"><span data-stu-id="40afd-221">Version 1.1 is older than version 1.1.0</span></span>  
  
-   <span data-ttu-id="40afd-222">1.1 版是 1.1.1 版</span><span class="sxs-lookup"><span data-stu-id="40afd-222">Version 1.1 is older than version 1.1.1</span></span>  
  
-   <span data-ttu-id="40afd-223">1.1 版是 1.1.2.3 版</span><span class="sxs-lookup"><span data-stu-id="40afd-223">Version 1.1 is older than version 1.1.2.3</span></span>  
  
-   <span data-ttu-id="40afd-224">版本 1.1.2 低于 1.1.2.4 版</span><span class="sxs-lookup"><span data-stu-id="40afd-224">Version 1.1.2 is older than version 1.1.2.4</span></span>  
  
-   <span data-ttu-id="40afd-225">版本 1.2.5 高于版本 1.2.3.4</span><span class="sxs-lookup"><span data-stu-id="40afd-225">Version 1.2.5 is newer than version 1.2.3.4</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="40afd-226">
            <paramref name="version" /> 的类型不是 <see cref="T:System.Version" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-226">
              <paramref name="version" /> is not of type <see cref="T:System.Version" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Version.CompareTo(System.Version)" />
        <altmember cref="Overload:System.Version.Equals" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (Version value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class System.Version value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.CompareTo(System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Version) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(Version ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Version -&gt; int&#xA;override this.CompareTo : Version -&gt; int" Usage="version.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="40afd-227">要与当前的 <see cref="T:System.Version" /> 对象进行比较的 <see cref="T:System.Version" /> 对象，或者为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-227">A <see cref="T:System.Version" /> object to compare to the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-228">将当前 <see cref="T:System.Version" /> 对象与指定的 <see cref="T:System.Version" /> 对象进行比较，并返回二者相对值的一个指示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-228">Compares the current <see cref="T:System.Version" /> object to a specified <see cref="T:System.Version" /> object and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-229">一个有符号整数，它指示两个对象的相对值，如下表所示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-229">A signed integer that indicates the relative values of the two objects, as shown in the following table.</span>
          </span>
          <span data-ttu-id="40afd-230">
            <list type="table">
              <listheader>
                <term> 返回值 </term>
                <description> 含义 </description>
              </listheader>
              <item>
                <term> 小于零 </term>
                <description> 当前 <see cref="T:System.Version" /> 对象的版本早于 <paramref name="value" />。</description>
              </item>
              <item>
                <term> 零 </term>
                <description> 当前 <see cref="T:System.Version" /> 对象的版本与 <paramref name="value" /> 相同。</description>
              </item>
              <item>
                <term> 大于零 </term>
                <description> 当前 <see cref="T:System.Version" /> 对象是 <paramref name="value" /> 之后的一个版本。或 <paramref name="value" /> 为 <see langword="null" />。</description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-230">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The current <see cref="T:System.Version" /> object is a version before <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The current <see cref="T:System.Version" /> object is the same version as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The current <see cref="T:System.Version" /> object is a version subsequent to <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-231">此方法实现<xref:System.IComparable%601?displayProperty=nameWithType>接口，并且执行略微优于<xref:System.Version.CompareTo%2A>方法因为它没有要取消装箱`value`参数。</span><span class="sxs-lookup"><span data-stu-id="40afd-231">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface, and performs slightly better than the <xref:System.Version.CompareTo%2A> method because it does not have to unbox the `value` parameter.</span></span>  
  
 <span data-ttu-id="40afd-232">组件`Version`递减的重要性顺序是： 主要、 次要、 内部版本号和修订版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-232">The components of `Version` in decreasing order of importance are: major, minor, build, and revision.</span></span> <span data-ttu-id="40afd-233">未知的组件被假定为早于已知的任何组件。</span><span class="sxs-lookup"><span data-stu-id="40afd-233">An unknown component is assumed to be older than any known component.</span></span> <span data-ttu-id="40afd-234">例如:</span><span class="sxs-lookup"><span data-stu-id="40afd-234">For example:</span></span>  
  
-   <span data-ttu-id="40afd-235">版本 1.1 是以前的版本 1.1.0。</span><span class="sxs-lookup"><span data-stu-id="40afd-235">Version 1.1 is older than version 1.1.0.</span></span>  
  
-   <span data-ttu-id="40afd-236">1.1.1 版版本 1.1。</span><span class="sxs-lookup"><span data-stu-id="40afd-236">Version 1.1 is older than version 1.1.1.</span></span>  
  
-   <span data-ttu-id="40afd-237">版本 1.1 是 1.1.2.3 版。</span><span class="sxs-lookup"><span data-stu-id="40afd-237">Version 1.1 is older than version 1.1.2.3.</span></span>  
  
-   <span data-ttu-id="40afd-238">早于版本 1.1.2.4 版本 1.1.2。</span><span class="sxs-lookup"><span data-stu-id="40afd-238">Version 1.1.2 is older than version 1.1.2.4.</span></span>  
  
-   <span data-ttu-id="40afd-239">版本 1.2.5 高于版本 1.2.3.4。</span><span class="sxs-lookup"><span data-stu-id="40afd-239">Version 1.2.5 is newer than version 1.2.3.4.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40afd-240">下面的代码示例演示了泛型和非泛型版本的`CompareTo`多个值和引用类型的方法。</span><span class="sxs-lookup"><span data-stu-id="40afd-240">The following code example demonstrates generic and nongeneric versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="40afd-241">返回一个值，该值指示两个 <see cref="T:System.Version" /> 对象是否表示同一个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-241">Returns a value indicating whether two <see cref="T:System.Version" /> object represent the same value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="version.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="40afd-242">要与当前 <see cref="T:System.Version" /> 对象进行比较的对象，或者为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-242">An object to compare with the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-243">返回一个值，该值指示当前 <see cref="T:System.Version" /> 对象是否等于指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-243">Returns a value indicating whether the current <see cref="T:System.Version" /> object is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-244">如果当前 <see cref="T:System.Version" /> 对象和 <paramref name="obj" /> 都为 <see cref="T:System.Version" /> 对象，并且当前 <see cref="T:System.Version" /> 对象的每个部分都与 <paramref name="obj" /> 的相应部分匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-244">
              <see langword="true" /> if the current <see cref="T:System.Version" /> object and <paramref name="obj" /> are both <see cref="T:System.Version" /> objects, and every component of the current <see cref="T:System.Version" /> object matches the corresponding component of <paramref name="obj" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Version obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Version obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Equals(System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Version ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : Version -&gt; bool" Usage="version.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="40afd-245">要与当前的 <see cref="T:System.Version" /> 对象进行比较的 <see cref="T:System.Version" /> 对象，或者为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-245">A <see cref="T:System.Version" /> object to compare to the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-246">返回一个值，该值指示当前 <see cref="T:System.Version" /> 对象和指定的 <see cref="T:System.Version" /> 对象是否表示同一个值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-246">Returns a value indicating whether the current <see cref="T:System.Version" /> object and a specified <see cref="T:System.Version" /> object represent the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-247">如果当前 <see cref="T:System.Version" /> 对象的每个部分都与 <paramref name="obj" /> 参数的相应部分匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-247">
              <see langword="true" /> if every component of the current <see cref="T:System.Version" /> object matches the corresponding component of the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-248">此方法实现<xref:System.IEquatable%601>接口，并且执行略微优于<xref:System.Version.Equals%2A>方法因为它没有要取消装箱`obj`参数。</span><span class="sxs-lookup"><span data-stu-id="40afd-248">This method implements the <xref:System.IEquatable%601> interface, and performs slightly better than the <xref:System.Version.Equals%2A> method because it does not have to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="Overload:System.Version.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="version.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="40afd-249">返回当前 <see cref="T:System.Version" /> 对象的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-249">Returns a hash code for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-250">32 位有符号整数哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-250">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="40afd-251">下面的代码示例演示<xref:System.Version.%23ctor%2A>构造函数，并<xref:System.Version.Major%2A>， <xref:System.Version.Minor%2A>， <xref:System.Version.Build%2A>， <xref:System.Version.Revision%2A>， <xref:System.Version.MajorRevision%2A>，和<xref:System.Version.MinorRevision%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="40afd-251">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Major">
      <MemberSignature Language="C#" Value="public int Major { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Major" />
      <MemberSignature Language="DocId" Value="P:System.Version.Major" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Major As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Major { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Major : int" Usage="System.Version.Major" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afd-252">获取当前 <see cref="T:System.Version" /> 对象版本号的主要版本号部分的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-252">Gets the value of the major component of the version number for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afd-253">主版本号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-253">The major version number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-254">例如，如果版本号为 6.2，主版本为 6。</span><span class="sxs-lookup"><span data-stu-id="40afd-254">For example, if the version number is 6.2, the major version is 6.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorRevision">
      <MemberSignature Language="C#" Value="public short MajorRevision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 MajorRevision" />
      <MemberSignature Language="DocId" Value="P:System.Version.MajorRevision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MajorRevision As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short MajorRevision { short get(); };" />
      <MemberSignature Language="F#" Value="member this.MajorRevision : int16" Usage="System.Version.MajorRevision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afd-255">获取修订号的高 16 位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-255">Gets the high 16 bits of the revision number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afd-256">16 位带符号整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-256">A 16-bit signed integer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-257">假设您发布应用程序以暂时纠正问题，您可以释放永久的解决方案之前临时版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-257">Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</span></span> <span data-ttu-id="40afd-258">临时版本不一定有新的修订号，但它需要被标识为不同版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-258">The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</span></span> <span data-ttu-id="40afd-259">在这种情况下，对 32 位修订号的上限和下限的 16 位部分中的标识信息进行编码。</span><span class="sxs-lookup"><span data-stu-id="40afd-259">In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</span></span> <span data-ttu-id="40afd-260">使用<xref:System.Version.Revision%2A>属性，以便获取整个修订号，使用<xref:System.Version.MajorRevision%2A>属性以获取高的 16 位，并使用<xref:System.Version.MinorRevision%2A>属性来获取低 16 位。</span><span class="sxs-lookup"><span data-stu-id="40afd-260">Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.</span></span>  
  
 <span data-ttu-id="40afd-261">从.NET Framework 版本 2.0 中，运行系统使用 Windows NT 开始<xref:System.Version.MajorRevision%2A>属性进行编码的 service pack 编号。</span><span class="sxs-lookup"><span data-stu-id="40afd-261">Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40afd-262">下面的代码示例演示<xref:System.Version.%23ctor%2A>构造函数，并<xref:System.Version.Major%2A>， <xref:System.Version.Minor%2A>， <xref:System.Version.Build%2A>， <xref:System.Version.Revision%2A>， <xref:System.Version.MajorRevision%2A>，和<xref:System.Version.MinorRevision%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="40afd-262">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and the <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Version.MinorRevision" />
      </Docs>
    </Member>
    <Member MemberName="Minor">
      <MemberSignature Language="C#" Value="public int Minor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minor" />
      <MemberSignature Language="DocId" Value="P:System.Version.Minor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minor { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minor : int" Usage="System.Version.Minor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afd-263">获取当前 <see cref="T:System.Version" /> 对象版本号的次要版本号部分的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-263">Gets the value of the minor component of the version number for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afd-264">次版本号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-264">The minor version number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-265">例如，如果版本号为 6.2，次要版本为 2。</span><span class="sxs-lookup"><span data-stu-id="40afd-265">For example, if the version number is 6.2, the minor version is 2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40afd-266">下面的代码示例演示<xref:System.Version.%23ctor%2A>构造函数，并<xref:System.Version.Major%2A>， <xref:System.Version.Minor%2A>， <xref:System.Version.Build%2A>， <xref:System.Version.Revision%2A>， <xref:System.Version.MajorRevision%2A>，和<xref:System.Version.MinorRevision%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="40afd-266">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorRevision">
      <MemberSignature Language="C#" Value="public short MinorRevision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 MinorRevision" />
      <MemberSignature Language="DocId" Value="P:System.Version.MinorRevision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorRevision As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short MinorRevision { short get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorRevision : int16" Usage="System.Version.MinorRevision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afd-267">获取修订号的低 16 位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-267">Gets the low 16 bits of the revision number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afd-268">16 位带符号整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-268">A 16-bit signed integer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-269">假设您发布应用程序以暂时纠正问题，您可以释放永久的解决方案之前临时版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-269">Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</span></span> <span data-ttu-id="40afd-270">临时版本不一定有新的修订号，但它需要被标识为不同版本。</span><span class="sxs-lookup"><span data-stu-id="40afd-270">The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</span></span> <span data-ttu-id="40afd-271">在这种情况下，对 32 位修订号的上限和下限的 16 位部分中的标识信息进行编码。</span><span class="sxs-lookup"><span data-stu-id="40afd-271">In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</span></span> <span data-ttu-id="40afd-272">使用<xref:System.Version.Revision%2A>属性，以便获取整个修订号，使用<xref:System.Version.MajorRevision%2A>属性以获取高的 16 位，并使用<xref:System.Version.MinorRevision%2A>属性来获取低 16 位。</span><span class="sxs-lookup"><span data-stu-id="40afd-272">Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40afd-273">下面的代码示例演示<xref:System.Version.%23ctor%2A>构造函数，并<xref:System.Version.Major%2A>， <xref:System.Version.Minor%2A>， <xref:System.Version.Build%2A>， <xref:System.Version.Revision%2A>， <xref:System.Version.MajorRevision%2A>，和<xref:System.Version.MinorRevision%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="40afd-273">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and the <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Version.MajorRevision" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_Equality(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Version * Version -&gt; bool" Usage="v1 = v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="40afd-274">第一个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-274">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="40afd-275">第二个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-275">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-276">确定两个指定的 <see cref="T:System.Version" /> 对象是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-276">Determines whether two specified <see cref="T:System.Version" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-277">如果 <paramref name="v1" /> 等于 <paramref name="v2" />，则为 <see langword="true" />否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-277">
              <see langword="true" /> if <paramref name="v1" /> equals <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="40afd-278">此运算符的等效方法是 <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="40afd-278">The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_GreaterThan(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Version * Version -&gt; bool" Usage="v1 &gt; v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="40afd-279">第一个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-279">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="40afd-280">第二个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-280">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-281">确定指定的第一个 <see cref="T:System.Version" /> 对象是否大于指定的第二个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-281">Determines whether the first specified <see cref="T:System.Version" /> object is greater than the second specified <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-282">如果 <see langword="true" /> 大于 <paramref name="v1" />，则为 <paramref name="v2" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-282">
              <see langword="true" /> if <paramref name="v1" /> is greater than <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="40afd-283">此运算符的等效方法是 <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="40afd-283">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Version * Version -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="40afd-284">第一个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-284">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="40afd-285">第二个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-285">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-286">确定指定的第一个 <see cref="T:System.Version" /> 对象是否大于等于指定的第二个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-286">Determines whether the first specified <see cref="T:System.Version" /> object is greater than or equal to the second specified <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-287">如果 <paramref name="v1" /> 大于等于 <paramref name="v2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-287">
              <see langword="true" /> if <paramref name="v1" /> is greater than or equal to <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="40afd-288">此运算符的等效方法是 <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="40afd-288">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_Inequality(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Version * Version -&gt; bool" Usage="System.Version.op_Inequality (v1, v2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="40afd-289">第一个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-289">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="40afd-290">第二个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-290">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-291">确定两个指定的 <see cref="T:System.Version" /> 对象是否不相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-291">Determines whether two specified <see cref="T:System.Version" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-292">如果 <paramref name="v1" /> 不等于 <paramref name="v2" />，则为 <see langword="true" />否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-292">
              <see langword="true" /> if <paramref name="v1" /> does not equal <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="40afd-293">此运算符的等效方法是 <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="40afd-293">The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_LessThan(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Version * Version -&gt; bool" Usage="v1 &lt; v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="40afd-294">第一个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-294">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="40afd-295">第二个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-295">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-296">确定指定的第一个 <see cref="T:System.Version" /> 对象是否小于指定的第二个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-296">Determines whether the first specified <see cref="T:System.Version" /> object is less than the second specified <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-297">如果 <paramref name="v1" /> 小于 <paramref name="v2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-297">
              <see langword="true" /> if <paramref name="v1" /> is less than <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="40afd-298">此运算符的等效方法是 <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="40afd-298">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40afd-299">
            <paramref name="v1" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-299">
              <paramref name="v1" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Version * Version -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="40afd-300">第一个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-300">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="40afd-301">第二个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-301">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-302">确定指定的第一个 <see cref="T:System.Version" /> 对象是否小于或等于第二个 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-302">Determines whether the first specified <see cref="T:System.Version" /> object is less than or equal to the second <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-303">如果 <paramref name="v1" /> 小于等于 <paramref name="v2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-303">
              <see langword="true" /> if <paramref name="v1" /> is less than or equal to <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="40afd-304">此运算符的等效方法是 <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="40afd-304">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40afd-305">
            <paramref name="v1" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-305">
              <paramref name="v1" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Version Parse (ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char)) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Version ^ Parse(ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; -&gt; Version" Usage="System.Version.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Version Parse (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version Parse(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Version ^ Parse(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; Version" Usage="System.Version.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="40afd-306">包含要转换的版本号的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-306">A string that contains a version number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-307">将版本号的字符串表示形式转换为等效的 <see cref="T:System.Version" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-307">Converts the string representation of a version number to an equivalent <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-308">一个等效于 <paramref name="input" /> 参数中指定的版本号的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-308">An object that is equivalent to the version number specified in the <paramref name="input" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-309">`input`参数都必须具有以下格式：</span><span class="sxs-lookup"><span data-stu-id="40afd-309">The `input` parameter must have the following format:</span></span>  
  
```  
  
major.minor[.build[.revision]]  
```  
  
 <span data-ttu-id="40afd-310">其中*主要*，*次要*，*生成*，以及*修订*是数字的四个组件的版本的字符串表示形式： 主要版本号、 次版本号、 内部版本号和修订号。</span><span class="sxs-lookup"><span data-stu-id="40afd-310">where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</span></span> <span data-ttu-id="40afd-311">可选组件显示在方括号 （[和]）。</span><span class="sxs-lookup"><span data-stu-id="40afd-311">Optional components are shown in square brackets ([ and ]).</span></span> <span data-ttu-id="40afd-312">组件必须出现在指定的顺序，并且必须用句点分隔。</span><span class="sxs-lookup"><span data-stu-id="40afd-312">The components must appear in the specified order, and must be separated by periods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="40afd-313">已识别模式必须符合的版本号的字符串表示形式，因为调用时，应用程序应始终使用异常处理<xref:System.Version.Parse%2A>方法来分析用户输入。</span><span class="sxs-lookup"><span data-stu-id="40afd-313">Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <xref:System.Version.Parse%2A> method to parse user input.</span></span> <span data-ttu-id="40afd-314">或者，可以调用<xref:System.Version.TryParse%2A>方法分析的版本号的字符串表示形式并返回一个值，指示分析操作是否成功。</span><span class="sxs-lookup"><span data-stu-id="40afd-314">Alternatively, you can call the <xref:System.Version.TryParse%2A> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.</span></span>  
  
 <span data-ttu-id="40afd-315"><xref:System.Version.Parse%2A>方法是一种简便方法，它是等效于调用<xref:System.Version.%23ctor%28System.String%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="40afd-315">The <xref:System.Version.Parse%2A> method is a convenience method; it is equivalent to calling the <xref:System.Version.%23ctor%28System.String%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40afd-316">下面的示例使用<xref:System.Version.Parse%2A>方法来分析包含版本信息的字符串的数目。</span><span class="sxs-lookup"><span data-stu-id="40afd-316">The following example uses the <xref:System.Version.Parse%2A> method to parse a number of strings that contain version information.</span></span>  
  
 [!code-csharp[System.Version.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.parse/cs/parse1.cs#1)]
 [!code-vb[System.Version.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="40afd-317">
            <paramref name="input" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-317">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="40afd-318">
            <paramref name="input" /> 少于两个组件或多于四个版本组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-318">
              <paramref name="input" /> has fewer than two or more than four version components.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="40afd-319">在 <paramref name="input" /> 中至少有一个组件小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-319">At least one component in <paramref name="input" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="40afd-320">在 <paramref name="input" /> 中至少有一个组件不是整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-320">At least one component in <paramref name="input" /> is not an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="40afd-321">
            <paramref name="input" /> 中至少有一个组件表示大于 <see cref="F:System.Int32.MaxValue" /> 的数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-321">At least one component in <paramref name="input" /> represents a number that is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Version.ToString" />
        <altmember cref="M:System.Version.TryParse(System.String,System.Version@)" />
      </Docs>
    </Member>
    <Member MemberName="Revision">
      <MemberSignature Language="C#" Value="public int Revision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Revision" />
      <MemberSignature Language="DocId" Value="P:System.Version.Revision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Revision As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Revision { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Revision : int" Usage="System.Version.Revision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afd-322">获取当前 <see cref="T:System.Version" /> 对象版本号的修订号部分的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-322">Gets the value of the revision component of the version number for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afd-323">修订号或为 -1（如果未定义修订号）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-323">The revision number, or -1 if the revision number is undefined.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-324">例如，如果版本号为 6.2.1.3，修订号为 3。</span><span class="sxs-lookup"><span data-stu-id="40afd-324">For example, if the version number is 6.2.1.3, the revision number is 3.</span></span> <span data-ttu-id="40afd-325">如果版本号为 6.2，未定义修订号。</span><span class="sxs-lookup"><span data-stu-id="40afd-325">If the version number is 6.2, the revision number is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40afd-326">下面的代码示例演示<xref:System.Version.%23ctor%2A>构造函数，并<xref:System.Version.Major%2A>， <xref:System.Version.Minor%2A>， <xref:System.Version.Build%2A>， <xref:System.Version.Revision%2A>， <xref:System.Version.MajorRevision%2A>，和<xref:System.Version.MinorRevision%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="40afd-326">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object version);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (version As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ version) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="40afd-327">将当前 <see cref="T:System.Version" /> 对象的值转换为其等效的 <see cref="T:System.String" /> 表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-327">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="version.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="40afd-328">将当前 <see cref="T:System.Version" /> 对象的值转换为其等效的 <see cref="T:System.String" /> 表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-328">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-329">当前 <see cref="T:System.String" /> 对象的主要版本号、次要版本号、内部版本号和修订号部分的值的 <see cref="T:System.Version" /> 表示形式（遵循下面所示格式）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-329">The <see cref="T:System.String" /> representation of the values of the major, minor, build, and revision components of the current <see cref="T:System.Version" /> object, as depicted in the following format.</span>
          </span>
          <span data-ttu-id="40afd-330">各部分之间由句点字符（“.”）分隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-330">Each component is separated by a period character ('.').</span>
          </span>
          <span data-ttu-id="40afd-331">方括号（“[”和“]”）指示在返回值中不会出现的部分（如果未定义该部分）：</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-331">Square brackets ('[' and ']') indicate a component that will not appear in the return value if the component is not defined:</span>
          </span>
          <span data-ttu-id="40afd-332">主要版本号.次要版本号[.内部版本号[.修订号]]</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-332">major.minor[.build[.revision]]</span>
          </span>
          <span data-ttu-id="40afd-333">例如，如果使用构造函数 <c>Version(1,1)</c> 创建 <see cref="T:System.Version" /> 对象，则返回的字符串为“1.1”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-333">For example, if you create a <see cref="T:System.Version" /> object using the constructor <c>Version(1,1)</c>, the returned string is "1.1".</span>
          </span>
          <span data-ttu-id="40afd-334">如果使用构造函数 <c>Version(1,3,4,2)</c> 创建 <see cref="T:System.Version" /> 对象，则返回的字符串为“1.3.4.2”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-334">If you create a <see cref="T:System.Version" /> object using the constructor <c>Version(1,3,4,2)</c>, the returned string is "1.3.4.2".</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int fieldCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 fieldCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (fieldCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int fieldCount);" />
      <MemberSignature Language="F#" Value="override this.ToString : int -&gt; string" Usage="version.ToString fieldCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fieldCount">
          <span data-ttu-id="40afd-335">要返回的部分数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-335">The number of components to return.</span>
          </span>
          <span data-ttu-id="40afd-336">
            <c>fieldCount</c> 的范围为 0 到 4。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-336">The <c>fieldCount</c> ranges from 0 to 4.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-337">将当前 <see cref="T:System.Version" /> 对象的值转换为其等效的 <see cref="T:System.String" /> 表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-337">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span>
          </span>
          <span data-ttu-id="40afd-338">指定的计数指示要返回的部分数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-338">A specified count indicates the number of components to return.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-339">当前 <see cref="T:System.String" /> 对象的主要版本号、次要版本号、内部版本号和修订号部分的值的 <see cref="T:System.Version" /> 表示形式，各部分之间用句点字符（“.”）分隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-339">The <see cref="T:System.String" /> representation of the values of the major, minor, build, and revision components of the current <see cref="T:System.Version" /> object, each separated by a period character ('.').</span>
          </span>
          <span data-ttu-id="40afd-340">
            <paramref name="fieldCount" /> 参数确定返回多少个部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-340">The <paramref name="fieldCount" /> parameter determines how many components are returned.</span>
          </span>
          <span data-ttu-id="40afd-341">
            <list type="table">
              <listheader>
                <term> fieldCount </term>
                <description> 返回值 </description>
              </listheader>
              <item>
                <term> 0 </term>
                <description> 空字符串 ("")。</description>
              </item>
              <item>
                <term> 1 </term>
                <description> major </description>
              </item>
              <item>
                <term> 2 </term>
                <description> major.minor </description>
              </item>
              <item>
                <term> 3 </term>
                <description> major.minor.build </description>
              </item>
              <item>
                <term> 4 </term>
                <description> major.minor.build.revision </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-341">
              <list type="table">
                <listheader>
                  <term> fieldCount  </term>
                  <description> Return Value  </description>
                </listheader>
                <item>
                  <term> 0  </term>
                  <description> An empty string ("").  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> major  </description>
                </item>
                <item>
                  <term> 2  </term>
                  <description> major.minor  </description>
                </item>
                <item>
                  <term> 3  </term>
                  <description> major.minor.build  </description>
                </item>
                <item>
                  <term> 4  </term>
                  <description> major.minor.build.revision  </description>
                </item>
              </list>
            </span>
          </span>
          <span data-ttu-id="40afd-342">例如，如果使用构造函数 <c>Version(1,3,5)</c> 创建 <see cref="T:System.Version" /> 对象，则 <c>ToString(2)</c> 返回“1.3”，并且 <c>ToString(4)</c> 引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-342">For example, if you create <see cref="T:System.Version" /> object using the constructor <c>Version(1,3,5)</c>, <c>ToString(2)</c> returns "1.3" and <c>ToString(4)</c> throws an exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="40afd-343">
            <paramref name="fieldCount" /> 小于 0 或大于 4。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-343">
              <paramref name="fieldCount" /> is less than 0, or more than 4.</span>
          </span>
          <span data-ttu-id="40afd-344">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-344">-or-</span>
          </span>
          <span data-ttu-id="40afd-345">
            <paramref name="fieldCount" /> 多于在当前 <see cref="T:System.Version" /> 对象中定义的部分的数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-345">
              <paramref name="fieldCount" /> is more than the number of components defined in the current <see cref="T:System.Version" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryFormat(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  -&gt; bool" Usage="version.TryFormat (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, int fieldCount, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, int32 fieldCount, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryFormat(System.Span{System.Char},System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), fieldCount As Integer, ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, int fieldCount, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int *  -&gt; bool" Usage="version.TryFormat (destination, fieldCount, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="fieldCount" Type="System.Int32" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="fieldCount">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, out Version result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, [out] class System.Version&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryParse(System.ReadOnlySpan{System.Char},System.Version@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), ByRef result As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, [Runtime::InteropServices::Out] Version ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.Version.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Version" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out Version result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class System.Version&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryParse(System.String,System.Version@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] Version ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Version.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="result" Type="System.Version" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="40afd-346">包含要转换的版本号的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-346">A string that contains a version number to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="40afd-347">当此方法返回时，如果转换成功，则包含与 <c>input</c> 中所包含的数字等效的 <see cref="T:System.Version" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-347">When this method returns, contains the <see cref="T:System.Version" /> equivalent of the number that is contained in <c>input</c>, if the conversion succeeded.</span>
          </span>
          <span data-ttu-id="40afd-348">如果 <c>input</c> 为 <see langword="null" />、<see cref="F:System.String.Empty" />或者如果转换失败，则该方法返回时，<c>result</c> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-348">If <c>input</c> is <see langword="null" />, <see cref="F:System.String.Empty" />, or if the conversion fails, <c>result</c> is <see langword="null" /> when the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afd-349">尝试将版本号的字符串表示形式转换为等效的 <see cref="T:System.Version" /> 对象，并返回一个指示转换是否成功的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-349">Tries to convert the string representation of a version number to an equivalent <see cref="T:System.Version" /> object, and returns a value that indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afd-350">如果 <paramref name="input" /> 参数成功转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afd-350">
              <see langword="true" /> if the <paramref name="input" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afd-351"><xref:System.Version.TryParse%2A>方法是类似于<xref:System.Version.Parse%2A>方法，但它不会引发异常，如果转换失败。</span><span class="sxs-lookup"><span data-stu-id="40afd-351">The <xref:System.Version.TryParse%2A> method is similar to the <xref:System.Version.Parse%2A> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="40afd-352">相反，它会返回`false`如果`input`为 null，则具有两个或多个四个组件，至少一个组件，不是一个整数，至少一个组件，小于零，或具有至少一个组件，它是大于<xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="40afd-352">Instead, it returns `false` if `input` is null, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="40afd-353">分析操作成功，`input`参数必须采用以下格式：</span><span class="sxs-lookup"><span data-stu-id="40afd-353">For the parse operation to succeed, the `input` parameter must be in the following format:</span></span>  
  
```  
  
major.minor[.build[.revision]]  
```  
  
 <span data-ttu-id="40afd-354">其中*主要*，*次要*，*生成*，以及*修订*是数字的四个组件的版本的字符串表示形式： 主要版本号、 次版本号、 内部版本号和修订号。</span><span class="sxs-lookup"><span data-stu-id="40afd-354">where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</span></span> <span data-ttu-id="40afd-355">可选组件显示在方括号 （[和]）。</span><span class="sxs-lookup"><span data-stu-id="40afd-355">Optional components are shown in square brackets ([ and ]).</span></span> <span data-ttu-id="40afd-356">组件必须出现的顺序，并且必须用句点分隔。</span><span class="sxs-lookup"><span data-stu-id="40afd-356">The components must appear in order, and must be separated by periods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40afd-357">下面的示例使用<xref:System.Version.TryParse%2A>方法来分析包含版本信息的字符串的数目。</span><span class="sxs-lookup"><span data-stu-id="40afd-357">The following example uses the <xref:System.Version.TryParse%2A> method to parse a number of strings that contain version information.</span></span>  
  
 [!code-csharp[System.Version.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.Version.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Version.Parse(System.String)" />
        <altmember cref="Overload:System.Version.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>