<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Version.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae05845525e9f038465f7d92114966377901a5d9ae8014bef.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e9f038465f7d92114966377901a5d9ae8014bef</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Represents the version number of an assembly, operating system, or the common language runtime.</source>
          <target state="translated">表示程序集、操作系统或公共语言运行时的版本号。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Version numbers consist of two to four components: major, minor, build, and revision.</source>
          <target state="translated">版本号由二到四个部分组成： 主要、 次版本号、 内部版本和修订版本。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined.</source>
          <target state="translated">主版本号和次组件; 不需要内部版本号和修订组件是可选的但如果定义修订号部分，则需要生成组件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>All defined components must be integers greater than or equal to 0.</source>
          <target state="translated">定义的所有组件都必须大于或等于 0 的整数。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The format of the version number is as follows (optional components are shown in square brackets ([ and ]):</source>
          <target state="translated">版本号的格式，如下所示是 (可选组件显示在方括号 （[和]）：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>major<ept id="p1">*</ept>.<bpt id="p2">*</bpt>minor<ept id="p2">*</ept>[.<bpt id="p3">*</bpt>build<ept id="p3">*</ept>[.<bpt id="p4">*</bpt>revision<ept id="p4">*</ept>]]</source>
          <target state="translated"><bpt id="p1">*</bpt>主要<ept id="p1">*</ept>。<bpt id="p2">*</bpt>次要<ept id="p2">*</ept>[。<bpt id="p3">*</bpt>生成<ept id="p3">*</ept>[。<bpt id="p4">*</bpt>修订<ept id="p4">*</ept>]]</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The components are used by convention as follows:</source>
          <target state="translated">组件使用约定，如下所示：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Major<ept id="p1">*</ept>: Assemblies with the same name but different major versions are not interchangeable.</source>
          <target state="translated"><bpt id="p1">*</bpt>主要<ept id="p1">*</ept>： 具有相同名称但不同主要版本的程序集不能互换。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>A higher version number might indicate a major rewrite of a product where backward compatibility cannot be assumed.</source>
          <target state="translated">更高版本的版本号可能表示无法假定向后兼容性的其中一个产品的主要重写。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Minor<ept id="p1">*</ept>: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility.</source>
          <target state="translated"><bpt id="p1">*</bpt>次要<ept id="p1">*</ept>： 如果的名称和在两个程序集上的主版本号相同，但的次版本号是不同，这指示目的是要向后兼容性的显著增强。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>This higher minor version number might indicate a point release of a product or a fully backward-compatible new version of a product.</source>
          <target state="translated">产品的点版本或产品的完全向后兼容新版本，则可能表示此更高的次版本号。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Build<ept id="p1">*</ept>: A difference in build number represents a recompilation of the same source.</source>
          <target state="translated"><bpt id="p1">*</bpt>生成<ept id="p1">*</ept>： 生成号的不同表示同一源的重新编译。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Different build numbers might be used when the processor, platform, or compiler changes.</source>
          <target state="translated">处理器、 平台或编译器更改时，可能会使用不同的生成号。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><bpt id="p1">*</bpt>Revision<ept id="p1">*</ept>: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable.</source>
          <target state="translated"><bpt id="p1">*</bpt>修订<ept id="p1">*</ept>： 具有相同名称、 主要和次要版本但不同修订号的程序集旨在是完全可互换。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>A higher revision number might be used in a build that fixes a security hole in a previously released assembly.</source>
          <target state="translated">在修复的以前发布的程序集的安全漏洞的版本中可能会使用更高版本的修订号。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Subsequent versions of an assembly that differ only by build or revision numbers are considered to be Hotfix updates of the prior version.</source>
          <target state="translated">只有内部版本号或修订号不同的后续版本的程序集视为可对先前版本的修补程序更新。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The value of <ph id="ph1">&lt;xref:System.Version&gt;</ph> properties that have not been explicitly assigned a value is undefined (-1).</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Version&gt;</ph>尚未显式分配一个值的属性是不确定 (-1)。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Starting with .NET Framework 2.0, the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.</source>
          <target state="translated">从.NET Framework 2.0 开始<ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Version.MinorRevision%2A&gt;</ph>属性使你能够识别的应用程序，例如，更正问题，您可以释放永久的解决方案之前的临时版本。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Furthermore, the Windows NT operating system uses the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to encode the service pack number.</source>
          <target state="translated">此外，Windows NT 操作系统使用<ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>属性进行编码 service pack 编号。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Assigning Version Information to Assemblies</source>
          <target state="translated">将版本信息分配给程序集</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Ordinarily, the <ph id="ph1">&lt;xref:System.Version&gt;</ph> class is not used to assign a version number to an assembly.</source>
          <target state="translated">通常，<ph id="ph1">&lt;xref:System.Version&gt;</ph>类未使用要分配给程序集的版本号。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> class is used to define an assembly's version, as illustrated by the example in this topic.</source>
          <target state="translated">相反，<ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph>类用于定义程序集的版本，如本主题中示例所示。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving Version Information</source>
          <target state="translated">检索版本信息</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source><ph id="ph1">&lt;xref:System.Version&gt;</ph> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Version&gt;</ph> 对象通常用于存储有关某个系统或应用程序的组件 （如操作系统）、 公共语言运行时，当前应用程序的可执行文件或特定程序集的版本信息。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following examples illustrate some of the most common scenarios:</source>
          <target state="translated">下面的示例说明了一些最常见的方案：</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the operating system version.</source>
          <target state="translated">检索的操作系统版本。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType&gt;</ph> property to retrieve the version number of the operating system.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType&gt;</ph>要检索的操作系统的版本号属性。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the version of the common language runtime.</source>
          <target state="translated">检索公共语言运行时的版本。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Environment.Version%2A?displayProperty=nameWithType&gt;</ph> property to retrieve version information about the common language runtime.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Environment.Version%2A?displayProperty=nameWithType&gt;</ph>属性来检索有关公共语言运行时版本信息。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the current application's assembly version.</source>
          <target state="translated">检索当前应用程序的程序集版本。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType&gt;</ph> method to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that represents the application executable and then retrieves its assembly version number.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType&gt;</ph>方法来获取对引用<ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph>表示应用程序可执行文件，然后检索其程序集版本号的对象。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the current assembly's assembly version.</source>
          <target state="translated">检索当前程序集的程序集版本。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> property to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that represents the assembly that contains the application entry point, and then retrieves its version information.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph>属性来获取对引用<ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph>表示包含应用程序入口点，，然后检索其版本信息的程序集的对象。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the version of a specific assembly.</source>
          <target state="translated">检索特定的程序集的版本。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType&gt;</ph> method to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that has a particular file name, and then retrieves its version information.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType&gt;</ph>方法来获取对引用<ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph>具有特定文件名称，然后检索其版本信息的对象。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Note that several other methods also exist to instantiate an <ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph> object by file name or by strong name.</source>
          <target state="translated">请注意其他几种方法，还存在来实例化<ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph>按文件名称或强名称的对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Retrieving the Publish Version of a ClickOnce application.</source>
          <target state="translated">检索发布 ClickOnce 应用程序的版本。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType&gt;</ph> property to display an application's Publish Version.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType&gt;</ph>属性来显示应用程序的发布版本。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Note that its successful execution requires the example's application identity to be set.</source>
          <target state="translated">请注意，其成功执行要求的示例应用程序标识要设置。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>This is handled automatically by the Visual Studio Publish Wizard.</source>
          <target state="translated">这是由 Visual Studio 发布向导自动处理。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The Publish Version of an application for ClickOnce deployment is completely independent of its assembly version.</source>
          <target state="translated">ClickOnce 部署的应用程序的发布版本是完全独立于其程序集版本。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>Comparing Version Objects</source>
          <target state="translated">比较版本对象</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>You can use the <ph id="ph1">&lt;xref:System.Version.CompareTo%2A&gt;</ph> method to determine whether one <ph id="ph2">&lt;xref:System.Version&gt;</ph> object is earlier than, the same as, or later than a second <ph id="ph3">&lt;xref:System.Version&gt;</ph> object.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Version.CompareTo%2A&gt;</ph>方法来确定是否一个<ph id="ph2">&lt;xref:System.Version&gt;</ph>对象是早于、 等于还是晚于第二个<ph id="ph3">&lt;xref:System.Version&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example indicates that Version 2.1 is later than Version 2.0.</source>
          <target state="translated">下面的示例指示版本 2.1 是晚于 2.0 版。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>For two versions to be equal, the major, minor, build, and revision numbers of the first <ph id="ph1">&lt;xref:System.Version&gt;</ph> object must be identical to those of the second <ph id="ph2">&lt;xref:System.Version&gt;</ph> object.</source>
          <target state="translated">两个版本相等，主要、 次版本、 生成、 版本和修订号的第一个<ph id="ph1">&lt;xref:System.Version&gt;</ph>对象必须是相同的第二个<ph id="ph2">&lt;xref:System.Version&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>If the build or revision number of a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object is undefined, that <ph id="ph2">&lt;xref:System.Version&gt;</ph> object is considered to be earlier than a <ph id="ph3">&lt;xref:System.Version&gt;</ph> object whose build or revision number is equal to zero.</source>
          <target state="translated">如果的内部版本号或修订号<ph id="ph1">&lt;xref:System.Version&gt;</ph>对象是不确定，，<ph id="ph2">&lt;xref:System.Version&gt;</ph>对象被视为可早于<ph id="ph3">&lt;xref:System.Version&gt;</ph>对象其生成或修订号等于零。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example illustrates this by comparing three <ph id="ph1">&lt;xref:System.Version&gt;</ph> objects that have undefined version components.</source>
          <target state="translated">下面的示例阐释了这一点通过比较三个<ph id="ph1">&lt;xref:System.Version&gt;</ph>具有未定义的版本组件的对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> attribute to assign a version number to an assembly.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph>属性要分配给程序集的版本号。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>At compile time, this version information is stored with the assembly's metadata.</source>
          <target state="translated">在编译时，系统会与程序集的元数据存储此版本信息。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Version">
          <source>At run time, the example retrieves the value of the <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph> property on a type found in the assembly to get a reference to the executing assembly, and it retrieves the assembly's version information from the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">在运行时，该示例将检索的值<ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=nameWithType&gt;</ph>类型上的属性位于要获取对执行的程序集的引用的程序集，以及它检索程序集的版本信息<ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Reflection.AssemblyName&gt;</ph>返回对象<ph id="ph4">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class with the specified major, minor, build, and revision numbers.</source>
          <target state="translated">使用指定的主版本号、次版本号、内部版本号和修订号初始化 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">此构造函数创建<ph id="ph1">&lt;xref:System.Version&gt;</ph>带有以下属性值的对象。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>undefined (-1)</source>
          <target state="translated">未定义 (-1)</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor">
          <source>undefined (-1)</source>
          <target state="translated">未定义 (-1)</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').</source>
          <target state="translated">一个包含主要版本号、次要版本号、内部版本号和修订号的字符串，其中的各个号之间以句点字符（“.”）分隔。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class using the specified string.</source>
          <target state="translated">使用指定的字符串初始化 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The <ph id="ph1">`version`</ph> parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods.</source>
          <target state="translated"><ph id="ph1">`version`</ph>参数可以包含仅组件主要，次要版本号、 内部和修订版本，在该顺序和所有用句点分隔。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>There must be at least two components, and at most four.</source>
          <target state="translated">必须至少两个组件，并且最多四个。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The first two components are assumed to be major and minor.</source>
          <target state="translated">前两个组件都假定主版本号和次。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The value of unspecified components is undefined.</source>
          <target state="translated">未指定组件的值是不确定的。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>The format of the version number is as follows.</source>
          <target state="translated">版本号的格式如下所示。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>Optional components are shown in square brackets ('[' and ']'):</source>
          <target state="translated">可选组件显示在方括号 ([和]):</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>major.minor[.build[.revision]]</source>
          <target state="translated">主要版本号.次要版本号[.内部版本号[.修订号]]</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>All defined components must be integers greater than or equal to 0.</source>
          <target state="translated">定义的所有组件都必须大于或等于 0 的整数。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.String)">
          <source>For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then <ph id="ph1">`version`</ph> should be "6.2.1.3".</source>
          <target state="translated">如果主要版本号为 6，例如，次版本号是 2、 的生成号为 1，和修订号为 3，然后<ph id="ph1">`version`</ph>应为"6.2.1.3"。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> has fewer than two components or more than four components.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> 少于两个部分或多于四个部分。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>A major, minor, build, or revision component is less than zero.</source>
          <target state="translated">主要版本号、次要版本号、内部版本号或修订号部分小于零。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>At least one component of <ph id="ph1">&lt;paramref name="version" /&gt;</ph> does not parse to an integer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> 的至少一个部分未分析为整数。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.String)">
          <source>At least one component of <ph id="ph1">&lt;paramref name="version" /&gt;</ph> represents a number greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> 至少有一个部分表示大于 <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> 的数。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>The major version number.</source>
          <target state="translated">主版本号。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>The minor version number.</source>
          <target state="translated">次版本号。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class using the specified major and minor values.</source>
          <target state="translated">使用指定的主要版本号值和次要版本号值初始化 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">此构造函数创建<ph id="ph1">&lt;xref:System.Version&gt;</ph>带有以下属性值的对象。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>undefined (-1)</source>
          <target state="translated">未定义 (-1)</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source>undefined (-1)</source>
          <target state="translated">未定义 (-1)</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="major" /&gt;</ph> or <ph id="ph2">&lt;paramref name="minor" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="major" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="minor" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>The major version number.</source>
          <target state="translated">主版本号。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>The minor version number.</source>
          <target state="translated">次版本号。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>The build number.</source>
          <target state="translated">内部版本号。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class using the specified major, minor, and build values.</source>
          <target state="translated">使用指定的主要版本号、次要版本号和内部版本号值初始化 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">此构造函数创建<ph id="ph1">&lt;xref:System.Version&gt;</ph>带有以下属性值的对象。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source>undefined (-1)</source>
          <target state="translated">未定义 (-1)</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="major" /&gt;</ph>, <ph id="ph2">&lt;paramref name="minor" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="build" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="major" /&gt;</ph>、<ph id="ph2">&lt;paramref name="minor" /&gt;</ph> 或 <ph id="ph3">&lt;paramref name="build" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The major version number.</source>
          <target state="translated">主版本号。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The minor version number.</source>
          <target state="translated">次版本号。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The build number.</source>
          <target state="translated">内部版本号。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The revision number.</source>
          <target state="translated">修订号。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> class with the specified major, minor, build, and revision numbers.</source>
          <target state="translated">使用指定的主版本号、次版本号、内部版本号和修订号初始化 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
          <target state="translated">此构造函数创建<ph id="ph1">&lt;xref:System.Version&gt;</ph>带有以下属性值的对象。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">下面的代码示例演示<ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph>构造函数，和<ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>，和<ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="major" /&gt;</ph>, <ph id="ph2">&lt;paramref name="minor" /&gt;</ph>, <ph id="ph3">&lt;paramref name="build" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="revision" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="major" /&gt;</ph>、<ph id="ph2">&lt;paramref name="minor" /&gt;</ph>、<ph id="ph3">&lt;paramref name="build" /&gt;</ph> 或 <ph id="ph4">&lt;paramref name="revision" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Version.Build">
          <source>Gets the value of the build component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">获取当前 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象版本号的内部版本号部分的值。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>The build number, or -1 if the build number is undefined.</source>
          <target state="translated">内部版本号或 -1（如果未定义内部版本号）。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>For example, if the version number is 6.2.1.3, the build number is 1.</source>
          <target state="translated">例如，如果版本号为 6.2.1.3，生成号为 1。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>If the version number is 6.2, the build number is undefined.</source>
          <target state="translated">如果版本号为 6.2，未定义内部版本号。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Build">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">下面的代码示例演示<ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph>构造函数，和<ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>，和<ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Version.Clone">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object whose value is the same as the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">返回一个新的 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象，该对象的值与当前的 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 对象相同。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Version.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose values are a copy of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">一个新的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，其值为当前 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 对象的副本。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Clone">
          <source>If the type of the return value is important, cast the <ph id="ph1">&lt;xref:System.Object&gt;</ph> instance that is returned by this method to a <ph id="ph2">&lt;xref:System.Version&gt;</ph> object.</source>
          <target state="translated">如果返回值的类型很重要，强制转换<ph id="ph1">&lt;xref:System.Object&gt;</ph>由到此方法返回的实例<ph id="ph2">&lt;xref:System.Version&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to a specified object or <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated">将当前 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象与指定的对象或 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 进行比较，并返回二者相对值的一个指示。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>An object to compare, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">要比较的对象，或为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to a specified object and returns an indication of their relative values.</source>
          <target state="translated">将当前 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象与指定的对象进行比较，并返回二者相对值的一个指示。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>A signed integer that indicates the relative values of the two objects, as shown in the following table.</source>
          <target state="translated">一个有符号整数，它指示两个对象的相对值，如下表所示。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 返回值</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 含义</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 小于零</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version before <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>当前 <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> 对象是 <ph id="ph4">&lt;paramref name="version" /&gt;</ph> 之前的一个版本。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is the same version as <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>当前 <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> 对象是与 <ph id="ph4">&lt;paramref name="version" /&gt;</ph> 相同的版本。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大于零</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version subsequent to <ph id="ph4">&lt;paramref name="version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>当前 <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> 对象是 <ph id="ph4">&lt;paramref name="version" /&gt;</ph> 之后的一个版本。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>The components of <ph id="ph1">`Version`</ph> in decreasing order of importance are: major, minor, build, and revision.</source>
          <target state="translated">组件<ph id="ph1">`Version`</ph>在递减的重要性的顺序排列： 主要、 次版本号、 内部版本和修订版本。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>An unknown component is assumed to be older than any known component.</source>
          <target state="translated">未知的组件被假定为早于任何已知的组件。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>For example:</source>
          <target state="translated">例如:</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1 is older than version 1.1.0</source>
          <target state="translated">1.1 版本低于版本 1.1.0</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1 is older than version 1.1.1</source>
          <target state="translated">1.1 版本低于版本 1.1.1</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1 is older than version 1.1.2.3</source>
          <target state="translated">版本 1.1 是 1.1.2.3 版</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.1.2 is older than version 1.1.2.4</source>
          <target state="translated">版本 1.1.2 低于 1.1.2.4 版</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Object)">
          <source>Version 1.2.5 is newer than version 1.2.3.4</source>
          <target state="translated">版本 1.2.5 高于版本为 1.2.3.4</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="version" /&gt;</ph> is not of type <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="version" /&gt;</ph> 的类型不是 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to compare to the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">要与当前的 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象进行比较的 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 对象，或者为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to a specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object and returns an indication of their relative values.</source>
          <target state="translated">将当前 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象与指定的 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 对象进行比较，并返回二者相对值的一个指示。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>A signed integer that indicates the relative values of the two objects, as shown in the following table.</source>
          <target state="translated">一个有符号整数，它指示两个对象的相对值，如下表所示。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 返回值</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 含义</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 小于零</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version before <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>当前 <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> 对象是 <ph id="ph4">&lt;paramref name="value" /&gt;</ph> 之前的一个版本。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is the same version as <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>当前 <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> 对象是与 <ph id="ph4">&lt;paramref name="value" /&gt;</ph> 相同的版本。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大于零</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> object is a version subsequent to <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>当前 <ph id="ph3">&lt;see cref="T:System.Version" /&gt;</ph> 对象是 <ph id="ph4">&lt;paramref name="value" /&gt;</ph> 之后的一个版本。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Version.CompareTo(System.Version)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than the <ph id="ph2">&lt;xref:System.Version.CompareTo%2A&gt;</ph> method because it does not have to unbox the <ph id="ph3">`value`</ph> parameter.</source>
          <target state="translated">此方法实现<ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>接口，并且执行效果略好于<ph id="ph2">&lt;xref:System.Version.CompareTo%2A&gt;</ph>方法因为它没有要取消装箱<ph id="ph3">`value`</ph>参数。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>The components of <ph id="ph1">`Version`</ph> in decreasing order of importance are: major, minor, build, and revision.</source>
          <target state="translated">组件<ph id="ph1">`Version`</ph>在递减的重要性的顺序排列： 主要、 次版本号、 内部版本和修订版本。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>An unknown component is assumed to be older than any known component.</source>
          <target state="translated">未知的组件被假定为早于任何已知的组件。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>For example:</source>
          <target state="translated">例如:</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1 is older than version 1.1.0.</source>
          <target state="translated">版本 1.1 低于 1.1.0 版。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1 is older than version 1.1.1.</source>
          <target state="translated">早于版本 1.1.1 版本 1.1。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1 is older than version 1.1.2.3.</source>
          <target state="translated">版本 1.1 是 1.1.2.3 版。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.1.2 is older than version 1.1.2.4.</source>
          <target state="translated">版本 1.1.2 低于 1.1.2.4 版。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>Version 1.2.5 is newer than version 1.2.3.4.</source>
          <target state="translated">版本 1.2.5 高于版本为 1.2.3.4。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.CompareTo(System.Version)">
          <source>The following code example demonstrates generic and nongeneric versions of the <ph id="ph1">`CompareTo`</ph> method for several value and reference types.</source>
          <target state="translated">下面的代码示例演示泛型和非泛型版本的<ph id="ph1">`CompareTo`</ph>多个值和引用类型的方法。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Returns a value indicating whether two <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object represent the same value.</source>
          <target state="translated">返回一个值，该值指示两个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象是否表示同一个值。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Object)">
          <source>An object to compare with the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">要与当前 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象进行比较的对象，或者为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Object)">
          <source>Returns a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated">返回一个值，该值指示当前 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象是否等于指定的对象。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> are both <ph id="ph4">&lt;see cref="T:System.Version" /&gt;</ph> objects, and every component of the current <ph id="ph5">&lt;see cref="T:System.Version" /&gt;</ph> object matches the corresponding component of <ph id="ph6">&lt;paramref name="obj" /&gt;</ph>; otherwise, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果当前 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 对象和 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> 都为 <ph id="ph4">&lt;see cref="T:System.Version" /&gt;</ph> 对象，并且当前 <ph id="ph5">&lt;see cref="T:System.Version" /&gt;</ph> 对象的每个部分都与 <ph id="ph6">&lt;paramref name="obj" /&gt;</ph> 的相应部分匹配，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph7">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Version)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to compare to the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">要与当前的 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象进行比较的 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 对象，或者为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Version)">
          <source>Returns a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object and a specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object represent the same value.</source>
          <target state="translated">返回一个值，该值指示当前 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象和指定的 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 对象是否表示同一个值。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Version.Equals(System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if every component of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object matches the corresponding component of the <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> parameter; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果当前 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 对象的每个部分都与 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> 参数的相应部分匹配，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Equals(System.Version)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interface, and performs slightly better than the <ph id="ph2">&lt;xref:System.Version.Equals%2A&gt;</ph> method because it does not have to unbox the <ph id="ph3">`obj`</ph> parameter.</source>
          <target state="translated">此方法实现<ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph>接口，并且执行效果略好于<ph id="ph2">&lt;xref:System.Version.Equals%2A&gt;</ph>方法因为它没有要取消装箱<ph id="ph3">`obj`</ph>参数。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Version.GetHashCode">
          <source>Returns a hash code for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">返回当前 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象的哈希代码。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Version.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 位有符号整数哈希代码。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.GetHashCode">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">下面的代码示例演示<ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph>构造函数，和<ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>，和<ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Version.Major">
          <source>Gets the value of the major component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">获取当前 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象版本号的主要版本号部分的值。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Major">
          <source>The major version number.</source>
          <target state="translated">主版本号。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Major">
          <source>For example, if the version number is 6.2, the major version is 6.</source>
          <target state="translated">例如，如果版本号为 6.2，主版本为 6。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Version.MajorRevision">
          <source>Gets the high 16 bits of the revision number.</source>
          <target state="translated">获取修订号的高 16 位。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>A 16-bit signed integer.</source>
          <target state="translated">16 位带符号整数。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</source>
          <target state="translated">假定您发布应用程序，暂时更正问题，您可以释放永久的解决方案之前的一个临时版本。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</source>
          <target state="translated">临时版本不一定有新的修订号，但它需要被标识为不同版本。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</source>
          <target state="translated">在这种情况下，编码的 32 位修订号的上限和下限的 16 位部分中的标识信息。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>Use the <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> property to obtain the entire revision number, use the <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to obtain the high 16 bits, and use the <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> property to obtain the low 16 bits.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph>属性来获取整个修订号，使用<ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>属性以获取高的 16 位，并使用<ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph>属性来获取低 16 位。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to encode the service pack number.</source>
          <target state="translated">从.NET Framework 2.0、 Windows NT 操作系统系统使用开始<ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>属性进行编码 service pack 编号。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MajorRevision">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and the <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">下面的代码示例演示<ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph>构造函数，与<ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>，和<ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Version.Minor">
          <source>Gets the value of the minor component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">获取当前 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象版本号的次要版本号部分的值。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Minor">
          <source>The minor version number.</source>
          <target state="translated">次版本号。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Minor">
          <source>For example, if the version number is 6.2, the minor version is 2.</source>
          <target state="translated">例如，如果版本号为 6.2，次要版本为 2。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Minor">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">下面的代码示例演示<ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph>构造函数，和<ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>，和<ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="P:System.Version.MinorRevision">
          <source>Gets the low 16 bits of the revision number.</source>
          <target state="translated">获取修订号的低 16 位。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>A 16-bit signed integer.</source>
          <target state="translated">16 位带符号整数。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</source>
          <target state="translated">假定您发布应用程序，暂时更正问题，您可以释放永久的解决方案之前的一个临时版本。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</source>
          <target state="translated">临时版本不一定有新的修订号，但它需要被标识为不同版本。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</source>
          <target state="translated">在这种情况下，编码的 32 位修订号的上限和下限的 16 位部分中的标识信息。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>Use the <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> property to obtain the entire revision number, use the <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to obtain the high 16 bits, and use the <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> property to obtain the low 16 bits.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph>属性来获取整个修订号，使用<ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>属性以获取高的 16 位，并使用<ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph>属性来获取低 16 位。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.MinorRevision">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and the <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">下面的代码示例演示<ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph>构造函数，与<ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>，和<ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">第一个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">第二个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> objects are equal.</source>
          <target state="translated">确定两个指定的 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象是否相等。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> equals <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> 等于 <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_Equality(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">第一个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">第二个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is greater than the second specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">确定指定的第一个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象是否大于指定的第二个 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="v1" /&gt;</ph>，则为 <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_GreaterThan(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">第一个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">第二个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is greater than or equal to the second specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">确定指定的第一个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象是否大于等于指定的第二个 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> 大于等于 <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">第一个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">第二个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> objects are not equal.</source>
          <target state="translated">确定两个指定的 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象是否不相等。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> does not equal <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> 不等于 <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_Inequality(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">第一个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">第二个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is less than the second specified <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">确定指定的第一个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象是否小于指定的第二个 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> 小于 <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThan(System.Version,System.Version)">
          <source><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">第一个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">第二个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>Determines whether the first specified <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object is less than or equal to the second <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">确定指定的第一个 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象是否小于或等于第二个 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="v1" /&gt;</ph> 小于等于 <ph id="ph3">&lt;paramref name="v2" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
          <source><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="v1" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>A string that contains a version number to convert.</source>
          <target state="translated">包含要转换的版本号的字符串。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>Converts the string representation of a version number to an equivalent <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">将版本号的字符串表示形式转换为等效的 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>An object that is equivalent to the version number specified in the <ph id="ph1">&lt;paramref name="input" /&gt;</ph> parameter.</source>
          <target state="translated">一个等效于 <ph id="ph1">&lt;paramref name="input" /&gt;</ph> 参数中指定的版本号的对象。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The <ph id="ph1">`input`</ph> parameter must have the following format:</source>
          <target state="translated"><ph id="ph1">`input`</ph>参数必须具有以下格式：</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>where <bpt id="p1">*</bpt>major<ept id="p1">*</ept>, <bpt id="p2">*</bpt>minor<ept id="p2">*</ept>, <bpt id="p3">*</bpt>build<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>revision<ept id="p4">*</ept> are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</source>
          <target state="translated">其中<bpt id="p1">*</bpt>主要<ept id="p1">*</ept>，<bpt id="p2">*</bpt>次要<ept id="p2">*</ept>，<bpt id="p3">*</bpt>生成<ept id="p3">*</ept>，和<bpt id="p4">*</bpt>修订<ept id="p4">*</ept>版本的字符串表示形式之间实现数字的四个组件： 主要版本号、 次版本号、 内部版本号和修订号。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>Optional components are shown in square brackets ([ and ]).</source>
          <target state="translated">可选组件显示在方括号 （[和]）。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The components must appear in the specified order, and must be separated by periods.</source>
          <target state="translated">组件必须出现在指定的顺序，但必须用句点分隔。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> method to parse user input.</source>
          <target state="translated">因为可识别的模式必须符合的字符串表示形式的版本号，请在调用时，应用程序应始终使用异常处理<ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph>方法，以便分析用户输入。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>Alternatively, you can call the <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.</source>
          <target state="translated">或者，可以调用<ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph>方法分析的字符串表示形式的版本号，并返回一个值，该值指示是否确保分析操作成功。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> method is a convenience method; it is equivalent to calling the <ph id="ph2">&lt;xref:System.Version.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph>方法是一种简便方法; 它是等效于调用<ph id="ph2">&lt;xref:System.Version.%23ctor%28System.String%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.Parse(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> method to parse a number of strings that contain version information.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph>方法，以便分析包含版本信息的字符串的数量。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> has fewer than two or more than four version components.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 少于两个组件或多于四个版本组件。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>At least one component in <ph id="ph1">&lt;paramref name="input" /&gt;</ph> is less than zero.</source>
          <target state="translated">在 <ph id="ph1">&lt;paramref name="input" /&gt;</ph> 中至少有一个组件小于零。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>At least one component in <ph id="ph1">&lt;paramref name="input" /&gt;</ph> is not an integer.</source>
          <target state="translated">在 <ph id="ph1">&lt;paramref name="input" /&gt;</ph> 中至少有一个组件不是整数。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Version.Parse(System.String)">
          <source>At least one component in <ph id="ph1">&lt;paramref name="input" /&gt;</ph> represents a number that is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 中至少有一个组件表示大于 <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> 的数。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="P:System.Version.Revision">
          <source>Gets the value of the revision component of the version number for the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated">获取当前 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象版本号的修订号部分的值。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>The revision number, or -1 if the revision number is undefined.</source>
          <target state="translated">修订号或为 -1（如果未定义修订号）。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>For example, if the version number is 6.2.1.3, the revision number is 3.</source>
          <target state="translated">例如，如果版本号为 6.2.1.3，修订号为 3。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>If the version number is 6.2, the revision number is undefined.</source>
          <target state="translated">如果版本号为 6.2，未定义修订号。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Version.Revision">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph> constructor, and <ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties.</source>
          <target state="translated">下面的代码示例演示<ph id="ph1">&lt;xref:System.Version.%23ctor%2A&gt;</ph>构造函数，和<ph id="ph2">&lt;xref:System.Version.Major%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Version.Minor%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Version.Build%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Version.Revision%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.Version.MajorRevision%2A&gt;</ph>，和<ph id="ph7">&lt;xref:System.Version.MinorRevision%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="T:System.Version">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to its equivalent <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          <target state="translated">将当前 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象的值转换为其等效的 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> 表示形式。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to its equivalent <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          <target state="translated">将当前 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象的值转换为其等效的 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> 表示形式。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation of the values of the major, minor, build, and revision components of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, as depicted in the following format.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 对象的主要版本号、次要版本号、内部版本号和修订号部分的值的 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 表示形式（遵循下面所示格式）。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>Each component is separated by a period character ('.').</source>
          <target state="translated">各部分之间由句点字符（“.”）分隔。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>Square brackets ('[' and ']') indicate a component that will not appear in the return value if the component is not defined:</source>
          <target state="translated">方括号（“[”和“]”）指示在返回值中不会出现的部分（如果未定义该部分）：</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>major.minor[.build[.revision]]</source>
          <target state="translated">主要版本号.次要版本号[.内部版本号[.修订号]]</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>For example, if you create a <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object using the constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,1)<ept id="p1">&lt;/c&gt;</ept>, the returned string is "1.1".</source>
          <target state="translated">例如，如果使用构造函数 <bpt id="p1">&lt;c&gt;</bpt>Version(1,1)<ept id="p1">&lt;/c&gt;</ept> 创建 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象，则返回的字符串为“1.1”。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Version.ToString">
          <source>If you create a <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object using the constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,4,2)<ept id="p1">&lt;/c&gt;</ept>, the returned string is "1.3.4.2".</source>
          <target state="translated">如果使用构造函数 <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,4,2)<ept id="p1">&lt;/c&gt;</ept> 创建 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象，则返回的字符串为“1.3.4.2”。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The number of components to return.</source>
          <target state="translated">要返回的部分数。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>fieldCount<ept id="p1">&lt;/c&gt;</ept> ranges from 0 to 4.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>fieldCount<ept id="p1">&lt;/c&gt;</ept> 的范围为 0 到 4。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>Converts the value of the current <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object to its equivalent <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> representation.</source>
          <target state="translated">将当前 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象的值转换为其等效的 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> 表示形式。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>A specified count indicates the number of components to return.</source>
          <target state="translated">指定的计数指示要返回的部分数。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation of the values of the major, minor, build, and revision components of the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object, each separated by a period character ('.').</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 对象的主要版本号、次要版本号、内部版本号和修订号部分的值的 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 表示形式，各部分之间用句点字符（“.”）分隔。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> parameter determines how many components are returned.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> 参数确定返回多少个部分。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> fieldCount</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> fieldCount</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 返回值</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> An empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 空字符串 ("")。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 2</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 2</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 3</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 3</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor.build</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor.build</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 4</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 4</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor.build.revision</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> major.minor.build.revision</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>For example, if you create <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object using the constructor <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,5)<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>ToString(2)<ept id="p2">&lt;/c&gt;</ept> returns "1.3" and <bpt id="p3">&lt;c&gt;</bpt>ToString(4)<ept id="p3">&lt;/c&gt;</ept> throws an exception.</source>
          <target state="translated">例如，如果使用构造函数 <bpt id="p1">&lt;c&gt;</bpt>Version(1,3,5)<ept id="p1">&lt;/c&gt;</ept> 创建 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象，则 <bpt id="p2">&lt;c&gt;</bpt>ToString(2)<ept id="p2">&lt;/c&gt;</ept> 返回“1.3”，并且 <bpt id="p3">&lt;c&gt;</bpt>ToString(4)<ept id="p3">&lt;/c&gt;</ept> 引发异常。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> is less than 0, or more than 4.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> 小于 0 或大于 4。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Version.ToString(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> is more than the number of components defined in the current <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fieldCount" /&gt;</ph> 多于在当前 <ph id="ph2">&lt;see cref="T:System.Version" /&gt;</ph> 对象中定义的部分的数量。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>A string that contains a version number to convert.</source>
          <target state="translated">包含要转换的版本号的字符串。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> equivalent of the number that is contained in <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept>, if the conversion succeeded.</source>
          <target state="translated">当此方法返回时，如果转换成功，则包含与 <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept> 中所包含的数字等效的 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, or if the conversion fails, <bpt id="p2">&lt;c&gt;</bpt>result<ept id="p2">&lt;/c&gt;</ept> is <ph id="ph3">&lt;see langword="null" /&gt;</ph> when the method returns.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>input<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>、<ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>或者如果转换失败，则该方法返回时，<bpt id="p2">&lt;c&gt;</bpt>result<ept id="p2">&lt;/c&gt;</ept> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>Tries to convert the string representation of a version number to an equivalent <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> object, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">尝试将版本号的字符串表示形式转换为等效的 <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> 对象，并返回一个指示转换是否成功的值。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="input" /&gt;</ph> parameter was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="input" /&gt;</ph> 参数成功转换，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>The <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> method is similar to the <ph id="ph2">&lt;xref:System.Version.Parse%2A&gt;</ph> method, except that it does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph>方法类似于是<ph id="ph2">&lt;xref:System.Version.Parse%2A&gt;</ph>方法，但它不会引发异常，如果转换失败。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>Instead, it returns <ph id="ph1">`false`</ph> if <ph id="ph2">`input`</ph> is null, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">相反，它将返回<ph id="ph1">`false`</ph>如果<ph id="ph2">`input`</ph>为 null，则具有两个或多个四个组件，不是一个整数的至少一个组件，至少一个组件，小于零，或大于的至少一个组件<ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>For the parse operation to succeed, the <ph id="ph1">`input`</ph> parameter must be in the following format:</source>
          <target state="translated">若要成功执行，确保分析操作<ph id="ph1">`input`</ph>参数必须采用以下格式：</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>where <bpt id="p1">*</bpt>major<ept id="p1">*</ept>, <bpt id="p2">*</bpt>minor<ept id="p2">*</ept>, <bpt id="p3">*</bpt>build<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>revision<ept id="p4">*</ept> are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</source>
          <target state="translated">其中<bpt id="p1">*</bpt>主要<ept id="p1">*</ept>，<bpt id="p2">*</bpt>次要<ept id="p2">*</ept>，<bpt id="p3">*</bpt>生成<ept id="p3">*</ept>，和<bpt id="p4">*</bpt>修订<ept id="p4">*</ept>版本的字符串表示形式之间实现数字的四个组件： 主要版本号、 次版本号、 内部版本号和修订号。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>Optional components are shown in square brackets ([ and ]).</source>
          <target state="translated">可选组件显示在方括号 （[和]）。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>The components must appear in order, and must be separated by periods.</source>
          <target state="translated">组件按顺序，必须出现，并且必须用句点分隔。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Version.TryParse(System.String,System.Version@)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> method to parse a number of strings that contain version information.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph>方法，以便分析包含版本信息的字符串的数量。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>