<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Double.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f0f1768444f65edb3defd809f1ec13aa2d18dc87.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0f1768444f65edb3defd809f1ec13aa2d18dc87</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Double">
          <source>Represents a double-precision floating-point number.</source>
          <target state="translated">表示一个双精度浮点数。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The <ph id="ph1">&lt;xref:System.Double&gt;</ph> value type represents a double-precision 64-bit number with values ranging from negative 1.79769313486232e308 to positive 1.79769313486232e308, as well as positive or negative zero, <ph id="ph2">&lt;xref:System.Double.PositiveInfinity&gt;</ph>, <ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>, and not a number (<ph id="ph4">&lt;xref:System.Double.NaN&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double&gt;</ph>值类型值介于负 1.79769313486232 e 308 到正 1.79769313486232 e 308，以及正或负零，表示一个双精度 64 位数字<ph id="ph2">&lt;xref:System.Double.PositiveInfinity&gt;</ph>， <ph id="ph3">&lt;xref:System.Double.NegativeInfinity&gt;</ph>，并不是数字 (<ph id="ph4">&lt;xref:System.Double.NaN&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>It is intended to represent values that are extremely large (such as distances between planets or galaxies) or extremely small (the molecular mass of a substance in kilograms) and that often are imprecise (such as the distance from earth to another solar system), The <ph id="ph1">&lt;xref:System.Double&gt;</ph> type complies with the IEC 60559:1989 (IEEE 754) standard for binary floating-point arithmetic.</source>
          <target state="translated">它旨在表示，可以非常大 （如行星或星系之间的距离） 或极小 （一种材料千克分子质量） 且通常处于 （如地球到距离另一个太阳系），不精确的值<ph id="ph1">&lt;xref:System.Double&gt;</ph>类型符合 IEC 60559: 1989 (IEEE 754) 二进制浮点算术标准。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>This topic consists of the following sections:</source>
          <target state="translated">本主题包括以下各节：</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><bpt id="p1">[</bpt>Floating-point representation and precision<ept id="p1">](#Precision)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>浮点表示形式和精度<ept id="p1">](#Precision)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><bpt id="p1">[</bpt>Testing for equality<ept id="p1">](#Equality)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>相等性测试<ept id="p1">](#Equality)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><bpt id="p1">[</bpt>Floating-point values and exceptions<ept id="p1">](#Exceptions)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>浮点值和异常<ept id="p1">](#Exceptions)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><bpt id="p1">[</bpt>Type conversions and the Double structure<ept id="p1">](#Conversions)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>类型转换和 Double 结构<ept id="p1">](#Conversions)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><bpt id="p1">[</bpt>Floating-point functionality<ept id="p1">](#Functionality)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>浮点功能<ept id="p1">](#Functionality)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Floating-Point Representation and Precision</source>
          <target state="translated">浮点表示形式和精度</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type stores double-precision floating-point values in a 64-bit binary format, as shown in the following table:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double&gt;</ph>数据类型将双精度浮点值存储在 64 位的二进制格式下, 表中所示：</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Part</source>
          <target state="translated">部件</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Bits</source>
          <target state="translated">位</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Significand or mantissa</source>
          <target state="translated">有效数或尾数</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>0-51</source>
          <target state="translated">0-51</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Exponent</source>
          <target state="translated">指数</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>52-62</source>
          <target state="translated">52-62</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Sign (0 = Positive, 1 = Negative)</source>
          <target state="translated">登录 (0 = 正数、 1 = 负)</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>63</source>
          <target state="translated">63</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Just as decimal fractions are unable to precisely represent some fractional values (such as 1/3 or <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>), binary fractions are unable to represent some fractional values.</source>
          <target state="translated">就像小数部分不能精确表示某些小数部分的值 (如 1/3 或<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>)，二进制分数 （竖式） 不能表示某些小数部分值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>For example, 1/10, which is represented precisely by .1 as a decimal fraction, is represented by .001100110011 as a binary fraction, with the pattern "0011" repeating to infinity.</source>
          <target state="translated">例如，1/10，表示通过以小数值的.1 精确地，由为二进制分数，具有模式"0011"重复向无穷远的.001100110011 表示。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>In this case, the floating-point value provides an imprecise representation of the number that it represents.</source>
          <target state="translated">在这种情况下，浮点值提供一个数字，它表示的不精确表示。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Performing additional mathematical operations on the original floating-point value often tends to increase its lack of precision.</source>
          <target state="translated">通常执行其他数学运算上的原始的浮点值往往会增加其缺乏精度。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>For example, if we compare the result of multiplying .1 by 10 and adding .1 to .1 nine times, we see that addition, because it has involved eight more operations, has produced the less precise result.</source>
          <target state="translated">例如，如果我们比较相乘.1 通过 10 的结果，并添加.1 到.1 9 次，我们看到这种添加，因为它涉及到八个更多操作，请生成不太精确的结果。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Note that this disparity is apparent only if we display the two <ph id="ph1">&lt;xref:System.Double&gt;</ph> values by using the "R" <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, which if necessary displays all 17 digits of precision supported by the <ph id="ph2">&lt;xref:System.Double&gt;</ph> type.</source>
          <target state="translated">请注意，这种不一致是仅当我们显示两个明显<ph id="ph1">&lt;xref:System.Double&gt;</ph>值通过使用"R"<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>，后者如果需要显示所有 17 位精度支持<ph id="ph2">&lt;xref:System.Double&gt;</ph>类型。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Because some numbers cannot be represented exactly as fractional binary values, floating-point numbers can only approximate real numbers.</source>
          <target state="translated">一些数字，不能精确表示为小数部分组成的二进制值，因为浮点数可以只是近似的实际数量。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>All floating-point numbers also have a limited number of significant digits, which also determines how accurately a floating-point value approximates a real number.</source>
          <target state="translated">所有的浮点数还具有有限的数量的有效位数，同时还确定浮点值如何准确地模拟实际数目。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>A <ph id="ph1">&lt;xref:System.Double&gt;</ph> value has up to 15 decimal digits of precision, although a maximum of 17 digits is maintained internally.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Double&gt;</ph>值具有最多 15 个小数位数的精度，尽管它在内部维护最大 17 位。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>This means that some floating-point operations may lack the precision to change a floating point value.</source>
          <target state="translated">这意味着某些浮点运算可能缺少精度若要更改的浮点值。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The following example provides an illustration.</source>
          <target state="translated">下面的示例进行了这方面的演示。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>It defines a very large floating-point value, and then adds the product of <ph id="ph1">&lt;xref:System.Double.Epsilon?displayProperty=nameWithType&gt;</ph> and one quadrillion to it.</source>
          <target state="translated">它定义一个非常大的浮点值，然后将添加的产品<ph id="ph1">&lt;xref:System.Double.Epsilon?displayProperty=nameWithType&gt;</ph>和一个 quadrillion 到它。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The product, however, is too small to modify the original floating-point value.</source>
          <target state="translated">该产品，但是，是太小，无法修改原始的浮点值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Its least significant digit is thousandths, whereas the most significant digit in the product is 1<bpt id="p1">&lt;sup&gt;</bpt>-312<ept id="p1">&lt;/sup&gt;</ept>.</source>
          <target state="translated">其最低有效位数是千分位，而在产品中的最高有效位是 1<bpt id="p1">&lt;sup&gt;</bpt>-312<ept id="p1">&lt;/sup&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The limited precision of a floating-point number has several consequences:</source>
          <target state="translated">有限的精度的浮点数的有几个结果：</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Two floating-point numbers that appear equal for a particular precision might not compare equal because their least significant digits are different.</source>
          <target state="translated">两个似乎相等的特定精度的浮点数可能不相等的因为其最低有效位数不同。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>In the following example, a series of numbers are added together, and their total is compared with their expected total.</source>
          <target state="translated">在下面的示例中，一系列数字加在一起，并具有其预期的总比较其总量。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Although the two values appear to be the same, a call to the <ph id="ph1">`Equals`</ph> method indicates that they are not.</source>
          <target state="translated">尽管两个值看起来相同，调用<ph id="ph1">`Equals`</ph>方法表示它们不是。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>If you change the format items in the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph> statement from <ph id="ph2">`{0}`</ph> and <ph id="ph3">`{1}`</ph> to <ph id="ph4">`{0:R}`</ph> and <ph id="ph5">`{1:R}`</ph> to display all significant digits of the two <ph id="ph6">&lt;xref:System.Double&gt;</ph> values, it is clear that the two values are unequal because of a loss of precision during the addition operations.</source>
          <target state="translated">如果更改中的格式项<ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph>语句从<ph id="ph2">`{0}`</ph>和<ph id="ph3">`{1}`</ph>到<ph id="ph4">`{0:R}`</ph>和<ph id="ph5">`{1:R}`</ph>以显示两个的全部有效数字<ph id="ph6">&lt;xref:System.Double&gt;</ph>很明显的两个值相等的值，因为在添加操作期间的精度的损失。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>In this case, the issue can be resolved by calling the <ph id="ph1">&lt;xref:System.Math.Round%28System.Double%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method to round the <ph id="ph2">&lt;xref:System.Double&gt;</ph> values to the desired precision before performing the comparison.</source>
          <target state="translated">在这种情况下，通过调用来解决此问题<ph id="ph1">&lt;xref:System.Math.Round%28System.Double%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>方法要舍入<ph id="ph2">&lt;xref:System.Double&gt;</ph>到所需精度之前执行比较的值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>A mathematical or comparison operation that uses a floating-point number might not yield the same result if a decimal number is used, because the binary floating-point number might not equal the decimal number.</source>
          <target state="translated">使用浮点数的数学或比较操作可能不生成相同的结果如果使用十进制数，因为二进制浮点数可能不等于的十进制数。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>A previous example illustrated this by displaying the result of multiplying .1 by 10 and adding .1 times.</source>
          <target state="translated">前面的示例所示这显示相乘.1 通过 10 和添加.1 时间的结果。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>When accuracy in numeric operations with fractional values is important, you can use the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> rather than the <ph id="ph2">&lt;xref:System.Double&gt;</ph> type.</source>
          <target state="translated">重要中带小数值的数字运算的准确性时，你可以使用<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>而不是<ph id="ph2">&lt;xref:System.Double&gt;</ph>类型。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>When accuracy in numeric operations with integral values beyond the range of the <ph id="ph1">&lt;xref:System.Int64&gt;</ph> or <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> types is important, use the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> type.</source>
          <target state="translated">当在使用的范围以外的整数值的数值运算中的准确性<ph id="ph1">&lt;xref:System.Int64&gt;</ph>或<ph id="ph2">&lt;xref:System.UInt64&gt;</ph>类型是重要的是，使用<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>类型。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>A value might not round-trip if a floating-point number is involved.</source>
          <target state="translated">一个值可能不往返，如果涉及到浮点数。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>A value is said to round-trip if an operation converts an original floating-point number to another form, an inverse operation transforms the converted form back to a floating-point number, and the final floating-point number is not equal to the original floating-point number.</source>
          <target state="translated">一个值是指保存/还原，如果运算将原始的浮点数转换为另一个窗体、 反向操作可转换回浮点数，转换后的形式并最终的浮点数不等于原始浮点数。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The round trip might fail because one or more least significant digits are lost or changed in a conversion.</source>
          <target state="translated">往返行程可能会失败，因为一个或多个最低有效位数丢失或更改在转换中。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>In the following example, three <ph id="ph1">&lt;xref:System.Double&gt;</ph> values are converted to strings and saved in a file.</source>
          <target state="translated">在下面的示例中，三个<ph id="ph1">&lt;xref:System.Double&gt;</ph>值转换为字符串并保存在文件中。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>As the output shows, however, even though the values appear to be identical, the restored values are not equal to the original values.</source>
          <target state="translated">如输出所示，但是，即使值似乎是相同的则还原的值不等于原始值。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>In this case, the values can be successfully round-tripped by using the "G17" <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> to preserve the full precision of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values, as the following example shows.</source>
          <target state="translated">在这种情况下，这些值可以为成功往返过程通过使用"G17"<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>若要保留完整的精度<ph id="ph1">&lt;xref:System.Double&gt;</ph>值，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>When used with a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value, the "R" format specifier in some cases fails to successfully round-trip the original value.</source>
          <target state="translated">如果用于<ph id="ph1">&lt;xref:System.Double&gt;</ph>失败以成功往返原始值的值，在某些情况下使用"R"格式说明符。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>To ensure that <ph id="ph1">&lt;xref:System.Double&gt;</ph> values successfully round-trip, use the "G17" format specifier.</source>
          <target state="translated">若要确保<ph id="ph1">&lt;xref:System.Double&gt;</ph>值成功往返，使用"G17"格式说明符。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><ph id="ph1">&lt;xref:System.Single&gt;</ph> values have less precision than <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single&gt;</ph> 值具有比精度降低<ph id="ph2">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>A <ph id="ph1">&lt;xref:System.Single&gt;</ph> value that is converted to a seemingly equivalent <ph id="ph2">&lt;xref:System.Double&gt;</ph> often does not equal the <ph id="ph3">&lt;xref:System.Double&gt;</ph> value because of differences in precision.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Single&gt;</ph>值转换为看似等效<ph id="ph2">&lt;xref:System.Double&gt;</ph>通常不等于<ph id="ph3">&lt;xref:System.Double&gt;</ph>由于精度的差异值。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>In the following example, the result of identical division operations is assigned to a <ph id="ph1">&lt;xref:System.Double&gt;</ph> and a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">在下面的示例中，相同的除法运算的结果赋给<ph id="ph1">&lt;xref:System.Double&gt;</ph>和<ph id="ph2">&lt;xref:System.Single&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>After the <ph id="ph1">&lt;xref:System.Single&gt;</ph> value is cast to a <ph id="ph2">&lt;xref:System.Double&gt;</ph>, a comparison of the two values shows that they are unequal.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.Single&gt;</ph>值被强制转换为<ph id="ph2">&lt;xref:System.Double&gt;</ph>，两个值的比较显示，它们不相等。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>To avoid this problem, use either the <ph id="ph1">&lt;xref:System.Double&gt;</ph> in place of the <ph id="ph2">&lt;xref:System.Single&gt;</ph> data type, or use the <ph id="ph3">&lt;xref:System.Math.Round%2A&gt;</ph> method so that both values have the same precision.</source>
          <target state="translated">若要避免此问题，使用<ph id="ph1">&lt;xref:System.Double&gt;</ph>代替了<ph id="ph2">&lt;xref:System.Single&gt;</ph>数据类型或使用<ph id="ph3">&lt;xref:System.Math.Round%2A&gt;</ph>方法，以便这两个值具有相同的精度。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>In addition, the result of arithmetic and assignment operations with <ph id="ph1">&lt;xref:System.Double&gt;</ph> values may differ slightly by platform because of the loss of precision of the <ph id="ph2">&lt;xref:System.Double&gt;</ph> type.</source>
          <target state="translated">此外，算术运算符和赋值操作的结果<ph id="ph1">&lt;xref:System.Double&gt;</ph>值可能略有不同的平台的精度丢失由于<ph id="ph2">&lt;xref:System.Double&gt;</ph>类型。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>For example, the result of assigning a literal <ph id="ph1">&lt;xref:System.Double&gt;</ph> value may differ in the 32-bit and 64-bit versions of the .NET Framework.</source>
          <target state="translated">例如，分配文本的结果<ph id="ph1">&lt;xref:System.Double&gt;</ph>值在.NET Framework 的 32 位和 64 位版本中可能不同。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The following example illustrates this difference when the literal value -4.42330604244772E-305 and a variable whose value is -4.42330604244772E-305 are assigned to a <ph id="ph1">&lt;xref:System.Double&gt;</ph> variable.</source>
          <target state="translated">下面的示例阐释了这一点差异时文字值-4.42330604244772 e-305 和其值为-4.42330604244772 e 变量-305 分配给<ph id="ph1">&lt;xref:System.Double&gt;</ph>变量。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Note that the result of the <ph id="ph1">&lt;xref:System.Double.Parse%28System.String%29&gt;</ph> method in this case does not suffer from a loss of precision.</source>
          <target state="translated">请注意的结果<ph id="ph1">&lt;xref:System.Double.Parse%28System.String%29&gt;</ph>方法在此情况下不会受到精度损失。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Testing for Equality</source>
          <target state="translated">相等性测试</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>To be considered equal, two <ph id="ph1">&lt;xref:System.Double&gt;</ph> values must represent identical values.</source>
          <target state="translated">将被视为相等，两个<ph id="ph1">&lt;xref:System.Double&gt;</ph>值必须表示相同的值。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>However, because of differences in precision between values, or because of a loss of precision by one or both values, floating-point values that are expected to be identical often turn out to be unequal because of differences in their least significant digits.</source>
          <target state="translated">但是，由于的精度值，之间的差异或由于一个或两个值的精度损失，预计通常会相同的浮点值打开要由于其最低有效位的差异不相等。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>As a result, calls to the <ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph> method to determine whether two values are equal, or calls to the <ph id="ph2">&lt;xref:System.Double.CompareTo%2A&gt;</ph> method to determine the relationship between two <ph id="ph3">&lt;xref:System.Double&gt;</ph> values, often yield unexpected results.</source>
          <target state="translated">因此，调用<ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph>方法来确定两个值是否相等或对的调用<ph id="ph2">&lt;xref:System.Double.CompareTo%2A&gt;</ph>方法来确定两个之间的关系<ph id="ph3">&lt;xref:System.Double&gt;</ph>值，通常会产生意外的结果。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>This is evident in the following example, where two apparently equal <ph id="ph1">&lt;xref:System.Double&gt;</ph> values turn out to be unequal because the first has 15 digits of precision, while the second has 17.</source>
          <target state="translated">这是很明显的以下示例中，其中两个显然是等于<ph id="ph1">&lt;xref:System.Double&gt;</ph>值变得不相等，因为需要第一个具有 15 位精度，而第二个具有 17。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Calculated values that follow different code paths and that are manipulated in different ways often prove to be unequal.</source>
          <target state="translated">计算的值，请按照不同的代码路径和的操作的不同的方式通常证明是不相等。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>In the following example, one <ph id="ph1">&lt;xref:System.Double&gt;</ph> value is squared, and then the square root is calculated to restore the original value.</source>
          <target state="translated">在下面的示例中，一个<ph id="ph1">&lt;xref:System.Double&gt;</ph>值平方值，且然后计算平方根还原原始值。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>A second <ph id="ph1">&lt;xref:System.Double&gt;</ph> is multiplied by 3.51 and squared before the square root of the result is divided by 3.51 to restore the original value.</source>
          <target state="translated">第二个<ph id="ph1">&lt;xref:System.Double&gt;</ph>乘以 3.51 和平方值之前的结果的平方根除以 3.51 还原原始值。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Although the two values appear to be identical, a call to the <ph id="ph1">&lt;xref:System.Double.Equals%28System.Double%29&gt;</ph> method indicates that they are not equal.</source>
          <target state="translated">尽管两个值似乎是相同的但调用<ph id="ph1">&lt;xref:System.Double.Equals%28System.Double%29&gt;</ph>方法指示它们是否不相等。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Using the "R" standard format string to return a result string that displays all the significant digits of each Double value shows that the second value is .0000000000001 less than the first.</source>
          <target state="translated">使用"R"标准格式字符串返回显示的每个双精度值的所有有效位的结果字符串显示第二个值是.0000000000001 小于第一个。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>In cases where a loss of precision is likely to affect the result of a comparison, you can adopt any of the following alternatives to calling the <ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.CompareTo%2A&gt;</ph> method:</source>
          <target state="translated">在其中发生精度损失是可能会影响比较的结果的情况下，您可以采用以下备选方案于调用的任何<ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.CompareTo%2A&gt;</ph>方法：</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Call the <ph id="ph1">&lt;xref:System.Math.Round%2A?displayProperty=nameWithType&gt;</ph> method to ensure that both values have the same precision.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Math.Round%2A?displayProperty=nameWithType&gt;</ph>方法，以确保这两个值具有相同的精度。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The following example modifies a previous example to use this approach so that two fractional values are equivalent.</source>
          <target state="translated">下面的示例修改了前面的示例以使用此方法，以便两个小数部分的值相等。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Note, though, that the problem of precision still applies to rounding of midpoint values.</source>
          <target state="translated">但请注意，精度问题，仍适用于的中点值舍入。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">有关更多信息，请参见 <ph id="ph1">&lt;xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29?displayProperty=nameWithType&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Test for approximate equality rather than equality.</source>
          <target state="translated">大致相等性测试而不是相等。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>This requires that you define either an absolute amount by which the two values can differ but still be equal, or that you define a relative amount by which the smaller value can diverge from the larger value.</source>
          <target state="translated">这要求你定义任一绝对量所依据的两个值可以与不同，但仍要相等，或你定义所依据的较小值可以分离从更大的值相对量。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><ph id="ph1">&lt;xref:System.Double.Epsilon?displayProperty=nameWithType&gt;</ph> is sometimes used as an absolute measure of the distance between two <ph id="ph2">&lt;xref:System.Double&gt;</ph> values when testing for equality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.Epsilon?displayProperty=nameWithType&gt;</ph> 有时使用作为两个之间的距离的绝对度量<ph id="ph2">&lt;xref:System.Double&gt;</ph>值时测试是否相等。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>However, <ph id="ph1">&lt;xref:System.Double.Epsilon?displayProperty=nameWithType&gt;</ph> measures the smallest possible value that can be added to, or subtracted from, a <ph id="ph2">&lt;xref:System.Double&gt;</ph> whose value is zero.</source>
          <target state="translated">但是，<ph id="ph1">&lt;xref:System.Double.Epsilon?displayProperty=nameWithType&gt;</ph>测量的最小可能值，可以添加到，或相减，<ph id="ph2">&lt;xref:System.Double&gt;</ph>其值为零。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>For most positive and negative <ph id="ph1">&lt;xref:System.Double&gt;</ph> values, the value of <ph id="ph2">&lt;xref:System.Double.Epsilon?displayProperty=nameWithType&gt;</ph> is too small to be detected.</source>
          <target state="translated">对于大多数正和负<ph id="ph1">&lt;xref:System.Double&gt;</ph>值、 的值<ph id="ph2">&lt;xref:System.Double.Epsilon?displayProperty=nameWithType&gt;</ph>太小以致无法检测到。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Therefore, except for values that are zero, we do not recommend its use in tests for equality.</source>
          <target state="translated">因此，除了均为零的值，不建议在相等的测试中使用它。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The following example uses the latter approach to define an <ph id="ph1">`IsApproximatelyEqual`</ph> method that tests the relative difference between two values.</source>
          <target state="translated">下面的示例使用后一种方法来定义<ph id="ph1">`IsApproximatelyEqual`</ph>测试两个值之间的相对差异的方法。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>It also contrasts the result of calls to the <ph id="ph1">`IsApproximatelyEqual`</ph> method and the <ph id="ph2">&lt;xref:System.Double.Equals%28System.Double%29&gt;</ph> method.</source>
          <target state="translated">它还将对的调用的结果进行比较<ph id="ph1">`IsApproximatelyEqual`</ph>方法和<ph id="ph2">&lt;xref:System.Double.Equals%28System.Double%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Floating-Point Values and Exceptions</source>
          <target state="translated">浮点值和异常</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Unlike operations with integral types, which throw exceptions in cases of overflow or illegal operations such as division by zero, operations with floating-point values do not throw exceptions.</source>
          <target state="translated">与整数类型，会被零中的溢出或非法操作，如除法的情况下引发异常，操作不同具有浮点值的操作不会引发异常。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Instead, in exceptional situations, the result of a floating-point operation is zero, positive infinity, negative infinity, or not a number (NaN):</source>
          <target state="translated">相反，在异常的情况下，浮点运算的结果为零、 正无穷大、 负无穷大或非数值 (NaN):</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>If the result of a floating-point operation is too small for the destination format, the result is zero.</source>
          <target state="translated">如果浮点运算的结果太小，目标格式，则结果为零。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>This can occur when two very small numbers are multiplied, as the following example shows.</source>
          <target state="translated">这会非常小的两个数字相乘，如以下示例所示时发生。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>If the magnitude of the result of a floating-point operation exceeds the range of the destination format, the result of the operation is <ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity&gt;</ph>, as appropriate for the sign of the result.</source>
          <target state="translated">如果浮点运算的结果的大小超出目标格式的范围，该操作的结果是<ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.NegativeInfinity&gt;</ph>以适合结果的符号。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The result of an operation that overflows <ph id="ph1">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> is <ph id="ph2">&lt;xref:System.Double.PositiveInfinity&gt;</ph>, and the result of an operation that overflows <ph id="ph3">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph> is <ph id="ph4">&lt;xref:System.Double.NegativeInfinity&gt;</ph>, as the following example shows.</source>
          <target state="translated">溢出操作的结果<ph id="ph1">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>是<ph id="ph2">&lt;xref:System.Double.PositiveInfinity&gt;</ph>，和溢出操作的结果<ph id="ph3">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph>是<ph id="ph4">&lt;xref:System.Double.NegativeInfinity&gt;</ph>，如下面的示例所示。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph> also results from a division by zero with a positive dividend, and <ph id="ph2">&lt;xref:System.Double.NegativeInfinity&gt;</ph> results from a division by zero with a negative dividend.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph> 也通过零正被除数，可能会造成一个除法运算和<ph id="ph2">&lt;xref:System.Double.NegativeInfinity&gt;</ph>负被除数的零的除法运算的结果。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>If a floating-point operation is invalid, the result of the operation is <ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>.</source>
          <target state="translated">如果浮点运算无效，该操作的结果是<ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>For example, <ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph> results from the following operations:</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>结果从以下操作：</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Division by zero with a dividend of zero.</source>
          <target state="translated">被零除与被除数为零。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Note that other cases of division by zero result in either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated">注意除法运算的其他情况下由零个结果中任意一种<ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.NegativeInfinity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Any floating-point operation with an invalid input.</source>
          <target state="translated">通过无效输入任何浮点运算。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>For example, calling the <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph> method with a negative value returns <ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph>, as does calling the <ph id="ph3">&lt;xref:System.Math.Acos%2A?displayProperty=nameWithType&gt;</ph> method with a value that is greater than one or less than negative one.</source>
          <target state="translated">例如，调用<ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>一个含有负值的方法返回<ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph>、 一样调用<ph id="ph3">&lt;xref:System.Math.Acos%2A?displayProperty=nameWithType&gt;</ph>具有值大于 1 或更少负一方法。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Any operation with an argument whose value is <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">其值的参数与任何操作<ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Type conversions and the Double structure</source>
          <target state="translated">类型转换和 Double 结构</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The <ph id="ph1">&lt;xref:System.Double&gt;</ph> structure does not define any explicit or implicit conversion operators; instead, conversions are implemented by the compiler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double&gt;</ph>结构未定义任何显式或隐式转换运算符; 相反，由编译器实现转换。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The conversion of the value of any primitive numeric type to a <ph id="ph1">&lt;xref:System.Double&gt;</ph> is a widening conversion and therefore does not require an explicit cast operator or call to a conversion method unless a compiler explicitly requires it.</source>
          <target state="translated">转换到任何基元数值类型的值<ph id="ph1">&lt;xref:System.Double&gt;</ph>扩大转换并因此不需要显式强制转换运算符，也没有除非编译器显式要求调用转换方法。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>For example, the C# compiler requires a casting operator for conversions from <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph2">&lt;xref:System.Double&gt;</ph>, while the Visual Basic compiler does not.</source>
          <target state="translated">例如，C# 编译器需要强制转换运算符的转换从<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>到<ph id="ph2">&lt;xref:System.Double&gt;</ph>，而 Visual Basic 编译器不。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The following example converts the minimum or maximum value of other primitive numeric types to a <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">以下示例将转换到其他基元数值类型的最小值或最大值<ph id="ph1">&lt;xref:System.Double&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Single&gt;</ph> values <ph id="ph2">&lt;xref:System.Single.NaN?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph> covert to <ph id="ph5">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, and <ph id="ph7">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, respectively.</source>
          <target state="translated">此外，<ph id="ph1">&lt;xref:System.Single&gt;</ph>值<ph id="ph2">&lt;xref:System.Single.NaN?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>，和<ph id="ph4">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>隐蔽到<ph id="ph5">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>， <ph id="ph6">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>，和<ph id="ph7">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>分别。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Note that the conversion of the value of some numeric types to a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value can involve a loss of precision.</source>
          <target state="translated">请注意，转换到某些数值类型的值<ph id="ph1">&lt;xref:System.Double&gt;</ph>值可能涉及精度损失。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>As the example illustrates, a loss of precision is possible when converting <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph2">&lt;xref:System.Int64&gt;</ph>, <ph id="ph3">&lt;xref:System.Single&gt;</ph>, and <ph id="ph4">&lt;xref:System.UInt64&gt;</ph> values to <ph id="ph5">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">如示例所示，转换时，是可能发生精度损失<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>， <ph id="ph2">&lt;xref:System.Int64&gt;</ph>， <ph id="ph3">&lt;xref:System.Single&gt;</ph>，和<ph id="ph4">&lt;xref:System.UInt64&gt;</ph>值复制到<ph id="ph5">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value to a value of any other primitive numeric data type is a narrowing conversion and requires a cast operator (in C#), a conversion method (in Visual Basic), or a call to a <ph id="ph2">&lt;xref:System.Convert&gt;</ph> method.</source>
          <target state="translated">转换<ph id="ph1">&lt;xref:System.Double&gt;</ph>值转换为其他任何基元数值数据类型的值都是收缩转换并不需要转换运算符 （在 C# 中)、 转换方法 （在 Visual Basic 中) 或调用<ph id="ph2">&lt;xref:System.Convert&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Values that are outside the range of the target data type, which are defined by the target type's <ph id="ph1">`MinValue`</ph> and <ph id="ph2">`MaxValue`</ph> properties, behave as shown in the following table.</source>
          <target state="translated">范围外的目标数据类型，这由目标类型定义的值<ph id="ph1">`MinValue`</ph>和<ph id="ph2">`MaxValue`</ph>属性下, 表中所示的行为。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Target type</source>
          <target state="translated">目标类型</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Result</source>
          <target state="translated">结果</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Any integral type</source>
          <target state="translated">任何整数类型</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>An <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception if the conversion occurs in a checked context.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>异常，则转换发生在检查的上下文。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>If the conversion occurs in an unchecked context (the default in C#), the conversion operation succeeds but the value overflows.</source>
          <target state="translated">如果转换发生在 unchecked 上下文 （C# 中默认值），转换操作成功，但值溢出。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>An <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">一个 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 异常。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><ph id="ph1">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph> for negative values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph> 负值。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><ph id="ph1">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph> for positive values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph> 对于正值。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>In addition, <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph> throw an <ph id="ph4">&lt;xref:System.OverflowException&gt;</ph> for conversions to integers in a checked context, but these values overflow when converted to integers in an unchecked context.</source>
          <target state="translated">此外， <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>， <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>，和<ph id="ph3">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>引发<ph id="ph4">&lt;xref:System.OverflowException&gt;</ph>转换为在 checked 的上下文中，但这些值溢出时转换为未选中的上下文内的整数的整数。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>For conversions to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>, they always throw an <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">转换到<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>，它们总是引发<ph id="ph2">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>For conversions to <ph id="ph1">&lt;xref:System.Single&gt;</ph>, they convert to <ph id="ph2">&lt;xref:System.Single.NaN?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, respectively.</source>
          <target state="translated">转换到<ph id="ph1">&lt;xref:System.Single&gt;</ph>，它们转换为<ph id="ph2">&lt;xref:System.Single.NaN?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>，和<ph id="ph4">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>分别。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Note that a loss of precision may result from converting a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value to another numeric type.</source>
          <target state="translated">请注意，精度损失可能造成从转换<ph id="ph1">&lt;xref:System.Double&gt;</ph>到另一种数值类型的值。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>In the case of converting non-integral <ph id="ph1">&lt;xref:System.Double&gt;</ph> values, as the output from the example shows, the fractional component is lost when the <ph id="ph2">&lt;xref:System.Double&gt;</ph> value is either rounded (as in Visual Basic) or truncated (as in C#).</source>
          <target state="translated">在将非整型的转换的情况下<ph id="ph1">&lt;xref:System.Double&gt;</ph>值，如示例输出所示，小数部分时丢失<ph id="ph2">&lt;xref:System.Double&gt;</ph>值舍入 （如 Visual Basic 中)，或者截断 （如 C# 中)。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>For conversions to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> and <ph id="ph2">&lt;xref:System.Single&gt;</ph> values, the <ph id="ph3">&lt;xref:System.Double&gt;</ph> value may not have a precise representation in the target data type.</source>
          <target state="translated">转换到<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>和<ph id="ph2">&lt;xref:System.Single&gt;</ph>值，<ph id="ph3">&lt;xref:System.Double&gt;</ph>值中的目标数据类型不能有精确的表示形式。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The following example converts a number of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to several other numeric types.</source>
          <target state="translated">以下示例将转换的数字<ph id="ph1">&lt;xref:System.Double&gt;</ph>到几个其他数值类型的值。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The conversions occur in a checked context in Visual Basic (the default) and in C# (because of the <bpt id="p1">[</bpt>checked<ept id="p1">](~/docs/csharp/language-reference/keywords/checked.md)</ept> keyword).</source>
          <target state="translated">转换发生在 checked 上下文中在 Visual Basic （默认值） 和 C# 中 (由于<bpt id="p1">[</bpt>检查<ept id="p1">](~/docs/csharp/language-reference/keywords/checked.md)</ept>关键字)。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The output from the example shows the result for conversions in both a checked an unchecked context.</source>
          <target state="translated">示例输出显示转换的结果中这两个检查未选中的上下文。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>You can perform conversions in an unchecked context in Visual Basic by compiling with the <ph id="ph1">`/removeintchecks+`</ph> compiler switch and in C# by commenting out the <ph id="ph2">`checked`</ph> statement.</source>
          <target state="translated">可以在 Visual Basic 中未选中的上下文中执行转换，通过使用编译<ph id="ph1">`/removeintchecks+`</ph>编译器开关和 C# 通过注释掉<ph id="ph2">`checked`</ph>语句。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>For more information on the conversion of numeric types, see <bpt id="p1">[</bpt>Type Conversion in the .NET Framework<ept id="p1">](~/docs/standard/base-types/type-conversion.md)</ept> and <bpt id="p2">[</bpt>Type Conversion Tables<ept id="p2">](~/docs/standard/base-types/conversion-tables.md)</ept>.</source>
          <target state="translated">数值类型的转换的详细信息，请参阅<bpt id="p1">[</bpt>.NET Framework 中的类型转换<ept id="p1">](~/docs/standard/base-types/type-conversion.md)</ept>和<bpt id="p2">[</bpt>类型转换表<ept id="p2">](~/docs/standard/base-types/conversion-tables.md)</ept>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Floating-Point Functionality</source>
          <target state="translated">浮点功能</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The <ph id="ph1">&lt;xref:System.Double&gt;</ph> structure and related types provide methods to perform operations in the following areas:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double&gt;</ph>结构和相关的类型提供以下区域中执行操作的方法：</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><bpt id="p1">**</bpt>Comparison of values<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>值比较<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>You can call the <ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph> method to determine whether two <ph id="ph2">&lt;xref:System.Double&gt;</ph> values are equal, or the <ph id="ph3">&lt;xref:System.Double.CompareTo%2A&gt;</ph> method to determine the relationship between two values.</source>
          <target state="translated">你可以调用<ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph>方法来确定是否两个<ph id="ph2">&lt;xref:System.Double&gt;</ph>值是否相等，则<ph id="ph3">&lt;xref:System.Double.CompareTo%2A&gt;</ph>方法来确定两个值之间的关系。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The <ph id="ph1">&lt;xref:System.Double&gt;</ph> structure also supports a complete set of comparison operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double&gt;</ph>结构还支持一组完整的比较运算符。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>For example, you can test for equality or inequality, or determine whether one value is greater than or equal to another.</source>
          <target state="translated">例如，你可以测试相等，或确定一个值是否大于或等于另一个。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>If one of the operands is a numeric type other than a <ph id="ph1">&lt;xref:System.Double&gt;</ph>, it is converted to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> before performing the comparison.</source>
          <target state="translated">如果其中一个操作数是数值类型，而不<ph id="ph1">&lt;xref:System.Double&gt;</ph>，它将转换为<ph id="ph2">&lt;xref:System.Double&gt;</ph>之前执行比较。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Because of differences in precision, two <ph id="ph1">&lt;xref:System.Double&gt;</ph> values that you expect to be equal may turn out to be unequal, which affects the result of the comparison.</source>
          <target state="translated">由于的精度，差异两个<ph id="ph1">&lt;xref:System.Double&gt;</ph>应相等的值可能会发现不相等，这会影响比较的结果。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>See the <bpt id="p1">[</bpt>Testing for Equality<ept id="p1">](#Equality)</ept> section for more information about comparing two <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>相等性测试<ept id="p1">](#Equality)</ept>比较两个有关详细信息的部分<ph id="ph1">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>You can also call the <ph id="ph1">&lt;xref:System.Double.IsNaN%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.IsInfinity%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Double.IsPositiveInfinity%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Double.IsNegativeInfinity%2A&gt;</ph> methods to test for these special values.</source>
          <target state="translated">你还可以调用<ph id="ph1">&lt;xref:System.Double.IsNaN%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Double.IsInfinity%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Double.IsPositiveInfinity%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Double.IsNegativeInfinity%2A&gt;</ph>方法来测试这些特殊值。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><bpt id="p1">**</bpt>Mathematical operations<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>数学运算<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Common arithmetic operations, such as addition, subtraction, multiplication, and division, are implemented by language compilers and Common Intermediate Language (CIL) instructions, rather than by <ph id="ph1">&lt;xref:System.Double&gt;</ph> methods.</source>
          <target state="translated">按语言编译器和公共中间语言 (CIL) 的说明，而不是实现常见的算术运算，例如加法、 减法、 乘法和除法，<ph id="ph1">&lt;xref:System.Double&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>If one of the operands in a mathematical operation is a numeric type other than a <ph id="ph1">&lt;xref:System.Double&gt;</ph>, it is converted to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> before performing the operation.</source>
          <target state="translated">如果一个中的数学运算的操作数是数值类型，而不<ph id="ph1">&lt;xref:System.Double&gt;</ph>，它将转换为<ph id="ph2">&lt;xref:System.Double&gt;</ph>之前执行该操作。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The result of the operation is also a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">操作的结果也是<ph id="ph1">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Other mathematical operations can be performed by calling <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) methods in the <ph id="ph3">&lt;xref:System.Math?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">可以通过调用执行其他数学运算<ph id="ph1">`static`</ph>(<ph id="ph2">`Shared`</ph>在 Visual Basic 中) 中的方法<ph id="ph3">&lt;xref:System.Math?displayProperty=nameWithType&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>It includes additional methods commonly used for arithmetic (such as <ph id="ph1">&lt;xref:System.Math.Abs%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Math.Sign%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>), geometry (such as <ph id="ph4">&lt;xref:System.Math.Cos%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph5">&lt;xref:System.Math.Sin%2A?displayProperty=nameWithType&gt;</ph>), and calculus (such as <ph id="ph6">&lt;xref:System.Math.Log%2A?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">它包括常用于算术的其他方法 (如<ph id="ph1">&lt;xref:System.Math.Abs%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph2">&lt;xref:System.Math.Sign%2A?displayProperty=nameWithType&gt;</ph>，和<ph id="ph3">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>)，geometry (如<ph id="ph4">&lt;xref:System.Math.Cos%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph5">&lt;xref:System.Math.Sin%2A?displayProperty=nameWithType&gt;</ph>)，和微积分 (如<ph id="ph6">&lt;xref:System.Math.Log%2A?displayProperty=nameWithType&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>You can also manipulate the individual bits in a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">您还可以操作中的单个位<ph id="ph1">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType&gt;</ph> method preserves a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value's bit pattern in a 64-bit integer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType&gt;</ph>方法保留<ph id="ph2">&lt;xref:System.Double&gt;</ph>值的位模式在 64 位整数。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Double%29?displayProperty=nameWithType&gt;</ph> method returns its bit pattern in a byte array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Double%29?displayProperty=nameWithType&gt;</ph>方法返回其位模式中的字节数组。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><bpt id="p1">**</bpt>Rounding<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>舍入<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Rounding is often used as a technique for reducing the impact of differences between values caused by problems of floating-point representation and precision.</source>
          <target state="translated">舍入通常用作一种技术来减少引起问题的浮点表示形式和精度值之间的差异的影响。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>You can round a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value by calling the <ph id="ph2">&lt;xref:System.Math.Round%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">您可以舍入<ph id="ph1">&lt;xref:System.Double&gt;</ph>值通过调用<ph id="ph2">&lt;xref:System.Math.Round%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><bpt id="p1">**</bpt>Formatting<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>格式设置<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>You can convert a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value to its string representation by calling the <ph id="ph2">&lt;xref:System.Double.ToString%2A&gt;</ph> method or by using the composite formatting feature.</source>
          <target state="translated">你可以将转换<ph id="ph1">&lt;xref:System.Double&gt;</ph>为通过调用其字符串表示形式的值<ph id="ph2">&lt;xref:System.Double.ToString%2A&gt;</ph>方法或通过使用复合格式设置功能。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>For information about how format strings control the string representation of floating-point values, see the <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept> topics.</source>
          <target state="translated">有关如何格式字符串控制浮点值的字符串表示的信息，请参阅<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自定义数字格式字符串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>主题。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><bpt id="p1">**</bpt>Parsing strings<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>分析字符串<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>You can convert the string representation of a floating-point value to a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value by calling either the <ph id="ph2">&lt;xref:System.Double.Parse%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Double.TryParse%2A&gt;</ph> method.</source>
          <target state="translated">你可以将转换为浮点值的字符串表示<ph id="ph1">&lt;xref:System.Double&gt;</ph>值通过调用<ph id="ph2">&lt;xref:System.Double.Parse%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Double.TryParse%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>If the parse operation fails, the <ph id="ph1">&lt;xref:System.Double.Parse%2A&gt;</ph> method throws an exception, whereas the <ph id="ph2">&lt;xref:System.Double.TryParse%2A&gt;</ph> method returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果分析操作失败，<ph id="ph1">&lt;xref:System.Double.Parse%2A&gt;</ph>方法引发异常，而<ph id="ph2">&lt;xref:System.Double.TryParse%2A&gt;</ph>方法返回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source><bpt id="p1">**</bpt>Type conversion<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>类型转换<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The <ph id="ph1">&lt;xref:System.Double&gt;</ph> structure provides an explicit interface implementation for the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface, which supports conversion between any two standard .NET Framework data types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double&gt;</ph>结构可提供的显式接口实现<ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>接口，支持任何两个的标准.NET Framework 数据类型之间的转换。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Language compilers also support the implicit conversion of values of all other standard numeric types to <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">语言编译器还支持的所有其他标准数值类型为值的隐式转换<ph id="ph1">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Conversion of a value of any standard numeric type to a <ph id="ph1">&lt;xref:System.Double&gt;</ph> is a widening conversion and does not require the user of a casting operator or conversion method,</source>
          <target state="translated">到任何标准数值类型的值转换<ph id="ph1">&lt;xref:System.Double&gt;</ph>的扩大转换和不需要的强制转换运算符或转换方法，用户</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>However, conversion of <ph id="ph1">&lt;xref:System.Int64&gt;</ph> and <ph id="ph2">&lt;xref:System.Single&gt;</ph> values can involve a loss of precision.</source>
          <target state="translated">但是，转换<ph id="ph1">&lt;xref:System.Int64&gt;</ph>和<ph id="ph2">&lt;xref:System.Single&gt;</ph>值可能涉及精度损失。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The following table lists the differences in precision for each of these types:</source>
          <target state="translated">下表列出了有关上述每种类型的精度的差异：</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Type</source>
          <target state="translated">类型</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Maximum precision</source>
          <target state="translated">最大精度</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Internal precision</source>
          <target state="translated">内部精度</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>15</source>
          <target state="translated">15</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>17</source>
          <target state="translated">17</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>19 decimal digits</source>
          <target state="translated">19 的十进制数字</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>19 decimal digits</source>
          <target state="translated">19 的十进制数字</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>7 decimal digits</source>
          <target state="translated">7 个小数位</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>9 decimal digits</source>
          <target state="translated">9 的十进制数字</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The problem of precision most frequently affects <ph id="ph1">&lt;xref:System.Single&gt;</ph> values that are converted to <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">精度问题最常影响<ph id="ph1">&lt;xref:System.Single&gt;</ph>值转换为<ph id="ph2">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>In the following example, two values produced by identical division operations are unequal because one of the values is a single-precision floating point value converted to a <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">在下面的示例中，由相同的除法运算的两个值是否不相等的值之一是单精度浮点值转换为<ph id="ph1">&lt;xref:System.Double&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Double&gt;</ph>:</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Double&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>All members of this type are thread safe.</source>
          <target state="translated">此类型的所有成员都是线程安全。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>Members that appear to modify instance state actually return a new instance initialized with the new value.</source>
          <target state="translated">实际上，看起来要修改实例状态的成员返回使用新值初始化的新实例。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Double">
          <source>As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</source>
          <target state="translated">作为与任何其他类型，读取和写入到共享的变量，其中包含此类型的实例必须受使用锁来确保的线程安全性。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="T:System.Double">
          <source>Compares this instance to a specified object or <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object or <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> object.</source>
          <target state="translated">将此实例与指定的对象或 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 对象进行比较，并返回一个整数，该整数指示此实例的值是小于、等于还是大于指定对象或 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 对象的值。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source>A double-precision floating-point number to compare.</source>
          <target state="translated">要比较的双精度浮点数。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source>Compares this instance to a specified double-precision floating-point number and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified double-precision floating-point number.</source>
          <target state="translated">将此实例与指定的双精度浮点数进行比较，并返回一个整数，该整数指示此实例的值是小于、等于还是大于指定双精度浮点数的值。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source>A signed number indicating the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">一个带符号数字，指示此实例和 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的相对值。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 返回值</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 小于零</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例小于 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source>This instance is not a number (<ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph>) and <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is a number.</source>
          <target state="translated">此实例不是数字 (<ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph>) 而 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 是数字。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例等于 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source>Both this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> are not a number (<ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>), <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated">此实例和 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 都不是数字 (<ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>)、<ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大于零</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例大于 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Double)">
          <source>This instance is a number and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a number (<ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>).</source>
          <target state="translated">此实例是数字而 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 不是数字 (<ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>Values must be identical to be considered equal.</source>
          <target state="translated">值必须完全相同，将被视为相等。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>Particularly when floating-point values depend on multiple mathematical operations, it is common for them to lose precision and for their values to be nearly identical except for their least significant digits.</source>
          <target state="translated">尤其是当浮点值依赖于多个数学运算，它是一种常见的他们丢失精度输入其值是除其最低有效位数几乎完全相同。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>Because of this, the return value of the <ph id="ph1">&lt;xref:System.Double.CompareTo%2A&gt;</ph> method at times may seem surprising.</source>
          <target state="translated">因此，返回值的<ph id="ph1">&lt;xref:System.Double.CompareTo%2A&gt;</ph>方法有时看上去可能令人惊讶。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>For example, multiplication by a particular value followed by division by the same value should produce the original value.</source>
          <target state="translated">例如，通过同样的值跟除法的特定值的乘法应生成原始值。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>In the following example, however, the computed value turns out to be greater than the original value.</source>
          <target state="translated">在下面的示例中，但是，计算的值被证明大于原始值。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>Showing all significant digits of the two values by using the "R" <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> indicates that the computed value differs from the original value in its least significant digits.</source>
          <target state="translated">通过使用"R"显示两个值的所有有效位数<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>指示该计算的值不同于其最低有效位数中的原始值。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>For information on handling such comparisons, see the Remarks section of the <ph id="ph1">&lt;xref:System.Double.Equals%28System.Double%29&gt;</ph> method.</source>
          <target state="translated">有关处理这种比较的信息，请参阅的备注部分<ph id="ph1">&lt;xref:System.Double.Equals%28System.Double%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface and performs slightly better than the <ph id="ph2">&lt;xref:System.Double.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method because it does not have to convert the <ph id="ph3">`value`</ph> parameter to an object.</source>
          <target state="translated">此方法实现<ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>接口，并且执行效果略好于<ph id="ph2">&lt;xref:System.Double.CompareTo%2A?displayProperty=nameWithType&gt;</ph>方法因为它不具有要转换<ph id="ph3">`value`</ph>对对象的参数。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>Note that, although an object whose value is <ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph> is not considered equal to another object whose value is <ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph> (even itself), the <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> interface requires that <ph id="ph4">`A.CompareTo(A)`</ph> return zero.</source>
          <target state="translated">请注意，虽然一个对象，其值是<ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>不被视为等于另一个对象，其值是<ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph>（即使是其自身），<ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph>接口也要求<ph id="ph4">`A.CompareTo(A)`</ph>返回零。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>Widening Conversions</source>
          <target state="translated">扩大转换</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>Depending on your programming language, it might be possible to code a <ph id="ph1">&lt;xref:System.Double.CompareTo%2A&gt;</ph> method where the parameter type has fewer bits (is narrower) than the instance type.</source>
          <target state="translated">具体取决于您的编程语言，它可能会对代码<ph id="ph1">&lt;xref:System.Double.CompareTo%2A&gt;</ph>其中的参数类型具有较少的位的方法 （为较窄） 比实例类型。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</source>
          <target state="translated">这可能是因为某些编程语言中执行的隐式的扩大转换，它表示具有任意数量的位的实例作为类型参数。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Double&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">例如，假设实例类型是<ph id="ph1">&lt;xref:System.Double&gt;</ph>和参数类型是<ph id="ph2">&lt;xref:System.Int32&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>The Microsoft C# compiler generates instructions to represent the value of the parameter as a <ph id="ph1">&lt;xref:System.Double&gt;</ph> object, then generates a <ph id="ph2">&lt;xref:System.Double.CompareTo%28System.Double%29?displayProperty=nameWithType&gt;</ph> method that compares the values of the instance and the widened representation of the parameter.</source>
          <target state="translated">Microsoft C# 编译器生成的指令来表示形式的参数值<ph id="ph1">&lt;xref:System.Double&gt;</ph>对象，然后生成<ph id="ph2">&lt;xref:System.Double.CompareTo%28System.Double%29?displayProperty=nameWithType&gt;</ph>比较实例的值和参数的扩大的表示的方法。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>Consult your programming language's documentation to determine if its compiler performs implicit widening conversions of numeric types.</source>
          <target state="translated">咨询你的编程语言的文档，以确定其编译器是否执行数值类型的隐式扩大转换。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>For more information, see the <bpt id="p1">[</bpt>Type Conversion Tables<ept id="p1">](~/docs/standard/base-types/conversion-tables.md)</ept> topic.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>类型转换表<ept id="p1">](~/docs/standard/base-types/conversion-tables.md)</ept>主题。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>Precision in Comparisons</source>
          <target state="translated">在比较中的精度</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</source>
          <target state="translated">超出有案可稽的精度的浮点数的精度是特定于实现和.NET Framework 版本。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</source>
          <target state="translated">因此，两个特定的数字的比较可能会更改.NET Framework 各版本之间因为精度的数字的内部表示形式可能会更改。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Double)">
          <source>The following code example demonstrates generic and nongeneric versions of the <ph id="ph1">&lt;xref:System.Double.CompareTo%2A&gt;</ph> method for several value and reference types.</source>
          <target state="translated">下面的代码示例演示泛型和非泛型版本的<ph id="ph1">&lt;xref:System.Double.CompareTo%2A&gt;</ph>多个值和引用类型的方法。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source>An object to compare, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">要比较的对象，或为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</source>
          <target state="translated">将此实例与指定对象进行比较，并返回一个整数，该整数指示此实例的值是小于、等于还是大于指定对象的值。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source>A signed number indicating the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">一个带符号数字，指示此实例和 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的相对值。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 值</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 负整数</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例小于 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source>This instance is not a number (<ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph>) and <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is a number.</source>
          <target state="translated">此实例不是数字 (<ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph>) 而 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 是数字。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例等于 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source>This instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> are both <ph id="ph2">&lt;see langword="Double.NaN" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph><ph id="ph5">&lt;/description&gt;</ph><ph id="ph6">&lt;/item&gt;</ph><ph id="ph7">&lt;item&gt;</ph><ph id="ph8">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated">此实例和 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 都是 <ph id="ph2">&lt;see langword="Double.NaN" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph><ph id="ph5">&lt;/description&gt;</ph><ph id="ph6">&lt;/item&gt;</ph><ph id="ph7">&lt;item&gt;</ph><ph id="ph8">&lt;term&gt;</ph>负整数</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例大于 <ph id="ph3">&lt;paramref name="value" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source>This instance is a number and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a number (<ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>).</source>
          <target state="translated">此实例是数字而 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 不是数字 (<ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter must be <ph id="ph2">`null`</ph> or an instance of <ph id="ph3">`Double`</ph>; otherwise, an exception is thrown.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数必须是<ph id="ph2">`null`</ph>或实例<ph id="ph3">`Double`</ph>; 否则为将引发异常。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>Any instance of <ph id="ph1">&lt;xref:System.Double&gt;</ph>, regardless of its value, is considered greater than <ph id="ph2">`null`</ph>.</source>
          <target state="translated">任何实例<ph id="ph1">&lt;xref:System.Double&gt;</ph>，无论其值被视为大于<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>Values must be identical to be considered equal.</source>
          <target state="translated">值必须完全相同，将被视为相等。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>Particularly when floating-point values depend on multiple mathematical operations, it is common for them to lose precision and for their values to be nearly identical except for their least significant digits.</source>
          <target state="translated">尤其是当浮点值依赖于多个数学运算，它是一种常见的他们丢失精度输入其值是除其最低有效位数几乎完全相同。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>Because of this, the return value of the <ph id="ph1">&lt;xref:System.Double.CompareTo%2A&gt;</ph> method at times may seem surprising.</source>
          <target state="translated">因此，返回值的<ph id="ph1">&lt;xref:System.Double.CompareTo%2A&gt;</ph>方法有时看上去可能令人惊讶。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>For example, multiplication by a particular value followed by division by the same value should produce the original value.</source>
          <target state="translated">例如，通过同样的值跟除法的特定值的乘法应生成原始值。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>In the following example, however, the computed value turns out to be greater than the original value.</source>
          <target state="translated">在下面的示例中，但是，计算的值被证明大于原始值。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>Showing all significant digits of the two values by using the "R" <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> indicates that the computed value differs from the original value in its least significant digits.</source>
          <target state="translated">通过使用"R"显示两个值的所有有效位数<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>指示该计算的值不同于其最低有效位数中的原始值。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>For information on handling such comparisons, see the Remarks section of the <ph id="ph1">&lt;xref:System.Double.Equals%28System.Double%29&gt;</ph> method.</source>
          <target state="translated">有关处理这种比较的信息，请参阅的备注部分<ph id="ph1">&lt;xref:System.Double.Equals%28System.Double%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>This method is implemented to support the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">实现此方法是为了支持<ph id="ph1">&lt;xref:System.IComparable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>Note that, although a <ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph> is not considered to be equal to another <ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph> (even itself), the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface requires that <ph id="ph4">`A.CompareTo(A)`</ph> return zero.</source>
          <target state="translated">请注意，尽管<ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>不被视为可等于另一个<ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph>（即使是其自身），<ph id="ph3">&lt;xref:System.IComparable&gt;</ph>接口也要求<ph id="ph4">`A.CompareTo(A)`</ph>返回零。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>Precision in Comparisons</source>
          <target state="translated">在比较中的精度</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</source>
          <target state="translated">超出有案可稽的精度的浮点数的精度是特定于实现和.NET Framework 版本。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</source>
          <target state="translated">因此，两个特定的数字的比较可能会更改.NET Framework 各版本之间因为精度的数字的内部表示形式可能会更改。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.CompareTo(System.Object)">
          <source>The following code example illustrates the use of <ph id="ph1">`CompareTo`</ph> in the context of <ph id="ph2">`Double`</ph>.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">`CompareTo`</ph>的上下文中<ph id="ph2">`Double`</ph>。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Double.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="F:System.Double.Epsilon">
          <source>Represents the smallest positive <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value that is greater than zero.</source>
          <target state="translated">表示大于零的最小正 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="F:System.Double.Epsilon">
          <source>This field is constant.</source>
          <target state="translated">此字段为常数。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>The value of the <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph> property reflects the smallest positive <ph id="ph2">&lt;xref:System.Double&gt;</ph> value that is significant in numeric operations or comparisons when the value of the <ph id="ph3">&lt;xref:System.Double&gt;</ph> instance is zero.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>属性反映的最小正<ph id="ph2">&lt;xref:System.Double&gt;</ph>很重要数字的操作或比较的值时的值<ph id="ph3">&lt;xref:System.Double&gt;</ph>实例为零。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>For example, the following code shows that zero and <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph> are considered to be unequal values, whereas zero and half the value of <ph id="ph2">&lt;xref:System.Double.Epsilon&gt;</ph> are considered to be equal.</source>
          <target state="translated">例如，以下代码所示，零和<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>被视为不相等的值，而零和一半的值<ph id="ph2">&lt;xref:System.Double.Epsilon&gt;</ph>被视为相等。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>More precisely, the floating point format consists of a sign, a 52-bit mantissa or significand, and an 11-bit exponent.</source>
          <target state="translated">更确切地说，浮点格式由登录、 一个 52 位尾数或有效数，以及一个 11 位指数的点。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>As the following example shows, zero has an exponent of -1022 and a mantissa of 0.</source>
          <target state="translated">如下面的示例所示，零将具有-1022年指数和尾数的 0。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source><ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph> has an exponent of -1022 and a mantissa of 1.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph> 具有-1022年指数和尾数的 1。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>This means that <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph> is the smallest positive <ph id="ph2">&lt;xref:System.Double&gt;</ph> value greater than zero and represents the smallest possible value and the smallest possible increment for a <ph id="ph3">&lt;xref:System.Double&gt;</ph> whose exponent is -1022.</source>
          <target state="translated">这意味着，<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>是最小正<ph id="ph2">&lt;xref:System.Double&gt;</ph>值大于零，表示最小可能值和最小可能增加<ph id="ph3">&lt;xref:System.Double&gt;</ph>其指数是-1022年。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>However, the <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph> property is not a general measure of precision of the <ph id="ph2">&lt;xref:System.Double&gt;</ph> type; it applies only to <ph id="ph3">&lt;xref:System.Double&gt;</ph> instances that have a value of zero or an exponent of -1022.</source>
          <target state="translated">但是，<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>属性不是常规度量值的精度<ph id="ph2">&lt;xref:System.Double&gt;</ph>键入; 它仅适用于<ph id="ph3">&lt;xref:System.Double&gt;</ph>具有的值为 0 或-1022年的指数的实例。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>The value of the <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph> property is not equivalent to machine epsilon, which represents the upper bound of the relative error due to rounding in floating-point arithmetic.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>属性不是等效于计算机 epsilon，表示相对的错误，因为浮点算术舍入的上限。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>The value of this constant is 4.94065645841247e-324.</source>
          <target state="translated">此常量的值是 4.94065645841247 e-324。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>Two apparently equivalent floating-point numbers might not compare equal because of differences in their least significant digits.</source>
          <target state="translated">两个显然是等效的浮点数的比较结果可能会为不相等，由于其最低有效位的差异。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>For example, the C# expression, <ph id="ph1">`(double)1/3 == (double)0.33333`</ph>, does not compare equal because the division operation on the left side has maximum precision while the constant on the right side is precise only to the specified digits.</source>
          <target state="translated">例如，C# 表达式<ph id="ph1">`(double)1/3 == (double)0.33333`</ph>，不比较相等的因为在左侧的除法运算具有最大精度，而右侧常量是仅精确到指定的位数。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>If you create a custom algorithm that determines whether two floating-point numbers can be considered equal, we do not recommend that you base your algorithm on the value of the <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph> constant to establish the acceptable absolute margin of difference for the two values to be considered equal.</source>
          <target state="translated">如果创建自定义算法来确定是否可视为两个浮点数相等时，我们不建议的值基于您的算法<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>要建立不同之处的可接受绝对边距常量要被视为相等的两个值。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>(Typically, that margin of difference is many times greater than <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>.) For information about comparing two double-precision floating-point values, see <ph id="ph2">&lt;xref:System.Double&gt;</ph> and <ph id="ph3">&lt;xref:System.Double.Equals%28System.Double%29&gt;</ph>.</source>
          <target state="translated">(通常情况下，相应的边距的差异大于多次<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>。)有关比较两个双精度浮点值的信息，请参阅<ph id="ph2">&lt;xref:System.Double&gt;</ph>和<ph id="ph3">&lt;xref:System.Double.Equals%28System.Double%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>Platform Notes</source>
          <target state="translated">平台说明</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>On ARM systems, the value of the <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph> constant is too small to be detected, so it equates to zero.</source>
          <target state="translated">ARM 系统的值上<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>常量是太小以致无法检测到，因此它相当于零。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.Epsilon">
          <source>You can define an alternative epsilon value that equals 2.2250738585072014E-308 instead.</source>
          <target state="translated">你可以定义可选 epsilon 值等于 2.2250738585072014 e-308 相反。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="T:System.Double">
          <source>Returns a value indicating whether two instances of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> represent the same value.</source>
          <target state="translated">返回一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 的两个实例是否表示同一个值。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Double.Equals(System.Double)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> object to compare to this instance.</source>
          <target state="translated">要与此示例比较的 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Double.Equals(System.Double)">
          <source>Returns a value indicating whether this instance and a specified <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> object represent the same value.</source>
          <target state="translated">返回一个值，该值指示此实例和指定的 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 对象是否表示相同的值。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Double.Equals(System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is equal to this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 等于此实例，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than <ph id="ph2">&lt;xref:System.Double.Equals%2A&gt;</ph> because it does not have to convert the <ph id="ph3">`obj`</ph> parameter to an object.</source>
          <target state="translated">此方法实现<ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph>接口，并且执行效果略好于<ph id="ph2">&lt;xref:System.Double.Equals%2A&gt;</ph>因为它不具有要转换<ph id="ph3">`obj`</ph>对对象的参数。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>Widening Conversions</source>
          <target state="translated">扩大转换</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>Depending on your programming language, it might be possible to code a <ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph> method where the parameter type has fewer bits (is narrower) than the instance type.</source>
          <target state="translated">具体取决于您的编程语言，它可能会对代码<ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph>其中的参数类型具有较少的位的方法 （为较窄） 比实例类型。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</source>
          <target state="translated">这可能是因为某些编程语言中执行的隐式的扩大转换，它表示具有任意数量的位的实例作为类型参数。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Double&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">例如，假设实例类型是<ph id="ph1">&lt;xref:System.Double&gt;</ph>和参数类型是<ph id="ph2">&lt;xref:System.Int32&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>The Microsoft C# compiler generates instructions to represent the value of the parameter as a <ph id="ph1">&lt;xref:System.Double&gt;</ph> object, then generates a <ph id="ph2">&lt;xref:System.Double.Equals%28System.Double%29?displayProperty=nameWithType&gt;</ph> method that compares the values of the instance and the widened representation of the parameter.</source>
          <target state="translated">Microsoft C# 编译器生成的指令来表示形式的参数值<ph id="ph1">&lt;xref:System.Double&gt;</ph>对象，然后生成<ph id="ph2">&lt;xref:System.Double.Equals%28System.Double%29?displayProperty=nameWithType&gt;</ph>比较实例的值和参数的扩大的表示的方法。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>Consult your programming language's documentation to determine if its compiler performs implicit widening conversions of numeric types.</source>
          <target state="translated">咨询你的编程语言的文档，以确定其编译器是否执行数值类型的隐式扩大转换。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>For more information, see the <bpt id="p1">[</bpt>Type Conversion Tables<ept id="p1">](~/docs/standard/base-types/conversion-tables.md)</ept> topic.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>类型转换表<ept id="p1">](~/docs/standard/base-types/conversion-tables.md)</ept>主题。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>Precision in Comparisons</source>
          <target state="translated">在比较中的精度</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph> method should be used with caution, because two apparently equivalent values can be unequal due to the differing precision of the two values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph>方法应多加小心，因为两个显然相等的值可能会由于不同的两个值的精度不相等。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>The following example reports that the <ph id="ph1">&lt;xref:System.Double&gt;</ph> value .333333 and the <ph id="ph2">&lt;xref:System.Double&gt;</ph> value returned by dividing 1 by 3 are unequal.</source>
          <target state="translated">下面的示例报告<ph id="ph1">&lt;xref:System.Double&gt;</ph>值.333333 和<ph id="ph2">&lt;xref:System.Double&gt;</ph>1 除以 3 返回值不相等。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>Rather than comparing for equality, one technique involves defining an acceptable relative margin of difference between two values (such as .001% of one of the values).</source>
          <target state="translated">而不是比较是否相等，一种方法涉及定义两个值之间的差异可接受相对范围 (如。 001%的值之一)。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to differences in precision and, therefore, the values are likely to be equal.</source>
          <target state="translated">如果两个值之间的差异的绝对值是小于或等于该边距，区别是可能是由于精度的不同，并因此的值很可能相等。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>The following example uses this technique to compare .33333 and 1/3, the two <ph id="ph1">&lt;xref:System.Double&gt;</ph> values that the previous code example found to be unequal.</source>
          <target state="translated">下面的示例使用此方法来比较.33333 和 1/3，这两个<ph id="ph1">&lt;xref:System.Double&gt;</ph>前面的代码示例找到要不相等的值。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>In this case, the values are equal.</source>
          <target state="translated">在这种情况下，值相等。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>Because <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph> defines the minimum expression of a positive value whose range is near zero, the margin of difference between two similar values must be greater than <ph id="ph2">&lt;xref:System.Double.Epsilon&gt;</ph>.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>定义的最小的表达式必须大于两个类似的值之间的差异的边距其范围是接近于零的正值， <ph id="ph2">&lt;xref:System.Double.Epsilon&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>Typically, it is many times greater than <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>.</source>
          <target state="translated">通常情况下，大于多次<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>Because of this, we recommend that you do not use <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph> when comparing <ph id="ph2">&lt;xref:System.Double&gt;</ph> values for equality.</source>
          <target state="translated">因此，我们建议你不要使用<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>比较时<ph id="ph2">&lt;xref:System.Double&gt;</ph>值是否相等。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>A second technique involves comparing the difference between two floating-point numbers with some absolute value.</source>
          <target state="translated">第二种方法涉及比较两个浮点数与某些绝对值的数值之间的差异。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>If the difference is less than or equal to that absolute value, the numbers are equal.</source>
          <target state="translated">如果差异在于小于或等于该绝对值的数值，数字相等。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>If it is greater, the numbers are not equal.</source>
          <target state="translated">如果较高，则数字不相等。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>One alternative is to arbitrarily select an absolute value.</source>
          <target state="translated">一种替代方法是任意选择绝对值。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>This is problematic, however, because an acceptable margin of difference depends on the magnitude of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">这会产生问题，但是，因为差异可接受范围取决于的量<ph id="ph1">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>A second alternative takes advantage of a design feature of the floating-point format: The difference between the integer representation of two floating-point values indicates the number of possible floating-point values that separates them.</source>
          <target state="translated">第二个备选利用浮点格式的设计功能： 之间的整数表示两个浮点值形式的差异指示分隔这些数量的可能的浮点值。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>For example, the difference between 0.0 and <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph> is 1, because <ph id="ph2">&lt;xref:System.Double.Epsilon&gt;</ph> is the smallest representable value when working with a <ph id="ph3">&lt;xref:System.Double&gt;</ph> whose value is zero.</source>
          <target state="translated">例如，0.0 之间的差异和<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>为 1，因为<ph id="ph2">&lt;xref:System.Double.Epsilon&gt;</ph>使用时是可表示的最小值<ph id="ph3">&lt;xref:System.Double&gt;</ph>其值为零。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>The following example uses this technique to compare .33333 and 1/3, which are the two <ph id="ph1">&lt;xref:System.Double&gt;</ph> values that the previous code example with the <ph id="ph2">&lt;xref:System.Double.Equals%28System.Double%29&gt;</ph> method found to be unequal.</source>
          <target state="translated">下面的示例使用此方法来比较.33333 和 1/3，是这两个<ph id="ph1">&lt;xref:System.Double&gt;</ph>值与前面的代码示例<ph id="ph2">&lt;xref:System.Double.Equals%28System.Double%29&gt;</ph>方法找到要不相等。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>Note that the example uses the <ph id="ph1">&lt;xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType&gt;</ph> method to convert a double-precision floating-point value to its integer representation.</source>
          <target state="translated">请注意，该示例使用<ph id="ph1">&lt;xref:System.BitConverter.DoubleToInt64Bits%2A?displayProperty=nameWithType&gt;</ph>方法将一个双精度浮点值转换为其整数表示形式。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</source>
          <target state="translated">超出有案可稽的精度的浮点数的精度是特定于实现和.NET Framework 版本。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</source>
          <target state="translated">因此，两个特定的数字的比较可能会更改.NET Framework 各版本之间因为精度的数字的内部表示形式可能会更改。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>If two <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> values are tested for equality by calling the <ph id="ph2">&lt;xref:System.Double.Equals%2A&gt;</ph> method, the method returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">如果两个<ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>值是否相等测试通过调用<ph id="ph2">&lt;xref:System.Double.Equals%2A&gt;</ph>方法，该方法返回<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>However, if two <ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph> values are tested for equality by using the equality operator, the operator returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">但是，如果两个<ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>值使用相等运算符测试是否相等，则该运算符将返回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>When you want to determine whether the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> is not a number (NaN), an alternative is to call the <ph id="ph2">&lt;xref:System.Double.IsNaN%2A&gt;</ph> method.</source>
          <target state="translated">如果想要确定是否的值<ph id="ph1">&lt;xref:System.Double&gt;</ph>不是一个数字 (NaN) 的替代方法是调用<ph id="ph2">&lt;xref:System.Double.IsNaN%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>Compiler overload resolution may account for an apparent difference in the behavior of the two <ph id="ph1">&lt;see cref="M:System.Double.Equals(System.Object)" /&gt;</ph> method overloads.</source>
          <target state="translated">编译器重载决策可能应对明显的差异的两个行为<ph id="ph1">&lt;see cref="M:System.Double.Equals(System.Object)" /&gt;</ph>方法重载。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>If an implicit conversion between the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> argument and a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> is defined and the argument is not typed as an <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, compilers may perform an implicit conversion and call the <ph id="ph4">&lt;see cref="M:System.Double.Equals(System.Double)" /&gt;</ph> method.</source>
          <target state="translated">如果之间的隐式转换<ph id="ph1">&lt;paramref name="obj" /&gt;</ph>自变量和一个<ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>定义和自变量并不类型化为<ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>，编译器可能会执行隐式转换和调用<ph id="ph4">&lt;see cref="M:System.Double.Equals(System.Double)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>Otherwise, they call the <ph id="ph1">&lt;see cref="M:System.Double.Equals(System.Object)" /&gt;</ph> method, which always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph> if its <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> argument is not a <ph id="ph4">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">否则，它们调用<ph id="ph1">&lt;see cref="M:System.Double.Equals(System.Object)" /&gt;</ph>方法，始终返回<ph id="ph2">&lt;see langword="false" /&gt;</ph>如果其<ph id="ph3">&lt;paramref name="obj" /&gt;</ph>参数不是<ph id="ph4">&lt;see cref="T:System.Double" /&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>The following example illustrates the difference in behavior between the two method overloads.</source>
          <target state="translated">下面的示例阐释了两个方法重载之间的行为差异。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Double)">
          <source>In the case of all primitive numeric types except for <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> and in C#, the first comparison returns <ph id="ph2">&lt;see langword="true" /&gt;</ph> because the compiler automatically performs a widening conversion and calls the <ph id="ph3">&lt;see cref="M:System.Double.Equals(System.Double)" /&gt;</ph> method, whereas the second comparison returns <ph id="ph4">&lt;see langword="false" /&gt;</ph> because the compiler calls the <ph id="ph5">&lt;see cref="M:System.Double.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">对于所有的基元数值类型，除<ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>和 C# 中的第一个比较返回<ph id="ph2">&lt;see langword="true" /&gt;</ph>因为编译器自动执行一个的扩大转换，调用<ph id="ph3">&lt;see cref="M:System.Double.Equals(System.Double)" /&gt;</ph>方法，而第二个比较返回<ph id="ph4">&lt;see langword="false" /&gt;</ph>由于编译器调用<ph id="ph5">&lt;see cref="M:System.Double.Equals(System.Object)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Double.Equals(System.Object)">
          <source>An object to compare with this instance.</source>
          <target state="translated">与此实例进行比较的对象。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Double.Equals(System.Object)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">返回一个值，该值指示此实例是否等于指定的对象。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Double.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is an instance of <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph> and equals the value of this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 是 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 的实例并且等于此实例的值，则为 <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph> method should be used with caution, because two apparently equivalent values can be unequal due to the differing precision of the two values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph>方法应多加小心，因为两个显然相等的值可能会由于不同的两个值的精度不相等。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>The following example reports that the <ph id="ph1">&lt;xref:System.Double&gt;</ph> value .3333 and the <ph id="ph2">&lt;xref:System.Double&gt;</ph> returned by dividing 1 by 3 are unequal.</source>
          <target state="translated">下面的示例报告<ph id="ph1">&lt;xref:System.Double&gt;</ph>值.3333 和<ph id="ph2">&lt;xref:System.Double&gt;</ph>返回除以 1 3 是否不相等。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>For alternatives to calling the <ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph> method, see the documentation for the <ph id="ph2">&lt;xref:System.Double.Equals%28System.Double%29&gt;</ph> overload.</source>
          <target state="translated">有关其他信息于调用<ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph>方法，请参阅的文档<ph id="ph2">&lt;xref:System.Double.Equals%28System.Double%29&gt;</ph>重载。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>Because <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph> defines the minimum expression of a positive value whose range is near zero, the margin of difference between two similar values must be greater than <ph id="ph2">&lt;xref:System.Double.Epsilon&gt;</ph>.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>定义的最小的表达式必须大于两个类似的值之间的差异的边距其范围是接近于零的正值， <ph id="ph2">&lt;xref:System.Double.Epsilon&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>Typically, it is many times greater than <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>.</source>
          <target state="translated">通常情况下，大于多次<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</source>
          <target state="translated">超出有案可稽的精度的浮点数的精度是特定于实现和.NET Framework 版本。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</source>
          <target state="translated">因此，两个特定的数字的比较可能会更改.NET Framework 各版本之间因为精度的数字的内部表示形式可能会更改。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>If two <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> values are tested for equality by calling the <ph id="ph2">&lt;xref:System.Double.Equals%2A&gt;</ph> method, the method returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">如果两个<ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>值是否相等测试通过调用<ph id="ph2">&lt;xref:System.Double.Equals%2A&gt;</ph>方法，该方法返回<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>However, if two <ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph> values are tested for equality by using the equality operator, the operator returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">但是，如果两个<ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>值使用相等运算符测试是否相等，则该运算符将返回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>When you want to determine whether the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> is not a number (NaN), an alternative is to call the <ph id="ph2">&lt;xref:System.Double.IsNaN%2A&gt;</ph> method.</source>
          <target state="translated">如果想要确定是否的值<ph id="ph1">&lt;xref:System.Double&gt;</ph>不是一个数字 (NaN) 的替代方法是调用<ph id="ph2">&lt;xref:System.Double.IsNaN%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>Compiler overload resolution may account for an apparent difference in the behavior of the two <ph id="ph1">&lt;see cref="M:System.Double.Equals(System.Object)" /&gt;</ph> method overloads.</source>
          <target state="translated">编译器重载决策可能应对明显的差异的两个行为<ph id="ph1">&lt;see cref="M:System.Double.Equals(System.Object)" /&gt;</ph>方法重载。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>If an implicit conversion between the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> argument and a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> is defined and the argument is not typed as an <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, compilers may perform an implicit conversion and call the <ph id="ph4">&lt;see cref="M:System.Double.Equals(System.Double)" /&gt;</ph> method.</source>
          <target state="translated">如果之间的隐式转换<ph id="ph1">&lt;paramref name="obj" /&gt;</ph>自变量和一个<ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>定义和自变量并不类型化为<ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>，编译器可能会执行隐式转换和调用<ph id="ph4">&lt;see cref="M:System.Double.Equals(System.Double)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>Otherwise, they call the <ph id="ph1">&lt;see cref="M:System.Double.Equals(System.Object)" /&gt;</ph> method, which always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph> if its <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> argument is not a <ph id="ph4">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">否则，它们调用<ph id="ph1">&lt;see cref="M:System.Double.Equals(System.Object)" /&gt;</ph>方法，始终返回<ph id="ph2">&lt;see langword="false" /&gt;</ph>如果其<ph id="ph3">&lt;paramref name="obj" /&gt;</ph>参数不是<ph id="ph4">&lt;see cref="T:System.Double" /&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>The following example illustrates the difference in behavior between the two method overloads.</source>
          <target state="translated">下面的示例阐释了两个方法重载之间的行为差异。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Equals(System.Object)">
          <source>In the case of all primitive numeric types except for <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> and in C#, the first comparison returns <ph id="ph2">&lt;see langword="true" /&gt;</ph> because the compiler automatically performs a widening conversion and calls the <ph id="ph3">&lt;see cref="M:System.Double.Equals(System.Double)" /&gt;</ph> method, whereas the second comparison returns <ph id="ph4">&lt;see langword="false" /&gt;</ph> because the compiler calls the <ph id="ph5">&lt;see cref="M:System.Double.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">对于所有的基元数值类型，除<ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>和 C# 中的第一个比较返回<ph id="ph2">&lt;see langword="true" /&gt;</ph>因为编译器自动执行一个的扩大转换，调用<ph id="ph3">&lt;see cref="M:System.Double.Equals(System.Double)" /&gt;</ph>方法，而第二个比较返回<ph id="ph4">&lt;see langword="false" /&gt;</ph>由于编译器调用<ph id="ph5">&lt;see cref="M:System.Double.Equals(System.Object)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Double.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">返回此实例的哈希代码。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Double.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 位有符号整数哈希代码。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Double.GetTypeCode">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> for value type <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">返回值类型 <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Double.GetTypeCode">
          <source>The enumerated constant, <ph id="ph1">&lt;see cref="F:System.TypeCode.Double" /&gt;</ph>.</source>
          <target state="translated">枚举常数 <ph id="ph1">&lt;see cref="F:System.TypeCode.Double" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Double.IsInfinity(System.Double)">
          <source>A double-precision floating-point number.</source>
          <target state="translated">一个双精度浮点数。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Double.IsInfinity(System.Double)">
          <source>Returns a value indicating whether the specified number evaluates to negative or positive infinity</source>
          <target state="translated">返回一个值，该值指示指定数字是计算为负无穷大还是正无穷大。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Double.IsInfinity(System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d" /&gt;</ph> evaluates to <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> or <ph id="ph4">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="d" /&gt;</ph> 的计算结果为 <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.IsInfinity(System.Double)">
          <source>Floating-point operations return <ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity&gt;</ph> to signal an overflow condition.</source>
          <target state="translated">浮点运算返回<ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.NegativeInfinity&gt;</ph>以发出信号溢出状况。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.IsInfinity(System.Double)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Double.IsInfinity%2A&gt;</ph>:</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Double.IsInfinity%2A&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Double.IsNaN(System.Double)">
          <source>A double-precision floating-point number.</source>
          <target state="translated">一个双精度浮点数。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Double.IsNaN(System.Double)">
          <source>Returns a value that indicates whether the specified value is not a number (<ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph>).</source>
          <target state="translated">返回一个值，该值指示指定的值是否不为数字 (<ph id="ph1">&lt;see cref="F:System.Double.NaN" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Double.IsNaN(System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d" /&gt;</ph> evaluates to <ph id="ph3">&lt;see cref="F:System.Double.NaN" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="d" /&gt;</ph> 的计算结果为 <ph id="ph3">&lt;see cref="F:System.Double.NaN" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.IsNaN(System.Double)">
          <source>Floating-point operations return <ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph> to signal that that result of the operation is undefined.</source>
          <target state="translated">浮点运算返回<ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>以指示该操作的结果是不确定。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.IsNaN(System.Double)">
          <source>For example, dividing 0.0 by 0.0 results in <ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>.</source>
          <target state="translated">例如，将除以 0.0 0.0 会导致<ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.IsNaN(System.Double)">
          <source><ph id="ph1">&lt;xref:System.Double.IsNaN%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if a <ph id="ph3">&lt;xref:System.Double&gt;</ph> value is either <ph id="ph4">&lt;xref:System.Double.PositiveInfinity&gt;</ph> or <ph id="ph5">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.IsNaN%2A&gt;</ph> 返回<ph id="ph2">`false`</ph>如果<ph id="ph3">&lt;xref:System.Double&gt;</ph>值可以是<ph id="ph4">&lt;xref:System.Double.PositiveInfinity&gt;</ph>或<ph id="ph5">&lt;xref:System.Double.NegativeInfinity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.IsNaN(System.Double)">
          <source>To test for these values, use the <ph id="ph1">&lt;xref:System.Double.IsInfinity%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.IsPositiveInfinity%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Double.IsNegativeInfinity%2A&gt;</ph> methods.</source>
          <target state="translated">若要测试这些值，请使用<ph id="ph1">&lt;xref:System.Double.IsInfinity%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Double.IsPositiveInfinity%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Double.IsNegativeInfinity%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.IsNaN(System.Double)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Double.IsNaN%2A&gt;</ph>:</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Double.IsNaN%2A&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Double.IsNegativeInfinity(System.Double)">
          <source>A double-precision floating-point number.</source>
          <target state="translated">一个双精度浮点数。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Double.IsNegativeInfinity(System.Double)">
          <source>Returns a value indicating whether the specified number evaluates to negative infinity.</source>
          <target state="translated">返回一个值，通过该值指示指定数字是否计算为负无穷大。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Double.IsNegativeInfinity(System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d" /&gt;</ph> evaluates to <ph id="ph3">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="d" /&gt;</ph> 的计算结果为 <ph id="ph3">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.IsNegativeInfinity(System.Double)">
          <source>Floating-point operations return <ph id="ph1">&lt;xref:System.Double.NegativeInfinity&gt;</ph> to signal an overflow condition.</source>
          <target state="translated">浮点运算返回<ph id="ph1">&lt;xref:System.Double.NegativeInfinity&gt;</ph>以发出信号溢出状况。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.IsNegativeInfinity(System.Double)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Double.IsNegativeInfinity%2A&gt;</ph>:</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Double.IsNegativeInfinity%2A&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Double.IsPositiveInfinity(System.Double)">
          <source>A double-precision floating-point number.</source>
          <target state="translated">一个双精度浮点数。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Double.IsPositiveInfinity(System.Double)">
          <source>Returns a value indicating whether the specified number evaluates to positive infinity.</source>
          <target state="translated">返回一个值，通过该值指示指定数字是否计算为正无穷大。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Double.IsPositiveInfinity(System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="d" /&gt;</ph> evaluates to <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="d" /&gt;</ph> 的计算结果为 <ph id="ph3">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.IsPositiveInfinity(System.Double)">
          <source>Floating-point operations return <ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph> to signal an overflow condition.</source>
          <target state="translated">浮点运算返回<ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph>以发出信号溢出状况。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.IsPositiveInfinity(System.Double)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Double.IsPositiveInfinity%2A&gt;</ph>:</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Double.IsPositiveInfinity%2A&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="F:System.Double.MaxValue">
          <source>Represents the largest possible value of a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">表示 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 的最大可能值。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="F:System.Double.MaxValue">
          <source>This field is constant.</source>
          <target state="translated">此字段为常数。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.MaxValue">
          <source>The value of this constant is positive 1.7976931348623157E+308.</source>
          <target state="translated">此常量的值为正 1.7976931348623157 e + 308。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.MaxValue">
          <source>The result of an operation that exceeds <ph id="ph1">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> is <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">超过了操作的结果<ph id="ph1">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>是<ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.MaxValue">
          <source>In the following example, <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> results from addition, multiplication, and exponentiation operations when the result exceeds <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">在下面的示例中，<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>会从添加、 乘法和求幂的操作时的结果超出了<ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.MaxValue">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Double.MaxValue&gt;</ph>:</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Double.MaxValue&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="F:System.Double.MinValue">
          <source>Represents the smallest possible value of a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">表示 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 的最小可能值。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="F:System.Double.MinValue">
          <source>This field is constant.</source>
          <target state="translated">此字段为常数。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.MinValue">
          <source>The value of this constant is negative 1.7976931348623157E+308.</source>
          <target state="translated">此常量的值为负 1.7976931348623157 e + 308。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.MinValue">
          <source>The result of an operation that is less than <ph id="ph1">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph> is <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">是操作的结果小于<ph id="ph1">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph>是<ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.MinValue">
          <source>In the following example, <ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph> results from subtraction and multiplication operations when the result is less than <ph id="ph2">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">在下面的示例中，<ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>源于减法和乘法操作，如果结果为小于<ph id="ph2">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.MinValue">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph>:</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="F:System.Double.NaN">
          <source>Represents a value that is not a number (<ph id="ph1">&lt;see langword="NaN" /&gt;</ph>).</source>
          <target state="translated">表示不是数字 (<ph id="ph1">&lt;see langword="NaN" /&gt;</ph>) 的值。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="F:System.Double.NaN">
          <source>This field is constant.</source>
          <target state="translated">此字段为常数。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.NaN">
          <source>A method or operator returns <ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph> when the result of an operation is undefined.</source>
          <target state="translated">方法或运算符返回<ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>时的操作的结果是不确定。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.NaN">
          <source>For example, the result of dividing zero by zero is <ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>, as the following example shows.</source>
          <target state="translated">例如，零被零除的结果是<ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>，如下面的示例所示。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.NaN">
          <source>(But note that dividing a non-zero number by zero returns either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity&gt;</ph>, depending on the sign of the divisor.)</source>
          <target state="translated">(但请注意，返回非零数字除以零<ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.NegativeInfinity&gt;</ph>，取决于除数的符号。)</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.NaN">
          <source>In addition, a method call with a <ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph> value or an operation on a <ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph> value returns <ph id="ph3">&lt;xref:System.Double.NaN&gt;</ph>, as the following example shows.</source>
          <target state="translated">此外，一种方法调用与<ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>值或上的操作<ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph>值返回<ph id="ph3">&lt;xref:System.Double.NaN&gt;</ph>，如下面的示例所示。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.NaN">
          <source>Use the <ph id="ph1">&lt;xref:System.Double.IsNaN%2A&gt;</ph> method to determine whether a value is not a number.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Double.IsNaN%2A&gt;</ph>方法来确定是否一个值不是数字。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.NaN">
          <source>The <ph id="ph1">&lt;xref:System.Double.op_Equality%2A&gt;</ph> operator considers two <ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph> values to be unequal to one another.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.op_Equality%2A&gt;</ph>运算符考虑两个<ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph>值不等于另一个。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.NaN">
          <source>In general, <ph id="ph1">&lt;xref:System.Double&gt;</ph> operators cannot be used to compare <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> with other <ph id="ph3">&lt;xref:System.Double&gt;</ph> values, although comparison methods (such as <ph id="ph4">&lt;xref:System.Double.Equals%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Double.CompareTo%2A&gt;</ph>) can.</source>
          <target state="translated">一般情况下，<ph id="ph1">&lt;xref:System.Double&gt;</ph>运算符不能用于比较<ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>与其他<ph id="ph3">&lt;xref:System.Double&gt;</ph>值，尽管比较方法 (如<ph id="ph4">&lt;xref:System.Double.Equals%2A&gt;</ph>和<ph id="ph5">&lt;xref:System.Double.CompareTo%2A&gt;</ph>) 可以。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.NaN">
          <source>The following example illustrates the difference in behavior between <ph id="ph1">&lt;xref:System.Double&gt;</ph> comparison operators and methods.</source>
          <target state="translated">下面的示例演示的之间的行为差异<ph id="ph1">&lt;xref:System.Double&gt;</ph>比较运算符和方法。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.NaN">
          <source>The following example illustrates the use of <ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>:</source>
          <target state="translated">以下示例演示了 <ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph> 的用法：</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="F:System.Double.NegativeInfinity">
          <source>Represents negative infinity.</source>
          <target state="translated">表示负无穷。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="F:System.Double.NegativeInfinity">
          <source>This field is constant.</source>
          <target state="translated">此字段为常数。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.NegativeInfinity">
          <source>The value of this constant is the result of dividing a negative number by zero.</source>
          <target state="translated">此常量的值是被零除负数的结果。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.NegativeInfinity">
          <source>This constant is returned when the result of an operation is less than <ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph>.</source>
          <target state="translated">如果操作的结果，则返回此常量小于<ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.NegativeInfinity">
          <source>Use <ph id="ph1">&lt;xref:System.Double.IsNegativeInfinity%2A&gt;</ph> to determine whether a value evaluates to negative infinity.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Double.IsNegativeInfinity%2A&gt;</ph>来确定一个值是否计算为负无穷大。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.NegativeInfinity">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Double.NegativeInfinity&gt;</ph>:</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Double.NegativeInfinity&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Double.op_Equality(System.Double,System.Double)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Double.op_Equality(System.Double,System.Double)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Double.op_Equality(System.Double,System.Double)">
          <source>Returns a value that indicates whether two specified <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values are equal.</source>
          <target state="translated">返回一个值，该值指示两个指定的 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值是否相等。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Double.op_Equality(System.Double,System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 相等，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.op_Equality(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Double.op_Equality%2A&gt;</ph> method defines the equality operator for <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.op_Equality%2A&gt;</ph>方法定义的相等运算符<ph id="ph2">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.op_Equality(System.Double,System.Double)">
          <source>If two <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> values are tested for equality by using the equality operator, the result is <ph id="ph2">`false`</ph>; two <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> values are not considered equal.</source>
          <target state="translated">如果两个<ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>值通过使用相等运算符测试是否相等，则结果为<ph id="ph2">`false`</ph>; 两个<ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>值不会视为相等。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.op_Equality(System.Double,System.Double)">
          <source>If they are tested for equality by calling the <ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph> method, the result is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">如果它们通过调用来测试是否相等<ph id="ph1">&lt;xref:System.Double.Equals%2A&gt;</ph>方法，结果是<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.op_Equality(System.Double,System.Double)">
          <source>When you want to determine whether the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> is not a number (NaN), an alternative is to call the <ph id="ph2">&lt;xref:System.Double.IsNaN%2A&gt;</ph> method.</source>
          <target state="translated">如果想要确定是否的值<ph id="ph1">&lt;xref:System.Double&gt;</ph>不是一个数字 (NaN) 的替代方法是调用<ph id="ph2">&lt;xref:System.Double.IsNaN%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Double.op_GreaterThan(System.Double,System.Double)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Double.op_GreaterThan(System.Double,System.Double)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Double.op_GreaterThan(System.Double,System.Double)">
          <source>Returns a value that indicates whether a specified <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value is greater than another specified <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示指定的 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值是否大于另一个指定的 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Double.op_GreaterThan(System.Double,System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大于 <ph id="ph2">&lt;paramref name="left" /&gt;</ph>，则为 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.op_GreaterThan(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Double.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater-than operator for <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.op_GreaterThan%2A&gt;</ph>方法定义的较大的操作-比运算符<ph id="ph2">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)">
          <source>Returns a value that indicates whether a specified <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value is greater than or equal to another specified <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示指定的 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值是否大于或等于另一个指定的 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 大于等于 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Double.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater-than-or-equal operator for <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.op_GreaterThanOrEqual%2A&gt;</ph>方法定义为大于或等于运算符的运算<ph id="ph2">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Double.op_Inequality(System.Double,System.Double)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Double.op_Inequality(System.Double,System.Double)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Double.op_Inequality(System.Double,System.Double)">
          <source>Returns a value that indicates whether two specified <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values are not equal.</source>
          <target state="translated">返回一个值，该值指示两个指定的 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值是否不相等。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Double.op_Inequality(System.Double,System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 不相等，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.op_Inequality(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Double.op_Inequality%2A&gt;</ph> method defines the inequality operator for <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.op_Inequality%2A&gt;</ph>方法定义的不相等运算符<ph id="ph2">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Double.op_LessThan(System.Double,System.Double)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Double.op_LessThan(System.Double,System.Double)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Double.op_LessThan(System.Double,System.Double)">
          <source>Returns a value that indicates whether a specified <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value is less than another specified <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示指定的 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值是否小于另一个指定的 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Double.op_LessThan(System.Double,System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小于 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.op_LessThan(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Double.op_LessThan%2A&gt;</ph> method defines the operation of the less-than operator for <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.op_LessThan%2A&gt;</ph>方法定义小于运算的运算符比<ph id="ph2">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Double.op_LessThanOrEqual(System.Double,System.Double)">
          <source>The first value to compare.</source>
          <target state="translated">要比较的第一个值。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Double.op_LessThanOrEqual(System.Double,System.Double)">
          <source>The second value to compare.</source>
          <target state="translated">要比较的第二个值。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Double.op_LessThanOrEqual(System.Double,System.Double)">
          <source>Returns a value that indicates whether a specified <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value is less than or equal to another specified <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">返回一个值，该值指示指定的 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值是否小于或等于另一个指定的 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Double.op_LessThanOrEqual(System.Double,System.Double)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小于等于 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.op_LessThanOrEqual(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Double.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less-than-or-equal operator for <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.op_LessThanOrEqual%2A&gt;</ph>方法定义的小于或等于运算符的运算<ph id="ph2">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="T:System.Double">
          <source>Converts the string representation of a number to its double-precision floating-point number equivalent.</source>
          <target state="translated">将数字的字符串表示形式转换为它的等效双精度浮点数。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">包含要转换的数字的字符串。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String)">
          <source>Converts the string representation of a number to its double-precision floating-point number equivalent.</source>
          <target state="translated">将数字的字符串表示形式转换为它的等效双精度浮点数。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String)">
          <source>A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph1">&lt;paramref name="s" /&gt;</ph> 中指定的数值或符号等效的双精度浮点数。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter can contain the current culture's <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph>, or a string of the form:</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数可以包含当前区域性的<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph>，或格式的字符串：</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>][<bpt id="p3">*</bpt>integral-digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>,<ept id="p4">*</ept>]]<bpt id="p5">*</bpt>integral-digits<ept id="p5">*</ept>[<bpt id="p6">*</bpt>.<ept id="p6">*</ept>[<bpt id="p7">*</bpt>fractional-digits<ept id="p7">*</ept>]][E[<bpt id="p8">*</bpt>sign<ept id="p8">*</ept>]<bpt id="p9">*</bpt>exponential-digits<ept id="p9">*</ept>][<bpt id="p10">*</bpt>ws<ept id="p10">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>][<bpt id="p3">*</bpt>integral-digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>,<ept id="p4">*</ept>]]<bpt id="p5">*</bpt>integral-digits<ept id="p5">*</ept>[<bpt id="p6">*</bpt>.<ept id="p6">*</ept>[<bpt id="p7">*</bpt>fractional-digits<ept id="p7">*</ept>]][E[<bpt id="p8">*</bpt>sign<ept id="p8">*</ept>]<bpt id="p9">*</bpt>exponential-digits<ept id="p9">*</ept>][<bpt id="p10">*</bpt>ws<ept id="p10">*</ept>]</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">方括号 ([ and ]) 中的元素是可选的。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每个元素。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>A series of white-space characters.</source>
          <target state="translated">一系列的空白字符。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>A negative sign symbol (-) or a positive sign symbol (+).</source>
          <target state="translated">负号符号 （-） 或正号符号 （+）。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>Only a leading sign can be used.</source>
          <target state="translated">可以使用仅前导符号。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>A series of digits ranging from 0 to 9 that specify the integral part of the number.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定数的整数部分的数字。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>Runs of <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> can be partitioned by a group-separator symbol.</source>
          <target state="translated">运行<bpt id="p1">*</bpt>整型数字<ept id="p1">*</ept>进行分区的组分隔符符号。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>For example, in some cultures a comma (,) separates groups of thousands.</source>
          <target state="translated">例如，在某些区域性使用逗号 （，） 作为千位分隔符。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>The <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> element can be absent if the string contains the <bpt id="p2">*</bpt>fractional-digits<ept id="p2">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt>整型数字<ept id="p1">*</ept>元素可以是缺少如果字符串包含<bpt id="p2">*</bpt>小数位数<ept id="p2">*</ept>元素。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>,</source>
          <target state="translated">,</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">特定于区域性的千位分隔符符号。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">特定于区域性的小数点符号。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>A series of digits ranging from 0 to 9 that specify the fractional part of the number.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定数的小数部分的数字。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>A series of digits ranging from 0 to 9 that specify an exponent.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定指数的位数。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using a combination of the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flags.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数被解释结合使用<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>This means that white space and thousands separators are allowed, for example, while currency symbols are not.</source>
          <target state="translated">这意味着该空白和千位分隔符允许，例如，虽然并不是货币符号。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>For finer control over which style elements are permitted in <ph id="ph1">`s`</ph> for the parse operation to succeed, call the <ph id="ph2">&lt;xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> or the <ph id="ph3">&lt;xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">更细致的控制元素中的样式的允许<ph id="ph1">`s`</ph>分析操作成功，调用<ph id="ph2">&lt;xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph>或<ph id="ph3">&lt;xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current thread culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数被解释使用中的格式设置信息<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>初始化当前线程区域性的对象。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>To parse a string using the formatting information of some other culture, call the <ph id="ph1">&lt;xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要分析使用的格式信息的一些其他区域性的字符串，调用<ph id="ph1">&lt;xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>Ordinarily, if you pass the <ph id="ph1">&lt;xref:System.Double.Parse%2A?displayProperty=nameWithType&gt;</ph> method a string that is created by calling the <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method, the original <ph id="ph3">&lt;xref:System.Double&gt;</ph> value is returned.</source>
          <target state="translated">通常，如果你通过<ph id="ph1">&lt;xref:System.Double.Parse%2A?displayProperty=nameWithType&gt;</ph>方法通过调用创建的字符串<ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph>方法时，原始<ph id="ph3">&lt;xref:System.Double&gt;</ph>返回值。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>However, because of a loss of precision, the values may not be equal.</source>
          <target state="translated">但是，由于精度损失，值可能不相等。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>In addition, attempting to parse the string representation of either <ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph> throws an <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>, as the following example illustrates.</source>
          <target state="translated">此外，尝试分析的字符串表示形式是<ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph>引发<ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>，如下面的示例所示。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">如果在遇到分隔符<ph id="ph1">`s`</ph>期间执行分析操作，并适用的货币或小数位的参数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">有关分隔符的详细信息，请参阅<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Double.Parse%28System.String%29&gt;</ph> method.</source>
          <target state="translated">下面的示例演示 <ph id="ph1">&lt;xref:System.Double.Parse%28System.String%29&gt;</ph> 方法的用法。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> does not represent a number in a valid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 不表示一个有效格式的数字。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 表示一个小于 <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> 或大于 <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph> 的数字。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">包含要转换的数字的字符串。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A bitwise combination of enumeration values that indicate the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">枚举值的按位组合，用于指示可出现在 <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> 中的样式元素。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A typical value to specify is a combination of <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Float" /&gt;</ph> combined with <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowThousands" /&gt;</ph>.</source>
          <target state="translated">一个要指定的典型值为 <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Float" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowThousands" /&gt;</ph> 的组合。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Converts the string representation of a number in a specified style to its double-precision floating-point number equivalent.</source>
          <target state="translated">将指定样式的数字的字符串表示形式转换为它的等效双精度浮点数。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph1">&lt;paramref name="s" /&gt;</ph> 中指定的数值或符号等效的双精度浮点数。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space, thousands separators, and currency symbols) that are allowed in the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph>参数定义的样式元素 (如空白、 千位分隔符和货币符号)，可以用在<ph id="ph2">`s`</ph>分析操作成功的参数。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">它必须是中的位标志的组合<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:</source>
          <target state="translated">以下<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>不支持成员：</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can contain the current culture's <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数可以包含当前区域性的<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>，或<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, it can also take the form:</source>
          <target state="translated">根据值<ph id="ph1">`style`</ph>，它还可以采用以下形式：</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>integral-digits<ept id="p4">*</ept>[<bpt id="p5">*</bpt>,<ept id="p5">*</ept>]]<bpt id="p6">*</bpt>integral-digits<ept id="p6">*</ept>[<bpt id="p7">*</bpt>.<ept id="p7">*</ept>[<bpt id="p8">*</bpt>fractional-digits<ept id="p8">*</ept>]][E[<bpt id="p9">*</bpt>sign<ept id="p9">*</ept>]<bpt id="p10">*</bpt>exponential-digits<ept id="p10">*</ept>][<bpt id="p11">*</bpt>ws<ept id="p11">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>integral-digits<ept id="p4">*</ept>[<bpt id="p5">*</bpt>,<ept id="p5">*</ept>]]<bpt id="p6">*</bpt>integral-digits<ept id="p6">*</ept>[<bpt id="p7">*</bpt>.<ept id="p7">*</ept>[<bpt id="p8">*</bpt>fractional-digits<ept id="p8">*</ept>]][E[<bpt id="p9">*</bpt>sign<ept id="p9">*</ept>]<bpt id="p10">*</bpt>exponential-digits<ept id="p10">*</ept>][<bpt id="p11">*</bpt>ws<ept id="p11">*</ept>]</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">方括号 ([ and ]) 中的元素是可选的。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每个元素。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A series of white-space characters.</source>
          <target state="translated">一系列的空白字符。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">空格可以出现的开始处<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>标志，它可以出现在末尾<ph id="ph4">`s`</ph>如果<ph id="ph5">`style`</ph>包括<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">特定于区域性的货币符号。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">在字符串中的位置由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph>当前区域性的属性。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">当前区域性的货币符号可以出现在<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A negative sign symbol (-) or a positive sign symbol (+).</source>
          <target state="translated">负号符号 （-） 或正号符号 （+）。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The sign can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">符号可以出现的开始处<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>标志，它可以出现在末尾<ph id="ph4">`s`</ph>如果<ph id="ph5">`style`</ph>包括<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Parentheses can be used in <ph id="ph1">`s`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">可以在使用括号<ph id="ph1">`s`</ph>以指示负值，如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A series of digits ranging from 0 to 9 that specify the integral part of the number.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定数的整数部分的数字。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> element can be absent if the string contains the <bpt id="p2">*</bpt>fractional-digits<ept id="p2">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt>整型数字<ept id="p1">*</ept>元素可以是缺少如果字符串包含<bpt id="p2">*</bpt>小数位数<ept id="p2">*</ept>元素。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>,</source>
          <target state="translated">,</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific group separator.</source>
          <target state="translated">特定于区域性的组分隔符。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's group separator symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag</source>
          <target state="translated">当前区域性的组分隔符符号可以出现在<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>标志</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">特定于区域性的小数点符号。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's decimal point symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">当前区域性的小数点符号可以出现在<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A series of digits ranging from 0 to 9 that specify the fractional part of the number.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定数的小数部分的数字。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">小数位数可以出现在<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数可以表示指数记数法的数字，如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A series of digits ranging from 0 to 9 that specify an exponent.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定指数的位数。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">仅为数字的字符串 (它对应于<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>样式) 总是可以分析成功。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=nameWithType&gt;</ph> members control elements that may be present, but are not required to be present, in the input string.</source>
          <target state="translated">剩余<ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=nameWithType&gt;</ph>成员控件可能会存在，但不是需要为存在于输入字符串中的元素。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> flags affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">下表指示个别<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>标志会影响中可能存在的元素<ph id="ph2">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>NumberStyles value</source>
          <target state="translated">NumberStyles 值</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements permitted in <ph id="ph1">`s`</ph> in addition to digits</source>
          <target state="translated">元素允许在<ph id="ph1">`s`</ph>除数字之外</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> element only.</source>
          <target state="translated"><bpt id="p1">*</bpt>整型数字<ept id="p1">*</ept>仅元素。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The decimal point (<bpt id="p1">*</bpt>.<ept id="p1">*</ept>) and <bpt id="p2">*</bpt>fractional-digits<ept id="p2">*</ept> elements.</source>
          <target state="translated">小数点 (<bpt id="p1">*</bpt>。<ept id="p1">*</ept>) 和<bpt id="p2">*</bpt>小数位数<ept id="p2">*</ept>元素。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The "e" or "E" character, which indicates exponential notation.</source>
          <target state="translated">"E"或者"E"字符，它指示指数记数法。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>This flag by itself supports values in the form <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>E<bpt id="p2">*</bpt>digits<ept id="p2">*</ept>; additional flags are needed to successfully parse strings with such elements as positive or negative signs and decimal point symbols.</source>
          <target state="translated">此标志本身支持值的形式<bpt id="p1">*</bpt>数字<ept id="p1">*</ept>E<bpt id="p2">*</bpt>数字<ept id="p2">*</ept>; 其他标志需要为成功分析与此类元素为正或负号和小数点符号的字符串。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>开头的元素<ph id="ph1">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>结尾的元素<ph id="ph1">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>开头的元素<ph id="ph1">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>结尾的元素<ph id="ph1">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>在括号内包含的数字值的窗体中的元素。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The thousands separator (,) element.</source>
          <target state="translated">千位分隔符 （，） 元素。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The currency ($) element.</source>
          <target state="translated">货币 （$） 元素中。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All elements.</source>
          <target state="translated">所有元素。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>However, <ph id="ph1">`s`</ph> cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">但是，<ph id="ph1">`s`</ph>不能表示十六进制数或指数记数法的数字。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning or end of <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the beginning of <ph id="ph2">`s`</ph>, and the decimal point (.) symbol.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>元素的开头或末尾<ph id="ph1">`s`</ph>，<bpt id="p2">*</bpt>登录<ept id="p2">*</ept>开头<ph id="ph2">`s`</ph>，和小数点 （.） 符号。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数还可以使用指数记数法。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, thousands separator (,) and decimal point (.) elements.</source>
          <target state="translated"><ph id="ph1">`ws`</ph>， <ph id="ph2">`sign`</ph>，千位分隔符 （，） 和小数点 （.） 元素。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All elements.</source>
          <target state="translated">所有元素。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>However, <ph id="ph1">`s`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">但是，<ph id="ph1">`s`</ph>无法表示十六进制数字。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph>使用中的格式设置信息分析参数<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>初始化针对当前系统区域性的对象。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Ordinarily, if you pass the <ph id="ph1">&lt;xref:System.Double.Parse%2A?displayProperty=nameWithType&gt;</ph> method a string that is created by calling the <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method, the original <ph id="ph3">&lt;xref:System.Double&gt;</ph> value is returned.</source>
          <target state="translated">通常，如果你通过<ph id="ph1">&lt;xref:System.Double.Parse%2A?displayProperty=nameWithType&gt;</ph>方法通过调用创建的字符串<ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph>方法时，原始<ph id="ph3">&lt;xref:System.Double&gt;</ph>返回值。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>However, because of a loss of precision, the values may not be equal.</source>
          <target state="translated">但是，由于精度损失，值可能不相等。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>In addition, attempting to parse the string representation of either <ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph> throws an <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>, as the following example illustrates.</source>
          <target state="translated">此外，尝试分析的字符串表示形式是<ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph>引发<ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>，如下面的示例所示。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">如果在遇到分隔符<ph id="ph1">`s`</ph>期间执行分析操作，并适用的货币或小数位的参数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">有关分隔符的详细信息，请参阅<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method to parse the string representations of <ph id="ph2">&lt;xref:System.Double&gt;</ph> values using the en-US culture.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph>方法，以便分析的字符串表示形式<ph id="ph2">&lt;xref:System.Double&gt;</ph>值使用 EN-US 区域性。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> does not represent a number in a valid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 不表示一个有效格式的数字。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 表示一个小于 <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> 或大于 <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph> 的数字。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> includes the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 包括 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">包含要转换的数字的字符串。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">一个对象，提供有关 <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> 的区域性特定格式设置信息。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified culture-specific format to its double-precision floating-point number equivalent.</source>
          <target state="translated">将指定的区域性特定格式的数字的字符串表示形式转换为它的等效双精度浮点数。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph1">&lt;paramref name="s" /&gt;</ph> 中指定的数值或符号等效的双精度浮点数。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method is typically used to convert text that can be formatted in a variety of ways to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">此重载<ph id="ph1">&lt;xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph>方法通常用于将可在多个方面与格式设置的文本转换<ph id="ph2">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>For example, it can be used to convert the text that is entered by a user into an HTML text box to a numeric value.</source>
          <target state="translated">例如，它可以用于将转换输入的文本是由用户 HTML 文本框中为数值。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using a combination of the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flags.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数被解释结合使用<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can contain <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph> for the culture specified by <ph id="ph5">`provider`</ph>, or it can contain a string of the form:</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数可以包含<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>，或<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph>为指定的区域性<ph id="ph5">`provider`</ph>，也可以包含形式的字符串：</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>integral-digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>.<ept id="p4">*</ept>[<bpt id="p5">*</bpt>fractional-digits<ept id="p5">*</ept>]][E[<bpt id="p6">*</bpt>sign<ept id="p6">*</ept>]<bpt id="p7">*</bpt>exponential-digits<ept id="p7">*</ept>][<bpt id="p8">*</bpt>ws<ept id="p8">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>integral-digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>.<ept id="p4">*</ept>[<bpt id="p5">*</bpt>fractional-digits<ept id="p5">*</ept>]][E[<bpt id="p6">*</bpt>sign<ept id="p6">*</ept>]<bpt id="p7">*</bpt>exponential-digits<ept id="p7">*</ept>][<bpt id="p8">*</bpt>ws<ept id="p8">*</ept>]</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>Optional elements are framed in square brackets ([ and ]).</source>
          <target state="translated">可选元素括在方括号 （[和]）。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</source>
          <target state="translated">包含字词"数字"的元素包含的范围从 0 到 9 的数字字符序列。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>A series of white-space characters.</source>
          <target state="translated">一系列的空白字符。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>A negative sign symbol (-) or a positive sign symbol (+).</source>
          <target state="translated">负号符号 （-） 或正号符号 （+）。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>A series of digits ranging from 0 to 9 that specify the integral part of the number.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定数的整数部分的数字。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>Runs of <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> can be partitioned by a group-separator symbol.</source>
          <target state="translated">运行<bpt id="p1">*</bpt>整型数字<ept id="p1">*</ept>进行分区的组分隔符符号。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>For example, in some cultures a comma (,) separates groups of thousands.</source>
          <target state="translated">例如，在某些区域性使用逗号 （，） 作为千位分隔符。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> element can be absent if the string contains the <bpt id="p2">*</bpt>fractional-digits<ept id="p2">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt>整型数字<ept id="p1">*</ept>元素可以是缺少如果字符串包含<bpt id="p2">*</bpt>小数位数<ept id="p2">*</ept>元素。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">特定于区域性的小数点符号。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>A series of digits ranging from 0 to 9 that specify the fractional part of the number.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定数的小数部分的数字。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>A series of digits ranging from 0 to 9 that specify an exponent.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定指数的位数。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>For more information about numeric formats, see the <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept> topic.</source>
          <target state="translated">有关数值格式的详细信息，请参阅<bpt id="p1">[</bpt>格式化类型<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>主题。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies culture-specific information used in interpreting the format of <ph id="ph5">`s`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>实现其<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法返回<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供用于在解释的格式的区域性特定信息的对象<ph id="ph5">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>Typically, it is a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated">通常，它是<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>或<ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph> or a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> cannot be obtained, the formatting information for the current system culture is used.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>或<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>无法获取，格式设置信息使用当前系统区域性的。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>Ordinarily, if you pass the <ph id="ph1">&lt;xref:System.Double.Parse%2A?displayProperty=nameWithType&gt;</ph> method a string that is created by calling the <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method, the original <ph id="ph3">&lt;xref:System.Double&gt;</ph> value is returned.</source>
          <target state="translated">通常，如果你通过<ph id="ph1">&lt;xref:System.Double.Parse%2A?displayProperty=nameWithType&gt;</ph>方法通过调用创建的字符串<ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph>方法时，原始<ph id="ph3">&lt;xref:System.Double&gt;</ph>返回值。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>However, because of a loss of precision, the values may not be equal.</source>
          <target state="translated">但是，由于精度损失，值可能不相等。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>In addition, attempting to parse the string representation of either <ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph> throws an <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>, as the following example illustrates.</source>
          <target state="translated">此外，尝试分析的字符串表示形式是<ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph>引发<ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>，如下面的示例所示。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">如果在遇到分隔符<ph id="ph1">`s`</ph>期间执行分析操作，并适用的货币或小数位的参数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">有关分隔符的详细信息，请参阅<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>The following example is the button click event handler of a Web form.</source>
          <target state="translated">下面的示例是按钮单击事件处理程序的 Web 窗体。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>It uses the array returned by the <ph id="ph1">&lt;xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType&gt;</ph> property to determine the user's locale.</source>
          <target state="translated">它使用返回的数组<ph id="ph1">&lt;xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType&gt;</ph>属性来确定用户的区域设置。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>It then instantiates a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to that locale.</source>
          <target state="translated">它然后实例化<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>对应于该区域设置的对象。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that belongs to that <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object is then passed to the <ph id="ph3">&lt;xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method to convert the user's input to a <ph id="ph4">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>对象所属的<ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph>对象随后会传递给<ph id="ph3">&lt;xref:System.Double.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph>方法将用户输入转换为<ph id="ph4">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> does not represent a number in a valid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 不表示一个有效格式的数字。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 表示一个小于 <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> 或大于 <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph> 的数字。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">包含要转换的数字的字符串。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A bitwise combination of enumeration values that indicate the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">枚举值的按位组合，用于指示可出现在 <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> 中的样式元素。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Float" /&gt;</ph> combined with <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowThousands" /&gt;</ph>.</source>
          <target state="translated">一个用来指定的典型值为 <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Float" /&gt;</ph> 与 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowThousands" /&gt;</ph> 的组合。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">一个对象，提供有关 <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> 的区域性特定格式设置信息。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent.</source>
          <target state="translated">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效双精度浮点数。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A double-precision floating-point number that is equivalent to the numeric value or symbol specified in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph1">&lt;paramref name="s" /&gt;</ph> 中指定的数值或符号等效的双精度浮点数。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space, thousands separators, and currency symbols) that are allowed in the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph>参数定义的样式元素 (如空白、 千位分隔符和货币符号)，可以用在<ph id="ph2">`s`</ph>分析操作成功的参数。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">它必须是中的位标志的组合<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:</source>
          <target state="translated">以下<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>不支持成员：</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can contain <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph> for the culture specified by <ph id="ph5">`provider`</ph>.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数可以包含<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>，或<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph>为指定的区域性<ph id="ph5">`provider`</ph>。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, it can also take the form:</source>
          <target state="translated">根据值<ph id="ph1">`style`</ph>，它还可以采用以下形式：</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>] [<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>] [<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>integral-digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>integral-digits<ept id="p5">*</ept>[.[<bpt id="p6">*</bpt>fractional-digits<ept id="p6">*</ept>]][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential-digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>] [<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>] [<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>integral-digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>integral-digits<ept id="p5">*</ept>[.[<bpt id="p6">*</bpt>fractional-digits<ept id="p6">*</ept>]][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential-digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements framed in square brackets ([ and ]) are optional.</source>
          <target state="translated">括在方括号 （[和]） 是可选元素。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每个元素。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A series of white-space characters.</source>
          <target state="translated">一系列的空白字符。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">空格可以出现的开始处<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>标志，它可以出现在末尾<ph id="ph4">`s`</ph>如果<ph id="ph5">`style`</ph>包括<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">特定于区域性的货币符号。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">在字符串中的位置由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph>当前区域性的属性。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">当前区域性的货币符号可以出现在<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A negative sign symbol (-) or a positive sign symbol (+).</source>
          <target state="translated">负号符号 （-） 或正号符号 （+）。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The sign can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">符号可以出现的开始处<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>标志，它可以出现在末尾<ph id="ph4">`s`</ph>如果<ph id="ph5">`style`</ph>包括<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Parentheses can be used in <ph id="ph1">`s`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">可以在使用括号<ph id="ph1">`s`</ph>以指示负值，如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A series of digits ranging from 0 to 9 that specify the integral part of the number.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定数的整数部分的数字。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> element can be absent if the string contains the <bpt id="p2">*</bpt>fractional-digits<ept id="p2">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt>整型数字<ept id="p1">*</ept>元素可以是缺少如果字符串包含<bpt id="p2">*</bpt>小数位数<ept id="p2">*</ept>元素。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>,</source>
          <target state="translated">,</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific group separator.</source>
          <target state="translated">特定于区域性的组分隔符。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The current culture's group separator symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag</source>
          <target state="translated">当前区域性的组分隔符符号可以出现在<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>标志</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">特定于区域性的小数点符号。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The current culture's decimal point symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">当前区域性的小数点符号可以出现在<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A series of digits ranging from 0 to 9 that specify the fractional part of the number.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定数的小数部分的数字。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">小数位数可以出现在<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数可以表示指数记数法的数字，如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A series of digits ranging from 0 to 9 that specify an exponent.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定指数的位数。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">仅为数字的字符串 (它对应于<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>样式) 总是可以分析成功。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=nameWithType&gt;</ph> members control elements that may be present, but are not required to be present, in the input string.</source>
          <target state="translated">剩余<ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=nameWithType&gt;</ph>成员控件可能会存在，但不是需要为存在于输入字符串中的元素。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> flags affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">下表指示个别<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>标志会影响中可能存在的元素<ph id="ph2">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>NumberStyles value</source>
          <target state="translated">NumberStyles 值</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements permitted in <ph id="ph1">`s`</ph> in addition to digits</source>
          <target state="translated">元素允许在<ph id="ph1">`s`</ph>除数字之外</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> element only.</source>
          <target state="translated"><bpt id="p1">*</bpt>整型数字<ept id="p1">*</ept>仅元素。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The decimal point (<bpt id="p1">*</bpt>.<ept id="p1">*</ept>) and <bpt id="p2">*</bpt>fractional-digits<ept id="p2">*</ept> elements.</source>
          <target state="translated">小数点 (<bpt id="p1">*</bpt>。<ept id="p1">*</ept>) 和<bpt id="p2">*</bpt>小数位数<ept id="p2">*</ept>元素。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The "e" or "E" character, which indicates exponential notation.</source>
          <target state="translated">"E"或者"E"字符，它指示指数记数法。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>This flag by itself supports values in the form <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>E<bpt id="p2">*</bpt>digits<ept id="p2">*</ept>; additional flags are needed to successfully parse strings with such elements as positive or negative signs and decimal point symbols.</source>
          <target state="translated">此标志本身支持值的形式<bpt id="p1">*</bpt>数字<ept id="p1">*</ept>E<bpt id="p2">*</bpt>数字<ept id="p2">*</ept>; 其他标志需要为成功分析与此类元素为正或负号和小数点符号的字符串。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>开头的元素<ph id="ph1">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>结尾的元素<ph id="ph1">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>开头的元素<ph id="ph1">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>结尾的元素<ph id="ph1">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>在括号内包含的数字值的窗体中的元素。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The thousands separator (,) element.</source>
          <target state="translated">千位分隔符 （，） 元素。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The currency ($) element.</source>
          <target state="translated">货币 （$） 元素中。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>All elements.</source>
          <target state="translated">所有元素。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>However, <ph id="ph1">`s`</ph> cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">但是，<ph id="ph1">`s`</ph>不能表示十六进制数或指数记数法的数字。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning or end of <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the beginning of <ph id="ph2">`s`</ph>, and the decimal point (.) symbol.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>元素的开头或末尾<ph id="ph1">`s`</ph>，<bpt id="p2">*</bpt>登录<ept id="p2">*</ept>开头<ph id="ph2">`s`</ph>，和小数点 （.） 符号。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数还可以使用指数记数法。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, thousands separator (,) and decimal point (.) elements.</source>
          <target state="translated"><ph id="ph1">`ws`</ph>， <ph id="ph2">`sign`</ph>，千位分隔符 （，） 和小数点 （.） 元素。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>All elements.</source>
          <target state="translated">所有元素。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>However, <ph id="ph1">`s`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">但是，<ph id="ph1">`s`</ph>无法表示十六进制数字。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies culture-specific information used in interpreting the format of <ph id="ph5">`s`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>实现其<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法返回<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供用于在解释的格式的区域性特定信息的对象<ph id="ph5">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Typically, it is a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated">通常，它是<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>或<ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph> or a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> cannot be obtained, the formatting information for the current system culture is used.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>或<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>无法获取，格式设置信息使用当前系统区域性的。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Ordinarily, if you pass the <ph id="ph1">&lt;xref:System.Double.Parse%2A?displayProperty=nameWithType&gt;</ph> method a string that is created by calling the <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method, the original <ph id="ph3">&lt;xref:System.Double&gt;</ph> value is returned.</source>
          <target state="translated">通常，如果你通过<ph id="ph1">&lt;xref:System.Double.Parse%2A?displayProperty=nameWithType&gt;</ph>方法通过调用创建的字符串<ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph>方法时，原始<ph id="ph3">&lt;xref:System.Double&gt;</ph>返回值。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>However, because of a loss of precision, the values may not be equal.</source>
          <target state="translated">但是，由于精度损失，值可能不相等。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>In addition, attempting to parse the string representation of either <ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph> throws an <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>, as the following example illustrates.</source>
          <target state="translated">此外，尝试分析的字符串表示形式是<ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph>引发<ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>，如下面的示例所示。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">如果在遇到分隔符<ph id="ph1">`s`</ph>期间执行分析操作，并适用的货币或小数位的参数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">有关分隔符的详细信息，请参阅<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> method to assign several string representations of temperature values to a <ph id="ph2">`Temperature`</ph> object.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph>方法来分配多个字符串表示形式之间实现温度值与<ph id="ph2">`Temperature`</ph>对象。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> does not represent a numeric value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 不代表数字值。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 为 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 表示一个小于 <ph id="ph2">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> 或大于 <ph id="ph3">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph> 的数字。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="F:System.Double.PositiveInfinity">
          <source>Represents positive infinity.</source>
          <target state="translated">表示正无穷。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="F:System.Double.PositiveInfinity">
          <source>This field is constant.</source>
          <target state="translated">此字段为常数。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.PositiveInfinity">
          <source>The value of this constant is the result of dividing a positive number by zero.</source>
          <target state="translated">此常量的值为正数值除以零的结果。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.PositiveInfinity">
          <source>This constant is returned when the result of an operation is greater than <ph id="ph1">&lt;xref:System.Double.MaxValue&gt;</ph>.</source>
          <target state="translated">操作的结果不大于时返回此常量<ph id="ph1">&lt;xref:System.Double.MaxValue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.PositiveInfinity">
          <source>Use <ph id="ph1">&lt;xref:System.Double.IsPositiveInfinity%2A&gt;</ph> to determine whether a value evaluates to positive infinity.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Double.IsPositiveInfinity%2A&gt;</ph>以确定值是否计算为正无穷大。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Double.PositiveInfinity">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph>:</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Double.PositiveInfinity&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the current instance is not zero; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果当前实例的值不为零，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Double&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Double%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Double%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated">当前实例的值，已转换为 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Double&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.Double%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToByte%28System.Double%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">不支持此转换。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">尝试使用此方法将引发 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">不支持此转换。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">不返回任何值。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">在所有情况下。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">不支持此转换。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph></source>
          <target state="translated">尝试使用此方法将引发 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">不支持此转换。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">不返回任何值。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">在所有情况下。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">当前实例的值，已转换为 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Double&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToDecimal%28System.Double%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The value of the current instance, unchanged.</source>
          <target state="translated">当前实例的值，未更改。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Double&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</source>
          <target state="translated">当前实例的值，已转换为 <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Double&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.Double%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.Double%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">当前实例的值，已转换为 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Double&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Double%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Double%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">当前实例的值，已转换为 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Double&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Double%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Double%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>.</source>
          <target state="translated">当前实例的值，已转换为 <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Double&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Double%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Double%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">当前实例的值，已转换为 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Double&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Double%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Double%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The type to which to convert this <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值要转换为的类型。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> implementation that supplies culture-specific information about the format of the returned value.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> 实现，提供有关返回值格式的区域性特定信息。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The value of the current instance, converted to <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">当前实例的值，已转换为 <ph id="ph1">&lt;paramref name="type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Double&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) <ph id="ph3">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">`static`</ph>(<ph id="ph2">`Shared`</ph>在 Visual Basic 中)<ph id="ph3">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>.</source>
          <target state="translated">当前实例的值，已转换为 <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Double&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Double%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Double%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">当前实例的值，已转换为 <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Double&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Double%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Double%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">当前实例的值，已转换为 <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Double&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Double%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Double%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="T:System.Double">
          <source>Converts the numeric value of this instance to its equivalent string representation.</source>
          <target state="translated">将此实例的数值转换为其等效的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Double.ToString">
          <source>Converts the numeric value of this instance to its equivalent string representation.</source>
          <target state="translated">将此实例的数值转换为其等效的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Double.ToString">
          <source>The string representation of the value of this instance.</source>
          <target state="translated">此实例的值的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Double.ToString&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value in the default ("G", or general) format of the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.ToString&gt;</ph>方法格式<ph id="ph2">&lt;xref:System.Double&gt;</ph>默认值 （"G"或常规） 中的值的当前区域性的格式。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>If you want to specify a different format, precision, or culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">如果你想要指定不同的格式、 精度或区域性，使用的其他重载<ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph>方法，如下所示：</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>To use format</source>
          <target state="translated">若要使用格式</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>For culture</source>
          <target state="translated">区域性</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>Use the overload</source>
          <target state="translated">使用的重载</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>Default ("G") format</source>
          <target state="translated">默认值 ("G") 格式</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>A specific culture</source>
          <target state="translated">特定区域性</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>A specific format or precision</source>
          <target state="translated">特定的格式或精度</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>Default (current) culture</source>
          <target state="translated">默认值 （当前） 区域性</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>A specific format or precision</source>
          <target state="translated">特定的格式或精度</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>A specific culture</source>
          <target state="translated">特定区域性</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>The return value can be <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>, or a string of the form:</source>
          <target state="translated">返回值可以是<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>，或格式的字符串：</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</source>
          <target state="translated">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>Optional elements are framed in square brackets ([ and ]).</source>
          <target state="translated">可选元素括在方括号 （[和]）。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</source>
          <target state="translated">包含字词"数字"的元素包含的范围从 0 到 9 的数字字符序列。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>The elements listed in the following table are supported.</source>
          <target state="translated">支持下表中列出的元素。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>A negative sign or positive sign symbol.</source>
          <target state="translated">负号或正号符号。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>A series of digits specifying the integral part of the number.</source>
          <target state="translated">一系列的指定数的整数部分的数字。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>Integral-digits can be absent if there are fractional-digits.</source>
          <target state="translated">整型数字可以是 absent 是否存在小数位数。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>'<bpt id="p1">*</bpt>.<ept id="p1">*</ept>'</source>
          <target state="translated">'<bpt id="p1">*</bpt>.<ept id="p1">*</ept>'</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">特定于区域性的小数点符号。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>A series of digits specifying the fractional part of the number.</source>
          <target state="translated">指定数字的小数部分位数一系列。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>'<bpt id="p1">*</bpt>e<ept id="p1">*</ept>'</source>
          <target state="translated">'<bpt id="p1">*</bpt>e<ept id="p1">*</ept>'</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>A lowercase character 'e', indicating exponential (scientific) notation.</source>
          <target state="translated">小写字符 e，该值指示指数 （科学型） 表示法。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>A series of digits specifying an exponent.</source>
          <target state="translated">一系列的指定指数的位数。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>Some examples of the return value are "100", "-123,456,789", "123.45e+6", "500", "3.1416", "600", "-0.123", and "-Infinity".</source>
          <target state="translated">返回值的一些示例为"100"、"-123456789"、"123.45 e + 6"、"500"、"3.1416"、"600"、"-0.123"和"-Infinity"。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">有关数字格式说明符的详细信息，请参阅<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自定义数字格式字符串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">有关格式设置的详细信息，请参阅<bpt id="p1">[</bpt>格式化类型<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>The following example uses the default <ph id="ph1">&lt;xref:System.Double.ToString?displayProperty=nameWithType&gt;</ph> method to display the string representations of a number of <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">下面的示例使用默认值<ph id="ph1">&lt;xref:System.Double.ToString?displayProperty=nameWithType&gt;</ph>方法以显示的字符串表示形式的大量<ph id="ph2">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString">
          <source>The following example illustrates the use of <ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">一个提供区域性特定的格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</source>
          <target state="translated">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated">此实例的值的字符串表示形式，由 <ph id="ph1">&lt;paramref name="provider" /&gt;</ph> 指定。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Double.ToString%28System.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value in the default ("G", or general) format of a specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.ToString%28System.IFormatProvider%29&gt;</ph>方法格式<ph id="ph2">&lt;xref:System.Double&gt;</ph>默认值 （"G"或常规） 中的值指定区域性的格式。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>If you want to specify a different format or culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">如果你想要指定其他文件格式或区域性，使用的其他重载<ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph>方法，如下所示：</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">若要使用格式</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">区域性</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">使用的重载</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">默认值 ("G") 格式</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>Default (current)</source>
          <target state="translated">默认值 （当前）</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>A specific format or precision</source>
          <target state="translated">特定的格式或精度</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">默认值 （当前） 区域性</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>A specific format or precision</source>
          <target state="translated">特定的格式或精度</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">特定区域性</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>The return value can be <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>, or a string of the form:</source>
          <target state="translated">返回值可以是<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>，或格式的字符串：</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</source>
          <target state="translated">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>Optional elements are framed in square brackets ([ and ]).</source>
          <target state="translated">可选元素括在方括号 （[和]）。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</source>
          <target state="translated">包含字词"数字"的元素包含的范围从 0 到 9 的数字字符序列。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>The elements listed in the following table are supported.</source>
          <target state="translated">支持下表中列出的元素。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>A negative sign or positive sign symbol.</source>
          <target state="translated">负号或正号符号。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>A series of digits specifying the integral part of the number.</source>
          <target state="translated">一系列的指定数的整数部分的数字。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>Integral-digits can be absent if there are fractional-digits.</source>
          <target state="translated">整型数字可以是 absent 是否存在小数位数。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>'<bpt id="p1">*</bpt>.<ept id="p1">*</ept>'</source>
          <target state="translated">'<bpt id="p1">*</bpt>.<ept id="p1">*</ept>'</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">特定于区域性的小数点符号。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>A series of digits specifying the fractional part of the number.</source>
          <target state="translated">指定数字的小数部分位数一系列。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>'<bpt id="p1">*</bpt>e<ept id="p1">*</ept>'</source>
          <target state="translated">'<bpt id="p1">*</bpt>e<ept id="p1">*</ept>'</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>A lowercase character 'e', indicating exponential (scientific) notation.</source>
          <target state="translated">小写字符 e，该值指示指数 （科学型） 表示法。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>A series of digits specifying an exponent.</source>
          <target state="translated">一系列的指定指数的位数。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>Some examples of the return value are "100", "-123,456,789", "123.45e+6", "500", "3.1416", "600", "-0.123", and "-Infinity".</source>
          <target state="translated">返回值的一些示例为"100"、"-123456789"、"123.45 e + 6"、"500"、"3.1416"、"600"、"-0.123"和"-Infinity"。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>This instance is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">此实例将使用通用数值格式说明符 ("G") 格式。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">有关数字格式说明符的详细信息，请参阅<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自定义数字格式字符串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">有关格式设置的详细信息，请参阅<bpt id="p1">[</bpt>格式化类型<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>实现其<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法返回<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>Typically, <ph id="ph1">`provider`</ph> is a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">通常情况下，<ph id="ph1">`provider`</ph>是<ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph>对象或<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in formatting.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数提供区域性特定信息设置格式时使用。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the return value is formatted using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>，返回值的格式使用<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>为当前区域性的对象。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>The following example displays the string representation of two <ph id="ph1">&lt;xref:System.Double&gt;</ph> values using <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects that represent several different cultures.</source>
          <target state="translated">下面的示例显示的字符串表示形式两个<ph id="ph1">&lt;xref:System.Double&gt;</ph>值使用<ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph>表示几种不同区域性的对象。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.IFormatProvider)">
          <source>The following example illustrates the use of <ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.String&gt;</ph> and an <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph> as parameters.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph>，采用<ph id="ph2">&lt;xref:System.String&gt;</ph>和<ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph>作为参数。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Double.ToString(System.String)">
          <source>A numeric format string.</source>
          <target state="translated">一个数值格式字符串。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Double.ToString(System.String)">
          <source>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</source>
          <target state="translated">使用指定的格式，将此实例的数值转换为它的等效字符串表示形式。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Double.ToString(System.String)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph>.</source>
          <target state="translated">此实例的值的字符串表示形式，由 <ph id="ph1">&lt;paramref name="format" /&gt;</ph> 指定。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Double.ToString%28System.String%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value in a specified format by using the conventions of the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.ToString%28System.String%29&gt;</ph>方法格式<ph id="ph2">&lt;xref:System.Double&gt;</ph>通过使用当前区域性的约定指定的格式的值。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>If you want to specify a different format or culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">如果你想要指定其他文件格式或区域性，使用的其他重载<ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph>方法，如下所示：</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>To use format</source>
          <target state="translated">若要使用格式</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>For culture</source>
          <target state="translated">区域性</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>Use the overload</source>
          <target state="translated">使用的重载</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>Default ("G") format</source>
          <target state="translated">默认值 ("G") 格式</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>Default (current) culture</source>
          <target state="translated">默认值 （当前） 区域性</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>Default ("G") format</source>
          <target state="translated">默认值 ("G") 格式</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">特定区域性</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>A specific format or precision</source>
          <target state="translated">特定的格式或精度</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">特定区域性</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>The return value can be <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>, or the string representation of a number, as specified by <ph id="ph4">`format`</ph>.</source>
          <target state="translated">返回值可以是<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>，或一个数字，按指定的字符串表示<ph id="ph4">`format`</ph>。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier except for D and X, as well as any combination of custom numeric format specifiers.</source>
          <target state="translated"><ph id="ph1">`format`</ph>参数可以是任何有效的标准数字格式说明符 （D 和 X，除外） 以及自定义数字格式说明符的任意组合。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string, the return value is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">如果<ph id="ph1">`format`</ph>是<ph id="ph2">`null`</ph>或空字符串，返回值格式与常规的数字格式说明符 ("G")。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">有关数字格式说明符的详细信息，请参阅<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自定义数字格式字符串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">有关格式设置的详细信息，请参阅<bpt id="p1">[</bpt>格式化类型<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>By default, the return value only contains 15 digits of precision although a maximum of 17 digits is maintained internally.</source>
          <target state="translated">默认情况下，返回的值仅包含 15 位精度但内部维护最大 17 位。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>If the value of this instance has greater than 15 digits, <ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph> returns <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph> instead of the expected number.</source>
          <target state="translated">如果此实例的值大于 15 位，<ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph>返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>而不是预期的版本号。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>If you require more precision, specify <ph id="ph1">`format`</ph> with the "G17" format specification, which always returns 17 digits of precision, or "R", which returns 15 digits if the number can be represented with that precision or 17 digits if the number can only be represented with maximum precision.</source>
          <target state="translated">如果需要更高的精度，指定<ph id="ph1">`format`</ph>使用"G17"格式规范中，始终返回 17 位精度或"R"，它返回 15 位如果可以用该精度或 17 位表示数，如果该数字仅可以是表示与最大精度。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>The following example defines a numeric value and formats it as a currency value by using the "C" standard numeric format string and as a numeric value to three decimal places by using the "N" standard numeric format string.</source>
          <target state="translated">下面的示例定义一个数值，并将其格式化为货币值使用"C"标准数字格式字符串为三个小数位的数字值以及通过使用"N"标准数字格式字符串。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>The result strings are formatted by using the conventions of the en-US culture.</source>
          <target state="translated">结果字符串设置格式的使用 EN-US 区域性的约定。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>For more information on numeric format strings, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数字格式字符串的详细信息，请参阅<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自定义数字格式字符串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>The following example displays several <ph id="ph1">&lt;xref:System.Double&gt;</ph> values using the supported standard numeric format specifiers together with three custom numeric format strings.</source>
          <target state="translated">下面的示例显示几个<ph id="ph1">&lt;xref:System.Double&gt;</ph>值使用以及三个自定义数字格式字符串的支持标准数字格式说明符。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>One of those custom format strings illustrates how to pad a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value with leading zeros.</source>
          <target state="translated">这些自定义格式字符串中的一个演示如何以填充<ph id="ph1">&lt;xref:System.Single&gt;</ph>用前导零的值。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>In addition, the example uses precision specifiers with each standard format specifier except for "R".</source>
          <target state="translated">此外，该示例使用"R"之外的每个标准格式说明符使用精度说明符。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>The values of the precision specifiers range from 0 to 3.</source>
          <target state="translated">精度说明符的范围从 0 到 3 的值。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>To convert the numeric values to strings, the example uses the formatting conventions of the en-US culture.</source>
          <target state="translated">若要将数字的值转换为字符串，该示例使用 EN-US 区域性的格式设置约定。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="M:System.Double.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 无效。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>In some cases, <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values formatted with the "R" standard numeric format string do not successfully round-trip if compiled using the <ph id="ph2">&lt;see langword="/platform:x64" /&gt;</ph> or <ph id="ph3">&lt;see langword="/platform:anycpu" /&gt;</ph> switches and run on 64-bit systems.</source>
          <target state="translated">在某些情况下，如果使用“R”标准数字格式字符串格式化的 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值使用 <ph id="ph2">&lt;see langword="/platform:x64" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="/platform:anycpu" /&gt;</ph> 交换机编译并在 64 位系统上运行，则该值将无法成功往返。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>To work around this problem, you can format <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values by using the "G17" standard numeric format string.</source>
          <target state="translated">若要解决此问题，可以使用“G17”标准数字格式字符串格式化 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String)">
          <source>The following example uses the "R" format string with a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value that does not round-trip successfully, and also uses the "G17" format string to successfully round-trip the original value.</source>
          <target state="translated">以下示例将“R”格式字符串与无法成功往返的 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值配合使用，并使用“G17”格式字符串以成功往返原始值。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>A numeric format string.</source>
          <target state="translated">一个数值格式字符串。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">一个提供区域性特定的格式设置信息的对象。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</source>
          <target state="translated">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph> and <ph id="ph2">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated">此实例的值的字符串表示形式，由 <ph id="ph1">&lt;paramref name="format" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="provider" /&gt;</ph> 指定。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value in a specified format of a specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph>方法格式<ph id="ph2">&lt;xref:System.Double&gt;</ph>采用指定区域性的指定格式的值。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>If you want to specify a different format or culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">如果你想要指定其他文件格式或区域性，使用的其他重载<ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph>方法，如下所示：</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">若要使用格式</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">区域性</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">使用的重载</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">默认值 ("G") 格式</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">默认值 （当前） 区域性</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">默认值 ("G") 格式</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">特定区域性</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>A specific format or precision</source>
          <target state="translated">特定的格式或精度</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">默认值 （当前） 区域性</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>The return value can be <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>, or the string representation of a number, as specified by <ph id="ph4">`format`</ph>.</source>
          <target state="translated">返回值可以是<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>，或一个数字，按指定的字符串表示<ph id="ph4">`format`</ph>。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier except for D and X, as well as any combination of custom numeric format specifiers.</source>
          <target state="translated"><ph id="ph1">`format`</ph>参数可以是任何有效的标准数字格式说明符 （D 和 X，除外） 以及自定义数字格式说明符的任意组合。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">如果<ph id="ph1">`format`</ph>是<ph id="ph2">`null`</ph>或空字符串，此实例的返回值格式与常规的数字格式说明符 ("G")。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">有关数字格式说明符的详细信息，请参阅<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自定义数字格式字符串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">有关格式设置的详细信息，请参阅<bpt id="p1">[</bpt>格式化类型<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>实现其<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法返回<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>Typically, <ph id="ph1">`provider`</ph> is a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">通常情况下，<ph id="ph1">`provider`</ph>是<ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph>对象或<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in formatting.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数提供区域性特定信息设置格式时使用。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the return value is formatted using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>，返回值的格式使用<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>为当前区域性的对象。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>By default, the return value only contains 15 digits of precision although a maximum of 17 digits is maintained internally.</source>
          <target state="translated">默认情况下，返回的值仅包含 15 位精度但内部维护最大 17 位。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>If the value of this instance has greater than 15 digits, <ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph> returns <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph> instead of the expected number.</source>
          <target state="translated">如果此实例的值大于 15 位，<ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph>返回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>而不是预期的版本号。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>If you require more precision, specify <ph id="ph1">`format`</ph> with the "G17" format specification, which always returns 17 digits of precision, or "R", which returns 15 digits if the number can be represented with that precision or 17 digits if the number can only be represented with maximum precision.</source>
          <target state="translated">如果需要更高的精度，指定<ph id="ph1">`format`</ph>使用"G17"格式规范中，始终返回 17 位精度或"R"，它返回 15 位如果可以用该精度或 17 位表示数，如果该数字仅可以是表示与最大精度。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>The following example displays a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value using each of the supported standard numeric format specifiers for several different cultures.</source>
          <target state="translated">下面的示例显示<ph id="ph1">&lt;xref:System.Double&gt;</ph>值的每个支持标准数字格式说明符用于多个不同的区域性。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>The following example illustrates the use of <ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph>, taking a <ph id="ph2">&lt;xref:System.String&gt;</ph> and an <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph> as parameters.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Double.ToString%2A&gt;</ph>，采用<ph id="ph2">&lt;xref:System.String&gt;</ph>和<ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph>作为参数。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>In some cases, <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values formatted with the "R" standard numeric format string do not successfully round-trip if compiled using the <ph id="ph2">&lt;see langword="/platform:x64" /&gt;</ph> or <ph id="ph3">&lt;see langword="/platform:anycpu" /&gt;</ph> switches and run on 64-bit systems.</source>
          <target state="translated">在某些情况下，如果使用“R”标准数字格式字符串格式化的 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值使用 <ph id="ph2">&lt;see langword="/platform:x64" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="/platform:anycpu" /&gt;</ph> 交换机编译并在 64 位系统上运行，则该值将无法成功往返。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>To work around this problem, you can format <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values by using the "G17" standard numeric format string.</source>
          <target state="translated">若要解决此问题，可以使用“G17”标准数字格式字符串格式化 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.ToString(System.String,System.IFormatProvider)">
          <source>The following example uses the "R" format string with a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value that does not round-trip successfully, and also uses the "G17" format string to successfully round-trip the original value.</source>
          <target state="translated">以下示例将“R”格式字符串与无法成功往返的 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值配合使用，并使用“G17”格式字符串以成功往返原始值。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="T:System.Double">
          <source>Converts the string representation of a number to its double-precision floating-point number equivalent.</source>
          <target state="translated">将数字的字符串表示形式转换为它的等效双精度浮点数。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="T:System.Double">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          <target state="translated">一个指示转换是否成功的返回值。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>A string containing a number to convert.</source>
          <target state="translated">包含要转换的数字的字符串。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>When this method returns, contains the double-precision floating-point number equivalent of the <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> parameter, if the conversion succeeded, or zero if the conversion failed.</source>
          <target state="translated">当此方法返回时，如果转换成功，则包含与 <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> 参数等效的双精度浮点数；如果转换失败，则包含零。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, is not a number in a valid format, or represents a number less than <ph id="ph3">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> 参数为 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>、不是有效格式的数字，或者表示的数字小于 <ph id="ph3">&lt;see cref="F:System.Double.MinValue" /&gt;</ph> 或大于 <ph id="ph4">&lt;see cref="F:System.Double.MaxValue" /&gt;</ph>，则转换失败。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>This parameter is passed uninitialized; any value originally supplied in <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> will be overwritten.</source>
          <target state="translated">此参数未经初始化即进行传递；最初在 <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> 中提供的任何值都会被覆盖。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>Converts the string representation of a number to its double-precision floating-point number equivalent.</source>
          <target state="translated">将数字的字符串表示形式转换为它的等效双精度浮点数。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          <target state="translated">一个指示转换是否成功的返回值。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 成功转换，则为 <ph id="ph2">&lt;paramref name="s" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>This overload differs from the <ph id="ph1">&lt;xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</source>
          <target state="translated">此重载区别<ph id="ph1">&lt;xref:System.Double.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph>通过返回一个布尔值，该值指示是否分析操作成功，而不是返回的已分析的数字值的方法。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>It eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> in the event that <ph id="ph2">`s`</ph> is invalid and cannot be successfully parsed.</source>
          <target state="translated">不必使用异常处理来测试是否<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>的事件中<ph id="ph2">`s`</ph>无效，无法成功分析。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>The <ph id="ph1">`s`</ph> parameter can contain the current culture's <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph> (the string comparison is case-sensitive), or a string of the form:</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数可以包含当前区域性的<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph> （字符串比较是区分大小写） 或格式的字符串：</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>[ws][sign][integral-digits,]integral-digits[.[fractional-digits]][e[sign]exponential-digits][ws]</source>
          <target state="translated">[ws][sign][integral-digits,]integral-digits[.[fractional-digits]][e[sign]exponential-digits][ws]</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">方括号中的元素是可选的。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每个元素。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>A series of white-space characters.</source>
          <target state="translated">一系列的空白字符。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>A negative sign or positive sign symbol.</source>
          <target state="translated">负号或正号符号。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>A series of numeric characters ranging from 0 to 9 that specify the integral part of the number.</source>
          <target state="translated">一系列数字字符，范围从 0 到 9 的指定数的整数部分。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>Integral-digits can be absent if there are fractional-digits.</source>
          <target state="translated">整型数字可以是 absent 是否存在小数位数。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>，<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>A culture-specific group separator symbol.</source>
          <target state="translated">区域性特定的组分隔符符号。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">特定于区域性的小数点符号。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>A series of numeric characters ranging from 0 to 9 that specify the fractional part of the number.</source>
          <target state="translated">一系列数字字符，范围从 0 到 9 的指定数的小数部分。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source><bpt id="p1">*</bpt>E<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>E<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>An uppercase or lowercase character 'e', that indicates exponential (scientific) notation.</source>
          <target state="translated">一个大写或小写字符 e 指示指数 （科学型） 表示法。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>A series of numeric characters ranging from 0 to 9 that specify an exponent.</source>
          <target state="translated">一系列数字字符，范围从 0 到 9 的指定指数。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>For more information about numeric formats, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">有关数值格式的详细信息，请参阅<bpt id="p1">[</bpt>格式化类型<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted by using a combination of the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flags.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数被解释的结合使用<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>This means that white space and thousands separators are allowed but currency symbols are not.</source>
          <target state="translated">这意味着该空白和千位分隔符可以但不是货币符号。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in <ph id="ph1">`s`</ph>, use the <ph id="ph2">&lt;xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType&gt;</ph> method overload.</source>
          <target state="translated">若要显式定义的元素 (如货币符号、 千位分隔符和空白区域)，可出现在<ph id="ph1">`s`</ph>，使用<ph id="ph2">&lt;xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType&gt;</ph>方法重载。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph>使用中的格式设置信息分析参数<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>初始化针对当前系统区域性的对象。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>To parse a string using the formatting information of some other specified culture, use the <ph id="ph1">&lt;xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType&gt;</ph> method overload.</source>
          <target state="translated">为分析字符串使用的格式信息的一些其他指定区域性，请使用<ph id="ph1">&lt;xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType&gt;</ph>方法重载。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>Ordinarily, if you pass the <ph id="ph1">&lt;xref:System.Double.TryParse%2A?displayProperty=nameWithType&gt;</ph> method a string that is created by calling the <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method, the original <ph id="ph3">&lt;xref:System.Double&gt;</ph> value is returned.</source>
          <target state="translated">通常，如果你通过<ph id="ph1">&lt;xref:System.Double.TryParse%2A?displayProperty=nameWithType&gt;</ph>方法通过调用创建的字符串<ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph>方法时，原始<ph id="ph3">&lt;xref:System.Double&gt;</ph>返回值。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>However, because of a loss of precision, the values may not be equal.</source>
          <target state="translated">但是，由于精度损失，值可能不相等。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>In addition, attempting to parse the string representation of either <ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph> throws an <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>, as the following example illustrates.</source>
          <target state="translated">此外，尝试分析的字符串表示形式是<ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph>引发<ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>，如下面的示例所示。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">如果在遇到分隔符<ph id="ph1">`s`</ph>期间执行分析操作，并在十进制和组分隔符的参数相同，则分析操作假定该分隔符是小数分隔符，而不是组分隔符。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">有关分隔符的详细信息，请参阅<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29&gt;</ph> method to convert the string representations of numeric values to <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29&gt;</ph>方法将转换的字符串表示形式个数值赋给<ph id="ph2">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Double@)">
          <source>It assumes that en-US is the current culture.</source>
          <target state="translated">它假设该 EN-US 当前区域性。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>A string containing a number to convert.</source>
          <target state="translated">包含要转换的数字的字符串。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> values that indicates the permitted format of <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 值的按位组合，指示 <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> 的允许格式。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Float" /&gt;</ph> combined with <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowThousands" /&gt;</ph>.</source>
          <target state="translated">一个用来指定的典型值为 <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Float" /&gt;</ph> 与 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowThousands" /&gt;</ph> 的组合。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> that supplies culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph>，它提供有关 <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> 的区域性特定格式设置信息。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>When this method returns, contains a double-precision floating-point number equivalent of the numeric value or symbol contained in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>, if the conversion succeeded, or zero if the conversion failed.</source>
          <target state="translated">当此方法返回时，如果转换成功，则包含与 <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> 中所包含的数值或符号等效的双精度浮点数；如果转换失败，则包含零。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, is not in a format compliant with <bpt id="p2">&lt;c&gt;</bpt>style<ept id="p2">&lt;/c&gt;</ept>, represents a number less than <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>, or if <bpt id="p3">&lt;c&gt;</bpt>style<ept id="p3">&lt;/c&gt;</ept> is not a valid combination of <ph id="ph5">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> enumerated constants.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> 参数为 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或为 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>、格式不符合 <bpt id="p2">&lt;c&gt;</bpt>style<ept id="p2">&lt;/c&gt;</ept>、表示的数小于 <ph id="ph3">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph> 或大于 <ph id="ph4">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>，或者 <bpt id="p3">&lt;c&gt;</bpt>style<ept id="p3">&lt;/c&gt;</ept> 不是 <ph id="ph5">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 枚举的常量的有效组合，则转换失败。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>This parameter is passed uninitialized; any value originally supplied in <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> will be overwritten.</source>
          <target state="translated">此参数未经初始化即进行传递；最初在 <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> 中提供的任何值都会被覆盖。</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>Converts the string representation of a number in a specified style and culture-specific format to its double-precision floating-point number equivalent.</source>
          <target state="translated">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效双精度浮点数。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          <target state="translated">一个指示转换是否成功的返回值。</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 成功转换，则为 <ph id="ph2">&lt;paramref name="s" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <ph id="ph1">&lt;xref:System.Double.TryParse%2A&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> method, except this method does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.TryParse%2A&gt;</ph>方法就像是<ph id="ph2">&lt;xref:System.Double.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph>方法，但如果转换失败，此方法不会引发异常。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>If the conversion succeeds, the return value is <ph id="ph1">`true`</ph> and the <ph id="ph2">`result`</ph> parameter is set to the outcome of the conversion.</source>
          <target state="translated">如果转换成功，则返回值是<ph id="ph1">`true`</ph>和<ph id="ph2">`result`</ph>参数设置为转换的结果。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>If the conversion fails, the return value is <ph id="ph1">`false`</ph> and the <ph id="ph2">`result`</ph> parameter is set to zero.</source>
          <target state="translated">如果转换失败，返回值是<ph id="ph1">`false`</ph>和<ph id="ph2">`result`</ph>参数设置为零。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>This eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> in the event that <ph id="ph2">`s`</ph> is invalid and cannot be successfully parsed.</source>
          <target state="translated">这消除了需要使用异常处理来测试是否<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>的事件中<ph id="ph2">`s`</ph>无效，无法成功分析。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the allowable format of the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph>参数定义的允许的格式<ph id="ph2">`s`</ph>分析操作成功的参数。</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">它必须是中的位标志的组合<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The following <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:</source>
          <target state="translated">以下<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>不支持成员：</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <ph id="ph1">`s`</ph> parameter can contain <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph> for the culture indicated by <ph id="ph5">`provider`</ph>.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数可以包含<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>，或<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph>由指定的区域性<ph id="ph5">`provider`</ph>。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>In addition, depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">此外，根据值<ph id="ph1">`style`</ph>、<ph id="ph2">`s`</ph>参数可能包括以下元素：</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>[ws] [$] [sign][integral-digits,]integral-digits[.fractional-digits][e[sign]exponential-digits][ws]</source>
          <target state="translated">[ws] [$] [sign][integral-digits,]integral-digits[.fractional-digits][e[sign]exponential-digits][ws]</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">方括号 ([ and ]) 中的元素是可选的。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每个元素。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>Optional white space.</source>
          <target state="translated">可选的空白区域。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">空格可以出现的开始处<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>It can appear at the end of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">它可以在末尾显示<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">特定于区域性的货币符号。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> method of the <ph id="ph5">`provider`</ph> parameter.</source>
          <target state="translated">在字符串中的位置由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph>属性<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>返回对象<ph id="ph4">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph>方法<ph id="ph5">`provider`</ph>参数。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">货币符号可以出现在<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>An optional sign.</source>
          <target state="translated">一个可选符号后。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The sign can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">符号可以出现的开始处<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>标志，它可以出现在末尾<ph id="ph4">`s`</ph>如果<ph id="ph5">`style`</ph>包括<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>Parentheses can be used in <ph id="ph1">`s`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">可以在使用括号<ph id="ph1">`s`</ph>以指示负值，如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>A series of digits ranging from 0 to 9 that specify the integral part of the number.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定数的整数部分的数字。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>Integral-digits can be absent if there are fractional-digits.</source>
          <target state="translated">整型数字可以是 absent 是否存在小数位数。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>，<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">特定于区域性的千位分隔符符号。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The current culture's thousands separator symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">当前区域性的千位分隔符符号可以出现在<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">特定于区域性的小数点符号。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The current culture's decimal point symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">当前区域性的小数点符号可以出现在<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>A series of digits ranging from 0 to 9 that specify the fractional part of the number.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定数的小数部分的数字。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">小数位数可以出现在<ph id="ph1">`s`</ph>如果<ph id="ph2">`style`</ph>包括<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The e or E character, which indicates that <ph id="ph1">`s`</ph> can represent a number using exponential notation.</source>
          <target state="translated">E 或 E 字符，指示<ph id="ph1">`s`</ph>可以表示的数字使用指数记数法。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if style includes the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数可以表示指数记数法的数字，如果 style 包含<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>标志。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>A series of digits ranging from 0 to 9 that specify an exponent.</source>
          <target state="translated">一系列的范围从 0 到 9 的指定指数的位数。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">仅为数字的字符串 (它对应于<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>样式) 总是可以分析成功。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=nameWithType&gt;</ph> members control elements that may be but are not required to be present in the input string.</source>
          <target state="translated">剩余<ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=nameWithType&gt;</ph>成员控件可能但不是需要输入字符串中存在的元素。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> flags affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">下表指示个别<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>标志会影响中可能存在的元素<ph id="ph2">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>NumberStyles value</source>
          <target state="translated">NumberStyles 值</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">除数字之外的 s 中允许的元素</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> element only.</source>
          <target state="translated"><bpt id="p1">*</bpt>整型数字<ept id="p1">*</ept>仅元素。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>and <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">和<bpt id="p1">*</bpt>小数位数<ept id="p1">*</ept>元素。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数还可以使用指数记数法。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>This flag by itself supports values in the form <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept>E<bpt id="p2">*</bpt>exponential-digits<ept id="p2">*</ept>; additional flags are needed to successfully parse strings in exponential notation with such elements as positive or negative signs and decimal point symbols.</source>
          <target state="translated">此标志本身支持值的形式<bpt id="p1">*</bpt>整型数字<ept id="p1">*</ept>E<bpt id="p2">*</bpt>指数数字<ept id="p2">*</ept>; 其他标志需要为成功分析字符串中与此类元素作为指数记数法正或负号和小数点符号。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>开头的元素<ph id="ph1">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>结尾的元素<ph id="ph1">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>开头的元素<ph id="ph1">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>结尾的元素<ph id="ph1">`s`</ph>。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>登录<ept id="p1">*</ept>在括号内包含的数字值的窗体中的元素。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <bpt id="p1">*</bpt>,<ept id="p1">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt>，<ept id="p1">*</ept>元素。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept>元素。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>All.</source>
          <target state="translated">全部。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <ph id="ph1">`s`</ph> parameter cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数不能表示十六进制数或指数记数法的数字。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning or end of <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the beginning of <ph id="ph2">`s`</ph>, and the <bpt id="p3">*</bpt>.<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>元素的开头或末尾<ph id="ph1">`s`</ph>，<bpt id="p2">*</bpt>登录<ept id="p2">*</ept>开头<ph id="ph2">`s`</ph>，和<bpt id="p3">*</bpt>。<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>symbol.</source>
          <target state="translated">符号。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph>参数还可以使用指数记数法。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, thousands separator (<bpt id="p1">*</bpt>,),<ept id="p1">*</ept> and decimal point (<bpt id="p2">*</bpt>.<ept id="p2">*</ept>) elements.</source>
          <target state="translated"><ph id="ph1">`ws`</ph>， <ph id="ph2">`sign`</ph>，千位分隔符 (<bpt id="p1">*</bpt>，)，<ept id="p1">*</ept>和小数点 (<bpt id="p2">*</bpt>。<ept id="p2">*</ept>) 元素。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>All styles, except <ph id="ph1">`s`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">所有样式，除<ph id="ph1">`s`</ph>无法表示十六进制数字。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <ph id="ph1">`provider`</ph> parameter is a <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>实现，如<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>或<ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in parsing.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数提供区域性特定信息在分析中使用。</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph> or a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object cannot be obtained, the format information for the current culture is used.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>或<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>无法获取对象，则使用当前区域性的格式信息。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The conversion fails if the <ph id="ph1">`s`</ph> parameter is <ph id="ph2">`null`</ph> or not a numeric value, the <ph id="ph3">`provider`</ph> parameter does not yield a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, or the <ph id="ph5">`style`</ph> parameter is not a combination of bit flags from the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">如果转换失败。<ph id="ph1">`s`</ph>参数是<ph id="ph2">`null`</ph>或不是数字值，<ph id="ph3">`provider`</ph>参数不会生成<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>对象，或<ph id="ph5">`style`</ph>参数不是中的位标志的组合<ph id="ph6">&lt;xref:System.Globalization.NumberStyles&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>Ordinarily, if you pass the <ph id="ph1">&lt;xref:System.Double.TryParse%2A?displayProperty=nameWithType&gt;</ph> method a string that is created by calling the <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method, the original <ph id="ph3">&lt;xref:System.Double&gt;</ph> value is returned.</source>
          <target state="translated">通常，如果你通过<ph id="ph1">&lt;xref:System.Double.TryParse%2A?displayProperty=nameWithType&gt;</ph>方法通过调用创建的字符串<ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph>方法时，原始<ph id="ph3">&lt;xref:System.Double&gt;</ph>返回值。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>However, because of a loss of precision, the values may not be equal.</source>
          <target state="translated">但是，由于精度损失，值可能不相等。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>In addition, attempting to parse the string representation of either <ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph> throws an <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>, as the following example illustrates.</source>
          <target state="translated">此外，尝试分析的字符串表示形式是<ph id="ph1">&lt;xref:System.Double.MinValue&gt;</ph>或<ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph>引发<ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>，如下面的示例所示。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">如果在遇到分隔符<ph id="ph1">`s`</ph>期间执行分析操作，并适用的货币或小数位的参数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">有关分隔符的详细信息，请参阅<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType&gt;</ph> method to parse the string representation of numbers that have a particular style and are formatted using the conventions of a particular culture.</source>
          <target state="translated">下面的示例演示了利用<ph id="ph1">&lt;xref:System.Double.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Double%40%29?displayProperty=nameWithType&gt;</ph>方法，以便分析的字符串表示形式的特定样式，其格式使用特定区域性的约定的数字。</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> includes the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 包括 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 值。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>