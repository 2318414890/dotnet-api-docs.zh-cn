<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LoaderOptimization.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59c2bf923c2cbb9c770bc771eff10fb0882c45ba9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c2bf923c2cbb9c770bc771eff10fb0882c45ba9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.LoaderOptimization">
          <source>An enumeration used with the <ph id="ph1">&lt;see cref="T:System.LoaderOptimizationAttribute" /&gt;</ph> class to specify loader optimizations for an executable.</source>
          <target state="translated">一个枚举，它与 <ph id="ph1">&lt;see cref="T:System.LoaderOptimizationAttribute" /&gt;</ph> 类一起使用为可执行文件指定加载程序优化。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LoaderOptimization">
          <source>The meaning of MultiDomainHost changed in the .NET Framework version 2.0.</source>
          <target state="translated">在.NET Framework 2.0 版中更改 MultiDomainHost 的含义。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LoaderOptimization">
          <source>The loader now shares resources across application domains only for assemblies that have been added to the global assembly cache.</source>
          <target state="translated">加载程序现在可以共享资源跨应用程序域仅为已添加到全局程序集缓存的程序集。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LoaderOptimization">
          <source>If custom code access security policy is set for the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, by using the <ph id="ph2">&lt;xref:System.AppDomain.SetAppDomainPolicy%2A&gt;</ph> property, and the <ph id="ph3">&lt;xref:System.AppDomain.SetAppDomainPolicy%2A&gt;</ph> is created using the MultiDomain flag, the effect is the same as specifying the MultiDomainHost flag; that is, only assemblies in the GAC are shared.</source>
          <target state="translated">如果自定义代码访问安全策略设置为<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>，通过使用<ph id="ph2">&lt;xref:System.AppDomain.SetAppDomainPolicy%2A&gt;</ph>属性，与<ph id="ph3">&lt;xref:System.AppDomain.SetAppDomainPolicy%2A&gt;</ph>创建使用多域标志，该效果相当于将指定 MultiDomainHost 标志; 即中的唯一程序集共享 gac。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LoaderOptimization">
          <source>When this occurs, the loader does not throw an exception and the application does not experience the performance gains associated with the MultiDomain flag.</source>
          <target state="translated">当发生这种情况时，加载程序不会引发异常和应用程序不会遇到多域的标志与关联的性能提升。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.LoaderOptimization">
          <source>For more information on assembly sharing and domain-neutral assembly loading, see <bpt id="p1">[</bpt>Application Domains and Assemblies<ept id="p1">](http://msdn.microsoft.com/library/433b04ae-4ba8-4849-9dbd-79194f240346)</ept>.</source>
          <target state="translated">有关共享的程序集和非特定于域的程序集加载的详细信息，请参阅<bpt id="p1">[</bpt>应用程序域和程序集<ept id="p1">](http://msdn.microsoft.com/library/433b04ae-4ba8-4849-9dbd-79194f240346)</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.DisallowBindings">
          <source>Ignored by the common language runtime.</source>
          <target state="translated">被公共语言运行时忽略。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.DomainMask">
          <source>Do not use.</source>
          <target state="translated">请勿使用。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.DomainMask">
          <source>This mask selects the domain-related values, screening out the unused <ph id="ph1">&lt;see cref="F:System.LoaderOptimization.DisallowBindings" /&gt;</ph> flag.</source>
          <target state="translated">此掩码选择与域相关的值，筛选出未使用的 <ph id="ph1">&lt;see cref="F:System.LoaderOptimization.DisallowBindings" /&gt;</ph> 标志。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.MultiDomain">
          <source>Indicates that the application will probably have many domains that use the same code, and the loader must share maximal internal resources across application domains.</source>
          <target state="translated">表示应用程序将可能有多个使用相同代码的域，并且加载程序必须跨应用程序域最大限度地共享内部资源。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.MultiDomainHost">
          <source>Indicates that the application will probably host unique code in multiple domains, and the loader must share resources across application domains only for globally available (strong-named) assemblies that have been added to the global assembly cache.</source>
          <target state="translated">表示应用程序可能将承载多个域中的唯一代码，加载程序必须跨应用程序域共享资源，仅限已添加到全局程序集缓存的全局可用（具有强名称）程序集。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.NotSpecified">
          <source>Indicates that no optimizations for sharing internal resources are specified.</source>
          <target state="translated">表示未指定任何针对共享内部资源的优化。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.NotSpecified">
          <source>If the default domain or hosting interface specified an optimization, then the loader uses that; otherwise, the loader uses <ph id="ph1">&lt;see cref="F:System.LoaderOptimization.SingleDomain" /&gt;</ph>.</source>
          <target state="translated">如果默认域或宿主接口指定了优化，则加载程序将使用该优化；否则，加载程序将使用 <ph id="ph1">&lt;see cref="F:System.LoaderOptimization.SingleDomain" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.LoaderOptimization.SingleDomain">
          <source>Indicates that the application will probably have a single domain, and loader must not share internal resources across application domains.</source>
          <target state="translated">表示应用程序将可能只有单个域，并且加载程序不可以跨应用程序域共享内部资源。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>