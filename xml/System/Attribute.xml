<Type Name="Attribute" FullName="System.Attribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="438da30acd4c8aab15e23998267de1a8ca100d97" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30730161" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Attribute : System.Runtime.InteropServices._Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Attribute extends System.Object implements class System.Runtime.InteropServices._Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Attribute" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Attribute&#xA;Implements _Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class Attribute abstract : System::Runtime::InteropServices::_Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Attribute</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Attribute))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7a7ef-101">表示自定义特性的基类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7a7ef-101">Represents the base class for custom attributes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-102"><xref:System.Attribute>类将与目标元素关联的预定义的系统信息或用户定义的自定义信息。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-102">The <xref:System.Attribute> class associates predefined system information or user-defined custom information with a target element.</span></span> <span data-ttu-id="7a7ef-103">目标元素可以是程序集、 类、 构造函数、 委托、 枚举、 事件、 字段、 接口、 方法、 可移植可执行文件模块、 参数、 属性、 返回值、 结构或另一个属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-103">A target element can be an assembly, class, constructor, delegate, enum, event, field, interface, method, portable executable file module, parameter, property, return value, struct, or another attribute.</span></span>  
  
 <span data-ttu-id="7a7ef-104">提供的属性的信息也称为是元数据。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-104">Information provided by an attribute is also known as metadata.</span></span> <span data-ttu-id="7a7ef-105">可以通过你的应用程序来控制你的程序如何处理数据，在运行时检查元数据或之前由外部工具到控件的运行时如何应用程序本身是处理或维护。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-105">Metadata can be examined at run time by your application to control how your program processes data, or before run time by external tools to control how your application itself is processed or maintained.</span></span> <span data-ttu-id="7a7ef-106">例如，.NET Framework 预定义和使用属性类型以控制运行时行为，一些编程语言使用属性类型来表示不直接支持的.NET Framework 的常规类型系统的语言功能。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-106">For example, the .NET Framework predefines and uses attribute types to control run-time behavior, and some programming languages use attribute types to represent language features not directly supported by the .NET Framework common type system.</span></span>  
  
 <span data-ttu-id="7a7ef-107">所有属性类型直接或间接都派生从<xref:System.Attribute>类。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-107">All attribute types derive directly or indirectly from the <xref:System.Attribute> class.</span></span> <span data-ttu-id="7a7ef-108">特性可以应用于任何目标的元素;多个属性可以应用到相同的目标元素;并可以由派生自目标元素的元素继承属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-108">Attributes can be applied to any target element; multiple attributes can be applied to the same target element; and attributes can be inherited by an element derived from a target element.</span></span> <span data-ttu-id="7a7ef-109">使用<xref:System.AttributeTargets>指定特性应用于目标元素的类。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-109">Use the <xref:System.AttributeTargets> class to specify the target element to which the attribute is applied.</span></span>  
  
 <span data-ttu-id="7a7ef-110"><xref:System.Attribute>类提供了方便的方法来检索和测试自定义属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-110">The <xref:System.Attribute> class provides convenient methods to retrieve and test custom attributes.</span></span> <span data-ttu-id="7a7ef-111">有关使用属性的详细信息，请参阅[应用特性](~/docs/standard/attributes/applying-attributes.md)和[属性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-111">For more information about using attributes, see [Applying Attributes](~/docs/standard/attributes/applying-attributes.md) and [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-112">下面的代码示例演示如何使用<xref:System.Attribute>。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-112">The following code example demonstrates the usage of <xref:System.Attribute>.</span></span>  
  
 [!code-cpp[AnimalAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/AnimalAttributes/CPP/customattribute.cpp#1)]
 [!code-csharp[AnimalAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/AnimalAttributes/CS/customattribute.cs#1)]
 [!code-vb[AnimalAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AnimalAttributes/VB/customattribute.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="7a7ef-113">此类型是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7a7ef-113">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Attribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Attribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a7ef-114">初始化 <see cref="T:System.Attribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-114">Initializes a new instance of the <see cref="T:System.Attribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-115">此构造函数只能由派生自的类调用<xref:System.Attribute>。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-115">This constructor is only called by classes that derive from <xref:System.Attribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-116">下面的代码示例演示自定义参数的定义<xref:System.Attribute>使用其构造函数的类。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-116">The following code example shows the definition of a custom parameter <xref:System.Attribute> class with its constructor.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#2)]
 [!code-csharp[System.Attribute.GetCustomAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#2)]
 [!code-vb[System.Attribute.GetCustomAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7a7ef-117">要与此实例进行比较的 <see cref="T:System.Object" /> 或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-117">An <see cref="T:System.Object" /> to compare with this instance or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-118">返回一个值，该值指示此实例是否与指定的对象相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-118">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-119">如果 <paramref name="obj" /> 与此实例类型相同，并且具有相同的字段值，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-119">
              <see langword="true" /> if <paramref name="obj" /> and this instance are of the same type and have identical field values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="7a7ef-120"><xref:System.Attribute.Equals%2A>方法使用反射来检索当前实例的字段信息和`obj`自变量。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-120">The <xref:System.Attribute.Equals%2A> method uses reflection to retrieve field information for the current instance and the `obj` argument.</span></span> <span data-ttu-id="7a7ef-121">然后，它将比较字段值。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-121">It then compares field values.</span></span> 

<span data-ttu-id="7a7ef-122">当实现您自己的类派生自<xref:System.Attribute>，您可以重写<xref:System.Attribute.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-122">When implementing your own class derived from <xref:System.Attribute>, you can override the <xref:System.Attribute.Equals%2A> method.</span></span> <span data-ttu-id="7a7ef-123">由于它使用反射，我们建议您这样做。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-123">Because it uses reflection, we recommend that you do so.</span></span> <span data-ttu-id="7a7ef-124">但是，重写应执行标准测试引用相等性 （两个参数表示相同的对象实例） 或 （两个变量均为相同类型，并且具有相同的字段值） 的值相等。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-124">However, your override should perform a standard test for reference equality (the two arguments represent the same object instance) or value equality (the two arguments are of the same type and have identical field values).</span></span> <span data-ttu-id="7a7ef-125">如果你想要执行自定义比较来确定是否两个属性对象是否相等，则您可以重写<xref:System.Attribute.Match%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-125">If you want to perform a custom comparison to determine whether two attributes objects are equal, you can override the <xref:System.Attribute.Match%2A> method.</span></span>   

## Examples  
 <span data-ttu-id="7a7ef-126">下面的示例定义两个自定义参数<xref:System.Attribute>类，然后创建每个类的多个对象，并使用<xref:System.Attribute.Equals%2A>方法对它们进行比较。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-126">The following example defines two custom parameter <xref:System.Attribute> classes, then creates several objects of each class and uses the <xref:System.Attribute.Equals%2A> method to compare them.</span></span>  
  
 [!code-cpp[System.Attribute.Equals](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.Equals/CPP/equals.cpp)]
 [!code-csharp[System.Attribute.Equals](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.Equals/CS/equals.cs)]
 [!code-vb[System.Attribute.Equals](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.Equals/VB/equals.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7a7ef-127">检索应用于程序集、模块、类型成员或方法参数的指定类型的自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-127">Retrieves a custom attribute of a specified type applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Assembly, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-128">一个从 <see cref="T:System.Reflection.Assembly" /> 类派生的对象，该类描述可重用模块集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-128">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-129">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-129">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-130">检索应用于指定程序集的自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-130">Retrieves a custom attribute applied to a specified assembly.</span>
          </span>
          <span data-ttu-id="7a7ef-131">参数指定程序集和要搜索的自定义属性的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-131">Parameters specify the assembly and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-132">一个引用，指向应用于 <paramref name="attributeType" /> 的 <paramref name="element" /> 类型的单个自定义属性；如果没有此类属性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-132">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-133">使用<xref:System.Attribute.GetCustomAttributes%2A>方法如果你预计要返回多个值或<xref:System.Reflection.AmbiguousMatchException>将引发。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-133">Use the <xref:System.Attribute.GetCustomAttributes%2A> method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-134">从.NET Framework 2.0 版开始，此方法返回的安全属性的操作，如果属性存储在新的元数据格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-134">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-135">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-135">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-136">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-136">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-137">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-137">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-138">下面的代码示例演示如何使用<xref:System.Attribute.GetCustomAttribute%2A>方法拍摄<xref:System.Reflection.Assembly>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-138">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-139">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-139">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-140">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-140">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="7a7ef-141">找到多个请求的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-141">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As MemberInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-142">一个从 <see cref="T:System.Reflection.MemberInfo" /> 类派生的对象，该类描述类的构造函数、事件、字段、方法或属性成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-142">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-143">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-143">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-144">检索应用于类型成员的自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-144">Retrieves a custom attribute applied to a member of a type.</span>
          </span>
          <span data-ttu-id="7a7ef-145">参数指定成员和要搜索的自定义属性的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-145">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-146">一个引用，指向应用于 <paramref name="attributeType" /> 的 <paramref name="element" /> 类型的单个自定义属性；如果没有此类属性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-146">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-147">返回值部分中所描述的相同方式确定匹配项<xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-147">A match is determined in the same way described in the Return Value section of <xref:System.Type.IsAssignableFrom%2A?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-148">从.NET Framework 2.0 版开始，如果此方法返回的安全属性类型、 方法和构造函数上属性存储在新的元数据格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-148">Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-149">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-149">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-150">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-150">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-151">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-151">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-152">下面的代码示例演示如何使用<xref:System.Attribute.GetCustomAttribute%2A>方法拍摄<xref:System.Reflection.MemberInfo>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-152">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-153">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-153">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-154">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-154">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7a7ef-155">
            <paramref name="element" /> 不是构造函数、方法、属性、事件、类型或字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-155">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="7a7ef-156">找到多个请求的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-156">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="7a7ef-157">无法加载自定义属性类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-157">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Module, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-158">一个从 <see cref="T:System.Reflection.Module" /> 类派生的对象，该类描述可移植的可执行文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-158">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-159">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-159">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-160">检索应用于模块的自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-160">Retrieves a custom attribute applied to a module.</span>
          </span>
          <span data-ttu-id="7a7ef-161">参数指定模块和要搜索的自定义属性的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-161">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-162">一个引用，指向应用于 <paramref name="attributeType" /> 的 <paramref name="element" /> 类型的单个自定义属性；如果没有此类属性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-162">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a7ef-163">下面的代码示例演示如何使用<xref:System.Attribute.GetCustomAttribute%2A>方法拍摄<xref:System.Reflection.Module>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-163">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-164">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-164">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-165">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-165">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="7a7ef-166">找到多个请求的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-166">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As ParameterInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-167">一个从 <see cref="T:System.Reflection.ParameterInfo" /> 类派生的对象，该类描述类成员的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-167">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-168">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-168">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-169">检索应用于方法参数的自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-169">Retrieves a custom attribute applied to a method parameter.</span>
          </span>
          <span data-ttu-id="7a7ef-170">参数指定方法参数和要搜索的自定义属性的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-170">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-171">一个引用，指向应用于 <paramref name="attributeType" /> 的 <paramref name="element" /> 类型的单个自定义属性；如果没有此类属性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-171">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-172">如果`element`派生类型表示一个方法中的参数时，返回的值包括应用于重写基方法中的相同参数的可继承的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-172">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-173">下面的代码示例定义一个自定义参数<xref:System.Attribute>类并将自定义特性应用到派生的类和派生类的基类中的方法。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-173">The following code example defines a custom parameter <xref:System.Attribute> class and applies the custom attribute to a method in a derived class and the base of the derived class.</span></span> <span data-ttu-id="7a7ef-174">该示例演示如何使用<xref:System.Attribute.GetCustomAttribute%2A>方法以返回属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-174">The example shows the use of the <xref:System.Attribute.GetCustomAttribute%2A> method to return the attributes.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#1)]
 [!code-csharp[System.Attribute.GetCustomAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#1)]
 [!code-vb[System.Attribute.GetCustomAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-175">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-175">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-176">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-176">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="7a7ef-177">找到多个请求的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-177">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="7a7ef-178">无法加载自定义属性类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-178">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Assembly, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-179">一个从 <see cref="T:System.Reflection.Assembly" /> 类派生的对象，该类描述可重用模块集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-179">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-180">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-180">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-181">此参数被忽略，并且不会影响此方法的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-181">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-182">检索应用于程序集的自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-182">Retrieves a custom attribute applied to an assembly.</span>
          </span>
          <span data-ttu-id="7a7ef-183">参数指定程序集、要搜索的自定义属性的类型以及忽略的搜索选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-183">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-184">一个引用，指向应用于 <paramref name="attributeType" /> 的 <paramref name="element" /> 类型的单个自定义属性；如果没有此类属性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-184">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-185">从.NET Framework 2.0 版开始，此方法返回的安全属性的操作，如果属性存储在新的元数据格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-185">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-186">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-186">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-187">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-187">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-188">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-188">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-189">下面的代码示例演示如何使用<xref:System.Attribute.GetCustomAttribute%2A>方法拍摄<xref:System.Reflection.Assembly>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-189">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-190">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-190">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-191">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-191">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="7a7ef-192">找到多个请求的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-192">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As MemberInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-193">一个从 <see cref="T:System.Reflection.MemberInfo" /> 类派生的对象，该类描述类的构造函数、事件、字段、方法或属性成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-193">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-194">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-194">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-195">如果为 <see langword="true" />，则指定还在 <c>element</c> 的祖先中搜索自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-195">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-196">检索应用于类型成员的自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-196">Retrieves a custom attribute applied to a member of a type.</span>
          </span>
          <span data-ttu-id="7a7ef-197">参数指定成员、要搜索的自定义属性的类型以及是否搜索成员的祖先。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-197">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-198">一个引用，指向应用于 <paramref name="attributeType" /> 的 <paramref name="element" /> 类型的单个自定义属性；如果没有此类属性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-198">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-199">从.NET Framework 2.0 版开始，如果此方法返回的安全属性类型、 方法和构造函数上属性存储在新的元数据格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-199">Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-200">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-200">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-201">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-201">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-202">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-202">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-203">下面的代码示例演示如何使用<xref:System.Attribute.GetCustomAttribute%2A>方法拍摄<xref:System.Reflection.MemberInfo>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-203">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-204">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-204">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-205">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-205">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7a7ef-206">
            <paramref name="element" /> 不是构造函数、方法、属性、事件、类型或字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-206">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="7a7ef-207">找到多个请求的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-207">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="7a7ef-208">无法加载自定义属性类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-208">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As Module, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-209">一个从 <see cref="T:System.Reflection.Module" /> 类派生的对象，该类描述可移植的可执行文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-209">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-210">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-210">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-211">此参数被忽略，并且不会影响此方法的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-211">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-212">检索应用于模块的自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-212">Retrieves a custom attribute applied to a module.</span>
          </span>
          <span data-ttu-id="7a7ef-213">参数指定模块、要搜索的自定义属性的类型以及忽略的搜索选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-213">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-214">一个引用，指向应用于 <paramref name="attributeType" /> 的 <paramref name="element" /> 类型的单个自定义属性；如果没有此类属性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-214">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a7ef-215">下面的代码示例演示如何使用<xref:System.Attribute.GetCustomAttribute%2A>方法拍摄<xref:System.Reflection.Module>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-215">The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-216">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-216">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-217">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-217">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="7a7ef-218">找到多个请求的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-218">More than one of the requested attributes was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttribute (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-219">一个从 <see cref="T:System.Reflection.ParameterInfo" /> 类派生的对象，该类描述类成员的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-219">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-220">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-220">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-221">如果为 <see langword="true" />，则指定还在 <c>element</c> 的祖先中搜索自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-221">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-222">检索应用于方法参数的自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-222">Retrieves a custom attribute applied to a method parameter.</span>
          </span>
          <span data-ttu-id="7a7ef-223">参数指定方法参数、要搜索的自定义属性的类型以及是否搜索方法参数的祖先。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-223">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-224">一个引用，指向应用于 <paramref name="attributeType" /> 的 <paramref name="element" /> 类型的单个自定义属性；如果没有此类属性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-224">A reference to the single custom attribute of type <paramref name="attributeType" /> that is applied to <paramref name="element" />, or <see langword="null" /> if there is no such attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-225">如果`element`派生类型表示一个方法中的参数时，返回的值包括应用于重写基方法中的相同参数的可继承的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-225">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-226">下面的代码示例定义一个自定义参数<xref:System.Attribute>类并将自定义特性应用到派生的类和派生类的基类中的方法。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-226">The following code example defines a custom parameter <xref:System.Attribute> class and applies the custom attribute to a method in a derived class and the base of the derived class.</span></span> <span data-ttu-id="7a7ef-227">该示例演示如何使用<xref:System.Attribute.GetCustomAttribute%2A>方法以返回属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-227">The example shows the use of the <xref:System.Attribute.GetCustomAttribute%2A> method to return the attributes.</span></span>  
  
 [!code-cpp[System.Attribute.GetCustomAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrprminh.cpp#3)]
 [!code-csharp[System.Attribute.GetCustomAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrprminh.cs#3)]
 [!code-vb[System.Attribute.GetCustomAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrprminh.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-228">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-228">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-229">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-229">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="7a7ef-230">找到多个请求的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-230">More than one of the requested attributes was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="7a7ef-231">无法加载自定义属性类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-231">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7a7ef-232">检索应用于程序集、模块、类型成员或方法参数的自定义属性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-232">Retrieves an array of the custom attributes applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-233">一个从 <see cref="T:System.Reflection.Assembly" /> 类派生的对象，该类描述可重用模块集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-233">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-234">检索一个数组，它由应用于程序集的自定义属性组成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-234">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="7a7ef-235">参数指定程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-235">A parameter specifies the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-236">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="element" /> 的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-236">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-237">从.NET Framework 2.0 版开始，此方法返回的安全属性的操作，如果属性存储在新的元数据格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-237">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-238">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-238">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-239">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-239">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-240">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-240">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-241">下面的示例检索在当前程序集中找到的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-241">The following example retrieves the custom attributes found in the current assembly.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-242">
            <paramref name="element" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-242">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As MemberInfo) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-243">一个从 <see cref="T:System.Reflection.MemberInfo" /> 类派生的对象，该类描述类的构造函数、事件、字段、方法或属性成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-243">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-244">检索应用于类型的成员的自定义属性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-244">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="7a7ef-245">参数指定成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-245">A parameter specifies the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-246">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="element" /> 的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-246">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-247">返回的值包含自定义属性的上级`element`。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-247">The return value contains the custom attributes for ancestors of `element`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-248">从.NET Framework 2.0 版开始，此方法返回的安全属性上的方法、 构造函数和类型如果属性存储在新的元数据格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-248">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-249">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-249">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-250">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-250">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-251">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-251">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-252">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttribute%2A>，采用<xref:System.Reflection.MemberInfo>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-252">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttribute%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-253">
            <paramref name="element" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-253">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7a7ef-254">
            <paramref name="element" /> 不是构造函数、方法、属性、事件、类型或字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-254">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="7a7ef-255">无法加载自定义属性类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-255">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-256">一个从 <see cref="T:System.Reflection.Module" /> 类派生的对象，该类描述可移植的可执行文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-256">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-257">检索应用于模块的自定义属性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-257">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="7a7ef-258">参数指定模块。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-258">A parameter specifies the module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-259">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="element" /> 的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-259">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a7ef-260">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttributes%2A>，采用<xref:System.Reflection.Module>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-260">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-261">
            <paramref name="element" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-261">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-262">一个从 <see cref="T:System.Reflection.ParameterInfo" /> 类派生的对象，该类描述类成员的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-262">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-263">检索应用于方法参数的自定义属性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-263">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="7a7ef-264">参数指定方法参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-264">A parameter specifies the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-265">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="element" /> 的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-265">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-266">如果`element`派生类型表示一个方法中的参数时，返回的值包括应用于重写基方法中的相同参数的可继承的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-266">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-267">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttributes%2A>，采用<xref:System.Reflection.ParameterInfo>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-267">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-268">
            <paramref name="element" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-268">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="7a7ef-269">无法加载自定义属性类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-269">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-270">一个从 <see cref="T:System.Reflection.Assembly" /> 类派生的对象，该类描述可重用模块集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-270">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-271">此参数被忽略，并且不会影响此方法的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-271">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-272">检索一个数组，它由应用于程序集的自定义属性组成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-272">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="7a7ef-273">参数指定程序集及忽略的搜索选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-273">Parameters specify the assembly, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-274">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="element" /> 的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-274">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-275">从.NET Framework 2.0 版开始，此方法返回的安全属性的操作，如果属性存储在新的元数据格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-275">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-276">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-276">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-277">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-277">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-278">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-278">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-279">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttributes%2A>，采用<xref:System.Reflection.Assembly>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-279">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-280">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-280">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-281">一个从 <see cref="T:System.Reflection.Assembly" /> 类派生的对象，该类描述可重用模块集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-281">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-282">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-282">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-283">检索一个数组，它由应用于程序集的自定义属性组成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-283">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="7a7ef-284">参数指定程序集和要搜索的自定义属性的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-284">Parameters specify the assembly, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-285">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="attributeType" /> 的 <paramref name="element" /> 类型的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-285">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-286">从.NET Framework 2.0 版开始，此方法返回的安全属性的操作，如果属性存储在新的元数据格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-286">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-287">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-287">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-288">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-288">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-289">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-289">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-290">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttributes%2A>，采用<xref:System.Reflection.Assembly>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-290">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-291">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-291">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-292">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-292">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As MemberInfo, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-293">一个从 <see cref="T:System.Reflection.MemberInfo" /> 类派生的对象，该类描述类的构造函数、事件、字段、方法或属性成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-293">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-294">如果为 <see langword="true" />，则指定还在 <c>element</c> 的祖先中搜索自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-294">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-295">检索应用于类型的成员的自定义属性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-295">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="7a7ef-296">参数指定成员、要搜索的自定义属性的类型以及是否搜索成员的祖先。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-296">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-297">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="element" /> 的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-297">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-298">返回的值包含自定义属性的上级`element`如果`inherit`是`true`。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-298">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-299">从.NET Framework 2.0 版开始，此方法返回的安全属性上的方法、 构造函数和类型如果属性存储在新的元数据格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-299">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-300">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-300">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-301">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-301">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-302">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-302">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-303">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttributes%2A>，采用<xref:System.Reflection.MemberInfo>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-303">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-304">
            <paramref name="element" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-304">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7a7ef-305">
            <paramref name="element" /> 不是构造函数、方法、属性、事件、类型或字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-305">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="7a7ef-306">无法加载自定义属性类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-306">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-307">一个从 <see cref="T:System.Reflection.MemberInfo" /> 类派生的对象，该类描述类的构造函数、事件、字段、方法或属性成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-307">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="7a7ef-308">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-308">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-309">检索应用于类型的成员的自定义属性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-309">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="7a7ef-310">参数指定成员和要搜索的自定义属性的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-310">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-311">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="type" /> 的 <paramref name="element" /> 类型的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-311">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="type" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-312">返回的值包含自定义属性的上级`element`。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-312">The return value contains the custom attributes for ancestors of `element`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-313">从.NET Framework 2.0 版开始，此方法返回的安全属性上的方法、 构造函数和类型如果属性存储在新的元数据格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-313">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-314">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-314">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-315">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-315">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-316">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-316">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-317">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttribute%2A>，采用<xref:System.Reflection.MemberInfo>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-317">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttribute%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-318">
            <paramref name="element" /> 或 <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-318">
              <paramref name="element" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-319">
            <paramref name="type" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-319">
              <paramref name="type" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7a7ef-320">
            <paramref name="element" /> 不是构造函数、方法、属性、事件、类型或字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-320">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="7a7ef-321">无法加载自定义属性类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-321">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-322">一个从 <see cref="T:System.Reflection.Module" /> 类派生的对象，该类描述可移植的可执行文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-322">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-323">此参数被忽略，并且不会影响此方法的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-323">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-324">检索应用于模块的自定义属性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-324">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="7a7ef-325">参数指定模块及忽略的搜索选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-325">Parameters specify the module, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-326">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="element" /> 的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-326">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-327">返回的值包含自定义属性的上级`element`如果`inherit`是`true`。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-327">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-328">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttributes%2A>，采用<xref:System.Reflection.Module>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-328">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-329">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-329">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-330">一个从 <see cref="T:System.Reflection.Module" /> 类派生的对象，该类描述可移植的可执行文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-330">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-331">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-331">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-332">检索应用于模块的自定义属性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-332">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="7a7ef-333">参数指定模块和要搜索的自定义属性的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-333">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-334">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="attributeType" /> 的 <paramref name="element" /> 类型的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-334">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a7ef-335">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttributes%2A>，采用<xref:System.Reflection.Module>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-335">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-336">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-336">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-337">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-337">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-338">一个从 <see cref="T:System.Reflection.ParameterInfo" /> 类派生的对象，该类描述类成员的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-338">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-339">如果为 <see langword="true" />，则指定还在 <c>element</c> 的祖先中搜索自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-339">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-340">检索应用于方法参数的自定义属性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-340">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="7a7ef-341">参数指定方法参数以及是否搜索方法参数的祖先。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-341">Parameters specify the method parameter, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-342">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="element" /> 的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-342">An <see cref="T:System.Attribute" /> array that contains the custom attributes applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-343">如果`element`派生类型表示一个方法中的参数时，返回的值包括应用于重写基方法中的相同参数的可继承的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-343">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-344">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttributes%2A>，采用<xref:System.Reflection.ParameterInfo>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-344">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-345">
            <paramref name="element" /> 的 <see cref="P:System.Reflection.ParameterInfo.Member" /> 属性为 <see langword="null." /><see langword="" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-345">The <see cref="P:System.Reflection.ParameterInfo.Member" /> property of <paramref name="element" /> is <see langword="null." /><see langword="" /></span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-346">
            <paramref name="element" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-346">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="7a7ef-347">无法加载自定义属性类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-347">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, attributeType As Type) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-348">一个从 <see cref="T:System.Reflection.ParameterInfo" /> 类派生的对象，该类描述类成员的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-348">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-349">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-349">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-350">检索应用于方法参数的自定义属性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-350">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="7a7ef-351">参数指定方法参数和要搜索的自定义属性的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-351">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-352">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="attributeType" /> 的 <paramref name="element" /> 类型的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-352">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-353">如果`element`派生类型表示一个方法中的参数时，返回的值包括应用于重写基方法中的相同参数的可继承的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-353">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-354">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttributes%2A>，采用<xref:System.Reflection.ParameterInfo>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-354">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-355">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-355">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-356">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-356">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="7a7ef-357">无法加载自定义属性类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-357">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Assembly, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-358">一个从 <see cref="T:System.Reflection.Assembly" /> 类派生的对象，该类描述可重用模块集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-358">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-359">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-359">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-360">此参数被忽略，并且不会影响此方法的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-360">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-361">检索一个数组，它由应用于程序集的自定义属性组成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-361">Retrieves an array of the custom attributes applied to an assembly.</span>
          </span>
          <span data-ttu-id="7a7ef-362">参数指定程序集、要搜索的自定义属性的类型以及忽略的搜索选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-362">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-363">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="attributeType" /> 的 <paramref name="element" /> 类型的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-363">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-364">从.NET Framework 2.0 版开始，此方法返回的安全属性的操作，如果属性存储在新的元数据格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-364">Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-365">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-365">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-366">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-366">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-367">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-367">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-368">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttributes%2A>，采用<xref:System.Reflection.Assembly>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-368">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-369">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-369">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-370">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-370">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type type, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ type, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-371">一个从 <see cref="T:System.Reflection.MemberInfo" /> 类派生的对象，该类描述类的构造函数、事件、字段、方法或属性成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-371">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, or property member of a class.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="7a7ef-372">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-372">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-373">如果为 <see langword="true" />，则指定还在 <c>element</c> 的祖先中搜索自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-373">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-374">检索应用于类型的成员的自定义属性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-374">Retrieves an array of the custom attributes applied to a member of a type.</span>
          </span>
          <span data-ttu-id="7a7ef-375">参数指定成员、要搜索的自定义属性的类型以及是否搜索成员的祖先。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-375">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-376">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="type" /> 的 <paramref name="element" /> 类型的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-376">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="type" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-377">返回的值包含自定义属性的上级`element`如果`inherit`是`true`。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-377">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-378">从.NET Framework 2.0 版开始，此方法返回的安全属性上的方法、 构造函数和类型如果属性存储在新的元数据格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-378">Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-379">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-379">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-380">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-380">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-381">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-381">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-382">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttributes%2A>，采用<xref:System.Reflection.MemberInfo>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-382">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-383">
            <paramref name="element" /> 或 <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-383">
              <paramref name="element" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-384">
            <paramref name="type" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-384">
              <paramref name="type" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7a7ef-385">
            <paramref name="element" /> 不是构造函数、方法、属性、事件、类型或字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-385">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="7a7ef-386">无法加载自定义属性类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-386">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As Module, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-387">一个从 <see cref="T:System.Reflection.Module" /> 类派生的对象，该类描述可移植的可执行文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-387">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-388">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-388">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-389">此参数被忽略，并且不会影响此方法的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-389">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-390">检索应用于模块的自定义属性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-390">Retrieves an array of the custom attributes applied to a module.</span>
          </span>
          <span data-ttu-id="7a7ef-391">参数指定模块、要搜索的自定义属性的类型以及忽略的搜索选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-391">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-392">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="attributeType" /> 的 <paramref name="element" /> 类型的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-392">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-393">返回的值包含自定义属性的上级`element`如果`inherit`是`true`。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-393">The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-394">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttributes%2A>，采用<xref:System.Reflection.Module>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-394">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-395">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-395">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-396">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-396">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomAttributes (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-397">一个从 <see cref="T:System.Reflection.ParameterInfo" /> 类派生的对象，该类描述类成员的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-397">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-398">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-398">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-399">如果为 <see langword="true" />，则指定还在 <c>element</c> 的祖先中搜索自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-399">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-400">检索应用于方法参数的自定义属性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-400">Retrieves an array of the custom attributes applied to a method parameter.</span>
          </span>
          <span data-ttu-id="7a7ef-401">参数指定方法参数、要搜索的自定义属性的类型以及是否搜索方法参数的祖先。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-401">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-402">一个 <see cref="T:System.Attribute" /> 数组，包含应用于 <paramref name="attributeType" /> 的 <paramref name="element" /> 类型的自定义属性；如果不存在此类自定义属性，则为空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-402">An <see cref="T:System.Attribute" /> array that contains the custom attributes of type <paramref name="attributeType" /> applied to <paramref name="element" />, or an empty array if no such custom attributes exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-403">如果`element`派生类型表示一个方法中的参数时，返回的值包括应用于重写基方法中的相同参数的可继承的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-403">If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-404">下面的代码示例演示如何将<xref:System.Attribute.GetCustomAttributes%2A>，采用<xref:System.Reflection.ParameterInfo>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-404">The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-405">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-405">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-406">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-406">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="7a7ef-407">无法加载自定义属性类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-407">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a7ef-408">返回此实例的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-408">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-409">32 位有符号整数哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-409">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a7ef-410">下面的代码示例演示如何使用<xref:System.Attribute.GetHashCode%2A>的上下文中<xref:System.Attribute>。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-410">The following code example illustrates the use of <xref:System.Attribute.GetHashCode%2A> in the context of <xref:System.Attribute>.</span></span>  
  
 [!code-csharp[GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetHashCode/CS/hashcode.cs#1)]
 [!code-vb[GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetHashCode/VB/hashcode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefaultAttribute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a7ef-411">在派生类中重写时，指示此实例的值是否是派生类的默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-411">When overridden in a derived class, indicates whether the value of this instance is the default value for the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-412">如果此实例是该类的默认属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-412">
              <see langword="true" /> if this instance is the default attribute for the class; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-413">此类的默认实现返回`false`，而必须在要对此类很有用的派生类中实现。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-413">The default implementation of this class returns `false`, and must be implemented in the derived class to be useful to that class.</span></span>  
  
 <span data-ttu-id="7a7ef-414">此方法在派生的类进行比较实现为标准的默认值，此实例的值然后返回一个布尔值，该值指示此实例的值是否相等的标准值。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-414">The implementation of this method in a derived class compares the value of this instance to a standard default value, then returns a Boolean value that indicates whether the value of this instance is equal to the standard value.</span></span> <span data-ttu-id="7a7ef-415">通常的标准值是编码为在实现中，常量，或以编程方式存储在由实现使用的字段。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-415">The standard value is typically coded as a constant in the implementation, or stored programmatically in a field used by the implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-416">下面的代码示例演示如何使用<xref:System.Attribute.IsDefaultAttribute%2A>。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-416">The following code example illustrates the use of <xref:System.Attribute.IsDefaultAttribute%2A>.</span></span>  
  
 [!code-cpp[IsDefaultAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefaultAttribute/CPP/defattr.cpp#1)]
 [!code-csharp[IsDefaultAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefaultAttribute/CS/defattr.cs#1)]
 [!code-vb[IsDefaultAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefaultAttribute/VB/defattr.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDefined">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7a7ef-417">确定是否将指定类型的任意自定义属性应用于程序集、模块、类型成员或方法参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-417">Determines whether any custom attributes of a specified type are applied to an assembly, module, type member, or method parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Assembly, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-418">一个从 <see cref="T:System.Reflection.Assembly" /> 类派生的对象，该类描述可重用模块集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-418">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-419">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-419">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-420">确定是否将任意自定义属性应用于程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-420">Determines whether any custom attributes are applied to an assembly.</span>
          </span>
          <span data-ttu-id="7a7ef-421">参数指定程序集和要搜索的自定义属性的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-421">Parameters specify the assembly, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-422">如果类型 <paramref name="attributeType" /> 的某个自定义属性应用于 <paramref name="element" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-422">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-423">从.NET Framework 2.0 版开始，此方法返回`true`如果程序集具有存储在新的元数据格式的安全属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-423">Starting with the .NET Framework version 2.0, this method returns `true` if the assembly has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-424">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-424">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-425">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-425">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-426">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-426">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-427">下面的代码示例演示如何使用<xref:System.Attribute.IsDefined%2A>，采用<xref:System.Reflection.Assembly>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-427">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-428">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-428">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-429">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-429">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As MemberInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-430">一个从 <see cref="T:System.Reflection.MemberInfo" /> 类派生的对象，该类描述类的构造函数、事件、字段、方法、类型或属性成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-430">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, type, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-431">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-431">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-432">确定是否将任意自定义属性应用于类型成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-432">Determines whether any custom attributes are applied to a member of a type.</span>
          </span>
          <span data-ttu-id="7a7ef-433">参数指定成员和要搜索的自定义属性的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-433">Parameters specify the member, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-434">如果类型 <paramref name="attributeType" /> 的某个自定义属性应用于 <paramref name="element" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-434">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-435">上级`element`来搜索自定义属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-435">The ancestors of `element` are searched for custom attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-436">从.NET Framework 2.0 版开始，此方法返回`true`类型、 方法或构造函数具有存储在新的元数据格式的安全属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-436">Starting with the .NET Framework version 2.0, this method returns `true` if a type, method, or constructor has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-437">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-437">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-438">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-438">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-439">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-439">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-440">下面的代码示例演示如何使用<xref:System.Attribute.IsDefined%2A>，采用<xref:System.Reflection.MemberInfo>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-440">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-441">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-441">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-442">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-442">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7a7ef-443">
            <paramref name="element" /> 不是构造函数、方法、属性、事件、类型或字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-443">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Module, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-444">一个从 <see cref="T:System.Reflection.Module" /> 类派生的对象，该类描述可移植的可执行文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-444">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-445">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-445">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-446">确定是否将指定类型的任何自定义属性应用于模块。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-446">Determines whether any custom attributes of a specified type are applied to a module.</span>
          </span>
          <span data-ttu-id="7a7ef-447">参数指定模块和要搜索的自定义属性的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-447">Parameters specify the module, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-448">如果类型 <paramref name="attributeType" /> 的某个自定义属性应用于 <paramref name="element" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-448">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-449">上级`element`不搜索自定义特性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-449">The ancestors of `element` are not searched for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-450">下面的代码示例演示如何使用<xref:System.Attribute.IsDefined%2A>，采用<xref:System.Reflection.Module>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-450">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-451">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-451">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-452">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-452">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As ParameterInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-453">一个从 <see cref="T:System.Reflection.ParameterInfo" /> 类派生的对象，该类描述类成员的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-453">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-454">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-454">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-455">确定是否将任意自定义属性应用于方法参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-455">Determines whether any custom attributes are applied to a method parameter.</span>
          </span>
          <span data-ttu-id="7a7ef-456">参数指定方法参数和要搜索的自定义属性的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-456">Parameters specify the method parameter, and the type of the custom attribute to search for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-457">如果类型 <paramref name="attributeType" /> 的某个自定义属性应用于 <paramref name="element" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-457">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-458">上级`element`来搜索自定义属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-458">The ancestors of `element` are searched for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-459">下面的代码示例演示如何使用<xref:System.Attribute.IsDefined%2A>，采用<xref:System.Reflection.ParameterInfo>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-459">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]
 [!code-csharp[IsDefined#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]
 [!code-vb[IsDefined#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-460">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-460">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-461">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-461">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Assembly, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Assembly ^ element, Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-462">一个从 <see cref="T:System.Reflection.Assembly" /> 类派生的对象，该类描述可重用模块集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-462">An object derived from the <see cref="T:System.Reflection.Assembly" /> class that describes a reusable collection of modules.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-463">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-463">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-464">此参数被忽略，并且不会影响此方法的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-464">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-465">确定是否将任意自定义属性应用于程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-465">Determines whether any custom attributes are applied to an assembly.</span>
          </span>
          <span data-ttu-id="7a7ef-466">参数指定程序集、要搜索的自定义属性的类型以及忽略的搜索选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-466">Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-467">如果类型 <paramref name="attributeType" /> 的某个自定义属性应用于 <paramref name="element" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-467">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-468">从.NET Framework 2.0 版开始，此方法返回`true`如果程序集具有存储在新的元数据格式的安全属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-468">Starting with the .NET Framework version 2.0, this method returns `true` if the assembly has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-469">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-469">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-470">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-470">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-471">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-471">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-472">下面的代码示例演示如何使用<xref:System.Attribute.IsDefined%2A>，采用<xref:System.Reflection.Assembly>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-472">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-473">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-473">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-474">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-474">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As MemberInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-475">一个从 <see cref="T:System.Reflection.MemberInfo" /> 类派生的对象，该类描述类的构造函数、事件、字段、方法、类型或属性成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-475">An object derived from the <see cref="T:System.Reflection.MemberInfo" /> class that describes a constructor, event, field, method, type, or property member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-476">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-476">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-477">如果为 <see langword="true" />，则指定还在 <c>element</c> 的祖先中搜索自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-477">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-478">确定是否将任意自定义属性应用于类型成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-478">Determines whether any custom attributes are applied to a member of a type.</span>
          </span>
          <span data-ttu-id="7a7ef-479">参数指定成员、要搜索的自定义属性的类型以及是否搜索成员的祖先。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-479">Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-480">如果类型 <paramref name="attributeType" /> 的某个自定义属性应用于 <paramref name="element" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-480">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7a7ef-481">从.NET Framework 2.0 版开始，此方法返回`true`类型、 方法或构造函数具有存储在新的元数据格式的安全属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-481">Starting with the .NET Framework version 2.0, this method returns `true` if a type, method, or constructor has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="7a7ef-482">使用版本 2.0 或更高版本编译的程序集使用新的格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-482">Assemblies compiled with version 2.0 or later use the new format.</span></span> <span data-ttu-id="7a7ef-483">动态程序集和与早期版本的.NET Framework 编译的程序集使用旧的 XML 格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-483">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="7a7ef-484">请参阅[发出的声明性安全属性](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5)。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-484">See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-485">下面的代码示例演示如何使用<xref:System.Attribute.IsDefined%2A>，采用<xref:System.Reflection.MemberInfo>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-485">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-486">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-486">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-487">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-487">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7a7ef-488">
            <paramref name="element" /> 不是构造函数、方法、属性、事件、类型或字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-488">
              <paramref name="element" /> is not a constructor, method, property, event, type, or field.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As Module, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::Module ^ element, Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-489">一个从 <see cref="T:System.Reflection.Module" /> 类派生的对象，该类描述可移植的可执行文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-489">An object derived from the <see cref="T:System.Reflection.Module" /> class that describes a portable executable file.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-490">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-490">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-491">此参数被忽略，并且不会影响此方法的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-491">This parameter is ignored, and does not affect the operation of this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-492">确定是否将任意自定义属性应用于模块。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-492">Determines whether any custom attributes are applied to a module.</span>
          </span>
          <span data-ttu-id="7a7ef-493">参数指定模块、要搜索的自定义属性的类型以及忽略的搜索选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-493">Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-494">如果类型 <paramref name="attributeType" /> 的某个自定义属性应用于 <paramref name="element" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-494">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-495">此方法将忽略`inherit`参数而不是搜索上级`element`自定义特性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-495">This method ignores the `inherit` parameter and does not search the ancestors of `element` for custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-496">下面的代码示例演示如何使用<xref:System.Attribute.IsDefined%2A>，采用<xref:System.Reflection.Module>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-496">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.Module> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-497">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-497">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-498">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-498">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="7a7ef-499">一个从 <see cref="T:System.Reflection.ParameterInfo" /> 类派生的对象，该类描述类成员的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-499">An object derived from the <see cref="T:System.Reflection.ParameterInfo" /> class that describes a parameter of a member of a class.</span>
          </span>
        </param>
        <param name="attributeType">
          <span data-ttu-id="7a7ef-500">要搜索的自定义属性的类型或基类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-500">The type, or a base type, of the custom attribute to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7a7ef-501">如果为 <see langword="true" />，则指定还在 <c>element</c> 的祖先中搜索自定义属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-501">If <see langword="true" />, specifies to also search the ancestors of <c>element</c> for custom attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-502">确定是否将任意自定义属性应用于方法参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-502">Determines whether any custom attributes are applied to a method parameter.</span>
          </span>
          <span data-ttu-id="7a7ef-503">参数指定方法参数、要搜索的自定义属性的类型以及是否搜索方法参数的祖先。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-503">Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-504">如果类型 <paramref name="attributeType" /> 的某个自定义属性应用于 <paramref name="element" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-504">
              <see langword="true" /> if a custom attribute of type <paramref name="attributeType" /> is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a7ef-505">下面的代码示例演示如何使用<xref:System.Attribute.IsDefined%2A>，采用<xref:System.Reflection.ParameterInfo>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-505">The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.</span></span>  
  
 [!code-cpp[IsDefined#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]
 [!code-csharp[IsDefined#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]
 [!code-vb[IsDefined#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a7ef-506">
            <paramref name="element" /> 或 <paramref name="attributeType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-506">
              <paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7a7ef-507">
            <paramref name="attributeType" /> 不是从 <see cref="T:System.Attribute" /> 派生的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-507">
              <paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="7a7ef-508">
            <paramref name="element" /> 不是方法、构造函数或类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-508">
              <paramref name="element" /> is not a method, constructor, or type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public virtual bool Match (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.Match(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Match (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Match(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7a7ef-509">与 <see cref="T:System.Object" /> 的此实例进行比较的 <see cref="T:System.Attribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-509">An <see cref="T:System.Object" /> to compare with this instance of <see cref="T:System.Attribute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-510">当在派生类中重写时，返回一个指示此实例是否等于指定对象的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-510">When overridden in a derived class, returns a value that indicates whether this instance equals a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a7ef-511">如果该实例等于 <paramref name="obj" />，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-511">
              <see langword="true" /> if this instance equals <paramref name="obj" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-512">此方法可确定如果一个<xref:System.Attribute>等于另一个。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-512">This method determines if one <xref:System.Attribute> equals another.</span></span> <span data-ttu-id="7a7ef-513">其默认实现是相同<xref:System.Attribute.Equals%2A>，它确定是否两个属性均为相同类型，并具有相同的字段值。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-513">Its default implementation is the same as <xref:System.Attribute.Equals%2A>, which determines whether two attributes are of the same type and have the same field values.</span></span>

 <span data-ttu-id="7a7ef-514">一般情况下，<xref:System.Attribute.Equals%2A>方法旨在执行标准测试引用或值是否相等。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-514">In general, the <xref:System.Attribute.Equals%2A> method is intended to perform a standard test for reference or value equality.</span></span> <span data-ttu-id="7a7ef-515">您可以重写<xref:System.Attribute.Match%2A>时要执行的自定义比较基于某些条件除两个属性实例的相等性的方法均为相同类型，并且具有 identifical 值。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-515">You can override the <xref:System.Attribute.Match%2A> method when you want to perform a custom comparison for equality that is based on some criteria other than that two attribute instances are of the same type and have identifical values.</span></span> <span data-ttu-id="7a7ef-516">例如，你可以重写<xref:System.Attribute.Match%2A>方法来比较以下方案中的属性：</span><span class="sxs-lookup"><span data-stu-id="7a7ef-516">For example, you can override the <xref:System.Attribute.Match%2A> method to compare attributes in the following scenarios:</span></span>

 - <span data-ttu-id="7a7ef-517">属性包含一个位字段，并且您考虑两个特性实例相等，是否设置了特定位。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-517">An attribute includes a bit field, and you consider two attribute instances equal if a particular bit is set.</span></span> <span data-ttu-id="7a7ef-518">例如，`NumericDisplay`属性可能包括的位字段，该值指示哪些数值的格式 （例如二进制、 八进制、 十进制和十六进制） 客户端支持。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-518">For example, a `NumericDisplay` attribute might include a bit field that indicates what numeric formats (such as binary, octal, decimal, and hexadecimal) a client supports.</span></span> <span data-ttu-id="7a7ef-519">重写<xref:System.Attribute.Match%2A>方法可以考虑两个实例相等，是否它们支持的相同的数字格式。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-519">The overridden <xref:System.Attribute.Match%2A> method might consider two instances equal if they support the same numeric format.</span></span>

 - <span data-ttu-id="7a7ef-520">属性包括多个字段包含相同类型的信息，或它包含在其中值可以按任何顺序的数组。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-520">An attribute includes multiple fields that contain the same kind of information, or it contains an array in which values can be in any order.</span></span> <span data-ttu-id="7a7ef-521">例如，`Author`属性可能包含多个字段的作者的名称。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-521">For example, an `Author` attribute might include multiple fields for author names.</span></span> <span data-ttu-id="7a7ef-522">重写<xref:System.Attribute.Match%2A>方法可以考虑两个实例相等，是否它们具有相同作者，无论是否等于对应的字段的每个字段。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-522">The overridden <xref:System.Attribute.Match%2A> method might consider two instances equal if they have the same authors regardless of whether each field is equal to the corresponding field.</span></span>    
 
 
## <a name="example"></a><span data-ttu-id="7a7ef-523">示例</span><span class="sxs-lookup"><span data-stu-id="7a7ef-523">Example</span></span>  
 <span data-ttu-id="7a7ef-524">下面的示例演示如何使用<xref:System.Attribute.Match%2A>以创建特性值的自定义比较方法。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-524">The following example illustrates the use of <xref:System.Attribute.Match%2A> to create a custom comparison method for attribute values.</span></span> <span data-ttu-id="7a7ef-525">如果定义`AuthorsAttribute`内部包含`List<String>`存储作者的名称。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-525">If defines an `AuthorsAttribute` that internally contains a `List<String>` that stores authors' names.</span></span> <span data-ttu-id="7a7ef-526">因为名称可按任意顺序列表中，它将重写<xref:System.Attribute.Match%2A>方法来比较作者名称而不考虑其在列表中的位置。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-526">Because the names can occur in any order in the list, it overrides the <xref:System.Attribute.Match%2A> method to compare author names regardless of their position in the list.</span></span> <span data-ttu-id="7a7ef-527">请注意<xref:System.Attribute.Equals%2A>方法，该执行值是否相等的测试，方法返回不同的结果从<xref:System.Attribute.Match%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-527">Note the <xref:System.Attribute.Equals%2A> method, which performs a test for value equality, returns different results from the <xref:System.Attribute.Match%2A> method.</span></span>   
  
 [!code-csharp[Match#1](~/samples/snippets/csharp/VS_Snippets_CLR/Match/CS/match.cs)]
 [!code-vb[Match#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Match/VB/match.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Attribute.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Attribute.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Attribute::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="7a7ef-528">留待将来使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-528">Reserved for future use.</span>
          </span>
          <span data-ttu-id="7a7ef-529">必须为 IID_NULL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-529">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="7a7ef-530">要映射的名称的传入数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-530">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="7a7ef-531">要映射的名称的计数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-531">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="7a7ef-532">要在其中解释名称的区域设置上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-532">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="7a7ef-533">调用方分配的数组，用于接收与名称对应的 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-533">Caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-534">将一组名称映射为对应的一组调度标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-534">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-535">此方法用于访问托管类从非托管代码，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-535">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="7a7ef-536">有关详细信息`IDispatch::GetIDsOfNames`，请参阅 MSDN 库。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-536">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="7a7ef-537">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-537">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Attribute.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Attribute.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Attribute::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="7a7ef-538">要返回的类型信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-538">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="7a7ef-539">类型信息的区域设置标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-539">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="7a7ef-540">接收一个指针，指向请求的类型信息对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-540">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-541">检索对象的类型信息，然后可以使用该信息获取接口的类型信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-541">Retrieves the type information for an object, which can be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-542">此方法用于访问托管类从非托管代码，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-542">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="7a7ef-543">有关详细信息`IDispatch::GetTypeInfo`，请参阅 MSDN 库。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-543">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="7a7ef-544">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-544">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Attribute.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Attribute.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Attribute::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="7a7ef-545">指向一个位置，该位置接收对象提供的类型信息接口的数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-545">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-546">检索对象提供的类型信息接口的数量（0 或 1）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-546">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-547">此方法用于访问托管类从非托管代码，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-547">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="7a7ef-548">有关详细信息`IDispatch::GetTypeInfoCount`，请参阅 MSDN 库。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-548">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="7a7ef-549">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-549">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.Invoke">
      <MemberSignature Language="C#" Value="void _Attribute.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Attribute.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Attribute.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Attribute::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Attribute.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="7a7ef-550">标识成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-550">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="7a7ef-551">留待将来使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-551">Reserved for future use.</span>
          </span>
          <span data-ttu-id="7a7ef-552">必须为 IID_NULL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-552">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="7a7ef-553">要在其中解释参数的区域设置上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-553">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="7a7ef-554">描述调用的上下文的标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-554">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="7a7ef-555">指向一个结构的指针，该结构包含一个自变量数组、一个命名自变量的 DISPID 自变量数组和数组中元素数的计数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-555">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="7a7ef-556">指向要存储结果的位置的指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-556">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="7a7ef-557">指向一个包含异常信息的结构的指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-557">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="7a7ef-558">第一个出错自变量的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-558">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a7ef-559">提供对某一对象公开的属性和方法的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-559">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-560">此方法用于访问托管类从非托管代码，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-560">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="7a7ef-561">有关详细信息`IDispatch::Invoke`，请参阅 MSDN 库。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-561">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="7a7ef-562">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-562">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public virtual object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.Attribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a7ef-563">在派生类中实现时，获取此 <see cref="T:System.Attribute" /> 的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-563">When implemented in a derived class, gets a unique identifier for this <see cref="T:System.Attribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a7ef-564">一个表示该属性的唯一标识符的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a7ef-564">An <see cref="T:System.Object" /> that is a unique identifier for the attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a7ef-565">当实现时，此标识符是仅<xref:System.Type>的属性。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-565">As implemented, this identifier is merely the <xref:System.Type> of the attribute.</span></span> <span data-ttu-id="7a7ef-566">但是，它旨在用于标识属于同一类型的两个特性的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-566">However, it is intended that the unique identifier be used to identify two attributes of the same type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a7ef-567">下面的代码示例实现<xref:System.Attribute.TypeId%2A>中自定义参数属性<xref:System.Attribute>类，并演示其用法。</span><span class="sxs-lookup"><span data-stu-id="7a7ef-567">The following code example implements the <xref:System.Attribute.TypeId%2A> property in a custom parameter <xref:System.Attribute> class and shows its use.</span></span>  
  
 [!code-cpp[System.Attribute.TypeId#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.TypeId/CPP/typeid.cpp#1)]
 [!code-csharp[System.Attribute.TypeId#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.TypeId/CS/typeid.cs#1)]
 [!code-vb[System.Attribute.TypeId#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.TypeId/VB/typeid.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>