<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ArraySegment`1.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5564bfcb761e88fd4cfd398e28d03b06bc68519e8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">564bfcb761e88fd4cfd398e28d03b06bc68519e8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The type of the elements in the array segment.</source>
          <target state="translated">数组段中元素的类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ArraySegment`1">
          <source>Delimits a section of a one-dimensional array.</source>
          <target state="translated">分隔一维数组的一部分。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> is a wrapper around an array that delimits a range of elements in that array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 是一个数组，其中分隔的一系列在该数组的元素周围的包装器。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Multiple <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instances can refer to the same original array and can overlap.</source>
          <target state="translated">多个<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>实例可以引用同一个原始数组，并且可以重叠。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The original array must be one-dimensional and must have zero-based indexing.</source>
          <target state="translated">原始数组必须是一维，并且必须具有从零开始的索引。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyCollection%601&gt;</ph> interface starting with the <ph id="ph3">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; in previous versions of the .NET Framework, the <ph id="ph4">&lt;xref:System.ArraySegment%601&gt;</ph> structure did not implement this interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 实现<ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyCollection%601&gt;</ph>开头的接口<ph id="ph3">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; 在以前版本的.NET Framework 中，<ph id="ph4">&lt;xref:System.ArraySegment%601&gt;</ph>结构未实现此接口。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure is useful whenever the elements of an array will be manipulated in distinct segments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>数组的元素将在不同的段中操作时，结构很有用。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>For example:</source>
          <target state="translated">例如:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>You can pass an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object that represents only a portion of an array as an argument to a method, rather than call a relatively expensive method like <ph id="ph2">&lt;xref:System.Array.Copy%2A&gt;</ph> to pass a copy of a portion of an array.</source>
          <target state="translated">你可以将传递<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>表示仅为一部分数组作为方法的自变量的对象，而不是调用代价相对较大方法喜欢<ph id="ph2">&lt;xref:System.Array.Copy%2A&gt;</ph>传递数组的一部分的副本。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>In a multithreaded app, you can use the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to have each thread operate on only a portion of the array.</source>
          <target state="translated">在多线程应用中，你可以使用<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>结构，让它在仅为一部分数组上运行每个线程。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>For task-based asynchronous operations, you can use an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object to ensure that each task operates on a distinct segment of the array.</source>
          <target state="translated">对于基于任务的异步操作，你可以使用<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>对象以确保每个任务对数组的非重复段。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The following example divides an array into individual segments with up to ten elements.</source>
          <target state="translated">下面的示例将划分为单独的段与最多十个元素的数组。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Each element in the segment is multiplied by its segment number.</source>
          <target state="translated">段中的每个元素将乘以其段数字。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The result shows that using the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> class to manipulate elements in this way changes the values of its underlying array.</source>
          <target state="translated">结果显示使用<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>类来处理这种方式中的元素会更改其基础的数组的值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Note, however, that although the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure can be used to divide an array into distinct segments, the segments are not completely independent of one another.</source>
          <target state="translated">但是，请注意，尽管<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>结构可以用于划分为不同的段的数组的段不是完全独立于另一个。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The <ph id="ph1">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> property returns the entire original array, not a copy of the array; therefore, changes made to the array returned by the <ph id="ph2">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> property are made to the original array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph>属性返回整个原始数组不是数组的副本; 因此，对所做的更改是返回的数组由<ph id="ph2">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph>属性都会对原始数组。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>If this is undesirable, you should perform operations on a copy of the array, rather than an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object that represents a portion of the array.</source>
          <target state="translated">如果不希望这样，你应执行操作副本上的数组，而非<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>表示数组的一部分的对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%2A&gt;</ph> method and the equality and inequality operators test for reference equality when they compare two <ph id="ph2">&lt;xref:System.ArraySegment%601&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%2A&gt;</ph>方法和相等和不相等运算符测试引用相等性时它们比较两个<ph id="ph2">&lt;xref:System.ArraySegment%601&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>For two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects to be considered equal, they must meet all of the following conditions:</source>
          <target state="translated">对于两个<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>对象被视为相等，它们必须满足所有以下条件：</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Reference the same array.</source>
          <target state="translated">引用相同的数组。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Begin at the same index in the array.</source>
          <target state="translated">在数组中的相同索引处开始。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>Have the same number of elements.</source>
          <target state="translated">具有相同数量的元素。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>If you want to retrieve an element by its index in the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object, you must cast it to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> object and retrieve it or modify it by using the <ph id="ph3">&lt;xref:System.Collections.Generic.IList%601.Item%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果你想要按其索引中检索元素<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>对象，你必须将它转换到<ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>对象并对其进行检索或修改它通过使用<ph id="ph3">&lt;xref:System.Collections.Generic.IList%601.Item%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The following example retrieves the element in an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> object that delimits a section of a string array.</source>
          <target state="translated">下面的示例检索中的元素<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>分隔的字符串数组的一部分的对象。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ArraySegment`1">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">下面的代码示例传递<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>到方法的结构。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.ArraySegment`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 结构的新实例。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>The array to wrap.</source>
          <target state="translated">要包装的数组。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure that delimits all the elements in the specified array.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 结构的新实例，该结构用于分隔指定数组中的所有元素。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> that delimits all the elements of <ph id="ph2">`array`</ph>.</source>
          <target state="translated">此构造函数创建<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>分隔的所有元素<ph id="ph2">`array`</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>That is, the <ph id="ph1">&lt;xref:System.ArraySegment%601.Offset%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ArraySegment%601&gt;</ph> is 0 and its <ph id="ph3">&lt;xref:System.ArraySegment%601.Count%2A&gt;</ph> property is the length of <ph id="ph4">`array`</ph>.</source>
          <target state="translated">也就是说，<ph id="ph1">&lt;xref:System.ArraySegment%601.Offset%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.ArraySegment%601&gt;</ph>为 0 并将其<ph id="ph3">&lt;xref:System.ArraySegment%601.Count%2A&gt;</ph>属性是长度<ph id="ph4">`array`</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>To create an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> that delimits only part of an array, use the <ph id="ph2">&lt;xref:System.ArraySegment%601.%23ctor%28%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">若要创建<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>分隔仅数组的一部分，请使用<ph id="ph2">&lt;xref:System.ArraySegment%601.%23ctor%28%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>The original array must be one-dimensional and must have zero-based indexing.</source>
          <target state="translated">原始数组必须是一维，并且必须具有从零开始的索引。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>Multiple <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instances can refer to the same original array and can overlap.</source>
          <target state="translated">多个<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>实例可以引用同一个原始数组，并且可以重叠。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">下面的代码示例传递<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>到方法的结构。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[])">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The array containing the range of elements to delimit.</source>
          <target state="translated">包含要分隔的元素范围的数组。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The zero-based index of the first element in the range.</source>
          <target state="translated">范围中第一个元素的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The number of elements in the range.</source>
          <target state="translated">范围中的元素数。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure that delimits the specified range of the elements in the specified array.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 结构的新结构，该结构用于分隔指定数组中指定的元素范围。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The original array must be one-dimensional and must have zero-based indexing.</source>
          <target state="translated">原始数组必须是一维，并且必须具有从零开始的索引。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>Multiple <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instances can refer to the same original array and can overlap.</source>
          <target state="translated">多个<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>实例可以引用同一个原始数组，并且可以重叠。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">下面的代码示例传递<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>到方法的结构。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小于 0。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not specify a valid range in <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 未在 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 中指定有效范围。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.Array">
          <source>Gets the original array containing the range of elements that the array segment delimits.</source>
          <target state="translated">获取原始数组，其中包含数组段分隔的元素范围。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Array">
          <source>The original array that was passed to the constructor, and that contains the range delimited by the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</source>
          <target state="translated">传递到构造函数并且包含由 <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 分隔的范围的原始数组。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Array">
          <source>The <ph id="ph1">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph> property returns the original array, not a copy of the array; therefore, changes made through the property are made directly to the original array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArraySegment%601.Array%2A&gt;</ph>属性返回原始数组，而不是数组的副本; 因此，直接对原始数组进行通过属性所做的更改。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Array">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> to a method.</source>
          <target state="translated">下面的代码示例传递<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>到方法。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.Count">
          <source>Gets the number of elements in the range delimited by the array segment.</source>
          <target state="translated">获取由数组段分隔的范围中的元素个数。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Count">
          <source>The number of elements in the range delimited by the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 分隔的范围中的元素个数。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Count">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">下面的代码示例传递<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>到方法的结构。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.ArraySegment`1">
          <source>Determines whether two objects are equal.</source>
          <target state="translated">确定两个对象是否相等。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>The structure to compare with the current instance.</source>
          <target state="translated">要与当前实例进行比较的结构。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure is equal to the current instance.</source>
          <target state="translated">确定指定的 <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 结构是否等于当前实例。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure is equal to the current instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的 <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 结构等于当前实例，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>Two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects are considered to be equal if all the following conditions are met:</source>
          <target state="translated">两个<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>对象被视为相等，如果满足所有以下条件：</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>They reference the same array.</source>
          <target state="translated">它们引用相同的阵列。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>They begin at the same index in the array.</source>
          <target state="translated">它们在数组中的相同索引处开始。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
          <source>They have the same number of elements.</source>
          <target state="translated">它们具有相同数量的元素。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>The object to be compared with the current instance.</source>
          <target state="translated">要与当前实例进行比较的对象。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>Determines whether the specified object is equal to the current instance.</source>
          <target state="translated">确定指定的对象是否等于当前实例。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is a <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structure and is equal to the current instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的对象为 <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 结构并且等于当前实例，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>Two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects are considered to be equal if all the following conditions are met:</source>
          <target state="translated">两个<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>对象被视为相等，如果满足所有以下条件：</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>They reference the same array.</source>
          <target state="translated">它们引用相同的阵列。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>They begin at the same index in the array.</source>
          <target state="translated">它们在数组中的相同索引处开始。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.Equals(System.Object)">
          <source>They have the same number of elements.</source>
          <target state="translated">它们具有相同数量的元素。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.GetHashCode">
          <source>Returns the hash code for the current instance.</source>
          <target state="translated">返回当前实例的哈希代码。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 位有符号整数哈希代码。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.Offset">
          <source>Gets the position of the first element in the range delimited by the array segment, relative to the start of the original array.</source>
          <target state="translated">获取由数组段分隔的范围中的第一个元素的位置（相对于原始数组的开始位置）。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Offset">
          <source>The position of the first element in the range delimited by the <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>, relative to the start of the original array.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 分隔的范围中的第一个元素的位置（相对于原始数组的开始位置）。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.Offset">
          <source>The following code example passes an <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> structure to a method.</source>
          <target state="translated">下面的代码示例传递<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>到方法的结构。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The  structure on the left side of the equality operator.</source>
          <target state="translated">相等运算符左侧的结构。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The structure on the right side of the equality operator.</source>
          <target state="translated">相等运算符右侧的结构。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>Indicates whether two <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structures are equal.</source>
          <target state="translated">指示两个 <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 结构是否相等。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="a" /&gt;</ph> is equal to <ph id="ph3">&lt;paramref name="b" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 等于 <ph id="ph2">&lt;paramref name="a" /&gt;</ph>，则为 <ph id="ph3">&lt;paramref name="b" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>Two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects are considered to be equal if all the following conditions are met:</source>
          <target state="translated">两个<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>对象被视为相等，如果满足所有以下条件：</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They reference the same array.</source>
          <target state="translated">它们引用相同的阵列。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They begin at the same index.</source>
          <target state="translated">它们在相同的索引处开始。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They have the same number of elements.</source>
          <target state="translated">它们具有相同数量的元素。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%28System.ArraySegment%7B%600%7D%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%28System.ArraySegment%7B%600%7D%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The structure on the left side of the inequality operator.</source>
          <target state="translated">不等运算符左侧的结构。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The structure on the right side of the inequality operator.</source>
          <target state="translated">不等运算符右侧的结构。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>Indicates whether two <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> structures are unequal.</source>
          <target state="translated">指示两个 <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 结构是否不相等。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="a" /&gt;</ph> is not equal to <ph id="ph3">&lt;paramref name="b" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 不等于 <ph id="ph2">&lt;paramref name="a" /&gt;</ph>，则为 <ph id="ph3">&lt;paramref name="b" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>Two <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> objects are considered to be unequal if they are of the same closed generic type but any of the following conditions is true:</source>
          <target state="translated">两个<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>对象被视为是不相等，如果它们相同的封闭式泛型类型，但以下任何条件适用：</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They do not reference the same array.</source>
          <target state="translated">它们不引用相同的阵列。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They have different starting indexes.</source>
          <target state="translated">它们具有不同的起始索引。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>They have a different number of elements.</source>
          <target state="translated">它们具有不同数目的元素。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%28System.ArraySegment%7B%600%7D%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.ArraySegment%601.Equals%28System.ArraySegment%7B%600%7D%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The object to add to the array segment.</source>
          <target state="translated">要添加到数组段的对象。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds an item to the array segment.</source>
          <target state="translated">向数组段添加一项。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The array segment is read-only.</source>
          <target state="translated">数组段是只读的。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>Removes all items from the array segment.</source>
          <target state="translated">从数组段中移除所有项。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>The array segment is read-only.</source>
          <target state="translated">数组段是只读的。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source>The object to locate in the array segment.</source>
          <target state="translated">要在数组段中查找的对象。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source>Determines whether the array segment contains a specific value.</source>
          <target state="translated">确定数组段是否包含特定值。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is found in the array segment; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在数组段中找到 <ph id="ph2">&lt;paramref name="item" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Contains(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the array segment.</source>
          <target state="translated">作为从数组段复制的元素的目标数组的一维数组。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">该数组的索引必须从零开始。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>Copies the elements of the array segment to an array, starting at the specified array index.</source>
          <target state="translated">从指定的数组索引开始，将数组段的元素复制到一个数组中。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> 小于 0。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多维的。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source array segment is greater than the available space from <ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">源数组段中的元素数大于从 <ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> 到目标 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的末尾的可用空间。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>Type <ph id="ph1">&lt;paramref name="T" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">无法自动将类型 <ph id="ph1">&lt;paramref name="T" /&gt;</ph> 强制转换为目标 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的类型。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value that indicates whether the array segment  is read-only.</source>
          <target state="translated">获取一个值，该值指示该数组段是否为只读。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the array segment is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果数组段为只读，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>The object to remove from the array segment.</source>
          <target state="translated">要从数组段中移除的对象。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>Removes the first occurrence of a specific object from the array segment.</source>
          <target state="translated">从数组段中移除特定对象的第一个匹配项。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> was successfully removed from the array segment; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果从数组段中成功移除了 <ph id="ph2">&lt;paramref name="item" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is not found in the array segment.</source>
          <target state="translated">如果在数组段中找不到 <ph id="ph2">&lt;paramref name="item" /&gt;</ph>，此方法也会返回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>The array segment is read-only.</source>
          <target state="translated">数组段是只读的。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through the array segment.</source>
          <target state="translated">返回循环访问数组段的枚举器。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator that can be used to iterate through the array segment.</source>
          <target state="translated">一个枚举器，可用于循环访问数组段。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>The object to locate in the array segment.</source>
          <target state="translated">要在数组段中查找的对象。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>Determines the index of a specific item in the array segment.</source>
          <target state="translated">确定数组段中特定项的索引。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>The index of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> if found in the list; otherwise, -1.</source>
          <target state="translated">如果在列表中找到，则为 <ph id="ph1">&lt;paramref name="item" /&gt;</ph> 的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#IndexOf(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">从零开始的索引，应在该位置插入 <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>The object to insert into the array segment.</source>
          <target state="translated">要插入数组段中的对象。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>Inserts an item into the array segment at the specified index.</source>
          <target state="translated">将一个项插入数组段中的指定索引处。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the array segment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 不是数组段中的有效索引。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Insert(System.Int32,`0)">
          <source>The array segment is read-only.</source>
          <target state="translated">数组段是只读的。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">要获取或设置的元素的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">获取或设置指定索引处的元素。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">指定索引处的元素。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface, as the following example shows.</source>
          <target state="translated">可以使用它时，才<ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph>实例被强制转换为<ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>接口，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 中的有效索引。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The property is set and the array segment is read-only.</source>
          <target state="translated">设置该属性，而且数组段为只读。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>The zero-based index of the item to remove.</source>
          <target state="translated">要移除的项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>Removes the array segment item at the specified index.</source>
          <target state="translated">移除指定索引处的数组段。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the array segment.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 不是数组段中的有效索引。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#Generic#IList&amp;lt;T&amp;gt;#RemoveAt(System.Int32)">
          <source>The array segment is read-only.</source>
          <target state="translated">数组段是只读的。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The zero-based index of the element to get.</source>
          <target state="translated">要获取的元素的索引(索引从零开始)。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>Gets the element at the specified index of the array segment.</source>
          <target state="translated">获取数组段的指定索引处的元素。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">指定索引处的元素。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyList%601&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.Generic.IReadOnlyList%601&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> 中的有效索引。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList&amp;lt;T&amp;gt;#Item(System.Int32)">
          <source>The property is set.</source>
          <target state="translated">已设置此属性。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through an array segment.</source>
          <target state="translated">返回循环访问数组段的枚举器。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the array segment.</source>
          <target state="translated">一个枚举器，可用于循环访问数组段。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.ArraySegment%601&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 接口时使用。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>