<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Boolean.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55c74586023e1e3eff46870d9a381696caa8b39fd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c74586023e1e3eff46870d9a381696caa8b39fd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Boolean">
          <source>Represents a Boolean (<ph id="ph1">&lt;see langword="true" /&gt;</ph> or <ph id="ph2">&lt;see langword="false" /&gt;</ph>) value.</source>
          <target state="translated">表示一个布尔（<ph id="ph1">&lt;see langword="true" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="false" /&gt;</ph>）值。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance can have either of two values: <ph id="ph2">`true`</ph>, or <ph id="ph3">`false`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>实例只能有两个值： <ph id="ph2">`true`</ph>，或<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> structure provides methods that support the following tasks:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph>结构可提供支持以下任务的方法：</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Converting Boolean values to strings: <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph></source>
          <target state="translated">将布尔值转换为字符串： <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Parsing strings to convert them to Boolean values: <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Boolean.TryParse%2A&gt;</ph></source>
          <target state="translated">分析字符串来将它们转换为布尔值：<ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph>和 <ph id="ph2">&lt;xref:System.Boolean.TryParse%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Comparing values: <ph id="ph1">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Boolean.Equals%2A&gt;</ph></source>
          <target state="translated">对值进行比较：<ph id="ph1">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph>和 <ph id="ph2">&lt;xref:System.Boolean.Equals%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following sections explain these tasks and other usage details:</source>
          <target state="translated">以下各节介绍这些任务和其他用法的详细信息：</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Formatting Boolean values<ept id="p1">](#Formatting)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>格式设置的布尔值<ept id="p1">](#Formatting)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Converting to and from Boolean values<ept id="p1">](#Converting)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>转换至 / 自布尔值<ept id="p1">](#Converting)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Parsing Boolean values<ept id="p1">](#Parsing)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>分析布尔值<ept id="p1">](#Parsing)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Comparing Boolean values<ept id="p1">](#Comparing)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>将布尔值进行比较<ept id="p1">](#Comparing)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Working with Booleans as binary values<ept id="p1">](#Binary)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>使用作二进制值的布尔值<ept id="p1">](#Binary)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Performing operations with Boolean values<ept id="p1">](#Operations)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>使用布尔值执行操作<ept id="p1">](#Operations)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source><bpt id="p1">[</bpt>Booleans and Interop<ept id="p1">](#Interop)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>布尔值和互操作<ept id="p1">](#Interop)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Formatting Boolean values</source>
          <target state="translated">格式设置的布尔值</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The string representation of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> is either "True" for a <ph id="ph2">`true`</ph> value or "False" for a <ph id="ph3">`false`</ph> value.</source>
          <target state="translated">字符串表示形式<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>为"True"<ph id="ph2">`true`</ph>值或"False"的<ph id="ph3">`false`</ph>值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The string representation of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value is defined by the read-only <ph id="ph2">&lt;xref:System.Boolean.TrueString&gt;</ph> and <ph id="ph3">&lt;xref:System.Boolean.FalseString&gt;</ph> fields.</source>
          <target state="translated">字符串表示形式<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>值由只读<ph id="ph2">&lt;xref:System.Boolean.TrueString&gt;</ph>和<ph id="ph3">&lt;xref:System.Boolean.FalseString&gt;</ph>字段。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You use the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method to convert Boolean values to strings.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph>方法将布尔值转换为字符串。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The Boolean structure includes two <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> overloads: the parameterless <ph id="ph2">&lt;xref:System.Boolean.ToString&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> method, which includes a parameter that controls formatting.</source>
          <target state="translated">此布尔结构包含两个<ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph>重载： 无参数<ph id="ph2">&lt;xref:System.Boolean.ToString&gt;</ph>方法和<ph id="ph3">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph>方法，其中包括控制格式设置的参数。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, because this parameter is ignored, the two overloads produce identical strings.</source>
          <target state="translated">但是，忽略此参数，因为两个重载会产生相同的字符串。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> method does not support culture-sensitive formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph>方法不支持区分区域性的格式。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example illustrates formatting with the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示使用格式设置<ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Note that the example uses the <bpt id="p1">[</bpt>composite formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> feature, so the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method is called implicitly.</source>
          <target state="translated">请注意，该示例使用<bpt id="p1">[</bpt>复合格式设置<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>功能，因此<ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph>隐式调用方法。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Because the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> structure can have only two values, it is easy to add custom formatting.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>结构有只有两个值，可轻松添加自定义格式设置。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For simple custom formatting in which other string literals are substituted for "True" and "False", you can use any conditional evaluation feature supported by your language, such as the <bpt id="p1">[</bpt>conditional operator<ept id="p1">](~/docs/csharp/language-reference/operators/conditional-operator.md)</ept> in C# or the <bpt id="p2">[</bpt>If operator<ept id="p2">](~/docs/visual-basic/language-reference/operators/if-operator.md)</ept> in Visual Basic.</source>
          <target state="translated">对于简单自定义格式设置中的其他字符串文本替换为"True"和"False"，你可以使用由你的语言，如支持任何条件评估功能<bpt id="p1">[</bpt>条件运算符<ept id="p1">](~/docs/csharp/language-reference/operators/conditional-operator.md)</ept>在 C# 或<bpt id="p2">[</bpt>如果运算符<ept id="p2">](~/docs/visual-basic/language-reference/operators/if-operator.md)</ept>在 Visual Basic 中。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example uses this technique to format <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> values as "Yes" and "No" rather than "True" and "False".</source>
          <target state="translated">下面的示例使用该技术来格式化<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>值为"是"和"否"而不是"True"和"False"。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For more complex custom formatting operations, including culture-sensitive formatting, you can call the <ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method and provide an <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph> implementation.</source>
          <target state="translated">对于更复杂自定义的格式设置操作，包括区分区域性的格式设置，你可以调用<ph id="ph1">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>方法并提供<ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.</source>
          <target state="translated">下面的示例实现<ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>和<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>接口来提供用于英语 （美国）、 法语 （法国） 和俄语 （俄罗斯） 区域性的区分区域性的布尔值字符串。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Optionally, you can use <bpt id="p1">[</bpt>resource files<ept id="p1">](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890)</ept> to define culture-specific Boolean strings.</source>
          <target state="translated">或者，你可以使用<bpt id="p1">[</bpt>资源文件<ept id="p1">](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890)</ept>定义特定于区域性的布尔值字符串。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Converting to and from Boolean values</source>
          <target state="translated">转换至 / 自布尔值</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> structure implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph>结构实现<ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>As a result, you can use the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class to perform conversions between a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> value and any other primitive type in the .NET Framework, or you can call the <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> structure's explicit implementations.</source>
          <target state="translated">因此，你可以使用<ph id="ph1">&lt;xref:System.Convert&gt;</ph>类来执行之间的转换<ph id="ph2">&lt;xref:System.Boolean&gt;</ph>值和.NET Framework 中，或者您的任何其他基元类型都可以调用<ph id="ph3">&lt;xref:System.Boolean&gt;</ph>结构的显式实现。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, conversions between a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> and the following types are not supported, so the corresponding conversion methods throw an <ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph> exception:</source>
          <target state="translated">但是，之间的转换<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>及以下不支持类型，因此这些相应的转换方法将引发<ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph>异常：</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Conversion between <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> and <ph id="ph2">&lt;xref:System.Char&gt;</ph> (the <ph id="ph3">&lt;xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> methods)</source>
          <target state="translated">之间的转换<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>和<ph id="ph2">&lt;xref:System.Char&gt;</ph>(<ph id="ph3">&lt;xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType&gt;</ph>和<ph id="ph4">&lt;xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType&gt;</ph>方法)</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Conversion between <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> (the <ph id="ph3">&lt;xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> methods)</source>
          <target state="translated">之间的转换<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>和<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>(<ph id="ph3">&lt;xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType&gt;</ph>和<ph id="ph4">&lt;xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType&gt;</ph>方法)</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>All conversions from integral or floating-point numbers to Boolean values convert non-zero values to <ph id="ph1">`true`</ph> and zero values to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">从整型或浮点数字的所有转换为布尔值都转换为非零值<ph id="ph1">`true`</ph>和零值到<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example illustrates this by calling selected overloads of the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">下面的示例阐释了这一点通过调用所选的重载<ph id="ph1">&lt;xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>When converting from floating-point values to Boolean values, the conversion methods perform an exact comparison with zero.</source>
          <target state="translated">从浮点值转换为布尔值时, 的转换方法将执行与零的确切比较。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>If the floating-point value has lost precision, the result can be unexpected.</source>
          <target state="translated">浮点值已失去精度，如果将会导致意外。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>This is illustrated in the following example, in which a <ph id="ph1">&lt;xref:System.Double&gt;</ph> variable whose value should be zero is converted to a Boolean value.</source>
          <target state="translated">这一点在以下示例中，在其中<ph id="ph1">&lt;xref:System.Double&gt;</ph>其值应为零的变量转换为布尔值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>As the example shows, the result is <ph id="ph1">`true`</ph> because repeated additions of 0.2 have resulted in a loss of precision.</source>
          <target state="translated">如示例所示，结果是<ph id="ph1">`true`</ph>因为重复 0.2 添加具有导致精度损失。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>When converting from Boolean to numeric values, the conversion methods of the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class convert <ph id="ph2">`true`</ph> to 1 and <ph id="ph3">`false`</ph> to 0.</source>
          <target state="translated">从布尔值转换为数值的转换方法时<ph id="ph1">&lt;xref:System.Convert&gt;</ph>类转换<ph id="ph2">`true`</ph>为 1 和<ph id="ph3">`false`</ph>为 0。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, Visual Basic conversion functions convert <ph id="ph1">`true`</ph> to either 255 (for conversions to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values) or -1 (for all other numeric conversions).</source>
          <target state="translated">但是，Visual Basic 转换函数转换<ph id="ph1">`true`</ph>为任一 255 (转换到<ph id="ph2">&lt;xref:System.Byte&gt;</ph>值) 或为-1 （对于所有其他数值的转换）。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example converts <ph id="ph1">`true`</ph> to numeric values by using a <ph id="ph2">&lt;xref:System.Convert&gt;</ph> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator.</source>
          <target state="translated">以下示例将转换<ph id="ph1">`true`</ph>为数字值，通过使用<ph id="ph2">&lt;xref:System.Convert&gt;</ph>方法，并在 Visual Basic 示例中，通过使用 Visual Basic 语言的自己的转换运算符。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For conversions from <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> to string values, see the <bpt id="p1">[</bpt>Formatting Boolean Values<ept id="p1">](#Formatting)</ept> section.</source>
          <target state="translated">有关从转换<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>字符串值，请参阅<bpt id="p1">[</bpt>格式设置布尔值<ept id="p1">](#Formatting)</ept>部分。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For conversions from strings to <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> values, see the <bpt id="p1">[</bpt>Parsing Boolean Values<ept id="p1">](#Parsing)</ept> section.</source>
          <target state="translated">从字符串转换为<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>值，请参阅<bpt id="p1">[</bpt>分析布尔值<ept id="p1">](#Parsing)</ept>部分。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Parsing Boolean values</source>
          <target state="translated">分析布尔值</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> structure includes two static parsing methods, <ph id="ph2">&lt;xref:System.Boolean.Parse%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Boolean.TryParse%2A&gt;</ph>, that convert a string to a Boolean value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph>结构包含两个静态分析方法，<ph id="ph2">&lt;xref:System.Boolean.Parse%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Boolean.TryParse%2A&gt;</ph>，，将字符串转换为布尔值。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> and <ph id="ph2">&lt;xref:System.Boolean.FalseString&gt;</ph> fields, which are "True" and "False", respectively.</source>
          <target state="translated">一个布尔值的字符串表示定义不区分大小写的值等效的字符代替<ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph>和<ph id="ph2">&lt;xref:System.Boolean.FalseString&gt;</ph>为"True"和"False"，分别的字段。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>In other words, the only strings that parse successfully are "True", "False", "true", "false", or some mixed-case equivalent.</source>
          <target state="translated">换而言之，已成功分析的唯一字符串是"True"、"False"、"true"、"false"或某些大小写混合的等效项。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You cannot successfully parse numeric strings such as "0" or "1".</source>
          <target state="translated">你无法成功分析数值字符串，例如"0"或"1"。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Leading or trailing white-space characters are not considered when performing the string comparison.</source>
          <target state="translated">在执行字符串比较时，不会视为前导或尾随空白字符。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> methods to parse a number of strings.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Boolean.TryParse%2A&gt;</ph>方法分析字符串的数量。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Note that only the case-insensitive equivalents of "True" and "False" can be successfully parsed.</source>
          <target state="translated">请注意，可以成功分析仅"True"和"False"的等效的不区分大小写。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>If you are programming in Visual Basic, you can use the <ph id="ph1">`CBool`</ph> function to convert the string representation of a number to a Boolean value.</source>
          <target state="translated">如果你在 Visual Basic 中进行编程，你可以使用<ph id="ph1">`CBool`</ph>函数可将数字的字符串表示转换为布尔值。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>"0" is converted to <ph id="ph1">`false`</ph>, and the string representation of any non-zero value is converted to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">转换为"0" <ph id="ph1">`false`</ph>，而任何非零值的字符串表示转换为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>If you are not programming in Visual Basic, you must convert your numeric string to a number before converting it to a Boolean.</source>
          <target state="translated">如果你不在 Visual Basic 中进行编程，必须将其转换为布尔值之前将数值字符串转换为数字。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example illustrates this by converting an array of integers to Boolean values.</source>
          <target state="translated">下面的示例阐释了这一点通过将整数的数组转换为布尔值。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Comparing Boolean values</source>
          <target state="translated">将布尔值进行比较</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Because Boolean values are either <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>, there is little reason to explicitly call the <ph id="ph3">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> method, which indicates whether an instance is greater than, less than, or equal to a specified value.</source>
          <target state="translated">布尔值都是因为<ph id="ph1">`true`</ph>或<ph id="ph2">`false`</ph>，存在很少需要显式调用<ph id="ph3">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph>方法，该值指示实例是否大于、 小于或指定的值相等。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Typically, to compare two Boolean variables, you call the <ph id="ph1">&lt;xref:System.Boolean.Equals%2A&gt;</ph> method or use your language's equality operator.</source>
          <target state="translated">通常，若要比较两个布尔变量，你可以调用<ph id="ph1">&lt;xref:System.Boolean.Equals%2A&gt;</ph>方法或使用你的语言的相等运算符。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, when you want to compare a Boolean variable with the literal Boolean value <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value.</source>
          <target state="translated">但是，当你想要比较的文字的布尔值的布尔变量<ph id="ph1">`true`</ph>或<ph id="ph2">`false`</ph>，它不需要执行操作的显式比较，因为对评估一个布尔值的结果是该布尔值。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For example, the expressions</source>
          <target state="translated">例如，表达式</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>and</source>
          <target state="translated">和</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>are equivalent, but the second is more compact.</source>
          <target state="translated">等效，但第二个是更为精简。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>However, both techniques offer comparable performance.</source>
          <target state="translated">但是，这两种方法提供水平相当的性能。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Working with Booleans as binary values</source>
          <target state="translated">使用作二进制值的布尔值</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A Boolean value occupies one byte of memory, as the following C# example shows.</source>
          <target state="translated">一个布尔值占用的一个字节的内存，如以下 C# 示例所示。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The example must be compiled with the <ph id="ph1">`/unsafe`</ph> switch.</source>
          <target state="translated">必须使用编译该示例<ph id="ph1">`/unsafe`</ph>切换。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The byte's low-order bit is used to represent its value.</source>
          <target state="translated">字节的低顺序位用于表示其值。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A value of 1 represents <ph id="ph1">`true`</ph>; a value of 0 represents <ph id="ph2">`false`</ph>.</source>
          <target state="translated">值为 1 表示<ph id="ph1">`true`</ph>; 值 0 表示<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You can use the <ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType&gt;</ph> structure to work with sets of Boolean values.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType&gt;</ph>结构，以使用集的布尔值。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You can convert a Boolean value to its binary representation by calling the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">你可以通过调用一个布尔值转换为其二进制表示形式<ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The method returns a byte array with a single element.</source>
          <target state="translated">该方法返回具有单个元素的字节数组。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>To restore a Boolean value from its binary representation, you can call the <ph id="ph1">&lt;xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要从其二进制表示形式中还原一个布尔值，可以调用<ph id="ph1">&lt;xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <ph id="ph2">&lt;xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType&gt;</ph> method to restore the value from its binary representation.</source>
          <target state="translated">下面的示例调用<ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>方法将一个布尔值转换为其二进制表示形式和显示单个位进行运算的值，并随后将调用<ph id="ph2">&lt;xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType&gt;</ph>该值还原从其二进制表示形式的方法。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Performing operations with Boolean values</source>
          <target state="translated">使用布尔值执行操作</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>This section illustrates how Boolean values are used in apps.</source>
          <target state="translated">本部分说明了如何布尔值在应用中使用。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The first section discusses its use as a flag.</source>
          <target state="translated">第一节讨论了其使用作为的标志。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The second illustrates its use for arithmetic operations.</source>
          <target state="translated">第二个演示其用法的算术运算。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Boolean values as flags</source>
          <target state="translated">为标志的布尔值</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Boolean variables are most commonly used as flags, to signal the presence or absence of some condition.</source>
          <target state="translated">布尔变量通常为标志，用于指示存在某个条件。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For example, in the <ph id="ph1">&lt;xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> method, the final parameter, <ph id="ph2">`ignoreCase`</ph>, is a flag that indicates whether the comparison of two strings is case-insensitive (<ph id="ph3">`ignoreCase`</ph> is <ph id="ph4">`true`</ph>) or case-sensitive (<ph id="ph5">`ignoreCase`</ph> is <ph id="ph6">`false`</ph>).</source>
          <target state="translated">例如，在<ph id="ph1">&lt;xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph>方法中，最后一个参数， <ph id="ph2">`ignoreCase`</ph>，是一个标志，指示两个字符串的比较不区分大小写 (<ph id="ph3">`ignoreCase`</ph>是<ph id="ph4">`true`</ph>) 或区分大小写 (<ph id="ph5">`ignoreCase`</ph>是<ph id="ph6">`false`</ph>)。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The value of the flag can then be evaluated in a conditional statement.</source>
          <target state="translated">然后可以在条件语句中计算的标志的值。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example uses a simple console app to illustrate the use of Boolean variables as flags.</source>
          <target state="translated">下面的示例使用简单的控制台应用程序演示使用为标志的布尔变量。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The app accepts command-line parameters that enable output to be redirected to a specified file (the <ph id="ph1">`/f`</ph> switch), and that enable output to be sent both to a specified file and to the console (the <ph id="ph2">`/b`</ph> switch).</source>
          <target state="translated">应用程序接受启用输出重定向到指定的文件的命令行参数 (<ph id="ph1">`/f`</ph>切换)，并允许同时向指定的文件和控制台发送输出 (<ph id="ph2">`/b`</ph>切换)。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The app defines a flag named <ph id="ph1">`isRedirected`</ph> to indicate whether output is to be sent to a file, and a flag named <ph id="ph2">`isBoth`</ph> to indicate that output should be sent to the console.</source>
          <target state="translated">应用程序定义名为的标志<ph id="ph1">`isRedirected`</ph>以指示是否输出是发送到一个文件，并且一个标志名为<ph id="ph2">`isBoth`</ph>以指示应将输出发送到控制台。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Booleans and arithmetic operations</source>
          <target state="translated">布尔值和算术运算</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A Boolean value is sometimes used to indicate the presence of a condition that triggers a mathematical calculation.</source>
          <target state="translated">一个布尔值有时用于指明触发数学计算的条件的状态。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>For example, a <ph id="ph1">`hasShippingCharge`</ph> variable might serve as a flag to indicate whether to add shipping charges to an invoice amount.</source>
          <target state="translated">例如，<ph id="ph1">`hasShippingCharge`</ph>变量可能充当一个标志，用于指示是否将传送费用添加到发票金额。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Because an operation with a <ph id="ph1">`false`</ph> value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation.</source>
          <target state="translated">因为操作<ph id="ph1">`false`</ph>值不起上的操作的结果，它不需要将布尔值转换为整数值用于数学运算。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Instead, you can use conditional logic.</source>
          <target state="translated">相反，你可以使用条件逻辑。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The following example computes an amount that consists of a subtotal, a shipping charge, and an optional service charge.</source>
          <target state="translated">下面的示例计算包含小计、 较传送的费用，以及可选的服务费用的金额。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>The <ph id="ph1">`hasServiceCharge`</ph> variable determines whether the service charge is applied.</source>
          <target state="translated"><ph id="ph1">`hasServiceCharge`</ph>变量确定是否应用了服务费用。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Instead of converting <ph id="ph1">`hasServiceCharge`</ph> to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable.</source>
          <target state="translated">而不是将转换<ph id="ph1">`hasServiceCharge`</ph>数字值和乘以服务费用的量，该示例使用条件逻辑添加服务费用金额，如果适用的话。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Booleans and interop</source>
          <target state="translated">布尔值和互操作</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>While marshaling base data types to COM is generally straightforward, the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> data type is an exception.</source>
          <target state="translated">通常简单，封送到 COM 的基数据类型时<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>数据类型为异常。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to marshal the <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> type to any of the following representations:</source>
          <target state="translated">你可以将应用<ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph>属性要封送<ph id="ph2">&lt;xref:System.Boolean&gt;</ph>类型设置为任何以下表示形式之间实现：</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Enumeration type</source>
          <target state="translated">枚举类型</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Unmanaged format</source>
          <target state="translated">非托管的格式</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A 4-byte integer value, where any nonzero value represents <ph id="ph1">`true`</ph> and 0 represents <ph id="ph2">`false`</ph>.</source>
          <target state="translated">4 字节的整数值，其中任一非零值表示<ph id="ph1">`true`</ph>和 0 表示<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>This is the default format of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> field in a structure and of a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> parameter in platform invoke calls.</source>
          <target state="translated">这是默认格式的<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>结构中和的字段<ph id="ph2">&lt;xref:System.Boolean&gt;</ph>在平台中的参数调用的调用。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A 1-byte integer value, where the 1 represents <ph id="ph1">`true`</ph> and 0 represents <ph id="ph2">`false`</ph>.</source>
          <target state="translated">1 个字节的整数值，其中 1 表示<ph id="ph1">`true`</ph>和 0 表示<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>A 2-byte integer value, where -1 represents <ph id="ph1">`true`</ph> and 0 represents <ph id="ph2">`false`</ph>.</source>
          <target state="translated">2 字节整数值，其中-1 表示<ph id="ph1">`true`</ph>和 0 表示<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>This is the default format of a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> parameter in COM interop calls.</source>
          <target state="translated">这是默认格式的<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>COM 互操作调用中的参数。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>All members of this type are thread safe.</source>
          <target state="translated">此类型的所有成员都是线程安全。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>Members that appear to modify instance state actually return a new instance initialized with the new value.</source>
          <target state="translated">实际上，看起来要修改实例状态的成员返回使用新值初始化的新实例。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Boolean">
          <source>As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</source>
          <target state="translated">作为与任何其他类型，读取和写入到共享的变量，其中包含此类型的实例必须受使用锁来确保的线程安全性。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Boolean">
          <source>Compares this instance to a specified object or <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object and returns an integer that indicates their relationship to one another.</source>
          <target state="translated">将此实例与指定的对象或 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 对象进行比较，并返回一个指示二者关系的整数。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object to compare to this instance.</source>
          <target state="translated">要与此示例比较的 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>Compares this instance to a specified <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object and returns an integer that indicates their relationship to one another.</source>
          <target state="translated">将此实例与指定的 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 对象进行比较，并返回一个指示二者关系的整数。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>A signed integer that indicates the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">一个有符号整数，指示此实例和 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 相对值。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 返回值</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 条件</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 小于零</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is <ph id="ph3">&lt;see langword="false" /&gt;</ph> and <ph id="ph4">&lt;paramref name="value" /&gt;</ph> is <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>此实例为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>，而 <ph id="ph4">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph5">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="value" /&gt;</ph> are equal (either both are <ph id="ph4">&lt;see langword="true" /&gt;</ph> or both are <ph id="ph5">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>此实例与 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 相等（都为 <ph id="ph4">&lt;see langword="true" /&gt;</ph>，或者都为 <ph id="ph5">&lt;see langword="false" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大于零</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and <ph id="ph4">&lt;paramref name="value" /&gt;</ph> is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>此实例为 <ph id="ph3">&lt;see langword="true" /&gt;</ph>，而 <ph id="ph4">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface and performs slightly better than the <ph id="ph2">&lt;xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method because it does not have to convert the <ph id="ph3">`value`</ph> parameter to an object.</source>
          <target state="translated">此方法实现<ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>接口，并且执行效果略好于<ph id="ph2">&lt;xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType&gt;</ph>方法因为它不具有要转换<ph id="ph3">`value`</ph>对对象的参数。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>If <ph id="ph1">`value`</ph> has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>位数 （为较窄） 实例类型，某些编程语言执行隐式的扩大转换，以便将参数的值转换为具有更多位数的值。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">例如，假设实例类型是<ph id="ph1">&lt;xref:System.Int32&gt;</ph>和参数类型是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>The Microsoft C# compiler generates instructions to represent the value of the parameter as an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> object, then generates a <ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method to compare the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> instance and parameter representation.</source>
          <target state="translated">Microsoft C# 编译器生成的指令来表示形式的参数值<ph id="ph1">&lt;xref:System.Int32&gt;</ph>对象，然后生成<ph id="ph2">&lt;xref:System.Int32.CompareTo%2A?displayProperty=nameWithType&gt;</ph>方法来比较<ph id="ph3">&lt;xref:System.Int32&gt;</ph>实例和参数的表示形式。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</source>
          <target state="translated">请查阅你的编程语言的文档，以确定其编译器是否对数值类型执行隐式的扩大转换。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Boolean)">
          <source>The following code example demonstrates generic and nongeneric versions of the <ph id="ph1">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph> method for several value and reference types.</source>
          <target state="translated">下面的代码示例演示泛型和非泛型版本的<ph id="ph1">&lt;xref:System.Boolean.CompareTo%2A&gt;</ph>多个值和引用类型的方法。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>An object to compare to this instance, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">要与此示例比较的对象，或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns an integer that indicates their relationship to one another.</source>
          <target state="translated">将此实例与指定对象进行比较，并返回一个指示二者关系的整数。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>A signed integer that indicates the relative order of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated">一个有符号的整数，它指示此实例和 <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 的相对顺序。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 返回值</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 条件</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 小于零</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is <ph id="ph3">&lt;see langword="false" /&gt;</ph> and <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>此实例为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>，而 <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> 为 <ph id="ph5">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> are equal (either both are <ph id="ph4">&lt;see langword="true" /&gt;</ph> or both are <ph id="ph5">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>此实例与 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> 相等（都为 <ph id="ph4">&lt;see langword="true" /&gt;</ph>，或者都为 <ph id="ph5">&lt;see langword="false" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大于零</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is <ph id="ph3">&lt;see langword="true" /&gt;</ph> and <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>此实例为 <ph id="ph3">&lt;see langword="true" /&gt;</ph>，而 <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> 为 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">`obj`</ph> must be <ph id="ph2">`null`</ph> or an instance of <ph id="ph3">`Boolean`</ph>; otherwise, an exception is thrown.</source>
          <target state="translated"><ph id="ph1">`obj`</ph> 必须是<ph id="ph2">`null`</ph>或实例<ph id="ph3">`Boolean`</ph>; 否则为将引发异常。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.CompareTo(System.Object)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">此方法实现<ph id="ph1">&lt;xref:System.IComparable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Boolean.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="T:System.Boolean">
          <source>Returns a value indicating whether this instance is equal to a specified object or <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">返回一个值，该值指示此实例是否与指定的对象或 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 相等。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value to compare to this instance.</source>
          <target state="translated">要与此实例进行比较的 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Boolean)">
          <source>Returns a value indicating whether this instance is equal to a specified <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated">返回一个值，该值指示此实例是否与指定的 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 相等。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> has the same value as this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 的值与此实例相同，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Equals(System.Boolean)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than <ph id="ph2">&lt;xref:System.Boolean.Equals%2A&gt;</ph> because it does not have to convert the <ph id="ph3">`obj`</ph> parameter to an object.</source>
          <target state="translated">此方法实现<ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph>接口，并且执行效果略好于<ph id="ph2">&lt;xref:System.Boolean.Equals%2A&gt;</ph>因为它不具有要转换<ph id="ph3">`obj`</ph>对对象的参数。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Object)">
          <source>An object to compare to this instance.</source>
          <target state="translated">要与此实例进行比较的对象。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Object)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">返回一个值，该值指示此实例是否等于指定的对象。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Boolean.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph> and has the same value as this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 为 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 且拥有与此实例相等的值，则为 <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Equals(System.Object)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>.</source>
          <target state="translated">此方法重写 <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="F:System.Boolean.FalseString">
          <source>Represents the Boolean value <ph id="ph1">&lt;see langword="false" /&gt;</ph> as a string.</source>
          <target state="translated">将布尔值 <ph id="ph1">&lt;see langword="false" /&gt;</ph> 表示为一个字符串。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="F:System.Boolean.FalseString">
          <source>This field is read-only.</source>
          <target state="translated">此字段为只读。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Boolean.FalseString">
          <source>This field is equal to the string "False".</source>
          <target state="translated">此字段为等于字符串"False"。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Boolean.FalseString">
          <source>The <ph id="ph1">&lt;xref:System.Boolean.FalseString&gt;</ph> property defines the string representation of a <ph id="ph2">`False`</ph> <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> value in formatting and parsing operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean.FalseString&gt;</ph>属性定义的字符串表示形式<ph id="ph2">`False`</ph><ph id="ph3">&lt;xref:System.Boolean&gt;</ph>格式设置和分析操作中的值。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Boolean.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">返回此实例的哈希代码。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Boolean.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 的哈希代码。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.GetHashCode">
          <source>The <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> class implements <ph id="ph2">`true`</ph> as the integer, one, and <ph id="ph3">`false`</ph> as the integer, zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean&gt;</ph>类实现<ph id="ph2">`true`</ph>的整数，一个，和<ph id="ph3">`false`</ph>的整数，零。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.GetHashCode">
          <source>However, a particular programming language might represent <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph> with other values.</source>
          <target state="translated">但是，采用特定编程语言可能代表<ph id="ph1">`true`</ph>和<ph id="ph2">`false`</ph>替换为其他值。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Boolean.GetTypeCode">
          <source>Returns the type code for the <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value type.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值类型的类型代码。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Boolean.GetTypeCode">
          <source>The enumerated constant <ph id="ph1">&lt;see cref="F:System.TypeCode.Boolean" /&gt;</ph>.</source>
          <target state="translated">枚举常数 <ph id="ph1">&lt;see cref="F:System.TypeCode.Boolean" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source>A string containing the value to convert.</source>
          <target state="translated">包含要转换的值的字符串。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source>Converts the specified string representation of a logical value to its <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> equivalent.</source>
          <target state="translated">将逻辑值的指定字符串表示形式转换为其等效的 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is equivalent to <ph id="ph3">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph>; <ph id="ph4">&lt;see langword="false" /&gt;</ph> if <ph id="ph5">&lt;paramref name="value" /&gt;</ph> is equivalent to <ph id="ph6">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 等效于 <ph id="ph3">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果 <ph id="ph5">&lt;paramref name="value" /&gt;</ph> 等效于 <ph id="ph6">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>，则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Parse(System.String)">
          <source>The <ph id="ph1">`value`</ph> parameter, optionally preceded or trailed by white space, must contain either <ph id="ph2">&lt;xref:System.Boolean.TrueString&gt;</ph> or <ph id="ph3">&lt;xref:System.Boolean.FalseString&gt;</ph>; otherwise, an exception is thrown.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数，可以选择前面或尾随的空格，必须包含<ph id="ph2">&lt;xref:System.Boolean.TrueString&gt;</ph>或<ph id="ph3">&lt;xref:System.Boolean.FalseString&gt;</ph>; 否则为将引发异常。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Parse(System.String)">
          <source>The comparison is case-insensitive.</source>
          <target state="translated">比较不区分大小写。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.Parse(System.String)">
          <source>The following code example illustrates the use of <ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Boolean.Parse%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Boolean.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not equivalent to <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 并不等效于 <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> or <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>1 if the value of this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">如果此实例的值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 1；否则为 0。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToByte%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToByte%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">不支持此转换。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">尝试使用此方法将引发 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">不支持此转换。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">不返回任何值。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>You attempt to convert a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value to a <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> value.</source>
          <target state="translated">尝试将 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值转换为 <ph id="ph2">&lt;see cref="T:System.Char" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">不支持此转换。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">不支持此转换。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">尝试使用此方法将引发 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">不支持此转换。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">不返回任何值。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>You attempt to convert a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value to a <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated">尝试将 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值转换为 <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">不支持此转换。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>..</source>
          <target state="translated">有关此成员的说明，请参见 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">如果此实例的值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 1；否则为 0。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>..</source>
          <target state="translated">有关此成员的说明，请参见 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">如果此实例的值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 1；否则为 0。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDouble%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToDouble%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">如果此实例的值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 1；否则为 0。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt16%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToInt16%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">如果此实例的值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 1；否则为 0。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt32%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToInt32%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">如果此实例的值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 1；否则为 0。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">如果此实例的值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 1；否则为 0。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>..</source>
          <target state="translated">有关此成员的说明，请参见 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">如果此实例的值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 1；否则为 0。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The desired type.</source>
          <target state="translated">所需类型。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> implementation that supplies culture-specific information about the format of the returned value.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> 实现，提供有关返回值格式的区域性特定信息。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An object of the specified type, with a value that is equivalent to the value of this <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> object.</source>
          <target state="translated">一个指定类型的对象，其值与此 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 对象的值相等。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The requested type conversion is not supported.</source>
          <target state="translated">不支持请求的类型转换。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">如果此实例的值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 1；否则为 0。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">如果此实例的值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 1；否则为 0。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>1 if this instance is <ph id="ph1">&lt;see langword="true" /&gt;</ph>; otherwise, 0.</source>
          <target state="translated">如果此实例的值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 1；否则为 0。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建议的替代项是调用<ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="T:System.Boolean">
          <source>Converts the value of this instance to its equivalent string representation (either "True" or "False").</source>
          <target state="translated">将此实例的值转换为其等效字符串表示形式（“True”或“False”）。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString">
          <source>Converts the value of this instance to its equivalent string representation (either "True" or "False").</source>
          <target state="translated">将此实例的值转换为其等效字符串表示形式（“True”或“False”）。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString">
          <source>"True" (the value of the <ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> property) if the value of this instance is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, or "False" (the value of the <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> property) if the value of this instance is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此实例的值为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，则为“True”（<ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> 属性的值）；如果此实例的值为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>，则为“False”（<ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> 属性的值）。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString">
          <source>This method returns the constants "True" or "False".</source>
          <target state="translated">此方法返回"True"或"False"的常量。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString">
          <source>Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</source>
          <target state="translated">请注意，XML 是区分大小写，并且 XML 规范识别"true"和"false"作为组有效的布尔值。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString">
          <source>If the string returned by the <ph id="ph1">&lt;xref:System.Boolean.ToString&gt;</ph> method is to be written to an XML file, its <ph id="ph2">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType&gt;</ph> method should be called first to convert it to lowercase.</source>
          <target state="translated">如果返回的字符串<ph id="ph1">&lt;xref:System.Boolean.ToString&gt;</ph>方法是写入到 XML 文件，其<ph id="ph2">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType&gt;</ph>应首先调用方法以将其转换为小写。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.Boolean.ToString%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>(Reserved) An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object.</source>
          <target state="translated">（保留）一个 <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>Converts the value of this instance to its equivalent string representation (either "True" or "False").</source>
          <target state="translated">将此实例的值转换为其等效字符串表示形式（“True”或“False”）。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source><ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> if the value of this instance is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, or <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> if the value of this instance is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此实例的值为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，则为 <ph id="ph1">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph>；如果此实例的值为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>，则为 <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is reserved.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>参数为保留参数。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>It does not participate in the execution of this method.</source>
          <target state="translated">它不参与此方法的执行。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>This means that the <ph id="ph1">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method, unlike most methods with a <ph id="ph2">`provider`</ph> parameter, does not reflect culture-specific settings.</source>
          <target state="translated">这意味着，<ph id="ph1">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法，与使用的大多数方法不同<ph id="ph2">`provider`</ph>参数，不会反映特定于区域性的设置。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>This method returns the constants "True" or "False".</source>
          <target state="translated">此方法返回"True"或"False"的常量。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</source>
          <target state="translated">请注意，XML 是区分大小写，并且 XML 规范识别"true"和"false"作为组有效的布尔值。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.ToString(System.IFormatProvider)">
          <source>If the <ph id="ph1">&lt;xref:System.String&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph> method is to be written to an XML file, its <ph id="ph3">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType&gt;</ph> method should be called first to convert it to lowercase.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.String&gt;</ph>返回对象<ph id="ph2">&lt;xref:System.Boolean.ToString%28System.IFormatProvider%29&gt;</ph>方法是写入到 XML 文件，其<ph id="ph3">&lt;xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType&gt;</ph>应首先调用方法以将其转换为小写。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="F:System.Boolean.TrueString">
          <source>Represents the Boolean value <ph id="ph1">&lt;see langword="true" /&gt;</ph> as a string.</source>
          <target state="translated">将布尔值 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示为一个字符串。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="F:System.Boolean.TrueString">
          <source>This field is read-only.</source>
          <target state="translated">此字段为只读。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Boolean.TrueString">
          <source>This field is equal to the string "True".</source>
          <target state="translated">此字段为等于字符串"True"。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Boolean.TrueString">
          <source>The <ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> property defines the string representation of a <ph id="ph2">`True`</ph> <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> value in formatting and parsing operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph>属性定义的字符串表示形式<ph id="ph2">`True`</ph><ph id="ph3">&lt;xref:System.Boolean&gt;</ph>格式设置和分析操作中的值。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>A string containing the value to convert.</source>
          <target state="translated">包含要转换的值的字符串。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>When this method returns, if the conversion succeeded, contains <ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is equal to <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph3">&lt;see langword="false" /&gt;</ph> if <bpt id="p2">&lt;c&gt;</bpt>value<ept id="p2">&lt;/c&gt;</ept> is equal to <ph id="ph4">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph>.</source>
          <target state="translated">此方法返回时，如果转换成功，若 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 与 <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> 相等，则结果包含 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，若 <bpt id="p2">&lt;c&gt;</bpt>value<ept id="p2">&lt;/c&gt;</ept> 与 <ph id="ph4">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> 相等，则结果包含 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>If the conversion failed, contains <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果转换失败，则包含 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The conversion fails if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or is not equal to the value of either the <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> field.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或不等于 <ph id="ph2">&lt;see cref="F:System.Boolean.TrueString" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.Boolean.FalseString" /&gt;</ph> 字段的值，则转换失败。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>Tries to convert the specified string representation of a logical value to its <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> equivalent.</source>
          <target state="translated">尝试将逻辑值的指定字符串表示形式转换为其等效的 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          <target state="translated">一个指示转换是否成功的返回值。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 成功转换，则为 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The <ph id="ph1">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Boolean.Parse%2A&gt;</ph> method, except the <ph id="ph3">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> method does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean.TryParse%2A&gt;</ph>方法就像是<ph id="ph2">&lt;xref:System.Boolean.Parse%2A&gt;</ph>方法，除了<ph id="ph3">&lt;xref:System.Boolean.TryParse%2A&gt;</ph>方法不会引发异常，如果转换失败。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The <ph id="ph1">`value`</ph> parameter can be preceded or followed by white space.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数可以是前面或后面的空白区域。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The comparison is ordinal and case-insensitive.</source>
          <target state="translated">比较是有序的且不区分大小写。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Boolean.TryParse%2A&gt;</ph> method to parse an array of strings.</source>
          <target state="translated">下面的示例调用<ph id="ph1">&lt;xref:System.Boolean.TryParse%2A&gt;</ph>方法，以便分析的字符串数组。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Boolean.TryParse(System.String,System.Boolean@)">
          <source>Note that the parse operation succeeds only if the string to be parsed is "True" (the value of the <ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph> field) or "False" (the value of the <ph id="ph2">&lt;xref:System.Boolean.FalseString&gt;</ph> field) in a case-insensitive comparison.</source>
          <target state="translated">请注意，分析操作成功，仅当要分析的字符串为"True"(值<ph id="ph1">&lt;xref:System.Boolean.TrueString&gt;</ph>字段) 或"False"(值<ph id="ph2">&lt;xref:System.Boolean.FalseString&gt;</ph>字段) 中的不区分大小写的比较。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>