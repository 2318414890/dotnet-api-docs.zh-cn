<Type Name="Boolean" FullName="System.Boolean">
  <TypeSignature Language="C#" Value="public struct Boolean : IComparable, IComparable&lt;bool&gt;, IConvertible, IEquatable&lt;bool&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit bool extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;bool&gt;, class System.IConvertible, class System.IEquatable`1&lt;bool&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Boolean" />
  <TypeSignature Language="VB.NET" Value="Public Structure Boolean&#xA;Implements IComparable, IComparable(Of Boolean), IConvertible, IEquatable(Of Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public value class Boolean : IComparable, IComparable&lt;bool&gt;, IConvertible, IEquatable&lt;bool&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Boolean&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Boolean&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d3ce5-101">表示一个布尔（<see langword="true" /> 或 <see langword="false" />）值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-101">Represents a Boolean (<see langword="true" /> or <see langword="false" />) value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-102">A<xref:System.Boolean>实例只能有两个值： `true`，或`false`。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-102">A <xref:System.Boolean> instance can have either of two values: `true`, or `false`.</span></span>  
  
 <span data-ttu-id="d3ce5-103"><xref:System.Boolean>结构可提供支持以下任务的方法：</span><span class="sxs-lookup"><span data-stu-id="d3ce5-103">The <xref:System.Boolean> structure provides methods that support the following tasks:</span></span>  
  
-   <span data-ttu-id="d3ce5-104">将布尔值转换为字符串： <xref:System.Boolean.ToString%2A></span><span class="sxs-lookup"><span data-stu-id="d3ce5-104">Converting Boolean values to strings: <xref:System.Boolean.ToString%2A></span></span>  
  
-   <span data-ttu-id="d3ce5-105">分析字符串来将它们转换为布尔值：<xref:System.Boolean.Parse%2A>和 <xref:System.Boolean.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="d3ce5-105">Parsing strings to convert them to Boolean values: <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A></span></span>  
  
-   <span data-ttu-id="d3ce5-106">对值进行比较：<xref:System.Boolean.CompareTo%2A>和 <xref:System.Boolean.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="d3ce5-106">Comparing values: <xref:System.Boolean.CompareTo%2A> and <xref:System.Boolean.Equals%2A></span></span>  
  
 <span data-ttu-id="d3ce5-107">以下各节介绍这些任务和其他用法的详细信息：</span><span class="sxs-lookup"><span data-stu-id="d3ce5-107">The following sections explain these tasks and other usage details:</span></span>  
  
 <span data-ttu-id="d3ce5-108">[格式设置的布尔值](#Formatting) </span><span class="sxs-lookup"><span data-stu-id="d3ce5-108">[Formatting Boolean values](#Formatting) </span></span>  
 <span data-ttu-id="d3ce5-109">[转换至 / 自布尔值](#Converting) </span><span class="sxs-lookup"><span data-stu-id="d3ce5-109">[Converting to and from Boolean values](#Converting) </span></span>  
 <span data-ttu-id="d3ce5-110">[分析布尔值](#Parsing) </span><span class="sxs-lookup"><span data-stu-id="d3ce5-110">[Parsing Boolean values](#Parsing) </span></span>  
 <span data-ttu-id="d3ce5-111">[将布尔值进行比较](#Comparing) </span><span class="sxs-lookup"><span data-stu-id="d3ce5-111">[Comparing Boolean values](#Comparing) </span></span>  
 <span data-ttu-id="d3ce5-112">[使用作二进制值的布尔值](#Binary) </span><span class="sxs-lookup"><span data-stu-id="d3ce5-112">[Working with Booleans as binary values](#Binary) </span></span>  
 <span data-ttu-id="d3ce5-113">[使用布尔值执行操作](#Operations) </span><span class="sxs-lookup"><span data-stu-id="d3ce5-113">[Performing operations with Boolean values](#Operations) </span></span>  
 [<span data-ttu-id="d3ce5-114">布尔值和互操作</span><span class="sxs-lookup"><span data-stu-id="d3ce5-114">Booleans and Interop</span></span>](#Interop)  
  
<a name="Formatting"></a>   
## <a name="formatting-boolean-values"></a><span data-ttu-id="d3ce5-115">格式设置的布尔值</span><span class="sxs-lookup"><span data-stu-id="d3ce5-115">Formatting Boolean values</span></span>  
 <span data-ttu-id="d3ce5-116">字符串表示形式<xref:System.Boolean>为"True"`true`值或"False"的`false`值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-116">The string representation of a <xref:System.Boolean> is either "True" for a `true` value or "False" for a `false` value.</span></span> <span data-ttu-id="d3ce5-117">字符串表示形式<xref:System.Boolean>值由只读<xref:System.Boolean.TrueString>和<xref:System.Boolean.FalseString>字段。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-117">The string representation of a <xref:System.Boolean> value is defined by the read-only <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields.</span></span>  
  
 <span data-ttu-id="d3ce5-118">你使用<xref:System.Boolean.ToString%2A>方法将布尔值转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-118">You use the <xref:System.Boolean.ToString%2A> method to convert Boolean values to strings.</span></span> <span data-ttu-id="d3ce5-119">此布尔结构包含两个<xref:System.Boolean.ToString%2A>重载： 无参数<xref:System.Boolean.ToString>方法和<xref:System.Boolean.ToString%28System.IFormatProvider%29>方法，其中包括控制格式设置的参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-119">The Boolean structure includes two <xref:System.Boolean.ToString%2A> overloads: the parameterless <xref:System.Boolean.ToString> method and the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method, which includes a parameter that controls formatting.</span></span> <span data-ttu-id="d3ce5-120">但是，忽略此参数，因为两个重载会产生相同的字符串。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-120">However, because this parameter is ignored, the two overloads produce identical strings.</span></span> <span data-ttu-id="d3ce5-121"><xref:System.Boolean.ToString%28System.IFormatProvider%29>方法不支持区分区域性的格式。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-121">The <xref:System.Boolean.ToString%28System.IFormatProvider%29> method does not support culture-sensitive formatting.</span></span>  
  
 <span data-ttu-id="d3ce5-122">下面的示例演示使用格式设置<xref:System.Boolean.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-122">The following example illustrates formatting with the <xref:System.Boolean.ToString%2A> method.</span></span> <span data-ttu-id="d3ce5-123">请注意，该示例使用[复合格式设置](~/docs/standard/base-types/composite-formatting.md)功能，因此<xref:System.Boolean.ToString%2A>隐式调用方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-123">Note that the example uses the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature, so the <xref:System.Boolean.ToString%2A> method is called implicitly.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring1.cs#3)]
 [!code-vb[System.Boolean.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring1.vb#3)]  
  
 <span data-ttu-id="d3ce5-124">因为<xref:System.Boolean>结构有只有两个值，可轻松添加自定义格式设置。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-124">Because the <xref:System.Boolean> structure can have only two values, it is easy to add custom formatting.</span></span> <span data-ttu-id="d3ce5-125">对于简单自定义格式设置中的其他字符串文本替换为"True"和"False"，你可以使用由你的语言，如支持任何条件评估功能[条件运算符](~/docs/csharp/language-reference/operators/conditional-operator.md)在 C# 或[如果运算符](~/docs/visual-basic/language-reference/operators/if-operator.md)在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-125">For simple custom formatting in which other string literals are substituted for "True" and "False", you can use any conditional evaluation feature supported by your language, such as the [conditional operator](~/docs/csharp/language-reference/operators/conditional-operator.md) in C# or the [If operator](~/docs/visual-basic/language-reference/operators/if-operator.md) in Visual Basic.</span></span> <span data-ttu-id="d3ce5-126">下面的示例使用该技术来格式化<xref:System.Boolean>值为"是"和"否"而不是"True"和"False"。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-126">The following example uses this technique to format <xref:System.Boolean> values as "Yes" and "No" rather than "True" and "False".</span></span>  
  
 [!code-csharp[System.Boolean.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring2.cs#4)]
 [!code-vb[System.Boolean.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring2.vb#4)]  
  
 <span data-ttu-id="d3ce5-127">对于更复杂自定义的格式设置操作，包括区分区域性的格式设置，你可以调用<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>方法并提供<xref:System.ICustomFormatter>实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-127">For more complex custom formatting operations, including culture-sensitive formatting, you can call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method and provide an <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="d3ce5-128">下面的示例实现<xref:System.ICustomFormatter>和<xref:System.IFormatProvider>接口来提供用于英语 （美国）、 法语 （法国） 和俄语 （俄罗斯） 区域性的区分区域性的布尔值字符串。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-128">The following example implements the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/format3.cs#5)]
 [!code-vb[System.Boolean.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/format3.vb#5)]  
  
 <span data-ttu-id="d3ce5-129">或者，你可以使用[资源文件](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890)定义特定于区域性的布尔值字符串。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-129">Optionally, you can use [resource files](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890) to define culture-specific Boolean strings.</span></span>  
  
<a name="Converting"></a>   
## <a name="converting-to-and-from-boolean-values"></a><span data-ttu-id="d3ce5-130">转换至 / 自布尔值</span><span class="sxs-lookup"><span data-stu-id="d3ce5-130">Converting to and from Boolean values</span></span>  
 <span data-ttu-id="d3ce5-131"><xref:System.Boolean>结构实现<xref:System.IConvertible>接口。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-131">The <xref:System.Boolean> structure implements the <xref:System.IConvertible> interface.</span></span>  <span data-ttu-id="d3ce5-132">因此，你可以使用<xref:System.Convert>类来执行之间的转换<xref:System.Boolean>值和.NET Framework 中，或者您的任何其他基元类型都可以调用<xref:System.Boolean>结构的显式实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-132">As a result, you can use the <xref:System.Convert> class to perform conversions between a <xref:System.Boolean> value and any other primitive type in the .NET Framework, or you can call the <xref:System.Boolean> structure's explicit implementations.</span></span> <span data-ttu-id="d3ce5-133">但是，之间的转换<xref:System.Boolean>及以下不支持类型，因此这些相应的转换方法将引发<xref:System.InvalidCastException>异常：</span><span class="sxs-lookup"><span data-stu-id="d3ce5-133">However, conversions between a <xref:System.Boolean> and the following types are not supported, so the corresponding conversion methods throw an <xref:System.InvalidCastException> exception:</span></span>  
  
-   <span data-ttu-id="d3ce5-134">之间的转换<xref:System.Boolean>和<xref:System.Char>(<xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType>和<xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType>方法)</span><span class="sxs-lookup"><span data-stu-id="d3ce5-134">Conversion between <xref:System.Boolean> and <xref:System.Char> (the <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType> and <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> methods)</span></span>  
  
-   <span data-ttu-id="d3ce5-135">之间的转换<xref:System.Boolean>和<xref:System.DateTime>(<xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType>和<xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType>方法)</span><span class="sxs-lookup"><span data-stu-id="d3ce5-135">Conversion between <xref:System.Boolean> and <xref:System.DateTime> (the <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> and <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType> methods)</span></span>  
  
 <span data-ttu-id="d3ce5-136">从整型或浮点数字的所有转换为布尔值都转换为非零值`true`和零值到`false`。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-136">All conversions from integral or floating-point numbers to Boolean values convert non-zero values to `true` and zero values to `false`.</span></span>  <span data-ttu-id="d3ce5-137">下面的示例阐释了这一点通过调用所选的重载<xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-137">The following example illustrates this by calling selected overloads of the <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> class.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion1.cs#6)]
 [!code-vb[System.Boolean.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion1.vb#6)]  
  
 <span data-ttu-id="d3ce5-138">从浮点值转换为布尔值时, 的转换方法将执行与零的确切比较。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-138">When converting from floating-point values to Boolean values, the conversion methods perform an exact comparison with zero.</span></span> <span data-ttu-id="d3ce5-139">浮点值已失去精度，如果将会导致意外。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-139">If the floating-point value has lost precision, the result can be unexpected.</span></span> <span data-ttu-id="d3ce5-140">这一点在以下示例中，在其中<xref:System.Double>其值应为零的变量转换为布尔值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-140">This is illustrated in the following example, in which a <xref:System.Double> variable whose value should be zero is converted to a Boolean value.</span></span> <span data-ttu-id="d3ce5-141">如示例所示，结果是`true`因为重复 0.2 添加具有导致精度损失。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-141">As the example shows, the result is `true` because repeated additions of 0.2 have resulted in a loss of precision.</span></span>  
  
 <span data-ttu-id="d3ce5-142">从布尔值转换为数值的转换方法时<xref:System.Convert>类转换`true`为 1 和`false`为 0。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-142">When converting from Boolean to numeric values, the conversion methods of the <xref:System.Convert> class convert `true` to 1 and `false` to 0.</span></span> <span data-ttu-id="d3ce5-143">但是，Visual Basic 转换函数转换`true`为任一 255 (转换到<xref:System.Byte>值) 或为-1 （对于所有其他数值的转换）。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-143">However, Visual Basic conversion functions convert `true` to either 255 (for conversions to <xref:System.Byte> values) or -1 (for all other numeric conversions).</span></span> <span data-ttu-id="d3ce5-144">以下示例将转换`true`为数字值，通过使用<xref:System.Convert>方法，并在 Visual Basic 示例中，通过使用 Visual Basic 语言的自己的转换运算符。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-144">The following example converts `true` to numeric values by using a <xref:System.Convert> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion3.cs#8)]
 [!code-vb[System.Boolean.Structure#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion3.vb#8)]  
  
 <span data-ttu-id="d3ce5-145">有关从转换<xref:System.Boolean>字符串值，请参阅[格式设置布尔值](#Formatting)部分。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-145">For conversions from <xref:System.Boolean> to string values, see the [Formatting Boolean Values](#Formatting) section.</span></span> <span data-ttu-id="d3ce5-146">从字符串转换为<xref:System.Boolean>值，请参阅[分析布尔值](#Parsing)部分。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-146">For conversions from strings to <xref:System.Boolean> values, see the [Parsing Boolean Values](#Parsing) section.</span></span>  
  
<a name="Parsing"></a>   
## <a name="parsing-boolean-values"></a><span data-ttu-id="d3ce5-147">分析布尔值</span><span class="sxs-lookup"><span data-stu-id="d3ce5-147">Parsing Boolean values</span></span>  
 <span data-ttu-id="d3ce5-148"><xref:System.Boolean>结构包含两个静态分析方法，<xref:System.Boolean.Parse%2A>和<xref:System.Boolean.TryParse%2A>，，将字符串转换为布尔值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-148">The <xref:System.Boolean> structure includes two static parsing methods, <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>, that convert a string to a Boolean value.</span></span> <span data-ttu-id="d3ce5-149">一个布尔值的字符串表示定义不区分大小写的值等效的字符代替<xref:System.Boolean.TrueString>和<xref:System.Boolean.FalseString>为"True"和"False"，分别的字段。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-149">The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields, which are "True" and "False", respectively.</span></span> <span data-ttu-id="d3ce5-150">换而言之，已成功分析的唯一字符串是"True"、"False"、"true"、"false"或某些大小写混合的等效项。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-150">In other words, the only strings that parse successfully are "True", "False", "true", "false", or some mixed-case equivalent.</span></span> <span data-ttu-id="d3ce5-151">你无法成功分析数值字符串，例如"0"或"1"。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-151">You cannot successfully parse numeric strings such as "0" or "1".</span></span> <span data-ttu-id="d3ce5-152">在执行字符串比较时，不会视为前导或尾随空白字符。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-152">Leading or trailing white-space characters are not considered when performing the string comparison.</span></span>  
  
 <span data-ttu-id="d3ce5-153">下面的示例使用<xref:System.Boolean.Parse%2A>和<xref:System.Boolean.TryParse%2A>方法分析字符串的数量。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-153">The following example uses the <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A> methods to parse a number of strings.</span></span> <span data-ttu-id="d3ce5-154">请注意，可以成功分析仅"True"和"False"的等效的不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-154">Note that only the case-insensitive equivalents of "True" and "False" can be successfully parsed.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse2.cs#2)]
 [!code-vb[System.Boolean.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse2.vb#2)]  
  
 <span data-ttu-id="d3ce5-155">如果你在 Visual Basic 中进行编程，你可以使用`CBool`函数可将数字的字符串表示转换为布尔值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-155">If you are programming in Visual Basic, you can use the `CBool` function to convert the string representation of a number to a Boolean value.</span></span> <span data-ttu-id="d3ce5-156">转换为"0" `false`，而任何非零值的字符串表示转换为`true`。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-156">"0" is converted to `false`, and the string representation of any non-zero value is converted to `true`.</span></span> <span data-ttu-id="d3ce5-157">如果你不在 Visual Basic 中进行编程，必须将其转换为布尔值之前将数值字符串转换为数字。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-157">If you are not programming in Visual Basic, you must convert your numeric string to a number before converting it to a Boolean.</span></span> <span data-ttu-id="d3ce5-158">下面的示例阐释了这一点通过将整数的数组转换为布尔值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-158">The following example illustrates this by converting an array of integers to Boolean values.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse3.cs#9)]
 [!code-vb[System.Boolean.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse3.vb#9)]  
  
<a name="Comparing"></a>   
## <a name="comparing-boolean-values"></a><span data-ttu-id="d3ce5-159">将布尔值进行比较</span><span class="sxs-lookup"><span data-stu-id="d3ce5-159">Comparing Boolean values</span></span>  
 <span data-ttu-id="d3ce5-160">布尔值都是因为`true`或`false`，存在很少需要显式调用<xref:System.Boolean.CompareTo%2A>方法，该值指示实例是否大于、 小于或指定的值相等。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-160">Because Boolean values are either `true` or `false`, there is little reason to explicitly call the <xref:System.Boolean.CompareTo%2A> method, which indicates whether an instance is greater than, less than, or equal to a specified value.</span></span> <span data-ttu-id="d3ce5-161">通常，若要比较两个布尔变量，你可以调用<xref:System.Boolean.Equals%2A>方法或使用你的语言的相等运算符。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-161">Typically, to compare two Boolean variables, you call the <xref:System.Boolean.Equals%2A> method or use your language's equality operator.</span></span>  
  
 <span data-ttu-id="d3ce5-162">但是，当你想要比较的文字的布尔值的布尔变量`true`或`false`，它不需要执行操作的显式比较，因为对评估一个布尔值的结果是该布尔值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-162">However, when you want to compare a Boolean variable with the literal Boolean value `true` or `false`, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value.</span></span> <span data-ttu-id="d3ce5-163">例如，表达式</span><span class="sxs-lookup"><span data-stu-id="d3ce5-163">For example, the expressions</span></span>  
  
 [!code-csharp[System.Boolean.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#12)]
 [!code-vb[System.Boolean.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#12)]  
  
 <span data-ttu-id="d3ce5-164">和</span><span class="sxs-lookup"><span data-stu-id="d3ce5-164">and</span></span>  
  
 [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]
 [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  
  
 <span data-ttu-id="d3ce5-165">等效，但第二个是更为精简。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-165">are equivalent, but the second is more compact.</span></span> <span data-ttu-id="d3ce5-166">但是，这两种方法提供水平相当的性能。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-166">However, both techniques offer comparable performance.</span></span>  
  
<a name="Binary"></a>   
## <a name="working-with-booleans-as-binary-values"></a><span data-ttu-id="d3ce5-167">使用作二进制值的布尔值</span><span class="sxs-lookup"><span data-stu-id="d3ce5-167">Working with Booleans as binary values</span></span>  
 <span data-ttu-id="d3ce5-168">一个布尔值占用的一个字节的内存，如以下 C# 示例所示。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-168">A Boolean value occupies one byte of memory, as the following C# example shows.</span></span> <span data-ttu-id="d3ce5-169">必须使用编译该示例`/unsafe`切换。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-169">The example must be compiled with the `/unsafe` switch.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/size1.cs#14)]  
  
 <span data-ttu-id="d3ce5-170">字节的低顺序位用于表示其值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-170">The byte's low-order bit is used to represent its value.</span></span> <span data-ttu-id="d3ce5-171">值为 1 表示`true`; 值 0 表示`false`。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-171">A value of 1 represents `true`; a value of 0 represents `false`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="d3ce5-172">你可以使用<xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType>结构，以使用集的布尔值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-172">You can use the <xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> structure to work with sets of Boolean values.</span></span>  
  
 <span data-ttu-id="d3ce5-173">你可以通过调用一个布尔值转换为其二进制表示形式<xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-173">You can convert a Boolean value to its binary representation by calling the <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d3ce5-174">该方法返回具有单个元素的字节数组。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-174">The method returns a byte array with a single element.</span></span> <span data-ttu-id="d3ce5-175">若要从其二进制表示形式中还原一个布尔值，可以调用<xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-175">To restore a Boolean value from its binary representation, you can call the <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d3ce5-176">下面的示例调用<xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>方法将一个布尔值转换为其二进制表示形式和显示单个位进行运算的值，并随后将调用<xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType>该值还原从其二进制表示形式的方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-176">The following example calls the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType> method to restore the value from its binary representation.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/binary1.cs#1)]
 [!code-vb[System.Boolean.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/binary1.vb#1)]  
  
<a name="Operations"></a>   
## <a name="performing-operations-with-boolean-values"></a><span data-ttu-id="d3ce5-177">使用布尔值执行操作</span><span class="sxs-lookup"><span data-stu-id="d3ce5-177">Performing operations with Boolean values</span></span>  
 <span data-ttu-id="d3ce5-178">本部分说明了如何布尔值在应用中使用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-178">This section illustrates how Boolean values are used in apps.</span></span> <span data-ttu-id="d3ce5-179">第一节讨论了其使用作为的标志。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-179">The first section discusses its use as a flag.</span></span> <span data-ttu-id="d3ce5-180">第二个演示其用法的算术运算。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-180">The second illustrates its use for arithmetic operations.</span></span>  
  
### <a name="boolean-values-as-flags"></a><span data-ttu-id="d3ce5-181">为标志的布尔值</span><span class="sxs-lookup"><span data-stu-id="d3ce5-181">Boolean values as flags</span></span>  
 <span data-ttu-id="d3ce5-182">布尔变量通常为标志，用于指示存在某个条件。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-182">Boolean variables are most commonly used as flags, to signal the presence or absence of some condition.</span></span> <span data-ttu-id="d3ce5-183">例如，在<xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType>方法中，最后一个参数， `ignoreCase`，是一个标志，指示两个字符串的比较不区分大小写 (`ignoreCase`是`true`) 或区分大小写 (`ignoreCase`是`false`)。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-183">For example, in the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> method, the final parameter, `ignoreCase`, is a flag that indicates whether the comparison of two strings is case-insensitive (`ignoreCase` is `true`) or case-sensitive (`ignoreCase` is `false`).</span></span> <span data-ttu-id="d3ce5-184">然后可以在条件语句中计算的标志的值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-184">The value of the flag can then be evaluated in a conditional statement.</span></span>  
  
 <span data-ttu-id="d3ce5-185">下面的示例使用简单的控制台应用程序演示使用为标志的布尔变量。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-185">The following example uses a simple console app to illustrate the use of Boolean variables as flags.</span></span> <span data-ttu-id="d3ce5-186">应用程序接受启用输出重定向到指定的文件的命令行参数 (`/f`切换)，并允许同时向指定的文件和控制台发送输出 (`/b`切换)。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-186">The app accepts command-line parameters that enable output to be redirected to a specified file (the `/f` switch), and that enable output to be sent both to a specified file and to the console (the `/b` switch).</span></span> <span data-ttu-id="d3ce5-187">应用程序定义名为的标志`isRedirected`以指示是否输出是发送到一个文件，并且一个标志名为`isBoth`以指示应将输出发送到控制台。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-187">The app defines a flag named `isRedirected` to indicate whether output is to be sent to a file, and a flag named `isBoth` to indicate that output should be sent to the console.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#10)]
 [!code-vb[System.Boolean.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#10)]  
  
### <a name="booleans-and-arithmetic-operations"></a><span data-ttu-id="d3ce5-188">布尔值和算术运算</span><span class="sxs-lookup"><span data-stu-id="d3ce5-188">Booleans and arithmetic operations</span></span>  
 <span data-ttu-id="d3ce5-189">一个布尔值有时用于指明触发数学计算的条件的状态。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-189">A Boolean value is sometimes used to indicate the presence of a condition that triggers a mathematical calculation.</span></span> <span data-ttu-id="d3ce5-190">例如，`hasShippingCharge`变量可能充当一个标志，用于指示是否将传送费用添加到发票金额。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-190">For example, a `hasShippingCharge` variable might serve as a flag to indicate whether to add shipping charges to an invoice amount.</span></span>  
  
 <span data-ttu-id="d3ce5-191">因为操作`false`值不起上的操作的结果，它不需要将布尔值转换为整数值用于数学运算。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-191">Because an operation with a `false` value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation.</span></span> <span data-ttu-id="d3ce5-192">相反，你可以使用条件逻辑。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-192">Instead, you can use conditional logic.</span></span>  
  
 <span data-ttu-id="d3ce5-193">下面的示例计算包含小计、 较传送的费用，以及可选的服务费用的金额。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-193">The following example computes an amount that consists of a subtotal, a shipping charge, and an optional service charge.</span></span> <span data-ttu-id="d3ce5-194">`hasServiceCharge`变量确定是否应用了服务费用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-194">The `hasServiceCharge` variable determines whether the service charge is applied.</span></span> <span data-ttu-id="d3ce5-195">而不是将转换`hasServiceCharge`数字值和乘以服务费用的量，该示例使用条件逻辑添加服务费用金额，如果适用的话。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-195">Instead of converting `hasServiceCharge` to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable.</span></span>  
  
 [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]
 [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]  
  
<a name="Interop"></a>   
### <a name="booleans-and-interop"></a><span data-ttu-id="d3ce5-196">布尔值和互操作</span><span class="sxs-lookup"><span data-stu-id="d3ce5-196">Booleans and interop</span></span>  
 <span data-ttu-id="d3ce5-197">通常简单，封送到 COM 的基数据类型时<xref:System.Boolean>数据类型为异常。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-197">While marshaling base data types to COM is generally straightforward, the <xref:System.Boolean> data type is an exception.</span></span> <span data-ttu-id="d3ce5-198">你可以将应用<xref:System.Runtime.InteropServices.MarshalAsAttribute>属性要封送<xref:System.Boolean>类型设置为任何以下表示形式之间实现：</span><span class="sxs-lookup"><span data-stu-id="d3ce5-198">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to marshal the <xref:System.Boolean> type to any of the following representations:</span></span>  
  
|<span data-ttu-id="d3ce5-199">枚举类型</span><span class="sxs-lookup"><span data-stu-id="d3ce5-199">Enumeration type</span></span>|<span data-ttu-id="d3ce5-200">非托管的格式</span><span class="sxs-lookup"><span data-stu-id="d3ce5-200">Unmanaged format</span></span>|  
|----------------------|----------------------|  
|<xref:System.Runtime.InteropServices.UnmanagedType.Bool?displayProperty=nameWithType>|<span data-ttu-id="d3ce5-201">4 字节的整数值，其中任一非零值表示`true`和 0 表示`false`。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-201">A 4-byte integer value, where any nonzero value represents `true` and 0 represents `false`.</span></span> <span data-ttu-id="d3ce5-202">这是默认格式的<xref:System.Boolean>结构中和的字段<xref:System.Boolean>在平台中的参数调用的调用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-202">This is the default format of a <xref:System.Boolean> field in a structure and of a <xref:System.Boolean> parameter in platform invoke calls.</span></span>|  
|<xref:System.Runtime.InteropServices.UnmanagedType.U1?displayProperty=nameWithType>|<span data-ttu-id="d3ce5-203">1 个字节的整数值，其中 1 表示`true`和 0 表示`false`。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-203">A 1-byte integer value, where the 1 represents `true` and 0 represents `false`.</span></span>|  
|<xref:System.Runtime.InteropServices.UnmanagedType.VariantBool?displayProperty=nameWithType>|<span data-ttu-id="d3ce5-204">2 字节整数值，其中-1 表示`true`和 0 表示`false`。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-204">A 2-byte integer value, where -1 represents `true` and 0 represents `false`.</span></span> <span data-ttu-id="d3ce5-205">这是默认格式的<xref:System.Boolean>COM 互操作调用中的参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-205">This is the default format of a <xref:System.Boolean> parameter in COM interop calls.</span></span>|  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="d3ce5-206">此类型的所有成员都是线程安全。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-206">All members of this type are thread safe.</span></span> <span data-ttu-id="d3ce5-207">实际上，看起来要修改实例状态的成员返回使用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-207">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="d3ce5-208">作为与任何其他类型，读取和写入到共享的变量，其中包含此类型的实例必须受使用锁来确保的线程安全性。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-208">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3ce5-209">将此实例与指定的对象或 <see cref="T:System.Boolean" /> 对象进行比较，并返回一个指示二者关系的整数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-209">Compares this instance to a specified object or <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.CompareTo(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(bool value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d3ce5-210">要与此示例比较的 <see cref="T:System.Boolean" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-210">A <see cref="T:System.Boolean" /> object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="d3ce5-211">将此实例与指定的 <see cref="T:System.Boolean" /> 对象进行比较，并返回一个指示二者关系的整数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-211">Compares this instance to a specified <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-212">一个有符号整数，指示此实例和 <paramref name="value" /> 相对值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-212">A signed integer that indicates the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="d3ce5-213"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="d3ce5-213"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="d3ce5-214"></term><description> 条件</span><span class="sxs-lookup"><span data-stu-id="d3ce5-214"></term><description> Condition</span></span>  
  
 <span data-ttu-id="d3ce5-215"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="d3ce5-215"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="d3ce5-216"></term><description>此实例为 <see langword="false" />，而 <paramref name="value" /> 为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-216"></term><description> This instance is <see langword="false" /> and <paramref name="value" /> is <see langword="true" />.</span></span>  
  
 <span data-ttu-id="d3ce5-217"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="d3ce5-217"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="d3ce5-218"></term><description>此实例与 <paramref name="value" /> 相等（都为 <see langword="true" />，或者都为 <see langword="false" />）。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-218"></term><description> This instance and <paramref name="value" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).</span></span>  
  
 <span data-ttu-id="d3ce5-219"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="d3ce5-219"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="d3ce5-220"></term><description>此实例为 <see langword="true" />，而 <paramref name="value" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-220"></term><description> This instance is <see langword="true" /> and <paramref name="value" /> is <see langword="false" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-221">此方法实现<xref:System.IComparable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType>方法因为它不具有要转换`value`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-221">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="d3ce5-222">如果`value`位数 （为较窄） 实例类型，某些编程语言执行隐式的扩大转换，以便将参数的值转换为具有更多位数的值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-222">If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="d3ce5-223">例如，假设实例类型是<xref:System.Int32>和参数类型是<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-223">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="d3ce5-224">Microsoft C# 编译器生成的指令来表示形式的参数值<xref:System.Int32>对象，然后生成<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>方法来比较<xref:System.Int32>实例和参数的表示形式。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-224">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the <xref:System.Int32> instance and parameter representation.</span></span>  
  
 <span data-ttu-id="d3ce5-225">请查阅你的编程语言的文档，以确定其编译器是否对数值类型执行隐式的扩大转换。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-225">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3ce5-226">下面的代码示例演示泛型和非泛型版本的<xref:System.Boolean.CompareTo%2A>多个值和引用类型的方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-226">The following code example demonstrates generic and nongeneric versions of the <xref:System.Boolean.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.CompareTo(System.Object)" />
        <altmember cref="Overload:System.Boolean.Equals" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d3ce5-227">要与此示例比较的对象，或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-227">An object to compare to this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d3ce5-228">将此实例与指定对象进行比较，并返回一个指示二者关系的整数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-228">Compares this instance to a specified object and returns an integer that indicates their relationship to one another.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-229">一个有符号的整数，它指示此实例和 <paramref name="obj" /> 的相对顺序。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-229">A signed integer that indicates the relative order of this instance and <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="d3ce5-230"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="d3ce5-230"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="d3ce5-231"></term><description> 条件</span><span class="sxs-lookup"><span data-stu-id="d3ce5-231"></term><description> Condition</span></span>  
  
 <span data-ttu-id="d3ce5-232"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="d3ce5-232"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="d3ce5-233"></term><description>此实例为 <see langword="false" />，而 <paramref name="obj" /> 为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-233"></term><description> This instance is <see langword="false" /> and <paramref name="obj" /> is <see langword="true" />.</span></span>  
  
 <span data-ttu-id="d3ce5-234"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="d3ce5-234"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="d3ce5-235"></term><description>此实例与 <paramref name="obj" /> 相等（都为 <see langword="true" />，或者都为 <see langword="false" />）。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-235"></term><description> This instance and <paramref name="obj" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).</span></span>  
  
 <span data-ttu-id="d3ce5-236"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="d3ce5-236"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="d3ce5-237"></term><description>此实例为 <see langword="true" />，而 <paramref name="obj" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-237"></term><description> This instance is <see langword="true" /> and <paramref name="obj" /> is <see langword="false" />.</span></span>  
  
 <span data-ttu-id="d3ce5-238">或</span><span class="sxs-lookup"><span data-stu-id="d3ce5-238">-or-</span></span>  
  
 <span data-ttu-id="d3ce5-239"><paramref name="obj" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-239"><paramref name="obj" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-240">`obj` 必须是`null`或实例`Boolean`; 否则为将引发异常。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-240">`obj` must be `null` or an instance of `Boolean`; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="d3ce5-241">此方法实现<xref:System.IComparable>接口。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-241">This method implements the <xref:System.IComparable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d3ce5-242"><paramref name="obj" /> 不是 <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-242"><paramref name="obj" /> is not a <see cref="T:System.Boolean" />.</span></span></exception>
        <altmember cref="M:System.Boolean.CompareTo(System.Boolean)" />
        <altmember cref="Overload:System.Boolean.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3ce5-243">返回一个值，该值指示此实例是否与指定的对象或 <see cref="T:System.Boolean" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-243">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Boolean" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (bool obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(bool obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Equals(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(bool obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d3ce5-244">要与此实例进行比较的 <see cref="T:System.Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-244">A <see cref="T:System.Boolean" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="d3ce5-245">返回一个值，该值指示此实例是否与指定的 <see cref="T:System.Boolean" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-245">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Boolean" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="d3ce5-246">如果 <paramref name="obj" /> 的值与此实例相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-246"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-247">此方法实现<xref:System.IEquatable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.Boolean.Equals%2A>因为它不具有要转换`obj`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-247">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Boolean.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Equals(System.Object)" />
        <altmember cref="Overload:System.Boolean.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d3ce5-248">要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-248">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="d3ce5-249">返回一个值，该值指示此实例是否等于指定的对象。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-249">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="d3ce5-250">如果 <see langword="true" /> 为 <paramref name="obj" /> 且拥有与此实例相等的值，则为 <see cref="T:System.Boolean" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-250"><see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Boolean" /> and has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-251">此方法重写 <xref:System.Object.Equals%2A>。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-251">This method overrides <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Equals(System.Boolean)" />
        <altmember cref="Overload:System.Boolean.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="FalseString">
      <MemberSignature Language="C#" Value="public static readonly string FalseString;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string FalseString" />
      <MemberSignature Language="DocId" Value="F:System.Boolean.FalseString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FalseString As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ FalseString;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3ce5-252">将布尔值 <see langword="false" /> 表示为一个字符串。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-252">Represents the Boolean value <see langword="false" /> as a string.</span></span> <span data-ttu-id="d3ce5-253">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-253">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-254">此字段为等于字符串"False"。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-254">This field is equal to the string "False".</span></span>  
  
 <span data-ttu-id="d3ce5-255"><xref:System.Boolean.FalseString>属性定义的字符串表示形式`False`<xref:System.Boolean>格式设置和分析操作中的值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-255">The <xref:System.Boolean.FalseString> property defines the string representation of a `False` <xref:System.Boolean> value in formatting and parsing operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="F:System.Boolean.TrueString" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3ce5-256">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-256">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-257">当前 <see cref="T:System.Boolean" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-257">A hash code for the current <see cref="T:System.Boolean" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-258"><xref:System.Boolean>类实现`true`的整数，一个，和`false`的整数，零。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-258">The <xref:System.Boolean> class implements `true` as the integer, one, and `false` as the integer, zero.</span></span> <span data-ttu-id="d3ce5-259">但是，采用特定编程语言可能代表`true`和`false`替换为其他值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-259">However, a particular programming language might represent `true` and `false` with other values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3ce5-260">返回 <see cref="T:System.Boolean" /> 值类型的类型代码。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-260">Returns the type code for the <see cref="T:System.Boolean" /> value type.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-261">枚举常数 <see cref="F:System.TypeCode.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-261">The enumerated constant <see cref="F:System.TypeCode.Boolean" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static bool Parse (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Parse(ReadOnlySpan&lt;char&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static bool Parse (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Parse(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Parse(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d3ce5-262">包含要转换的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-262">A string containing the value to convert.</span></span></param>
        <summary><span data-ttu-id="d3ce5-263">将逻辑值的指定字符串表示形式转换为其等效的 <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-263">Converts the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span></span></summary>
        <returns>
          <span data-ttu-id="d3ce5-264">如果 <paramref name="value" /> 等效于 <see cref="F:System.Boolean.TrueString" />，则为 <see langword="true" />；如果 <paramref name="value" /> 等效于 <see cref="F:System.Boolean.FalseString" />，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-264"><see langword="true" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.TrueString" />; <see langword="false" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.FalseString" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-265">`value`参数，可以选择前面或尾随的空格，必须包含<xref:System.Boolean.TrueString>或<xref:System.Boolean.FalseString>; 否则为将引发异常。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-265">The `value` parameter, optionally preceded or trailed by white space, must contain either <xref:System.Boolean.TrueString> or <xref:System.Boolean.FalseString>; otherwise, an exception is thrown.</span></span> <span data-ttu-id="d3ce5-266">比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-266">The comparison is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3ce5-267">下面的代码示例演示如何使用<xref:System.Boolean.Parse%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-267">The following code example illustrates the use of <xref:System.Boolean.Parse%2A> method.</span></span>  
  
 [!code-cpp[System.Boolean#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#2)]
 [!code-csharp[System.Boolean#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#2)]
 [!code-vb[System.Boolean#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3ce5-268"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-268"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d3ce5-269"><paramref name="value" /> 并不等效于 <see cref="F:System.Boolean.TrueString" /> 或 <see cref="F:System.Boolean.FalseString" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-269"><paramref name="value" /> is not equivalent to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></exception>
        <altmember cref="F:System.Boolean.TrueString" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-270">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-270">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d3ce5-271">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-271">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="d3ce5-272"><see langword="true" /> 或 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-272"><see langword="true" /> or <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-273">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-273">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3ce5-274">它只能在 <xref:System.Boolean> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-274">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-275">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-275">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d3ce5-276">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-276">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-277">如果此实例的值为 <see langword="true" />，则为 1；否则为 0。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-277">1 if the value of this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-278">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-278">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3ce5-279">它只能在 <xref:System.Boolean> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-279">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3ce5-280">建议的替代项是调用<xref:System.Convert.ToByte%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-280">The recommended alternative is to call the <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Convert.ToByte(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-281">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-281">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d3ce5-282">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-282">This conversion is not supported.</span></span> <span data-ttu-id="d3ce5-283">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-283">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-284">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-284">This conversion is not supported.</span></span> <span data-ttu-id="d3ce5-285">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-285">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d3ce5-286">尝试将 <see cref="T:System.Boolean" /> 值转换为 <see cref="T:System.Char" /> 值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-286">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.Char" /> value.</span></span> <span data-ttu-id="d3ce5-287">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-287">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-288">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-288">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d3ce5-289">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-289">This conversion is not supported.</span></span> <span data-ttu-id="d3ce5-290">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-290">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-291">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-291">This conversion is not supported.</span></span> <span data-ttu-id="d3ce5-292">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-292">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d3ce5-293">尝试将 <see cref="T:System.Boolean" /> 值转换为 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-293">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.DateTime" /> value.</span></span> <span data-ttu-id="d3ce5-294">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-294">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-295">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-295">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d3ce5-296">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-296">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />..</span></span></summary>
        <returns><span data-ttu-id="d3ce5-297">如果此实例的值为 <see langword="true" />，则为 1；否则为 0。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-297">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-298">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-298">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3ce5-299">它只能在 <xref:System.Boolean> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-299">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3ce5-300">建议的替代项是调用<xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-300">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-301">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-301">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d3ce5-302">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-302">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />..</span></span></summary>
        <returns><span data-ttu-id="d3ce5-303">如果此实例的值为 <see langword="true" />，则为 1；否则为 0。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-303">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-304">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-304">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3ce5-305">它只能在 <xref:System.Boolean> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-305">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3ce5-306">建议的替代项是调用<xref:System.Convert.ToDouble%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-306">The recommended alternative is to call the <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-307">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-307">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d3ce5-308">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-308">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-309">如果此实例的值为 <see langword="true" />，则为 1；否则为 0。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-309">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-310">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-310">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3ce5-311">它只能在 <xref:System.Boolean> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-311">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3ce5-312">建议的替代项是调用<xref:System.Convert.ToInt16%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-312">The recommended alternative is to call the <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-313">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-313">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d3ce5-314">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-314">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-315">如果此实例的值为 <see langword="true" />，则为 1；否则为 0。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-315">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-316">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-316">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3ce5-317">它只能在 <xref:System.Boolean> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-317">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3ce5-318">建议的替代项是调用<xref:System.Convert.ToInt32%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-318">The recommended alternative is to call the <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-319">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-319">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d3ce5-320">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-320">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-321">如果此实例的值为 <see langword="true" />，则为 1；否则为 0。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-321">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-322">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-322">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3ce5-323">它只能在 <xref:System.Boolean> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-323">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3ce5-324">建议的替代项是调用<xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-324">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-325">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-325">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d3ce5-326">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-326">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-327">如果此实例的值为 <see langword="true" />，则为 1；否则为 0。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-327">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-328">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-328">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3ce5-329">它只能在 <xref:System.Boolean> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-329">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3ce5-330">建议的替代项是调用<xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-330">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-331">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-331">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d3ce5-332">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-332">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />..</span></span></summary>
        <returns><span data-ttu-id="d3ce5-333">如果此实例的值为 <see langword="true" />，则为 1；否则为 0。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-333">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-334">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-334">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3ce5-335">它只能在 <xref:System.Boolean> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-335">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3ce5-336">建议的替代项是调用<xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-336">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d3ce5-337">所需类型。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-337">The desired type.</span></span></param>
        <param name="provider"><span data-ttu-id="d3ce5-338">一个 <see cref="T:System.IFormatProvider" /> 实现，提供有关返回值格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-338">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="d3ce5-339">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-339">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-340">一个指定类型的对象，其值与此 <see langword="Boolean" /> 对象的值相等。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-340">An object of the specified type, with a value that is equivalent to the value of this <see langword="Boolean" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-341">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-341">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3ce5-342">它只能在 <xref:System.Boolean> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-342">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3ce5-343">建议的替代项是调用<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-343">The recommended alternative is to call the <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3ce5-344"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-344"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d3ce5-345">不支持请求的类型转换。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-345">The requested type conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-346">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-346">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d3ce5-347">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-347">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-348">如果此实例的值为 <see langword="true" />，则为 1；否则为 0。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-348">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-349">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-349">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3ce5-350">它只能在 <xref:System.Boolean> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-350">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3ce5-351">建议的替代项是调用<xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-351">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
        <altmember cref="M:System.Convert.ToUInt16(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-352">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-352">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d3ce5-353">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-353">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-354">如果此实例的值为 <see langword="true" />，则为 1；否则为 0。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-354">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-355">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-355">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3ce5-356">它只能在 <xref:System.Boolean> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-356">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3ce5-357">建议的替代项是调用<xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-357">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Convert.ToUInt32(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-358">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-358">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="d3ce5-359">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-359">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="d3ce5-360">如果此实例的值为 <see langword="true" />，则为 1；否则为 0。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-360">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-361">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-361">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3ce5-362">它只能在 <xref:System.Boolean> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-362">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d3ce5-363">建议的替代项是调用<xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-363">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Convert.ToUInt64(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3ce5-364">将此实例的值转换为其等效字符串表示形式（“True”或“False”）。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-364">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3ce5-365">将此实例的值转换为其等效字符串表示形式（“True”或“False”）。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-365">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span></span></summary>
        <returns><span data-ttu-id="d3ce5-366">如果此实例的值为 <see langword="true" />，则为“True”（<see cref="F:System.Boolean.TrueString" /> 属性的值）；如果此实例的值为 <see langword="false" />，则为“False”（<see cref="F:System.Boolean.FalseString" /> 属性的值）。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-366">"True" (the value of the <see cref="F:System.Boolean.TrueString" /> property) if the value of this instance is <see langword="true" />, or "False" (the value of the <see cref="F:System.Boolean.FalseString" /> property) if the value of this instance is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-367">此方法返回"True"或"False"的常量。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-367">This method returns the constants "True" or "False".</span></span>  
  
 <span data-ttu-id="d3ce5-368">请注意，XML 是区分大小写，并且 XML 规范识别"true"和"false"作为组有效的布尔值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-368">Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</span></span> <span data-ttu-id="d3ce5-369">如果返回的字符串<xref:System.Boolean.ToString>方法是写入到 XML 文件，其<xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType>应首先调用方法以将其转换为小写。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-369">If the string returned by the <xref:System.Boolean.ToString> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> method should be called first to convert it to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3ce5-370">下面的示例演示<xref:System.Boolean.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-370">The following example illustrates the <xref:System.Boolean.ToString%2A> method.</span></span>  
  
 [!code-cpp[System.Boolean#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#1)]
 [!code-csharp[System.Boolean#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#1)]
 [!code-vb[System.Boolean#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d3ce5-371">（保留）一个 <see cref="T:System.IFormatProvider" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-371">(Reserved) An <see cref="T:System.IFormatProvider" /> object.</span></span></param>
        <summary><span data-ttu-id="d3ce5-372">将此实例的值转换为其等效字符串表示形式（“True”或“False”）。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-372">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span></span></summary>
        <returns>
          <span data-ttu-id="d3ce5-373">如果此实例的值为 <see langword="true" />，则为 <see cref="F:System.Boolean.TrueString" />；如果此实例的值为 <see langword="false" />，则为 <see cref="F:System.Boolean.FalseString" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-373"><see cref="F:System.Boolean.TrueString" /> if the value of this instance is <see langword="true" />, or <see cref="F:System.Boolean.FalseString" /> if the value of this instance is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-374">`provider`参数为保留参数。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-374">The `provider` parameter is reserved.</span></span> <span data-ttu-id="d3ce5-375">它不参与此方法的执行。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-375">It does not participate in the execution of this method.</span></span> <span data-ttu-id="d3ce5-376">这意味着，<xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>方法，与使用的大多数方法不同`provider`参数，不会反映特定于区域性的设置。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-376">This means that the <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method, unlike most methods with a `provider` parameter, does not reflect culture-specific settings.</span></span>  
  
 <span data-ttu-id="d3ce5-377">此方法返回"True"或"False"的常量。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-377">This method returns the constants "True" or "False".</span></span> <span data-ttu-id="d3ce5-378">请注意，XML 是区分大小写，并且 XML 规范识别"true"和"false"作为组有效的布尔值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-378">Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</span></span> <span data-ttu-id="d3ce5-379">如果<xref:System.String>返回对象<xref:System.Boolean.ToString%28System.IFormatProvider%29>方法是写入到 XML 文件，其<xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType>应首先调用方法以将其转换为小写。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-379">If the <xref:System.String> object returned by the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> method should be called first to convert it to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrueString">
      <MemberSignature Language="C#" Value="public static readonly string TrueString;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string TrueString" />
      <MemberSignature Language="DocId" Value="F:System.Boolean.TrueString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TrueString As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ TrueString;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3ce5-380">将布尔值 <see langword="true" /> 表示为一个字符串。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-380">Represents the Boolean value <see langword="true" /> as a string.</span></span> <span data-ttu-id="d3ce5-381">此字段为只读。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-381">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-382">此字段为等于字符串"True"。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-382">This field is equal to the string "True".</span></span>  
  
 <span data-ttu-id="d3ce5-383"><xref:System.Boolean.TrueString>属性定义的字符串表示形式`True`<xref:System.Boolean>格式设置和分析操作中的值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-383">The <xref:System.Boolean.TrueString> property defines the string representation of a `True` <xref:System.Boolean> value in formatting and parsing operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryFormat(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryParse(System.ReadOnlySpan{System.Char},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, [Runtime::InteropServices::Out] bool % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryParse(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] bool % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d3ce5-384">包含要转换的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-384">A string containing the value to convert.</span></span></param>
        <param name="result"><span data-ttu-id="d3ce5-385">此方法返回时，如果转换成功，若 <c>value</c> 与 <see cref="F:System.Boolean.TrueString" /> 相等，则结果包含 <see langword="true" />，若 <c>value</c> 与 <see cref="F:System.Boolean.FalseString" /> 相等，则结果包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-385">When this method returns, if the conversion succeeded, contains <see langword="true" /> if <c>value</c> is equal to <see cref="F:System.Boolean.TrueString" /> or <see langword="false" /> if <c>value</c> is equal to <see cref="F:System.Boolean.FalseString" />.</span></span> <span data-ttu-id="d3ce5-386">如果转换失败，则包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-386">If the conversion failed, contains <see langword="false" />.</span></span> <span data-ttu-id="d3ce5-387">如果 <c>value</c> 为 <see langword="null" /> 或不等于 <see cref="F:System.Boolean.TrueString" /> 或 <see cref="F:System.Boolean.FalseString" /> 字段的值，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-387">The conversion fails if <c>value</c> is <see langword="null" /> or is not equal to the value of either the <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" /> field.</span></span></param>
        <summary><span data-ttu-id="d3ce5-388">尝试将逻辑值的指定字符串表示形式转换为其等效的 <see cref="T:System.Boolean" /> 值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-388">Tries to convert the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span></span> <span data-ttu-id="d3ce5-389">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-389">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="d3ce5-390">如果 <see langword="true" /> 成功转换，则为 <paramref name="value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-390"><see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3ce5-391"><xref:System.Boolean.TryParse%2A>方法就像是<xref:System.Boolean.Parse%2A>方法，除了<xref:System.Boolean.TryParse%2A>方法不会引发异常，如果转换失败。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-391">The <xref:System.Boolean.TryParse%2A> method is like the <xref:System.Boolean.Parse%2A> method, except the <xref:System.Boolean.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="d3ce5-392">`value`参数可以是前面或后面的空白区域。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-392">The `value` parameter can be preceded or followed by white space.</span></span> <span data-ttu-id="d3ce5-393">比较是有序的且不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-393">The comparison is ordinal and case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3ce5-394">下面的示例调用<xref:System.Boolean.TryParse%2A>方法，以便分析的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-394">The following example calls the <xref:System.Boolean.TryParse%2A> method to parse an array of strings.</span></span> <span data-ttu-id="d3ce5-395">请注意，分析操作成功，仅当要分析的字符串为"True"(值<xref:System.Boolean.TrueString>字段) 或"False"(值<xref:System.Boolean.FalseString>字段) 中的不区分大小写的比较。</span><span class="sxs-lookup"><span data-stu-id="d3ce5-395">Note that the parse operation succeeds only if the string to be parsed is "True" (the value of the <xref:System.Boolean.TrueString> field) or "False" (the value of the <xref:System.Boolean.FalseString> field) in a case-insensitive comparison.</span></span>  
  
 [!code-csharp[System.Boolean.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.tryparse/cs/tryparseex.cs#1)]
 [!code-vb[System.Boolean.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.tryparse/vb/tryparseex.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Parse(System.String)" />
        <altmember cref="F:System.Boolean.TrueString" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
  </Members>
</Type>