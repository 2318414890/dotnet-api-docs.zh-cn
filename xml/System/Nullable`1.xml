<Type Name="Nullable&lt;T&gt;" FullName="System.Nullable&lt;T&gt;">
  <TypeSignature Language="C#" Value="public struct Nullable&lt;T&gt; where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Nullable`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Nullable`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Nullable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic value class Nullable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="1d1b4-101"><see cref="T:System.Nullable`1" /> 泛型类型的基础值类型。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-101">The underlying value type of the <see cref="T:System.Nullable`1" /> generic type.</span></span></typeparam>
    <summary><span data-ttu-id="1d1b4-102">表示可分配有 <see langword="null" /> 的值类型。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-102">Represents a value type that can be assigned <see langword="null" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d1b4-103">一种类型认为是可以为 null，如果它可以分配一个值，也可以分配`null`，这意味着类型具有无论如何没有值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-103">A type is said to be nullable if it can be assigned a value or can be assigned `null`, which means the type has no value whatsoever.</span></span> <span data-ttu-id="1d1b4-104">默认情况下，所有都引用类型，如<xref:System.String>，是否可以为 null，但所有值类型，如<xref:System.Int32>，不是。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-104">By default, all reference types, such as <xref:System.String>, are nullable, but all value types, such as <xref:System.Int32>, are not.</span></span>  
  
 <span data-ttu-id="1d1b4-105">在 C# 和 Visual Basic 中，你可以将值类型作为可以为 null 标记使用`?`后的值类型的表示法。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-105">In C# and Visual Basic, you mark a value type as nullable by using the `?` notation after the value type.</span></span> <span data-ttu-id="1d1b4-106">例如，`int?`在 C# 或`Integer?`在 Visual Basic 中声明可以分配的整数值类型`null`。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-106">For example, `int?` in C# or `Integer?` in Visual Basic declares an integer value type that can be assigned `null`.</span></span>  
  
 <span data-ttu-id="1d1b4-107"><xref:System.Nullable%601>结构支持使用值类型为 null 的类型，因为引用类型可以为 null 设计使然。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-107">The <xref:System.Nullable%601> structure supports using only a value type as a nullable type because reference types are nullable by design.</span></span>  
  
 <span data-ttu-id="1d1b4-108"><xref:System.Nullable>类支持互补<xref:System.Nullable%601>结构。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-108">The <xref:System.Nullable> class provides complementary support for the <xref:System.Nullable%601> structure.</span></span> <span data-ttu-id="1d1b4-109"><xref:System.Nullable>类支持获取可以为 null 的类型的基础类型，其基础值类型可以为 null 的类型的对比较和相等操作不支持泛型比较和相等性操作。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-109">The <xref:System.Nullable> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.</span></span>  
  
## <a name="fundamental-properties"></a><span data-ttu-id="1d1b4-110">基本属性</span><span class="sxs-lookup"><span data-stu-id="1d1b4-110">Fundamental Properties</span></span>  
 <span data-ttu-id="1d1b4-111">两个基本成员<xref:System.Nullable%601>结构不是<xref:System.Nullable%601.HasValue%2A>和<xref:System.Nullable%601.Value%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-111">The two fundamental members of the <xref:System.Nullable%601> structure are the <xref:System.Nullable%601.HasValue%2A> and <xref:System.Nullable%601.Value%2A> properties.</span></span> <span data-ttu-id="1d1b4-112">如果<xref:System.Nullable%601.HasValue%2A>属性<xref:System.Nullable%601>对象是`true`，可通过访问对象的值<xref:System.Nullable%601.Value%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-112">If the <xref:System.Nullable%601.HasValue%2A> property for a <xref:System.Nullable%601> object is `true`, the value of the object can be accessed with the <xref:System.Nullable%601.Value%2A> property.</span></span> <span data-ttu-id="1d1b4-113">如果<xref:System.Nullable%601.HasValue%2A>属性是`false`，对象的值是不确定并尝试访问<xref:System.Nullable%601.Value%2A>属性将引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-113">If the <xref:System.Nullable%601.HasValue%2A> property is `false`, the value of the object is undefined and an attempt to access the <xref:System.Nullable%601.Value%2A> property throws an <xref:System.InvalidOperationException>.</span></span>  
  
## <a name="boxing-and-unboxing"></a><span data-ttu-id="1d1b4-114">装箱和取消装箱</span><span class="sxs-lookup"><span data-stu-id="1d1b4-114">Boxing and Unboxing</span></span>  
 <span data-ttu-id="1d1b4-115">可以为 null 的类型进行装箱时，公共语言运行时自动框的基础值<xref:System.Nullable%601>对象，而不<xref:System.Nullable%601>对象本身。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-115">When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <xref:System.Nullable%601> object, not the <xref:System.Nullable%601> object itself.</span></span> <span data-ttu-id="1d1b4-116">也就是说，如果<xref:System.Nullable%601.HasValue%2A>属性是`true`的内容<xref:System.Nullable%601.Value%2A>属性进行装箱。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-116">That is, if the <xref:System.Nullable%601.HasValue%2A> property is `true`, the contents of the <xref:System.Nullable%601.Value%2A> property is boxed.</span></span> <span data-ttu-id="1d1b4-117">未装箱可以为 null 的类型的基础值时，公共语言运行时创建一个新<xref:System.Nullable%601>结构初始化为基础的值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-117">When the underlying value of a nullable type is unboxed, the common language runtime creates a new <xref:System.Nullable%601> structure initialized to the underlying value.</span></span>  
  
 <span data-ttu-id="1d1b4-118">如果`HasValue`可以为 null 的类型的属性是`false`，装箱操作的结果是`null`。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-118">If the `HasValue` property of a nullable type is `false`, the result of a boxing operation is `null`.</span></span> <span data-ttu-id="1d1b4-119">因此，如果装箱可以为 null 的类型传递给需要的对象自变量的方法，该方法必须准备好处理这种情况，其中的参数是`null`。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-119">Consequently, if a boxed nullable type is passed to a method that expects an object argument, that method must be prepared to handle the case where the argument is `null`.</span></span> <span data-ttu-id="1d1b4-120">当`null`是取消装箱到可以为 null 的类型，公共语言运行时创建一个新<xref:System.Nullable%601>结构并初始化其`HasValue`属性`false`。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-120">When `null` is unboxed into a nullable type, the common language runtime creates a new <xref:System.Nullable%601> structure and initializes its `HasValue` property to `false`.</span></span>  
  
## <a name="includenetv451includesnet-v451-mdmd-and-windows-runtime-components"></a>[!INCLUDE[net_v451](~/includes/net-v451-md.md)]<span data-ttu-id="1d1b4-121"> 和 Windows 运行时组件</span><span class="sxs-lookup"><span data-stu-id="1d1b4-121"> and Windows Runtime Components</span></span>  
 <span data-ttu-id="1d1b4-122">从开始[!INCLUDE[net_v451](~/includes/net-v451-md.md)]，可以包括<xref:System.Nullable%601>类型作为结构在 WinMD 库中导出的成员。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-122">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)], you can include a <xref:System.Nullable%601> type as a member of a structure exported in a WinMD library.</span></span> <span data-ttu-id="1d1b4-123">以前，不支持这样做。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-123">Previously, this was not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d1b4-124">下面的代码示例定义了 Microsoft Pubs 示例数据库中的表中的三个行。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-124">The following code example defines three rows of a table in the Microsoft Pubs sample database.</span></span> <span data-ttu-id="1d1b4-125">表包含两个都不可以为 null 的列和两个都可以为 null 的列。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-125">The table contains two columns that are not nullable and two columns that are nullable.</span></span>  
  
 [!code-cpp[system.nullableOfT.class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.nullableOfT.class/cpp/tarow.cpp#1)]
 [!code-csharp[system.nullableOfT.class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.class/cs/tarow.cs#1)]
 [!code-vb[system.nullableOfT.class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.class/vb/tarow.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Nullable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Nullable (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable(T value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1d1b4-126">一个值类型。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-126">A value type.</span></span></param>
        <summary><span data-ttu-id="1d1b4-127">将 <see cref="T:System.Nullable`1" /> 结构的新实例初始化为指定值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-127">Initializes a new instance of the <see cref="T:System.Nullable`1" /> structure to the specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d1b4-128"><xref:System.Nullable%601.%23ctor%2A>构造函数初始化<xref:System.Nullable%601.HasValue%2A>属性的新<xref:System.Nullable%601>对象传递给`true`，和<xref:System.Nullable%601.Value%2A>属性的值`value`参数。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-128">The <xref:System.Nullable%601.%23ctor%2A> constructor initializes the <xref:System.Nullable%601.HasValue%2A> property of the new <xref:System.Nullable%601> object to `true`, and the <xref:System.Nullable%601.Value%2A> property to the value of the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="1d1b4-129">一个对象。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-129">An object.</span></span></param>
        <summary><span data-ttu-id="1d1b4-130">指示当前 <see cref="T:System.Nullable`1" /> 对象是否与指定的对象相等。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-130">Indicates whether the current <see cref="T:System.Nullable`1" /> object is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="1d1b4-131">如果 <paramref name="other" /> 参数等于当前的 <see cref="T:System.Nullable`1" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-131"><see langword="true" /> if the <paramref name="other" /> parameter is equal to the current <see cref="T:System.Nullable`1" /> object; otherwise, <see langword="false" />.</span></span>  
  
 <span data-ttu-id="1d1b4-132">此表描述如何定义所比较值的相等性：</span><span class="sxs-lookup"><span data-stu-id="1d1b4-132">This table describes how equality is defined for the compared values:</span></span>  
  
 <span data-ttu-id="1d1b4-133"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="1d1b4-133"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="1d1b4-134"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="1d1b4-134"></term><description> Description</span></span>  
  
 <span data-ttu-id="1d1b4-135"></description></listheader><item><term><see langword="true" /></term><description> <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />，并且 <paramref name="other" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-135"></description></listheader><item><term><see langword="true" /></term><description> The <see cref="P:System.Nullable`1.HasValue" /> property is <see langword="false" />, and the <paramref name="other" /> parameter is <see langword="null" />.</span></span> <span data-ttu-id="1d1b4-136">即，根据定义，两个 null 值相等。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-136">That is, two null values are equal by definition.</span></span>  
  
 <span data-ttu-id="1d1b4-137">或</span><span class="sxs-lookup"><span data-stu-id="1d1b4-137">-or-</span></span>  
  
 <span data-ttu-id="1d1b4-138"><see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，并且 <see cref="P:System.Nullable`1.Value" /> 属性返回的值等于 <paramref name="other" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-138">The <see cref="P:System.Nullable`1.HasValue" /> property is <see langword="true" />, and the value returned by the <see cref="P:System.Nullable`1.Value" /> property is equal to the <paramref name="other" /> parameter.</span></span>  
  
 <span data-ttu-id="1d1b4-139"></description></item><item><term><see langword="false" /></term><description> 当前 <see cref="T:System.Nullable`1" /> 结构的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，并且 <paramref name="other" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-139"></description></item><item><term><see langword="false" /></term><description> The <see cref="P:System.Nullable`1.HasValue" /> property for the current <see cref="T:System.Nullable`1" /> structure is <see langword="true" />, and the <paramref name="other" /> parameter is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="1d1b4-140">或</span><span class="sxs-lookup"><span data-stu-id="1d1b4-140">-or-</span></span>  
  
 <span data-ttu-id="1d1b4-141">当前 <see cref="P:System.Nullable`1.HasValue" /> 结构的 <see cref="T:System.Nullable`1" /> 属性为 <see langword="false" />，并且 <paramref name="other" /> 参数不为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-141">The <see cref="P:System.Nullable`1.HasValue" /> property for the current <see cref="T:System.Nullable`1" /> structure is <see langword="false" />, and the <paramref name="other" /> parameter is not <see langword="null" />.</span></span>  
  
 <span data-ttu-id="1d1b4-142">或</span><span class="sxs-lookup"><span data-stu-id="1d1b4-142">-or-</span></span>  
  
 <span data-ttu-id="1d1b4-143">当前 <see cref="P:System.Nullable`1.HasValue" /> 结构的 <see cref="T:System.Nullable`1" /> 属性为 <see langword="true" />，并且 <see cref="P:System.Nullable`1.Value" /> 属性返回的值不等于 <paramref name="other" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-143">The <see cref="P:System.Nullable`1.HasValue" /> property for the current <see cref="T:System.Nullable`1" /> structure is <see langword="true" />, and the value returned by the <see cref="P:System.Nullable`1.Value" /> property is not equal to the <paramref name="other" /> parameter.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d1b4-144">如果<xref:System.Nullable%601.HasValue%2A>属性的当前<xref:System.Nullable%601>结构是`true`和`other`参数不是`null`，相等性取决传递`other`参数`Equals`方法基础值的当前<xref:System.Nullable%601>结构。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-144">If the <xref:System.Nullable%601.HasValue%2A> property of the current <xref:System.Nullable%601> structure is `true` and the `other` argument is not `null`, equality is determined by passing the `other` parameter to the `Equals` method of the underlying value of the current <xref:System.Nullable%601> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d1b4-145">下面的代码示例确定某个对象与<xref:System.Nullable%601>对象是否等于当前<xref:System.Nullable%601>对象。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-145">The following code example determines whether an object and a <xref:System.Nullable%601> object are equal to the current <xref:System.Nullable%601> object.</span></span>  
  
 [!code-csharp[system.nullableOfT.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.Equals/cs/eq.cs#1)]
 [!code-vb[system.nullableOfT.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.Equals/vb/eq.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d1b4-146">检索由 <see cref="P:System.Nullable`1.Value" /> 属性返回的对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-146">Retrieves the hash code of the object returned by the <see cref="P:System.Nullable`1.Value" /> property.</span></span></summary>
        <returns><span data-ttu-id="1d1b4-147">如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，则为 <see cref="P:System.Nullable`1.Value" /> 属性返回的对象的哈希代码；如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />，则为零。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-147">The hash code of the object returned by the <see cref="P:System.Nullable`1.Value" /> property if the <see cref="P:System.Nullable`1.HasValue" /> property is <see langword="true" />, or zero if the <see cref="P:System.Nullable`1.HasValue" /> property is <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValueOrDefault">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d1b4-148">检索当前 <see cref="T:System.Nullable`1" /> 对象的值或默认值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-148">Retrieves the value of the current <see cref="T:System.Nullable`1" /> object, or a default value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValueOrDefault">
      <MemberSignature Language="C#" Value="public T GetValueOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetValueOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetValueOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueOrDefault () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetValueOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d1b4-149">检索当前 <see cref="T:System.Nullable`1" /> 对象的值，或该对象的默认值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-149">Retrieves the value of the current <see cref="T:System.Nullable`1" /> object, or the object's default value.</span></span></summary>
        <returns><span data-ttu-id="1d1b4-150">如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，则为 <see cref="P:System.Nullable`1.Value" /> 属性的值；否则为当前 <see cref="T:System.Nullable`1" /> 对象的默认值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-150">The value of the <see cref="P:System.Nullable`1.Value" /> property if the  <see cref="P:System.Nullable`1.HasValue" /> property is <see langword="true" />; otherwise, the default value of the current <see cref="T:System.Nullable`1" /> object.</span></span> <span data-ttu-id="1d1b4-151">默认值的类型为当前 <see cref="T:System.Nullable`1" /> 对象的类型参数，而默认值的值中只包含二进制零。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-151">The type of the default value is the type argument of the current <see cref="T:System.Nullable`1" /> object, and the value of the default value consists solely of binary zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d1b4-152"><xref:System.Nullable%601.GetValueOrDefault%2A>方法返回值的即使<xref:System.Nullable%601.HasValue%2A>属性是`false`(与不同<xref:System.Nullable%601.Value%2A>属性，将引发异常)。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-152">The <xref:System.Nullable%601.GetValueOrDefault%2A> method returns a value even if the <xref:System.Nullable%601.HasValue%2A> property is `false` (unlike the <xref:System.Nullable%601.Value%2A> property, which throws an exception).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d1b4-153">下面的代码示例检索的值<xref:System.Nullable%601>对象如果该值为定义，否则为它检索的默认值或特定的默认值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-153">The following code example retrieves the value of a <xref:System.Nullable%601> object if that value is defined; otherwise, it retrieves the default value or a specific default value.</span></span>  
  
 [!code-csharp[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/cs/gvod.cs#1)]
 [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/vb/gvod.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Nullable`1.GetValueOrDefault(`0)" />
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault">
      <MemberSignature Language="C#" Value="public T GetValueOrDefault (T defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetValueOrDefault(!T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetValueOrDefault(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueOrDefault (defaultValue As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetValueOrDefault(T defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <param name="defaultValue"><span data-ttu-id="1d1b4-154">如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />，则为一个返回值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-154">A value to return if the <see cref="P:System.Nullable`1.HasValue" /> property is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1d1b4-155">检索当前 <see cref="T:System.Nullable`1" /> 对象的值或指定的默认值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-155">Retrieves the value of the current <see cref="T:System.Nullable`1" /> object, or the specified default value.</span></span></summary>
        <returns><span data-ttu-id="1d1b4-156">如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，则为 <see cref="P:System.Nullable`1.Value" /> 属性的值；否则为 <paramref name="defaultValue" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-156">The value of the <see cref="P:System.Nullable`1.Value" /> property if the <see cref="P:System.Nullable`1.HasValue" /> property is <see langword="true" />; otherwise, the <paramref name="defaultValue" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d1b4-157"><xref:System.Nullable%601.GetValueOrDefault%2A>方法返回值的即使<xref:System.Nullable%601.HasValue%2A>属性是`false`(与不同<xref:System.Nullable%601.Value%2A>属性，将引发异常)。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-157">The <xref:System.Nullable%601.GetValueOrDefault%2A> method returns a value even if the <xref:System.Nullable%601.HasValue%2A> property is `false` (unlike the <xref:System.Nullable%601.Value%2A> property, which throws an exception).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d1b4-158">下面的代码示例检索的值<xref:System.Nullable%601>对象如果该值为定义，否则为它检索的默认值或特定的默认值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-158">The following code example retrieves the value of a <xref:System.Nullable%601> object if that value is defined; otherwise, it retrieves the default value or a specific default value.</span></span>  
  
 [!code-csharp[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/cs/gvod.cs#1)]
 [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/vb/gvod.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Nullable`1.GetValueOrDefault" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Nullable`1.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d1b4-159">获取一个值，该值指示 <see cref="T:System.Nullable`1" /> 对象是否具有基础类型的有效值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-159">Gets a value indicating whether the current <see cref="T:System.Nullable`1" /> object has a valid value of its underlying type.</span></span></summary>
        <value>
          <span data-ttu-id="1d1b4-160">如果当前的 <see langword="true" /> 对象具有值，则为 <see cref="T:System.Nullable`1" />；如果当前的 <see cref="T:System.Nullable`1" /> 对象没有值，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-160"><see langword="true" /> if the current <see cref="T:System.Nullable`1" /> object has a value; <see langword="false" /> if the current <see cref="T:System.Nullable`1" /> object has no value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d1b4-161">如果<xref:System.Nullable%601.HasValue%2A>属性是`true`的当前值<xref:System.Nullable%601>对象可通过访问<xref:System.Nullable%601.Value%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-161">If the <xref:System.Nullable%601.HasValue%2A> property is `true`, the value of the current <xref:System.Nullable%601> object can be accessed with the <xref:System.Nullable%601.Value%2A> property.</span></span> <span data-ttu-id="1d1b4-162">否则，尝试访问其值将引发<xref:System.InvalidOperationException>异常。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-162">Otherwise, attempting to access its value throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d1b4-163">下面的示例使用<xref:System.Nullable%601.HasValue%2A>属性`Nullable<Integer>`对象以确定它是否应显示对象的<xref:System.Nullable%601.Value%2A>属性或其<xref:System.Nullable%601.GetValueOrDefault%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-163">The following example uses the <xref:System.Nullable%601.HasValue%2A> property of a `Nullable<Integer>` object to determine whether it should display the object's <xref:System.Nullable%601.Value%2A> property or its <xref:System.Nullable%601.GetValueOrDefault%2A> property.</span></span>  
  
 [!code-csharp[System.Nullable~1.HasValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.hasvalue/cs/hasvalue2.cs#1)]
 [!code-vb[System.Nullable~1.HasValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.hasvalue/vb/hasvalue2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator T (Nullable&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname !T op_Explicit(valuetype System.Nullable`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Nullable(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator T(Nullable&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1d1b4-164">可以为 Null 的值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-164">A nullable value.</span></span></param>
        <summary><span data-ttu-id="1d1b4-165">定义 <see cref="T:System.Nullable`1" /> 实例到其基础值的显式转换。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-165">Defines an explicit conversion of a <see cref="T:System.Nullable`1" /> instance to its underlying value.</span></span></summary>
        <returns><span data-ttu-id="1d1b4-166"><see cref="P:System.Nullable`1.Value" /> 参数的 <paramref name="value" /> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-166">The value of the <see cref="P:System.Nullable`1.Value" /> property for the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d1b4-167">此运算符支持当前的显式转换<xref:System.Nullable%601>实例类型`T`的一种<xref:System.Nullable%601.Value%2A>。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-167">This operator supports the explicit conversion of the current <xref:System.Nullable%601> instance to type `T`, the type of <xref:System.Nullable%601.Value%2A>.</span></span> <span data-ttu-id="1d1b4-168">此类的显式转换的语法是依赖于语言的。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-168">The syntax for such explicit conversions is language-dependent.</span></span> <span data-ttu-id="1d1b4-169">你还可以通过调用来执行转换<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-169">You may also be able to perform the conversion by calling the <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1d1b4-170">此运算符的等效方法是 <xref:System.Nullable%601.Value?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1d1b4-170">The equivalent method for this operator is <xref:System.Nullable%601.Value?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="1d1b4-171"><xref:System.Nullable%601.op_Explicit%2A>运算符使代码如下所示，将转换`Nullable(Of Int32)`值赋给<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-171">The <xref:System.Nullable%601.op_Explicit%2A> operator enables code such as the following, which converts a `Nullable(Of Int32)` value to an <xref:System.Int32> value.</span></span>  
  
 [!code-csharp[System.Nullable~1.Conversion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.conversion/cs/explicit1.cs#1)]
 [!code-vb[System.Nullable~1.Conversion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.conversion/vb/explicit1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Nullable&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;!T&gt; op_Implicit(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As T) As Nullable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Nullable&lt;T&gt;(T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1d1b4-172">一个值类型。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-172">A value type.</span></span></param>
        <summary><span data-ttu-id="1d1b4-173">创建一个新的 <see cref="T:System.Nullable`1" /> 对象，并将其初始化为指定的值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-173">Creates a new <see cref="T:System.Nullable`1" /> object initialized to a specified value.</span></span></summary>
        <returns><span data-ttu-id="1d1b4-174">一个 <see cref="T:System.Nullable`1" /> 对象，其 <see cref="P:System.Nullable`1.Value" /> 属性使用 <paramref name="value" /> 参数进行初始化。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-174">A <see cref="T:System.Nullable`1" /> object whose <see cref="P:System.Nullable`1.Value" /> property is initialized with the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d1b4-175">如果`value`参数不是`null`、<xref:System.Nullable%601.Value%2A>属性的新<xref:System.Nullable%601>值初始化为`value`参数和<xref:System.Nullable%601.HasValue%2A>属性初始化为`true`。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-175">If the `value` parameter is not `null`, the <xref:System.Nullable%601.Value%2A> property of the new <xref:System.Nullable%601> value is initialized to the `value` parameter and the <xref:System.Nullable%601.HasValue%2A> property is initialized to `true`.</span></span>  
  
 <span data-ttu-id="1d1b4-176">如果`value`参数是`null`、<xref:System.Nullable%601.Value%2A>属性的新<xref:System.Nullable%601>值初始化为默认值，该值是所有二进制零的值，与<xref:System.Nullable%601.HasValue%2A>属性初始化为`false`.</span><span class="sxs-lookup"><span data-stu-id="1d1b4-176">If the `value` parameter is `null`, the <xref:System.Nullable%601.Value%2A> property of the new <xref:System.Nullable%601> value is initialized to the default value, which is the value that is all binary zeroes, and the <xref:System.Nullable%601.HasValue%2A> property is initialized to `false`.</span></span>  
  
 <span data-ttu-id="1d1b4-177">此运算符的等效方法是 <xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1d1b4-177">The equivalent method for this operator is <xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d1b4-178">返回当前 <see cref="T:System.Nullable`1" /> 对象的值的文本表示形式。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-178">Returns the text representation of the value of the current <see cref="T:System.Nullable`1" /> object.</span></span></summary>
        <returns><span data-ttu-id="1d1b4-179">如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，则是当前 <see cref="T:System.Nullable`1" /> 对象的值的文本表示形式；如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />，则是一个空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-179">The text representation of the value of the current <see cref="T:System.Nullable`1" /> object if the <see cref="P:System.Nullable`1.HasValue" /> property is <see langword="true" />, or an empty string ("") if the <see cref="P:System.Nullable`1.HasValue" /> property is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d1b4-180"><xref:System.Nullable%601.ToString%2A>属性返回通过调用生成的字符串`ToString`属性返回的对象<xref:System.Nullable%601.Value%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-180">The <xref:System.Nullable%601.ToString%2A> property returns the string yielded by calling the `ToString` property of the object returned by the <xref:System.Nullable%601.Value%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d1b4-181">下面的代码示例显示的当前值<xref:System.Nullable%601>对象。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-181">The following code example displays the value of the current <xref:System.Nullable%601> object.</span></span>  
  
 [!code-csharp[system.nullableOfT.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.ToString/cs/ts.cs#1)]
 [!code-vb[system.nullableOfT.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.ToString/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Nullable`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d1b4-182">获取当前 <see cref="T:System.Nullable`1" /> 对象的值，如果它已被分配了有效的基础值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-182">Gets the value of the current <see cref="T:System.Nullable`1" /> object if it has been assigned a valid underlying value.</span></span></summary>
        <value><span data-ttu-id="1d1b4-183">如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，则为当前 <see cref="T:System.Nullable`1" /> 对象的值。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-183">The value of the current <see cref="T:System.Nullable`1" /> object if the <see cref="P:System.Nullable`1.HasValue" /> property is <see langword="true" />.</span></span> <span data-ttu-id="1d1b4-184">如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />，则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-184">An exception is thrown if the <see cref="P:System.Nullable`1.HasValue" /> property is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d1b4-185">如果类型的值`T`尚未分配到<xref:System.Nullable%601>对象，你可以比较到`null`和检索其<xref:System.Nullable%601.HasValue%2A>属性，但你不能访问其<xref:System.Nullable%601.Value%2A>属性或调用其其他成员。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-185">If a value of type `T` has not been assigned to the <xref:System.Nullable%601> object, you can compare it to `null` and retrieve its <xref:System.Nullable%601.HasValue%2A> property, but you cannot access its <xref:System.Nullable%601.Value%2A> property or call its other members.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d1b4-186">下面的示例使用<xref:System.Nullable%601.HasValue%2A>属性`Nullable<Integer>`对象以确定它是否应显示对象的<xref:System.Nullable%601.Value%2A>属性或其<xref:System.Nullable%601.GetValueOrDefault%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-186">The following example uses the <xref:System.Nullable%601.HasValue%2A> property of a `Nullable<Integer>` object to determine whether it should display the object's <xref:System.Nullable%601.Value%2A> property or its <xref:System.Nullable%601.GetValueOrDefault%2A> property.</span></span>  
  
 [!code-csharp[System.Nullable~1.HasValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.hasvalue/cs/hasvalue2.cs#1)]
 [!code-vb[System.Nullable~1.HasValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.hasvalue/vb/hasvalue2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d1b4-187"><see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1d1b4-187">The <see cref="P:System.Nullable`1.HasValue" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>