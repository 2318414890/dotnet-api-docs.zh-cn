<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MissingMethodException.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5decbdd0ec44a31998c460eb835f9e69dbc38fdcc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">decbdd0ec44a31998c460eb835f9e69dbc38fdcc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.MissingMethodException">
          <source>The exception that is thrown when there is an attempt to dynamically access a method that does not exist.</source>
          <target state="translated">尝试动态访问不存在的方法时引发的异常。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMethodException">
          <source>Normally a compilation error is generated if code attempts to access a nonexistent method of a class.</source>
          <target state="translated">通常，如果代码尝试访问不存在的方法的类，则生成编译错误。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMethodException">
          <source><ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph> is designed to handle cases where an attempt is made to dynamically access a renamed or deleted method of an assembly that is not referenced by its strong name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph> 旨在处理其中尝试动态访问未通过其强名称引用程序集的已重命名或删除方法的情况。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMethodException">
          <source><ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph> is thrown when code in a dependent assembly attempts to access a missing method in an assembly that was modified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph> 中的从属程序集的代码尝试访问已修改的程序集中存在的方法时引发。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMethodException">
          <source><ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph> uses the HRESULT COR_E_MISSINGMETHOD, that has the value 0x80131513.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph> 使用 HRESULT COR_E_MISSINGMETHOD，具有 0x80131513 的值。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMethodException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.MissingMethodException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">有关的实例的初始属性值的列表<ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph>，请参阅<ph id="ph2">&lt;xref:System.MissingMethodException.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMethodException">
          <source>This exception is not included in the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the , but it is thrown by some members that are.</source>
          <target state="translated">此异常未包含在<bpt id="p1">[</bpt>.NET for Windows Store 应用<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept>或的详细信息，但它将引发的某些成员。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMethodException">
          <source>To catch the exception in that case, write a <ph id="ph1">`catch`</ph> statement for <ph id="ph2">&lt;xref:System.MissingMemberException&gt;</ph> instead.</source>
          <target state="translated">若要在这种情况下捕获异常，编写<ph id="ph1">`catch`</ph>语句<ph id="ph2">&lt;xref:System.MissingMemberException&gt;</ph>相反。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMethodException">
          <source>This example shows what happens if you attempt to use reflection to call a method that does not exist and access a field that does not exist.</source>
          <target state="translated">此示例演示如果你尝试使用反射来调用程序不存在的方法，将会发生什么情况和访问不存在的字段。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.MissingMethodException">
          <source>The application recovers by catching the <ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph>, <ph id="ph2">&lt;xref:System.MissingFieldException&gt;</ph>, and <ph id="ph3">&lt;xref:System.MissingMemberException&gt;</ph>.</source>
          <target state="translated">通过捕获，应用程序恢复<ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph>， <ph id="ph2">&lt;xref:System.MissingFieldException&gt;</ph>，和<ph id="ph3">&lt;xref:System.MissingMemberException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.MissingMethodException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMethodException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.MissingMethodException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.MissingMethodException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMethodException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.MissingMethodException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.MissingMethodException.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Attempted to access a missing method."</source>
          <target state="translated">此构造函数初始化<ph id="ph1">&lt;xref:System.MissingMethodException.Message%2A&gt;</ph>属性的新实例为系统提供的消息的描述错误，如"尝试访问缺失的方法。"</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">此消息将当前系统区域性考虑在内。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph>.</source>
          <target state="translated">下表显示 <ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph> 的实例的初始属性值。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">空引用（在 Visual Basic 中为 <ph id="ph1">`Nothing`</ph>）。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">本地化的错误消息字符串。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.MissingMethodException.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that describes the error.</source>
          <target state="translated">描述该错误的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.MissingMethodException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMethodException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">用指定的错误消息初始化 <ph id="ph1">&lt;see cref="T:System.MissingMethodException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.String)">
          <source>The content of the <ph id="ph1">`message`</ph> parameter should be understandable by the user.</source>
          <target state="translated">内容<ph id="ph1">`message`</ph>参数应该是用户可以理解。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph>.</source>
          <target state="translated">下表显示 <ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph> 的实例的初始属性值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">空引用（在 Visual Basic 中为 <ph id="ph1">`Nothing`</ph>）。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">错误消息字符串。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.MissingMethodException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">承载序列化对象数据的对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.MissingMethodException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">关于来源和目标的上下文信息</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.MissingMethodException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMethodException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">用序列化数据初始化 <ph id="ph1">&lt;see cref="T:System.MissingMethodException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">此构造函数在反序列化过程中调用，以便重建通过流传输的异常对象。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>XML 和 SOAP 序列化<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">解释异常原因的错误消息。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">导致当前异常的异常。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> 参数不是空引用（在 Visual Basic 中为 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>），则在处理内部异常的 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 块中引发当前异常。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMethodException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <ph id="ph1">&lt;see cref="T:System.MissingMethodException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">因前一个异常而直接引发的异常应在 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 属性中包含对前一个异常的引用。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 属性返回传递到构造函数中的相同值，或者如果 <ph id="ph2">`Nothing`</ph> 属性不向构造函数提供内部异常值，则为空引用（在 Visual Basic 中为 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph>.</source>
          <target state="translated">下表显示 <ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph> 的实例的初始属性值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">内部异常引用。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.MissingMethodException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">错误消息字符串。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.MissingMethodException.#ctor(System.String,System.String)">
          <source>The name of the class in which access to a nonexistent method was attempted.</source>
          <target state="translated">试图访问不存在的方法时所用的类名。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.MissingMethodException.#ctor(System.String,System.String)">
          <source>The name of the method that cannot be accessed.</source>
          <target state="translated">无法访问的方法名。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.MissingMethodException.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.MissingMethodException" /&gt;</ph> class with the specified class name and method name.</source>
          <target state="translated">使用指定的类名称和方法名称初始化 <ph id="ph1">&lt;see cref="T:System.MissingMethodException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.MissingMethodException.Message">
          <source>Gets the text string showing the class name, the method name, and the signature of the missing method.</source>
          <target state="translated">获取显示类名、方法名称和缺少方法签名的文本字符串。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.MissingMethodException.Message">
          <source>This property is read-only.</source>
          <target state="translated">此属性是只读的。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMethodException.Message">
          <source>The error message string.</source>
          <target state="translated">错误消息字符串。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMethodException.Message">
          <source>If the class name is not specified when the object is constructed, the default text string inherited from the base class is returned.</source>
          <target state="translated">如果在对象构造时未指定类名称，则返回从基类继承的默认文本字符串。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMethodException.Message">
          <source>This property overrides <ph id="ph1">&lt;xref:System.MissingMemberException.Message%2A&gt;</ph>.</source>
          <target state="translated">此属性将替代<ph id="ph1">&lt;xref:System.MissingMemberException.Message%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMethodException.Message">
          <source>The error message should be localized.</source>
          <target state="translated">应本地化的错误消息。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMethodException.Message">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.MissingMethodException.Message%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.MissingMethodException.Message%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.MissingMethodException.Message">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.MissingMethodException&gt;</ph>类。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>