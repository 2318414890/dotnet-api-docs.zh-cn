<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OverflowException.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c99317f3b536cdba229df564c04881b936a67bbe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c99317f3b536cdba229df564c04881b936a67bbe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.OverflowException">
          <source>The exception that is thrown when an arithmetic, casting, or conversion operation in a checked context results in an overflow.</source>
          <target state="translated">当在检查的上下文中执行的算术、强制转换或转换运算导致溢出时引发的异常。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>An <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown at run time under the following conditions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>在以下情况下运行时引发：</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>An arithmetic operation produces a result that is outside the range of the data type returned by the operation.</source>
          <target state="translated">算术运算产生的结果超出了该操作返回的数据类型的范围。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown by a multiplication operation that overflows the bounds of the <ph id="ph2">&lt;xref:System.Int32&gt;</ph> type.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>溢出的边界的乘法运算引发<ph id="ph2">&lt;xref:System.Int32&gt;</ph>类型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>A casting or conversion operation attempts to perform a narrowing conversion, and the value of the source data type is outside the range of the target data type.</source>
          <target state="translated">强制转换或转换操作尝试执行收缩转换，源数据类型的值超出了目标数据类型的范围。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown by the attempt to convert a large unsigned byte value to a signed byte value.</source>
          <target state="translated">下面的示例演示<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>引发通过尝试将一个大型的无符号的字节值转换为有符号的字节值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>In each case, the result of the operation is a value that is less than the <ph id="ph1">`MinValue`</ph> property or greater than the <ph id="ph2">`MaxValue`</ph> property of the data type that results from the operation.</source>
          <target state="translated">在每种情况下，该操作的结果是一个值，是小于<ph id="ph1">`MinValue`</ph>属性或大于<ph id="ph2">`MaxValue`</ph>的操作生成的数据类型的属性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>For the arithmetic, casting, or conversion operation to throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>, the operation must occur in a checked context.</source>
          <target state="translated">要引发的算术、 强制转换或转换操作<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>，必须在 checked 上下文中执行操作。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>By default, arithmetic operations and overflows in Visual Basic are checked; in C#, they are not.</source>
          <target state="translated">默认情况下，检查的算术运算和 Visual Basic 中的溢出;在 C# 中，它们不是。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>If the operation occurs in an unchecked context, the result is truncated by discarding any high-order bits that do not fit into the destination type.</source>
          <target state="translated">如果该操作发生在未选中的上下文，结果将被截断，放弃不适应目标类型的任何高序位。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>The following example illustrates such an unchecked conversion in C#.</source>
          <target state="translated">下面的示例演示 C# 中的此类无检查的转换。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>It repeats the previous example in an unchecked context.</source>
          <target state="translated">重复前面的示例中未选中的上下文。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>The following Microsoft intermediate language (MSIL) instructions throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>:</source>
          <target state="translated">以下 Microsoft 中间语言 (MSIL) 指令引发<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source><ph id="ph1">`add.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>signed&gt;<ept id="p1">*</ept></source>
          <target state="translated"><ph id="ph1">`add.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>signed&gt;<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source><ph id="ph1">`conv.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>to type&gt;<ept id="p1">*</ept></source>
          <target state="translated"><ph id="ph1">`conv.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>为类型 &gt;<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source><ph id="ph1">`conv.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>to type&gt;<ept id="p1">*</ept> <ph id="ph3">`.un`</ph></source>
          <target state="translated"><ph id="ph1">`conv.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>为类型 &gt;<ept id="p1">*</ept> <ph id="ph3">`.un`</ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source><ph id="ph1">`mul.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>type&gt;<ept id="p1">*</ept></source>
          <target state="translated"><ph id="ph1">`mul.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>type&gt;<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source><ph id="ph1">`sub.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>type&gt;<ept id="p1">*</ept></source>
          <target state="translated"><ph id="ph1">`sub.ovf.`</ph> <bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>type&gt;<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source><ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> uses the HRESULT COR_E_OVERFLOW, which has the value 0x80131516.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 使用 HRESULT COR_E_OVERFLOW，其值 0x80131516。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.OverflowException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.OverflowException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">有关的实例的初始属性值的列表<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>，请参阅<ph id="ph2">&lt;xref:System.OverflowException.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.OverflowException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">下表显示 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 的实例的初始属性值。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">空引用（在 Visual Basic 中为 <ph id="ph1">`Nothing`</ph>）。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">本地化的错误消息字符串。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">描述错误的消息。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">用指定的错误消息初始化 <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String)">
          <source>The content of the <ph id="ph1">`message`</ph> should be understandable to the user.</source>
          <target state="translated">内容<ph id="ph1">`message`</ph>应是可以理解的用户。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">下表显示 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 的实例的初始属性值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">空引用（在 Visual Basic 中为 <ph id="ph1">`Nothing`</ph>）。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">错误消息字符串。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">承载序列化对象数据的对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">关于来源和目标的上下文信息</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">用序列化数据初始化 <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">此构造函数在反序列化过程中调用，以便重建通过流传输的异常对象。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">解释异常原因的错误消息。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">导致当前异常的异常。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic), the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 参数不是空引用（在 Visual Basic 中为 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>），则在处理内部异常的 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 块中引发当前异常。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <ph id="ph1">&lt;see cref="T:System.OverflowException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">因前一个异常而直接引发的异常可以在 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 属性中包含对前一个异常的引用。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 属性返回传递到构造函数中的相同值，或者如果 <ph id="ph2">`Nothing`</ph> 属性不向构造函数提供内部异常值，则为空引用（在 Visual Basic 中为 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">下表显示 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 的实例的初始属性值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">内部异常引用。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.OverflowException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">错误消息字符串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>