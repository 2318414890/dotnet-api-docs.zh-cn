<Type Name="Span&lt;T&gt;+Enumerator" FullName="System.Span&lt;T&gt;+Enumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="51216179ec9275cfab02d5dad557c501cd38affc" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58729776" /></Metadata><TypeSignature Language="C#" Value="public struct Span&lt;T&gt;.Enumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit Span`1/Enumerator&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Span`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure Span(Of T).Enumerator" />
  <TypeSignature Language="C++ CLI" Value="public: value class Span&lt;T&gt;::Enumerator" />
  <TypeSignature Language="F#" Value="type Span&lt;'T&gt;.Enumerator = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.2;netcore-2.1;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsByRefLike</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6ad1f-101">为 <see cref="T:System.Span`1" /> 的元素提供枚举器。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-101">Provides an enumerator for the elements of a <see cref="T:System.Span`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

<span data-ttu-id="6ad1f-102">C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) C# 语言和[为每个...下一步](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)构造在 Visual Basic 中的隐藏的枚举器的复杂性。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-102">The C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) of the C# language and the [For Each...Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construct in Visual Basic hides the complexity of enumerators.</span></span> <span data-ttu-id="6ad1f-103">而不是直接操作枚举器，使用`foreach`或`For Each...Next`建议。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-103">Instead of directly manipulating the enumerator, using `foreach` or `For Each...Next` is recommended.</span></span> 

<span data-ttu-id="6ad1f-104">最初，枚举数位于中的第一个元素之前<xref:System.Span%601>。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-104">Initially, the enumerator is positioned before the first element in the <xref:System.Span%601>.</span></span> <span data-ttu-id="6ad1f-105">在此位置上，未定义 <xref:System.Span%601.Enumerator.Current>。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-105">At this position, <xref:System.Span%601.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="6ad1f-106">必须调用<xref:System.Span%601.Enumerator.MoveNext%2A>将枚举数前移到中的第一项<xref:System.Span%601>阅读的值之前，先<xref:System.Span%601.Enumerator.Current>。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-106">You must call <xref:System.Span%601.Enumerator.MoveNext%2A> to advance the enumerator to the first item in the <xref:System.Span%601> before reading the value of <xref:System.Span%601.Enumerator.Current>.</span></span>

<span data-ttu-id="6ad1f-107"><xref:System.Span%601.Enumerator.Current> 返回相同的值直到<xref:System.Span%601.Enumerator.MoveNext%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-107"><xref:System.Span%601.Enumerator.Current> returns the same value until <xref:System.Span%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="6ad1f-108"><xref:System.Span%601.Enumerator.MoveNext%2A> 设置<xref:System.Span%601.Enumerator.Current>中的下一项<xref:System.Span%601>。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-108"><xref:System.Span%601.Enumerator.MoveNext%2A> sets <xref:System.Span%601.Enumerator.Current> to the next item in the <xref:System.Span%601>.</span></span>

<span data-ttu-id="6ad1f-109">如果<xref:System.Span%601.Enumerator.MoveNext%2A>传递的末尾<xref:System.Span%601>，<xref:System.Span%601.Enumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-109">If <xref:System.Span%601.Enumerator.MoveNext%2A> passes the end of the <xref:System.Span%601>, <xref:System.Span%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="6ad1f-110">当该枚举数将在此状态下，后续调用<xref:System.Span%601.Enumerator.MoveNext%2A>也会返回`false`和<xref:System.Span%601.Enumerator.Current>是不确定的。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-110">When the enumerator is at this state, subsequent calls to <xref:System.Span%601.Enumerator.MoveNext%2A> also return `false` and <xref:System.Span%601.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="6ad1f-111">不能设置<xref:System.Span%601.Enumerator.Current>中的第一个项目<xref:System.Span%601>再次; 必须改为创建新的枚举器实例。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-111">You cannot set <xref:System.Span%601.Enumerator.Current> to the first item in the <xref:System.Span%601> again; you must create a new enumerator instance instead.</span></span> 

<span data-ttu-id="6ad1f-112">枚举器不具有独占访问权<xref:System.Span%601>。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-112">The enumerator does not have exclusive access to the <xref:System.Span%601>.</span></span> <span data-ttu-id="6ad1f-113">此外，还可以修改跨度所基于的基础数据。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-113">In addition, the underlying data on which the span is based can also be modified.</span></span> <span data-ttu-id="6ad1f-114">因此，通过一个范围枚举本质上不是线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-114">Therefore, enumerating through a span is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="6ad1f-115">若要确保枚举过程线程安全性，必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-115">To guarantee thread safety during enumeration, you must implement your own synchronization.</span></span> <span data-ttu-id="6ad1f-116">例如，下面的代码具有一个争用条件。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-116">For example, the following code has a race condition.</span></span> <span data-ttu-id="6ad1f-117">不能确保跨度，将枚举之前`ClearContents`方法执行。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-117">It does not ensure that the span will be enumerated before the `ClearContents` method executes.</span></span> <span data-ttu-id="6ad1f-118">因此，基础数组是在范围的枚举过程中清除：</span><span class="sxs-lookup"><span data-stu-id="6ad1f-118">As a result, the underlying array is cleared during enumeration of the span:</span></span>

[!code-csharp[System.Span<T>.Enumerator-no-synchronization](~/samples/snippets/csharp/api/system/span.enumerator/nosync/program.cs)]

<span data-ttu-id="6ad1f-119">如果之前枚举的范围内，为修订版本的同步访问阵列`EnumerateSpan`方法的以下示例中，作用`ClearContents`方法不会修改在枚举过程基础 s p a n 的数据。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-119">If you synchronize access to the array before enumerating the span, as the revised version of the `EnumerateSpan` method does in the following example, the `ClearContents` method doesn't modify underlying span data during enumeration.</span></span> <span data-ttu-id="6ad1f-120">请注意示例锁定跨度所基于的基础数组。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-120">Note that the example locks the underlying array on which the span is based.</span></span>  

[!code-csharp[System.Span<T>.Enumerator-no-synchronization](~/samples/snippets/csharp/api/system/span.enumerator/sync/program.cs#1)]

<span data-ttu-id="6ad1f-121">与在.NET 中，某些其他枚举器结构不同<xref:System.Span%601.Enumerator>:</span><span class="sxs-lookup"><span data-stu-id="6ad1f-121">Unlike some other enumerator structures in .NET, the <xref:System.Span%601.Enumerator>:</span></span>

- <span data-ttu-id="6ad1f-122">不实现<xref:System.Collections.IEnumerator>或<xref:System.Collections.Generic.IEnumerator%601>接口。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-122">Does not implement the <xref:System.Collections.IEnumerator> or <xref:System.Collections.Generic.IEnumerator%601> interface.</span></span> <span data-ttu-id="6ad1f-123">这是因为<xref:System.Span%601.Enumerator>是[ref 结构](~/docs/csharp/reference-semantics-with-value-types.md#ref-struct-type)。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-123">This is because <xref:System.Span%601.Enumerator> is a [ref struct](~/docs/csharp/reference-semantics-with-value-types.md#ref-struct-type).</span></span>

- <span data-ttu-id="6ad1f-124">不包括`Reset`方法，可以将枚举数设置为第一个元素之前的元素范围中其初始位置。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-124">Does not include a `Reset` method, which can set the enumerator to its initial position before the first element in the span.</span></span> <span data-ttu-id="6ad1f-125">(<xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType>方法必须作为接口一部分实现，但大多数实现者引发异常或不提供实现。)</span><span class="sxs-lookup"><span data-stu-id="6ad1f-125">(The <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> method must be implemented as part of the interface, but most implementors either throw an exception or provide no implementation.)</span></span> 
 
      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Span`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T % Current { T % get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : " Usage="System.Span&lt;'T&gt;.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6ad1f-126">获取对枚举器当前位置的项目的引用。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-126">Gets a reference to the item at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="6ad1f-127"><see cref="T:System.Span`1" /> 中位于该枚举数当前位置的元素。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-127">The element in the <see cref="T:System.Span`1" /> at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="6ad1f-128">`Current` 未在以下条件之一：</span><span class="sxs-lookup"><span data-stu-id="6ad1f-128">`Current` is undefined under either of the following conditions:</span></span> 

- <span data-ttu-id="6ad1f-129">立即创建枚举器后，枚举数位于范围中的第一个元素之前。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-129">Immediately after the enumerator is created, the enumerator is positioned before the first element in the span.</span></span> <span data-ttu-id="6ad1f-130"><xref:System.Span%601.Enumerator.MoveNext%2A> 枚举器前进到范围的第一个元素，读取的值之前必须调用`Current`。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-130"><xref:System.Span%601.Enumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the span before reading the value of `Current`.</span></span>

- <span data-ttu-id="6ad1f-131">上次调用<xref:System.Span%601.Enumerator.MoveNext%2A>返回`false`，指示范围的末尾。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-131">The last call to <xref:System.Span%601.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the span.</span></span> 

<span data-ttu-id="6ad1f-132">`Current` 返回相同的值直到<xref:System.Span%601.Enumerator.MoveNext%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-132">`Current` returns the same value until <xref:System.Span%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="6ad1f-133"><xref:System.Span%601.Enumerator.MoveNext%2A> 设置`Current`到范围中的下一项。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-133"><xref:System.Span%601.Enumerator.MoveNext%2A> sets `Current` to the next item in the span.</span></span> 

      ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Span`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ad1f-134">将枚举器推进到 <see cref="System.Span`1" /> 的下一项。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-134">Advances the enumerator to the next item of the <see cref="System.Span`1" />.</span></span></summary>
        <returns><span data-ttu-id="6ad1f-135">如果枚举器成功推进到下一项，则为 `true`；如果已通过范围的末尾，则为 `false`。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-135">`true` if the enumerator successfully advanced to the next item; `false` if the end of the span has been passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="6ad1f-136">创建一个枚举器后，它定位在 span，并在首次调用中的第一个元素之前`MoveNext`将枚举器推进到范围中的第一项。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-136">After an enumerator is created, it is positioned before the first element in the span, and the first call to `MoveNext` advances the enumerator to the first item in the span.</span></span> 

<span data-ttu-id="6ad1f-137">如果`MoveNext`传递范围的末尾`MoveNext`返回`false`。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-137">If `MoveNext` passes the end of the span, `MoveNext` returns `false`.</span></span> <span data-ttu-id="6ad1f-138">当该枚举数将在此状态下，后续调用`MoveNext`还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="6ad1f-138">When the enumerator is at this state, subsequent calls to `MoveNext` also return `false`.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>