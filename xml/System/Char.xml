<Type Name="Char" FullName="System.Char">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb29d8273aed0c2175ba05e02ad948872b11d717" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36433495" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit char extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;char&gt;, class System.IConvertible, class System.IEquatable`1&lt;char&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Char" />
  <TypeSignature Language="VB.NET" Value="Public Structure Char&#xA;Implements IComparable, IComparable(Of Char), IConvertible, IEquatable(Of Char)" />
  <TypeSignature Language="C++ CLI" Value="public value class Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="F#" Value="type char = struct&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Char&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bfe2e-101">Represents a character as a UTF-16 code unit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bfe2e-101">Represents a character as a UTF-16 code unit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-102">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]使用<xref:System.Char>结构来表示 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-102">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character.</span></span> <span data-ttu-id="bfe2e-103">Unicode 标准用叫做代码点的唯一 21 位标量数字标识每个 Unicode 字符，并定义指定如何将码位编码为一个或多个 16 位值的序列的 UTF 16 编码形式。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-103">The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values.</span></span> <span data-ttu-id="bfe2e-104">每个 16 位值范围为十六进制 0x0000 到 0xFFFF 并存储在<xref:System.Char>结构。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-104">Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.</span></span>  <span data-ttu-id="bfe2e-105">值<xref:System.Char>对象是其 16 位数字 （序号） 值。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-105">The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.</span></span>  
  
 <span data-ttu-id="bfe2e-106">以下各部分分别之间的关系<xref:System.Char>对象和一个字符和讨论一些常见的任务，使用执行<xref:System.Char>实例。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-106">The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.</span></span>  
  
 <span data-ttu-id="bfe2e-107">[Char 对象、 Unicode 字符和字符串](#Relationship) </span><span class="sxs-lookup"><span data-stu-id="bfe2e-107">[Char objects, Unicode characters, and strings](#Relationship) </span></span>  
 <span data-ttu-id="bfe2e-108">[字符和字符类别](#Categories) </span><span class="sxs-lookup"><span data-stu-id="bfe2e-108">[Characters and character categories](#Categories) </span></span>  
 <span data-ttu-id="bfe2e-109">[字符和文本元素](#Elements) </span><span class="sxs-lookup"><span data-stu-id="bfe2e-109">[Characters and text elements](#Elements) </span></span>  
 <span data-ttu-id="bfe2e-110">[常见操作](#Operations) </span><span class="sxs-lookup"><span data-stu-id="bfe2e-110">[Common operations](#Operations) </span></span>  
 [<span data-ttu-id="bfe2e-111">Char 值和互操作</span><span class="sxs-lookup"><span data-stu-id="bfe2e-111">Char values and interop</span></span>](#Interop)  
  
<a name="Relationship"></a>   
## <a name="char-objects-unicode-characters-and-strings"></a><span data-ttu-id="bfe2e-112">Char 对象、 Unicode 字符和字符串</span><span class="sxs-lookup"><span data-stu-id="bfe2e-112">Char objects, Unicode characters, and strings</span></span>  
 <span data-ttu-id="bfe2e-113">A<xref:System.String>对象是的有序集合<xref:System.Char>表示的文本字符串的结构。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-113">A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text.</span></span> <span data-ttu-id="bfe2e-114">大多数的 Unicode 字符可以由单个<xref:System.Char>对象，但被编码为基字符的字符代理项对，和/或组合字符序列由多个<xref:System.Char>对象。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-114">Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="bfe2e-115">为此，<xref:System.Char>结构<xref:System.String>对象不是一定等效于单个 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-115">For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.</span></span>  
  
 <span data-ttu-id="bfe2e-116">多个 16 位代码单位用于表示单个 Unicode 字符在以下情况：</span><span class="sxs-lookup"><span data-stu-id="bfe2e-116">Multiple 16-bit code units are used to represent single Unicode characters in the following cases:</span></span>  
  
-   <span data-ttu-id="bfe2e-117">标志符号，可能包含单个字符或个基字符后跟一个或多个组合字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-117">Glyphs, which may consist of a single character or of a base character followed by one or more combining characters.</span></span> <span data-ttu-id="bfe2e-118">例如，由一个表示字符 ä<xref:System.Char>对象单位是 U + 0061 跟一个其代码<xref:System.Char>其代码单位为 U + 0308年的对象。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-118">For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308.</span></span> <span data-ttu-id="bfe2e-119">(也可通过单个定义字符 ä<xref:System.Char>具有的 U + 00E4 a 代码单位的对象。)下面的示例演示两个包含的字符 ä<xref:System.Char>对象。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-119">(The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.</span></span>  
  
     [!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]
     [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]  
  
-   <span data-ttu-id="bfe2e-120">Unicode 基本多语言平面 (BMP) 外的字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-120">Characters outside the Unicode Basic Multilingual Plane (BMP).</span></span> <span data-ttu-id="bfe2e-121">Unicode 支持除了 BMP，表示平面 0 十六个平面。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-121">Unicode supports sixteen planes in addition to the BMP, which represents plane 0.</span></span> <span data-ttu-id="bfe2e-122">通过包含平面的 21 位值 utf-32 表示 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-122">A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane.</span></span> <span data-ttu-id="bfe2e-123">例如，U + 1D160 表示符号音符字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-123">For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character.</span></span> <span data-ttu-id="bfe2e-124">由于 UTF 16 编码具有只有 16 位，由用 utf-16 代理项对表示 BMP 以外的字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-124">Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16.</span></span> <span data-ttu-id="bfe2e-125">下面的示例演示，U + 1D160，符号音符字符的 utf-32 等价内容是 U + D834 U + DD60。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-125">The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60.</span></span> <span data-ttu-id="bfe2e-126">U + D834 是高代理项;高代理项从 U + D800 到 U + DBFF 的范围。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-126">U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF.</span></span> <span data-ttu-id="bfe2e-127">U + DD60 是低代理项;低代理项从 U + DC00 到 U + DFFF 的范围。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-127">U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.</span></span>  
  
     [!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]
     [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]  
  
<a name="Categories"></a>   
## <a name="characters-and-character-categories"></a><span data-ttu-id="bfe2e-128">字符和字符类别</span><span class="sxs-lookup"><span data-stu-id="bfe2e-128">Characters and character categories</span></span>  
 <span data-ttu-id="bfe2e-129">每个 Unicode 字符或有效的代理项对属于 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-129">Each Unicode character or valid surrogate pair belongs to a Unicode category.</span></span> <span data-ttu-id="bfe2e-130">.NET Framework 中，在 Unicode 类别的成员由表示<xref:System.Globalization.UnicodeCategory>枚举和包括值如<xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>， <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>，和<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>，例如。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-130">In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, and <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, for example.</span></span>  
  
 <span data-ttu-id="bfe2e-131">若要确定一个字符的 Unicode 类别，你可以调用<xref:System.Char.GetUnicodeCategory%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-131">To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method.</span></span> <span data-ttu-id="bfe2e-132">例如，下面的示例调用<xref:System.Char.GetUnicodeCategory%2A>字符串中显示的每个字符的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-132">For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.</span></span>  
  
 [!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]
 [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]  
  
 <span data-ttu-id="bfe2e-133">在内部，为 ASCII 范围 (U + 0000 到 U + 00FF)，以外的字符<xref:System.Char.GetUnicodeCategory%2A>方法取决于 Unicode 类别报告的<xref:System.Globalization.CharUnicodeInfo>类。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-133">Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class.</span></span> <span data-ttu-id="bfe2e-134">从开始[!INCLUDE[net_v462](~/includes/net-v462-md.md)]，Unicode 字符分类基于[Unicode Standard、 8.0.0 版](https://www.unicode.org/versions/Unicode8.0.0/)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-134">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="bfe2e-135">在从.NET Framework 的版本[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]到[!INCLUDE[net_v461](~/includes/net-v461-md.md)]，它们根据分类[Unicode Standard、 版本 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-135">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
<a name="Elements"></a>   
## <a name="characters-and-text-elements"></a><span data-ttu-id="bfe2e-136">字符和文本元素</span><span class="sxs-lookup"><span data-stu-id="bfe2e-136">Characters and text elements</span></span>  
 <span data-ttu-id="bfe2e-137">因为单个字符可表示由多个<xref:System.Char>对象，它并不总是有意义，若要使用单个<xref:System.Char>对象。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-137">Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects.</span></span> <span data-ttu-id="bfe2e-138">例如，下面的示例将转换为 utf-16 编码的代码单位表示爱琴海数字 0 到 9 的 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-138">For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units.</span></span> <span data-ttu-id="bfe2e-139">因为错误地等同<xref:System.Char>对象包含的字符，它不准确地报告生成的字符串有 20 个字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-139">Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.</span></span>  
  
 [!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]
 [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]  
  
 <span data-ttu-id="bfe2e-140">你可以执行以下操作来避免假设，<xref:System.Char>对象表示单个字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-140">You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.</span></span>  
  
-   <span data-ttu-id="bfe2e-141">你可以使用<xref:System.String>中而不是其各个字符来表示和分析语言内容处理整个对象。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-141">You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.</span></span>  
  
-   <span data-ttu-id="bfe2e-142">你可以使用<xref:System.Globalization.StringInfo>类以使用文本元素而不是个人<xref:System.Char>对象。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-142">You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects.</span></span> <span data-ttu-id="bfe2e-143">下面的示例使用<xref:System.Globalization.StringInfo>对象来计算中包含的爱琴的字符串的文本元素的数量数字零通过包含 9 个。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-143">The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine.</span></span> <span data-ttu-id="bfe2e-144">因为它将代理项对单个字符，它正确地报告该字符串包含 10 个字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-144">Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.</span></span>  
  
     [!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]
     [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]  
  
-   <span data-ttu-id="bfe2e-145">如果字符串包含基字符具有一个或多个组合字符，则可以调用<xref:System.String.Normalize%2A?displayProperty=nameWithType>方法将子字符串转换为单个的 UTF 16 编码的代码单元。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-145">If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the substring to a single UTF-16 encoded code unit.</span></span> <span data-ttu-id="bfe2e-146">下面的示例调用<xref:System.String.Normalize%2A?displayProperty=nameWithType>方法将基字符 U + 0061 (拉丁文小写字母 A) 和组合字符 U + 0308 （组合以分音符） 转换为 U + 00E4 （拉丁文小写字母 A 与分音符）。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-146">The following example calls the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).</span></span>  
  
     [!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]
     [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="bfe2e-147">常见操作</span><span class="sxs-lookup"><span data-stu-id="bfe2e-147">Common operations</span></span>  
 <span data-ttu-id="bfe2e-148"><xref:System.Char>结构可提供方法来比较<xref:System.Char>对象，将转换的当前值<xref:System.Char>对象转换为另一种类型的对象，并确定的 Unicode 类别<xref:System.Char>对象：</span><span class="sxs-lookup"><span data-stu-id="bfe2e-148">The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:</span></span>  
  
|<span data-ttu-id="bfe2e-149">任务</span><span class="sxs-lookup"><span data-stu-id="bfe2e-149">To do this</span></span>|<span data-ttu-id="bfe2e-150">使用这些`System.Char`方法</span><span class="sxs-lookup"><span data-stu-id="bfe2e-150">Use these `System.Char` methods</span></span>|  
|----------------|-------------------------------------|  
|<span data-ttu-id="bfe2e-151">比较<xref:System.Char>对象</span><span class="sxs-lookup"><span data-stu-id="bfe2e-151">Compare <xref:System.Char> objects</span></span>|<span data-ttu-id="bfe2e-152"><xref:System.Char.CompareTo%2A> 和 <xref:System.Char.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="bfe2e-152"><xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A></span></span>|  
|<span data-ttu-id="bfe2e-153">码位转换为字符串</span><span class="sxs-lookup"><span data-stu-id="bfe2e-153">Convert a code point to a string</span></span>|<xref:System.Char.ConvertFromUtf32%2A>|  
|<span data-ttu-id="bfe2e-154">将转换<xref:System.Char>对象或代理项对的<xref:System.Char>为码位的对象</span><span class="sxs-lookup"><span data-stu-id="bfe2e-154">Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point</span></span>|<span data-ttu-id="bfe2e-155">单个字符： <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="bfe2e-155">For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span></span><br /><br /> <span data-ttu-id="bfe2e-156">对于代理项对或字符串中的字符： <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="bfe2e-156">For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="bfe2e-157">获取一个字符的 Unicode 类别</span><span class="sxs-lookup"><span data-stu-id="bfe2e-157">Get the Unicode category of a character</span></span>|<xref:System.Char.GetUnicodeCategory%2A>|  
|<span data-ttu-id="bfe2e-158">确定字符是否为特定 Unicode 类别例如数字、 字母、 标点中，控制字符，依次类推</span><span class="sxs-lookup"><span data-stu-id="bfe2e-158">Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on</span></span>|<span data-ttu-id="bfe2e-159"><xref:System.Char.IsControl%2A><xref:System.Char.IsDigit%2A>， <xref:System.Char.IsHighSurrogate%2A>， <xref:System.Char.IsLetter%2A>， <xref:System.Char.IsLetterOrDigit%2A>， <xref:System.Char.IsLower%2A>， <xref:System.Char.IsLowSurrogate%2A>， <xref:System.Char.IsNumber%2A>， <xref:System.Char.IsPunctuation%2A>， <xref:System.Char.IsSeparator%2A>， <xref:System.Char.IsSurrogate%2A>， <xref:System.Char.IsSurrogatePair%2A>， <xref:System.Char.IsSymbol%2A>， <xref:System.Char.IsUpper%2A>，和 <xref:System.Char.IsWhiteSpace%2A></span><span class="sxs-lookup"><span data-stu-id="bfe2e-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A></span></span>|  
|<span data-ttu-id="bfe2e-160">将转换<xref:System.Char>表示的数字为数值类型的对象</span><span class="sxs-lookup"><span data-stu-id="bfe2e-160">Convert a <xref:System.Char> object that represents a number to a numeric value type</span></span>|<xref:System.Char.GetNumericValue%2A>|  
|<span data-ttu-id="bfe2e-161">转换到字符串中的字符<xref:System.Char>对象</span><span class="sxs-lookup"><span data-stu-id="bfe2e-161">Convert a character in a string into a <xref:System.Char> object</span></span>|<span data-ttu-id="bfe2e-162"><xref:System.Char.Parse%2A> 和 <xref:System.Char.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="bfe2e-162"><xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A></span></span>|  
|<span data-ttu-id="bfe2e-163">将转换<xref:System.Char>对象传递给<xref:System.String>对象</span><span class="sxs-lookup"><span data-stu-id="bfe2e-163">Convert a <xref:System.Char> object to a <xref:System.String> object</span></span>|<xref:System.Char.ToString%2A>|  
|<span data-ttu-id="bfe2e-164">更改的大小写<xref:System.Char>对象</span><span class="sxs-lookup"><span data-stu-id="bfe2e-164">Change the case of a <xref:System.Char> object</span></span>|<span data-ttu-id="bfe2e-165"><xref:System.Char.ToLower%2A>、<xref:System.Char.ToLowerInvariant%2A>、<xref:System.Char.ToUpper%2A> 和 <xref:System.Char.ToUpperInvariant%2A></span><span class="sxs-lookup"><span data-stu-id="bfe2e-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A></span></span>|  
  
<a name="Interop"></a>   
## <a name="char-values-and-interop"></a><span data-ttu-id="bfe2e-166">Char 值和互操作</span><span class="sxs-lookup"><span data-stu-id="bfe2e-166">Char values and interop</span></span>  
<span data-ttu-id="bfe2e-167">当托管<xref:System.Char>类型，表示为一个 Unicode utf-16 编码代码单元，传递到非托管代码时，互操作封送处理程序将默认设置为 ANSI 字符转换。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-167">When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default.</span></span> <span data-ttu-id="bfe2e-168">你可以将应用<xref:System.Runtime.InteropServices.DllImportAttribute>属性设置为平台调用声明和<xref:System.Runtime.InteropServices.StructLayoutAttribute>属性设为 COM 互操作声明，以控制哪些字符集封送<xref:System.Char>类型使用。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-168">You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-169">下面的代码示例演示部分中的方法<xref:System.Char>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-169">The following code example demonstrates some of the methods in <xref:System.Char>.</span></span>  
  
 [!code-cpp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char [Type Level]/CPP/charstructure.cpp#23)]
 [!code-csharp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char [Type Level]/CS/charstructure.cs#23)]
 [!code-vb[System.Char &#91;Type Level&#93;#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char [Type Level]/VB/charstructure.vb#23)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="bfe2e-170">此类型的所有成员都是线程安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bfe2e-170">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="bfe2e-171">实际上，看起来要修改实例状态的成员返回使用新值初始化的新实例。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bfe2e-171">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="bfe2e-172">作为与任何其他类型，读取和写入到共享的变量，其中包含此类型的实例必须受使用锁来确保的线程安全性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bfe2e-172">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(char value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : char -&gt; int&#xA;override this.CompareTo : char -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bfe2e-174">A <see cref="T:System.Char" /> object to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-174">A <see cref="T:System.Char" /> object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="bfe2e-177">
            <list type="table">
              <listheader>
                <term> Return Value  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description> This instance precedes <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description> This instance follows <paramref name="value" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-177">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-178">此方法实现<xref:System.IComparable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.Char.CompareTo%2A?displayProperty=nameWithType>方法因为它不具有要转换`value`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-178">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="bfe2e-179">执行此方法的比较基于此实例的编码值和`value`，不是它们字典顺序的特征。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-179">The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics.</span></span>  
  
 <span data-ttu-id="bfe2e-180">如果<xref:System.Char.CompareTo%2A>方法参数类型具有较少的位 （为较窄） 实例类型，某些编程语言执行隐式的扩大转换，以便将参数的值转换为具有更多位数的值。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-180">If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="bfe2e-181">例如，假设实例类型是<xref:System.Int32>和参数类型是<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-181">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="bfe2e-182">Microsoft C# 编译器生成的指令来表示形式的参数值<xref:System.Int32>对象，然后生成<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>比较的值的方法<xref:System.Int32>实例和<xref:System.Int32>参数表示形式。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-182">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="bfe2e-183">通常情况下，数值类型执行隐式的扩大转换。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-183">Typically, implicit widening conversions are performed on numeric types.</span></span> <span data-ttu-id="bfe2e-184">咨询你的编程语言的文档，以确定其编译器是否执行扩大转换。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-184">Consult your programming language's documentation to determine if its compiler performs widening conversions.</span></span> <span data-ttu-id="bfe2e-185">如果实例和参数的类型不匹配，并且没有合适的转换不可用，编译器将生成指令来将参数装箱并调用<xref:System.Char.CompareTo%2A>采用重载<xref:System.Object>参数。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-185">If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-186">下面的代码示例演示泛型和非泛型版本的`CompareTo`多个值和引用类型的方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-186">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bfe2e-187">An object to compare this instance to, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-187">An object to compare this instance to, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-188">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-188">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-189">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-189">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="bfe2e-190">
            <list type="table">
              <listheader>
                <term> Return Value  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description> This instance precedes <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description> This instance follows <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-190">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-191"><xref:System.Char.CompareTo%2A>方法实现<xref:System.IComparable>接口。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-191">The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="bfe2e-192">`value`参数必须是`null`或实例<xref:System.Char>; 否则为将引发异常。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-192">The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="bfe2e-193">执行此方法的比较基于此实例的编码值和`value`，不一定是它们的字典特征。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-193">The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics.</span></span> <span data-ttu-id="bfe2e-194">任何实例<xref:System.Char>，无论其值被视为大于`null`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-194">Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-195">下面的代码示例演示<xref:System.Char.CompareTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-195">The following code example demonstrates <xref:System.Char.CompareTo%2A>.</span></span>  
  
 [!code-cpp[System.Char.CompareTo#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.CompareTo/CPP/compareto.cpp#19)]
 [!code-csharp[System.Char.CompareTo#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.CompareTo/CS/compareto.cs#19)]
 [!code-vb[System.Char.CompareTo#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.CompareTo/VB/compareto.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bfe2e-196">
            <paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-196">
              <paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromUtf32">
      <MemberSignature Language="C#" Value="public static string ConvertFromUtf32 (int utf32);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConvertFromUtf32(int32 utf32) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertFromUtf32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertFromUtf32 (utf32 As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConvertFromUtf32(int utf32);" />
      <MemberSignature Language="F#" Value="static member ConvertFromUtf32 : int -&gt; string" Usage="System.char.ConvertFromUtf32 utf32" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf32" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf32">
          <span data-ttu-id="bfe2e-197">A 21-bit Unicode code point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-197">A 21-bit Unicode code point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-198">Converts the specified Unicode code point into a UTF-16 encoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-198">Converts the specified Unicode code point into a UTF-16 encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-199">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-199">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-200">此方法用于对字符串进行测试方法如之前将 21 位 Unicode 码位转换为 utf-16 编码字符串<xref:System.Char.IsLowSurrogate%28System.Char%29>和<xref:System.Char.IsHighSurrogate%28System.Char%29>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-200">Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span></span>  
  
 <span data-ttu-id="bfe2e-201">有效的代码点外部基本多语言平面 (BMP) 始终生成有效的代理项对。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-201">A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair.</span></span> <span data-ttu-id="bfe2e-202">但是，BMP 内的有效的代码点可能不产生根据 Unicode 标准有效的结果，因为在转换中不使用任何语言的处理。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-202">However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion.</span></span> <span data-ttu-id="bfe2e-203">因此，使用<xref:System.Text.UTF32Encoding?displayProperty=nameWithType>类转换 utf-32 数据大容量到大容量 utf-16 数据。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-203">For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class to convert bulk UTF-32 data into bulk UTF-16 data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-204">下面的代码示例演示<xref:System.Char.ConvertToUtf32%2A>和<xref:System.Char.ConvertFromUtf32%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-204">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-205">
            <paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-205">
              <paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToUtf32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-206">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-206">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (highSurrogate As Char, lowSurrogate As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : char * char -&gt; int" Usage="System.char.ConvertToUtf32 (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="bfe2e-207">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-207">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="bfe2e-208">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-208">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-209">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-209">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-210">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-210">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-211">使用此方法将代理项对转换为 21 位 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-211">Use this method to convert a surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="bfe2e-212">若要将 utf-16 数据转换为 utf-32 数据，使用<xref:System.Text.UTF32Encoding?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-212">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="bfe2e-213">通常，UTF 16 编码为 16 位代码单位表示单个 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-213">Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit.</span></span> <span data-ttu-id="bfe2e-214">但是，它还支持允许单个抽象字符表示为两个 16 位代码单元的代理项对。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-214">However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units.</span></span> <span data-ttu-id="bfe2e-215">这两个<xref:System.Char>对象必须具有代码单元，该范围从 U + D800 到 U + DBFF 的第一个 （高） 的代理项并从 U + DC00 到 U + DFFF 的第二个 （低） 的代理项。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-215">These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate.</span></span> <span data-ttu-id="bfe2e-216">代理项对仅受 utf-16 编码。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-216">Surrogate pairs are supported only by UTF-16 encoding.</span></span> <span data-ttu-id="bfe2e-217">此方法允许 utf-16 代理项对表示要转换为使用 utf-32 编码的字符的字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-217">This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-218">下面的代码示例演示<xref:System.Char.ConvertToUtf32%2A>和<xref:System.Char.ConvertFromUtf32%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-218">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-219">
            <paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-219">
              <paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : string * int -&gt; int" Usage="System.char.ConvertToUtf32 (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-220">A string that contains a character or surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-220">A string that contains a character or surrogate pair.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-221">The index position of the character or surrogate pair in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-221">The index position of the character or surrogate pair in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-222">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-222">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-223">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-223">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-224">使用此方法将一个字符或代理项对转换为 21 位 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-224">Use this method to convert a character or surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="bfe2e-225">若要将 utf-16 数据转换为 utf-32 数据，使用<xref:System.Text.UTF32Encoding?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-225">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-226">下面的代码示例演示<xref:System.Char.ConvertToUtf32%2A>和<xref:System.Char.ConvertFromUtf32%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-226">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-227">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-227">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-228">
            <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-228">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bfe2e-229">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-229">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-230">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-230">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (char obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(char obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(char obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : char -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="bfe2e-231">An object to compare to this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-231">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-232">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-232">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-233">
            <see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-233">
              <see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-234">此方法实现<xref:System.IEquatable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType>因为它不需要取消装箱`obj`参数。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-234">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> because it does not need to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="bfe2e-235">An object to compare with this instance or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-235">An object to compare with this instance or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-236">Returns a value that indicates whether this instance is equal to a specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-236">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-237">
            <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-237">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-238">执行此方法的比较基于此实例的编码值和`obj`，不一定是它们的字典特征。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-238">The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-239">下面的代码示例演示<xref:System.Char.Equals%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-239">The following code example demonstrates <xref:System.Char.Equals%2A>.</span></span>  
  
 [!code-cpp[System.Char.Equals#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Equals/CPP/equals.cpp#20)]
 [!code-csharp[System.Char.Equals#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Equals/CS/equals.cs#20)]
 [!code-vb[System.Char.Equals#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Equals/VB/equals.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="char.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-240">Returns the hash code for this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-240">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-241">A 32-bit signed integer hash code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-241">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-242">Converts a specified numeric Unicode character to a double-precision floating-point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-242">Converts a specified numeric Unicode character to a double-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (c As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char c);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; double" Usage="System.char.GetNumericValue c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-243">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-243">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-244">Converts the specified numeric Unicode character to a double-precision floating point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-244">Converts the specified numeric Unicode character to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-245">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-245">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-246">`c`参数必须是<xref:System.Char>表示形式的数字值。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-246">The `c` parameter must be the <xref:System.Char> representation of a numeric value.</span></span> <span data-ttu-id="bfe2e-247">例如，如果`c`为"5"，则返回值为 5。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-247">For example, if `c` is "5", the return value is 5.</span></span> <span data-ttu-id="bfe2e-248">但是，如果`c`是"z"的返回值为-1.0。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-248">However, if `c` is "z", the return value is -1.0.</span></span>  
  
 <span data-ttu-id="bfe2e-249">字符具有关联的数字值，当且仅当它是以下一项的成员时，才<xref:System.Globalization.UnicodeCategory>类别： `DecimalDigitNumber`， `LetterNumber`，或`OtherNumber`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-249">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="bfe2e-250"><xref:System.Char.GetNumericValue%2A>方法假设`c`对应于单个语言字符，并且检查是否可以将该字符转换为十进制数字类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-250">The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="bfe2e-251">但是，由两个表示 Unicode 标准中的一些数字<xref:System.Char>形成一个代理项对的对象。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-251">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="bfe2e-252">例如，数字系统爱琴包含码位 U + 10107 至 U + 10133。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-252">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="bfe2e-253">下面的示例使用<xref:System.Char.ConvertFromUtf32%2A>方法可实例化一个字符串，表示爱琴海数字一。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-253">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="bfe2e-254">如示例所示，输出<xref:System.Char.GetNumericValue%28System.Char%29>方法返回-1，如果它传递一个高代理项或低代理项的此字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-254">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]
 [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-255">下面的示例演示<xref:System.Char.GetNumericValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-255">The following example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : string * int -&gt; double" Usage="System.char.GetNumericValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-256">A <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-256">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-257">The character position in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-257">The character position in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-258">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-258">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-259">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-259">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-260">`s`参数必须是数字值的字符串表示。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-260">The `s` parameter must be the string representation of a numeric value.</span></span> <span data-ttu-id="bfe2e-261">例如，如果位置处的字符`index`中`s`为"5"，则返回值为 5。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-261">For example, if the character at position `index` in `s` is "5", the return value is 5.</span></span> <span data-ttu-id="bfe2e-262">但是，如果位置处的字符`index`中`s`是"z"的返回值为-1。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-262">However, if the character at position `index` in `s` is "z", the return value is -1.</span></span>  
  
 <span data-ttu-id="bfe2e-263">从零开始的索引字符串中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-263">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bfe2e-264">字符具有关联的数字值，当且仅当它是以下一项的成员时，才<xref:System.Globalization.UnicodeCategory>类别： `DecimalDigitNumber`， `LetterNumber`，或`OtherNumber`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-264">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="bfe2e-265">如果<xref:System.Char>对象位于位置`index`有效的代理项对的第一个字符<xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29>方法确定是否代理项对窗体的一个数字。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-265">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="bfe2e-266">例如，数字系统爱琴包含码位 U + 10107 至 U + 10133。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-266">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="bfe2e-267">下面的示例使用<xref:System.Char.ConvertFromUtf32%2A>方法可实例化一个字符串，表示每个爱琴海数目。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-267">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="bfe2e-268">如示例所示，输出<xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29>方法返回正确的数字值，如果它传递爱琴海的数目的高代理项。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-268">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="bfe2e-269">但是，如果它传递的低代理项，它将仅在隔离的低代理项，并返回-1。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-269">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]
 [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-270">下面的代码示例演示<xref:System.Char.GetNumericValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-270">The following code example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-271">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-271">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-272">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-272">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="char.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-273">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-273">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-274">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-274">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-275">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-275">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (c As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char c);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : char -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-276">The Unicode character to categorize.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-276">The Unicode character to categorize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-277">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-277">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-278">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-278">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-279"><xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法不始终返回相同<xref:System.Globalization.UnicodeCategory>值作为<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>方法作为参数传递特定的字符时。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-279">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="bfe2e-280"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>方法用于反映 Unicode 标准的当前版本。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-280">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="bfe2e-281">与此相反，尽管<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法通常反映 Unicode 标准的当前版本，则可能会返回在早期版本的标准，基于字符的类别或它可能与当前标准顺序返回不同的类别若要保留向后兼容性。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-281">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="bfe2e-282">因此，我们建议你使用<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>方法而不是<xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-282">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bfe2e-283">从开始[!INCLUDE[net_v462](~/includes/net-v462-md.md)]，Unicode 字符分类基于[Unix 标准、 8.0.0 版](https://www.unicode.org/versions/Unicode8.0.0/)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-283">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="bfe2e-284">在从.NET Framework 的版本[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]到[!INCLUDE[net_v461](~/includes/net-v461-md.md)]，它们根据分类[Unix 标准、 版本 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-284">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-285">下面的代码示例演示<xref:System.Char.GetUnicodeCategory%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-285">The following code example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : string * int -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-286">A <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-286">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-287">The character position in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-287">The character position in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-288">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-288">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-289">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-289">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-290">从零开始的索引字符串中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-290">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bfe2e-291"><xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法不始终返回相同<xref:System.Globalization.UnicodeCategory>值作为<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>方法作为参数传递特定的字符时。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-291">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="bfe2e-292"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>方法用于反映 Unicode 标准的当前版本。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-292">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="bfe2e-293">与此相反，尽管<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法通常反映 Unicode 标准的当前版本，则可能会返回在早期版本的标准，基于字符的类别或它可能与当前标准顺序返回不同的类别若要保留向后兼容性。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-293">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="bfe2e-294">因此，我们建议你使用<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>方法而不是<xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-294">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bfe2e-295">从开始[!INCLUDE[net_v462](~/includes/net-v462-md.md)]，Unicode 字符分类基于[Unix 标准、 8.0.0 版](https://www.unicode.org/versions/Unicode8.0.0/)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-295">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="bfe2e-296">在从.NET Framework 的版本[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]到[!INCLUDE[net_v461](~/includes/net-v461-md.md)]，它们根据分类[Unix 标准、 版本 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-296">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-297">下面的示例演示<xref:System.Char.GetUnicodeCategory%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-297">The following example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-298">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-298">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-299">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-299">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsControl">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-300">Indicates whether a specified Unicode character is categorized as a control character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-300">Indicates whether a specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-301">控制字符要设置格式和其他非打印字符，如 ACK、 BEL、 CR、 FF、 LF，和 VT.</span><span class="sxs-lookup"><span data-stu-id="bfe2e-301">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="bfe2e-302">Unicode 标准为分配码位，可从 \U0000 \U001F，\U007F，到和从 \U0080 到 \U009F 到控制字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-302">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="bfe2e-303">根据 Unicode 标准中，这些值是被解释为控制字符，除非其使用否则定义应用程序。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-303">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="bfe2e-304">有效的控制字符是的成员<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-304">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(char c);" />
      <MemberSignature Language="F#" Value="static member IsControl : char -&gt; bool" Usage="System.char.IsControl c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-305">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-305">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-306">Indicates whether the specified Unicode character is categorized as a control character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-306">Indicates whether the specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-307">
            <see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-307">
              <see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-308">控制字符要设置格式和其他非打印字符，如 ACK、 BEL、 CR、 FF、 LF，和 VT.</span><span class="sxs-lookup"><span data-stu-id="bfe2e-308">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="bfe2e-309">T 的 Unicode 标准分配码位，可从 \U0000 到 \U001F，\U007F，和从 \U0080 到 \U009F 到控制字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-309">T The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="bfe2e-310">根据 Unicode 标准中，这些值是被解释为控制字符，除非其使用否则定义应用程序。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-310">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="bfe2e-311">有效的控制字符是的成员<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-311">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-312">下面的示例列出每个控件字符的 Unicode 码的位。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-312">The following example lists the Unicode code point of each of the control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol1.cpp#1)]
 [!code-csharp[System.Char.IsControl#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl1.cs#1)]
 [!code-vb[System.Char.IsControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsControl : string * int -&gt; bool" Usage="System.char.IsControl (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-313">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-313">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-314">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-314">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-315">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-315">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-316">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-316">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-317">从零开始的索引字符串中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-317">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bfe2e-318">控制字符要设置格式和其他非打印字符，如 ACK、 BEL、 CR、 FF、 LF，和 VT.</span><span class="sxs-lookup"><span data-stu-id="bfe2e-318">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="bfe2e-319">Unicode 标准为分配码位，可从 \U0000 \U001F，\U007F，到和从 \U0080 到 \U009F 到控制字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-319">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="bfe2e-320">根据 Unicode 标准中，这些值是被解释为控制字符，除非其使用否则定义应用程序。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-320">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="bfe2e-321">有效的控制字符是的成员<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-321">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-322">下面的示例枚举字符串中的字符，并确定是否需要针对任何控制字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-322">The following example enumerates the characters in a string and determines whether any are control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol2.cpp#2)]
 [!code-csharp[System.Char.IsControl#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl2.cs#2)]
 [!code-vb[System.Char.IsControl#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-323">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-323">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-324">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-324">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-325">Indicates whether a Unicode character is categorized as a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-325">Indicates whether a Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-326">有效的数字是的成员<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-326">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsDigit : char -&gt; bool" Usage="System.char.IsDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-327">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-327">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-328">Indicates whether the specified Unicode character is categorized as a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-328">Indicates whether the specified Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-329">
            <see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-329">
              <see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-330">此方法可确定是否<xref:System.Char>是基数 10 位数字。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-330">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="bfe2e-331">这点与<xref:System.Char.IsNumber%2A>，它确定是否`Char`的任何数值的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-331">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category.</span></span> <span data-ttu-id="bfe2e-332">数字包含诸如分数 （竖式）、 下标、 上标、 罗马数字、 货币分子、 循环的数和脚本特有的数字字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-332">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="bfe2e-333">有效的数字是的成员<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-333">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-334">下面的代码示例演示<xref:System.Char.IsDigit%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-334">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsDigit : string * int -&gt; bool" Usage="System.char.IsDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-335">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-335">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-336">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-336">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-337">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-337">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-338">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-338">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-339">此方法可确定是否<xref:System.Char>是基数 10 位数字。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-339">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="bfe2e-340">这点与<xref:System.Char.IsNumber%2A>，它确定是否<xref:System.Char>的任何数值的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-340">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="bfe2e-341">数字包含诸如分数 （竖式）、 下标、 上标、 罗马数字、 货币分子、 循环的数和脚本特有的数字字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-341">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="bfe2e-342">从零开始的索引字符串中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-342">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bfe2e-343">有效的数字是的成员<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-343">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-344">下面的代码示例演示<xref:System.Char.IsDigit%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-344">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-345">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-345">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-346">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-346">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsHighSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-347">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-347">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : char -&gt; bool" Usage="System.char.IsHighSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-348">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-348">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-349">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-349">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-350">
            <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-350">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-351">除了表示使用 16 位代码点的单个字符，UTF 16 编码允许抽象个字符来表示使用两个 16 位码位，这被称为一个代理项对。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-351">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="bfe2e-352">此对的第一个元素是高代理项。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-352">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="bfe2e-353">其码位范围从 U + D800 到 U + DBFF。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-353">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="bfe2e-354">单独的代理项具有自己的; 没有解释它是有意义，仅当使用作为代理项对的一部分。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-354">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-355">下面的代码示例演示<xref:System.Char.IsHighSurrogate%2A>， <xref:System.Char.IsLowSurrogate%2A>，和<xref:System.Char.IsSurrogatePair%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-355">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : string * int -&gt; bool" Usage="System.char.IsHighSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-356">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-356">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-357">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-357">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-358">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-358">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-359">
            <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-359">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-360">`index`参数是从零开始。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-360">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="bfe2e-361">除了表示使用 16 位代码点的单个字符，UTF 16 编码允许抽象个字符来表示使用两个 16 位码位，这被称为一个代理项对。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-361">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="bfe2e-362">此对的第一个元素是高代理项。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-362">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="bfe2e-363">其码位范围从 U + D800 到 U + DBFF。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-363">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="bfe2e-364">单独的代理项具有自己的; 没有解释它是有意义，仅当使用作为代理项对的一部分。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-364">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-365">下面的代码示例演示<xref:System.Char.IsHighSurrogate%2A>， <xref:System.Char.IsLowSurrogate%2A>，和<xref:System.Char.IsSurrogatePair%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-365">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-366">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-366">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-367">
            <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-367">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-368">Indicates whether a Unicode character is categorized as a Unicode letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-368">Indicates whether a Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-369">此方法可确定是否<xref:System.Char>属于 Unicode 字母任何类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-369">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="bfe2e-370">Unicode 字母如下所示：</span><span class="sxs-lookup"><span data-stu-id="bfe2e-370">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="bfe2e-371">小写字母，如 U + 0041 通过 U + 005A (LATIN CAPITAL LETTER A) (LATIN CAPITAL LETTER Z)，或 U + 0400 通过 U + 042F （西里尔文大写字母 YA） （西里尔文 CAPITAL LETTER IE 与抑音符）。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-371">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="bfe2e-372">这些字符是的成员<xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-372">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bfe2e-373">小写字母，如 U + 0061 通过 U + 007A (拉丁文小写字母 A) (拉丁文小写字母 Z)，或 U + 03AC （希腊语小写字母字母与音调符号） 通过 U + 03CE （希腊语小写字母 OMEGA 与音调符号）。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-373">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="bfe2e-374">这些字符是的成员<xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-374">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bfe2e-375">标题大小写的字母中，如 U + 01 C 5 （LATIN CAPITAL LETTER D 使用小写字母 Z 与抑扬符） 或 U + 1FFC (希腊语 CAPITAL LETTER OMEGA 与 PROSGEGRAMMENI)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-375">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="bfe2e-376">这些字符是的成员<xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-376">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bfe2e-377">修饰符，如 U + 02B0 (修饰符字母小型 H) 到 U + 02C 1 （修饰符字母 REVERSED 喉塞音停止），或 U + 1D2C (修饰符字母大写 A) 通过 U + 1D 61 （修饰符字母小卡）。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-377">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="bfe2e-378">这些字符是的成员<xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-378">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bfe2e-379">其他字母，如 U + 05 D 0 (希伯来语 LETTER ALEF) 到 U + 05EA (希伯来语字母 TAV)，U + 0621 通过 U + 063A (字母 ARABIC HAMZA) (ARABIC 字母 GHAIN)，或 U + 4E00 (\<CJK 象形文字，首先 >) 通过 U + 9 FC 3 (\<CJK 象形文字、 上一次>)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-379">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="bfe2e-380">这些字符是的成员<xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-380">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetter : char -&gt; bool" Usage="System.char.IsLetter c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-381">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-381">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-382">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-382">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-383">
            <see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-383">
              <see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-384">此方法可确定是否<xref:System.Char>属于 Unicode 字母任何类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-384">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="bfe2e-385">Unicode 字母如下所示：</span><span class="sxs-lookup"><span data-stu-id="bfe2e-385">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="bfe2e-386">小写字母，如 U + 0041 通过 U + 005A (LATIN CAPITAL LETTER A) (LATIN CAPITAL LETTER Z)，或 U + 0400 通过 U + 042F （西里尔文大写字母 YA） （西里尔文 CAPITAL LETTER IE 与抑音符）。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-386">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="bfe2e-387">这些字符是的成员<xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-387">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bfe2e-388">小写字母，如 U + 0061 通过 U + 007A (拉丁文小写字母 A) (拉丁文小写字母 Z)，或 U + 03AC （希腊语小写字母字母与音调符号） 通过 U + 03CE （希腊语小写字母 OMEGA 与音调符号）。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-388">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="bfe2e-389">这些字符是的成员<xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-389">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bfe2e-390">标题大小写的字母中，如 U + 01 C 5 （LATIN CAPITAL LETTER D 使用小写字母 Z 与抑扬符） 或 U + 1FFC (希腊语 CAPITAL LETTER OMEGA 与 PROSGEGRAMMENI)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-390">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="bfe2e-391">这些字符是的成员<xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-391">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bfe2e-392">修饰符，如 U + 02B0 (修饰符字母小型 H) 到 U + 02C 1 （修饰符字母 REVERSED 喉塞音停止），或 U + 1D2C (修饰符字母大写 A) 通过 U + 1D 61 （修饰符字母小卡）。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-392">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="bfe2e-393">这些字符是的成员<xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-393">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bfe2e-394">其他字母，如 U + 05 D 0 (希伯来语 LETTER ALEF) 到 U + 05EA (希伯来语字母 TAV)，U + 0621 通过 U + 063A (字母 ARABIC HAMZA) (ARABIC 字母 GHAIN)，或 U + 4E00 (\<CJK 象形文字，首先 >) 通过 U + 9 FC 3 (\<CJK 象形文字、 上一次>)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-394">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="bfe2e-395">这些字符是的成员<xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-395">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-396">下面的代码示例演示<xref:System.Char.IsLetter%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-396">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetter : string * int -&gt; bool" Usage="System.char.IsLetter (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-397">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-397">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-398">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-398">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-399">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-399">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-400">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-400">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-401">从零开始的索引字符串中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-401">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bfe2e-402">此方法确定字符串中指定的索引位置处的字符是否属于 Unicode 字母任何类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-402">This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter.</span></span> <span data-ttu-id="bfe2e-403">Unicode 字母如下所示：</span><span class="sxs-lookup"><span data-stu-id="bfe2e-403">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="bfe2e-404">小写字母，如 U + 0041 通过 U + 005A (LATIN CAPITAL LETTER A) (LATIN CAPITAL LETTER Z)，或 U + 0400 通过 U + 042F （西里尔文大写字母 YA） （西里尔文 CAPITAL LETTER IE 与抑音符）。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-404">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="bfe2e-405">这些字符是的成员<xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-405">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bfe2e-406">小写字母，如 U + 0061 通过 U + 007A (拉丁文小写字母 A) (拉丁文小写字母 Z)，或 U + 03AC （希腊语小写字母字母与音调符号） 通过 U + 03CE （希腊语小写字母 OMEGA 与音调符号）。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-406">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="bfe2e-407">这些字符是的成员<xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-407">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bfe2e-408">标题大小写的字母中，如 U + 01 C 5 （LATIN CAPITAL LETTER D 使用小写字母 Z 与抑扬符） 或 U + 1FFC (希腊语 CAPITAL LETTER OMEGA 与 PROSGEGRAMMENI)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-408">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="bfe2e-409">这些字符是的成员<xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-409">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bfe2e-410">修饰符，如 U + 02B0 (修饰符字母小型 H) 到 U + 02C 1 （修饰符字母 REVERSED 喉塞音停止），或 U + 1D2C (修饰符字母大写 A) 通过 U + 1D 61 （修饰符字母小卡）。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-410">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="bfe2e-411">这些字符是的成员<xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-411">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="bfe2e-412">其他字母，如 U + 05 D 0 (希伯来语 LETTER ALEF) 到 U + 05EA (希伯来语字母 TAV)，U + 0621 通过 U + 063A (字母 ARABIC HAMZA) (ARABIC 字母 GHAIN)，或 U + 4E00 (\<CJK 象形文字，首先 >) 通过 U + 9 FC 3 (\<CJK 象形文字、 上一次>)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-412">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="bfe2e-413">这些字符是的成员<xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-413">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-414">下面的代码示例演示<xref:System.Char.IsLetter%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-414">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-415">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-415">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-416">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-416">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetterOrDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-417">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-417">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-418">有效的字母和十进制数字是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`， `LowercaseLetter`， `TitlecaseLetter`， `ModifierLetter`， `OtherLetter`，或`DecimalDigitNumber`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-418">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : char -&gt; bool" Usage="System.char.IsLetterOrDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-419">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-419">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-420">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-420">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-421">
            <see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-421">
              <see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-422">有效的字母和十进制数字是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`， `LowercaseLetter`， `TitlecaseLetter`， `ModifierLetter`， `OtherLetter`，或`DecimalDigitNumber`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-422">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-423">下面的代码示例演示<xref:System.Char.IsLetterOrDigit%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-423">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : string * int -&gt; bool" Usage="System.char.IsLetterOrDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-424">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-424">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-425">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-425">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-426">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-426">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-427">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-427">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-428">从零开始的索引字符串中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-428">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bfe2e-429">有效的字母和十进制数字是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`， `LowercaseLetter`， `TitlecaseLetter`， `ModifierLetter`， `OtherLetter`，或`DecimalDigitNumber`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-429">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-430">下面的代码示例演示<xref:System.Char.IsLetterOrDigit%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-430">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-431">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-431">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-432">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-432">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-433">Indicates whether a Unicode character is categorized as a lowercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-433">Indicates whether a Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(char c);" />
      <MemberSignature Language="F#" Value="static member IsLower : char -&gt; bool" Usage="System.char.IsLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-434">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-434">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-435">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-435">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-436">
            <see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-436">
              <see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-437">有效的小写字母是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-437">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-438">下面的代码示例演示<xref:System.Char.IsLower%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-438">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLower : string * int -&gt; bool" Usage="System.char.IsLower (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-439">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-439">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-440">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-440">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-441">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-441">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-442">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-442">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-443">从零开始的索引字符串中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-443">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bfe2e-444">有效的小写字母是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-444">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-445">下面的代码示例演示<xref:System.Char.IsLower%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-445">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-446">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-446">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-447">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-447">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLowSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-448">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-448">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : char -&gt; bool" Usage="System.char.IsLowSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-449">The character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-449">The character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-450">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-450">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-451">
            <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-451">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-452">除了表示使用 16 位代码点的单个字符，UTF 16 编码允许抽象个字符来表示使用两个 16 位码位，这被称为一个代理项对。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-452">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="bfe2e-453">此对中的第二个元素是低代理项。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-453">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="bfe2e-454">其码位范围从 U + DC00 到 U + DFFF。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-454">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="bfe2e-455">单独的代理项具有自己的; 没有解释它是有意义，仅当使用作为代理项对的一部分。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-455">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-456">下面的代码示例演示<xref:System.Char.IsHighSurrogate%2A>， <xref:System.Char.IsLowSurrogate%2A>，和<xref:System.Char.IsSurrogatePair%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-456">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : string * int -&gt; bool" Usage="System.char.IsLowSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-457">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-457">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-458">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-458">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-459">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-459">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-460">
            <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-460">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-461">`index`参数是从零开始。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-461">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="bfe2e-462">除了表示使用 16 位代码点的单个字符，UTF 16 编码允许抽象个字符来表示使用两个 16 位码位，这被称为一个代理项对。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-462">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="bfe2e-463">此对中的第二个元素是低代理项。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-463">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="bfe2e-464">其码位范围从 U + DC00 到 U + DFFF。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-464">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="bfe2e-465">单独的代理项具有自己的; 没有解释它是有意义，仅当使用作为代理项对的一部分。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-465">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-466">下面的代码示例演示<xref:System.Char.IsHighSurrogate%2A>， <xref:System.Char.IsLowSurrogate%2A>，和<xref:System.Char.IsSurrogatePair%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-466">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-467">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-467">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-468">
            <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-468">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNumber">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-469">Indicates whether a Unicode character is categorized as a number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-469">Indicates whether a Unicode character is categorized as a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(char c);" />
      <MemberSignature Language="F#" Value="static member IsNumber : char -&gt; bool" Usage="System.char.IsNumber c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-470">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-470">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-471">Indicates whether the specified Unicode character is categorized as a number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-471">Indicates whether the specified Unicode character is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-472">
            <see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-472">
              <see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-473">此方法可确定是否<xref:System.Char>的任何数值的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-473">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="bfe2e-474">除了包括数字，数字包含字符、 分数 （竖式）、 下标、 上标、 罗马数字、 货币分子和循环数的数字。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-474">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="bfe2e-475">此方法将与进行比较<xref:System.Char.IsDigit%2A>方法，这可确定是否<xref:System.Char>是基数 10 位数字。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-475">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="bfe2e-476"><xref:System.Char.IsNumber%28System.Char%29>方法不应以确定是否一个字符串包含数字字符 （例如，通过调用方法来对字符串中每个字符）。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-476">The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="bfe2e-477">若要确定字符串是否包含数字字符，调用的重载之一`TryParse`方法 (如<xref:System.Int32.TryParse%2A?displayProperty=nameWithType>或<xref:System.Double.TryParse%2A?displayProperty=nameWithType>的整型或浮点型类型。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-477">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="bfe2e-478">有效的数字是的成员<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>， <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>，或<xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-478">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="bfe2e-479"><xref:System.Char.IsNumber%28System.Char%29>方法假设`c`对应于单个语言字符并检查是否该字符表示的数字。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-479">The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number.</span></span> <span data-ttu-id="bfe2e-480">但是，由两个表示 Unicode 标准中的一些数字<xref:System.Char>形成一个代理项对的对象。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-480">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="bfe2e-481">例如，数字系统爱琴包含码位 U + 10107 至 U + 10133。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-481">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="bfe2e-482">下面的示例使用<xref:System.Char.ConvertFromUtf32%2A>方法可实例化一个字符串，表示爱琴海数字一。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-482">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="bfe2e-483">如示例所示，输出<xref:System.Char.IsNumber%28System.Char%29>方法返回`false`如果它将传递一个高代理项或低代理项的此字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-483">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]
 [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-484">下面的示例演示<xref:System.Char.IsNumber%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-484">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsNumber : string * int -&gt; bool" Usage="System.char.IsNumber (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-485">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-485">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-486">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-486">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-487">Indicates whether the character at the specified position in a specified string is categorized as a number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-487">Indicates whether the character at the specified position in a specified string is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-488">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-488">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-489">此方法可确定是否<xref:System.Char>的任何数值的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-489">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="bfe2e-490">除了包括数字，数字包含字符、 分数 （竖式）、 下标、 上标、 罗马数字、 货币分子和循环数的数字。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-490">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="bfe2e-491">此方法将与进行比较<xref:System.Char.IsDigit%2A>方法，这可确定是否<xref:System.Char>是基数 10 位数字。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-491">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
 <span data-ttu-id="bfe2e-492">从零开始的索引字符串中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-492">Character positions in a string are indexed starting from zero.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="bfe2e-493"><xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29>方法不应以确定是否一个字符串包含数字字符 （例如，通过调用方法来对字符串中每个字符）。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-493">The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="bfe2e-494">若要确定字符串是否包含数字字符，调用的重载之一`TryParse`方法 (如<xref:System.Int32.TryParse%2A?displayProperty=nameWithType>或<xref:System.Double.TryParse%2A?displayProperty=nameWithType>的整型或浮点型类型。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-494">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="bfe2e-495">有效的数字是的成员<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>， <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>，或<xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-495">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="bfe2e-496">如果<xref:System.Char>对象位于位置`index`有效的代理项对的第一个字符<xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29>方法确定是否代理项对窗体的一个数字。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-496">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="bfe2e-497">例如，数字系统爱琴包含码位 U + 10107 至 U + 10133。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-497">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="bfe2e-498">下面的示例使用<xref:System.Char.ConvertFromUtf32%2A>方法可实例化一个字符串，表示爱琴海数字一。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-498">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="bfe2e-499">如示例所示，输出<xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29>方法返回`true`如果它传递高代理项的爱琴海数字一。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-499">As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="bfe2e-500">但是，如果它传递的低代理项，则它会考虑仅低代理项的类别并返回`false`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-500">However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]
 [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-501">下面的示例演示<xref:System.Char.IsNumber%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-501">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-502">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-502">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-503">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-503">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPunctuation">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-504">Indicates whether a Unicode character is categorized as a punctuation mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-504">Indicates whether a Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-505">有效标点符号是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`， `DashPunctuation`， `OpenPunctuation`， `ClosePunctuation`， `InititalQuotePunctuation`， `FinalQuotePunctuation`，或`OtherPunctuation`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-505">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="bfe2e-506">它们包括与下表中列出的 Unicode 码位的字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-506">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="bfe2e-507">U + 0021 到 U + 0023</span><span class="sxs-lookup"><span data-stu-id="bfe2e-507">U+0021 to U+0023</span></span>|<span data-ttu-id="bfe2e-508">U + 060 C 和 U + 060 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-508">U+060C and U+060D</span></span>|<span data-ttu-id="bfe2e-509">U + 1800 到 U + 180A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-509">U+1800 to U+180A</span></span>|<span data-ttu-id="bfe2e-510">U + 3014 到 U + 301F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-510">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="bfe2e-511">U + 0025 到 U + 002A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-511">U+0025 to U+002A</span></span>|<span data-ttu-id="bfe2e-512">U+061B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-512">U+061B</span></span>|<span data-ttu-id="bfe2e-513">U + 1944年和 U + 1945</span><span class="sxs-lookup"><span data-stu-id="bfe2e-513">U+1944 and U+1945</span></span>|<span data-ttu-id="bfe2e-514">U+3030</span><span class="sxs-lookup"><span data-stu-id="bfe2e-514">U+3030</span></span>|  
|<span data-ttu-id="bfe2e-515">U + 002 C 到 U + 002F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-515">U+002C to U+002F</span></span>|<span data-ttu-id="bfe2e-516">U + 061E 和 U + 061F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-516">U+061E and U+061F</span></span>|<span data-ttu-id="bfe2e-517">U + 19DE 和 U + 19DF</span><span class="sxs-lookup"><span data-stu-id="bfe2e-517">U+19DE and U+19DF</span></span>|<span data-ttu-id="bfe2e-518">U + 303D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-518">U+303D</span></span>|  
|<span data-ttu-id="bfe2e-519">U + 003A 和 U + 003B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-519">U+003A and U+003B</span></span>|<span data-ttu-id="bfe2e-520">U + 066A 到 U + 066 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-520">U+066A to U+066D</span></span>|<span data-ttu-id="bfe2e-521">U + 1A1E 和 U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-521">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="bfe2e-522">U + 30A0</span><span class="sxs-lookup"><span data-stu-id="bfe2e-522">U+30A0</span></span>|  
|<span data-ttu-id="bfe2e-523">U + 003F 和 U + 0040</span><span class="sxs-lookup"><span data-stu-id="bfe2e-523">U+003F and U+0040</span></span>|<span data-ttu-id="bfe2e-524">U+06D4</span><span class="sxs-lookup"><span data-stu-id="bfe2e-524">U+06D4</span></span>|<span data-ttu-id="bfe2e-525">U + 1B5A 到 U + 1B60</span><span class="sxs-lookup"><span data-stu-id="bfe2e-525">U+1B5A to U+1B60</span></span>|<span data-ttu-id="bfe2e-526">U + 30FB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-526">U+30FB</span></span>|  
|<span data-ttu-id="bfe2e-527">U + 005B 到 U + 005 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-527">U+005B to U+005D</span></span>|<span data-ttu-id="bfe2e-528">U + 0700 到 U + 070 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-528">U+0700 to U+070D</span></span>|<span data-ttu-id="bfe2e-529">U + 2010 到 U + 2027</span><span class="sxs-lookup"><span data-stu-id="bfe2e-529">U+2010 to U+2027</span></span>|<span data-ttu-id="bfe2e-530">U + A874 到 U + A877</span><span class="sxs-lookup"><span data-stu-id="bfe2e-530">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="bfe2e-531">U+005F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-531">U+005F</span></span>|<span data-ttu-id="bfe2e-532">U + 07F7 到 U + 07F9</span><span class="sxs-lookup"><span data-stu-id="bfe2e-532">U+07F7 to U+07F9</span></span>|<span data-ttu-id="bfe2e-533">U + 2030 到 U + 2043</span><span class="sxs-lookup"><span data-stu-id="bfe2e-533">U+2030 to U+2043</span></span>|<span data-ttu-id="bfe2e-534">U + FD3E 和 U + FD3F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-534">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="bfe2e-535">U + 007B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-535">U+007B</span></span>|<span data-ttu-id="bfe2e-536">U + 0964年和 U + 0965</span><span class="sxs-lookup"><span data-stu-id="bfe2e-536">U+0964 and U+0965</span></span>|<span data-ttu-id="bfe2e-537">U + 2045 到 U + 2051</span><span class="sxs-lookup"><span data-stu-id="bfe2e-537">U+2045 to U+2051</span></span>|<span data-ttu-id="bfe2e-538">U + FE10 到 U + FE19</span><span class="sxs-lookup"><span data-stu-id="bfe2e-538">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="bfe2e-539">U + 007 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-539">U+007D</span></span>|<span data-ttu-id="bfe2e-540">U+0970</span><span class="sxs-lookup"><span data-stu-id="bfe2e-540">U+0970</span></span>|<span data-ttu-id="bfe2e-541">U + 2053 到 U + 205E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-541">U+2053 to U+205E</span></span>|<span data-ttu-id="bfe2e-542">U + FE30 到 U + FE52</span><span class="sxs-lookup"><span data-stu-id="bfe2e-542">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="bfe2e-543">U+00A1</span><span class="sxs-lookup"><span data-stu-id="bfe2e-543">U+00A1</span></span>|<span data-ttu-id="bfe2e-544">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="bfe2e-544">U+0DF4</span></span>|<span data-ttu-id="bfe2e-545">U + 207 D 和 U + 207E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-545">U+207D and  U+207E</span></span>|<span data-ttu-id="bfe2e-546">U + FE54 到 U + FE61</span><span class="sxs-lookup"><span data-stu-id="bfe2e-546">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="bfe2e-547">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-547">U+00AB</span></span>|<span data-ttu-id="bfe2e-548">U + 0E4F 到 U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-548">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="bfe2e-549">U + 208 D 和 U + 208E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-549">U+208D and U+208E</span></span>|<span data-ttu-id="bfe2e-550">U+FE63</span><span class="sxs-lookup"><span data-stu-id="bfe2e-550">U+FE63</span></span>|  
|<span data-ttu-id="bfe2e-551">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="bfe2e-551">U+00AD</span></span>|<span data-ttu-id="bfe2e-552">U + 0F04 到 U + 0F12</span><span class="sxs-lookup"><span data-stu-id="bfe2e-552">U+0F04 to U+0F12</span></span>|<span data-ttu-id="bfe2e-553">U + 2329年到 U + 232A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-553">U+2329 and U+232A</span></span>|<span data-ttu-id="bfe2e-554">U+FE68</span><span class="sxs-lookup"><span data-stu-id="bfe2e-554">U+FE68</span></span>|  
|<span data-ttu-id="bfe2e-555">U + 00B7</span><span class="sxs-lookup"><span data-stu-id="bfe2e-555">U+00B7</span></span>|<span data-ttu-id="bfe2e-556">U + 0F3A 到 U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-556">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="bfe2e-557">U + 2768 到 U + 2775</span><span class="sxs-lookup"><span data-stu-id="bfe2e-557">U+2768 to U+2775</span></span>|<span data-ttu-id="bfe2e-558">U + FE6A 和 U + FE6B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-558">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="bfe2e-559">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-559">U+00BB</span></span>|<span data-ttu-id="bfe2e-560">U+0F85</span><span class="sxs-lookup"><span data-stu-id="bfe2e-560">U+0F85</span></span>|<span data-ttu-id="bfe2e-561">U + 27C 5 到 U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="bfe2e-561">U+27C5 to U+27C6</span></span>|<span data-ttu-id="bfe2e-562">U + FF01 到 U + FF03</span><span class="sxs-lookup"><span data-stu-id="bfe2e-562">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="bfe2e-563">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="bfe2e-563">U+00BF</span></span>|<span data-ttu-id="bfe2e-564">U + 0FD0 和 U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="bfe2e-564">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="bfe2e-565">U + 27E6 到 U + 27EB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-565">U+27E6 to U+27EB</span></span>|<span data-ttu-id="bfe2e-566">U + FF05 到 U + FF0A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-566">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="bfe2e-567">U+037E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-567">U+037E</span></span>|<span data-ttu-id="bfe2e-568">U + 104A 到 U + 104F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-568">U+104A to U+104F</span></span>|<span data-ttu-id="bfe2e-569">U + 2983 到 U + 2998</span><span class="sxs-lookup"><span data-stu-id="bfe2e-569">U+2983 to U+2998</span></span>|<span data-ttu-id="bfe2e-570">U + FF0C 到 U + FF0F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-570">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="bfe2e-571">U+0387</span><span class="sxs-lookup"><span data-stu-id="bfe2e-571">U+0387</span></span>|<span data-ttu-id="bfe2e-572">U + 10FB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-572">U+10FB</span></span>|<span data-ttu-id="bfe2e-573">U + 29D 8 到 U + 29DB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-573">U+29D8 to U+29DB</span></span>|<span data-ttu-id="bfe2e-574">U + FF1A 和 U + FF1B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-574">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="bfe2e-575">U + 055A 到 U + 055F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-575">U+055A to U+055F</span></span>|<span data-ttu-id="bfe2e-576">U + 1361 到 U + 1368</span><span class="sxs-lookup"><span data-stu-id="bfe2e-576">U+1361 to U+1368</span></span>|<span data-ttu-id="bfe2e-577">U + 29 FC 和 U + 29FD</span><span class="sxs-lookup"><span data-stu-id="bfe2e-577">U+29FC and U+29FD</span></span>|<span data-ttu-id="bfe2e-578">U + FF1F 和 U + FF20</span><span class="sxs-lookup"><span data-stu-id="bfe2e-578">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="bfe2e-579">U + 0589年到 U + 058A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-579">U+0589 and U+058A</span></span>|<span data-ttu-id="bfe2e-580">U + 166 D 和 U + 166E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-580">U+166D and U+166E</span></span>|<span data-ttu-id="bfe2e-581">U + 2CF9 到 U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="bfe2e-581">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="bfe2e-582">U + FF3B 到 U + FF3D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-582">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="bfe2e-583">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="bfe2e-583">U+05BE</span></span>|<span data-ttu-id="bfe2e-584">U + 169B 和 U + 169 C</span><span class="sxs-lookup"><span data-stu-id="bfe2e-584">U+169B and U+169C</span></span>|<span data-ttu-id="bfe2e-585">U + 2CFE 和 U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="bfe2e-585">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="bfe2e-586">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-586">U+FF3F</span></span>|  
|<span data-ttu-id="bfe2e-587">U+05C0</span><span class="sxs-lookup"><span data-stu-id="bfe2e-587">U+05C0</span></span>|<span data-ttu-id="bfe2e-588">U + 16EB 到 U + 16ED</span><span class="sxs-lookup"><span data-stu-id="bfe2e-588">U+16EB to U+16ED</span></span>|<span data-ttu-id="bfe2e-589">U + 2E00 到 U + 2E17</span><span class="sxs-lookup"><span data-stu-id="bfe2e-589">U+2E00 to U+2E17</span></span>|<span data-ttu-id="bfe2e-590">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-590">U+FF5B</span></span>|  
|<span data-ttu-id="bfe2e-591">U+05C3</span><span class="sxs-lookup"><span data-stu-id="bfe2e-591">U+05C3</span></span>|<span data-ttu-id="bfe2e-592">U + 1735年和 U + 1736</span><span class="sxs-lookup"><span data-stu-id="bfe2e-592">U+1735 and U+1736</span></span>|<span data-ttu-id="bfe2e-593">U + 2E1C 和 U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-593">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="bfe2e-594">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-594">U+FF5D</span></span>|  
|<span data-ttu-id="bfe2e-595">U+05C6</span><span class="sxs-lookup"><span data-stu-id="bfe2e-595">U+05C6</span></span>|<span data-ttu-id="bfe2e-596">为 U + 17D 6 U + 17D 4</span><span class="sxs-lookup"><span data-stu-id="bfe2e-596">U+17D4 to U+17D6</span></span>|<span data-ttu-id="bfe2e-597">U + 3001 到 U + 3003</span><span class="sxs-lookup"><span data-stu-id="bfe2e-597">U+3001 to U+3003</span></span>|<span data-ttu-id="bfe2e-598">U + FF5F 到 U + FF65</span><span class="sxs-lookup"><span data-stu-id="bfe2e-598">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="bfe2e-599">U + 05F3 和 U + 05F4</span><span class="sxs-lookup"><span data-stu-id="bfe2e-599">U+05F3 and U+05F4</span></span>|<span data-ttu-id="bfe2e-600">U + 17D 8 到 U + 17DA</span><span class="sxs-lookup"><span data-stu-id="bfe2e-600">U+17D8 to U+17DA</span></span>|<span data-ttu-id="bfe2e-601">U + 3008 到 U + 3011</span><span class="sxs-lookup"><span data-stu-id="bfe2e-601">U+3008 to U+3011</span></span>||  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(char c);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : char -&gt; bool" Usage="System.char.IsPunctuation c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-602">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-602">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-603">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-603">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-604">
            <see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-604">
              <see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-605">有效标点符号是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`， `DashPunctuation`， `OpenPunctuation`， `ClosePunctuation`， `InititalQuotePunctuation`， `FinalQuotePunctuation`，或`OtherPunctuation`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-605">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="bfe2e-606">它们包括与下表中列出的 Unicode 码位的字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-606">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="bfe2e-607">U + 0021 到 U + 0023</span><span class="sxs-lookup"><span data-stu-id="bfe2e-607">U+0021 to U+0023</span></span>|<span data-ttu-id="bfe2e-608">U + 060 C 和 U + 060 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-608">U+060C and U+060D</span></span>|<span data-ttu-id="bfe2e-609">U + 1800 到 U + 180A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-609">U+1800 to U+180A</span></span>|<span data-ttu-id="bfe2e-610">U + 3014 到 U + 301F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-610">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="bfe2e-611">U + 0025 到 U + 002A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-611">U+0025 to U+002A</span></span>|<span data-ttu-id="bfe2e-612">U+061B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-612">U+061B</span></span>|<span data-ttu-id="bfe2e-613">U + 1944年和 U + 1945</span><span class="sxs-lookup"><span data-stu-id="bfe2e-613">U+1944 and U+1945</span></span>|<span data-ttu-id="bfe2e-614">U+3030</span><span class="sxs-lookup"><span data-stu-id="bfe2e-614">U+3030</span></span>|  
|<span data-ttu-id="bfe2e-615">U + 002 C 到 U + 002F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-615">U+002C to U+002F</span></span>|<span data-ttu-id="bfe2e-616">U + 061E 和 U + 061F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-616">U+061E and U+061F</span></span>|<span data-ttu-id="bfe2e-617">U + 19DE 和 U + 19DF</span><span class="sxs-lookup"><span data-stu-id="bfe2e-617">U+19DE and U+19DF</span></span>|<span data-ttu-id="bfe2e-618">U + 303D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-618">U+303D</span></span>|  
|<span data-ttu-id="bfe2e-619">U + 003A 和 U + 003B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-619">U+003A and U+003B</span></span>|<span data-ttu-id="bfe2e-620">U + 066A 到 U + 066 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-620">U+066A to U+066D</span></span>|<span data-ttu-id="bfe2e-621">U + 1A1E 和 U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-621">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="bfe2e-622">U + 30A0</span><span class="sxs-lookup"><span data-stu-id="bfe2e-622">U+30A0</span></span>|  
|<span data-ttu-id="bfe2e-623">U + 003F 和 U + 0040</span><span class="sxs-lookup"><span data-stu-id="bfe2e-623">U+003F and U+0040</span></span>|<span data-ttu-id="bfe2e-624">U+06D4</span><span class="sxs-lookup"><span data-stu-id="bfe2e-624">U+06D4</span></span>|<span data-ttu-id="bfe2e-625">U + 1B5A 到 U + 1B60</span><span class="sxs-lookup"><span data-stu-id="bfe2e-625">U+1B5A to U+1B60</span></span>|<span data-ttu-id="bfe2e-626">U + 30FB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-626">U+30FB</span></span>|  
|<span data-ttu-id="bfe2e-627">U + 005B 到 U + 005 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-627">U+005B to U+005D</span></span>|<span data-ttu-id="bfe2e-628">U + 0700 到 U + 070 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-628">U+0700 to U+070D</span></span>|<span data-ttu-id="bfe2e-629">U + 2010 到 U + 2027</span><span class="sxs-lookup"><span data-stu-id="bfe2e-629">U+2010 to U+2027</span></span>|<span data-ttu-id="bfe2e-630">U + A874 到 U + A877</span><span class="sxs-lookup"><span data-stu-id="bfe2e-630">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="bfe2e-631">U+005F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-631">U+005F</span></span>|<span data-ttu-id="bfe2e-632">U + 07F7 到 U + 07F9</span><span class="sxs-lookup"><span data-stu-id="bfe2e-632">U+07F7 to U+07F9</span></span>|<span data-ttu-id="bfe2e-633">U + 2030 到 U + 2043</span><span class="sxs-lookup"><span data-stu-id="bfe2e-633">U+2030 to U+2043</span></span>|<span data-ttu-id="bfe2e-634">U + FD3E 和 U + FD3F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-634">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="bfe2e-635">U + 007B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-635">U+007B</span></span>|<span data-ttu-id="bfe2e-636">U + 0964年和 U + 0965</span><span class="sxs-lookup"><span data-stu-id="bfe2e-636">U+0964 and U+0965</span></span>|<span data-ttu-id="bfe2e-637">U + 2045 到 U + 2051</span><span class="sxs-lookup"><span data-stu-id="bfe2e-637">U+2045 to U+2051</span></span>|<span data-ttu-id="bfe2e-638">U + FE10 到 U + FE19</span><span class="sxs-lookup"><span data-stu-id="bfe2e-638">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="bfe2e-639">U + 007 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-639">U+007D</span></span>|<span data-ttu-id="bfe2e-640">U+0970</span><span class="sxs-lookup"><span data-stu-id="bfe2e-640">U+0970</span></span>|<span data-ttu-id="bfe2e-641">U + 2053 到 U + 205E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-641">U+2053 to U+205E</span></span>|<span data-ttu-id="bfe2e-642">U + FE30 到 U + FE52</span><span class="sxs-lookup"><span data-stu-id="bfe2e-642">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="bfe2e-643">U+00A1</span><span class="sxs-lookup"><span data-stu-id="bfe2e-643">U+00A1</span></span>|<span data-ttu-id="bfe2e-644">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="bfe2e-644">U+0DF4</span></span>|<span data-ttu-id="bfe2e-645">U + 207 D 和 U + 207E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-645">U+207D and  U+207E</span></span>|<span data-ttu-id="bfe2e-646">U + FE54 到 U + FE61</span><span class="sxs-lookup"><span data-stu-id="bfe2e-646">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="bfe2e-647">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-647">U+00AB</span></span>|<span data-ttu-id="bfe2e-648">U + 0E4F 到 U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-648">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="bfe2e-649">U + 208 D 和 U + 208E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-649">U+208D and U+208E</span></span>|<span data-ttu-id="bfe2e-650">U+FE63</span><span class="sxs-lookup"><span data-stu-id="bfe2e-650">U+FE63</span></span>|  
|<span data-ttu-id="bfe2e-651">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="bfe2e-651">U+00AD</span></span>|<span data-ttu-id="bfe2e-652">U + 0F04 到 U + 0F12</span><span class="sxs-lookup"><span data-stu-id="bfe2e-652">U+0F04 to U+0F12</span></span>|<span data-ttu-id="bfe2e-653">U + 2329年到 U + 232A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-653">U+2329 and U+232A</span></span>|<span data-ttu-id="bfe2e-654">U+FE68</span><span class="sxs-lookup"><span data-stu-id="bfe2e-654">U+FE68</span></span>|  
|<span data-ttu-id="bfe2e-655">U + 00B7</span><span class="sxs-lookup"><span data-stu-id="bfe2e-655">U+00B7</span></span>|<span data-ttu-id="bfe2e-656">U + 0F3A 到 U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-656">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="bfe2e-657">U + 2768 到 U + 2775</span><span class="sxs-lookup"><span data-stu-id="bfe2e-657">U+2768 to U+2775</span></span>|<span data-ttu-id="bfe2e-658">U + FE6A 和 U + FE6B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-658">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="bfe2e-659">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-659">U+00BB</span></span>|<span data-ttu-id="bfe2e-660">U+0F85</span><span class="sxs-lookup"><span data-stu-id="bfe2e-660">U+0F85</span></span>|<span data-ttu-id="bfe2e-661">U + 27C 5 到 U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="bfe2e-661">U+27C5 to U+27C6</span></span>|<span data-ttu-id="bfe2e-662">U + FF01 到 U + FF03</span><span class="sxs-lookup"><span data-stu-id="bfe2e-662">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="bfe2e-663">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="bfe2e-663">U+00BF</span></span>|<span data-ttu-id="bfe2e-664">U + 0FD0 和 U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="bfe2e-664">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="bfe2e-665">U + 27E6 到 U + 27EB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-665">U+27E6 to U+27EB</span></span>|<span data-ttu-id="bfe2e-666">U + FF05 到 U + FF0A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-666">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="bfe2e-667">U+037E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-667">U+037E</span></span>|<span data-ttu-id="bfe2e-668">U + 104A 到 U + 104F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-668">U+104A to U+104F</span></span>|<span data-ttu-id="bfe2e-669">U + 2983 到 U + 2998</span><span class="sxs-lookup"><span data-stu-id="bfe2e-669">U+2983 to U+2998</span></span>|<span data-ttu-id="bfe2e-670">U + FF0C 到 U + FF0F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-670">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="bfe2e-671">U+0387</span><span class="sxs-lookup"><span data-stu-id="bfe2e-671">U+0387</span></span>|<span data-ttu-id="bfe2e-672">U + 10FB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-672">U+10FB</span></span>|<span data-ttu-id="bfe2e-673">U + 29D 8 到 U + 29DB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-673">U+29D8 to U+29DB</span></span>|<span data-ttu-id="bfe2e-674">U + FF1A 和 U + FF1B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-674">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="bfe2e-675">U + 055A 到 U + 055F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-675">U+055A to U+055F</span></span>|<span data-ttu-id="bfe2e-676">U + 1361 到 U + 1368</span><span class="sxs-lookup"><span data-stu-id="bfe2e-676">U+1361 to U+1368</span></span>|<span data-ttu-id="bfe2e-677">U + 29 FC 和 U + 29FD</span><span class="sxs-lookup"><span data-stu-id="bfe2e-677">U+29FC and U+29FD</span></span>|<span data-ttu-id="bfe2e-678">U + FF1F 和 U + FF20</span><span class="sxs-lookup"><span data-stu-id="bfe2e-678">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="bfe2e-679">U + 0589年到 U + 058A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-679">U+0589 and U+058A</span></span>|<span data-ttu-id="bfe2e-680">U + 166 D 和 U + 166E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-680">U+166D and U+166E</span></span>|<span data-ttu-id="bfe2e-681">U + 2CF9 到 U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="bfe2e-681">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="bfe2e-682">U + FF3B 到 U + FF3D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-682">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="bfe2e-683">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="bfe2e-683">U+05BE</span></span>|<span data-ttu-id="bfe2e-684">U + 169B 和 U + 169 C</span><span class="sxs-lookup"><span data-stu-id="bfe2e-684">U+169B and U+169C</span></span>|<span data-ttu-id="bfe2e-685">U + 2CFE 和 U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="bfe2e-685">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="bfe2e-686">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-686">U+FF3F</span></span>|  
|<span data-ttu-id="bfe2e-687">U+05C0</span><span class="sxs-lookup"><span data-stu-id="bfe2e-687">U+05C0</span></span>|<span data-ttu-id="bfe2e-688">U + 16EB 到 U + 16ED</span><span class="sxs-lookup"><span data-stu-id="bfe2e-688">U+16EB to U+16ED</span></span>|<span data-ttu-id="bfe2e-689">U + 2E00 到 U + 2E17</span><span class="sxs-lookup"><span data-stu-id="bfe2e-689">U+2E00 to U+2E17</span></span>|<span data-ttu-id="bfe2e-690">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-690">U+FF5B</span></span>|  
|<span data-ttu-id="bfe2e-691">U+05C3</span><span class="sxs-lookup"><span data-stu-id="bfe2e-691">U+05C3</span></span>|<span data-ttu-id="bfe2e-692">U + 1735年和 U + 1736</span><span class="sxs-lookup"><span data-stu-id="bfe2e-692">U+1735 and U+1736</span></span>|<span data-ttu-id="bfe2e-693">U + 2E1C 和 U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-693">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="bfe2e-694">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-694">U+FF5D</span></span>|  
|<span data-ttu-id="bfe2e-695">U+05C6</span><span class="sxs-lookup"><span data-stu-id="bfe2e-695">U+05C6</span></span>|<span data-ttu-id="bfe2e-696">为 U + 17D 6 U + 17D 4</span><span class="sxs-lookup"><span data-stu-id="bfe2e-696">U+17D4 to U+17D6</span></span>|<span data-ttu-id="bfe2e-697">U + 3001 到 U + 3003</span><span class="sxs-lookup"><span data-stu-id="bfe2e-697">U+3001 to U+3003</span></span>|<span data-ttu-id="bfe2e-698">U + FF5F 到 U + FF65</span><span class="sxs-lookup"><span data-stu-id="bfe2e-698">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="bfe2e-699">U + 05F3 和 U + 05F4</span><span class="sxs-lookup"><span data-stu-id="bfe2e-699">U+05F3 and U+05F4</span></span>|<span data-ttu-id="bfe2e-700">U + 17D 8 到 U + 17DA</span><span class="sxs-lookup"><span data-stu-id="bfe2e-700">U+17D8 to U+17DA</span></span>|<span data-ttu-id="bfe2e-701">U + 3008 到 U + 3011</span><span class="sxs-lookup"><span data-stu-id="bfe2e-701">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-702">下面的代码示例演示<xref:System.Char.IsPunctuation%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-702">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : string * int -&gt; bool" Usage="System.char.IsPunctuation (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-703">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-703">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-704">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-704">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-705">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-705">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-706">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-706">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-707">从零开始的索引字符串中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-707">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bfe2e-708">有效标点符号是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`， `DashPunctuation`， `OpenPunctuation`， `ClosePunctuation`， `InititalQuotePunctuation`， `FinalQuotePunctuation`，或`OtherPunctuation`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-708">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="bfe2e-709">它们包括与下表中列出的 Unicode 码位的字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-709">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="bfe2e-710">U + 0021 到 U + 0023</span><span class="sxs-lookup"><span data-stu-id="bfe2e-710">U+0021 to U+0023</span></span>|<span data-ttu-id="bfe2e-711">U + 060 C 和 U + 060 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-711">U+060C and U+060D</span></span>|<span data-ttu-id="bfe2e-712">U + 1800 到 U + 180A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-712">U+1800 to U+180A</span></span>|<span data-ttu-id="bfe2e-713">U + 3014 到 U + 301F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-713">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="bfe2e-714">U + 0025 到 U + 002A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-714">U+0025 to U+002A</span></span>|<span data-ttu-id="bfe2e-715">U+061B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-715">U+061B</span></span>|<span data-ttu-id="bfe2e-716">U + 1944年和 U + 1945</span><span class="sxs-lookup"><span data-stu-id="bfe2e-716">U+1944 and U+1945</span></span>|<span data-ttu-id="bfe2e-717">U+3030</span><span class="sxs-lookup"><span data-stu-id="bfe2e-717">U+3030</span></span>|  
|<span data-ttu-id="bfe2e-718">U + 002 C 到 U + 002F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-718">U+002C to U+002F</span></span>|<span data-ttu-id="bfe2e-719">U + 061E 和 U + 061F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-719">U+061E and U+061F</span></span>|<span data-ttu-id="bfe2e-720">U + 19DE 和 U + 19DF</span><span class="sxs-lookup"><span data-stu-id="bfe2e-720">U+19DE and U+19DF</span></span>|<span data-ttu-id="bfe2e-721">U + 303D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-721">U+303D</span></span>|  
|<span data-ttu-id="bfe2e-722">U + 003A 和 U + 003B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-722">U+003A and U+003B</span></span>|<span data-ttu-id="bfe2e-723">U + 066A 到 U + 066 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-723">U+066A to U+066D</span></span>|<span data-ttu-id="bfe2e-724">U + 1A1E 和 U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-724">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="bfe2e-725">U + 30A0</span><span class="sxs-lookup"><span data-stu-id="bfe2e-725">U+30A0</span></span>|  
|<span data-ttu-id="bfe2e-726">U + 003F 和 U + 0040</span><span class="sxs-lookup"><span data-stu-id="bfe2e-726">U+003F and U+0040</span></span>|<span data-ttu-id="bfe2e-727">U+06D4</span><span class="sxs-lookup"><span data-stu-id="bfe2e-727">U+06D4</span></span>|<span data-ttu-id="bfe2e-728">U + 1B5A 到 U + 1B60</span><span class="sxs-lookup"><span data-stu-id="bfe2e-728">U+1B5A to U+1B60</span></span>|<span data-ttu-id="bfe2e-729">U + 30FB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-729">U+30FB</span></span>|  
|<span data-ttu-id="bfe2e-730">U + 005B 到 U + 005 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-730">U+005B to U+005D</span></span>|<span data-ttu-id="bfe2e-731">U + 0700 到 U + 070 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-731">U+0700 to U+070D</span></span>|<span data-ttu-id="bfe2e-732">U + 2010 到 U + 2027</span><span class="sxs-lookup"><span data-stu-id="bfe2e-732">U+2010 to U+2027</span></span>|<span data-ttu-id="bfe2e-733">U + A874 到 U + A877</span><span class="sxs-lookup"><span data-stu-id="bfe2e-733">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="bfe2e-734">U+005F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-734">U+005F</span></span>|<span data-ttu-id="bfe2e-735">U + 07F7 到 U + 07F9</span><span class="sxs-lookup"><span data-stu-id="bfe2e-735">U+07F7 to U+07F9</span></span>|<span data-ttu-id="bfe2e-736">U + 2030 到 U + 2043</span><span class="sxs-lookup"><span data-stu-id="bfe2e-736">U+2030 to U+2043</span></span>|<span data-ttu-id="bfe2e-737">U + FD3E 和 U + FD3F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-737">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="bfe2e-738">U + 007B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-738">U+007B</span></span>|<span data-ttu-id="bfe2e-739">U + 0964年和 U + 0965</span><span class="sxs-lookup"><span data-stu-id="bfe2e-739">U+0964 and U+0965</span></span>|<span data-ttu-id="bfe2e-740">U + 2045 到 U + 2051</span><span class="sxs-lookup"><span data-stu-id="bfe2e-740">U+2045 to U+2051</span></span>|<span data-ttu-id="bfe2e-741">U + FE10 到 U + FE19</span><span class="sxs-lookup"><span data-stu-id="bfe2e-741">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="bfe2e-742">U + 007 D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-742">U+007D</span></span>|<span data-ttu-id="bfe2e-743">U+0970</span><span class="sxs-lookup"><span data-stu-id="bfe2e-743">U+0970</span></span>|<span data-ttu-id="bfe2e-744">U + 2053 到 U + 205E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-744">U+2053 to U+205E</span></span>|<span data-ttu-id="bfe2e-745">U + FE30 到 U + FE52</span><span class="sxs-lookup"><span data-stu-id="bfe2e-745">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="bfe2e-746">U+00A1</span><span class="sxs-lookup"><span data-stu-id="bfe2e-746">U+00A1</span></span>|<span data-ttu-id="bfe2e-747">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="bfe2e-747">U+0DF4</span></span>|<span data-ttu-id="bfe2e-748">U + 207 D 和 U + 207E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-748">U+207D and  U+207E</span></span>|<span data-ttu-id="bfe2e-749">U + FE54 到 U + FE61</span><span class="sxs-lookup"><span data-stu-id="bfe2e-749">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="bfe2e-750">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-750">U+00AB</span></span>|<span data-ttu-id="bfe2e-751">U + 0E4F 到 U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-751">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="bfe2e-752">U + 208 D 和 U + 208E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-752">U+208D and U+208E</span></span>|<span data-ttu-id="bfe2e-753">U+FE63</span><span class="sxs-lookup"><span data-stu-id="bfe2e-753">U+FE63</span></span>|  
|<span data-ttu-id="bfe2e-754">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="bfe2e-754">U+00AD</span></span>|<span data-ttu-id="bfe2e-755">U + 0F04 到 U + 0F12</span><span class="sxs-lookup"><span data-stu-id="bfe2e-755">U+0F04 to U+0F12</span></span>|<span data-ttu-id="bfe2e-756">U + 2329年到 U + 232A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-756">U+2329 and U+232A</span></span>|<span data-ttu-id="bfe2e-757">U+FE68</span><span class="sxs-lookup"><span data-stu-id="bfe2e-757">U+FE68</span></span>|  
|<span data-ttu-id="bfe2e-758">U + 00B7</span><span class="sxs-lookup"><span data-stu-id="bfe2e-758">U+00B7</span></span>|<span data-ttu-id="bfe2e-759">U + 0F3A 到 U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-759">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="bfe2e-760">U + 2768 到 U + 2775</span><span class="sxs-lookup"><span data-stu-id="bfe2e-760">U+2768 to U+2775</span></span>|<span data-ttu-id="bfe2e-761">U + FE6A 和 U + FE6B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-761">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="bfe2e-762">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-762">U+00BB</span></span>|<span data-ttu-id="bfe2e-763">U+0F85</span><span class="sxs-lookup"><span data-stu-id="bfe2e-763">U+0F85</span></span>|<span data-ttu-id="bfe2e-764">U + 27C 5 到 U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="bfe2e-764">U+27C5 to U+27C6</span></span>|<span data-ttu-id="bfe2e-765">U + FF01 到 U + FF03</span><span class="sxs-lookup"><span data-stu-id="bfe2e-765">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="bfe2e-766">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="bfe2e-766">U+00BF</span></span>|<span data-ttu-id="bfe2e-767">U + 0FD0 和 U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="bfe2e-767">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="bfe2e-768">U + 27E6 到 U + 27EB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-768">U+27E6 to U+27EB</span></span>|<span data-ttu-id="bfe2e-769">U + FF05 到 U + FF0A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-769">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="bfe2e-770">U+037E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-770">U+037E</span></span>|<span data-ttu-id="bfe2e-771">U + 104A 到 U + 104F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-771">U+104A to U+104F</span></span>|<span data-ttu-id="bfe2e-772">U + 2983 到 U + 2998</span><span class="sxs-lookup"><span data-stu-id="bfe2e-772">U+2983 to U+2998</span></span>|<span data-ttu-id="bfe2e-773">U + FF0C 到 U + FF0F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-773">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="bfe2e-774">U+0387</span><span class="sxs-lookup"><span data-stu-id="bfe2e-774">U+0387</span></span>|<span data-ttu-id="bfe2e-775">U + 10FB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-775">U+10FB</span></span>|<span data-ttu-id="bfe2e-776">U + 29D 8 到 U + 29DB</span><span class="sxs-lookup"><span data-stu-id="bfe2e-776">U+29D8 to U+29DB</span></span>|<span data-ttu-id="bfe2e-777">U + FF1A 和 U + FF1B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-777">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="bfe2e-778">U + 055A 到 U + 055F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-778">U+055A to U+055F</span></span>|<span data-ttu-id="bfe2e-779">U + 1361 到 U + 1368</span><span class="sxs-lookup"><span data-stu-id="bfe2e-779">U+1361 to U+1368</span></span>|<span data-ttu-id="bfe2e-780">U + 29 FC 和 U + 29FD</span><span class="sxs-lookup"><span data-stu-id="bfe2e-780">U+29FC and U+29FD</span></span>|<span data-ttu-id="bfe2e-781">U + FF1F 和 U + FF20</span><span class="sxs-lookup"><span data-stu-id="bfe2e-781">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="bfe2e-782">U + 0589年到 U + 058A</span><span class="sxs-lookup"><span data-stu-id="bfe2e-782">U+0589 and U+058A</span></span>|<span data-ttu-id="bfe2e-783">U + 166 D 和 U + 166E</span><span class="sxs-lookup"><span data-stu-id="bfe2e-783">U+166D and U+166E</span></span>|<span data-ttu-id="bfe2e-784">U + 2CF9 到 U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="bfe2e-784">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="bfe2e-785">U + FF3B 到 U + FF3D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-785">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="bfe2e-786">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="bfe2e-786">U+05BE</span></span>|<span data-ttu-id="bfe2e-787">U + 169B 和 U + 169 C</span><span class="sxs-lookup"><span data-stu-id="bfe2e-787">U+169B and U+169C</span></span>|<span data-ttu-id="bfe2e-788">U + 2CFE 和 U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="bfe2e-788">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="bfe2e-789">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="bfe2e-789">U+FF3F</span></span>|  
|<span data-ttu-id="bfe2e-790">U+05C0</span><span class="sxs-lookup"><span data-stu-id="bfe2e-790">U+05C0</span></span>|<span data-ttu-id="bfe2e-791">U + 16EB 到 U + 16ED</span><span class="sxs-lookup"><span data-stu-id="bfe2e-791">U+16EB to U+16ED</span></span>|<span data-ttu-id="bfe2e-792">U + 2E00 到 U + 2E17</span><span class="sxs-lookup"><span data-stu-id="bfe2e-792">U+2E00 to U+2E17</span></span>|<span data-ttu-id="bfe2e-793">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="bfe2e-793">U+FF5B</span></span>|  
|<span data-ttu-id="bfe2e-794">U+05C3</span><span class="sxs-lookup"><span data-stu-id="bfe2e-794">U+05C3</span></span>|<span data-ttu-id="bfe2e-795">U + 1735年和 U + 1736</span><span class="sxs-lookup"><span data-stu-id="bfe2e-795">U+1735 and U+1736</span></span>|<span data-ttu-id="bfe2e-796">U + 2E1C 和 U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-796">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="bfe2e-797">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="bfe2e-797">U+FF5D</span></span>|  
|<span data-ttu-id="bfe2e-798">U+05C6</span><span class="sxs-lookup"><span data-stu-id="bfe2e-798">U+05C6</span></span>|<span data-ttu-id="bfe2e-799">为 U + 17D 6 U + 17D 4</span><span class="sxs-lookup"><span data-stu-id="bfe2e-799">U+17D4 to U+17D6</span></span>|<span data-ttu-id="bfe2e-800">U + 3001 到 U + 3003</span><span class="sxs-lookup"><span data-stu-id="bfe2e-800">U+3001 to U+3003</span></span>|<span data-ttu-id="bfe2e-801">U + FF5F 到 U + FF65</span><span class="sxs-lookup"><span data-stu-id="bfe2e-801">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="bfe2e-802">U + 05F3 和 U + 05F4</span><span class="sxs-lookup"><span data-stu-id="bfe2e-802">U+05F3 and U+05F4</span></span>|<span data-ttu-id="bfe2e-803">U + 17D 8 到 U + 17DA</span><span class="sxs-lookup"><span data-stu-id="bfe2e-803">U+17D8 to U+17DA</span></span>|<span data-ttu-id="bfe2e-804">U + 3008 到 U + 3011</span><span class="sxs-lookup"><span data-stu-id="bfe2e-804">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-805">下面的代码示例演示<xref:System.Char.IsPunctuation%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-805">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-806">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-806">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-807">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-807">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSeparator">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-808">Indicates whether a Unicode character is categorized as a separator character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-808">Indicates whether a Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-809">Unicode 标准可识别分隔符的三个子的类别：</span><span class="sxs-lookup"><span data-stu-id="bfe2e-809">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="bfe2e-810">空格分隔符 (<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>类别)，其中包括 \u0020 等字符的字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-810">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="bfe2e-811">行分隔符 (<xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType>类别)，其中包括 \u2028。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-811">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="bfe2e-812">段落分隔符 (<xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType>类别)，其中包括 \u2029。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-812">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfe2e-813">Unicode 标准将字符 \u000A (LF)、 \u000C (FF) 和 \u000D (CR) 分类为控制字符 (的成员<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>类别)，而不是分隔符字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-813">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(char c);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : char -&gt; bool" Usage="System.char.IsSeparator c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-814">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-814">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-815">Indicates whether the specified Unicode character is categorized as a separator character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-815">Indicates whether the specified Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-816">
            <see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-816">
              <see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-817">Unicode 标准可识别分隔符的三个子的类别：</span><span class="sxs-lookup"><span data-stu-id="bfe2e-817">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="bfe2e-818">空格分隔符 (<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>类别)，其中包括 \u0020 等字符的字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-818">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="bfe2e-819">行分隔符 (<xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType>类别)，其中包括 \u2028。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-819">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="bfe2e-820">段落分隔符 (<xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType>类别)，其中包括 \u2029。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-820">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfe2e-821">Unicode 标准将字符 \u000A (LF)、 \u000C (FF) 和 \u000D (CR) 分类为控制字符 (的成员<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>类别)，而不是分隔符字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-821">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-822">下面的示例列出<xref:System.Char>归类为分隔符字符的对象。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-822">The following example lists the <xref:System.Char> objects that are classified as separator characters.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator1.cpp#1)]
 [!code-csharp[System.Char.IsSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator1.cs#1)]
 [!code-vb[System.Char.IsSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : string * int -&gt; bool" Usage="System.char.IsSeparator (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-823">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-823">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-824">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-824">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-825">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-825">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-826">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-826">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-827">从零开始的索引字符串中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-827">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bfe2e-828">Unicode 标准可识别分隔符的三个子的类别：</span><span class="sxs-lookup"><span data-stu-id="bfe2e-828">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="bfe2e-829">空格分隔符 (<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>类别)，其中包括 \u0020 等字符的字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-829">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="bfe2e-830">行分隔符 (<xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType>类别)，其中包括 \u2028。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-830">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="bfe2e-831">段落分隔符 (<xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType>类别)，其中包括 \u2029。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-831">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bfe2e-832">Unicode 标准将字符 \u000A (LF)、 \u000C (FF) 和 \u000D (CR) 分类为控制字符 (的成员<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>类别)，而不是分隔符字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-832">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-833">下面的示例演示<xref:System.Char.IsSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-833">The following example demonstrates <xref:System.Char.IsSeparator%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator.cpp#10)]
 [!code-csharp[System.Char.IsSeparator#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator.cs#10)]
 [!code-vb[System.Char.IsSeparator#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-834">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-834">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-835">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-835">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-836">Indicates whether a character has a surrogate code unit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-836">Indicates whether a character has a surrogate code unit.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : char -&gt; bool" Usage="System.char.IsSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-837">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-837">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-838">Indicates whether the specified character has a surrogate code unit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-838">Indicates whether the specified character has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-839">
            <see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-839">
              <see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-840">代理项是<xref:System.Char>使用 utf-16 代码单位从 U + D800 到 U + DFFF 的范围内的对象。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-840">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="bfe2e-841">与此范围中的代码单元的每个字符属于<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-841">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="bfe2e-842">单独的代理项代码单位具有自己的没有解释，但仅在使用作为代理项对的一部分时意义。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-842">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="bfe2e-843">有关代理项对的详细信息，请参阅 Unicode 标准的[Unicode 主页](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-843">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-844">下面的示例演示<xref:System.Char.IsSurrogate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-844">The following example demonstrates the <xref:System.Char.IsSurrogate%2A> method.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : string * int -&gt; bool" Usage="System.char.IsSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-845">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-845">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-846">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-846">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-847">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-847">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-848">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-848">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-849">从零开始的索引字符串中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-849">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bfe2e-850">代理项是<xref:System.Char>使用 utf-16 代码单位从 U + D800 到 U + DFFF 的范围内的对象。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-850">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="bfe2e-851">与此范围中的代码单元的每个字符属于<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-851">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="bfe2e-852">单独的代理项代码单位具有自己的没有解释，但仅在使用作为代理项对的一部分时意义。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-852">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="bfe2e-853">有关代理项对的详细信息，请参阅 Unicode 标准的[Unicode 主页](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-853">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-854">下面的代码示例演示<xref:System.Char.IsSurrogate%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-854">The following code example demonstrates <xref:System.Char.IsSurrogate%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-855">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-855">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-856">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-856">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogatePair">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-857">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-857">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (highSurrogate As Char, lowSurrogate As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : char * char -&gt; bool" Usage="System.char.IsSurrogatePair (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="bfe2e-858">The character to evaluate as the high surrogate of a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-858">The character to evaluate as the high surrogate of a surrogate pair.</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="bfe2e-859">The character to evaluate as the low surrogate of a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-859">The character to evaluate as the low surrogate of a surrogate pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-860">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-860">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-861">
            <see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-861">
              <see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-862">通常，由单个的 16 位 Unicode 代码单位表示单个字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-862">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="bfe2e-863">UTF 16 编码还支持代理项对，允许将单个抽象字符由两个 16 位代码单位表示。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-863">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="bfe2e-864">第一个代码单元，其值的范围从 U + D800 到 U + DBFF，是高代理项。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-864">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="bfe2e-865">第二个代码单元，其值的范围从 U + DC00 到 U + DFFF，则低代理项。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-865">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="bfe2e-866">单独的代理项代码点都具有自己的没有意义。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-866">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="bfe2e-867">有关代理项和 Unicode 标准的详细信息，请参阅[Unicode 主页](http://go.microsoft.com/fwlink/?LinkId=37123)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-867">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-868">下面的代码示例演示<xref:System.Char.IsHighSurrogate%2A>， <xref:System.Char.IsLowSurrogate%2A>，和<xref:System.Char.IsSurrogatePair%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-868">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : string * int -&gt; bool" Usage="System.char.IsSurrogatePair (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-869">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-869">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-870">The starting position of the pair of characters to evaluate within <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-870">The starting position of the pair of characters to evaluate within <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-871">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-871">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-872">
            <see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-872">
              <see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-873">通常，由单个的 16 位 Unicode 代码单位表示单个字符。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-873">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="bfe2e-874">UTF 16 编码还支持代理项对，允许将单个抽象字符由两个 16 位代码单位表示。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-874">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="bfe2e-875">第一个代码单元，其值的范围从 U + D800 到 U + DBFF，是高代理项。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-875">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="bfe2e-876">第二个代码单元，其值的范围从 U + DC00 到 U + DFFF，则低代理项。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-876">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="bfe2e-877">单独的代理项代码点都具有自己的没有意义。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-877">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="bfe2e-878">有关代理项和 Unicode 标准的详细信息，请参阅[Unicode 主页](http://go.microsoft.com/fwlink/?LinkId=37123)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-878">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-879">下面的代码示例演示<xref:System.Char.IsHighSurrogate%2A>， <xref:System.Char.IsLowSurrogate%2A>，和<xref:System.Char.IsSurrogatePair%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-879">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-880">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-880">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-881">
            <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-881">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSymbol">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-882">Indicates whether a Unicode character is categorized as a symbol character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-882">Indicates whether a Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-883">有效的符号是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `MathSymbol`， `CurrencySymbol`， `ModifierSymbol`，和`OtherSymbol`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-883">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="bfe2e-884">Unicode 标准中的符号是松散定义的一组字符，包括以下各项：</span><span class="sxs-lookup"><span data-stu-id="bfe2e-884">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="bfe2e-885">货币符号。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-885">Currency symbols.</span></span>  
  
-   <span data-ttu-id="bfe2e-886">类似字母的符号，包括一套数学字母数字符号，以及如 ℅、 № 符号和™。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-886">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="bfe2e-887">数字形式，如上标和下标。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-887">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="bfe2e-888">数学运算符和箭头。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-888">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="bfe2e-889">几何符号。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-889">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="bfe2e-890">技术符号。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-890">Technical symbols.</span></span>  
  
-   <span data-ttu-id="bfe2e-891">盲文模式。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-891">Braille patterns.</span></span>  
  
-   <span data-ttu-id="bfe2e-892">和分段符号。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-892">Dingbats.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(char c);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : char -&gt; bool" Usage="System.char.IsSymbol c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-893">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-893">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-894">Indicates whether the specified Unicode character is categorized as a symbol character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-894">Indicates whether the specified Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-895">
            <see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-895">
              <see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-896">有效的符号是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `MathSymbol`， `CurrencySymbol`， `ModifierSymbol`，和`OtherSymbol`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-896">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="bfe2e-897">Unicode 标准中的符号是松散定义的一组字符，包括以下各项：</span><span class="sxs-lookup"><span data-stu-id="bfe2e-897">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="bfe2e-898">货币符号。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-898">Currency symbols.</span></span>  
  
-   <span data-ttu-id="bfe2e-899">类似字母的符号，包括一套数学字母数字符号，以及如 ℅、 № 符号和™。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-899">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="bfe2e-900">数字形式，如上标和下标。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-900">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="bfe2e-901">数学运算符和箭头。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-901">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="bfe2e-902">几何符号。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-902">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="bfe2e-903">技术符号。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-903">Technical symbols.</span></span>  
  
-   <span data-ttu-id="bfe2e-904">盲文模式。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-904">Braille patterns.</span></span>  
  
-   <span data-ttu-id="bfe2e-905">和分段符号。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-905">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-906">下面的代码示例演示<xref:System.Char.IsSymbol%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-906">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : string * int -&gt; bool" Usage="System.char.IsSymbol (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-907">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-907">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-908">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-908">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-909">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-909">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-910">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-910">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-911">从零开始的索引字符串中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-911">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bfe2e-912">有效的符号是中的以下类别的成员<xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`， `CurrencySymbol`， `ModifierSymbol`，和`OtherSymbol`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-912">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="bfe2e-913">Unicode 标准中的符号是松散定义的一组字符，包括以下各项：</span><span class="sxs-lookup"><span data-stu-id="bfe2e-913">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="bfe2e-914">货币符号。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-914">Currency symbols.</span></span>  
  
-   <span data-ttu-id="bfe2e-915">类似字母的符号，包括一套数学字母数字符号，以及如 ℅、 № 符号和™。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-915">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="bfe2e-916">数字形式，如上标和下标。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-916">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="bfe2e-917">数学运算符和箭头。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-917">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="bfe2e-918">几何符号。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-918">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="bfe2e-919">技术符号。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-919">Technical symbols.</span></span>  
  
-   <span data-ttu-id="bfe2e-920">盲文模式。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-920">Braille patterns.</span></span>  
  
-   <span data-ttu-id="bfe2e-921">和分段符号。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-921">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-922">下面的代码示例演示<xref:System.Char.IsSymbol%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-922">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-923">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-923">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-924">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-924">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-925">Indicates whether a Unicode character is categorized as an uppercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-925">Indicates whether a Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(char c);" />
      <MemberSignature Language="F#" Value="static member IsUpper : char -&gt; bool" Usage="System.char.IsUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-926">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-926">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-927">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-927">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-928">
            <see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-928">
              <see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-929">有效的大写字母是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-929">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsLower(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsUpper : string * int -&gt; bool" Usage="System.char.IsUpper (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-930">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-930">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-931">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-931">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-932">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-932">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-933">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-933">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-934">从零开始的索引字符串中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-934">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bfe2e-935">有效的大写字母是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-935">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-936">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-936">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-937">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-937">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWhiteSpace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-938">Indicates whether a Unicode character is categorized as white space.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-938">Indicates whether a Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-939">空白字符都是以下 Unicode 字符：</span><span class="sxs-lookup"><span data-stu-id="bfe2e-939">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="bfe2e-940">成员<xref:System.Globalization.UnicodeCategory.SpaceSeparator>类别，包括字符间距 (U + 0020)，则欧甘文空间标记 (U + 1680)，EN 四 (U + 2000)，EM 四 (U + 2001)，EN 空间 (U + 2002)，EM 空间 (U + 2003)，三个每个 EM 空间 （U + 2004 年），每个 EM 四个空间 (U + 2005)，六个每个 EM空间 (U + 2006)，图空间 (U + 2007)，标点空间 (U + 2008)，精简空间 （U + 2009 年），细空格 (U + 200A)、 窄无中断空格 (U + 202F)、 中等数学空间 (U + 205F) 和表意空格 (U + 3000)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-940">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="bfe2e-941">成员<xref:System.Globalization.UnicodeCategory.LineSeparator>类别，只包含行分隔符字符 (U + 2028)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-941">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="bfe2e-942">成员<xref:System.Globalization.UnicodeCategory.ParagraphSeparator>类别，只包含段落分隔符字符 (U + 2029)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-942">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="bfe2e-943">字符表的字符 (U + 0009)，换行符 (U + 000A)、 行制表 (U + 000B)、 换页符 (U + 000 C)、 回车符 (U + 000d)，接下来行 (U + 0085)，并无中断空格 (U + 00A0)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-943">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), NEXT LINE (U+0085), and NO-BREAK SPACE (U+00A0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(char c);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : char -&gt; bool" Usage="System.char.IsWhiteSpace c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-944">The Unicode character to evaluate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-944">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-945">Indicates whether the specified Unicode character is categorized as white space.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-945">Indicates whether the specified Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-946">
            <see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-946">
              <see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-947">空白字符都是以下 Unicode 字符：</span><span class="sxs-lookup"><span data-stu-id="bfe2e-947">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="bfe2e-948">成员<xref:System.Globalization.UnicodeCategory.SpaceSeparator>类别，包括空间的字符 (U + 0020)，无中断空格 (U + 00A0)、 欧甘文空间将标记 (U + 1680)，EN 四 (U + 2000)，EM 四 (U + 2001)，EN 空间 (U + 2002)，EM 空间 (U + 2003)，由三个每个 EM 空间 （U + 2004 年），四个每个 EM 空间 (U+ 2005)，每个 EM 六个空间 (U + 2006)，数字空格 (U + 2007)，标点空间 (U + 2008)，精简空间 （U + 2009 年），细空格 (U + 200A)、 窄无中断空格 (U + 202F)、 中等数学空间 (U + 205F) 和表意空格 (U + 3000)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-948">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="bfe2e-949">成员<xref:System.Globalization.UnicodeCategory.LineSeparator>类别，只包含行分隔符字符 (U + 2028)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-949">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="bfe2e-950">成员<xref:System.Globalization.UnicodeCategory.ParagraphSeparator>类别，只包含段落分隔符字符 (U + 2029)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-950">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="bfe2e-951">字符表的字符 (U + 0009)，接下来行 (U + 0085) 和行源 (U + 000A)，行制表 (U + 000B)、 换页符 (U + 000 C)，(U + 000d)、 回车。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-951">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-952">下面的示例演示<xref:System.Char.IsWhiteSpace%28System.Char%29>方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-952">The following example demonstrates the <xref:System.Char.IsWhiteSpace%28System.Char%29> method.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : string * int -&gt; bool" Usage="System.char.IsWhiteSpace (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-953">A string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-953">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bfe2e-954">The position of the character to evaluate in <c>s</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-954">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-955">Indicates whether the character at the specified position in a specified string is categorized as white space.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-955">Indicates whether the character at the specified position in a specified string is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-956">
            <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-956">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-957">从零开始的索引字符串中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-957">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="bfe2e-958">空白字符都是以下 Unicode 字符：</span><span class="sxs-lookup"><span data-stu-id="bfe2e-958">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="bfe2e-959">成员<xref:System.Globalization.UnicodeCategory.SpaceSeparator>类别，包括空间的字符 (U + 0020)，无中断空格 (U + 00A0)、 欧甘文空间将标记 (U + 1680)，EN 四 (U + 2000)，EM 四 (U + 2001)，EN 空间 (U + 2002)，EM 空间 (U + 2003)，由三个每个 EM 空间 （U + 2004 年），四个每个 EM 空间 (U+ 2005)，每个 EM 六个空间 (U + 2006)，数字空格 (U + 2007)，标点空间 (U + 2008)，精简空间 （U + 2009 年），细空格 (U + 200A)、 窄无中断空格 (U + 202F)、 中等数学空间 (U + 205F) 和表意空格 (U + 3000)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-959">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="bfe2e-960">成员<xref:System.Globalization.UnicodeCategory.LineSeparator>类别，只包含行分隔符字符 (U + 2028)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-960">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="bfe2e-961">成员<xref:System.Globalization.UnicodeCategory.ParagraphSeparator>类别，只包含段落分隔符字符 (U + 2029)。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-961">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="bfe2e-962">字符表的字符 (U + 0009)，接下来行 (U + 0085) 和行源 (U + 000A)，行制表 (U + 000B)、 换页符 (U + 000 C)，(U + 000d)、 回车。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-962">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-963">下面的代码示例演示<xref:System.Char.IsWhiteSpace%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-963">The following code example demonstrates <xref:System.Char.IsWhiteSpace%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-964">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-964">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bfe2e-965">
            <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-965">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const char MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxValue;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : char" Usage="System.char.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-966">Represents the largest possible value of a <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-966">Represents the largest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="bfe2e-967">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-967">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-968">此常量的值是十六进制 0xFFFF。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-968">The value of this constant is hexadecimal 0xFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const char MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinValue;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : char" Usage="System.char.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-969">Represents the smallest possible value of a <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-969">Represents the smallest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="bfe2e-970">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-970">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-971">此常量的值是十六进制 0x00。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-971">The value of this constant is hexadecimal 0x00.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static char Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; char" Usage="System.char.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-972">A string that contains a single character, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-972">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-973">Converts the value of the specified string to its equivalent Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-973">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-974">A Unicode character equivalent to the sole character in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-974">A Unicode character equivalent to the sole character in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bfe2e-975">下面的代码示例演示<xref:System.Char.Parse%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-975">The following code example demonstrates <xref:System.Char.Parse%2A>.</span></span>  
  
 [!code-cpp[System.Char.Parse#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Parse/CPP/parse.cpp#15)]
 [!code-csharp[System.Char.Parse#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Parse/CS/parse.cs#15)]
 [!code-vb[System.Char.Parse#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Parse/VB/parse.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-976">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-976">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="bfe2e-977">The length of <paramref name="s" /> is not 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-977">The length of <paramref name="s" /> is not 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-978">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-978">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-979">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-979">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="bfe2e-980">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-980">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-981">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-981">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="bfe2e-982">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-982">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bfe2e-983">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-983">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-984">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-984">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-985">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-985">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-986">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-986">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-987">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-987">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bfe2e-988">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-988">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bfe2e-989">建议的替代项是调用<xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-989">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-990">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-990">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-991">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-991">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-992">The value of the current <see cref="T:System.Char" /> object unchanged.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-992">The value of the current <see cref="T:System.Char" /> object unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-993">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-993">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bfe2e-994">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-994">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-995">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-995">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-996">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-996">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="bfe2e-997">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-997">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-998">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-998">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bfe2e-999">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-999">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-1000">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1000">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1001">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1001">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="bfe2e-1002">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1002">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1003">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1003">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bfe2e-1004">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1004">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-1005">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1005">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1006">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1006">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="bfe2e-1007">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1007">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1008">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1008">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bfe2e-1009">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1009">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-1010">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1010">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1011">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1011">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1012">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1012">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1013">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1013">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bfe2e-1014">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1014">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bfe2e-1015">建议的替代项是调用<xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1015">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-1016">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1016">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1017">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1017">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1018">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1018">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1019">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1019">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bfe2e-1020">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1020">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bfe2e-1021">建议的替代项是调用<xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1021">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-1022">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1022">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1023">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1023">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1024">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1024">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1025">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1025">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bfe2e-1026">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1026">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bfe2e-1027">建议的替代项是调用<xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1027">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-1028">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1028">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1029">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1029">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1030">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1030">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1031">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1031">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bfe2e-1032">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1032">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bfe2e-1033">建议的替代项是调用<xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1033">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-1034">This parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1034">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1035">**Note** This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1035">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="bfe2e-1036">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1036">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1037">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1037">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bfe2e-1038">This conversion is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1038">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bfe2e-1039">A <see cref="T:System.Type" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1039">A <see cref="T:System.Type" /> object.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="bfe2e-1040">An <see cref="T:System.IFormatProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1040">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1041">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1041">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1042">An object of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1042">An object of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1043">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1043">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bfe2e-1044">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1044">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bfe2e-1045">建议的替代项是调用<xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29>方法相反。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1045">The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-1046">
            <paramref name="type" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1046">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="bfe2e-1047">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1047">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-1048">An <see cref="T:System.IFormatProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1048">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="bfe2e-1049">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1049">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1050">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1050">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1051">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1051">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1052">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1052">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bfe2e-1053">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1053">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bfe2e-1054">建议的替代项是调用<xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1054">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-1055">An <see cref="T:System.IFormatProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1055">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="bfe2e-1056">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1056">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1057">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1057">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1058">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1058">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1059">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1059">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bfe2e-1060">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1060">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bfe2e-1061">建议的替代项是调用<xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1061">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-1062">An <see cref="T:System.IFormatProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1062">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="bfe2e-1063">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1063">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1064">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1064">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1065">The converted value of the current <see cref="T:System.Char" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1065">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1066">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1066">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bfe2e-1067">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1067">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="bfe2e-1068">建议的替代项是调用<xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1068">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-1069">Converts the value of a Unicode character to its lowercase equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1069">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c);" />
      <MemberSignature Language="F#" Value="static member ToLower : char -&gt; char" Usage="System.char.ToLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-1070">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1070">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1071">Converts the value of a Unicode character to its lowercase equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1071">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1072">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1072">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1073">获取当前区域性的大小写规则。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1073">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="bfe2e-1074">使用<xref:System.String.ToLower%2A?displayProperty=nameWithType>将字符串转换为小写形式。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1074">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-1075">下面的示例演示<xref:System.Char.ToLower%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1075">The following example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="bfe2e-1076">
            <para>中所述 [使用 Strings](~/docs/standard/base-types/best-practices-strings.md) 有关最佳做法，我们建议你避免调用替换为默认值的字符大小写和字符串大小写的方法。相反，应调用需要使用参数来显式指定的方法。若要为通过使用当前区域性的大小写约定小写的字符转换，调用<see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />的值的方法重载<see cref="P:System.Globalization.CultureInfo.CurrentCulture" />有关其<paramref name="culture" />参数。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1076">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values. Instead, you should call methods that require parameters to be explicitly specified. To convert a character to lowercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToLower : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToLower (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-1077">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1077">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bfe2e-1078">An object that supplies culture-specific casing rules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1078">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1079">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1079">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1080">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1080">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1081">使用<xref:System.String.ToLower%2A?displayProperty=nameWithType>将字符串转换为小写形式。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1081">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-1082">下面的代码示例演示<xref:System.Char.ToLower%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1082">The following code example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-1083">
            <paramref name="culture" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1083">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static char ToLowerInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLowerInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLowerInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLowerInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToLowerInvariant : char -&gt; char" Usage="System.char.ToLowerInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-1084">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1084">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1085">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1085">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1086">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1086">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1087">如果你的应用程序不受当前的区域性，并且依赖于可预测的方式更改字符的大小写，则使用<xref:System.Char.ToLowerInvariant%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1087">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method.</span></span> <span data-ttu-id="bfe2e-1088"><xref:System.Char.ToLowerInvariant%2A>方法相当于`ToLower(Char, CultureInfo.InvariantCulture)`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1088">The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="bfe2e-1089">使用<xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType>将字符串转换为小写形式。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1089">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-1090">Converts the value of this instance to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1090">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="char.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-1091">Converts the value of this instance to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1091">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1092">The string representation of the value of this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1092">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bfe2e-1093">下面的代码示例演示<xref:System.Char.ToString%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1093">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (c As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char c);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.char.ToString c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-1094">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1094">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1095">Converts the specified Unicode character to its equivalent string representation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1095">Converts the specified Unicode character to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1096">The string representation of the value of <paramref name="c" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1096">The string representation of the value of <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bfe2e-1097">下面的代码示例演示<xref:System.Char.ToString%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1097">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="char.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="bfe2e-1098">(Reserved) An object that supplies culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1098">(Reserved) An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1099">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1099">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1100">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1100">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1101">`provider`忽略参数; 不参与此操作。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1101">The `provider` parameter is ignored; it does not participate in this operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-1102">下面的代码示例演示的重载<xref:System.Char.ToString%2A>。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1102">The following code example demonstrates an overload of <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bfe2e-1103">Converts the value of a Unicode character to its uppercase equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1103">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char -&gt; char" Usage="System.char.ToUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-1104">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1104">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1105">Converts the value of a Unicode character to its uppercase equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1105">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1106">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1106">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1107">获取当前区域性的大小写规则。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1107">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="bfe2e-1108">使用<xref:System.String.ToUpper%2A?displayProperty=nameWithType>将字符串转换为大写形式。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1108">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-1109">下面的示例将数组中的每个字符转换为其大写等效项。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1109">The following example converts each character in an array to its uppercase equivalent.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper1.cs#1)]
 [!code-vb[System.Char.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="bfe2e-1110">
            <para>中所述 [使用 Strings](~/docs/standard/base-types/best-practices-strings.md) 有关最佳做法，我们建议你避免调用替换为默认值的字符大小写和字符串大小写的方法。相反，应调用需要使用参数来显式指定的方法。若要为通过使用当前区域性的大小写约定大写的字符转换，调用<see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />的值的方法重载<see cref="P:System.Globalization.CultureInfo.CurrentCulture" />有关其<paramref name="culture" />参数。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1110">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values. Instead, you should call methods that require parameters to be explicitly specified. To convert a character to uppercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToUpper (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-1111">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1111">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bfe2e-1112">An object that supplies culture-specific casing rules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1112">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1113">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1113">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1114">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1114">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1115">使用<xref:System.String.ToUpper%2A?displayProperty=nameWithType>将字符串转换为大写形式。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1115">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-1116">下面的示例将数组中的每个字符转换为 EN-US 区域性、 固定区域性，和 TR-TR 区域性其大写等效项。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1116">The following example converts each character in an array to its uppercase equivalent for the en-US culture, the invariant culture, and the tr-TR culture.</span></span> <span data-ttu-id="bfe2e-1117">在此示例中，每个小写字母的大写等效项等同于一种情况下除外的所有区域性。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1117">In this example, the uppercase equivalent of each lowercase letter is identical for all cultures except for one case.</span></span> <span data-ttu-id="bfe2e-1118">小写字母"i"字符 (U + 0069) 转换为"I"(U + 0049) 中的 EN-US 和固定区域性中，但"İ"(U + 0130) TR-TR 区域性中。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1118">The lowercase "i" character (U+0069) converts to "I" (U+0049) in the en-US and invariant cultures, but to "İ" (U+0130) in the tr-TR culture.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper5.cs#2)]
 [!code-vb[System.Char.ToUpper#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper5.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bfe2e-1119">
            <paramref name="culture" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1119">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static char ToUpperInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpperInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpperInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpperInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpperInvariant : char -&gt; char" Usage="System.char.ToUpperInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="bfe2e-1120">The Unicode character to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1120">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1121">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1121">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1122">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1122">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1123">如果你的应用程序不受当前的区域性，并且依赖于可预测的方式更改字符的大小写，使用<xref:System.Char.ToUpperInvariant%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1123">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.</span></span>  <span data-ttu-id="bfe2e-1124"><xref:System.Char.ToUpperInvariant%2A>方法相当于`ToUpper(Char, CultureInfo.InvariantCulture)`。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1124">The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="bfe2e-1125">使用<xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType>将字符串转换为大写形式。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1125">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out char result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] char&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.TryParse(System.String,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] char % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.char.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Char&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="bfe2e-1126">A string that contains a single character, or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1126">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="bfe2e-1127">When this method returns, contains a Unicode character equivalent to the sole character in <c>s</c>, if the conversion succeeded, or an undefined value if the conversion failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1127">When this method returns, contains a Unicode character equivalent to the sole character in <c>s</c>, if the conversion succeeded, or an undefined value if the conversion failed.</span>
          </span>
          <span data-ttu-id="bfe2e-1128">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or the length of <c>s</c> is not 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1128">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or the length of <c>s</c> is not 1.</span>
          </span>
          <span data-ttu-id="bfe2e-1129">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1129">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfe2e-1130">Converts the value of the specified string to its equivalent Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1130">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
          <span data-ttu-id="bfe2e-1131">A return code indicates whether the conversion succeeded or failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1131">A return code indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfe2e-1132">
            <see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfe2e-1132">
              <see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe2e-1133"><xref:System.Char.TryParse%2A>方法就像是<xref:System.Char.Parse%2A>方法，除了<xref:System.Char.TryParse%2A>方法不会引发异常，如果转换失败。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1133">The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe2e-1134">下面的代码示例演示如何重载<xref:System.Char.TryParse%2A>多个基类型，方法与<xref:System.DateTime.TryParseExact%2A>方法<xref:System.DateTime>基类型。</span><span class="sxs-lookup"><span data-stu-id="bfe2e-1134">The following code example demonstrates overloads of the <xref:System.Char.TryParse%2A> method for several base types, and the <xref:System.DateTime.TryParseExact%2A> method for the <xref:System.DateTime> base type.</span></span>  
  
 [!code-cpp[T.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.TryParse/CPP/tp.cpp#1)]
 [!code-csharp[T.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.TryParse/CS/tp.cs#1)]
 [!code-vb[T.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.TryParse/VB/tp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>