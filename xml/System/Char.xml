<Type Name="Char" FullName="System.Char">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d749c6a63f9748e113f570ba94e2982062f0213d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39854157" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit char extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;char&gt;, class System.IConvertible, class System.IEquatable`1&lt;char&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Char" />
  <TypeSignature Language="VB.NET" Value="Public Structure Char&#xA;Implements IComparable, IComparable(Of Char), IConvertible, IEquatable(Of Char)" />
  <TypeSignature Language="C++ CLI" Value="public value class Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="F#" Value="type char = struct&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Char&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9cecc-101">将字符表示为 UTF-16 代码单位。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9cecc-101">Represents a character as a UTF-16 code unit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-102">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]使用<xref:System.Char>结构来表示 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-102">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character.</span></span> <span data-ttu-id="9cecc-103">Unicode 标准用名为一个码位的唯一 21 位标量数字标识的每个 Unicode 字符，并定义指定如何将码位编码为一个或多个 16 位值的一个序列的 UTF 16 编码形式。</span><span class="sxs-lookup"><span data-stu-id="9cecc-103">The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values.</span></span> <span data-ttu-id="9cecc-104">每个 16 位值范围是从十六进制 0x0000 到 0xFFFF 并存储在<xref:System.Char>结构。</span><span class="sxs-lookup"><span data-stu-id="9cecc-104">Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.</span></span>  <span data-ttu-id="9cecc-105">值<xref:System.Char>对象是其 16 位数字 （序号） 值。</span><span class="sxs-lookup"><span data-stu-id="9cecc-105">The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.</span></span>  
  
 <span data-ttu-id="9cecc-106">以下各部分分别之间的关系<xref:System.Char>对象和一个字符，并讨论一些常见的任务执行<xref:System.Char>实例。</span><span class="sxs-lookup"><span data-stu-id="9cecc-106">The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.</span></span>  
  
 <span data-ttu-id="9cecc-107">[Char 对象、 Unicode 字符和字符串](#Relationship) </span><span class="sxs-lookup"><span data-stu-id="9cecc-107">[Char objects, Unicode characters, and strings](#Relationship) </span></span>  
 <span data-ttu-id="9cecc-108">[字符和字符类别](#Categories) </span><span class="sxs-lookup"><span data-stu-id="9cecc-108">[Characters and character categories](#Categories) </span></span>  
 <span data-ttu-id="9cecc-109">[字符和文本元素](#Elements) </span><span class="sxs-lookup"><span data-stu-id="9cecc-109">[Characters and text elements](#Elements) </span></span>  
 <span data-ttu-id="9cecc-110">[常见的操作](#Operations) </span><span class="sxs-lookup"><span data-stu-id="9cecc-110">[Common operations](#Operations) </span></span>  
 [<span data-ttu-id="9cecc-111">Char 值和互操作</span><span class="sxs-lookup"><span data-stu-id="9cecc-111">Char values and interop</span></span>](#Interop)  
  
<a name="Relationship"></a>   
## <a name="char-objects-unicode-characters-and-strings"></a><span data-ttu-id="9cecc-112">Char 对象、 Unicode 字符和字符串</span><span class="sxs-lookup"><span data-stu-id="9cecc-112">Char objects, Unicode characters, and strings</span></span>  
 <span data-ttu-id="9cecc-113">一个<xref:System.String>对象是的有序集合<xref:System.Char>表示的文本字符串的结构。</span><span class="sxs-lookup"><span data-stu-id="9cecc-113">A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text.</span></span> <span data-ttu-id="9cecc-114">大多数的 Unicode 字符可表示由单个<xref:System.Char>对象由多个表示代理项对和/或组合字符序列，编码为基字符的字符但<xref:System.Char>对象。</span><span class="sxs-lookup"><span data-stu-id="9cecc-114">Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="9cecc-115">出于此原因，<xref:System.Char>结构中<xref:System.String>对象并不一定等同于单个 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-115">For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.</span></span>  
  
 <span data-ttu-id="9cecc-116">多个 16 位代码单元用于表示单个 Unicode 字符，在以下情况下：</span><span class="sxs-lookup"><span data-stu-id="9cecc-116">Multiple 16-bit code units are used to represent single Unicode characters in the following cases:</span></span>  
  
-   <span data-ttu-id="9cecc-117">标志符号，可能包含单个字符或个基字符后跟一个或多个组合字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-117">Glyphs, which may consist of a single character or of a base character followed by one or more combining characters.</span></span> <span data-ttu-id="9cecc-118">例如，由一个表示字符 ä<xref:System.Char>对象单位是 U + 0061 跟一个其代码<xref:System.Char>对象，其代码单元为 U + 0308年。</span><span class="sxs-lookup"><span data-stu-id="9cecc-118">For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308.</span></span> <span data-ttu-id="9cecc-119">(还可通过一个单一定义字符？ ¤<xref:System.Char>对象，它具有一个代码单元的 U + 00E4。)下面的示例说明了字符？ ¤ 包含两个<xref:System.Char>对象。</span><span class="sxs-lookup"><span data-stu-id="9cecc-119">(The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.</span></span>  
  
     [!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]
     [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]  
  
-   <span data-ttu-id="9cecc-120">Unicode 基本多语言平面 (BMP) 外的字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-120">Characters outside the Unicode Basic Multilingual Plane (BMP).</span></span> <span data-ttu-id="9cecc-121">Unicode 支持 BMP、 表示平面 0 除了十六个平面。</span><span class="sxs-lookup"><span data-stu-id="9cecc-121">Unicode supports sixteen planes in addition to the BMP, which represents plane 0.</span></span> <span data-ttu-id="9cecc-122">Unicode 码位表示 UTF-32 中包括平面的 21 位值。</span><span class="sxs-lookup"><span data-stu-id="9cecc-122">A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane.</span></span> <span data-ttu-id="9cecc-123">例如，U + 1D160 表示音乐符号第八个注释字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-123">For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character.</span></span> <span data-ttu-id="9cecc-124">因为 utf-16 编码仅 16 位，由以 utf-16 代理项对表示位于 BMP 之外的字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-124">Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16.</span></span> <span data-ttu-id="9cecc-125">下面的示例说明了 U + 1D160，音乐符号第八个注释字符的 UTF-32 等效项是 U + D834 U + DD60。</span><span class="sxs-lookup"><span data-stu-id="9cecc-125">The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60.</span></span> <span data-ttu-id="9cecc-126">U + D834 是高代理项;从 u+d800 到 U + DBFF 的高代理项范围。</span><span class="sxs-lookup"><span data-stu-id="9cecc-126">U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF.</span></span> <span data-ttu-id="9cecc-127">U + DD60 是低代理项;低代理项是从 U+DC00 到 U + DFFF 的范围。</span><span class="sxs-lookup"><span data-stu-id="9cecc-127">U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.</span></span>  
  
     [!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]
     [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]  
  
<a name="Categories"></a>   
## <a name="characters-and-character-categories"></a><span data-ttu-id="9cecc-128">字符和字符类别</span><span class="sxs-lookup"><span data-stu-id="9cecc-128">Characters and character categories</span></span>  
 <span data-ttu-id="9cecc-129">每个 Unicode 字符或有效的代理项对属于 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-129">Each Unicode character or valid surrogate pair belongs to a Unicode category.</span></span> <span data-ttu-id="9cecc-130">在.NET Framework 中，Unicode 类别的成员由表示<xref:System.Globalization.UnicodeCategory>枚举和包括的值如下所述<xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>， <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>，和<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>，例如。</span><span class="sxs-lookup"><span data-stu-id="9cecc-130">In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, and <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, for example.</span></span>  
  
 <span data-ttu-id="9cecc-131">若要确定一个字符的 Unicode 类别，请调用<xref:System.Char.GetUnicodeCategory%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-131">To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method.</span></span> <span data-ttu-id="9cecc-132">例如，下面的示例调用<xref:System.Char.GetUnicodeCategory%2A>字符串中显示的每个字符的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-132">For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.</span></span>  
  
 [!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]
 [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]  
  
 <span data-ttu-id="9cecc-133">在内部，对字符超出 ASCII 范围 (U + 0000 到 U + 00FF)，<xref:System.Char.GetUnicodeCategory%2A>方法取决于所报告的 Unicode 类别<xref:System.Globalization.CharUnicodeInfo>类。</span><span class="sxs-lookup"><span data-stu-id="9cecc-133">Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class.</span></span> <span data-ttu-id="9cecc-134">从开始[!INCLUDE[net_v462](~/includes/net-v462-md.md)]，Unicode 字符的分类基于[Unicode 标准、 版本 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-134">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="9cecc-135">在从.NET Framework 的版本[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]到[!INCLUDE[net_v461](~/includes/net-v461-md.md)]，它们的分类基于[Unicode 标准、 6.3.0 版](https://www.unicode.org/versions/Unicode6.3.0/)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-135">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
<a name="Elements"></a>   
## <a name="characters-and-text-elements"></a><span data-ttu-id="9cecc-136">字符和文本元素</span><span class="sxs-lookup"><span data-stu-id="9cecc-136">Characters and text elements</span></span>  
 <span data-ttu-id="9cecc-137">因为可以由多个表示单个字符<xref:System.Char>对象，它并不总是有意义，以便使用个人<xref:System.Char>对象。</span><span class="sxs-lookup"><span data-stu-id="9cecc-137">Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects.</span></span> <span data-ttu-id="9cecc-138">例如，下面的示例将转换为 utf-16 编码代码单位表示爱琴海的数字为 0 到 9 的 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="9cecc-138">For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units.</span></span> <span data-ttu-id="9cecc-139">因为错误地等同<xref:System.Char>对象包含的字符，它不正确地报告生成的字符串具有 20 个字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-139">Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.</span></span>  
  
 [!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]
 [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]  
  
 <span data-ttu-id="9cecc-140">您可以执行以下操作来避免假设的<xref:System.Char>对象表示单个字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-140">You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.</span></span>  
  
-   <span data-ttu-id="9cecc-141">您可以使用<xref:System.String>中而不是其各个字符来表示和分析语言内容处理整个对象。</span><span class="sxs-lookup"><span data-stu-id="9cecc-141">You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.</span></span>  
  
-   <span data-ttu-id="9cecc-142">可以使用<xref:System.Globalization.StringInfo>类来处理文本元素而不是个人<xref:System.Char>对象。</span><span class="sxs-lookup"><span data-stu-id="9cecc-142">You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects.</span></span> <span data-ttu-id="9cecc-143">下面的示例使用<xref:System.Globalization.StringInfo>对象中包含的爱琴的字符串的文本元素数目进行计数数字零到 9。</span><span class="sxs-lookup"><span data-stu-id="9cecc-143">The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine.</span></span> <span data-ttu-id="9cecc-144">它将代理项对视为单个字符，因为它正确地报告该字符串包含 10 个字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-144">Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.</span></span>  
  
     [!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]
     [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]  
  
-   <span data-ttu-id="9cecc-145">如果字符串包含基本字符具有一个或多个组合字符，则可以调用<xref:System.String.Normalize%2A?displayProperty=nameWithType>方法将子字符串转换为单一的 utf-16 编码的代码单元。</span><span class="sxs-lookup"><span data-stu-id="9cecc-145">If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the substring to a single UTF-16 encoded code unit.</span></span> <span data-ttu-id="9cecc-146">下面的示例调用<xref:System.String.Normalize%2A?displayProperty=nameWithType>方法将基本字符 U + 0061 (拉丁文小写字母 A) 和组合字符 U + 0308 （组合以分音符） 转换为 U + 00E4 （拉丁文小写字母与分音符）。</span><span class="sxs-lookup"><span data-stu-id="9cecc-146">The following example calls the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).</span></span>  
  
     [!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]
     [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="9cecc-147">常见的操作</span><span class="sxs-lookup"><span data-stu-id="9cecc-147">Common operations</span></span>  
 <span data-ttu-id="9cecc-148"><xref:System.Char>结构提供方法来比较<xref:System.Char>对象，将当前值转换<xref:System.Char>对象复制到另一种类型的对象，并确定的 Unicode 类别<xref:System.Char>对象：</span><span class="sxs-lookup"><span data-stu-id="9cecc-148">The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:</span></span>  
  
|<span data-ttu-id="9cecc-149">任务</span><span class="sxs-lookup"><span data-stu-id="9cecc-149">To do this</span></span>|<span data-ttu-id="9cecc-150">使用这些`System.Char`方法</span><span class="sxs-lookup"><span data-stu-id="9cecc-150">Use these `System.Char` methods</span></span>|  
|----------------|-------------------------------------|  
|<span data-ttu-id="9cecc-151">比较<xref:System.Char>对象</span><span class="sxs-lookup"><span data-stu-id="9cecc-151">Compare <xref:System.Char> objects</span></span>|<span data-ttu-id="9cecc-152"><xref:System.Char.CompareTo%2A> 和 <xref:System.Char.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="9cecc-152"><xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A></span></span>|  
|<span data-ttu-id="9cecc-153">将代码点转换为字符串</span><span class="sxs-lookup"><span data-stu-id="9cecc-153">Convert a code point to a string</span></span>|<xref:System.Char.ConvertFromUtf32%2A>|  
|<span data-ttu-id="9cecc-154">将转换<xref:System.Char>对象或代理项对的<xref:System.Char>码位的对象</span><span class="sxs-lookup"><span data-stu-id="9cecc-154">Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point</span></span>|<span data-ttu-id="9cecc-155">单个字符： <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="9cecc-155">For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span></span><br /><br /> <span data-ttu-id="9cecc-156">对于代理项对或字符串中的字符： <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="9cecc-156">For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="9cecc-157">获取一个字符的 Unicode 类别</span><span class="sxs-lookup"><span data-stu-id="9cecc-157">Get the Unicode category of a character</span></span>|<xref:System.Char.GetUnicodeCategory%2A>|  
|<span data-ttu-id="9cecc-158">确定字符是否为数字、 字母、 标点符号等特定 Unicode 类别中，控制字符，等等</span><span class="sxs-lookup"><span data-stu-id="9cecc-158">Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on</span></span>|<span data-ttu-id="9cecc-159"><xref:System.Char.IsControl%2A><xref:System.Char.IsDigit%2A>， <xref:System.Char.IsHighSurrogate%2A>， <xref:System.Char.IsLetter%2A>， <xref:System.Char.IsLetterOrDigit%2A>， <xref:System.Char.IsLower%2A>， <xref:System.Char.IsLowSurrogate%2A>， <xref:System.Char.IsNumber%2A>， <xref:System.Char.IsPunctuation%2A>， <xref:System.Char.IsSeparator%2A>， <xref:System.Char.IsSurrogate%2A>， <xref:System.Char.IsSurrogatePair%2A>， <xref:System.Char.IsSymbol%2A>， <xref:System.Char.IsUpper%2A>，和 <xref:System.Char.IsWhiteSpace%2A></span><span class="sxs-lookup"><span data-stu-id="9cecc-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A></span></span>|  
|<span data-ttu-id="9cecc-160">将转换<xref:System.Char>表示的数字为数值类型的对象</span><span class="sxs-lookup"><span data-stu-id="9cecc-160">Convert a <xref:System.Char> object that represents a number to a numeric value type</span></span>|<xref:System.Char.GetNumericValue%2A>|  
|<span data-ttu-id="9cecc-161">转换到字符串中的字符<xref:System.Char>对象</span><span class="sxs-lookup"><span data-stu-id="9cecc-161">Convert a character in a string into a <xref:System.Char> object</span></span>|<span data-ttu-id="9cecc-162"><xref:System.Char.Parse%2A> 和 <xref:System.Char.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="9cecc-162"><xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A></span></span>|  
|<span data-ttu-id="9cecc-163">将转换<xref:System.Char>对象传递给<xref:System.String>对象</span><span class="sxs-lookup"><span data-stu-id="9cecc-163">Convert a <xref:System.Char> object to a <xref:System.String> object</span></span>|<xref:System.Char.ToString%2A>|  
|<span data-ttu-id="9cecc-164">更改的大小写<xref:System.Char>对象</span><span class="sxs-lookup"><span data-stu-id="9cecc-164">Change the case of a <xref:System.Char> object</span></span>|<span data-ttu-id="9cecc-165"><xref:System.Char.ToLower%2A>、<xref:System.Char.ToLowerInvariant%2A>、<xref:System.Char.ToUpper%2A> 和 <xref:System.Char.ToUpperInvariant%2A></span><span class="sxs-lookup"><span data-stu-id="9cecc-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A></span></span>|  
  
<a name="Interop"></a>   
## <a name="char-values-and-interop"></a><span data-ttu-id="9cecc-166">Char 值和互操作</span><span class="sxs-lookup"><span data-stu-id="9cecc-166">Char values and interop</span></span>  
<span data-ttu-id="9cecc-167">当托管<xref:System.Char>类型，表示为一个 Unicode utf-16 编码的代码单元，传递到非托管代码，则默认情况下设置为 ANSI 字符转换为互操作封送处理程序。</span><span class="sxs-lookup"><span data-stu-id="9cecc-167">When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default.</span></span> <span data-ttu-id="9cecc-168">您可以将应用<xref:System.Runtime.InteropServices.DllImportAttribute>属性设置为平台调用声明并<xref:System.Runtime.InteropServices.StructLayoutAttribute>属性为 COM 互操作声明，以控制哪些字符集封送<xref:System.Char>类型使用。</span><span class="sxs-lookup"><span data-stu-id="9cecc-168">You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-169">下面的代码示例演示了一些中的方法<xref:System.Char>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-169">The following code example demonstrates some of the methods in <xref:System.Char>.</span></span>  
  
 [!code-cpp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char [Type Level]/CPP/charstructure.cpp#23)]
 [!code-csharp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char [Type Level]/CS/charstructure.cs#23)]
 [!code-vb[System.Char &#91;Type Level&#93;#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char [Type Level]/VB/charstructure.vb#23)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="9cecc-170">此类型所有成员都是线程安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9cecc-170">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="9cecc-171">看起来要修改实例状态的成员实际上返回使用新值进行初始化的新实例。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9cecc-171">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="9cecc-172">作为使用任何其他类型，读取和写入对共享变量包含此类型的实例必须受到使用锁来确保线程安全性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9cecc-172">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-173">将此实例与指定的对象或值类型进行比较，并指示此实例在排序顺序中是位于指定的对象或值类型之前、之后还是与其出现在同一位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(char value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : char -&gt; int&#xA;override this.CompareTo : char -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9cecc-174">要比较的 <see cref="T:System.Char" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-174">A <see cref="T:System.Char" /> object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-175">将此实例与指定的 <see cref="T:System.Char" /> 对象进行比较，并指示此实例在排序顺序中是位于指定的 <see cref="T:System.Char" /> 对象之前、之后还是与其出现在同一位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-176">一个有符号数字，指示此实例在排序顺序中相对于 <paramref name="value" /> 参数的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="9cecc-177">
            <list type="table">
              <listheader>
                <term> 返回值 </term>
                <description> 说明 </description>
              </listheader>
              <item>
                <term> 小于零 </term>
                <description> 此实例位于 <paramref name="value" /> 之前。</description>
              </item>
              <item>
                <term> 零  </term>
                <description> 此实例在排序顺序中与 <paramref name="value" /> 的位置相同。</description>
              </item>
              <item>
                <term> 大于零 </term>
                <description> 此实例位于 <paramref name="value" /> 之后。</description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-177">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-178">此方法实现<xref:System.IComparable%601?displayProperty=nameWithType>接口，并且执行略微优于<xref:System.Char.CompareTo%2A?displayProperty=nameWithType>方法因为它不具有要转换`value`参数的对象。</span><span class="sxs-lookup"><span data-stu-id="9cecc-178">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="9cecc-179">此方法执行的比较基于此实例的编码值和`value`，不是它们按字典编辑顺序的特征。</span><span class="sxs-lookup"><span data-stu-id="9cecc-179">The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics.</span></span>  
  
 <span data-ttu-id="9cecc-180">如果<xref:System.Char.CompareTo%2A>方法参数类型具有较少的位 （是更窄） 实例类型中，某些编程语言执行参数的值转换具有更多位数的值的隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="9cecc-180">If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="9cecc-181">例如，假设实例类型是<xref:System.Int32>且参数类型为<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-181">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="9cecc-182">Microsoft C# 编译器将生成表示形式的参数值的说明<xref:System.Int32>对象，然后生成<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>比较的值的方法<xref:System.Int32>实例和<xref:System.Int32>参数表示形式。</span><span class="sxs-lookup"><span data-stu-id="9cecc-182">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="9cecc-183">通常情况下，数值类型执行隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="9cecc-183">Typically, implicit widening conversions are performed on numeric types.</span></span> <span data-ttu-id="9cecc-184">请查阅您的编程语言的文档以确定其编译器是否执行扩大转换。</span><span class="sxs-lookup"><span data-stu-id="9cecc-184">Consult your programming language's documentation to determine if its compiler performs widening conversions.</span></span> <span data-ttu-id="9cecc-185">如果实例和参数类型不匹配和没有合适的转换不可用，编译器将生成说明框参数并调用<xref:System.Char.CompareTo%2A>重载采用<xref:System.Object>参数。</span><span class="sxs-lookup"><span data-stu-id="9cecc-185">If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-186">下面的代码示例演示了泛型和非泛型版本的`CompareTo`多个值和引用类型的方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-186">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9cecc-187">要与此实例比较的对象，或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-187">An object to compare this instance to, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-188">将此实例与指定的对象进行比较，并指示此实例在排序顺序中是位于指定的 <see cref="T:System.Object" /> 之前、之后还是与其出现在同一位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-188">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-189">一个有符号数字，指示此实例在排序顺序中相对于 <paramref name="value" /> 参数的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-189">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="9cecc-190">
            <list type="table">
              <listheader>
                <term> 返回值 </term>
                <description> 说明 </description>
              </listheader>
              <item>
                <term> 小于零 </term>
                <description> 此实例位于 <paramref name="value" /> 之前。</description>
              </item>
              <item>
                <term> 零  </term>
                <description> 此实例在排序顺序中与 <paramref name="value" /> 的位置相同。</description>
              </item>
              <item>
                <term> 大于零  </term>
                <description> 此实例位于 <paramref name="value" /> 之后。  -或-  <paramref name="value" /> 为 <see langword="null" />。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-190">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-191"><xref:System.Char.CompareTo%2A>方法实现<xref:System.IComparable>接口。</span><span class="sxs-lookup"><span data-stu-id="9cecc-191">The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="9cecc-192">`value`参数必须是`null`的实例或<xref:System.Char>; 否则为将引发异常。</span><span class="sxs-lookup"><span data-stu-id="9cecc-192">The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="9cecc-193">此方法执行的比较基于此实例的编码值和`value`，不一定是它们按字典编辑顺序的特征。</span><span class="sxs-lookup"><span data-stu-id="9cecc-193">The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics.</span></span> <span data-ttu-id="9cecc-194">任何实例<xref:System.Char>，而不考虑其值被视为大于`null`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-194">Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-195">下面的代码示例演示了<xref:System.Char.CompareTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-195">The following code example demonstrates <xref:System.Char.CompareTo%2A>.</span></span>  
  
 [!code-cpp[System.Char.CompareTo#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.CompareTo/CPP/compareto.cpp#19)]
 [!code-csharp[System.Char.CompareTo#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.CompareTo/CS/compareto.cs#19)]
 [!code-vb[System.Char.CompareTo#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.CompareTo/VB/compareto.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9cecc-196">
            <paramref name="value" /> 不是 <see cref="T:System.Char" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-196">
              <paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromUtf32">
      <MemberSignature Language="C#" Value="public static string ConvertFromUtf32 (int utf32);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConvertFromUtf32(int32 utf32) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertFromUtf32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertFromUtf32 (utf32 As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConvertFromUtf32(int utf32);" />
      <MemberSignature Language="F#" Value="static member ConvertFromUtf32 : int -&gt; string" Usage="System.char.ConvertFromUtf32 utf32" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf32" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf32">
          <span data-ttu-id="9cecc-197">21 位 Unicode 码位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-197">A 21-bit Unicode code point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-198">将指定的 Unicode 码位转换为 UTF-16 编码字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-198">Converts the specified Unicode code point into a UTF-16 encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-199">由一个 <see cref="T:System.Char" /> 对象或一个 <see cref="T:System.Char" /> 对象的代理项对组成的字符串，等效于 <paramref name="utf32" /> 参数所指定的码位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-199">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-200">使用此方法将转换为 utf-16 编码字符串的 21 位 Unicode 码位，如使用方法测试字符串之前<xref:System.Char.IsLowSurrogate%28System.Char%29>和<xref:System.Char.IsHighSurrogate%28System.Char%29>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-200">Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span></span>  
  
 <span data-ttu-id="9cecc-201">有效的码位外部基本多语言平面 (BMP) 始终会将一个有效的代理项对。</span><span class="sxs-lookup"><span data-stu-id="9cecc-201">A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair.</span></span> <span data-ttu-id="9cecc-202">但是，BMP 内的有效的代码点可能会产生有效的结果根据 Unicode 标准，因为在转换中不使用任何语言的处理。</span><span class="sxs-lookup"><span data-stu-id="9cecc-202">However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion.</span></span> <span data-ttu-id="9cecc-203">因此，使用<xref:System.Text.UTF32Encoding?displayProperty=nameWithType>类将 UTF-32 数据大容量到大容量 utf-16 数据。</span><span class="sxs-lookup"><span data-stu-id="9cecc-203">For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class to convert bulk UTF-32 data into bulk UTF-16 data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-204">下面的代码示例演示<xref:System.Char.ConvertToUtf32%2A>和<xref:System.Char.ConvertFromUtf32%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-204">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-205">
            <paramref name="utf32" /> 不是一个从 U+0 到 U+10FFFF 范围内的有效 21 位 Unicode 码位（从 U+D800 到 U+DFFF 范围的代理项对除外）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-205">
              <paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToUtf32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-206">将 UTF-16 编码的代理项对的值转换为 Unicode 码位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-206">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (highSurrogate As Char, lowSurrogate As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : char * char -&gt; int" Usage="System.char.ConvertToUtf32 (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="9cecc-207">高代理项代码单位（即代码单位从 U+D800 到 U+DBFF）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-207">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="9cecc-208">低代理项代码单位（即代码单位从 U+DC00 到 U+DFFF）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-208">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-209">将 UTF-16 编码的代理项对的值转换为 Unicode 码位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-209">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-210">
            <paramref name="highSurrogate" /> 和 <paramref name="lowSurrogate" /> 参数表示的 21 位 Unicode 码位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-210">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-211">使用此方法以将代理项对转换为 21 位 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="9cecc-211">Use this method to convert a surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="9cecc-212">若要将 utf-16 数据转换为 UTF-32 数据，请使用<xref:System.Text.UTF32Encoding?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="9cecc-212">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="9cecc-213">通常，utf-16 编码为 16 位代码单元表示单个 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-213">Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit.</span></span> <span data-ttu-id="9cecc-214">但是，它还支持的代理项对，从而允许单个抽象字符而无法表示为两个 16 位代码单元。</span><span class="sxs-lookup"><span data-stu-id="9cecc-214">However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units.</span></span> <span data-ttu-id="9cecc-215">这两个<xref:System.Char>对象必须具有代码单位从 u+d800 到 U + DBFF 的第一个 （高） 的代理项和 U + DC00 到 U + DFFF 的第二个 （低） 的代理项的范围。</span><span class="sxs-lookup"><span data-stu-id="9cecc-215">These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate.</span></span> <span data-ttu-id="9cecc-216">只支持 utf-16 代理项对编码。</span><span class="sxs-lookup"><span data-stu-id="9cecc-216">Surrogate pairs are supported only by UTF-16 encoding.</span></span> <span data-ttu-id="9cecc-217">此方法允许将 utf-16 代理项对表示要转换为使用 UTF-32 编码的字符的字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-217">This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-218">下面的代码示例演示<xref:System.Char.ConvertToUtf32%2A>和<xref:System.Char.ConvertFromUtf32%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-218">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-219">
            <paramref name="highSurrogate" /> 不在 U + D800 到 U + DBFF 的范围内，或者 <paramref name="lowSurrogate" /> 不在 U + DC00 到 U+DFFF 的范围内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-219">
              <paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : string * int -&gt; int" Usage="System.char.ConvertToUtf32 (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-220">包含字符或代理项对的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-220">A string that contains a character or surrogate pair.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-221">字符或代理项对在 <c>s</c> 中的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-221">The index position of the character or surrogate pair in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-222">将字符串中指定位置的 UTF-16 编码字符或代理项对的值转换为 Unicode 码位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-222">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-223">字符或代理项对表示的 21 位 Unicode 码位，该字符或代理项对在 <paramref name="s" /> 参数中的位置由 <paramref name="index" /> 参数指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-223">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-224">使用此方法将为 21 位 Unicode 码位转换的字符或代理项对。</span><span class="sxs-lookup"><span data-stu-id="9cecc-224">Use this method to convert a character or surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="9cecc-225">若要将 utf-16 数据转换为 UTF-32 数据，请使用<xref:System.Text.UTF32Encoding?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="9cecc-225">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-226">下面的代码示例演示<xref:System.Char.ConvertToUtf32%2A>和<xref:System.Char.ConvertFromUtf32%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-226">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>  
  
 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-227">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-227">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-228">
            <paramref name="index" /> 不是 <paramref name="s" /> 内的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-228">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9cecc-229">指定的索引位置包含代理项对，且对中的第一个字符不是有效的高代理项或对中的第二个字符不是有效的低代理项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-229">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-230">返回一个值，该值指示此实例是否与指定的对象或 <see cref="T:System.Char" /> 值相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-230">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (char obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(char obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(char obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : char -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9cecc-231">要与此实例进行比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-231">An object to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-232">返回一个值，该值指示此实例是否与指定的 <see cref="T:System.Char" /> 对象相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-232">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-233">如果 <paramref name="obj" /> 参数等于此实例的值，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-233">
              <see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-234">此方法实现<xref:System.IEquatable%601?displayProperty=nameWithType>接口，并且执行略微优于<xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType>因为它不需要要取消装箱`obj`参数。</span><span class="sxs-lookup"><span data-stu-id="9cecc-234">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> because it does not need to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9cecc-235">要与此示例比较的对象，或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-235">An object to compare with this instance or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-236">返回一个值，该值指示此实例是否与指定的对象相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-236">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-237">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.Char" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-237">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-238">此方法执行的比较基于此实例的编码值和`obj`，不一定是它们按字典编辑顺序的特征。</span><span class="sxs-lookup"><span data-stu-id="9cecc-238">The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-239">下面的代码示例演示了<xref:System.Char.Equals%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-239">The following code example demonstrates <xref:System.Char.Equals%2A>.</span></span>  
  
 [!code-cpp[System.Char.Equals#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Equals/CPP/equals.cpp#20)]
 [!code-csharp[System.Char.Equals#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Equals/CS/equals.cs#20)]
 [!code-vb[System.Char.Equals#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Equals/VB/equals.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="char.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-240">返回此实例的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-240">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-241">32 位有符号整数哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-241">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-242">将指定的数字 Unicode 字符转换为双精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-242">Converts a specified numeric Unicode character to a double-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (c As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char c);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; double" Usage="System.char.GetNumericValue c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-243">要转换的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-243">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-244">将指定的数字 Unicode 字符转换为双精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-244">Converts the specified numeric Unicode character to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-245">如果该字符表示数字，则数值为 <paramref name="c" />；否则为 -1.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-245">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-246">`c`参数必须是<xref:System.Char>数字值的表示形式。</span><span class="sxs-lookup"><span data-stu-id="9cecc-246">The `c` parameter must be the <xref:System.Char> representation of a numeric value.</span></span> <span data-ttu-id="9cecc-247">例如，如果`c`是"5"，则返回值为 5。</span><span class="sxs-lookup"><span data-stu-id="9cecc-247">For example, if `c` is "5", the return value is 5.</span></span> <span data-ttu-id="9cecc-248">但是，如果`c`是"z"的返回值为-1.0。</span><span class="sxs-lookup"><span data-stu-id="9cecc-248">However, if `c` is "z", the return value is -1.0.</span></span>  
  
 <span data-ttu-id="9cecc-249">当且仅当它是以下值之一的成员具有关联的数字值的字符<xref:System.Globalization.UnicodeCategory>类别： `DecimalDigitNumber`， `LetterNumber`，或`OtherNumber`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-249">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="9cecc-250"><xref:System.Char.GetNumericValue%2A>方法假设`c`对应于单一语言字符，并检查该字符是否可以转换为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="9cecc-250">The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="9cecc-251">但是，由两个表示 Unicode 标准中的某些数字<xref:System.Char>形成一个代理项对的对象。</span><span class="sxs-lookup"><span data-stu-id="9cecc-251">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="9cecc-252">例如，数字系统爱琴包含码位 U + 10107 至 U + 10133。</span><span class="sxs-lookup"><span data-stu-id="9cecc-252">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="9cecc-253">下面的示例使用<xref:System.Char.ConvertFromUtf32%2A>方法可实例化一个字符串，表示爱琴海的第一个。</span><span class="sxs-lookup"><span data-stu-id="9cecc-253">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="9cecc-254">中的示例所示，输出的形式<xref:System.Char.GetNumericValue%28System.Char%29>方法返回-1，如果它传递一个高代理项或低代理项的此字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-254">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]
 [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-255">下面的示例演示<xref:System.Char.GetNumericValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-255">The following example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : string * int -&gt; double" Usage="System.char.GetNumericValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-256">
            <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-256">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-257">
            <c>s</c> 中的字符位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-257">The character position in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-258">将指定字符串中位于指定位置的数字 Unicode 字符转换为双精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-258">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-259">如果 <paramref name="index" /> 中位于 <paramref name="s" /> 处的字符表示数字，则为该字符的数值；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-259">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-260">`s`参数必须是数字值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="9cecc-260">The `s` parameter must be the string representation of a numeric value.</span></span> <span data-ttu-id="9cecc-261">例如，如果位置处的字符`index`在`s`是"5"，则返回值为 5。</span><span class="sxs-lookup"><span data-stu-id="9cecc-261">For example, if the character at position `index` in `s` is "5", the return value is 5.</span></span> <span data-ttu-id="9cecc-262">但是，如果位置处的字符`index`在`s`是"z"的返回值为-1。</span><span class="sxs-lookup"><span data-stu-id="9cecc-262">However, if the character at position `index` in `s` is "z", the return value is -1.</span></span>  
  
 <span data-ttu-id="9cecc-263">在字符串中的字符位置从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="9cecc-263">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="9cecc-264">当且仅当它是以下值之一的成员具有关联的数字值的字符<xref:System.Globalization.UnicodeCategory>类别： `DecimalDigitNumber`， `LetterNumber`，或`OtherNumber`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-264">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>  
  
 <span data-ttu-id="9cecc-265">如果<xref:System.Char>位置处的对象`index`第一个字符是一个有效的代理项对，<xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29>方法确定是否将代理项对窗体的一个数字。</span><span class="sxs-lookup"><span data-stu-id="9cecc-265">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="9cecc-266">例如，数字系统爱琴包含码位 U + 10107 至 U + 10133。</span><span class="sxs-lookup"><span data-stu-id="9cecc-266">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="9cecc-267">下面的示例使用<xref:System.Char.ConvertFromUtf32%2A>方法可实例化一个字符串，表示每个爱琴海数目。</span><span class="sxs-lookup"><span data-stu-id="9cecc-267">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="9cecc-268">中的示例所示，输出的形式<xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29>方法返回正确的数字值，如果它传递爱琴海的数目的高代理项。</span><span class="sxs-lookup"><span data-stu-id="9cecc-268">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="9cecc-269">但是，如果它传递的低代理项，它会考虑仅在隔离的低代理项，并返回-1。</span><span class="sxs-lookup"><span data-stu-id="9cecc-269">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]
 [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-270">下面的代码示例演示了<xref:System.Char.GetNumericValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-270">The following code example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-271">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-271">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-272">
            <paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-272">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="char.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-273">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Char" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-273">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-274">枚举常数 <see cref="F:System.TypeCode.Char" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-274">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-275">将 Unicode 字符分类到由一个 <see cref="T:System.Globalization.UnicodeCategory" /> 值标识的组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-275">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (c As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char c);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : char -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-276">要分类的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-276">The Unicode character to categorize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-277">将指定的 Unicode 字符分类到由一个 <see cref="T:System.Globalization.UnicodeCategory" /> 值标识的组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-277">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-278">一个 <see cref="T:System.Globalization.UnicodeCategory" /> 值，它标识包含 <paramref name="c" /> 的组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-278">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-279"><xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法不会始终返回相同<xref:System.Globalization.UnicodeCategory>值作为<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>方法作为参数传递特定的字符时。</span><span class="sxs-lookup"><span data-stu-id="9cecc-279">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="9cecc-280"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>方法设计以反映当前版本的 Unicode 标准。</span><span class="sxs-lookup"><span data-stu-id="9cecc-280">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="9cecc-281">与此相反，尽管<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法通常反映当前版本的 Unicode 标准，它可能返回的字符类别基于标准的以前版本或它可能返回不同的类别，与当前标准顺序若要保留向后兼容性。</span><span class="sxs-lookup"><span data-stu-id="9cecc-281">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="9cecc-282">因此，我们建议你使用<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>方法而不是<xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-282">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9cecc-283">从开始[!INCLUDE[net_v462](~/includes/net-v462-md.md)]，Unicode 字符的分类基于[Unix 标准、 8.0.0 版](https://www.unicode.org/versions/Unicode8.0.0/)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-283">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="9cecc-284">在从.NET Framework 的版本[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]到[!INCLUDE[net_v461](~/includes/net-v461-md.md)]，它们的分类基于[Unix 标准、 6.3.0 版](https://www.unicode.org/versions/Unicode6.3.0/)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-284">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-285">下面的代码示例演示了<xref:System.Char.GetUnicodeCategory%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-285">The following code example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : string * int -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-286">
            <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-286">A <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-287">
            <c>s</c> 中的字符位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-287">The character position in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-288">将指定字符串中位于指定位置的字符分类到由一个 <see cref="T:System.Globalization.UnicodeCategory" /> 值标识的组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-288">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-289">一个 <see cref="T:System.Globalization.UnicodeCategory" /> 枚举常数，标识包含 <paramref name="index" /> 中位于 <paramref name="s" /> 处的字符的组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-289">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-290">在字符串中的字符位置从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="9cecc-290">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="9cecc-291"><xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法不会始终返回相同<xref:System.Globalization.UnicodeCategory>值作为<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>方法作为参数传递特定的字符时。</span><span class="sxs-lookup"><span data-stu-id="9cecc-291">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="9cecc-292"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>方法设计以反映当前版本的 Unicode 标准。</span><span class="sxs-lookup"><span data-stu-id="9cecc-292">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="9cecc-293">与此相反，尽管<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法通常反映当前版本的 Unicode 标准，它可能返回的字符类别基于标准的以前版本或它可能返回不同的类别，与当前标准顺序若要保留向后兼容性。</span><span class="sxs-lookup"><span data-stu-id="9cecc-293">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="9cecc-294">因此，我们建议你使用<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>方法而不是<xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-294">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9cecc-295">从开始[!INCLUDE[net_v462](~/includes/net-v462-md.md)]，Unicode 字符的分类基于[Unix 标准、 8.0.0 版](https://www.unicode.org/versions/Unicode8.0.0/)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-295">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unix Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="9cecc-296">在从.NET Framework 的版本[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]到[!INCLUDE[net_v461](~/includes/net-v461-md.md)]，它们的分类基于[Unix 标准、 6.3.0 版](https://www.unicode.org/versions/Unicode6.3.0/)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-296">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unix Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-297">下面的示例演示<xref:System.Char.GetUnicodeCategory%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-297">The following example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>  
  
 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-298">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-298">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-299">
            <paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-299">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsControl">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-300">指示指定的 Unicode 字符是否属于控制字符类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-300">Indicates whether a specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-301">控制字符进行格式设置和其他非打印字符，如确认、 BEL、 CR、 FF、 LF，和 VT.</span><span class="sxs-lookup"><span data-stu-id="9cecc-301">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="9cecc-302">Unicode 标准将从 \U0000 到 \U001F，\U007F，和对控制字符到 \U009F \U0080 分配码位。</span><span class="sxs-lookup"><span data-stu-id="9cecc-302">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="9cecc-303">根据 Unicode 标准中，这些值都将被解释为控制字符，除非其使用否则定义应用程序。</span><span class="sxs-lookup"><span data-stu-id="9cecc-303">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="9cecc-304">有效的控制字符均隶属于<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-304">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(char c);" />
      <MemberSignature Language="F#" Value="static member IsControl : char -&gt; bool" Usage="System.char.IsControl c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-305">要计算的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-305">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-306">指示指定的 Unicode 字符是否属于控制字符类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-306">Indicates whether the specified Unicode character is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-307">如果 <paramref name="c" /> 是控制字符，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-307">
              <see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-308">控制字符进行格式设置和其他非打印字符，如确认、 BEL、 CR、 FF、 LF，和 VT.</span><span class="sxs-lookup"><span data-stu-id="9cecc-308">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="9cecc-309">T 的 Unicode 标准将从 \U0000 到 \U001F，\U007F，和对控制字符到 \U009F \U0080 分配码位。</span><span class="sxs-lookup"><span data-stu-id="9cecc-309">T The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="9cecc-310">根据 Unicode 标准中，这些值都将被解释为控制字符，除非其使用否则定义应用程序。</span><span class="sxs-lookup"><span data-stu-id="9cecc-310">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="9cecc-311">有效的控制字符均隶属于<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-311">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-312">以下示例列出每个控制字符的 Unicode 码的位。</span><span class="sxs-lookup"><span data-stu-id="9cecc-312">The following example lists the Unicode code point of each of the control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol1.cpp#1)]
 [!code-csharp[System.Char.IsControl#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl1.cs#1)]
 [!code-vb[System.Char.IsControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsControl : string * int -&gt; bool" Usage="System.char.IsControl (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-313">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-313">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-314">
            <c>s</c> 中要计算的字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-314">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-315">指示指定字符串中位于指定位置处的字符是否属于控制字符类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-315">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-316">如果 <paramref name="index" /> 中位于 <paramref name="s" /> 处的字符是控制字符，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-316">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-317">在字符串中的字符位置从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="9cecc-317">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="9cecc-318">控制字符进行格式设置和其他非打印字符，如确认、 BEL、 CR、 FF、 LF，和 VT.</span><span class="sxs-lookup"><span data-stu-id="9cecc-318">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="9cecc-319">Unicode 标准将从 \U0000 到 \U001F，\U007F，和对控制字符到 \U009F \U0080 分配码位。</span><span class="sxs-lookup"><span data-stu-id="9cecc-319">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="9cecc-320">根据 Unicode 标准中，这些值都将被解释为控制字符，除非其使用否则定义应用程序。</span><span class="sxs-lookup"><span data-stu-id="9cecc-320">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="9cecc-321">有效的控制字符均隶属于<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-321">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-322">下面的示例枚举字符串中的字符，并确定是否需要针对任何控制字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-322">The following example enumerates the characters in a string and determines whether any are control characters.</span></span>  
  
 [!code-cpp[System.Char.IsControl#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol2.cpp#2)]
 [!code-csharp[System.Char.IsControl#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl2.cs#2)]
 [!code-vb[System.Char.IsControl#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-323">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-323">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-324">
            <paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-324">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-325">指示 Unicode 字符是否属于十进制数字类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-325">Indicates whether a Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-326">有效的数字均隶属于<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-326">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsDigit : char -&gt; bool" Usage="System.char.IsDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-327">要计算的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-327">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-328">指示指定的 Unicode 字符是否属于十进制数字类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-328">Indicates whether the specified Unicode character is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-329">如果 <paramref name="c" /> 是十进制数字，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-329">
              <see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-330">此方法可确定是否<xref:System.Char>是基数 10 位数字。</span><span class="sxs-lookup"><span data-stu-id="9cecc-330">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="9cecc-331">这与形成对比<xref:System.Char.IsNumber%2A>，用于确定是否`Char`的任何数值的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-331">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category.</span></span> <span data-ttu-id="9cecc-332">数字包含诸如分数、 下标、 上标、 罗马数字、 货币分子、 循环的数和特定于脚本的数字字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-332">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="9cecc-333">有效的数字均隶属于<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-333">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-334">下面的代码示例演示了<xref:System.Char.IsDigit%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-334">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsDigit : string * int -&gt; bool" Usage="System.char.IsDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-335">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-335">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-336">
            <c>s</c> 中要计算的字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-336">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-337">指示指定字符串中位于指定位置处的字符是否属于十进制数字类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-337">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-338">如果 <paramref name="index" /> 中位于 <paramref name="s" /> 处的字符是十进制数字，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-338">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-339">此方法可确定是否<xref:System.Char>是基数 10 位数字。</span><span class="sxs-lookup"><span data-stu-id="9cecc-339">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="9cecc-340">这与形成对比<xref:System.Char.IsNumber%2A>，用于确定是否<xref:System.Char>的任何数值的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-340">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="9cecc-341">数字包含诸如分数、 下标、 上标、 罗马数字、 货币分子、 循环的数和特定于脚本的数字字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-341">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
 <span data-ttu-id="9cecc-342">在字符串中的字符位置从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="9cecc-342">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="9cecc-343">有效的数字均隶属于<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-343">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-344">下面的代码示例演示了<xref:System.Char.IsDigit%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-344">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-345">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-345">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-346">
            <paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-346">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsHighSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-347">指示指定的 <see cref="T:System.Char" /> 对象是否是一个高代理项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-347">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : char -&gt; bool" Usage="System.char.IsHighSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-348">要计算的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-348">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-349">指示指定的 <see cref="T:System.Char" /> 对象是否是一个高代理项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-349">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-350">如果 <paramref name="c" /> 参数的数值范围是从 U+D800 到 U+DBFF，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-350">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-351">除了表示使用 16 位代码点的单个字符，utf-16 编码允许抽象字符来表示使用两个 16 位码位，这被称为代理项对。</span><span class="sxs-lookup"><span data-stu-id="9cecc-351">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="9cecc-352">在此对的第一个元素是高代理项。</span><span class="sxs-lookup"><span data-stu-id="9cecc-352">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="9cecc-353">其码位的范围从 u+d800 到 U + DBFF。</span><span class="sxs-lookup"><span data-stu-id="9cecc-353">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="9cecc-354">单独的代理项具有其自身; 的任何解释它是有意义的仅当使用作为代理项对的一部分。</span><span class="sxs-lookup"><span data-stu-id="9cecc-354">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-355">下面的代码示例演示<xref:System.Char.IsHighSurrogate%2A>， <xref:System.Char.IsLowSurrogate%2A>，和<xref:System.Char.IsSurrogatePair%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-355">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : string * int -&gt; bool" Usage="System.char.IsHighSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-356">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-356">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-357">
            <c>s</c> 中要计算的字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-357">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-358">指示字符串中指定位置处的 <see cref="T:System.Char" /> 对象是否为高代理项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-358">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-359">如果 <paramref name="s" /> 参数中指定字符的数值范围从 U+D800 到 U+DBFF，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-359">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-360">`index`参数是从零开始。</span><span class="sxs-lookup"><span data-stu-id="9cecc-360">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="9cecc-361">除了表示使用 16 位代码点的单个字符，utf-16 编码允许抽象字符来表示使用两个 16 位码位，这被称为代理项对。</span><span class="sxs-lookup"><span data-stu-id="9cecc-361">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="9cecc-362">在此对的第一个元素是高代理项。</span><span class="sxs-lookup"><span data-stu-id="9cecc-362">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="9cecc-363">其码位的范围从 u+d800 到 U + DBFF。</span><span class="sxs-lookup"><span data-stu-id="9cecc-363">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="9cecc-364">单独的代理项具有其自身; 的任何解释它是有意义的仅当使用作为代理项对的一部分。</span><span class="sxs-lookup"><span data-stu-id="9cecc-364">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-365">下面的代码示例演示<xref:System.Char.IsHighSurrogate%2A>， <xref:System.Char.IsLowSurrogate%2A>，和<xref:System.Char.IsSurrogatePair%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-365">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-366">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-366">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-367">
            <paramref name="index" /> 不是 <paramref name="s" /> 内的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-367">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-368">指示 Unicode 字符是否属于 Unicode 字母类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-368">Indicates whether a Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-369">此方法可确定是否<xref:System.Char>是 Unicode 字母的任何类别的成员。</span><span class="sxs-lookup"><span data-stu-id="9cecc-369">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="9cecc-370">Unicode 字母包括：</span><span class="sxs-lookup"><span data-stu-id="9cecc-370">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="9cecc-371">大写形式，例如 u+0041 (LATIN CAPITAL LETTER A) 通过 U + 005A (LATIN CAPITAL LETTER Z)，或 u+0400 (西里尔文大写字母 IE WITH GRAVE) 通过 U + 042F （西里尔文大写字母白费）。</span><span class="sxs-lookup"><span data-stu-id="9cecc-371">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="9cecc-372">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-372">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="9cecc-373">小写字母，如 U + 0061 通过 U + 007A (拉丁文小写字母 A) (拉丁文小写字母 Z)，或 U + 03AC （希腊文小写字母 ALPHA 与音调符号） 通过 U + 03CE （希腊文小写字母 OMEGA 与音调符号）。</span><span class="sxs-lookup"><span data-stu-id="9cecc-373">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="9cecc-374">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-374">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="9cecc-375">标题大小写的字母中，如 U + 01 C 5 （LATIN CAPITAL LETTER D 与小写字母 Z 与抑扬符） 或 U + 1FFC (希腊文大写字母 OMEGA 与 PROSGEGRAMMENI)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-375">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="9cecc-376">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-376">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="9cecc-377">修饰符，如 U + 02B0 (修饰符字母小型 H) 到 U + 02C 1 （修饰符字母反转喉塞音停止），或 U + 1D2C (修饰符字母大写 A) 通过 U + 1D 61 （修饰符字母小卡方分布）。</span><span class="sxs-lookup"><span data-stu-id="9cecc-377">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="9cecc-378">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-378">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="9cecc-379">其他字母，如 U + 05 D 0 (希伯来语 LETTER ALEF) 到 U + 05EA (希伯来语字母 TAV)，U + 0621 通过 U + 063A (阿拉伯语字母 HAMZA) (阿拉伯语字母 GHAIN) 或 U + 4E00 (\<CJK 象形文字、 第一个 >) 通过 U + 9 FC 3 (\<CJK 象形文字、 上一次>)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-379">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="9cecc-380">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-380">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetter : char -&gt; bool" Usage="System.char.IsLetter c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-381">要计算的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-381">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-382">指示指定的 Unicode 字符是否属于 Unicode 字母类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-382">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-383">如果 <see langword="true" /> 是一个字母，则为 <paramref name="c" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-383">
              <see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-384">此方法可确定是否<xref:System.Char>是 Unicode 字母的任何类别的成员。</span><span class="sxs-lookup"><span data-stu-id="9cecc-384">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="9cecc-385">Unicode 字母包括：</span><span class="sxs-lookup"><span data-stu-id="9cecc-385">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="9cecc-386">大写形式，例如 u+0041 (LATIN CAPITAL LETTER A) 通过 U + 005A (LATIN CAPITAL LETTER Z)，或 u+0400 (西里尔文大写字母 IE WITH GRAVE) 通过 U + 042F （西里尔文大写字母白费）。</span><span class="sxs-lookup"><span data-stu-id="9cecc-386">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="9cecc-387">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-387">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="9cecc-388">小写字母，如 U + 0061 通过 U + 007A (拉丁文小写字母 A) (拉丁文小写字母 Z)，或 U + 03AC （希腊文小写字母 ALPHA 与音调符号） 通过 U + 03CE （希腊文小写字母 OMEGA 与音调符号）。</span><span class="sxs-lookup"><span data-stu-id="9cecc-388">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="9cecc-389">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-389">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="9cecc-390">标题大小写的字母中，如 U + 01 C 5 （LATIN CAPITAL LETTER D 与小写字母 Z 与抑扬符） 或 U + 1FFC (希腊文大写字母 OMEGA 与 PROSGEGRAMMENI)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-390">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="9cecc-391">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-391">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="9cecc-392">修饰符，如 U + 02B0 (修饰符字母小型 H) 到 U + 02C 1 （修饰符字母反转喉塞音停止），或 U + 1D2C (修饰符字母大写 A) 通过 U + 1D 61 （修饰符字母小卡方分布）。</span><span class="sxs-lookup"><span data-stu-id="9cecc-392">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="9cecc-393">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-393">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="9cecc-394">其他字母，如 U + 05 D 0 (希伯来语 LETTER ALEF) 到 U + 05EA (希伯来语字母 TAV)，U + 0621 通过 U + 063A (阿拉伯语字母 HAMZA) (阿拉伯语字母 GHAIN) 或 U + 4E00 (\<CJK 象形文字、 第一个 >) 通过 U + 9 FC 3 (\<CJK 象形文字、 上一次>)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-394">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="9cecc-395">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-395">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-396">下面的代码示例演示了<xref:System.Char.IsLetter%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-396">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetter : string * int -&gt; bool" Usage="System.char.IsLetter (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-397">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-397">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-398">
            <c>s</c> 中要计算的字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-398">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-399">指示指定字符串中位于指定位置处的指定字符串是否属于 Unicode 字母类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-399">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-400">如果 <paramref name="index" /> 中位于 <paramref name="s" /> 的字符是字母，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-400">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-401">在字符串中的字符位置从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="9cecc-401">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="9cecc-402">此方法确定一个字符串中指定的索引位置处的字符是否为 Unicode 字母的任何类别的成员。</span><span class="sxs-lookup"><span data-stu-id="9cecc-402">This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter.</span></span> <span data-ttu-id="9cecc-403">Unicode 字母包括：</span><span class="sxs-lookup"><span data-stu-id="9cecc-403">Unicode letters include the following:</span></span>  
  
-   <span data-ttu-id="9cecc-404">大写形式，例如 u+0041 (LATIN CAPITAL LETTER A) 通过 U + 005A (LATIN CAPITAL LETTER Z)，或 u+0400 (西里尔文大写字母 IE WITH GRAVE) 通过 U + 042F （西里尔文大写字母白费）。</span><span class="sxs-lookup"><span data-stu-id="9cecc-404">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="9cecc-405">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-405">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="9cecc-406">小写字母，如 U + 0061 通过 U + 007A (拉丁文小写字母 A) (拉丁文小写字母 Z)，或 U + 03AC （希腊文小写字母 ALPHA 与音调符号） 通过 U + 03CE （希腊文小写字母 OMEGA 与音调符号）。</span><span class="sxs-lookup"><span data-stu-id="9cecc-406">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="9cecc-407">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-407">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="9cecc-408">标题大小写的字母中，如 U + 01 C 5 （LATIN CAPITAL LETTER D 与小写字母 Z 与抑扬符） 或 U + 1FFC (希腊文大写字母 OMEGA 与 PROSGEGRAMMENI)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-408">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="9cecc-409">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-409">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="9cecc-410">修饰符，如 U + 02B0 (修饰符字母小型 H) 到 U + 02C 1 （修饰符字母反转喉塞音停止），或 U + 1D2C (修饰符字母大写 A) 通过 U + 1D 61 （修饰符字母小卡方分布）。</span><span class="sxs-lookup"><span data-stu-id="9cecc-410">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="9cecc-411">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-411">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>  
  
-   <span data-ttu-id="9cecc-412">其他字母，如 U + 05 D 0 (希伯来语 LETTER ALEF) 到 U + 05EA (希伯来语字母 TAV)，U + 0621 通过 U + 063A (阿拉伯语字母 HAMZA) (阿拉伯语字母 GHAIN) 或 U + 4E00 (\<CJK 象形文字、 第一个 >) 通过 U + 9 FC 3 (\<CJK 象形文字、 上一次>)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-412">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="9cecc-413">这些字符均隶属于<xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-413">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-414">下面的代码示例演示了<xref:System.Char.IsLetter%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-414">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-415">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-415">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-416">
            <paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-416">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetterOrDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-417">指示 Unicode 字符是否属于字母或十进制数字类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-417">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-418">有效的字母和十进制数字是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`， `LowercaseLetter`， `TitlecaseLetter`， `ModifierLetter`， `OtherLetter`，或`DecimalDigitNumber`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-418">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : char -&gt; bool" Usage="System.char.IsLetterOrDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-419">要计算的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-419">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-420">指示指定的 Unicode 字符是否属于字母或十进制数字类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-420">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-421">如果 <see langword="true" /> 是字母或十进制数，则为 <paramref name="c" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-421">
              <see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-422">有效的字母和十进制数字是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`， `LowercaseLetter`， `TitlecaseLetter`， `ModifierLetter`， `OtherLetter`，或`DecimalDigitNumber`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-422">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-423">下面的代码示例演示了<xref:System.Char.IsLetterOrDigit%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-423">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : string * int -&gt; bool" Usage="System.char.IsLetterOrDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-424">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-424">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-425">
            <c>s</c> 中要计算的字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-425">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-426">指示指定字符串中位于指定位置处的字符是否属于字母或十进制数字类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-426">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-427">如果 <see langword="true" /> 中位于 <paramref name="index" /> 的字符是一个字母或十进制数，则为 <paramref name="s" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-427">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-428">在字符串中的字符位置从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="9cecc-428">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="9cecc-429">有效的字母和十进制数字是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`， `LowercaseLetter`， `TitlecaseLetter`， `ModifierLetter`， `OtherLetter`，或`DecimalDigitNumber`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-429">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-430">下面的代码示例演示了<xref:System.Char.IsLetterOrDigit%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-430">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-431">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-431">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-432">
            <paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-432">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-433">指示 Unicode 字符是否属于小写字母类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-433">Indicates whether a Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(char c);" />
      <MemberSignature Language="F#" Value="static member IsLower : char -&gt; bool" Usage="System.char.IsLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-434">要计算的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-434">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-435">指示指定的 Unicode 字符是否属于小写字母类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-435">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-436">如果 <see langword="true" /> 是一个小写字母，则为 <paramref name="c" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-436">
              <see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-437">有效的小写字母是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-437">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-438">下面的代码示例演示了<xref:System.Char.IsLower%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-438">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLower : string * int -&gt; bool" Usage="System.char.IsLower (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-439">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-439">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-440">
            <c>s</c> 中要计算的字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-440">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-441">指示指定字符串中位于指定位置处的字符是否属于小写字母类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-441">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-442">如果 <paramref name="index" /> 中位于 <paramref name="s" /> 处的字符是小写字母，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-442">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-443">在字符串中的字符位置从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="9cecc-443">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="9cecc-444">有效的小写字母是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-444">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-445">下面的代码示例演示了<xref:System.Char.IsLower%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-445">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-446">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-446">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-447">
            <paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-447">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLowSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-448">指示指定的 <see cref="T:System.Char" /> 对象是否是一个低代理项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-448">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : char -&gt; bool" Usage="System.char.IsLowSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-449">要计算的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-449">The character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-450">指示指定的 <see cref="T:System.Char" /> 对象是否是一个低代理项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-450">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-451">如果 <paramref name="c" /> 参数的数值范围是从 U+DC00 到 U+DFFF，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-451">
              <see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-452">除了表示使用 16 位代码点的单个字符，utf-16 编码允许抽象字符来表示使用两个 16 位码位，这被称为代理项对。</span><span class="sxs-lookup"><span data-stu-id="9cecc-452">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="9cecc-453">在此对的第二个元素是低代理项。</span><span class="sxs-lookup"><span data-stu-id="9cecc-453">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="9cecc-454">其码位的范围从 u+dc00 到 U + DFFF。</span><span class="sxs-lookup"><span data-stu-id="9cecc-454">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="9cecc-455">单独的代理项具有其自身; 的任何解释它是有意义的仅当使用作为代理项对的一部分。</span><span class="sxs-lookup"><span data-stu-id="9cecc-455">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-456">下面的代码示例演示<xref:System.Char.IsHighSurrogate%2A>， <xref:System.Char.IsLowSurrogate%2A>，和<xref:System.Char.IsSurrogatePair%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-456">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : string * int -&gt; bool" Usage="System.char.IsLowSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-457">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-457">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-458">
            <c>s</c> 中要计算的字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-458">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-459">指示字符串中指定位置处的 <see cref="T:System.Char" /> 对象是否为低代理项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-459">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-460">如果 <see langword="true" /> 中指定字符的数值范围是从 U+DC00 到 U+DFFF，则为 <paramref name="s" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-460">
              <see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-461">`index`参数是从零开始。</span><span class="sxs-lookup"><span data-stu-id="9cecc-461">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="9cecc-462">除了表示使用 16 位代码点的单个字符，utf-16 编码允许抽象字符来表示使用两个 16 位码位，这被称为代理项对。</span><span class="sxs-lookup"><span data-stu-id="9cecc-462">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="9cecc-463">在此对的第二个元素是低代理项。</span><span class="sxs-lookup"><span data-stu-id="9cecc-463">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="9cecc-464">其码位的范围从 u+dc00 到 U + DFFF。</span><span class="sxs-lookup"><span data-stu-id="9cecc-464">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="9cecc-465">单独的代理项具有其自身; 的任何解释它是有意义的仅当使用作为代理项对的一部分。</span><span class="sxs-lookup"><span data-stu-id="9cecc-465">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-466">下面的代码示例演示<xref:System.Char.IsHighSurrogate%2A>， <xref:System.Char.IsLowSurrogate%2A>，和<xref:System.Char.IsSurrogatePair%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-466">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-467">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-467">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-468">
            <paramref name="index" /> 不是 <paramref name="s" /> 内的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-468">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNumber">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-469">指示 Unicode 字符是否属于数字类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-469">Indicates whether a Unicode character is categorized as a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(char c);" />
      <MemberSignature Language="F#" Value="static member IsNumber : char -&gt; bool" Usage="System.char.IsNumber c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-470">要计算的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-470">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-471">指示指定的 Unicode 字符是否属于数字类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-471">Indicates whether the specified Unicode character is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-472">如果 <paramref name="c" /> 是数字，则为 <see langword="true" />，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-472">
              <see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-473">此方法可确定是否<xref:System.Char>的任何数值的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-473">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="9cecc-474">除了包含数字，数字包括字符、 分数、 下标、 上标、 罗马数字、 货币分子和循环的数。</span><span class="sxs-lookup"><span data-stu-id="9cecc-474">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="9cecc-475">此方法与形成对比<xref:System.Char.IsDigit%2A>方法，这可确定是否<xref:System.Char>是基数 10 位数字。</span><span class="sxs-lookup"><span data-stu-id="9cecc-475">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9cecc-476"><xref:System.Char.IsNumber%28System.Char%29>方法不应以确定是否一个字符串，包含的数字字符 （例如，通过调用方法对字符串中每个字符）。</span><span class="sxs-lookup"><span data-stu-id="9cecc-476">The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="9cecc-477">若要确定字符串是否包含数字字符，调用的重载之一`TryParse`方法 (如<xref:System.Int32.TryParse%2A?displayProperty=nameWithType>或<xref:System.Double.TryParse%2A?displayProperty=nameWithType>的整型或浮点型类型。</span><span class="sxs-lookup"><span data-stu-id="9cecc-477">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="9cecc-478">有效的数字是的成员<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>， <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>，或<xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-478">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="9cecc-479"><xref:System.Char.IsNumber%28System.Char%29>方法假设`c`对应于单一语言字符，并检查是否该字符表示的数字。</span><span class="sxs-lookup"><span data-stu-id="9cecc-479">The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number.</span></span> <span data-ttu-id="9cecc-480">但是，由两个表示 Unicode 标准中的某些数字<xref:System.Char>形成一个代理项对的对象。</span><span class="sxs-lookup"><span data-stu-id="9cecc-480">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="9cecc-481">例如，数字系统爱琴包含码位 U + 10107 至 U + 10133。</span><span class="sxs-lookup"><span data-stu-id="9cecc-481">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="9cecc-482">下面的示例使用<xref:System.Char.ConvertFromUtf32%2A>方法可实例化一个字符串，表示爱琴海的第一个。</span><span class="sxs-lookup"><span data-stu-id="9cecc-482">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="9cecc-483">如示例所示，输出<xref:System.Char.IsNumber%28System.Char%29>方法将返回`false`如果它传递一个高代理项或低代理项的此字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-483">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]
 [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-484">下面的示例演示<xref:System.Char.IsNumber%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-484">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsNumber : string * int -&gt; bool" Usage="System.char.IsNumber (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-485">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-485">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-486">
            <c>s</c> 中要计算的字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-486">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-487">指示指定字符串中位于指定位置的字符是否属于数字类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-487">Indicates whether the character at the specified position in a specified string is categorized as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-488">如果 <paramref name="index" /> 中位于 <paramref name="s" /> 的字符是数字，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-488">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-489">此方法可确定是否<xref:System.Char>的任何数值的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-489">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="9cecc-490">除了包含数字，数字包括字符、 分数、 下标、 上标、 罗马数字、 货币分子和循环的数。</span><span class="sxs-lookup"><span data-stu-id="9cecc-490">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="9cecc-491">此方法与形成对比<xref:System.Char.IsDigit%2A>方法，这可确定是否<xref:System.Char>是基数 10 位数字。</span><span class="sxs-lookup"><span data-stu-id="9cecc-491">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>  
  
 <span data-ttu-id="9cecc-492">在字符串中的字符位置从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="9cecc-492">Character positions in a string are indexed starting from zero.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9cecc-493"><xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29>方法不应以确定是否一个字符串，包含的数字字符 （例如，通过调用方法对字符串中每个字符）。</span><span class="sxs-lookup"><span data-stu-id="9cecc-493">The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="9cecc-494">若要确定字符串是否包含数字字符，调用的重载之一`TryParse`方法 (如<xref:System.Int32.TryParse%2A?displayProperty=nameWithType>或<xref:System.Double.TryParse%2A?displayProperty=nameWithType>的整型或浮点型类型。</span><span class="sxs-lookup"><span data-stu-id="9cecc-494">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>  
  
 <span data-ttu-id="9cecc-495">有效的数字是的成员<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>， <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>，或<xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-495">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="9cecc-496">如果<xref:System.Char>位置处的对象`index`第一个字符是一个有效的代理项对，<xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29>方法确定是否将代理项对窗体的一个数字。</span><span class="sxs-lookup"><span data-stu-id="9cecc-496">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="9cecc-497">例如，数字系统爱琴包含码位 U + 10107 至 U + 10133。</span><span class="sxs-lookup"><span data-stu-id="9cecc-497">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="9cecc-498">下面的示例使用<xref:System.Char.ConvertFromUtf32%2A>方法可实例化一个字符串，表示爱琴海的第一个。</span><span class="sxs-lookup"><span data-stu-id="9cecc-498">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="9cecc-499">如示例所示，输出<xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29>方法将返回`true`如果它传递爱琴海第一个高代理项。</span><span class="sxs-lookup"><span data-stu-id="9cecc-499">As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="9cecc-500">但是，如果它传递的低代理项，则它会考虑仅低代理项的类别并返回`false`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-500">However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.</span></span>  
  
 [!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]
 [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-501">下面的示例演示<xref:System.Char.IsNumber%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-501">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-502">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-502">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-503">
            <paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-503">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPunctuation">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-504">指示 Unicode 字符是否属于标点符号类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-504">Indicates whether a Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-505">有效的标点符号是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`， `DashPunctuation`， `OpenPunctuation`， `ClosePunctuation`， `InititalQuotePunctuation`， `FinalQuotePunctuation`，或`OtherPunctuation`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-505">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="9cecc-506">它们包括字符与下表中列出的 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="9cecc-506">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="9cecc-507">U+0021 到 U + 0023</span><span class="sxs-lookup"><span data-stu-id="9cecc-507">U+0021 to U+0023</span></span>|<span data-ttu-id="9cecc-508">U + 060 C 和 U + 060 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-508">U+060C and U+060D</span></span>|<span data-ttu-id="9cecc-509">U + 1800 到 U + 180A</span><span class="sxs-lookup"><span data-stu-id="9cecc-509">U+1800 to U+180A</span></span>|<span data-ttu-id="9cecc-510">U + 3014 到 U + 301F</span><span class="sxs-lookup"><span data-stu-id="9cecc-510">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="9cecc-511">U + 0025 到 U + 002A</span><span class="sxs-lookup"><span data-stu-id="9cecc-511">U+0025 to U+002A</span></span>|<span data-ttu-id="9cecc-512">U+061B</span><span class="sxs-lookup"><span data-stu-id="9cecc-512">U+061B</span></span>|<span data-ttu-id="9cecc-513">U + 1944年和 U + 1945</span><span class="sxs-lookup"><span data-stu-id="9cecc-513">U+1944 and U+1945</span></span>|<span data-ttu-id="9cecc-514">U+3030</span><span class="sxs-lookup"><span data-stu-id="9cecc-514">U+3030</span></span>|  
|<span data-ttu-id="9cecc-515">U + 002 C 到 U + 002F</span><span class="sxs-lookup"><span data-stu-id="9cecc-515">U+002C to U+002F</span></span>|<span data-ttu-id="9cecc-516">U + 061E 和 U + 061F</span><span class="sxs-lookup"><span data-stu-id="9cecc-516">U+061E and U+061F</span></span>|<span data-ttu-id="9cecc-517">U + 19DE 和 U + 19DF</span><span class="sxs-lookup"><span data-stu-id="9cecc-517">U+19DE and U+19DF</span></span>|<span data-ttu-id="9cecc-518">U + 303D</span><span class="sxs-lookup"><span data-stu-id="9cecc-518">U+303D</span></span>|  
|<span data-ttu-id="9cecc-519">U + 003A 和 U + 003B</span><span class="sxs-lookup"><span data-stu-id="9cecc-519">U+003A and U+003B</span></span>|<span data-ttu-id="9cecc-520">U + 066A 到 U + 066 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-520">U+066A to U+066D</span></span>|<span data-ttu-id="9cecc-521">U + 1A1E 和 U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="9cecc-521">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="9cecc-522">U + 30A0</span><span class="sxs-lookup"><span data-stu-id="9cecc-522">U+30A0</span></span>|  
|<span data-ttu-id="9cecc-523">U + 003F 和 U + 0040</span><span class="sxs-lookup"><span data-stu-id="9cecc-523">U+003F and U+0040</span></span>|<span data-ttu-id="9cecc-524">U+06D4</span><span class="sxs-lookup"><span data-stu-id="9cecc-524">U+06D4</span></span>|<span data-ttu-id="9cecc-525">U + 1B5A 到 U + 1B60</span><span class="sxs-lookup"><span data-stu-id="9cecc-525">U+1B5A to U+1B60</span></span>|<span data-ttu-id="9cecc-526">U + 30FB</span><span class="sxs-lookup"><span data-stu-id="9cecc-526">U+30FB</span></span>|  
|<span data-ttu-id="9cecc-527">U + 005B 到 U + 005 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-527">U+005B to U+005D</span></span>|<span data-ttu-id="9cecc-528">U+0700 到 U + 070 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-528">U+0700 to U+070D</span></span>|<span data-ttu-id="9cecc-529">U + 2010 到 U + 2027</span><span class="sxs-lookup"><span data-stu-id="9cecc-529">U+2010 to U+2027</span></span>|<span data-ttu-id="9cecc-530">U + A874 到 U + A877</span><span class="sxs-lookup"><span data-stu-id="9cecc-530">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="9cecc-531">U+005F</span><span class="sxs-lookup"><span data-stu-id="9cecc-531">U+005F</span></span>|<span data-ttu-id="9cecc-532">U + 07F7 到 U + 07F9</span><span class="sxs-lookup"><span data-stu-id="9cecc-532">U+07F7 to U+07F9</span></span>|<span data-ttu-id="9cecc-533">U+2030 到 U + 2043</span><span class="sxs-lookup"><span data-stu-id="9cecc-533">U+2030 to U+2043</span></span>|<span data-ttu-id="9cecc-534">U + FD3E 和 U + FD3F</span><span class="sxs-lookup"><span data-stu-id="9cecc-534">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="9cecc-535">U + 007B</span><span class="sxs-lookup"><span data-stu-id="9cecc-535">U+007B</span></span>|<span data-ttu-id="9cecc-536">U + 0964年和 U + 0965</span><span class="sxs-lookup"><span data-stu-id="9cecc-536">U+0964 and U+0965</span></span>|<span data-ttu-id="9cecc-537">U + 2045 到 U + 2051</span><span class="sxs-lookup"><span data-stu-id="9cecc-537">U+2045 to U+2051</span></span>|<span data-ttu-id="9cecc-538">到 U + FE19 U+FE10</span><span class="sxs-lookup"><span data-stu-id="9cecc-538">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="9cecc-539">U + 007 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-539">U+007D</span></span>|<span data-ttu-id="9cecc-540">U+0970</span><span class="sxs-lookup"><span data-stu-id="9cecc-540">U+0970</span></span>|<span data-ttu-id="9cecc-541">U + 2053 到 U + 205E</span><span class="sxs-lookup"><span data-stu-id="9cecc-541">U+2053 to U+205E</span></span>|<span data-ttu-id="9cecc-542">到 U + FE52 U+FE30</span><span class="sxs-lookup"><span data-stu-id="9cecc-542">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="9cecc-543">U+00A1</span><span class="sxs-lookup"><span data-stu-id="9cecc-543">U+00A1</span></span>|<span data-ttu-id="9cecc-544">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="9cecc-544">U+0DF4</span></span>|<span data-ttu-id="9cecc-545">U + 207 D 和 U + 207E</span><span class="sxs-lookup"><span data-stu-id="9cecc-545">U+207D and  U+207E</span></span>|<span data-ttu-id="9cecc-546">U + FE54 到 U + FE61</span><span class="sxs-lookup"><span data-stu-id="9cecc-546">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="9cecc-547">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="9cecc-547">U+00AB</span></span>|<span data-ttu-id="9cecc-548">U + 0E4F 到 U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="9cecc-548">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="9cecc-549">U + 208 D 和 U + 208E</span><span class="sxs-lookup"><span data-stu-id="9cecc-549">U+208D and U+208E</span></span>|<span data-ttu-id="9cecc-550">U+FE63</span><span class="sxs-lookup"><span data-stu-id="9cecc-550">U+FE63</span></span>|  
|<span data-ttu-id="9cecc-551">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="9cecc-551">U+00AD</span></span>|<span data-ttu-id="9cecc-552">U + 0F04 到 U + 0F12</span><span class="sxs-lookup"><span data-stu-id="9cecc-552">U+0F04 to U+0F12</span></span>|<span data-ttu-id="9cecc-553">U + 2329年和 U + 232A</span><span class="sxs-lookup"><span data-stu-id="9cecc-553">U+2329 and U+232A</span></span>|<span data-ttu-id="9cecc-554">U+FE68</span><span class="sxs-lookup"><span data-stu-id="9cecc-554">U+FE68</span></span>|  
|<span data-ttu-id="9cecc-555">U + 00B7</span><span class="sxs-lookup"><span data-stu-id="9cecc-555">U+00B7</span></span>|<span data-ttu-id="9cecc-556">U + 0F3A 到 U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="9cecc-556">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="9cecc-557">U + 2768 到 U + 2775</span><span class="sxs-lookup"><span data-stu-id="9cecc-557">U+2768 to U+2775</span></span>|<span data-ttu-id="9cecc-558">U + FE6A 和 U + FE6B</span><span class="sxs-lookup"><span data-stu-id="9cecc-558">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="9cecc-559">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="9cecc-559">U+00BB</span></span>|<span data-ttu-id="9cecc-560">U+0F85</span><span class="sxs-lookup"><span data-stu-id="9cecc-560">U+0F85</span></span>|<span data-ttu-id="9cecc-561">U + 27C 5 到 U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="9cecc-561">U+27C5 to U+27C6</span></span>|<span data-ttu-id="9cecc-562">U + FF01 到 U + FF03</span><span class="sxs-lookup"><span data-stu-id="9cecc-562">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="9cecc-563">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="9cecc-563">U+00BF</span></span>|<span data-ttu-id="9cecc-564">U + 0FD0 和 U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="9cecc-564">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="9cecc-565">U + 27E6 到 U + 27EB</span><span class="sxs-lookup"><span data-stu-id="9cecc-565">U+27E6 to U+27EB</span></span>|<span data-ttu-id="9cecc-566">U + FF05 到 U + FF0A</span><span class="sxs-lookup"><span data-stu-id="9cecc-566">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="9cecc-567">U+037E</span><span class="sxs-lookup"><span data-stu-id="9cecc-567">U+037E</span></span>|<span data-ttu-id="9cecc-568">U + 104A 到 U + 104F</span><span class="sxs-lookup"><span data-stu-id="9cecc-568">U+104A to U+104F</span></span>|<span data-ttu-id="9cecc-569">U + 2983 到 U + 2998</span><span class="sxs-lookup"><span data-stu-id="9cecc-569">U+2983 to U+2998</span></span>|<span data-ttu-id="9cecc-570">U + FF0C 到 U + FF0F</span><span class="sxs-lookup"><span data-stu-id="9cecc-570">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="9cecc-571">U+0387</span><span class="sxs-lookup"><span data-stu-id="9cecc-571">U+0387</span></span>|<span data-ttu-id="9cecc-572">U + 10FB</span><span class="sxs-lookup"><span data-stu-id="9cecc-572">U+10FB</span></span>|<span data-ttu-id="9cecc-573">到 U + 29DB U + 29D 8</span><span class="sxs-lookup"><span data-stu-id="9cecc-573">U+29D8 to U+29DB</span></span>|<span data-ttu-id="9cecc-574">U + FF1A 和 U + FF1B</span><span class="sxs-lookup"><span data-stu-id="9cecc-574">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="9cecc-575">U + 055A 到 U + 055F</span><span class="sxs-lookup"><span data-stu-id="9cecc-575">U+055A to U+055F</span></span>|<span data-ttu-id="9cecc-576">U + 1361 到 U + 1368</span><span class="sxs-lookup"><span data-stu-id="9cecc-576">U+1361 to U+1368</span></span>|<span data-ttu-id="9cecc-577">U + 29 FC 和 U + 29FD</span><span class="sxs-lookup"><span data-stu-id="9cecc-577">U+29FC and U+29FD</span></span>|<span data-ttu-id="9cecc-578">U + FF1F 和 U + FF20</span><span class="sxs-lookup"><span data-stu-id="9cecc-578">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="9cecc-579">U + 0589年和 U + 058A</span><span class="sxs-lookup"><span data-stu-id="9cecc-579">U+0589 and U+058A</span></span>|<span data-ttu-id="9cecc-580">U + 166 D 和 U + 166E</span><span class="sxs-lookup"><span data-stu-id="9cecc-580">U+166D and U+166E</span></span>|<span data-ttu-id="9cecc-581">U + 2CF9 到 U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="9cecc-581">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="9cecc-582">U + FF3B 到 U + FF3D</span><span class="sxs-lookup"><span data-stu-id="9cecc-582">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="9cecc-583">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="9cecc-583">U+05BE</span></span>|<span data-ttu-id="9cecc-584">U + 169B 和 U + 169 C</span><span class="sxs-lookup"><span data-stu-id="9cecc-584">U+169B and U+169C</span></span>|<span data-ttu-id="9cecc-585">U + 2CFE 和 U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="9cecc-585">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="9cecc-586">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="9cecc-586">U+FF3F</span></span>|  
|<span data-ttu-id="9cecc-587">U+05C0</span><span class="sxs-lookup"><span data-stu-id="9cecc-587">U+05C0</span></span>|<span data-ttu-id="9cecc-588">U + 16EB 到 U + 16ED</span><span class="sxs-lookup"><span data-stu-id="9cecc-588">U+16EB to U+16ED</span></span>|<span data-ttu-id="9cecc-589">U + 2E00 到 U + 2E17</span><span class="sxs-lookup"><span data-stu-id="9cecc-589">U+2E00 to U+2E17</span></span>|<span data-ttu-id="9cecc-590">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="9cecc-590">U+FF5B</span></span>|  
|<span data-ttu-id="9cecc-591">U+05C3</span><span class="sxs-lookup"><span data-stu-id="9cecc-591">U+05C3</span></span>|<span data-ttu-id="9cecc-592">U + 1735年和 U + 1736</span><span class="sxs-lookup"><span data-stu-id="9cecc-592">U+1735 and U+1736</span></span>|<span data-ttu-id="9cecc-593">U + 2E1C 和 U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="9cecc-593">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="9cecc-594">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="9cecc-594">U+FF5D</span></span>|  
|<span data-ttu-id="9cecc-595">U+05C6</span><span class="sxs-lookup"><span data-stu-id="9cecc-595">U+05C6</span></span>|<span data-ttu-id="9cecc-596">U + 17D 4 到 U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="9cecc-596">U+17D4 to U+17D6</span></span>|<span data-ttu-id="9cecc-597">U + 3001 到 U + 3003</span><span class="sxs-lookup"><span data-stu-id="9cecc-597">U+3001 to U+3003</span></span>|<span data-ttu-id="9cecc-598">U + FF5F 到 U + FF65</span><span class="sxs-lookup"><span data-stu-id="9cecc-598">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="9cecc-599">U + 05F3 和 U + 05F4</span><span class="sxs-lookup"><span data-stu-id="9cecc-599">U+05F3 and U+05F4</span></span>|<span data-ttu-id="9cecc-600">到 U + 17DA U + 17D 8</span><span class="sxs-lookup"><span data-stu-id="9cecc-600">U+17D8 to U+17DA</span></span>|<span data-ttu-id="9cecc-601">U + 3008 到 U + 3011</span><span class="sxs-lookup"><span data-stu-id="9cecc-601">U+3008 to U+3011</span></span>||  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(char c);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : char -&gt; bool" Usage="System.char.IsPunctuation c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-602">要计算的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-602">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-603">指示指定的 Unicode 字符是否属于标点符号类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-603">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-604">如果 <see langword="true" /> 是一个标点符号，则为 <paramref name="c" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-604">
              <see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-605">有效的标点符号是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`， `DashPunctuation`， `OpenPunctuation`， `ClosePunctuation`， `InititalQuotePunctuation`， `FinalQuotePunctuation`，或`OtherPunctuation`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-605">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="9cecc-606">它们包括字符与下表中列出的 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="9cecc-606">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="9cecc-607">U+0021 到 U + 0023</span><span class="sxs-lookup"><span data-stu-id="9cecc-607">U+0021 to U+0023</span></span>|<span data-ttu-id="9cecc-608">U + 060 C 和 U + 060 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-608">U+060C and U+060D</span></span>|<span data-ttu-id="9cecc-609">U + 1800 到 U + 180A</span><span class="sxs-lookup"><span data-stu-id="9cecc-609">U+1800 to U+180A</span></span>|<span data-ttu-id="9cecc-610">U + 3014 到 U + 301F</span><span class="sxs-lookup"><span data-stu-id="9cecc-610">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="9cecc-611">U + 0025 到 U + 002A</span><span class="sxs-lookup"><span data-stu-id="9cecc-611">U+0025 to U+002A</span></span>|<span data-ttu-id="9cecc-612">U+061B</span><span class="sxs-lookup"><span data-stu-id="9cecc-612">U+061B</span></span>|<span data-ttu-id="9cecc-613">U + 1944年和 U + 1945</span><span class="sxs-lookup"><span data-stu-id="9cecc-613">U+1944 and U+1945</span></span>|<span data-ttu-id="9cecc-614">U+3030</span><span class="sxs-lookup"><span data-stu-id="9cecc-614">U+3030</span></span>|  
|<span data-ttu-id="9cecc-615">U + 002 C 到 U + 002F</span><span class="sxs-lookup"><span data-stu-id="9cecc-615">U+002C to U+002F</span></span>|<span data-ttu-id="9cecc-616">U + 061E 和 U + 061F</span><span class="sxs-lookup"><span data-stu-id="9cecc-616">U+061E and U+061F</span></span>|<span data-ttu-id="9cecc-617">U + 19DE 和 U + 19DF</span><span class="sxs-lookup"><span data-stu-id="9cecc-617">U+19DE and U+19DF</span></span>|<span data-ttu-id="9cecc-618">U + 303D</span><span class="sxs-lookup"><span data-stu-id="9cecc-618">U+303D</span></span>|  
|<span data-ttu-id="9cecc-619">U + 003A 和 U + 003B</span><span class="sxs-lookup"><span data-stu-id="9cecc-619">U+003A and U+003B</span></span>|<span data-ttu-id="9cecc-620">U + 066A 到 U + 066 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-620">U+066A to U+066D</span></span>|<span data-ttu-id="9cecc-621">U + 1A1E 和 U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="9cecc-621">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="9cecc-622">U + 30A0</span><span class="sxs-lookup"><span data-stu-id="9cecc-622">U+30A0</span></span>|  
|<span data-ttu-id="9cecc-623">U + 003F 和 U + 0040</span><span class="sxs-lookup"><span data-stu-id="9cecc-623">U+003F and U+0040</span></span>|<span data-ttu-id="9cecc-624">U+06D4</span><span class="sxs-lookup"><span data-stu-id="9cecc-624">U+06D4</span></span>|<span data-ttu-id="9cecc-625">U + 1B5A 到 U + 1B60</span><span class="sxs-lookup"><span data-stu-id="9cecc-625">U+1B5A to U+1B60</span></span>|<span data-ttu-id="9cecc-626">U + 30FB</span><span class="sxs-lookup"><span data-stu-id="9cecc-626">U+30FB</span></span>|  
|<span data-ttu-id="9cecc-627">U + 005B 到 U + 005 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-627">U+005B to U+005D</span></span>|<span data-ttu-id="9cecc-628">U+0700 到 U + 070 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-628">U+0700 to U+070D</span></span>|<span data-ttu-id="9cecc-629">U + 2010 到 U + 2027</span><span class="sxs-lookup"><span data-stu-id="9cecc-629">U+2010 to U+2027</span></span>|<span data-ttu-id="9cecc-630">U + A874 到 U + A877</span><span class="sxs-lookup"><span data-stu-id="9cecc-630">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="9cecc-631">U+005F</span><span class="sxs-lookup"><span data-stu-id="9cecc-631">U+005F</span></span>|<span data-ttu-id="9cecc-632">U + 07F7 到 U + 07F9</span><span class="sxs-lookup"><span data-stu-id="9cecc-632">U+07F7 to U+07F9</span></span>|<span data-ttu-id="9cecc-633">U+2030 到 U + 2043</span><span class="sxs-lookup"><span data-stu-id="9cecc-633">U+2030 to U+2043</span></span>|<span data-ttu-id="9cecc-634">U + FD3E 和 U + FD3F</span><span class="sxs-lookup"><span data-stu-id="9cecc-634">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="9cecc-635">U + 007B</span><span class="sxs-lookup"><span data-stu-id="9cecc-635">U+007B</span></span>|<span data-ttu-id="9cecc-636">U + 0964年和 U + 0965</span><span class="sxs-lookup"><span data-stu-id="9cecc-636">U+0964 and U+0965</span></span>|<span data-ttu-id="9cecc-637">U + 2045 到 U + 2051</span><span class="sxs-lookup"><span data-stu-id="9cecc-637">U+2045 to U+2051</span></span>|<span data-ttu-id="9cecc-638">到 U + FE19 U+FE10</span><span class="sxs-lookup"><span data-stu-id="9cecc-638">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="9cecc-639">U + 007 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-639">U+007D</span></span>|<span data-ttu-id="9cecc-640">U+0970</span><span class="sxs-lookup"><span data-stu-id="9cecc-640">U+0970</span></span>|<span data-ttu-id="9cecc-641">U + 2053 到 U + 205E</span><span class="sxs-lookup"><span data-stu-id="9cecc-641">U+2053 to U+205E</span></span>|<span data-ttu-id="9cecc-642">到 U + FE52 U+FE30</span><span class="sxs-lookup"><span data-stu-id="9cecc-642">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="9cecc-643">U+00A1</span><span class="sxs-lookup"><span data-stu-id="9cecc-643">U+00A1</span></span>|<span data-ttu-id="9cecc-644">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="9cecc-644">U+0DF4</span></span>|<span data-ttu-id="9cecc-645">U + 207 D 和 U + 207E</span><span class="sxs-lookup"><span data-stu-id="9cecc-645">U+207D and  U+207E</span></span>|<span data-ttu-id="9cecc-646">U + FE54 到 U + FE61</span><span class="sxs-lookup"><span data-stu-id="9cecc-646">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="9cecc-647">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="9cecc-647">U+00AB</span></span>|<span data-ttu-id="9cecc-648">U + 0E4F 到 U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="9cecc-648">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="9cecc-649">U + 208 D 和 U + 208E</span><span class="sxs-lookup"><span data-stu-id="9cecc-649">U+208D and U+208E</span></span>|<span data-ttu-id="9cecc-650">U+FE63</span><span class="sxs-lookup"><span data-stu-id="9cecc-650">U+FE63</span></span>|  
|<span data-ttu-id="9cecc-651">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="9cecc-651">U+00AD</span></span>|<span data-ttu-id="9cecc-652">U + 0F04 到 U + 0F12</span><span class="sxs-lookup"><span data-stu-id="9cecc-652">U+0F04 to U+0F12</span></span>|<span data-ttu-id="9cecc-653">U + 2329年和 U + 232A</span><span class="sxs-lookup"><span data-stu-id="9cecc-653">U+2329 and U+232A</span></span>|<span data-ttu-id="9cecc-654">U+FE68</span><span class="sxs-lookup"><span data-stu-id="9cecc-654">U+FE68</span></span>|  
|<span data-ttu-id="9cecc-655">U + 00B7</span><span class="sxs-lookup"><span data-stu-id="9cecc-655">U+00B7</span></span>|<span data-ttu-id="9cecc-656">U + 0F3A 到 U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="9cecc-656">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="9cecc-657">U + 2768 到 U + 2775</span><span class="sxs-lookup"><span data-stu-id="9cecc-657">U+2768 to U+2775</span></span>|<span data-ttu-id="9cecc-658">U + FE6A 和 U + FE6B</span><span class="sxs-lookup"><span data-stu-id="9cecc-658">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="9cecc-659">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="9cecc-659">U+00BB</span></span>|<span data-ttu-id="9cecc-660">U+0F85</span><span class="sxs-lookup"><span data-stu-id="9cecc-660">U+0F85</span></span>|<span data-ttu-id="9cecc-661">U + 27C 5 到 U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="9cecc-661">U+27C5 to U+27C6</span></span>|<span data-ttu-id="9cecc-662">U + FF01 到 U + FF03</span><span class="sxs-lookup"><span data-stu-id="9cecc-662">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="9cecc-663">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="9cecc-663">U+00BF</span></span>|<span data-ttu-id="9cecc-664">U + 0FD0 和 U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="9cecc-664">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="9cecc-665">U + 27E6 到 U + 27EB</span><span class="sxs-lookup"><span data-stu-id="9cecc-665">U+27E6 to U+27EB</span></span>|<span data-ttu-id="9cecc-666">U + FF05 到 U + FF0A</span><span class="sxs-lookup"><span data-stu-id="9cecc-666">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="9cecc-667">U+037E</span><span class="sxs-lookup"><span data-stu-id="9cecc-667">U+037E</span></span>|<span data-ttu-id="9cecc-668">U + 104A 到 U + 104F</span><span class="sxs-lookup"><span data-stu-id="9cecc-668">U+104A to U+104F</span></span>|<span data-ttu-id="9cecc-669">U + 2983 到 U + 2998</span><span class="sxs-lookup"><span data-stu-id="9cecc-669">U+2983 to U+2998</span></span>|<span data-ttu-id="9cecc-670">U + FF0C 到 U + FF0F</span><span class="sxs-lookup"><span data-stu-id="9cecc-670">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="9cecc-671">U+0387</span><span class="sxs-lookup"><span data-stu-id="9cecc-671">U+0387</span></span>|<span data-ttu-id="9cecc-672">U + 10FB</span><span class="sxs-lookup"><span data-stu-id="9cecc-672">U+10FB</span></span>|<span data-ttu-id="9cecc-673">到 U + 29DB U + 29D 8</span><span class="sxs-lookup"><span data-stu-id="9cecc-673">U+29D8 to U+29DB</span></span>|<span data-ttu-id="9cecc-674">U + FF1A 和 U + FF1B</span><span class="sxs-lookup"><span data-stu-id="9cecc-674">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="9cecc-675">U + 055A 到 U + 055F</span><span class="sxs-lookup"><span data-stu-id="9cecc-675">U+055A to U+055F</span></span>|<span data-ttu-id="9cecc-676">U + 1361 到 U + 1368</span><span class="sxs-lookup"><span data-stu-id="9cecc-676">U+1361 to U+1368</span></span>|<span data-ttu-id="9cecc-677">U + 29 FC 和 U + 29FD</span><span class="sxs-lookup"><span data-stu-id="9cecc-677">U+29FC and U+29FD</span></span>|<span data-ttu-id="9cecc-678">U + FF1F 和 U + FF20</span><span class="sxs-lookup"><span data-stu-id="9cecc-678">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="9cecc-679">U + 0589年和 U + 058A</span><span class="sxs-lookup"><span data-stu-id="9cecc-679">U+0589 and U+058A</span></span>|<span data-ttu-id="9cecc-680">U + 166 D 和 U + 166E</span><span class="sxs-lookup"><span data-stu-id="9cecc-680">U+166D and U+166E</span></span>|<span data-ttu-id="9cecc-681">U + 2CF9 到 U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="9cecc-681">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="9cecc-682">U + FF3B 到 U + FF3D</span><span class="sxs-lookup"><span data-stu-id="9cecc-682">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="9cecc-683">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="9cecc-683">U+05BE</span></span>|<span data-ttu-id="9cecc-684">U + 169B 和 U + 169 C</span><span class="sxs-lookup"><span data-stu-id="9cecc-684">U+169B and U+169C</span></span>|<span data-ttu-id="9cecc-685">U + 2CFE 和 U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="9cecc-685">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="9cecc-686">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="9cecc-686">U+FF3F</span></span>|  
|<span data-ttu-id="9cecc-687">U+05C0</span><span class="sxs-lookup"><span data-stu-id="9cecc-687">U+05C0</span></span>|<span data-ttu-id="9cecc-688">U + 16EB 到 U + 16ED</span><span class="sxs-lookup"><span data-stu-id="9cecc-688">U+16EB to U+16ED</span></span>|<span data-ttu-id="9cecc-689">U + 2E00 到 U + 2E17</span><span class="sxs-lookup"><span data-stu-id="9cecc-689">U+2E00 to U+2E17</span></span>|<span data-ttu-id="9cecc-690">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="9cecc-690">U+FF5B</span></span>|  
|<span data-ttu-id="9cecc-691">U+05C3</span><span class="sxs-lookup"><span data-stu-id="9cecc-691">U+05C3</span></span>|<span data-ttu-id="9cecc-692">U + 1735年和 U + 1736</span><span class="sxs-lookup"><span data-stu-id="9cecc-692">U+1735 and U+1736</span></span>|<span data-ttu-id="9cecc-693">U + 2E1C 和 U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="9cecc-693">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="9cecc-694">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="9cecc-694">U+FF5D</span></span>|  
|<span data-ttu-id="9cecc-695">U+05C6</span><span class="sxs-lookup"><span data-stu-id="9cecc-695">U+05C6</span></span>|<span data-ttu-id="9cecc-696">U + 17D 4 到 U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="9cecc-696">U+17D4 to U+17D6</span></span>|<span data-ttu-id="9cecc-697">U + 3001 到 U + 3003</span><span class="sxs-lookup"><span data-stu-id="9cecc-697">U+3001 to U+3003</span></span>|<span data-ttu-id="9cecc-698">U + FF5F 到 U + FF65</span><span class="sxs-lookup"><span data-stu-id="9cecc-698">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="9cecc-699">U + 05F3 和 U + 05F4</span><span class="sxs-lookup"><span data-stu-id="9cecc-699">U+05F3 and U+05F4</span></span>|<span data-ttu-id="9cecc-700">到 U + 17DA U + 17D 8</span><span class="sxs-lookup"><span data-stu-id="9cecc-700">U+17D8 to U+17DA</span></span>|<span data-ttu-id="9cecc-701">U + 3008 到 U + 3011</span><span class="sxs-lookup"><span data-stu-id="9cecc-701">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-702">下面的代码示例演示了<xref:System.Char.IsPunctuation%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-702">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : string * int -&gt; bool" Usage="System.char.IsPunctuation (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-703">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-703">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-704">
            <c>s</c> 中要计算的字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-704">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-705">指示指定字符串中位于指定位置处的字符是否属于标点符号类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-705">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-706">如果 <paramref name="index" /> 中位于 <paramref name="s" /> 处的字符是标点符号，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-706">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-707">在字符串中的字符位置从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="9cecc-707">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="9cecc-708">有效的标点符号是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`， `DashPunctuation`， `OpenPunctuation`， `ClosePunctuation`， `InititalQuotePunctuation`， `FinalQuotePunctuation`，或`OtherPunctuation`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-708">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InititalQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="9cecc-709">它们包括字符与下表中列出的 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="9cecc-709">They include characters with the Unicode code points listed in the following table.</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="9cecc-710">U+0021 到 U + 0023</span><span class="sxs-lookup"><span data-stu-id="9cecc-710">U+0021 to U+0023</span></span>|<span data-ttu-id="9cecc-711">U + 060 C 和 U + 060 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-711">U+060C and U+060D</span></span>|<span data-ttu-id="9cecc-712">U + 1800 到 U + 180A</span><span class="sxs-lookup"><span data-stu-id="9cecc-712">U+1800 to U+180A</span></span>|<span data-ttu-id="9cecc-713">U + 3014 到 U + 301F</span><span class="sxs-lookup"><span data-stu-id="9cecc-713">U+3014 to U+301F</span></span>|  
|<span data-ttu-id="9cecc-714">U + 0025 到 U + 002A</span><span class="sxs-lookup"><span data-stu-id="9cecc-714">U+0025 to U+002A</span></span>|<span data-ttu-id="9cecc-715">U+061B</span><span class="sxs-lookup"><span data-stu-id="9cecc-715">U+061B</span></span>|<span data-ttu-id="9cecc-716">U + 1944年和 U + 1945</span><span class="sxs-lookup"><span data-stu-id="9cecc-716">U+1944 and U+1945</span></span>|<span data-ttu-id="9cecc-717">U+3030</span><span class="sxs-lookup"><span data-stu-id="9cecc-717">U+3030</span></span>|  
|<span data-ttu-id="9cecc-718">U + 002 C 到 U + 002F</span><span class="sxs-lookup"><span data-stu-id="9cecc-718">U+002C to U+002F</span></span>|<span data-ttu-id="9cecc-719">U + 061E 和 U + 061F</span><span class="sxs-lookup"><span data-stu-id="9cecc-719">U+061E and U+061F</span></span>|<span data-ttu-id="9cecc-720">U + 19DE 和 U + 19DF</span><span class="sxs-lookup"><span data-stu-id="9cecc-720">U+19DE and U+19DF</span></span>|<span data-ttu-id="9cecc-721">U + 303D</span><span class="sxs-lookup"><span data-stu-id="9cecc-721">U+303D</span></span>|  
|<span data-ttu-id="9cecc-722">U + 003A 和 U + 003B</span><span class="sxs-lookup"><span data-stu-id="9cecc-722">U+003A and U+003B</span></span>|<span data-ttu-id="9cecc-723">U + 066A 到 U + 066 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-723">U+066A to U+066D</span></span>|<span data-ttu-id="9cecc-724">U + 1A1E 和 U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="9cecc-724">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="9cecc-725">U + 30A0</span><span class="sxs-lookup"><span data-stu-id="9cecc-725">U+30A0</span></span>|  
|<span data-ttu-id="9cecc-726">U + 003F 和 U + 0040</span><span class="sxs-lookup"><span data-stu-id="9cecc-726">U+003F and U+0040</span></span>|<span data-ttu-id="9cecc-727">U+06D4</span><span class="sxs-lookup"><span data-stu-id="9cecc-727">U+06D4</span></span>|<span data-ttu-id="9cecc-728">U + 1B5A 到 U + 1B60</span><span class="sxs-lookup"><span data-stu-id="9cecc-728">U+1B5A to U+1B60</span></span>|<span data-ttu-id="9cecc-729">U + 30FB</span><span class="sxs-lookup"><span data-stu-id="9cecc-729">U+30FB</span></span>|  
|<span data-ttu-id="9cecc-730">U + 005B 到 U + 005 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-730">U+005B to U+005D</span></span>|<span data-ttu-id="9cecc-731">U+0700 到 U + 070 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-731">U+0700 to U+070D</span></span>|<span data-ttu-id="9cecc-732">U + 2010 到 U + 2027</span><span class="sxs-lookup"><span data-stu-id="9cecc-732">U+2010 to U+2027</span></span>|<span data-ttu-id="9cecc-733">U + A874 到 U + A877</span><span class="sxs-lookup"><span data-stu-id="9cecc-733">U+A874 to U+A877</span></span>|  
|<span data-ttu-id="9cecc-734">U+005F</span><span class="sxs-lookup"><span data-stu-id="9cecc-734">U+005F</span></span>|<span data-ttu-id="9cecc-735">U + 07F7 到 U + 07F9</span><span class="sxs-lookup"><span data-stu-id="9cecc-735">U+07F7 to U+07F9</span></span>|<span data-ttu-id="9cecc-736">U+2030 到 U + 2043</span><span class="sxs-lookup"><span data-stu-id="9cecc-736">U+2030 to U+2043</span></span>|<span data-ttu-id="9cecc-737">U + FD3E 和 U + FD3F</span><span class="sxs-lookup"><span data-stu-id="9cecc-737">U+FD3E and U+FD3F</span></span>|  
|<span data-ttu-id="9cecc-738">U + 007B</span><span class="sxs-lookup"><span data-stu-id="9cecc-738">U+007B</span></span>|<span data-ttu-id="9cecc-739">U + 0964年和 U + 0965</span><span class="sxs-lookup"><span data-stu-id="9cecc-739">U+0964 and U+0965</span></span>|<span data-ttu-id="9cecc-740">U + 2045 到 U + 2051</span><span class="sxs-lookup"><span data-stu-id="9cecc-740">U+2045 to U+2051</span></span>|<span data-ttu-id="9cecc-741">到 U + FE19 U+FE10</span><span class="sxs-lookup"><span data-stu-id="9cecc-741">U+FE10 to U+FE19</span></span>|  
|<span data-ttu-id="9cecc-742">U + 007 D</span><span class="sxs-lookup"><span data-stu-id="9cecc-742">U+007D</span></span>|<span data-ttu-id="9cecc-743">U+0970</span><span class="sxs-lookup"><span data-stu-id="9cecc-743">U+0970</span></span>|<span data-ttu-id="9cecc-744">U + 2053 到 U + 205E</span><span class="sxs-lookup"><span data-stu-id="9cecc-744">U+2053 to U+205E</span></span>|<span data-ttu-id="9cecc-745">到 U + FE52 U+FE30</span><span class="sxs-lookup"><span data-stu-id="9cecc-745">U+FE30 to U+FE52</span></span>|  
|<span data-ttu-id="9cecc-746">U+00A1</span><span class="sxs-lookup"><span data-stu-id="9cecc-746">U+00A1</span></span>|<span data-ttu-id="9cecc-747">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="9cecc-747">U+0DF4</span></span>|<span data-ttu-id="9cecc-748">U + 207 D 和 U + 207E</span><span class="sxs-lookup"><span data-stu-id="9cecc-748">U+207D and  U+207E</span></span>|<span data-ttu-id="9cecc-749">U + FE54 到 U + FE61</span><span class="sxs-lookup"><span data-stu-id="9cecc-749">U+FE54 to U+FE61</span></span>|  
|<span data-ttu-id="9cecc-750">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="9cecc-750">U+00AB</span></span>|<span data-ttu-id="9cecc-751">U + 0E4F 到 U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="9cecc-751">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="9cecc-752">U + 208 D 和 U + 208E</span><span class="sxs-lookup"><span data-stu-id="9cecc-752">U+208D and U+208E</span></span>|<span data-ttu-id="9cecc-753">U+FE63</span><span class="sxs-lookup"><span data-stu-id="9cecc-753">U+FE63</span></span>|  
|<span data-ttu-id="9cecc-754">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="9cecc-754">U+00AD</span></span>|<span data-ttu-id="9cecc-755">U + 0F04 到 U + 0F12</span><span class="sxs-lookup"><span data-stu-id="9cecc-755">U+0F04 to U+0F12</span></span>|<span data-ttu-id="9cecc-756">U + 2329年和 U + 232A</span><span class="sxs-lookup"><span data-stu-id="9cecc-756">U+2329 and U+232A</span></span>|<span data-ttu-id="9cecc-757">U+FE68</span><span class="sxs-lookup"><span data-stu-id="9cecc-757">U+FE68</span></span>|  
|<span data-ttu-id="9cecc-758">U + 00B7</span><span class="sxs-lookup"><span data-stu-id="9cecc-758">U+00B7</span></span>|<span data-ttu-id="9cecc-759">U + 0F3A 到 U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="9cecc-759">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="9cecc-760">U + 2768 到 U + 2775</span><span class="sxs-lookup"><span data-stu-id="9cecc-760">U+2768 to U+2775</span></span>|<span data-ttu-id="9cecc-761">U + FE6A 和 U + FE6B</span><span class="sxs-lookup"><span data-stu-id="9cecc-761">U+FE6A and U+FE6B</span></span>|  
|<span data-ttu-id="9cecc-762">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="9cecc-762">U+00BB</span></span>|<span data-ttu-id="9cecc-763">U+0F85</span><span class="sxs-lookup"><span data-stu-id="9cecc-763">U+0F85</span></span>|<span data-ttu-id="9cecc-764">U + 27C 5 到 U + 27C 6</span><span class="sxs-lookup"><span data-stu-id="9cecc-764">U+27C5 to U+27C6</span></span>|<span data-ttu-id="9cecc-765">U + FF01 到 U + FF03</span><span class="sxs-lookup"><span data-stu-id="9cecc-765">U+FF01 to U+FF03</span></span>|  
|<span data-ttu-id="9cecc-766">U + 00BF</span><span class="sxs-lookup"><span data-stu-id="9cecc-766">U+00BF</span></span>|<span data-ttu-id="9cecc-767">U + 0FD0 和 U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="9cecc-767">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="9cecc-768">U + 27E6 到 U + 27EB</span><span class="sxs-lookup"><span data-stu-id="9cecc-768">U+27E6 to U+27EB</span></span>|<span data-ttu-id="9cecc-769">U + FF05 到 U + FF0A</span><span class="sxs-lookup"><span data-stu-id="9cecc-769">U+FF05 to U+FF0A</span></span>|  
|<span data-ttu-id="9cecc-770">U+037E</span><span class="sxs-lookup"><span data-stu-id="9cecc-770">U+037E</span></span>|<span data-ttu-id="9cecc-771">U + 104A 到 U + 104F</span><span class="sxs-lookup"><span data-stu-id="9cecc-771">U+104A to U+104F</span></span>|<span data-ttu-id="9cecc-772">U + 2983 到 U + 2998</span><span class="sxs-lookup"><span data-stu-id="9cecc-772">U+2983 to U+2998</span></span>|<span data-ttu-id="9cecc-773">U + FF0C 到 U + FF0F</span><span class="sxs-lookup"><span data-stu-id="9cecc-773">U+FF0C to U+FF0F</span></span>|  
|<span data-ttu-id="9cecc-774">U+0387</span><span class="sxs-lookup"><span data-stu-id="9cecc-774">U+0387</span></span>|<span data-ttu-id="9cecc-775">U + 10FB</span><span class="sxs-lookup"><span data-stu-id="9cecc-775">U+10FB</span></span>|<span data-ttu-id="9cecc-776">到 U + 29DB U + 29D 8</span><span class="sxs-lookup"><span data-stu-id="9cecc-776">U+29D8 to U+29DB</span></span>|<span data-ttu-id="9cecc-777">U + FF1A 和 U + FF1B</span><span class="sxs-lookup"><span data-stu-id="9cecc-777">U+FF1A and U+FF1B</span></span>|  
|<span data-ttu-id="9cecc-778">U + 055A 到 U + 055F</span><span class="sxs-lookup"><span data-stu-id="9cecc-778">U+055A to U+055F</span></span>|<span data-ttu-id="9cecc-779">U + 1361 到 U + 1368</span><span class="sxs-lookup"><span data-stu-id="9cecc-779">U+1361 to U+1368</span></span>|<span data-ttu-id="9cecc-780">U + 29 FC 和 U + 29FD</span><span class="sxs-lookup"><span data-stu-id="9cecc-780">U+29FC and U+29FD</span></span>|<span data-ttu-id="9cecc-781">U + FF1F 和 U + FF20</span><span class="sxs-lookup"><span data-stu-id="9cecc-781">U+FF1F and U+FF20</span></span>|  
|<span data-ttu-id="9cecc-782">U + 0589年和 U + 058A</span><span class="sxs-lookup"><span data-stu-id="9cecc-782">U+0589 and U+058A</span></span>|<span data-ttu-id="9cecc-783">U + 166 D 和 U + 166E</span><span class="sxs-lookup"><span data-stu-id="9cecc-783">U+166D and U+166E</span></span>|<span data-ttu-id="9cecc-784">U + 2CF9 到 U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="9cecc-784">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="9cecc-785">U + FF3B 到 U + FF3D</span><span class="sxs-lookup"><span data-stu-id="9cecc-785">U+FF3B to U+FF3D</span></span>|  
|<span data-ttu-id="9cecc-786">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="9cecc-786">U+05BE</span></span>|<span data-ttu-id="9cecc-787">U + 169B 和 U + 169 C</span><span class="sxs-lookup"><span data-stu-id="9cecc-787">U+169B and U+169C</span></span>|<span data-ttu-id="9cecc-788">U + 2CFE 和 U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="9cecc-788">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="9cecc-789">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="9cecc-789">U+FF3F</span></span>|  
|<span data-ttu-id="9cecc-790">U+05C0</span><span class="sxs-lookup"><span data-stu-id="9cecc-790">U+05C0</span></span>|<span data-ttu-id="9cecc-791">U + 16EB 到 U + 16ED</span><span class="sxs-lookup"><span data-stu-id="9cecc-791">U+16EB to U+16ED</span></span>|<span data-ttu-id="9cecc-792">U + 2E00 到 U + 2E17</span><span class="sxs-lookup"><span data-stu-id="9cecc-792">U+2E00 to U+2E17</span></span>|<span data-ttu-id="9cecc-793">U + FF5B</span><span class="sxs-lookup"><span data-stu-id="9cecc-793">U+FF5B</span></span>|  
|<span data-ttu-id="9cecc-794">U+05C3</span><span class="sxs-lookup"><span data-stu-id="9cecc-794">U+05C3</span></span>|<span data-ttu-id="9cecc-795">U + 1735年和 U + 1736</span><span class="sxs-lookup"><span data-stu-id="9cecc-795">U+1735 and U+1736</span></span>|<span data-ttu-id="9cecc-796">U + 2E1C 和 U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="9cecc-796">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="9cecc-797">U + FF5D</span><span class="sxs-lookup"><span data-stu-id="9cecc-797">U+FF5D</span></span>|  
|<span data-ttu-id="9cecc-798">U+05C6</span><span class="sxs-lookup"><span data-stu-id="9cecc-798">U+05C6</span></span>|<span data-ttu-id="9cecc-799">U + 17D 4 到 U + 17D 6</span><span class="sxs-lookup"><span data-stu-id="9cecc-799">U+17D4 to U+17D6</span></span>|<span data-ttu-id="9cecc-800">U + 3001 到 U + 3003</span><span class="sxs-lookup"><span data-stu-id="9cecc-800">U+3001 to U+3003</span></span>|<span data-ttu-id="9cecc-801">U + FF5F 到 U + FF65</span><span class="sxs-lookup"><span data-stu-id="9cecc-801">U+FF5F to U+FF65</span></span>|  
|<span data-ttu-id="9cecc-802">U + 05F3 和 U + 05F4</span><span class="sxs-lookup"><span data-stu-id="9cecc-802">U+05F3 and U+05F4</span></span>|<span data-ttu-id="9cecc-803">到 U + 17DA U + 17D 8</span><span class="sxs-lookup"><span data-stu-id="9cecc-803">U+17D8 to U+17DA</span></span>|<span data-ttu-id="9cecc-804">U + 3008 到 U + 3011</span><span class="sxs-lookup"><span data-stu-id="9cecc-804">U+3008 to U+3011</span></span>||  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-805">下面的代码示例演示了<xref:System.Char.IsPunctuation%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-805">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-806">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-806">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-807">
            <paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-807">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSeparator">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-808">指示 Unicode 字符是否属于分隔符类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-808">Indicates whether a Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-809">Unicode 标准可识别分隔符的三个子的类别：</span><span class="sxs-lookup"><span data-stu-id="9cecc-809">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="9cecc-810">空格分隔符 (<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>类别)，其中包括 \u0020 等字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-810">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="9cecc-811">行分隔符 (<xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType>类别)，其中包括 \u2028。</span><span class="sxs-lookup"><span data-stu-id="9cecc-811">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="9cecc-812">段落分隔符 (<xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType>类别)，其中包括 \u2029。</span><span class="sxs-lookup"><span data-stu-id="9cecc-812">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9cecc-813">Unicode 标准将字符 \u000A (LF)、 \u000C (FF) 和 \u000D (CR) 分类为控制字符 (的成员<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>类别)，而不是分隔符字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-813">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(char c);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : char -&gt; bool" Usage="System.char.IsSeparator c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-814">要计算的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-814">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-815">指示指定的 Unicode 字符是否属于分隔符类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-815">Indicates whether the specified Unicode character is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-816">如果 <see langword="true" /> 是分隔符，则为 <paramref name="c" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-816">
              <see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-817">Unicode 标准可识别分隔符的三个子的类别：</span><span class="sxs-lookup"><span data-stu-id="9cecc-817">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="9cecc-818">空格分隔符 (<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>类别)，其中包括 \u0020 等字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-818">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="9cecc-819">行分隔符 (<xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType>类别)，其中包括 \u2028。</span><span class="sxs-lookup"><span data-stu-id="9cecc-819">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="9cecc-820">段落分隔符 (<xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType>类别)，其中包括 \u2029。</span><span class="sxs-lookup"><span data-stu-id="9cecc-820">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9cecc-821">Unicode 标准将字符 \u000A (LF)、 \u000C (FF) 和 \u000D (CR) 分类为控制字符 (的成员<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>类别)，而不是分隔符字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-821">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-822">以下示例列出了<xref:System.Char>归类为分隔符字符的对象。</span><span class="sxs-lookup"><span data-stu-id="9cecc-822">The following example lists the <xref:System.Char> objects that are classified as separator characters.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator1.cpp#1)]
 [!code-csharp[System.Char.IsSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator1.cs#1)]
 [!code-vb[System.Char.IsSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : string * int -&gt; bool" Usage="System.char.IsSeparator (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-823">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-823">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-824">
            <c>s</c> 中要计算的字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-824">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-825">指示指定字符串中位于指定位置处的字符是否属于分隔符类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-825">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-826">如果 <paramref name="index" /> 中位于 <paramref name="s" /> 处的字符是分隔符，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-826">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-827">在字符串中的字符位置从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="9cecc-827">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="9cecc-828">Unicode 标准可识别分隔符的三个子的类别：</span><span class="sxs-lookup"><span data-stu-id="9cecc-828">The Unicode standard recognizes three subcategories of separators:</span></span>  
  
-   <span data-ttu-id="9cecc-829">空格分隔符 (<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>类别)，其中包括 \u0020 等字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-829">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>  
  
-   <span data-ttu-id="9cecc-830">行分隔符 (<xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType>类别)，其中包括 \u2028。</span><span class="sxs-lookup"><span data-stu-id="9cecc-830">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>  
  
-   <span data-ttu-id="9cecc-831">段落分隔符 (<xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType>类别)，其中包括 \u2029。</span><span class="sxs-lookup"><span data-stu-id="9cecc-831">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9cecc-832">Unicode 标准将字符 \u000A (LF)、 \u000C (FF) 和 \u000D (CR) 分类为控制字符 (的成员<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType>类别)，而不是分隔符字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-832">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-833">下面的示例演示<xref:System.Char.IsSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-833">The following example demonstrates <xref:System.Char.IsSeparator%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSeparator#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator.cpp#10)]
 [!code-csharp[System.Char.IsSeparator#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator.cs#10)]
 [!code-vb[System.Char.IsSeparator#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-834">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-834">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-835">
            <paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-835">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-836">指示字符是否具有代理项代码单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-836">Indicates whether a character has a surrogate code unit.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : char -&gt; bool" Usage="System.char.IsSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-837">要计算的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-837">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-838">指示指定的字符是否具有指定的代理项代码单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-838">Indicates whether the specified character has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-839">如果 <paramref name="c" /> 为高代理项或低代理项，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-839">
              <see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-840">代理项是<xref:System.Char>使用 utf-16 代码单位从 u+d800 到 U + DFFF 的范围中的对象。</span><span class="sxs-lookup"><span data-stu-id="9cecc-840">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="9cecc-841">每个字符且在此范围内的代码单元属于<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-841">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="9cecc-842">单独的代理项代码单位不具有其自己的任何解释，但具有含义仅当使用作为代理项对的一部分。</span><span class="sxs-lookup"><span data-stu-id="9cecc-842">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="9cecc-843">有关代理项对的详细信息，请参阅上的 Unicode 标准[Unicode 主页](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-843">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-844">下面的示例演示<xref:System.Char.IsSurrogate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-844">The following example demonstrates the <xref:System.Char.IsSurrogate%2A> method.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : string * int -&gt; bool" Usage="System.char.IsSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-845">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-845">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-846">
            <c>s</c> 中要计算的字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-846">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-847">指示指定字符串中位于指定位置的字符是否具有代理项代码单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-847">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-848">如果 <paramref name="index" /> 中位于位置 <paramref name="s" /> 的字符为高代理项或低代理项，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-848">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-849">在字符串中的字符位置从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="9cecc-849">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="9cecc-850">代理项是<xref:System.Char>使用 utf-16 代码单位从 u+d800 到 U + DFFF 的范围中的对象。</span><span class="sxs-lookup"><span data-stu-id="9cecc-850">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="9cecc-851">每个字符且在此范围内的代码单元属于<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="9cecc-851">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="9cecc-852">单独的代理项代码单位不具有其自己的任何解释，但具有含义仅当使用作为代理项对的一部分。</span><span class="sxs-lookup"><span data-stu-id="9cecc-852">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="9cecc-853">有关代理项对的详细信息，请参阅上的 Unicode 标准[Unicode 主页](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-853">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-854">下面的代码示例演示了<xref:System.Char.IsSurrogate%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-854">The following code example demonstrates <xref:System.Char.IsSurrogate%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-855">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-855">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-856">
            <paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-856">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogatePair">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-857">指示两个指定的 <see cref="T:System.Char" /> 对象是否形成一个代理项对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-857">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (highSurrogate As Char, lowSurrogate As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : char * char -&gt; bool" Usage="System.char.IsSurrogatePair (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate">
          <span data-ttu-id="9cecc-858">要作为代理项对的高代理项进行计算的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-858">The character to evaluate as the high surrogate of a surrogate pair.</span>
          </span>
        </param>
        <param name="lowSurrogate">
          <span data-ttu-id="9cecc-859">要作为代理项对的低代理项进行计算的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-859">The character to evaluate as the low surrogate of a surrogate pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-860">指示两个指定的 <see cref="T:System.Char" /> 对象是否形成一个代理项对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-860">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-861">如果 <see langword="true" /> 参数的数值范围是从 U+D800 到 U+DBFF，且 <paramref name="highSurrogate" /> 参数的数值是从 U+DC00 到 U+DFFF，则为 <paramref name="lowSurrogate" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-861">
              <see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-862">通常，由单个 16 位 Unicode 代码单元表示单个字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-862">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="9cecc-863">Utf-16 编码还支持的代理项对，从而允许单个抽象字符来表示的两个 16 位代码单元。</span><span class="sxs-lookup"><span data-stu-id="9cecc-863">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="9cecc-864">第一个代码单元，其值的范围从 u+d800 到 U + DBFF，是高代理项。</span><span class="sxs-lookup"><span data-stu-id="9cecc-864">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="9cecc-865">第二个代码单元，其值的范围从 u+dc00 到 U + DFFF，则低代理项。</span><span class="sxs-lookup"><span data-stu-id="9cecc-865">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="9cecc-866">单独的代理项码位具有其自己的解释。</span><span class="sxs-lookup"><span data-stu-id="9cecc-866">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="9cecc-867">有关代理项字符和 Unicode 标准的详细信息，请参阅[Unicode 主页](http://go.microsoft.com/fwlink/?LinkId=37123)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-867">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-868">下面的代码示例演示<xref:System.Char.IsHighSurrogate%2A>， <xref:System.Char.IsLowSurrogate%2A>，和<xref:System.Char.IsSurrogatePair%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-868">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : string * int -&gt; bool" Usage="System.char.IsSurrogatePair (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-869">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-869">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-870">
            <c>s</c> 中要计算的字符对的开始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-870">The starting position of the pair of characters to evaluate within <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-871">指示字符串中指定位置处的两个相邻 <see cref="T:System.Char" /> 对象是否形成一个代理项对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-871">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-872">如果 <paramref name="s" /> 参数包括 <paramref name="index" /> 和 <paramref name="index" /> + 1 位置处的相邻字符，并且 <paramref name="index" /> 位置处字符的数值在 U+D800 到 U+DBFF 范围内，<paramref name="index" /> +1 位置处字符的数值在 U+DC00 到 U+DFFF 范围内，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-872">
              <see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-873">通常，由单个 16 位 Unicode 代码单元表示单个字符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-873">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="9cecc-874">Utf-16 编码还支持的代理项对，从而允许单个抽象字符来表示的两个 16 位代码单元。</span><span class="sxs-lookup"><span data-stu-id="9cecc-874">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="9cecc-875">第一个代码单元，其值的范围从 u+d800 到 U + DBFF，是高代理项。</span><span class="sxs-lookup"><span data-stu-id="9cecc-875">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="9cecc-876">第二个代码单元，其值的范围从 u+dc00 到 U + DFFF，则低代理项。</span><span class="sxs-lookup"><span data-stu-id="9cecc-876">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="9cecc-877">单独的代理项码位具有其自己的解释。</span><span class="sxs-lookup"><span data-stu-id="9cecc-877">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="9cecc-878">有关代理项字符和 Unicode 标准的详细信息，请参阅[Unicode 主页](http://go.microsoft.com/fwlink/?LinkId=37123)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-878">For more information about surrogates and the Unicode Standard, see the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-879">下面的代码示例演示<xref:System.Char.IsHighSurrogate%2A>， <xref:System.Char.IsLowSurrogate%2A>，和<xref:System.Char.IsSurrogatePair%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-879">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>  
  
 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-880">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-880">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-881">
            <paramref name="index" /> 不是 <paramref name="s" /> 内的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-881">
              <paramref name="index" /> is not a position within <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSymbol">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-882">指示 Unicode 字符是否属于符号字符类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-882">Indicates whether a Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-883">有效的符号是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `MathSymbol`， `CurrencySymbol`， `ModifierSymbol`，和`OtherSymbol`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-883">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="9cecc-884">Unicode 标准中的符号是一组松散定义的字符包括以下各项：</span><span class="sxs-lookup"><span data-stu-id="9cecc-884">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="9cecc-885">货币符号。</span><span class="sxs-lookup"><span data-stu-id="9cecc-885">Currency symbols.</span></span>  
  
-   <span data-ttu-id="9cecc-886">Letterlike 符号，其中包括一系列数学字母数字符号，以及诸如 ℅、 № 之类的符号和™。</span><span class="sxs-lookup"><span data-stu-id="9cecc-886">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="9cecc-887">数字形式，如上标和下标。</span><span class="sxs-lookup"><span data-stu-id="9cecc-887">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="9cecc-888">数学运算符和箭头。</span><span class="sxs-lookup"><span data-stu-id="9cecc-888">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="9cecc-889">几何符号。</span><span class="sxs-lookup"><span data-stu-id="9cecc-889">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="9cecc-890">技术符号。</span><span class="sxs-lookup"><span data-stu-id="9cecc-890">Technical symbols.</span></span>  
  
-   <span data-ttu-id="9cecc-891">Braille 模式。</span><span class="sxs-lookup"><span data-stu-id="9cecc-891">Braille patterns.</span></span>  
  
-   <span data-ttu-id="9cecc-892">丁贝符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-892">Dingbats.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(char c);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : char -&gt; bool" Usage="System.char.IsSymbol c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-893">要计算的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-893">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-894">指示指定的 Unicode 字符是否属于符号字符类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-894">Indicates whether the specified Unicode character is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-895">如果 <paramref name="c" /> 是符号字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-895">
              <see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-896">有效的符号是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `MathSymbol`， `CurrencySymbol`， `ModifierSymbol`，和`OtherSymbol`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-896">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="9cecc-897">Unicode 标准中的符号是一组松散定义的字符包括以下各项：</span><span class="sxs-lookup"><span data-stu-id="9cecc-897">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="9cecc-898">货币符号。</span><span class="sxs-lookup"><span data-stu-id="9cecc-898">Currency symbols.</span></span>  
  
-   <span data-ttu-id="9cecc-899">Letterlike 符号，其中包括一系列数学字母数字符号，以及诸如 ℅、 № 之类的符号和™。</span><span class="sxs-lookup"><span data-stu-id="9cecc-899">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="9cecc-900">数字形式，如上标和下标。</span><span class="sxs-lookup"><span data-stu-id="9cecc-900">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="9cecc-901">数学运算符和箭头。</span><span class="sxs-lookup"><span data-stu-id="9cecc-901">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="9cecc-902">几何符号。</span><span class="sxs-lookup"><span data-stu-id="9cecc-902">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="9cecc-903">技术符号。</span><span class="sxs-lookup"><span data-stu-id="9cecc-903">Technical symbols.</span></span>  
  
-   <span data-ttu-id="9cecc-904">Braille 模式。</span><span class="sxs-lookup"><span data-stu-id="9cecc-904">Braille patterns.</span></span>  
  
-   <span data-ttu-id="9cecc-905">丁贝符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-905">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-906">下面的代码示例演示了<xref:System.Char.IsSymbol%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-906">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : string * int -&gt; bool" Usage="System.char.IsSymbol (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-907">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-907">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-908">
            <c>s</c> 中要计算的字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-908">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-909">指示指定字符串中位于指定位置处的字符是否属于符号字符类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-909">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-910">如果 <paramref name="index" /> 中位于 <paramref name="s" /> 处的字符是符号字符，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-910">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-911">在字符串中的字符位置从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="9cecc-911">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="9cecc-912">有效的符号是中的以下类别的成员<xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`， `CurrencySymbol`， `ModifierSymbol`，和`OtherSymbol`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-912">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>  
  
 <span data-ttu-id="9cecc-913">Unicode 标准中的符号是一组松散定义的字符包括以下各项：</span><span class="sxs-lookup"><span data-stu-id="9cecc-913">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>  
  
-   <span data-ttu-id="9cecc-914">货币符号。</span><span class="sxs-lookup"><span data-stu-id="9cecc-914">Currency symbols.</span></span>  
  
-   <span data-ttu-id="9cecc-915">Letterlike 符号，其中包括一系列数学字母数字符号，以及诸如 ℅、 № 之类的符号和™。</span><span class="sxs-lookup"><span data-stu-id="9cecc-915">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>  
  
-   <span data-ttu-id="9cecc-916">数字形式，如上标和下标。</span><span class="sxs-lookup"><span data-stu-id="9cecc-916">Number forms, such as subscripts and superscripts.</span></span>  
  
-   <span data-ttu-id="9cecc-917">数学运算符和箭头。</span><span class="sxs-lookup"><span data-stu-id="9cecc-917">Mathematical operators and arrows.</span></span>  
  
-   <span data-ttu-id="9cecc-918">几何符号。</span><span class="sxs-lookup"><span data-stu-id="9cecc-918">Geometric symbols.</span></span>  
  
-   <span data-ttu-id="9cecc-919">技术符号。</span><span class="sxs-lookup"><span data-stu-id="9cecc-919">Technical symbols.</span></span>  
  
-   <span data-ttu-id="9cecc-920">Braille 模式。</span><span class="sxs-lookup"><span data-stu-id="9cecc-920">Braille patterns.</span></span>  
  
-   <span data-ttu-id="9cecc-921">丁贝符。</span><span class="sxs-lookup"><span data-stu-id="9cecc-921">Dingbats.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-922">下面的代码示例演示了<xref:System.Char.IsSymbol%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-922">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-923">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-923">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-924">
            <paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-924">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-925">指示 Unicode 字符是否属于大写字母类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-925">Indicates whether a Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(char c);" />
      <MemberSignature Language="F#" Value="static member IsUpper : char -&gt; bool" Usage="System.char.IsUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-926">要计算的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-926">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-927">指示指定的 Unicode 字符是否属于大写字母类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-927">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-928">如果 <see langword="true" /> 是一个大写字母，则为 <paramref name="c" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-928">
              <see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-929">有效的大写形式是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-929">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsLower(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsUpper : string * int -&gt; bool" Usage="System.char.IsUpper (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-930">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-930">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-931">
            <c>s</c> 中要计算的字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-931">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-932">指示指定字符串中位于指定位置处的字符是否属于大写字母类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-932">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-933">如果 <paramref name="index" /> 中位于 <paramref name="s" /> 处的字符是大写字母，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-933">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-934">在字符串中的字符位置从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="9cecc-934">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="9cecc-935">有效的大写形式是中的以下类别的成员<xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-935">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-936">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-936">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-937">
            <paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-937">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWhiteSpace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-938">指示 Unicode 字符是否属于空格类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-938">Indicates whether a Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-939">空白字符是以下的 Unicode 字符：</span><span class="sxs-lookup"><span data-stu-id="9cecc-939">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="9cecc-940">成员<xref:System.Globalization.UnicodeCategory.SpaceSeparator>类别，其中包括字符空格 (U + 0020)，则欧甘文空间标记 (U + 1680)，EN 四 (U + 2000)、 EM 四 （U + 2001 年），EN 空格 (U + 2002)、 EM 空格 (U + 2003)，三个每个 EM 空间 （U + 2004 年），四个每个 EM 空间 (U + 2005) 中，六个每个 EM空格 (U + 2006)、 图空格 (U + 2007)，标点空格 (U + 2008)，精简空格 (U + 2009)，细空格 (U + 200A)、 窄无中断空格 (U + 202F)、 中等数学空格 (U + 205F) 和表意空格 (U + 3000)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-940">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="9cecc-941">成员<xref:System.Globalization.UnicodeCategory.LineSeparator>类别，只包含行分隔符字符 (U + 2028)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-941">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="9cecc-942">成员<xref:System.Globalization.UnicodeCategory.ParagraphSeparator>类别，只包含段落分隔符字符 (U + 2029)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-942">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="9cecc-943">字符表的字符 (U + 0009)、 换行符 (U + 000A)、 行表 (U + 000B)、 换页符 (U + 000 C)、 回车符 (U + 000d)，接下来行 (U + 0085)，并无中断空格 (U + 00A0)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-943">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), NEXT LINE (U+0085), and NO-BREAK SPACE (U+00A0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(char c);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : char -&gt; bool" Usage="System.char.IsWhiteSpace c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-944">要计算的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-944">The Unicode character to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-945">指示指定的 Unicode 字符是否属于空格类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-945">Indicates whether the specified Unicode character is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-946">如果 <see langword="true" /> 是空格，则为 <paramref name="c" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-946">
              <see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-947">空白字符是以下的 Unicode 字符：</span><span class="sxs-lookup"><span data-stu-id="9cecc-947">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="9cecc-948">成员<xref:System.Globalization.UnicodeCategory.SpaceSeparator>类别，其中包括空格的字符 (U + 0020)，无中断空格 (U + 00A0)、 欧甘文空间标记 (U + 1680)，EN 四 (U + 2000)、 EM 四 （U + 2001 年），EN 空格 (U + 2002)、 EM 空格 (U + 2003)，三个每个 EM 空间 （U + 2004 年），四个每个 EM 空间 (U+ 2005)，每个 EM 六个空间 (U + 2006)，数字空格 (U + 2007)，标点精简空格 (U + 2008)，空格 (U + 2009)，细空格 (U + 200A)、 窄无中断空格 (U + 202F)、 中等数学空格 (U + 205F) 和表意空格 (U + 3000)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-948">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="9cecc-949">成员<xref:System.Globalization.UnicodeCategory.LineSeparator>类别，只包含行分隔符字符 (U + 2028)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-949">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="9cecc-950">成员<xref:System.Globalization.UnicodeCategory.ParagraphSeparator>类别，只包含段落分隔符字符 (U + 2029)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-950">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="9cecc-951">字符表的字符 (U + 0009) 线路源 (U + 000A)、 行表 (U + 000B)、 换页符 (U + 000 C)、 回车符 (U + 000d)、 传感器和接下来线路 (U + 0085)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-951">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-952">下面的示例演示<xref:System.Char.IsWhiteSpace%28System.Char%29>方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-952">The following example demonstrates the <xref:System.Char.IsWhiteSpace%28System.Char%29> method.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : string * int -&gt; bool" Usage="System.char.IsWhiteSpace (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-953">一个字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-953">A string.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9cecc-954">
            <c>s</c> 中要计算的字符的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-954">The position of the character to evaluate in <c>s</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-955">指示指定字符串中位于指定位置处的字符是否属于空格类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-955">Indicates whether the character at the specified position in a specified string is categorized as white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-956">如果 <paramref name="index" /> 中位于 <paramref name="s" /> 处的字符是空白，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-956">
              <see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-957">在字符串中的字符位置从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="9cecc-957">Character positions in a string are indexed starting from zero.</span></span>  
  
 <span data-ttu-id="9cecc-958">空白字符是以下的 Unicode 字符：</span><span class="sxs-lookup"><span data-stu-id="9cecc-958">White space characters are the following Unicode characters:</span></span>  
  
-   <span data-ttu-id="9cecc-959">成员<xref:System.Globalization.UnicodeCategory.SpaceSeparator>类别，其中包括空格的字符 (U + 0020)，无中断空格 (U + 00A0)、 欧甘文空间标记 (U + 1680)，EN 四 (U + 2000)、 EM 四 （U + 2001 年），EN 空格 (U + 2002)、 EM 空格 (U + 2003)，三个每个 EM 空间 （U + 2004 年），四个每个 EM 空间 (U+ 2005)，每个 EM 六个空间 (U + 2006)，数字空格 (U + 2007)，标点精简空格 (U + 2008)，空格 (U + 2009)，细空格 (U + 200A)、 窄无中断空格 (U + 202F)、 中等数学空格 (U + 205F) 和表意空格 (U + 3000)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-959">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>  
  
-   <span data-ttu-id="9cecc-960">成员<xref:System.Globalization.UnicodeCategory.LineSeparator>类别，只包含行分隔符字符 (U + 2028)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-960">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>  
  
-   <span data-ttu-id="9cecc-961">成员<xref:System.Globalization.UnicodeCategory.ParagraphSeparator>类别，只包含段落分隔符字符 (U + 2029)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-961">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>  
  
-   <span data-ttu-id="9cecc-962">字符表的字符 (U + 0009) 线路源 (U + 000A)、 行表 (U + 000B)、 换页符 (U + 000 C)、 回车符 (U + 000d)、 传感器和接下来线路 (U + 0085)。</span><span class="sxs-lookup"><span data-stu-id="9cecc-962">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-963">下面的代码示例演示了<xref:System.Char.IsWhiteSpace%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-963">The following code example demonstrates <xref:System.Char.IsWhiteSpace%2A>.</span></span>  
  
 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-964">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-964">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9cecc-965">
            <paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-965">
              <paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const char MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxValue;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : char" Usage="System.char.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-966">表示 <see cref="T:System.Char" /> 的最大可能值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-966">Represents the largest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="9cecc-967">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-967">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-968">此常量的值为十六进制 0xFFFF。</span><span class="sxs-lookup"><span data-stu-id="9cecc-968">The value of this constant is hexadecimal 0xFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const char MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinValue;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : char" Usage="System.char.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-969">表示 <see cref="T:System.Char" /> 的最小可能值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-969">Represents the smallest possible value of a <see cref="T:System.Char" />.</span>
          </span>
          <span data-ttu-id="9cecc-970">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-970">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-971">此常量的值为十六进制 0x00。</span><span class="sxs-lookup"><span data-stu-id="9cecc-971">The value of this constant is hexadecimal 0x00.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static char Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; char" Usage="System.char.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-972">包含单个字符的字符串，或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-972">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-973">将指定字符串的值转换为它的等效 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-973">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-974">一个等效于 <paramref name="s" /> 中唯一字符的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-974">A Unicode character equivalent to the sole character in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9cecc-975">下面的代码示例演示了<xref:System.Char.Parse%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-975">The following code example demonstrates <xref:System.Char.Parse%2A>.</span></span>  
  
 [!code-cpp[System.Char.Parse#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Parse/CPP/parse.cpp#15)]
 [!code-csharp[System.Char.Parse#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Parse/CS/parse.cs#15)]
 [!code-vb[System.Char.Parse#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Parse/VB/parse.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-976">
            <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-976">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9cecc-977">
            <paramref name="s" /> 的长度不是 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-977">The length of <paramref name="s" /> is not 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-978">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-978">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-979">**注意**不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-979">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="9cecc-980">尝试这样做会引发 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-980">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-981">不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-981">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="9cecc-982">不返回任何值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-982">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="9cecc-983">不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-983">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-984">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-984">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-985">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-985">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-986">当前 <see cref="T:System.Char" /> 对象的转换值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-986">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-987">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="9cecc-987">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9cecc-988">它只能在 <xref:System.Char> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9cecc-988">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9cecc-989">建议的替代项是调用<xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="9cecc-989">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-990">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-990">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-991">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-991">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-992">当前 <see cref="T:System.Char" /> 对象的值未更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-992">The value of the current <see cref="T:System.Char" /> object unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-993">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="9cecc-993">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9cecc-994">它只能在 <xref:System.Char> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9cecc-994">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-995">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-995">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-996">**注意**不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-996">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="9cecc-997">尝试这样做会引发 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-997">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-998">不返回任何值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-998">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="9cecc-999">不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-999">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-1000">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1000">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1001">**注意**不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1001">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="9cecc-1002">尝试这样做会引发 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1002">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1003">不返回任何值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1003">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="9cecc-1004">不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1004">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-1005">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1005">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1006">**注意**不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1006">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="9cecc-1007">尝试这样做会引发 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1007">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1008">不返回任何值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1008">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="9cecc-1009">不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1009">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-1010">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1010">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1011">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1011">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1012">当前 <see cref="T:System.Char" /> 对象的转换值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1012">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1013">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1013">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9cecc-1014">它只能在 <xref:System.Char> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1014">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9cecc-1015">建议的替代项是调用<xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1015">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-1016">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1016">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1017">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1017">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1018">当前 <see cref="T:System.Char" /> 对象的转换值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1018">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1019">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1019">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9cecc-1020">它只能在 <xref:System.Char> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1020">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9cecc-1021">建议的替代项是调用<xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1021">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-1022">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1022">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1023">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1023">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1024">当前 <see cref="T:System.Char" /> 对象的转换值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1024">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1025">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1025">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9cecc-1026">它只能在 <xref:System.Char> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1026">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9cecc-1027">建议的替代项是调用<xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1027">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-1028">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1028">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1029">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1029">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1030">当前 <see cref="T:System.Char" /> 对象的转换值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1030">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1031">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1031">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9cecc-1032">它只能在 <xref:System.Char> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1032">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9cecc-1033">建议的替代项是调用<xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1033">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-1034">忽略此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1034">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1035">**注意**不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1035">**Note** This conversion is not supported.</span>
          </span>
          <span data-ttu-id="9cecc-1036">尝试这样做会引发 <see cref="T:System.InvalidCastException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1036">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1037">不返回任何值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1037">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="9cecc-1038">不支持此转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1038">This conversion is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="9cecc-1039">
            <see cref="T:System.Type" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1039">A <see cref="T:System.Type" /> object.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="9cecc-1040">一个 <see cref="T:System.IFormatProvider" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1040">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1041">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1041">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1042">指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1042">An object of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1043">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1043">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9cecc-1044">它只能在 <xref:System.Char> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1044">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9cecc-1045">建议的替代项是调用<xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29>方法相反。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1045">The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-1046">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1046">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="9cecc-1047">无法将当前 <see cref="T:System.Char" /> 对象的值转换为由 <paramref name="type" /> 参数指定的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1047">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-1048">一个 <see cref="T:System.IFormatProvider" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1048">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="9cecc-1049">（由于 <c>provider</c> 参数已被忽略，因此指定 <see langword="null" />。）</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1049">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1050">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1050">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1051">当前 <see cref="T:System.Char" /> 对象的转换值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1051">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1052">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1052">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9cecc-1053">它只能在 <xref:System.Char> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1053">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9cecc-1054">建议的替代项是调用<xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1054">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-1055">一个 <see cref="T:System.IFormatProvider" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1055">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="9cecc-1056">（由于 <c>provider</c> 参数已被忽略，因此指定 <see langword="null" />。）</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1056">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1057">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1057">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1058">当前 <see cref="T:System.Char" /> 对象的转换值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1058">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1059">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1059">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9cecc-1060">它只能在 <xref:System.Char> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1060">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9cecc-1061">建议的替代项是调用<xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1061">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-1062">一个 <see cref="T:System.IFormatProvider" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1062">An <see cref="T:System.IFormatProvider" /> object.</span>
          </span>
          <span data-ttu-id="9cecc-1063">（由于 <c>provider</c> 参数已被忽略，因此指定 <see langword="null" />。）</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1063">(Specify <see langword="null" /> because the <c>provider</c> parameter is ignored.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1064">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1064">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1065">当前 <see cref="T:System.Char" /> 对象的转换值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1065">The converted value of the current <see cref="T:System.Char" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1066">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1066">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9cecc-1067">它只能在 <xref:System.Char> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1067">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9cecc-1068">建议的替代项是调用<xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1068">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-1069">将 Unicode 字符的值转换为它的小写等效项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1069">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c);" />
      <MemberSignature Language="F#" Value="static member ToLower : char -&gt; char" Usage="System.char.ToLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-1070">要转换的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1070">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1071">将 Unicode 字符的值转换为它的小写等效项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1071">Converts the value of a Unicode character to its lowercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1072">
            <paramref name="c" /> 的小写等效项，或者，如果 <paramref name="c" /> 已经是小写字母或不是字母，则为 <paramref name="c" /> 的未更改值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1072">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1073">获取来自当前区域性的大小写规则。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1073">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="9cecc-1074">使用<xref:System.String.ToLower%2A?displayProperty=nameWithType>将字符串转换为小写。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1074">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-1075">下面的示例演示<xref:System.Char.ToLower%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1075">The following example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9cecc-1076">
            <para>中所述[字符串使用最佳做法](~/docs/standard/base-types/best-practices-strings.md)，我们建议你避免调用替换为默认值的字符大小写和字符串大小写的方法。相反，应调用需要显式指定参数的方法。若要将字符转换为小写的通过使用当前区域性的大小写约定，调用<see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />方法的值的重载<see cref="P:System.Globalization.CultureInfo.CurrentCulture" />有关其<paramref name="culture" />参数。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1076">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values. Instead, you should call methods that require parameters to be explicitly specified. To convert a character to lowercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToLower : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToLower (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-1077">要转换的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1077">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="9cecc-1078">一个对象，用于提供区域性特定的大小写规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1078">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1079">使用指定的区域性特定格式设置信息将指定 Unicode 字符的值转换为它的小写等效项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1079">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1080">
            <paramref name="c" /> 的小写等效项（根据 <paramref name="culture" /> 进行修改），或者，如果 <paramref name="c" /> 已经是小写字母或不是字母，则为 <paramref name="c" /> 的未更改值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1080">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1081">使用<xref:System.String.ToLower%2A?displayProperty=nameWithType>将字符串转换为小写。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1081">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-1082">下面的代码示例演示了<xref:System.Char.ToLower%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1082">The following code example demonstrates <xref:System.Char.ToLower%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-1083">
            <paramref name="culture" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1083">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static char ToLowerInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLowerInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLowerInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLowerInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToLowerInvariant : char -&gt; char" Usage="System.char.ToLowerInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-1084">要转换的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1084">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1085">使用固定区域性的大小写规则，将 Unicode 字符的值转换为其小写等效项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1085">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1086">
            <paramref name="c" /> 参数的小写等效项，或者，如果 <paramref name="c" /> 已经是小写字母或不是字母，则为 <paramref name="c" /> 的未更改值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1086">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1087">如果你的应用程序不受当前区域性，并依赖于可预测的方式更改的字符大小写，则使用<xref:System.Char.ToLowerInvariant%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1087">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method.</span></span> <span data-ttu-id="9cecc-1088"><xref:System.Char.ToLowerInvariant%2A>方法等效于`ToLower(Char, CultureInfo.InvariantCulture)`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1088">The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="9cecc-1089">使用<xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType>将字符串转换为小写。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1089">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-1090">将此实例的值转换为其等效的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1090">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="char.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-1091">将此实例的值转换为其等效的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1091">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1092">此实例的值的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1092">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9cecc-1093">下面的代码示例演示了<xref:System.Char.ToString%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1093">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (c As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char c);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.char.ToString c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-1094">要转换的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1094">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1095">将指定的 Unicode 字符转换为它的等效字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1095">Converts the specified Unicode character to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1096">
            <paramref name="c" /> 值的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1096">The string representation of the value of <paramref name="c" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9cecc-1097">下面的代码示例演示了<xref:System.Char.ToString%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1097">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="char.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9cecc-1098">（保留）一个对象，用于提供区域性特定的格式设置信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1098">(Reserved) An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1099">使用指定的区域性特定格式信息将此实例的值转换为它的等效字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1099">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1100">此实例的值的字符串表示形式，由 <paramref name="provider" /> 指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1100">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1101">`provider`参数将被忽略; 不参与此操作。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1101">The `provider` parameter is ignored; it does not participate in this operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-1102">下面的代码示例演示如何重载<xref:System.Char.ToString%2A>。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1102">The following code example demonstrates an overload of <xref:System.Char.ToString%2A>.</span></span>  
  
 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9cecc-1103">将 Unicode 字符的值转换为它的大写等效项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1103">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char -&gt; char" Usage="System.char.ToUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-1104">要转换的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1104">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1105">将 Unicode 字符的值转换为它的大写等效项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1105">Converts the value of a Unicode character to its uppercase equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1106">
            <paramref name="c" /> 的大写等效项，或者，如果 <paramref name="c" /> 已经是大写字母或不是字母，则为 <paramref name="c" /> 的未更改值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1106">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1107">获取来自当前区域性的大小写规则。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1107">Casing rules are obtained from the current culture.</span></span>  
  
 <span data-ttu-id="9cecc-1108">使用<xref:System.String.ToUpper%2A?displayProperty=nameWithType>将字符串转换为大写。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1108">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-1109">下面的示例将数组中的每个字符转换为其大写等效项。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1109">The following example converts each character in an array to its uppercase equivalent.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper1.cs#1)]
 [!code-vb[System.Char.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9cecc-1110">
            <para>中所述[字符串使用最佳做法](~/docs/standard/base-types/best-practices-strings.md)，我们建议你避免调用替换为默认值的字符大小写和字符串大小写的方法。相反，应调用需要显式指定参数的方法。若要将转换为使用当前区域性的大小写约定大写的字符，请调用<see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />方法的值的重载<see cref="P:System.Globalization.CultureInfo.CurrentCulture" />有关其<paramref name="culture" />参数。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1110">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values. Instead, you should call methods that require parameters to be explicitly specified. To convert a character to uppercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToUpper (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-1111">要转换的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1111">The Unicode character to convert.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="9cecc-1112">一个对象，用于提供区域性特定的大小写规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1112">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1113">使用指定的区域性特定格式设置信息将指定 Unicode 字符的值转换为它的大写等效项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1113">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1114">
            <paramref name="c" /> 的大写等效项（根据 <paramref name="culture" /> 进行修改），或者，如果 <paramref name="c" /> 已经是大写字母、没有大写等效项或不是字母，则为 <paramref name="c" /> 的未更改值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1114">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1115">使用<xref:System.String.ToUpper%2A?displayProperty=nameWithType>将字符串转换为大写。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1115">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-1116">下面的示例将数组中的每个字符转换为其大写等效项，对于 EN-US 区域性、 固定区域性和 TR-TR 文化。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1116">The following example converts each character in an array to its uppercase equivalent for the en-US culture, the invariant culture, and the tr-TR culture.</span></span> <span data-ttu-id="9cecc-1117">在此示例中，每个小写字母的大写等效项是一种情况下除外的所有区域性相同的。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1117">In this example, the uppercase equivalent of each lowercase letter is identical for all cultures except for one case.</span></span> <span data-ttu-id="9cecc-1118">小写"i"字符 (U + 0069) 转换为"I"(U + 0049) 在 EN-US 和固定区域性，但到""(U + 0130) TR-TR 文化中。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1118">The lowercase "i" character (U+0069) converts to "I" (U+0049) in the en-US and invariant cultures, but to "İ" (U+0130) in the tr-TR culture.</span></span>  
  
 [!code-csharp[System.Char.ToUpper#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper5.cs#2)]
 [!code-vb[System.Char.ToUpper#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper5.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cecc-1119">
            <paramref name="culture" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1119">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static char ToUpperInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpperInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpperInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpperInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpperInvariant : char -&gt; char" Usage="System.char.ToUpperInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9cecc-1120">要转换的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1120">The Unicode character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1121">使用固定区域性的大小写规则，将 Unicode 字符的值转换为其大写等效项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1121">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1122">
            <paramref name="c" /> 参数的小写等效项，或者，如果 <paramref name="c" /> 已经是大写字母或不是字母，则为 <paramref name="c" /> 的未更改值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1122">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1123">如果你的应用程序不受当前区域性，但依赖于可预测的方式更改的字符大小写，使用<xref:System.Char.ToUpperInvariant%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1123">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.</span></span>  <span data-ttu-id="9cecc-1124"><xref:System.Char.ToUpperInvariant%2A>方法等效于`ToUpper(Char, CultureInfo.InvariantCulture)`。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1124">The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.</span></span>  
  
 <span data-ttu-id="9cecc-1125">使用<xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType>将字符串转换为大写。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1125">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out char result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] char&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.TryParse(System.String,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] char % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.char.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Char" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="9cecc-1126">包含单个字符的字符串，或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1126">A string that contains a single character, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="9cecc-1127">此方法返回时，如果转换成功，则包含与 <c>s</c> 中的唯一字符等效的 Unicode 字符；如果转换失败，则包含未定义的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1127">When this method returns, contains a Unicode character equivalent to the sole character in <c>s</c>, if the conversion succeeded, or an undefined value if the conversion failed.</span>
          </span>
          <span data-ttu-id="9cecc-1128">如果 <c>s</c> 参数为 <see langword="null" /> 或 <c>s</c> 的长度不为 1，则转换失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1128">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or the length of <c>s</c> is not 1.</span>
          </span>
          <span data-ttu-id="9cecc-1129">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1129">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cecc-1130">将指定字符串的值转换为它的等效 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1130">Converts the value of the specified string to its equivalent Unicode character.</span>
          </span>
          <span data-ttu-id="9cecc-1131">一个指示转换是成功还是失败的返回代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1131">A return code indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cecc-1132">如果 <paramref name="s" /> 参数成功转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cecc-1132">
              <see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cecc-1133"><xref:System.Char.TryParse%2A>方法就像<xref:System.Char.Parse%2A>方法中，除<xref:System.Char.TryParse%2A>方法不会引发异常，如果转换失败。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1133">The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cecc-1134">下面的代码示例演示如何重载<xref:System.Char.TryParse%2A>方法对多个基类型，并<xref:System.DateTime.TryParseExact%2A>方法<xref:System.DateTime>基类型。</span><span class="sxs-lookup"><span data-stu-id="9cecc-1134">The following code example demonstrates overloads of the <xref:System.Char.TryParse%2A> method for several base types, and the <xref:System.DateTime.TryParseExact%2A> method for the <xref:System.DateTime> base type.</span></span>  
  
 [!code-cpp[T.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.TryParse/CPP/tp.cpp#1)]
 [!code-csharp[T.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.TryParse/CS/tp.cs#1)]
 [!code-vb[T.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.TryParse/VB/tp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="M:System.Char.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>