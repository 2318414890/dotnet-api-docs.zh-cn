<Type Name="Int32" FullName="System.Int32">
  <TypeSignature Language="C#" Value="public struct Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int32&gt;, class System.IConvertible, class System.IEquatable`1&lt;int32&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int32" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int32&#xA;Implements IComparable, IComparable(Of Integer), IConvertible, IEquatable(Of Integer), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="df83c-101">表示 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="df83c-101">Represents a 32-bit signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-102"><xref:System.Int32> 是表示不可变的值类型的有符号整数值介于-2147483648 (这由<xref:System.Int32.MinValue?displayProperty=nameWithType>常量) 到 + 2,147,483,647 之间 (表示通过<xref:System.Int32.MaxValue?displayProperty=nameWithType>常量。</span><span class="sxs-lookup"><span data-stu-id="df83c-102"><xref:System.Int32> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <xref:System.Int32.MinValue?displayProperty=nameWithType> constant) through positive 2,147,483,647 (which is represented by the <xref:System.Int32.MaxValue?displayProperty=nameWithType> constant.</span></span> <span data-ttu-id="df83c-103">.NET Framework 还包括 32 位无符号的整数值类型， <xref:System.UInt32>，它表示从 0 到 4294967295 之间的值。</span><span class="sxs-lookup"><span data-stu-id="df83c-103">The .NET Framework also includes an unsigned 32-bit integer value type, <xref:System.UInt32>, which represents values that range from 0 to 4,294,967,295.</span></span>  
  
## <a name="instantiating-an-int32-value"></a><span data-ttu-id="df83c-104">实例化的 Int32 值</span><span class="sxs-lookup"><span data-stu-id="df83c-104">Instantiating an Int32 Value</span></span>  
 <span data-ttu-id="df83c-105">可以实例化<xref:System.Int32>有几个方面的值：</span><span class="sxs-lookup"><span data-stu-id="df83c-105">You can instantiate an <xref:System.Int32> value in several ways:</span></span>  
  
-   <span data-ttu-id="df83c-106">你可以声明<xref:System.Int32>变量并将其分配的范围内的整数值<xref:System.Int32>数据类型。</span><span class="sxs-lookup"><span data-stu-id="df83c-106">You can declare an <xref:System.Int32> variable and assign it a literal integer value that is within the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="df83c-107">下面的示例声明了两个<xref:System.Int32>变量并将它们分配在这种方式中的值。</span><span class="sxs-lookup"><span data-stu-id="df83c-107">The following example declares two <xref:System.Int32> variables and assigns them values in this way.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#1)]
     [!code-vb[System.Int32.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#1)]  
  
-   <span data-ttu-id="df83c-108">你可以分配其范围是子集的整数类型的值的<xref:System.Int32>类型。</span><span class="sxs-lookup"><span data-stu-id="df83c-108">You can assign the value of an integer type whose range is a subset of the <xref:System.Int32> type.</span></span> <span data-ttu-id="df83c-109">这是一个不需要强制转换运算符在 C# 或 Visual Basic 中的转换方法的扩大转换。</span><span class="sxs-lookup"><span data-stu-id="df83c-109">This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#4)]
     [!code-vb[System.Int32.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#4)]  
  
-   <span data-ttu-id="df83c-110">你可以分配其范围超过数值类型的值的<xref:System.Int32>类型。</span><span class="sxs-lookup"><span data-stu-id="df83c-110">You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int32> type.</span></span> <span data-ttu-id="df83c-111">这是收缩转换，因此如果需要强制转换运算符在 C# 和 Visual Basic 中的转换方法`Option Strict`上。</span><span class="sxs-lookup"><span data-stu-id="df83c-111">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="df83c-112">如果该数值为<xref:System.Single>， <xref:System.Double>，或<xref:System.Decimal>包括小数组件，其小数部分处理的值取决于编译器执行转换。</span><span class="sxs-lookup"><span data-stu-id="df83c-112">If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="df83c-113">下面的示例执行收缩转换将分配到的几个数值<xref:System.Int32>变量。</span><span class="sxs-lookup"><span data-stu-id="df83c-113">The following example performs narrowing conversions to assign several numeric values to <xref:System.Int32> variables.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#2)]
     [!code-vb[System.Int32.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#2)]  
  
-   <span data-ttu-id="df83c-114">你可以调用的方法<xref:System.Convert>类能够将任何支持的类型到<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="df83c-114">You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int32> value.</span></span> <span data-ttu-id="df83c-115">这是可能因为<xref:System.Int32>支持<xref:System.IConvertible>接口。</span><span class="sxs-lookup"><span data-stu-id="df83c-115">This is possible because <xref:System.Int32> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="df83c-116">下面的示例阐释了数组的转换<xref:System.Decimal>值复制到<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="df83c-116">The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int32> values.</span></span>  
  
     [!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]
     [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]  
  
-   <span data-ttu-id="df83c-117">你可以调用<xref:System.Int32.Parse%2A>或<xref:System.Int32.TryParse%2A>方法将转换的字符串表示形式<xref:System.Int32>值赋给<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="df83c-117">You can call the <xref:System.Int32.Parse%2A> or <xref:System.Int32.TryParse%2A> method to convert the string representation of an <xref:System.Int32> value to an <xref:System.Int32>.</span></span> <span data-ttu-id="df83c-118">字符串可以包含十进制或十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-118">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="df83c-119">下面的示例演示使用十进制和十六进制字符串分析操作。</span><span class="sxs-lookup"><span data-stu-id="df83c-119">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#3)]
     [!code-vb[System.Int32.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#3)]  
  
## <a name="performing-operations-on-int32-values"></a><span data-ttu-id="df83c-120">对 Int32 值执行操作</span><span class="sxs-lookup"><span data-stu-id="df83c-120">Performing Operations on Int32 Values</span></span>  
 <span data-ttu-id="df83c-121"><xref:System.Int32>类型支持标准的数学运算，例如加法、 减法、 除法、 乘法、 求反和一元求反。</span><span class="sxs-lookup"><span data-stu-id="df83c-121">The <xref:System.Int32> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation.</span></span> <span data-ttu-id="df83c-122">与其他整数类型，类似<xref:System.Int32>类型还支持的按位`AND`， `OR`， `XOR`，左移位和右移位运算符。</span><span class="sxs-lookup"><span data-stu-id="df83c-122">Like the other integral types, the <xref:System.Int32> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>  
  
 <span data-ttu-id="df83c-123">你可以使用标准数值运算符比较两个<xref:System.Int32>值，也可以调用<xref:System.Int32.CompareTo%2A>或<xref:System.Int32.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-123">You can use the standard numeric operators to compare two <xref:System.Int32> values, or you can call the <xref:System.Int32.CompareTo%2A> or <xref:System.Int32.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="df83c-124">你还可以调用的成员<xref:System.Math>类来执行各种数值操作，包括获取绝对值的数值的数字，计算商和整数除法运算的余数确定两个最大或最小值整数，获取数字的符号和舍入数。</span><span class="sxs-lookup"><span data-stu-id="df83c-124">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
## <a name="representing-an-int32-as-a-string"></a><span data-ttu-id="df83c-125">字符串形式表示 Int32</span><span class="sxs-lookup"><span data-stu-id="df83c-125">Representing an Int32 as a String</span></span>  
 <span data-ttu-id="df83c-126"><xref:System.Int32>类型提供对标准和自定义数字格式字符串的完全支持。</span><span class="sxs-lookup"><span data-stu-id="df83c-126">The <xref:System.Int32> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="df83c-127">(有关详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)，[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)，和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。)</span><span class="sxs-lookup"><span data-stu-id="df83c-127">(For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span></span>  
  
 <span data-ttu-id="df83c-128">若要设置格式<xref:System.Int32>值为一个不带前导零的整数字符串，您可以调用的无参数<xref:System.Int32.ToString>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-128">To format an <xref:System.Int32> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="df83c-129">通过使用"D"格式说明符，您还可以包含指定的数目的字符串表示形式中的前导零。</span><span class="sxs-lookup"><span data-stu-id="df83c-129">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="df83c-130">通过使用"N"格式说明符，可以包含组分隔符和指定的十进制位数才会出现在字符串的数字表示形式。</span><span class="sxs-lookup"><span data-stu-id="df83c-130">By using the "N" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number.</span></span> <span data-ttu-id="df83c-131">通过使用"X"格式说明符，您可以表示<xref:System.Int32>十六进制字符串形式的值。</span><span class="sxs-lookup"><span data-stu-id="df83c-131">By using the "X" format specifier, you can represent an <xref:System.Int32> value as a hexadecimal string.</span></span> <span data-ttu-id="df83c-132">下面的示例在一个数组中的元素进行格式设置<xref:System.Int32>以下四种方式中的值。</span><span class="sxs-lookup"><span data-stu-id="df83c-132">The following example formats the elements in an array of <xref:System.Int32> values in these four ways.</span></span>  
  
 [!code-csharp[System.Int32.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#1)]
 [!code-vb[System.Int32.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#1)]  
  
 <span data-ttu-id="df83c-133">你还可以设置格式<xref:System.Int32>通过调用十进制或十六进制字符串值作为二进制、 八进制<xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29>方法并提供将基作为该方法的第二个参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-133">You can also format an <xref:System.Int32> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="df83c-134">下面的示例调用此方法以显示二进制、 八进制和十六进制形式表示的整数值的数组。</span><span class="sxs-lookup"><span data-stu-id="df83c-134">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.</span></span>  
  
 [!code-csharp[System.Int32.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#2)]
 [!code-vb[System.Int32.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#2)]  
  
## <a name="working-with-non-decimal-32-bit-integer-values"></a><span data-ttu-id="df83c-135">使用非十进制 32 位整数值</span><span class="sxs-lookup"><span data-stu-id="df83c-135">Working with Non-Decimal 32-Bit Integer Values</span></span>  
 <span data-ttu-id="df83c-136">除了使用单个整数作为十进制值时，你可能想要执行带整数值的按位运算，或使用整数值的二进制或十六进制表示。</span><span class="sxs-lookup"><span data-stu-id="df83c-136">In addition to working with individual integers as decimal values, you may want to perform bitwise operations with integer values, or work with the binary or hexadecimal representations of integer values.</span></span> <span data-ttu-id="df83c-137"><xref:System.Int32> 值以 31 位，三十秒位用作符号位为单位表示。</span><span class="sxs-lookup"><span data-stu-id="df83c-137"><xref:System.Int32> values are represented in 31 bits, with the thirty-second bit used as a sign bit.</span></span> <span data-ttu-id="df83c-138">正值表示通过使用符号数值表示法。</span><span class="sxs-lookup"><span data-stu-id="df83c-138">Positive values are represented by using sign-and-magnitude representation.</span></span> <span data-ttu-id="df83c-139">负值都以 2 的补数表示。</span><span class="sxs-lookup"><span data-stu-id="df83c-139">Negative values are in two's complement representation.</span></span> <span data-ttu-id="df83c-140">这是重要上执行按位运算时，需要注意<xref:System.Int32>值或当你处理的单个位进行运算。</span><span class="sxs-lookup"><span data-stu-id="df83c-140">This is important to keep in mind when you perform bitwise operations on <xref:System.Int32> values or when you work with individual bits.</span></span> <span data-ttu-id="df83c-141">若要执行数字、 布尔值或对任何两个非十进制值的比较操作，这两个值都必须使用相同的表示形式。</span><span class="sxs-lookup"><span data-stu-id="df83c-141">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="df83c-142">此类型的所有成员都是线程安全。</span><span class="sxs-lookup"><span data-stu-id="df83c-142">All members of this type are thread safe.</span></span> <span data-ttu-id="df83c-143">实际上，看起来要修改实例状态的成员返回使用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="df83c-143">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="df83c-144">作为与任何其他类型，读取和写入到共享的变量，其中包含此类型的实例必须受使用锁来确保的线程安全性。</span><span class="sxs-lookup"><span data-stu-id="df83c-144">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.UInt32" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="df83c-145">将此实例与指定的对象或 <see cref="T:System.Int32" /> 进行比较，并返回二者相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="df83c-145">Compares this instance to a specified object or <see cref="T:System.Int32" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(int value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="df83c-146">要比较的整数。</span><span class="sxs-lookup"><span data-stu-id="df83c-146">An integer to compare.</span></span></param>
        <summary><span data-ttu-id="df83c-147">将此实例与指定的 32 位有符号整数进行比较并返回对其相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="df83c-147">Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="df83c-148">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="df83c-148">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="df83c-149"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="df83c-149"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="df83c-150"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="df83c-150"></term><description> Description</span></span>  
  
 <span data-ttu-id="df83c-151"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="df83c-151"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="df83c-152"></term><description> 此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-152"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="df83c-153"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="df83c-153"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="df83c-154"></term><description> 此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-154"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="df83c-155"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="df83c-155"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="df83c-156"></term><description> 此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-156"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-157">此方法实现<xref:System.IComparable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>方法因为它不具有要转换`value`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-157">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="df83c-158">具体取决于您的编程语言，它可能会对代码<xref:System.Int32.CompareTo%2A>其中的参数类型具有较少的位的方法 （为较窄） 比实例类型。</span><span class="sxs-lookup"><span data-stu-id="df83c-158">Depending on your programming language, it might be possible to code a <xref:System.Int32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="df83c-159">这可能是因为某些编程语言中执行的隐式的扩大转换，它表示具有任意数量的位的实例作为类型参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-159">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="df83c-160">例如，假设实例类型是<xref:System.Int32>和参数类型是<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="df83c-160">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="df83c-161">Microsoft C# 编译器生成的指令来表示形式的参数值<xref:System.Int32>，然后生成<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>比较的值的方法<xref:System.Int32>实例和<xref:System.Int32>参数表示形式。</span><span class="sxs-lookup"><span data-stu-id="df83c-161">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="df83c-162">请查阅你的编程语言的文档，以确定其编译器是否对数值类型执行隐式的扩大转换。</span><span class="sxs-lookup"><span data-stu-id="df83c-162">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df83c-163">下面的示例演示<xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-163">The following example demonstrates the <xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="df83c-164">除了显示四个不同的比较方法返回的值，它将返回的值转换为自定义的成员`Comparison`枚举，它还显示其值。</span><span class="sxs-lookup"><span data-stu-id="df83c-164">In addition to displaying the value returned by the method for four different comparisons, it converts the return value to a member of the custom `Comparison` enumeration, whose value it also displays.</span></span>  
  
 [!code-csharp[System.Int32.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.CompareTo/cs/CompareTo1.cs#1)]
 [!code-vb[System.Int32.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.CompareTo/vb/CompareTo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="df83c-165">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-165">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="df83c-166">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="df83c-166">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="df83c-167">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="df83c-167">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="df83c-168"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="df83c-168"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="df83c-169"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="df83c-169"></term><description> Description</span></span>  
  
 <span data-ttu-id="df83c-170"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="df83c-170"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="df83c-171"></term><description> 此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-171"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="df83c-172"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="df83c-172"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="df83c-173"></term><description> 此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-173"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="df83c-174"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="df83c-174"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="df83c-175"></term><description> 此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-175"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="df83c-176">或</span><span class="sxs-lookup"><span data-stu-id="df83c-176">-or-</span></span>  
  
 <span data-ttu-id="df83c-177"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-177"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-178">任何实例<xref:System.Int32>，无论其值被视为大于`null`。</span><span class="sxs-lookup"><span data-stu-id="df83c-178">Any instance of <xref:System.Int32>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="df83c-179">`value` 必须是`null`或实例<xref:System.Int32>; 否则为将引发异常。</span><span class="sxs-lookup"><span data-stu-id="df83c-179">`value` must be `null` or an instance of <xref:System.Int32>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="df83c-180"><paramref name="value" /> 不是 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-180"><paramref name="value" /> is not an <see cref="T:System.Int32" />.</span></span></exception>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="df83c-181">返回一个值，该值指示此实例是否与指定的对象或 <see cref="T:System.Int32" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="df83c-181">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int32" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (int obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(int obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="df83c-182">要与此实例进行比较的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="df83c-182">An <see cref="T:System.Int32" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="df83c-183">返回一个值，该值指示此实例是否等于指定的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="df83c-183">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int32" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="df83c-184">如果 <paramref name="obj" /> 的值与此实例相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-184"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-185">此方法实现<xref:System.IEquatable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType>因为它不具有要转换`obj`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-185">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="df83c-186">编译器重载决策可能应对明显的差异的两个行为<see cref="M:System.Int32.Equals(System.Int32)" />方法重载。</span><span class="sxs-lookup"><span data-stu-id="df83c-186">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span></span> <span data-ttu-id="df83c-187">如果之间的隐式转换<paramref name="obj" />自变量和<see cref="T:System.Int32" />定义和自变量并不类型化为<see cref="T:System.Object" />，编译器执行隐式转换和调用<see cref="M:System.Int32.Equals(System.Int32)" />方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-187">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span></span> <span data-ttu-id="df83c-188">否则，它们调用<see cref="M:System.Int32.Equals(System.Object)" />方法，始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.Int32" />值。</span><span class="sxs-lookup"><span data-stu-id="df83c-188">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span></span> <span data-ttu-id="df83c-189">下面的示例阐释了两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="df83c-189">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="df83c-190">情况下<see cref="T:System.Byte" />， <see cref="T:System.Int16" />， <see cref="T:System.SByte" />，和<see cref="T:System.UInt16" />值，第一个比较返回<see langword="true" />因为编译器自动执行一个的扩大转换，调用<see cref="M:System.Int32.Equals(System.Int32)" />方法，而第二个比较返回<see langword="false" />由于编译器调用<see cref="M:System.Int32.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-190">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)]
 [!code-vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="df83c-191">与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-191">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="df83c-192">返回一个值，该值指示此实例是否等于指定的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-192">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="df83c-193">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.Int32" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-193"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Int32" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="df83c-194">下面的示例演示如何使用`Equals`的上下文中`Int32`，比较两个`int`值并返回`true`如果它们表示同一数字，或`false`如果它们不这样做。</span><span class="sxs-lookup"><span data-stu-id="df83c-194">The following example illustrates the use of `Equals` in the context of `Int32`, comparing two `int` values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int32_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int32_Equals/CPP/int32_equals.cpp#1)]
 [!code-csharp[Int32_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int32_Equals/CS/int32_equals.cs#1)]
 [!code-vb[Int32_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int32_Equals/VB/int32_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="df83c-195">编译器重载决策可能应对明显的差异的两个行为<see cref="M:System.Int32.Equals(System.Int32)" />方法重载。</span><span class="sxs-lookup"><span data-stu-id="df83c-195">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span></span> <span data-ttu-id="df83c-196">如果之间的隐式转换<paramref name="obj" />自变量和<see cref="T:System.Int32" />定义和自变量并不类型化为<see cref="T:System.Object" />，编译器执行隐式转换和调用<see cref="M:System.Int32.Equals(System.Int32)" />方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-196">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span></span> <span data-ttu-id="df83c-197">否则，它们调用<see cref="M:System.Int32.Equals(System.Object)" />方法，始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.Int32" />值。</span><span class="sxs-lookup"><span data-stu-id="df83c-197">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span></span> <span data-ttu-id="df83c-198">下面的示例阐释了两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="df83c-198">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="df83c-199">情况下<see cref="T:System.Byte" />， <see cref="T:System.Int16" />， <see cref="T:System.SByte" />，和<see cref="T:System.UInt16" />值，第一个比较返回<see langword="true" />因为编译器自动执行一个的扩大转换，调用<see cref="M:System.Int32.Equals(System.Int32)" />方法，而第二个比较返回<see langword="false" />由于编译器调用<see cref="M:System.Int32.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-199">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)]
 [!code-vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</para>
        </block>
        <altmember cref="M:System.Int32.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df83c-200">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="df83c-200">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="df83c-201">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="df83c-201">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df83c-202">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-202">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-203">枚举常数 <see cref="F:System.TypeCode.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-203">The enumerated constant, <see cref="F:System.TypeCode.Int32" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const int MaxValue = 2147483647;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxValue = int32(2147483647)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Integer  = 2147483647" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxValue = 2147483647;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2147483647</MemberValue>
      <Docs>
        <summary><span data-ttu-id="df83c-204">表示 <see cref="T:System.Int32" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="df83c-204">Represents the largest possible value of an <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="df83c-205">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="df83c-205">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-206">此常量的值为 2147483647;也就是说，十六进制 0x7FFFFFFF。</span><span class="sxs-lookup"><span data-stu-id="df83c-206">The value of this constant is 2,147,483,647; that is, hexadecimal 0x7FFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df83c-207">下面的示例使用<xref:System.Int32.MaxValue>属性可避免<xref:System.OverflowException>时将转换为<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="df83c-207">The following example uses the <xref:System.Int32.MaxValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Int32.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp#1)]
 [!code-csharp[System.Int32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs#1)]
 [!code-vb[System.Int32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const int MinValue = -2147483648;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinValue = int32(-2147483648)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Integer  = -2147483648" />
      <MemberSignature Language="C++ CLI" Value="public: int MinValue = -2147483648;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary><span data-ttu-id="df83c-208">表示 <see cref="T:System.Int32" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="df83c-208">Represents the smallest possible value of <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="df83c-209">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="df83c-209">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-210">此常量的值为-2,147,483,648;也就是说，十六进制 0x80000000。</span><span class="sxs-lookup"><span data-stu-id="df83c-210">The value of this constant is -2,147,483,648; that is, hexadecimal 0x80000000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df83c-211">下面的示例使用<xref:System.Int32.MinValue>属性可避免<xref:System.OverflowException>时将转换为<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="df83c-211">The following example uses the <xref:System.Int32.MinValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Int32.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp#1)]
 [!code-csharp[System.Int32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs#1)]
 [!code-vb[System.Int32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="df83c-212">将数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="df83c-212">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.Int32.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="df83c-213">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="df83c-213">A string containing a number to convert.</span></span></param>
        <summary><span data-ttu-id="df83c-214">将数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="df83c-214">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="df83c-215">与 <paramref name="s" /> 中包含的数字等效的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="df83c-215">A 32-bit signed integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-216">`s`参数包含一个数字的窗体：</span><span class="sxs-lookup"><span data-stu-id="df83c-216">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="df83c-217">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="df83c-217">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="df83c-218">方括号 （[和]） 中是可选的项。</span><span class="sxs-lookup"><span data-stu-id="df83c-218">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="df83c-219">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-219">The following table describes each element.</span></span>  
  
|<span data-ttu-id="df83c-220">元素</span><span class="sxs-lookup"><span data-stu-id="df83c-220">Element</span></span>|<span data-ttu-id="df83c-221">描述</span><span class="sxs-lookup"><span data-stu-id="df83c-221">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="df83c-222">ws</span><span class="sxs-lookup"><span data-stu-id="df83c-222">ws</span></span>|<span data-ttu-id="df83c-223">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="df83c-223">Optional white space.</span></span>|  
|<span data-ttu-id="df83c-224">Sign</span><span class="sxs-lookup"><span data-stu-id="df83c-224">sign</span></span>|<span data-ttu-id="df83c-225">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="df83c-225">An optional sign.</span></span>|  
|<span data-ttu-id="df83c-226">数字</span><span class="sxs-lookup"><span data-stu-id="df83c-226">digits</span></span>|<span data-ttu-id="df83c-227">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="df83c-227">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="df83c-228">`s`参数被解释使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="df83c-228">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="df83c-229">十进制数字，除了允许仅前导空格和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="df83c-229">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="df83c-230">若要显式定义可出现在的样式元素`s`，可以使用两种<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>或<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-230">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="df83c-231">`s`使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-231">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="df83c-232">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="df83c-232">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="df83c-233">若要分析使用的格式信息的一些其他区域性的字符串，请使用<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-233">To parse a string using the formatting information of some other culture, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df83c-234">下面的示例演示如何将字符串值转换为 32 位有符号的整数值使用<xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-234">The following example demonstrates how to convert a string value into a 32-bit signed integer value using the <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="df83c-235">然后向控制台显示生成的整数值。</span><span class="sxs-lookup"><span data-stu-id="df83c-235">The resulting integer value is then displayed to the console.</span></span>  
  
 [!code-cpp[System.Int32.Parse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse1.cpp#1)]
 [!code-csharp[System.Int32.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.Int32.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="df83c-236"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-236"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="df83c-237"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="df83c-237"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="df83c-238"><paramref name="s" /> 表示小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-238"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="df83c-239">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="df83c-239">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="df83c-240">枚举值的按位组合，用于指示可出现在 <c>s</c> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-240">A bitwise combination of the enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="df83c-241">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-241">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="df83c-242">将指定样式的数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="df83c-242">Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="df83c-243">与 <paramref name="s" /> 中指定的数字等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="df83c-243">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-244">`style`参数定义的样式元素 (如空格、 正或负号符号或千位分隔符号) 中允许`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-244">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="df83c-245">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="df83c-245">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="df83c-246">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="df83c-246">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="df83c-247">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span><span class="sxs-lookup"><span data-stu-id="df83c-247">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="df83c-248">或者，如果`style`包括<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="df83c-248">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="df83c-249">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="df83c-249">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="df83c-250">方括号 （[和]） 中是可选的项。</span><span class="sxs-lookup"><span data-stu-id="df83c-250">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="df83c-251">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-251">The following table describes each element.</span></span>  
  
|<span data-ttu-id="df83c-252">元素</span><span class="sxs-lookup"><span data-stu-id="df83c-252">Element</span></span>|<span data-ttu-id="df83c-253">描述</span><span class="sxs-lookup"><span data-stu-id="df83c-253">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="df83c-254">*ws*</span><span class="sxs-lookup"><span data-stu-id="df83c-254">*ws*</span></span>|<span data-ttu-id="df83c-255">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="df83c-255">Optional white space.</span></span> <span data-ttu-id="df83c-256">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-256">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="df83c-257">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="df83c-257">A culture-specific currency symbol.</span></span> <span data-ttu-id="df83c-258">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="df83c-258">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="df83c-259">当前区域性的货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-259">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="df83c-260">*sign*</span><span class="sxs-lookup"><span data-stu-id="df83c-260">*sign*</span></span>|<span data-ttu-id="df83c-261">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="df83c-261">An optional sign.</span></span> <span data-ttu-id="df83c-262">符号可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-262">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="df83c-263">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-263">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="df83c-264">*digits*</span><span class="sxs-lookup"><span data-stu-id="df83c-264">*digits*</span></span><br /><br /> <span data-ttu-id="df83c-265">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="df83c-265">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="df83c-266">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="df83c-266">*exponential_digits*</span></span>|<span data-ttu-id="df83c-267">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-267">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="df83c-268">有关*fractional_digits*，但只数字 0 有效。</span><span class="sxs-lookup"><span data-stu-id="df83c-268">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="df83c-269">*，*</span><span class="sxs-lookup"><span data-stu-id="df83c-269">*,*</span></span>|<span data-ttu-id="df83c-270">特定于区域性的千位分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="df83c-270">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="df83c-271">当前区域性的千位分隔符可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-271">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="df83c-272">*.*</span><span class="sxs-lookup"><span data-stu-id="df83c-272">*.*</span></span>|<span data-ttu-id="df83c-273">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="df83c-273">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="df83c-274">当前区域性的小数点符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-274">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="df83c-275">仅数字 0 可以显示为分析操作才能成功; 一个小数数字如果*fractional_digits*包括任何其他数字<xref:System.OverflowException>引发。</span><span class="sxs-lookup"><span data-stu-id="df83c-275">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="df83c-276">*e*</span><span class="sxs-lookup"><span data-stu-id="df83c-276">*e*</span></span>|<span data-ttu-id="df83c-277">E 或者 E 字符，它指示的值用在指数记数法表示。</span><span class="sxs-lookup"><span data-stu-id="df83c-277">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="df83c-278">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-278">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="df83c-279">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="df83c-279">*hexdigits*</span></span>|<span data-ttu-id="df83c-280">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="df83c-280">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="df83c-281">仅为数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>样式) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="df83c-281">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="df83c-282">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能但不是需要输入字符串中存在的元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-282">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="df83c-283">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="df83c-283">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="df83c-284">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="df83c-284">NumberStyles value</span></span>|<span data-ttu-id="df83c-285">除数字之外的 s 中允许的元素</span><span class="sxs-lookup"><span data-stu-id="df83c-285">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="df83c-286">*数字*仅元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-286">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="df83c-287">小数点 ( *。*</span><span class="sxs-lookup"><span data-stu-id="df83c-287">The decimal point ( *.*</span></span> <span data-ttu-id="df83c-288">) 和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-288">) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="df83c-289">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="df83c-289">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="df83c-290">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="df83c-290">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="df83c-291">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="df83c-291">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="df83c-292">*登录*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="df83c-292">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="df83c-293">*登录*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="df83c-293">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="df83c-294">*登录*在括号内包含的数字值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-294">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="df83c-295">千位分隔符 ( *，* ) 元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-295">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="df83c-296">* $ *元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-296">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="df83c-297">全部。</span><span class="sxs-lookup"><span data-stu-id="df83c-297">All.</span></span> <span data-ttu-id="df83c-298">`s`参数不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-298">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="df83c-299">*Ws*元素的开头或末尾`s`，*登录*开头`s`，和小数点 ( *。*</span><span class="sxs-lookup"><span data-stu-id="df83c-299">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="df83c-300">) 符号。</span><span class="sxs-lookup"><span data-stu-id="df83c-300">) symbol.</span></span> <span data-ttu-id="df83c-301">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="df83c-301">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="df83c-302">`ws`， `sign`，千位分隔符 ( *，* )，和小数点 ( *。*</span><span class="sxs-lookup"><span data-stu-id="df83c-302">The `ws`, `sign`, thousands separator ( *,* ), and decimal point ( *.*</span></span> <span data-ttu-id="df83c-303">) 元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-303">) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="df83c-304">所有样式，除`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-304">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="df83c-305">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用标志，`s`必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="df83c-305">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="df83c-306">例如，"C9AF3"分析成功，但是"0xC9AF3"却没有。</span><span class="sxs-lookup"><span data-stu-id="df83c-306">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="df83c-307">其他标志只有可以与组合`s`参数<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="df83c-307">The only other flags that can be combined with the `s` parameter it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="df83c-308">(<xref:System.Globalization.NumberStyles>枚举包含复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="df83c-308">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="df83c-309">`s`使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-309">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="df83c-310">若要指定分析操作使用其格式设置信息的区域性，调用<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>重载。</span><span class="sxs-lookup"><span data-stu-id="df83c-310">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df83c-311">下面的示例使用<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>方法，以便分析的字符串表示形式几个<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="df83c-311">The following example uses the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of several <xref:System.Int32> values.</span></span> <span data-ttu-id="df83c-312">该示例的当前区域性为 EN-US。</span><span class="sxs-lookup"><span data-stu-id="df83c-312">The current culture for the example is en-US.</span></span>  
  
 [!code-cpp[System.Int32.Parse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse2.cpp#2)]
 [!code-csharp[System.Int32.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int32.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="df83c-313"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-313"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="df83c-314"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="df83c-314"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="df83c-315">或</span><span class="sxs-lookup"><span data-stu-id="df83c-315">-or-</span></span>  
  
 <span data-ttu-id="df83c-316"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="df83c-316"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="df83c-317"><paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-317"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="df83c-318"><paramref name="s" /> 表示小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-318"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
 <span data-ttu-id="df83c-319">或</span><span class="sxs-lookup"><span data-stu-id="df83c-319">-or-</span></span>  
  
 <span data-ttu-id="df83c-320"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="df83c-320"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="df83c-321">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="df83c-321">A string containing a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="df83c-322">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="df83c-322">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="df83c-323">将指定的区域性特定格式的数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="df83c-323">Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="df83c-324">与 <paramref name="s" /> 中指定的数字等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="df83c-324">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-325">此重载<xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29>方法通常用于将可在多个方面与格式设置的文本转换<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="df83c-325">This overload of the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int32> value.</span></span> <span data-ttu-id="df83c-326">例如，它可以用于将转换到 HTML 文本框中为数值用户输入的文本。</span><span class="sxs-lookup"><span data-stu-id="df83c-326">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="df83c-327">`s`参数包含一个数字的窗体：</span><span class="sxs-lookup"><span data-stu-id="df83c-327">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="df83c-328">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="df83c-328">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="df83c-329">方括号 （[和]） 中是可选的项。</span><span class="sxs-lookup"><span data-stu-id="df83c-329">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="df83c-330">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-330">The following table describes each element.</span></span>  
  
|<span data-ttu-id="df83c-331">元素</span><span class="sxs-lookup"><span data-stu-id="df83c-331">Element</span></span>|<span data-ttu-id="df83c-332">描述</span><span class="sxs-lookup"><span data-stu-id="df83c-332">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="df83c-333">*ws*</span><span class="sxs-lookup"><span data-stu-id="df83c-333">*ws*</span></span>|<span data-ttu-id="df83c-334">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="df83c-334">Optional white space.</span></span>|  
|<span data-ttu-id="df83c-335">*sign*</span><span class="sxs-lookup"><span data-stu-id="df83c-335">*sign*</span></span>|<span data-ttu-id="df83c-336">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="df83c-336">An optional sign.</span></span>|  
|<span data-ttu-id="df83c-337">*digits*</span><span class="sxs-lookup"><span data-stu-id="df83c-337">*digits*</span></span>|<span data-ttu-id="df83c-338">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="df83c-338">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="df83c-339">`s`参数被解释使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="df83c-339">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="df83c-340">十进制数字，除了允许仅前导空格和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="df83c-340">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="df83c-341">若要显式定义可出现在的样式元素`s`，使用<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-341">To explicitly define the style elements that can be present in `s`, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="df83c-342">`provider`参数是<xref:System.IFormatProvider>实现，如<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-342">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="df83c-343">`provider`参数提供区域性特定信息的格式有关`s`。</span><span class="sxs-lookup"><span data-stu-id="df83c-343">The `provider` parameter supplies culture-specific information about the format of `s`.</span></span> <span data-ttu-id="df83c-344">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>对象使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="df83c-344">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df83c-345">下面的示例是按钮单击事件处理程序的 Web 窗体。</span><span class="sxs-lookup"><span data-stu-id="df83c-345">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="df83c-346">它使用返回的数组<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>属性来确定用户的区域设置。</span><span class="sxs-lookup"><span data-stu-id="df83c-346">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="df83c-347">它然后实例化<xref:System.Globalization.CultureInfo>对应于该区域设置的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-347">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="df83c-348"><xref:System.Globalization.NumberFormatInfo>对象所属的<xref:System.Globalization.CultureInfo>对象随后会传递给<xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29>方法将用户输入转换为<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="df83c-348">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to an <xref:System.Int32> value.</span></span>  
  
 [!code-csharp[ParseMethod#4](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#4)]
 [!code-vb[ParseMethod#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="df83c-349"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-349"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="df83c-350"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="df83c-350"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="df83c-351"><paramref name="s" /> 表示小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-351"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="df83c-352">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="df83c-352">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="df83c-353">枚举值的按位组合，用于指示可出现在 <c>s</c> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-353">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="df83c-354">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-354">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="df83c-355">一个对象，提供有关 <c>s</c> 的格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="df83c-355">An object that supplies culture-specific information about the format of <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="df83c-356">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="df83c-356">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="df83c-357">与 <paramref name="s" /> 中指定的数字等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="df83c-357">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-358">`style`参数定义中允许的样式元素 （如空白或正号）`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-358">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="df83c-359">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="df83c-359">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="df83c-360">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="df83c-360">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="df83c-361">[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]</span><span class="sxs-lookup"><span data-stu-id="df83c-361">[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="df83c-362">或者，如果`style`包括<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="df83c-362">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="df83c-363">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="df83c-363">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="df83c-364">方括号 （[和]） 中是可选的项。</span><span class="sxs-lookup"><span data-stu-id="df83c-364">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="df83c-365">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-365">The following table describes each element.</span></span>  
  
|<span data-ttu-id="df83c-366">元素</span><span class="sxs-lookup"><span data-stu-id="df83c-366">Element</span></span>|<span data-ttu-id="df83c-367">描述</span><span class="sxs-lookup"><span data-stu-id="df83c-367">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="df83c-368">*ws*</span><span class="sxs-lookup"><span data-stu-id="df83c-368">*ws*</span></span>|<span data-ttu-id="df83c-369">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="df83c-369">Optional white space.</span></span> <span data-ttu-id="df83c-370">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-370">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="df83c-371">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="df83c-371">A culture-specific currency symbol.</span></span> <span data-ttu-id="df83c-372">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>属性<xref:System.Globalization.NumberFormatInfo>返回对象<xref:System.IFormatProvider.GetFormat%2A>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-372">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="df83c-373">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-373">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="df83c-374">*sign*</span><span class="sxs-lookup"><span data-stu-id="df83c-374">*sign*</span></span>|<span data-ttu-id="df83c-375">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="df83c-375">An optional sign.</span></span> <span data-ttu-id="df83c-376">符号可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志或末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-376">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="df83c-377">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-377">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="df83c-378">*digits*</span><span class="sxs-lookup"><span data-stu-id="df83c-378">*digits*</span></span><br /><br /> <span data-ttu-id="df83c-379">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="df83c-379">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="df83c-380">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="df83c-380">*exponential_digits*</span></span>|<span data-ttu-id="df83c-381">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-381">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="df83c-382">有关*fractional_digits*，但只数字 0 有效。</span><span class="sxs-lookup"><span data-stu-id="df83c-382">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="df83c-383">*，*</span><span class="sxs-lookup"><span data-stu-id="df83c-383">*,*</span></span>|<span data-ttu-id="df83c-384">特定于区域性的千位分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="df83c-384">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="df83c-385">千位分隔符的指定的区域性`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-385">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="df83c-386">*.*</span><span class="sxs-lookup"><span data-stu-id="df83c-386">*.*</span></span>|<span data-ttu-id="df83c-387">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="df83c-387">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="df83c-388">指定的区域性的小数点符号`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-388">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span><br /><br /> <span data-ttu-id="df83c-389">仅数字 0 可以显示为分析操作才能成功; 一个小数数字如果*fractional_digits*包括任何其他数字<xref:System.OverflowException>引发。</span><span class="sxs-lookup"><span data-stu-id="df83c-389">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="df83c-390">*e*</span><span class="sxs-lookup"><span data-stu-id="df83c-390">*e*</span></span>|<span data-ttu-id="df83c-391">E 或者 E 字符，它指示的值用在指数记数法表示。</span><span class="sxs-lookup"><span data-stu-id="df83c-391">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="df83c-392">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-392">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="df83c-393">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="df83c-393">*hexdigits*</span></span>|<span data-ttu-id="df83c-394">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="df83c-394">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="df83c-395">仅为十进制数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>样式) 始终可以在范围内是否分析成功<xref:System.Int32>类型。</span><span class="sxs-lookup"><span data-stu-id="df83c-395">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int32> type.</span></span> <span data-ttu-id="df83c-396">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能但不是要求必须包含在此输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-396">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="df83c-397">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="df83c-397">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="df83c-398">非复合 NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="df83c-398">Non-composite NumberStyles values</span></span>|<span data-ttu-id="df83c-399">除数字之外的 s 中允许的元素</span><span class="sxs-lookup"><span data-stu-id="df83c-399">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="df83c-400">仅为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-400">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="df83c-401">小数点 ( *。*</span><span class="sxs-lookup"><span data-stu-id="df83c-401">The decimal point ( *.*</span></span> <span data-ttu-id="df83c-402">) 和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-402">) and *fractional-digits* elements.</span></span> <span data-ttu-id="df83c-403">但是，*小数位数*必须包含仅一个或多个数字 0 或<xref:System.OverflowException>引发。</span><span class="sxs-lookup"><span data-stu-id="df83c-403">However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="df83c-404">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="df83c-404">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="df83c-405">如果`s`表示一个数字指数记数法时，它必须表示的范围内的整数<xref:System.Int32>不带非零小数部分的数据类型。</span><span class="sxs-lookup"><span data-stu-id="df83c-405">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="df83c-406">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="df83c-406">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="df83c-407">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="df83c-407">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="df83c-408">正号之前可以出现*数字*。</span><span class="sxs-lookup"><span data-stu-id="df83c-408">A positive sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="df83c-409">正号可以出现后*数字*。</span><span class="sxs-lookup"><span data-stu-id="df83c-409">A positive sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="df83c-410">*登录*在括号内包含的数字值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-410">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="df83c-411">千位分隔符 ( *，* ) 元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-411">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="df83c-412">* $ *元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-412">The *$* element.</span></span>|  
  
 <span data-ttu-id="df83c-413">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用标志，`s`必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="df83c-413">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="df83c-414">例如，"C9AF3"分析成功，但是"0xC9AF3"却没有。</span><span class="sxs-lookup"><span data-stu-id="df83c-414">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="df83c-415">仅其他标志可出现在`style`是<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="df83c-415">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="df83c-416">(<xref:System.Globalization.NumberStyles>枚举具有复合数字样式<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="df83c-416">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="df83c-417">`provider`参数是<xref:System.IFormatProvider>实现，如<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-417">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="df83c-418">`provider`参数提供区域性特定信息在分析中使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-418">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="df83c-419">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>对象使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="df83c-419">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df83c-420">下面的示例使用的各种`style`和`provider`参数来分析的字符串表示形式<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="df83c-420">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int32> values.</span></span> <span data-ttu-id="df83c-421">它还说明了一些相同的字符串可以解释根据区域性的格式设置信息用于分析操作的不同方式。</span><span class="sxs-lookup"><span data-stu-id="df83c-421">It also illustrates some of the different ways the same string can be interpreted depending on the culture whose formatting information is used for the parsing operation.</span></span>  
  
 [!code-cpp[System.Int32.Parse#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse3.cpp#3)]
 [!code-csharp[System.Int32.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse3.cs#3)]
 [!code-vb[System.Int32.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="df83c-422"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-422"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="df83c-423"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="df83c-423"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="df83c-424">或</span><span class="sxs-lookup"><span data-stu-id="df83c-424">-or-</span></span>  
  
 <span data-ttu-id="df83c-425"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="df83c-425"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="df83c-426"><paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-426"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="df83c-427"><paramref name="s" /> 表示小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-427"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
 <span data-ttu-id="df83c-428">或</span><span class="sxs-lookup"><span data-stu-id="df83c-428">-or-</span></span>  
  
 <span data-ttu-id="df83c-429"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="df83c-429"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-430">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-430">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="df83c-431">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-431">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="df83c-432">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-432"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-433">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="df83c-433">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="df83c-434">它只能在 <xref:System.Int32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-434">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="df83c-435">建议的替代项是调用<xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-435">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-436">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-436">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="df83c-437">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-437">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-438">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-438">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-439">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="df83c-439">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="df83c-440">它只能在 <xref:System.Int32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-440">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="df83c-441">建议的替代项是调用<xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-441">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-442">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-442">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="df83c-443">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-443">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-444">当前实例的值，已转换为 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-444">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-445">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="df83c-445">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="df83c-446">它只能在 <xref:System.Int32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-446">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="df83c-447">建议的替代项是调用<xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-447">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-448">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-448">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="df83c-449">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="df83c-449">This conversion is not supported.</span></span> <span data-ttu-id="df83c-450">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-450">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-451">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="df83c-451">This conversion is not supported.</span></span> <span data-ttu-id="df83c-452">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="df83c-452">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="df83c-453">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="df83c-453">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-454">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-454">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="df83c-455">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-455">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-456">当前实例的值，已转换为 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-456">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-457">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="df83c-457">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="df83c-458">它只能在 <xref:System.Int32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-458">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="df83c-459">建议的替代项是调用<xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-459">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-460">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-460">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="df83c-461">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-461">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-462">当前实例的值，已转换为 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-462">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-463">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="df83c-463">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="df83c-464">它只能在 <xref:System.Int32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-464">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="df83c-465">建议的替代项是调用<xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-465">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-466">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-466">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="df83c-467">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-467">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-468">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-468">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-469">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="df83c-469">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="df83c-470">它只能在 <xref:System.Int32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-470">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="df83c-471">建议的替代项是调用<xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-471">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-472">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-472">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="df83c-473">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-473">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-474">当前实例的值，未更改。</span><span class="sxs-lookup"><span data-stu-id="df83c-474">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-475">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="df83c-475">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="df83c-476">它只能在 <xref:System.Int32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-476">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-477">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-477">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="df83c-478">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-478">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-479">当前实例的值，已转换为 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-479">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-480">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="df83c-480">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="df83c-481">它只能在 <xref:System.Int32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-481">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="df83c-482">建议的替代项是调用<xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-482">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-483">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-483">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="df83c-484">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-484">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-485">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-485">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-486">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="df83c-486">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="df83c-487">它只能在 <xref:System.Int32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-487">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="df83c-488">建议的替代项是调用<xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-488">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-489">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-489">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="df83c-490">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-490">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-491">当前实例的值，已转换为 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-491">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-492">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="df83c-492">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="df83c-493">它只能在 <xref:System.Int32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-493">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="df83c-494">建议的替代项是调用<xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-494">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="df83c-495">此 <see cref="T:System.Int32" /> 值要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="df83c-495">The type to which to convert this <see cref="T:System.Int32" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="df83c-496">一个对象，用于提供有关返回值格式的信息。</span><span class="sxs-lookup"><span data-stu-id="df83c-496">An object that provides information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="df83c-497">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-497">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-498">当前实例的值，已转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-498">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-499">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="df83c-499">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="df83c-500">它只能在 <xref:System.Int32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-500">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="df83c-501">建议的替代项是调用`static`(`Shared`在 Visual Basic 中)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="df83c-501">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-502">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-502">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="df83c-503">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-503">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-504">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-504">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-505">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="df83c-505">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="df83c-506">它只能在 <xref:System.Int32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-506">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="df83c-507">建议的替代项是调用<xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-507">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-508">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-508">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="df83c-509">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-509">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-510">当前实例的值，已转换为 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-510">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-511">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="df83c-511">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="df83c-512">它只能在 <xref:System.Int32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-512">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="df83c-513">建议的替代项是调用<xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-513">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-514">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-514">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="df83c-515">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-515">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="df83c-516">当前实例的值，已转换为 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-516">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-517">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="df83c-517">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="df83c-518">它只能在 <xref:System.Int32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="df83c-518">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="df83c-519">建议的替代项是调用<xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-519">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="df83c-520">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="df83c-520">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df83c-521">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="df83c-521">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="df83c-522">此实例的值的字符串表示形式，由减号（如果值为负）和没有前导零的从 0 到 9 的数字序列组成。</span><span class="sxs-lookup"><span data-stu-id="df83c-522">The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-523"><xref:System.Int32.ToString>方法格式<xref:System.Int32>值在默认的 （"G"或常规） 中使用的格式<xref:System.Globalization.NumberFormatInfo>当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-523">The <xref:System.Int32.ToString> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="df83c-524">如果你想要指定其他文件格式或区域性，使用的其他重载<xref:System.Int32.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="df83c-524">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="df83c-525">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="df83c-525">To use format</span></span>|<span data-ttu-id="df83c-526">区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-526">For culture</span></span>|<span data-ttu-id="df83c-527">使用的重载</span><span class="sxs-lookup"><span data-stu-id="df83c-527">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="df83c-528">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="df83c-528">Default ("G") format</span></span>|<span data-ttu-id="df83c-529">特定区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-529">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="df83c-530">特定的格式</span><span class="sxs-lookup"><span data-stu-id="df83c-530">A specific format</span></span>|<span data-ttu-id="df83c-531">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-531">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="df83c-532">特定的格式</span><span class="sxs-lookup"><span data-stu-id="df83c-532">A specific format</span></span>|<span data-ttu-id="df83c-533">特定区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-533">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="df83c-534">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="df83c-534">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="df83c-535">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="df83c-535">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="df83c-536">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="df83c-536">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df83c-537">下面的示例显示<xref:System.Int32>值使用默认<xref:System.Int32.ToString>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-537">The following example displays an <xref:System.Int32> value using the default <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="df83c-538">它还显示的字符串表示形式<xref:System.Int32>通过使用数量的标准格式说明符得到的值。</span><span class="sxs-lookup"><span data-stu-id="df83c-538">It also displays the string representations of the <xref:System.Int32> value that results from using a number of standard format specifiers.</span></span> <span data-ttu-id="df83c-539">示例使用 EN-US 区域性的格式设置约定来显示。</span><span class="sxs-lookup"><span data-stu-id="df83c-539">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Int32.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString1.cpp#1)]
 [!code-csharp[System.Int32.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#1)]
 [!code-vb[System.Int32.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="df83c-540">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-540">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="df83c-541">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="df83c-541">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="df83c-542">此实例的值的字符串表示形式，由 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="df83c-542">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-543"><xref:System.Int32.ToString%28System.IFormatProvider%29>方法格式<xref:System.Int32>值在默认的 （"G"或常规） 中使用的格式<xref:System.Globalization.NumberFormatInfo>指定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-543">The <xref:System.Int32.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="df83c-544">如果你想要指定不同的格式或当前区域性，使用的其他重载<xref:System.Int32.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="df83c-544">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="df83c-545">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="df83c-545">To use format</span></span>|<span data-ttu-id="df83c-546">区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-546">For culture</span></span>|<span data-ttu-id="df83c-547">使用的重载</span><span class="sxs-lookup"><span data-stu-id="df83c-547">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="df83c-548">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="df83c-548">Default ("G") format</span></span>|<span data-ttu-id="df83c-549">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-549">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="df83c-550">特定的格式</span><span class="sxs-lookup"><span data-stu-id="df83c-550">A specific format</span></span>|<span data-ttu-id="df83c-551">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-551">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="df83c-552">特定的格式</span><span class="sxs-lookup"><span data-stu-id="df83c-552">A specific format</span></span>|<span data-ttu-id="df83c-553">特定区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-553">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="df83c-554">`provider`参数是一个对象，实现<xref:System.IFormatProvider>接口。</span><span class="sxs-lookup"><span data-stu-id="df83c-554">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="df83c-555">其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供此方法返回的字符串的格式的区域性特定信息的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-555">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="df83c-556">实现的对象<xref:System.IFormatProvider>可以是任何以下：</span><span class="sxs-lookup"><span data-stu-id="df83c-556">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="df83c-557">A<xref:System.Globalization.CultureInfo>代表要使用其格式设置规则的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-557">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="df83c-558">A<xref:System.Globalization.NumberFormatInfo>对象，其中包含特定的数字格式设置信息，此值。</span><span class="sxs-lookup"><span data-stu-id="df83c-558">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="df83c-559">实现一个自定义对象<xref:System.IFormatProvider>并且其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-559">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="df83c-560">如果`provider`是`null`或<xref:System.Globalization.NumberFormatInfo>对象不能从获取`provider`，返回值的格式使用<xref:System.Globalization.NumberFormatInfo>线程的当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-560">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="df83c-561">有关线程的当前区域性的信息，请参阅<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="df83c-561">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="df83c-562">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="df83c-562">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="df83c-563">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="df83c-563">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="df83c-564">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="df83c-564">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df83c-565">下面的示例显示的字符串表示形式<xref:System.Int32>值使用<xref:System.Globalization.CultureInfo>表示几种不同区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-565">The following example displays the string representation of an <xref:System.Int32> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-cpp[System.Int32.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString2.cpp#2)]
 [!code-csharp[System.Int32.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#2)]
 [!code-vb[System.Int32.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="df83c-566">标准或自定义的数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="df83c-566">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="df83c-567">使用指定的格式，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="df83c-567">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="df83c-568">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="df83c-568">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-569"><xref:System.Int32.ToString%28System.String%29>方法格式<xref:System.Int32>中通过使用指定的格式值<xref:System.Globalization.NumberFormatInfo>对象，表示当前区域性的约定。</span><span class="sxs-lookup"><span data-stu-id="df83c-569">The <xref:System.Int32.ToString%28System.String%29> method formats an <xref:System.Int32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="df83c-570">如果你想要使用默认值 （"G"或常规） 格式或指定不同的区域性，请使用其他重载的<xref:System.Int32.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="df83c-570">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="df83c-571">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="df83c-571">To use format</span></span>|<span data-ttu-id="df83c-572">区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-572">For culture</span></span>|<span data-ttu-id="df83c-573">使用的重载</span><span class="sxs-lookup"><span data-stu-id="df83c-573">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="df83c-574">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="df83c-574">Default ("G") format</span></span>|<span data-ttu-id="df83c-575">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-575">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="df83c-576">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="df83c-576">Default ("G") format</span></span>|<span data-ttu-id="df83c-577">特定区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-577">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="df83c-578">特定的格式</span><span class="sxs-lookup"><span data-stu-id="df83c-578">A specific format</span></span>|<span data-ttu-id="df83c-579">特定区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-579">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="df83c-580">`format`参数可以是任何有效的标准数字格式说明符 （"R"除外） 以及自定义数字格式说明符的任意组合。</span><span class="sxs-lookup"><span data-stu-id="df83c-580">The `format` parameter can be any valid standard numeric format specifier except for "R", as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="df83c-581">如果`format`是`null`或空字符串 ("")，此实例返回值的格式与常规的数字格式说明符 ("G")。</span><span class="sxs-lookup"><span data-stu-id="df83c-581">If `format` is `null` or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="df83c-582">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="df83c-582">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="df83c-583">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="df83c-583">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="df83c-584">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="df83c-584">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="df83c-585">此实例返回的值进行格式设置<xref:System.Globalization.NumberFormatInfo>为当前区域性。</span><span class="sxs-lookup"><span data-stu-id="df83c-585">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df83c-586">下面的示例显示<xref:System.Int32>值使用每个支持标准数字格式说明符，以及两个自定义数字格式字符串。</span><span class="sxs-lookup"><span data-stu-id="df83c-586">The following example displays an <xref:System.Int32> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="df83c-587">在将数字的值转换为字符串，该示例使用 EN-US 区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="df83c-587">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Int32.ToString#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString3.cpp#3)]
 [!code-csharp[System.Int32.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#3)]
 [!code-vb[System.Int32.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="df83c-588"><paramref name="format" /> 无效或不受支持。</span><span class="sxs-lookup"><span data-stu-id="df83c-588"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="df83c-589">标准或自定义的数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="df83c-589">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="df83c-590">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-590">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="df83c-591">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="df83c-591">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="df83c-592">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="df83c-592">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-593"><xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>方法格式<xref:System.Int32>中通过使用指定的格式值<xref:System.Globalization.NumberFormatInfo>指定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-593">The <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="df83c-594">如果你想要使用默认格式或区域性设置，使用的其他重载<xref:System.Int32.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="df83c-594">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="df83c-595">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="df83c-595">To use format</span></span>|<span data-ttu-id="df83c-596">区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-596">For culture</span></span>|<span data-ttu-id="df83c-597">使用的重载</span><span class="sxs-lookup"><span data-stu-id="df83c-597">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="df83c-598">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="df83c-598">Default ("G") format</span></span>|<span data-ttu-id="df83c-599">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-599">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="df83c-600">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="df83c-600">Default ("G") format</span></span>|<span data-ttu-id="df83c-601">特定区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-601">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="df83c-602">特定的格式</span><span class="sxs-lookup"><span data-stu-id="df83c-602">A specific format</span></span>|<span data-ttu-id="df83c-603">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="df83c-603">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
  
 <span data-ttu-id="df83c-604">`format`参数可以是一个标准或自定义数字格式字符串。</span><span class="sxs-lookup"><span data-stu-id="df83c-604">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="df83c-605">支持"R"（或"r"） 以外的所有标准数字格式字符串，因为所有自定义数字格式字符。</span><span class="sxs-lookup"><span data-stu-id="df83c-605">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="df83c-606">如果`format`是`null`或空字符串 ("")，此实例返回的值的格式与常规的数字格式说明符 ("G")。</span><span class="sxs-lookup"><span data-stu-id="df83c-606">If `format` is `null` or an empty string (""), the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="df83c-607">`provider`参数是一个对象，实现<xref:System.IFormatProvider>接口。</span><span class="sxs-lookup"><span data-stu-id="df83c-607">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="df83c-608">其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供此方法返回的字符串的格式的区域性特定格式信息的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-608">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific format information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="df83c-609">实现的对象<xref:System.IFormatProvider>可以是任何以下：</span><span class="sxs-lookup"><span data-stu-id="df83c-609">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="df83c-610">A<xref:System.Globalization.CultureInfo>代表要使用其格式设置规则的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-610">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="df83c-611">A<xref:System.Globalization.NumberFormatInfo>对象，其中包含特定的数字格式设置信息，此值。</span><span class="sxs-lookup"><span data-stu-id="df83c-611">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="df83c-612">实现一个自定义对象<xref:System.IFormatProvider>并且其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-612">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="df83c-613">如果`provider`是`null`或<xref:System.Globalization.NumberFormatInfo>对象不能从获取`provider`，此实例返回的值进行格式设置<xref:System.Globalization.NumberFormatInfo>为当前区域性。</span><span class="sxs-lookup"><span data-stu-id="df83c-613">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
 <span data-ttu-id="df83c-614">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="df83c-614">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="df83c-615">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="df83c-615">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="df83c-616">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="df83c-616">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df83c-617">下面的示例显示正值和负值的每个支持标准数字格式说明符用于三种不同的区域性。</span><span class="sxs-lookup"><span data-stu-id="df83c-617">The following example displays a positive and a negative value using each of the supported standard numeric format specifiers for three different cultures.</span></span>  
  
 [!code-cpp[System.Int32.ToString#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString4.cpp#4)]
 [!code-csharp[System.Int32.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#4)]
 [!code-vb[System.Int32.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="df83c-618"><paramref name="format" /> 无效或不受支持。</span><span class="sxs-lookup"><span data-stu-id="df83c-618"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="df83c-619">将数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="df83c-619">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="df83c-620">一个指示操作是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="df83c-620">A return value indicates whether the operation succeeded.</span></span></summary>
        <altmember cref="Overload:System.Int32.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="df83c-621">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="df83c-621">A string containing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="df83c-622">当此方法返回时，如果转换成功，则包含与 <c>s</c> 中所包含的数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="df83c-622">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="df83c-623">如果 <c>s</c> 参数为 <see langword="null" /> 或为 <see cref="F:System.String.Empty" />、格式不正确，或者表示小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="df83c-623">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="df83c-624">此参数未经初始化即进行传递；最初在 <c>result</c> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="df83c-624">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="df83c-625">将数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="df83c-625">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="df83c-626">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="df83c-626">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns>
          <span data-ttu-id="df83c-627">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-627"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-628"><xref:System.Int32.TryParse%2A>方法就像是<xref:System.Int32.Parse%2A>方法，除了<xref:System.Int32.TryParse%2A>方法不会引发异常，如果转换失败。</span><span class="sxs-lookup"><span data-stu-id="df83c-628">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="df83c-629">不必使用异常处理来测试是否<xref:System.FormatException>的事件中`s`无效，无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="df83c-629">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="df83c-630">`s`参数包含一个数字的窗体：</span><span class="sxs-lookup"><span data-stu-id="df83c-630">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="df83c-631">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="df83c-631">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="df83c-632">方括号 （[和]） 中是可选的项。</span><span class="sxs-lookup"><span data-stu-id="df83c-632">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="df83c-633">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-633">The following table describes each element.</span></span>  
  
|<span data-ttu-id="df83c-634">元素</span><span class="sxs-lookup"><span data-stu-id="df83c-634">Element</span></span>|<span data-ttu-id="df83c-635">描述</span><span class="sxs-lookup"><span data-stu-id="df83c-635">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="df83c-636">*ws*</span><span class="sxs-lookup"><span data-stu-id="df83c-636">*ws*</span></span>|<span data-ttu-id="df83c-637">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="df83c-637">Optional white space.</span></span>|  
|<span data-ttu-id="df83c-638">*sign*</span><span class="sxs-lookup"><span data-stu-id="df83c-638">*sign*</span></span>|<span data-ttu-id="df83c-639">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="df83c-639">An optional sign.</span></span>|  
|<span data-ttu-id="df83c-640">*digits*</span><span class="sxs-lookup"><span data-stu-id="df83c-640">*digits*</span></span>|<span data-ttu-id="df83c-641">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="df83c-641">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="df83c-642">`s`参数被解释使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="df83c-642">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="df83c-643">十进制数字，除了允许仅前导空格和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="df83c-643">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="df83c-644">若要显式定义的样式元素以及可出现在区域性特定格式设置信息`s`，使用<xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-644">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="df83c-645">`s`使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-645">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="df83c-646">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="df83c-646">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="df83c-647">此重载<xref:System.Int32.TryParse%2A>方法将解释中的所有位`s`为十进制数字的参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-647">This overload of the <xref:System.Int32.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="df83c-648">若要分析的字符串表示形式的十六进制数，请调用<xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType>重载。</span><span class="sxs-lookup"><span data-stu-id="df83c-648">To parse the string representation of a hexadecimal number, call the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df83c-649">下面的示例调用<xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType>与大量的不同字符串值的方法。</span><span class="sxs-lookup"><span data-stu-id="df83c-649">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-cpp[System.Int32.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse1.cpp#1)]
 [!code-csharp[System.Int32.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int32.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="df83c-650">一些字符串，<xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29>方法不能进行转换在此示例是：</span><span class="sxs-lookup"><span data-stu-id="df83c-650">Some of the strings that the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="df83c-651">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="df83c-651">"9432.0".</span></span> <span data-ttu-id="df83c-652">转换失败，因为字符串不能包含小数分隔符;它必须包含仅为整型数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-652">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="df83c-653">"16,667".</span><span class="sxs-lookup"><span data-stu-id="df83c-653">"16,667".</span></span> <span data-ttu-id="df83c-654">转换失败，因为字符串不能包含组分隔符，则为它必须包含仅为整型数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-654">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="df83c-655">"(100)".</span><span class="sxs-lookup"><span data-stu-id="df83c-655">"(100)".</span></span> <span data-ttu-id="df83c-656">转换失败，因为字符串不能包含而不是定义由当前区域性的负号<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="df83c-656">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="df83c-657">"01FA"。</span><span class="sxs-lookup"><span data-stu-id="df83c-657">"01FA".</span></span> <span data-ttu-id="df83c-658">转换失败，因为字符串不能包含十六进制数字;它必须包含仅为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-658">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="M:System.Int32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="df83c-659">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="df83c-659">A string containing a number to convert.</span></span> <span data-ttu-id="df83c-660">该字符串使用由 <c>style</c> 指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="df83c-660">The string is interpreted using the style specified by <c>style</c>.</span></span></param>
        <param name="style"><span data-ttu-id="df83c-661">枚举值的按位组合，用于指示可出现在 <c>s</c> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-661">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="df83c-662">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-662">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="df83c-663">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="df83c-663">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <param name="result"><span data-ttu-id="df83c-664">当此方法返回时，如果转换成功，则包含与 <c>s</c> 中所包含的数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="df83c-664">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="df83c-665">如果 <c>s</c> 参数为 <see langword="null" /> 或为 <see cref="F:System.String.Empty" />、格式不符合 <c>style</c>，或表示的数小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="df83c-665">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="df83c-666">此参数未经初始化即进行传递；最初在 <c>result</c> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="df83c-666">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="df83c-667">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="df83c-667">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="df83c-668">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="df83c-668">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns>
          <span data-ttu-id="df83c-669">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="df83c-669"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df83c-670"><xref:System.Int32.TryParse%2A>方法就像是<xref:System.Int32.Parse%2A>方法，除了<xref:System.Int32.TryParse%2A>方法不会引发异常，如果转换失败。</span><span class="sxs-lookup"><span data-stu-id="df83c-670">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="df83c-671">不必使用异常处理来测试是否<xref:System.FormatException>的事件中`s`无效，无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="df83c-671">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="df83c-672">`style`参数定义中允许的样式元素 （如空白或正整数或负号）`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-672">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="df83c-673">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="df83c-673">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="df83c-674">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="df83c-674">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="df83c-675">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="df83c-675">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="df83c-676">或者，如果`style`参数包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="df83c-676">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="df83c-677">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="df83c-677">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="df83c-678">方括号 （[和]） 中是可选的项。</span><span class="sxs-lookup"><span data-stu-id="df83c-678">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="df83c-679">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-679">The following table describes each element.</span></span>  
  
|<span data-ttu-id="df83c-680">元素</span><span class="sxs-lookup"><span data-stu-id="df83c-680">Element</span></span>|<span data-ttu-id="df83c-681">描述</span><span class="sxs-lookup"><span data-stu-id="df83c-681">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="df83c-682">*ws*</span><span class="sxs-lookup"><span data-stu-id="df83c-682">*ws*</span></span>|<span data-ttu-id="df83c-683">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="df83c-683">Optional white space.</span></span> <span data-ttu-id="df83c-684">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，或在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-684">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="df83c-685">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="df83c-685">A culture-specific currency symbol.</span></span> <span data-ttu-id="df83c-686">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>属性<xref:System.Globalization.NumberFormatInfo>返回对象<xref:System.IFormatProvider.GetFormat%2A>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="df83c-686">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="df83c-687">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-687">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="df83c-688">*sign*</span><span class="sxs-lookup"><span data-stu-id="df83c-688">*sign*</span></span>|<span data-ttu-id="df83c-689">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="df83c-689">An optional sign.</span></span> <span data-ttu-id="df83c-690">正负符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>或<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-690">A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> or <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flags.</span></span>|  
|<span data-ttu-id="df83c-691">*digits*</span><span class="sxs-lookup"><span data-stu-id="df83c-691">*digits*</span></span>|<span data-ttu-id="df83c-692">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-692">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="df83c-693">*，*</span><span class="sxs-lookup"><span data-stu-id="df83c-693">*,*</span></span>|<span data-ttu-id="df83c-694">特定于区域性的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="df83c-694">A culture-specific thousands separator.</span></span> <span data-ttu-id="df83c-695">千位分隔符的指定的区域性`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-695">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="df83c-696">*.*</span><span class="sxs-lookup"><span data-stu-id="df83c-696">*.*</span></span>|<span data-ttu-id="df83c-697">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="df83c-697">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="df83c-698">指定的区域性的小数点符号`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-698">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="df83c-699">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="df83c-699">*fractional_digits*</span></span>|<span data-ttu-id="df83c-700">数字 0 的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="df83c-700">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="df83c-701">小数位数可以出现在`s`才`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-701">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="df83c-702">*e*</span><span class="sxs-lookup"><span data-stu-id="df83c-702">*e*</span></span>|<span data-ttu-id="df83c-703">E 或者 E 字符，它指示的值用在指数记数法表示。</span><span class="sxs-lookup"><span data-stu-id="df83c-703">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="df83c-704">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="df83c-704">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="df83c-705">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="df83c-705">*hexdigits*</span></span>|<span data-ttu-id="df83c-706">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="df83c-706">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="df83c-707">仅为十进制数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>标志) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="df83c-707">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="df83c-708">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能但不是要求必须包含在此输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-708">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="df83c-709">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="df83c-709">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="df83c-710">非复合 NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="df83c-710">Non-composite NumberStyles values</span></span>|<span data-ttu-id="df83c-711">除数字之外的 s 中允许的元素</span><span class="sxs-lookup"><span data-stu-id="df83c-711">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="df83c-712">仅为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-712">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="df83c-713">小数点 (*。*) 和*fractional_digits*元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-713">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="df83c-714">但是， *fractional_digits*仅一个或多个数字 0 或该方法将返回必须组成`false`。</span><span class="sxs-lookup"><span data-stu-id="df83c-714">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="df83c-715">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="df83c-715">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="df83c-716">如果`s`表示一个数字指数记数法时，它必须表示的范围内的整数<xref:System.Int32>不带非零小数部分的数据类型。</span><span class="sxs-lookup"><span data-stu-id="df83c-716">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="df83c-717">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="df83c-717">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="df83c-718">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="df83c-718">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="df83c-719">登录之前可以出现*数字*。</span><span class="sxs-lookup"><span data-stu-id="df83c-719">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="df83c-720">包含符号可以出现后*数字*。</span><span class="sxs-lookup"><span data-stu-id="df83c-720">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="df83c-721">*登录*在括号内包含的数字值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-721">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="df83c-722">千位分隔符 (*，*) 元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-722">The thousands separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="df83c-723">* $ *元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-723">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="df83c-724">所有元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-724">All elements.</span></span> <span data-ttu-id="df83c-725">`s`参数不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-725">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="df83c-726">*Ws*元素的开头或末尾`s`，*登录*开头`s`，和小数点 (*。*) 符号。</span><span class="sxs-lookup"><span data-stu-id="df83c-726">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="df83c-727">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="df83c-727">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="df83c-728">*Ws*，*登录*，千位分隔符 (*，*)，和小数点 (*。*) 元素。</span><span class="sxs-lookup"><span data-stu-id="df83c-728">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="df83c-729">所有样式，除`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="df83c-729">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="df83c-730">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用标志，`s`必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="df83c-730">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="df83c-731">例如，"C9AF3"分析成功，但是"0xC9AF3"却没有。</span><span class="sxs-lookup"><span data-stu-id="df83c-731">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="df83c-732">仅其他标志可出现在`style`是<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="df83c-732">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="df83c-733">(<xref:System.Globalization.NumberStyles>枚举具有复合样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="df83c-733">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="df83c-734">`provider`参数是<xref:System.IFormatProvider>实现，如<xref:System.Globalization.CultureInfo>对象或<xref:System.Globalization.NumberFormatInfo>对象，其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="df83c-734">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="df83c-735"><xref:System.Globalization.NumberFormatInfo>对象提供的格式的区域性特定信息`s`。</span><span class="sxs-lookup"><span data-stu-id="df83c-735">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="df83c-736">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>对象使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="df83c-736">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df83c-737">下面的示例调用<xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType>与大量的不同的字符串的方法和<xref:System.Globalization.NumberStyles>值。</span><span class="sxs-lookup"><span data-stu-id="df83c-737">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-cpp[System.Int32.TryParse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse2.cpp#2)]
 [!code-csharp[System.Int32.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int32.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="df83c-738"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="df83c-738"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="df83c-739">或</span><span class="sxs-lookup"><span data-stu-id="df83c-739">-or-</span></span>  
  
 <span data-ttu-id="df83c-740"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="df83c-740"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int32.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>