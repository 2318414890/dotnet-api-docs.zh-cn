<Type Name="UInt16" FullName="System.UInt16">
  <TypeSignature Language="C#" Value="public struct UInt16 : IComparable, IComparable&lt;ushort&gt;, IConvertible, IEquatable&lt;ushort&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int16 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int16&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int16&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.UInt16" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt16&#xA;Implements IComparable, IComparable(Of UShort), IConvertible, IEquatable(Of UShort), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt16 : IComparable, IComparable&lt;System::UInt16&gt;, IConvertible, IEquatable&lt;System::UInt16&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="172b8-101">表示 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-101">Represents a 16-bit unsigned integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-102"><xref:System.UInt16>值类型表示无符号的整数值范围从 0 到 65535。</span><span class="sxs-lookup"><span data-stu-id="172b8-102">The <xref:System.UInt16> value type represents unsigned integers with values ranging from 0 to 65535.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="172b8-103"><xref:System.UInt16>类型不是符合 CLS。</span><span class="sxs-lookup"><span data-stu-id="172b8-103">The <xref:System.UInt16> type is not CLS-compliant.</span></span> <span data-ttu-id="172b8-104">符合 cls 的替代类型是<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="172b8-104">The CLS-compliant alternative type is <xref:System.Int32>.</span></span> <span data-ttu-id="172b8-105"><xref:System.Int16> 可以改用替换<xref:System.UInt16>值，其范围从 0 到<xref:System.Int16.MaxValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="172b8-105"><xref:System.Int16> can be used instead to replace a <xref:System.UInt16> value that ranges from zero to <xref:System.Int16.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="172b8-106">有关 CLS 遵从性的详细信息，请参阅[语言独立性和独立于语言的组件](~/docs/standard/language-independence-and-language-independent-components.md)。</span><span class="sxs-lookup"><span data-stu-id="172b8-106">For more information about CLS compliance, see [Language Independence and Language-Independent Components](~/docs/standard/language-independence-and-language-independent-components.md).</span></span>  
  
 <span data-ttu-id="172b8-107"><xref:System.UInt16>结构可提供用于比较此类型的实例，实例的值转换为其字符串表示形式中，以及将数字的字符串表示转换为此类型的实例方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-107">The <xref:System.UInt16> structure provides methods to compare instances of this type, convert the value of an instance to its string representation, and convert the string representation of a number to an instance of this type.</span></span>  
  
 <span data-ttu-id="172b8-108">有关格式规范代码如何控制的字符串表示形式的值类型的信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="172b8-108">For information about how format specification codes control the string representation of value types, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="172b8-109">此类型的所有成员都是线程安全。</span><span class="sxs-lookup"><span data-stu-id="172b8-109">All members of this type are thread safe.</span></span> <span data-ttu-id="172b8-110">实际上，看起来要修改实例状态的成员返回使用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="172b8-110">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="172b8-111">作为与任何其他类型，读取和写入到共享的变量，其中包含此类型的实例必须受使用锁来确保的线程安全性。</span><span class="sxs-lookup"><span data-stu-id="172b8-111">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.Int32" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="172b8-112">将此实例与指定的对象或 <see cref="T:System.UInt16" /> 进行比较，并返回二者相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="172b8-112">Compares this instance to a specified object or <see cref="T:System.UInt16" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="172b8-113">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-113">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="172b8-114">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="172b8-114">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="172b8-115">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="172b8-115">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="172b8-116"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="172b8-116"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="172b8-117"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="172b8-117"></term><description> Description</span></span>  
  
 <span data-ttu-id="172b8-118"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="172b8-118"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="172b8-119"></term><description> 此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-119"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="172b8-120"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="172b8-120"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="172b8-121"></term><description> 此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-121"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="172b8-122"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="172b8-122"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="172b8-123"></term><description> 此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-123"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="172b8-124">或</span><span class="sxs-lookup"><span data-stu-id="172b8-124">-or-</span></span>  
  
 <span data-ttu-id="172b8-125"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-125"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-126">任何实例<xref:System.UInt16>，无论其值被视为大于`null`。</span><span class="sxs-lookup"><span data-stu-id="172b8-126">Any instance of <xref:System.UInt16>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="172b8-127">`value` 必须是`null`或实例<xref:System.UInt16>; 否则为将引发异常。</span><span class="sxs-lookup"><span data-stu-id="172b8-127">`value` must be `null` or an instance of <xref:System.UInt16>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="172b8-128">下面的示例演示<xref:System.UInt16.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-128">The following example demonstrates the <xref:System.UInt16.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[UInt16 Example#3](~/samples/snippets/cpp/VS_Snippets_CLR/UInt16 Example/CPP/source.cpp#3)]
 [!code-csharp[UInt16 Example#3](~/samples/snippets/csharp/VS_Snippets_CLR/UInt16 Example/CS/source.cs#3)]
 [!code-vb[UInt16 Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt16 Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="172b8-129"><paramref name="value" /> 不是 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-129"><paramref name="value" /> is not a <see cref="T:System.UInt16" />.</span></span></exception>
        <altmember cref="M:System.UInt16.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.CompareTo(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="172b8-130">要比较的无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-130">An unsigned integer to compare.</span></span></param>
        <summary><span data-ttu-id="172b8-131">将此实例与指定的 16 位无符号整数进行比较并返回对其相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="172b8-131">Compares this instance to a specified 16-bit unsigned integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="172b8-132">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="172b8-132">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="172b8-133"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="172b8-133"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="172b8-134"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="172b8-134"></term><description> Description</span></span>  
  
 <span data-ttu-id="172b8-135"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="172b8-135"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="172b8-136"></term><description> 此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-136"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="172b8-137"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="172b8-137"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="172b8-138"></term><description> 此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-138"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="172b8-139"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="172b8-139"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="172b8-140"></term><description> 此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-140"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-141">此方法实现<xref:System.IComparable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.UInt16.CompareTo%2A?displayProperty=nameWithType>方法因为它不具有要转换`value`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-141">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.UInt16.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="172b8-142">具体取决于您的编程语言，它可能会对代码<xref:System.UInt16.CompareTo%2A>其中的参数类型具有较少的位的方法 （为较窄） 比实例类型。</span><span class="sxs-lookup"><span data-stu-id="172b8-142">Depending on your programming language, it might be possible to code a <xref:System.UInt16.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="172b8-143">这可能是因为某些编程语言中执行的隐式的扩大转换，它表示具有任意数量的位的实例作为类型参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-143">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="172b8-144">例如，假设实例类型是<xref:System.Int32>和参数类型是<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="172b8-144">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="172b8-145">Microsoft C# 编译器生成的指令来表示形式的参数值<xref:System.Int32>对象，然后生成<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>比较的值的方法<xref:System.Int32>实例和<xref:System.Int32>参数表示形式。</span><span class="sxs-lookup"><span data-stu-id="172b8-145">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="172b8-146">请查阅你的编程语言的文档，以确定其编译器是否对数值类型执行隐式的扩大转换。</span><span class="sxs-lookup"><span data-stu-id="172b8-146">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="172b8-147">下面的示例演示泛型和非泛型版本的<xref:System.UInt16.CompareTo%2A>多个值和引用类型的方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-147">The following example demonstrates generic and nongeneric versions of the <xref:System.UInt16.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt16.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="172b8-148">返回一个值，该值指示此实例是否与指定的对象或 <see cref="T:System.UInt16" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="172b8-148">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.UInt16" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="172b8-149">要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-149">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="172b8-150">返回一个值，该值指示此实例是否等于指定的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-150">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="172b8-151">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.UInt16" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-151"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.UInt16" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="172b8-152">下面的示例演示<xref:System.UInt16.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-152">The following example demonstrates the <xref:System.UInt16.Equals%2A> method.</span></span>  
  
 [!code-cpp[UInt16_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/UInt16_Equals/CPP/uint16_equals.cpp#1)]
 [!code-csharp[UInt16_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/UInt16_Equals/CS/uint16_equals.cs#1)]
 [!code-vb[UInt16_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt16_Equals/VB/uint16_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="172b8-153">编译器重载决策可能应对明显的差异的两个行为<see cref="M:System.UInt16.Equals(System.UInt16)" />方法重载。</span><span class="sxs-lookup"><span data-stu-id="172b8-153">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt16.Equals(System.UInt16)" /> method overloads.</span></span> <span data-ttu-id="172b8-154">如果之间的隐式转换<paramref name="obj" />自变量和一个<see cref="T:System.UInt16" />定义和自变量并不类型化为<see cref="T:System.Object" />，编译器执行隐式转换和调用<see cref="M:System.UInt16.Equals(System.UInt16)" />方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-154">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method.</span></span> <span data-ttu-id="172b8-155">否则，它们调用<see cref="M:System.UInt16.Equals(System.Object)" />方法，始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.UInt16" />值。</span><span class="sxs-lookup"><span data-stu-id="172b8-155">Otherwise, they call the <see cref="M:System.UInt16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt16" /> value.</span></span> <span data-ttu-id="172b8-156">下面的示例阐释了两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="172b8-156">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="172b8-157">情况下<see cref="T:System.Byte" />值，第一个比较返回<see langword="true" />因为编译器自动执行一个的扩大转换，调用<see cref="M:System.UInt16.Equals(System.UInt16)" />方法，而第二个比较返回<see langword="false" />因为编译器调用<see cref="M:System.UInt16.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-157">In the case of a <see cref="T:System.Byte" /> value, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt16.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.UInt16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.equals/cs/equalsoverl.cs#1)]
 [!code-vb[System.UInt16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.equals/vb/equalsoverl.vb#1)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ushort obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int16 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Equals(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt16 obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="172b8-158">要与此实例进行比较的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-158">A 16-bit unsigned integer to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="172b8-159">返回一个值，该值指示此实例是否等于指定的 <see cref="T:System.UInt16" /> 值。</span><span class="sxs-lookup"><span data-stu-id="172b8-159">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt16" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="172b8-160">如果 <paramref name="obj" /> 的值与此实例相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-160"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-161">此方法实现<xref:System.IEquatable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.UInt16.Equals%2A>因为它不具有要转换`obj`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-161">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.UInt16.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="172b8-162">编译器重载决策可能应对明显的差异的两个行为<see cref="M:System.UInt16.Equals(System.UInt16)" />方法重载。</span><span class="sxs-lookup"><span data-stu-id="172b8-162">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt16.Equals(System.UInt16)" /> method overloads.</span></span> <span data-ttu-id="172b8-163">如果之间的隐式转换<paramref name="obj" />自变量和一个<see cref="T:System.UInt16" />定义和自变量并不类型化为<see cref="T:System.Object" />，编译器执行隐式转换和调用<see cref="M:System.UInt16.Equals(System.UInt16)" />方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-163">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method.</span></span> <span data-ttu-id="172b8-164">否则，它们调用<see cref="M:System.UInt16.Equals(System.Object)" />方法，始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.UInt16" />值。</span><span class="sxs-lookup"><span data-stu-id="172b8-164">Otherwise, they call the <see cref="M:System.UInt16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt16" /> value.</span></span> <span data-ttu-id="172b8-165">下面的示例阐释了两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="172b8-165">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="172b8-166">情况下<see cref="T:System.Byte" />值，第一个比较返回<see langword="true" />因为编译器自动执行一个的扩大转换，调用<see cref="M:System.UInt16.Equals(System.UInt16)" />方法，而第二个比较返回<see langword="false" />因为编译器调用<see cref="M:System.UInt16.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-166">In the case of a <see cref="T:System.Byte" /> value, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt16.Equals(System.UInt16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt16.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.UInt16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.equals/cs/equalsoverl.cs#1)]
 [!code-vb[System.UInt16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.equals/vb/equalsoverl.vb#1)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="172b8-167">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="172b8-167">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="172b8-168">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="172b8-168">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="172b8-169">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-169">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt16" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-170">枚举常数 <see cref="F:System.TypeCode.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-170">The enumerated constant, <see cref="F:System.TypeCode.UInt16" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const ushort MaxValue = 65535;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int16 MaxValue = unsigned int16(65535)" />
      <MemberSignature Language="DocId" Value="F:System.UInt16.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As UShort  = 65535" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt16 MaxValue = 65535;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <MemberValue>65535</MemberValue>
      <Docs>
        <summary><span data-ttu-id="172b8-171">表示 <see cref="T:System.UInt16" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="172b8-171">Represents the largest possible value of <see cref="T:System.UInt16" />.</span></span> <span data-ttu-id="172b8-172">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="172b8-172">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-173">此常量的值为 65535;也就是说，十六进制 0xFFFF。</span><span class="sxs-lookup"><span data-stu-id="172b8-173">The value of this constant is 65535; that is, hexadecimal 0xFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="172b8-174">下面的示例使用<xref:System.UInt16.MaxValue?displayProperty=nameWithType>和<xref:System.UInt16.MinValue?displayProperty=nameWithType>属性，以确保<xref:System.Int32>值位于范围内<xref:System.UInt16>类型，然后再将其转换为<xref:System.UInt16>值。</span><span class="sxs-lookup"><span data-stu-id="172b8-174">The following example uses the <xref:System.UInt16.MaxValue?displayProperty=nameWithType> and <xref:System.UInt16.MinValue?displayProperty=nameWithType> properties to ensure that an <xref:System.Int32> value is in the range of the <xref:System.UInt16> type before converting it to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="172b8-175">这样可以防止引发转换操作<xref:System.OverflowException>整数值是否不在范围内<xref:System.UInt16>类型。</span><span class="sxs-lookup"><span data-stu-id="172b8-175">This prevents the conversion operation from throwing an <xref:System.OverflowException> if the integer value is not in the range of the <xref:System.UInt16> type.</span></span>  
  
 [!code-csharp[System.UInt16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.UInt16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt16.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const ushort MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int16 MinValue = unsigned int16(0)" />
      <MemberSignature Language="DocId" Value="F:System.UInt16.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As UShort  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt16 MinValue = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="172b8-176">表示 <see cref="T:System.UInt16" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="172b8-176">Represents the smallest possible value of <see cref="T:System.UInt16" />.</span></span> <span data-ttu-id="172b8-177">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="172b8-177">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-178">此常量的值为 0。</span><span class="sxs-lookup"><span data-stu-id="172b8-178">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="172b8-179">下面的示例使用<xref:System.UInt16.MinValue>和<xref:System.UInt16.MaxValue>属性，以确保<xref:System.Int32>值位于范围内<xref:System.UInt16>类型，然后再将其转换为<xref:System.UInt16>值。</span><span class="sxs-lookup"><span data-stu-id="172b8-179">The following example uses the <xref:System.UInt16.MinValue> and <xref:System.UInt16.MaxValue> properties to ensure that an <xref:System.Int32> value is in the range of the <xref:System.UInt16> type before converting it to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="172b8-180">这样可以防止引发转换操作<xref:System.OverflowException>整数值是否不在范围内<xref:System.UInt16>类型。</span><span class="sxs-lookup"><span data-stu-id="172b8-180">This prevents the conversion operation from throwing an <xref:System.OverflowException> if the integer value is not in the range of the <xref:System.UInt16> type.</span></span>  
  
 [!code-csharp[System.UInt16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.UInt16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt16.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="172b8-181">将数字的字符串表示形式转换为它的等效 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-181">Converts the string representation of a number to its 16-bit unsigned integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.UInt16.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="172b8-182">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="172b8-182">A string that represents the number to convert.</span></span></param>
        <summary><span data-ttu-id="172b8-183">将数字的字符串表示形式转换为它的等效 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-183">Converts the string representation of a number to its 16-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="172b8-184">与 <paramref name="s" /> 中包含的数字等效的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-184">A 16-bit unsigned integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-185">`s`参数应为以下形式的数字的字符串表示。</span><span class="sxs-lookup"><span data-stu-id="172b8-185">The `s` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="172b8-186">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="172b8-186">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="172b8-187">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="172b8-187">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="172b8-188">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-188">The following table describes each element.</span></span>  
  
|<span data-ttu-id="172b8-189">元素</span><span class="sxs-lookup"><span data-stu-id="172b8-189">Element</span></span>|<span data-ttu-id="172b8-190">描述</span><span class="sxs-lookup"><span data-stu-id="172b8-190">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="172b8-191">*ws*</span><span class="sxs-lookup"><span data-stu-id="172b8-191">*ws*</span></span>|<span data-ttu-id="172b8-192">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="172b8-192">Optional white space.</span></span>|  
|<span data-ttu-id="172b8-193">*sign*</span><span class="sxs-lookup"><span data-stu-id="172b8-193">*sign*</span></span>|<span data-ttu-id="172b8-194">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="172b8-194">An optional sign.</span></span> <span data-ttu-id="172b8-195">有效的符号字符由<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="172b8-195">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="172b8-196">但是，可以仅使用零; 使用负号符号否则，该方法将引发<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="172b8-196">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="172b8-197">*digits*</span><span class="sxs-lookup"><span data-stu-id="172b8-197">*digits*</span></span>|<span data-ttu-id="172b8-198">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="172b8-198">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="172b8-199">忽略任何前导零。</span><span class="sxs-lookup"><span data-stu-id="172b8-199">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="172b8-200">指定的字符串`s`参数解释使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="172b8-200">The string specified by the `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="172b8-201">不能包含任何组分隔符或小数分隔符，并且它不能具有小数部分。</span><span class="sxs-lookup"><span data-stu-id="172b8-201">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="172b8-202">`s`通过使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-202">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="172b8-203">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="172b8-203">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="172b8-204">若要通过使用特定区域性的格式设置信息中分析字符串，使用<xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-204">To parse a string by using the formatting information of a specific culture, use the <xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="172b8-205">下面的示例调用<xref:System.UInt16.Parse%28System.String%29>方法将字符串数组中的每个元素转换为 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-205">The following example calls the <xref:System.UInt16.Parse%28System.String%29> method to convert each element in a string array to an unsigned 16-bit integer.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex5.cs#5)]
 [!code-vb[System.UInt16.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex5.vb#5)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="172b8-206"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-206"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="172b8-207"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="172b8-207"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="172b8-208"><paramref name="s" /> 表示小于 <see cref="F:System.UInt16.MinValue" /> 或大于 <see cref="F:System.UInt16.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-208"><paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="172b8-209">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="172b8-209">A string that represents the number to convert.</span></span> <span data-ttu-id="172b8-210">该字符串使用由 <c>style</c> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="172b8-210">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="172b8-211">枚举值的按位组合，这些枚举值指定 <c>s</c> 允许使用的格式。</span><span class="sxs-lookup"><span data-stu-id="172b8-211">A bitwise combination of the enumeration values that specify the permitted format of <c>s</c>.</span></span> <span data-ttu-id="172b8-212">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-212">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="172b8-213">将指定样式的数字的字符串表示形式转换为它的等效 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-213">Converts the string representation of a number in a specified style to its 16-bit unsigned integer equivalent.</span></span>  
  
 <span data-ttu-id="172b8-214">此方法不符合 CLS。</span><span class="sxs-lookup"><span data-stu-id="172b8-214">This method is not CLS-compliant.</span></span> <span data-ttu-id="172b8-215">符合 CLS 的替代方法是 <see cref="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-215">The CLS-compliant alternative is <see cref="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-216">与 <paramref name="s" /> 中指定的数字等效的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-216">A 16-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-217">`style`参数定义中允许的样式元素 （如空格、 正整数或负号符号、 组分隔符符号或小数点符号）`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-217">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="172b8-218">`style` 必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="172b8-218">`style` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="172b8-219">`style`参数将使得此方法重载有用`s`时数字系统 （十进制或十六进制） 由包含的字符串表示形式的十六进制值，`s`仅在运行时，已知时，或者当你想要禁止的空白区域或正负符号`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-219">The `style` parameter makes this method overload useful when `s` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `s` is known only at run time, or when you want to disallow white space or a sign symbol in `s`.</span></span>  
  
 <span data-ttu-id="172b8-220">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="172b8-220">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="172b8-221">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="172b8-221">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="172b8-222">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="172b8-222">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="172b8-223">如果`style`包括<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`参数可能包含下列元素：</span><span class="sxs-lookup"><span data-stu-id="172b8-223">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="172b8-224">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="172b8-224">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="172b8-225">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-225">The following table describes each element.</span></span>  
  
|<span data-ttu-id="172b8-226">元素</span><span class="sxs-lookup"><span data-stu-id="172b8-226">Element</span></span>|<span data-ttu-id="172b8-227">描述</span><span class="sxs-lookup"><span data-stu-id="172b8-227">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="172b8-228">*ws*</span><span class="sxs-lookup"><span data-stu-id="172b8-228">*ws*</span></span>|<span data-ttu-id="172b8-229">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="172b8-229">Optional white space.</span></span> <span data-ttu-id="172b8-230">空格可以出现在开始`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-230">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="172b8-231">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="172b8-231">A culture-specific currency symbol.</span></span> <span data-ttu-id="172b8-232">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="172b8-232">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="172b8-233">当前区域性的货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-233">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="172b8-234">*sign*</span><span class="sxs-lookup"><span data-stu-id="172b8-234">*sign*</span></span>|<span data-ttu-id="172b8-235">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="172b8-235">An optional sign.</span></span> <span data-ttu-id="172b8-236">符号可以出现在开始`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-236">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="172b8-237">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-237">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="172b8-238">但是，可以仅使用零; 使用负号符号否则，该方法将引发<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="172b8-238">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="172b8-239">*digits*</span><span class="sxs-lookup"><span data-stu-id="172b8-239">*digits*</span></span><br /><br /> <span data-ttu-id="172b8-240">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="172b8-240">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="172b8-241">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="172b8-241">*exponential_digits*</span></span>|<span data-ttu-id="172b8-242">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-242">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="172b8-243">有关*fractional_digits*，但只数字 0 有效。</span><span class="sxs-lookup"><span data-stu-id="172b8-243">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="172b8-244">*，*</span><span class="sxs-lookup"><span data-stu-id="172b8-244">*,*</span></span>|<span data-ttu-id="172b8-245">区域性特定的组分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="172b8-245">A culture-specific group separator symbol.</span></span> <span data-ttu-id="172b8-246">当前区域性的组分隔符可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-246">The current culture's group separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="172b8-247">*.*</span><span class="sxs-lookup"><span data-stu-id="172b8-247">*.*</span></span>|<span data-ttu-id="172b8-248">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="172b8-248">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="172b8-249">当前区域性的小数点符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-249">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="172b8-250">仅数字 0 可以显示为分析操作才能成功; 一个小数数字如果*fractional_digits*包括任何其他数字<xref:System.FormatException>引发。</span><span class="sxs-lookup"><span data-stu-id="172b8-250">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="172b8-251">E</span><span class="sxs-lookup"><span data-stu-id="172b8-251">E</span></span>|<span data-ttu-id="172b8-252">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="172b8-252">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="172b8-253">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-253">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="172b8-254">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="172b8-254">*hexdigits*</span></span>|<span data-ttu-id="172b8-255">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="172b8-255">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="172b8-256">仅为数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>样式) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="172b8-256">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="172b8-257">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能会存在，但不是需要为存在于输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-257">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="172b8-258">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-258">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="172b8-259">`NumberStyles` 值</span><span class="sxs-lookup"><span data-stu-id="172b8-259">`NumberStyles` value</span></span>|<span data-ttu-id="172b8-260">元素允许在`s`除数字之外</span><span class="sxs-lookup"><span data-stu-id="172b8-260">Elements permitted in `s` in addition to digits</span></span>|  
|--------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="172b8-261">*数字*仅元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-261">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="172b8-262">小数点 （.） 和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-262">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="172b8-263">"E"或"E"字符，它指示指数记数法，连同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="172b8-263">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="172b8-264">*Ws*起始处的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-264">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="172b8-265">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-265">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="172b8-266">*登录*起始处的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-266">The *sign* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="172b8-267">*登录*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-267">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="172b8-268">*登录*在括号内包含的数字值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-268">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="172b8-269">组分隔符 （，） 元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-269">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="172b8-270">货币 （$） 元素中。</span><span class="sxs-lookup"><span data-stu-id="172b8-270">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="172b8-271">所有元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-271">All elements.</span></span> <span data-ttu-id="172b8-272">但是，`s`不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-272">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="172b8-273">*Ws*开头或末尾的元素`s`，*登录*开头的`s`，和小数点 (*。*) 符号。</span><span class="sxs-lookup"><span data-stu-id="172b8-273">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="172b8-274">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="172b8-274">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="172b8-275">`ws`， `sign`，组分隔符 (*，*)，和小数点 (*。*) 元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-275">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="172b8-276">所有元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-276">All elements.</span></span> <span data-ttu-id="172b8-277">但是，`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-277">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="172b8-278">与其他不同<xref:System.Globalization.NumberStyles>值，该值允许，但不是需要，特定样式中的元素是否存在`s`、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>样式值意味着中的单个数字字符`s`总是被解释为十六进制字符。</span><span class="sxs-lookup"><span data-stu-id="172b8-278">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `s`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `s` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="172b8-279">有效的十六进制字符为 0-9、 A-F 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="172b8-279">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="172b8-280">前缀，例如"0x"，不支持，并导致分析操作失败。</span><span class="sxs-lookup"><span data-stu-id="172b8-280">A prefix, such as "0x", is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="172b8-281">其他标志只有可以与组合`style`参数<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="172b8-281">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="172b8-282">(<xref:System.Globalization.NumberStyles>枚举包含复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="172b8-282">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="172b8-283">如果`s`是的字符串表示的十六进制数，则无法将前面添加的任何修饰符 (如`0x`或`&h`) 用于将其识别为十六进制数。</span><span class="sxs-lookup"><span data-stu-id="172b8-283">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="172b8-284">这将导致转换失败。</span><span class="sxs-lookup"><span data-stu-id="172b8-284">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="172b8-285">`s`通过使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-285">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="172b8-286">若要指定分析操作使用其格式设置信息的区域性，调用<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>重载。</span><span class="sxs-lookup"><span data-stu-id="172b8-286">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="172b8-287">下面的示例尝试分析字符串数组中的每个元素，方法是使用大量的<xref:System.Globalization.NumberStyles>值。</span><span class="sxs-lookup"><span data-stu-id="172b8-287">The following example tries to parse each element in a string array by using a number of <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex2.cs#6)]
 [!code-vb[System.UInt16.Parse#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="172b8-288"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-288"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="172b8-289"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="172b8-289"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="172b8-290">或</span><span class="sxs-lookup"><span data-stu-id="172b8-290">-or-</span></span>  
  
 <span data-ttu-id="172b8-291"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="172b8-291"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="172b8-292"><paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-292"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="172b8-293"><paramref name="s" /> 表示小于 <see cref="F:System.UInt16.MinValue" /> 或大于 <see cref="F:System.UInt16.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-293"><paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
 <span data-ttu-id="172b8-294">或</span><span class="sxs-lookup"><span data-stu-id="172b8-294">-or-</span></span>  
  
 <span data-ttu-id="172b8-295"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="172b8-295"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="172b8-296">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="172b8-296">A string that represents the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="172b8-297">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="172b8-297">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="172b8-298">将指定区域性特定格式的数字的字符串表示形式转换为它的等效 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-298">Converts the string representation of a number in a specified culture-specific format to its 16-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="172b8-299">与 <paramref name="s" /> 中指定的数字等效的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-299">A 16-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-300">`s`参数包含一个数字的窗体：</span><span class="sxs-lookup"><span data-stu-id="172b8-300">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="172b8-301">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="172b8-301">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="172b8-302">方括号 （[和]） 中是可选的项。</span><span class="sxs-lookup"><span data-stu-id="172b8-302">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="172b8-303">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-303">The following table describes each element.</span></span>  
  
|<span data-ttu-id="172b8-304">元素</span><span class="sxs-lookup"><span data-stu-id="172b8-304">Element</span></span>|<span data-ttu-id="172b8-305">描述</span><span class="sxs-lookup"><span data-stu-id="172b8-305">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="172b8-306">ws</span><span class="sxs-lookup"><span data-stu-id="172b8-306">ws</span></span>|<span data-ttu-id="172b8-307">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="172b8-307">Optional white space.</span></span>|  
|<span data-ttu-id="172b8-308">Sign</span><span class="sxs-lookup"><span data-stu-id="172b8-308">sign</span></span>|<span data-ttu-id="172b8-309">一个可选符号后或负号如果`s`表示零的值。</span><span class="sxs-lookup"><span data-stu-id="172b8-309">An optional sign, or a negative sign if `s` represents the value zero.</span></span>|  
|<span data-ttu-id="172b8-310">数字</span><span class="sxs-lookup"><span data-stu-id="172b8-310">digits</span></span>|<span data-ttu-id="172b8-311">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="172b8-311">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="172b8-312">使用解释 s 参数<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="172b8-312">The s parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="172b8-313">除了字节值的十进制数字，允许仅前导空格和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="172b8-313">In addition to the byte value's decimal digits, only leading and trailing spaces along with a leading sign is allowed.</span></span> <span data-ttu-id="172b8-314">(如果存在，负号，则`s`必须表示的值为零或该方法将引发<xref:System.OverflowException>。)若要显式定义的样式元素以及可出现在区域性特定格式设置信息`s`，使用<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-314">(If the negative sign is present, `s` must represent a value of zero or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="172b8-315">`provider`参数是<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>对象，提供区域性特定信息的格式`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-315">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="172b8-316">有三种方法使用`provider`参数来提供到分析操作的自定义格式设置信息：</span><span class="sxs-lookup"><span data-stu-id="172b8-316">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="172b8-317">你可以将传递的实际<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-317">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="172b8-318">(其实现<xref:System.IFormatProvider.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="172b8-318">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="172b8-319">你可以将传递<xref:System.Globalization.CultureInfo>指定的格式设置将使用的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-319">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="172b8-320">其<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性提供格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="172b8-320">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="172b8-321">你可以将自定义传递<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-321">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="172b8-322">其<xref:System.IFormatProvider.GetFormat%2A>方法必须实例化并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-322">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="172b8-323">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="172b8-323">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="172b8-324">下面的示例实例化使用两个加号 （+ +） 其正号作为一个自定义区域性。</span><span class="sxs-lookup"><span data-stu-id="172b8-324">The following example instantiates a custom culture that uses two plus signs (++) as its positive sign.</span></span> <span data-ttu-id="172b8-325">然后，它调用<xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29>方法，以便通过分析的字符串数组<xref:System.Globalization.CultureInfo>表示此自定义区域性和固定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-325">It then calls the <xref:System.UInt16.Parse%28System.String%2CSystem.IFormatProvider%29> method to parse an array of strings by using <xref:System.Globalization.CultureInfo> objects that represent both this custom culture and the invariant culture.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex3.cs#3)]
 [!code-vb[System.UInt16.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex3.vb#3)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="172b8-326"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-326"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="172b8-327"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="172b8-327"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="172b8-328"><paramref name="s" /> 表示小于 <see cref="F:System.UInt16.MinValue" /> 或大于 <see cref="F:System.UInt16.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-328"><paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As UShort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ushort Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="172b8-329">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="172b8-329">A string that represents the number to convert.</span></span> <span data-ttu-id="172b8-330">该字符串使用由 <c>style</c> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="172b8-330">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="172b8-331">枚举值的按位组合，用于指示可出现在 <c>s</c> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-331">A bitwise combination of enumeration values that indicate the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="172b8-332">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-332">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="172b8-333">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="172b8-333">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="172b8-334">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-334">Converts the string representation of a number in a specified style and culture-specific format to its 16-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="172b8-335">与 <paramref name="s" /> 中指定的数字等效的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-335">A 16-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-336">`style`参数定义中允许的样式元素 （如空白或正整数或负号符号）`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-336">The `style` parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="172b8-337">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="172b8-337">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="172b8-338">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="172b8-338">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="172b8-339">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="172b8-339">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="172b8-340">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="172b8-340">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="172b8-341">如果`style`包括<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="172b8-341">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="172b8-342">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="172b8-342">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="172b8-343">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-343">The following table describes each element.</span></span>  
  
|<span data-ttu-id="172b8-344">元素</span><span class="sxs-lookup"><span data-stu-id="172b8-344">Element</span></span>|<span data-ttu-id="172b8-345">描述</span><span class="sxs-lookup"><span data-stu-id="172b8-345">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="172b8-346">*ws*</span><span class="sxs-lookup"><span data-stu-id="172b8-346">*ws*</span></span>|<span data-ttu-id="172b8-347">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="172b8-347">Optional white space.</span></span> <span data-ttu-id="172b8-348">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-348">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="172b8-349">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="172b8-349">A culture-specific currency symbol.</span></span> <span data-ttu-id="172b8-350">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>属性<xref:System.Globalization.NumberFormatInfo>返回的对象<xref:System.IFormatProvider.GetFormat%2A>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-350">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="172b8-351">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-351">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="172b8-352">*sign*</span><span class="sxs-lookup"><span data-stu-id="172b8-352">*sign*</span></span>|<span data-ttu-id="172b8-353">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="172b8-353">An optional sign.</span></span> <span data-ttu-id="172b8-354">(该方法将引发<xref:System.OverflowException>如果`s`包括一个负号和表示的非零数字。)符号可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现的末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-354">(The method throws an <xref:System.OverflowException> if `s` includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="172b8-355">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-355">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="172b8-356">*digits*</span><span class="sxs-lookup"><span data-stu-id="172b8-356">*digits*</span></span>|<span data-ttu-id="172b8-357">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-357">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="172b8-358">*.*</span><span class="sxs-lookup"><span data-stu-id="172b8-358">*.*</span></span>|<span data-ttu-id="172b8-359">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="172b8-359">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="172b8-360">当前区域性的小数点符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-360">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="172b8-361">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="172b8-361">*fractional_digits*</span></span>|<span data-ttu-id="172b8-362">一个或多个出现的数字 0-9 如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志或如果它不为 0 的数字的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="172b8-362">One or more occurrences of the digit 0-9 if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, or one or more occurrences of the digit 0 if it does not.</span></span> <span data-ttu-id="172b8-363">小数位数可以出现在`s`才`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-363">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="172b8-364">E</span><span class="sxs-lookup"><span data-stu-id="172b8-364">E</span></span>|<span data-ttu-id="172b8-365">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="172b8-365">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="172b8-366">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-366">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="172b8-367">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="172b8-367">*exponential_digits*</span></span>|<span data-ttu-id="172b8-368">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-368">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="172b8-369">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-369">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="172b8-370">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="172b8-370">*hexdigits*</span></span>|<span data-ttu-id="172b8-371">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="172b8-371">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="172b8-372">仅为十进制数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>样式) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="172b8-372">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="172b8-373">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能会存在，但不是要求必须存在，此输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-373">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="172b8-374">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-374">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="172b8-375">非复合`NumberStyles`值</span><span class="sxs-lookup"><span data-stu-id="172b8-375">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="172b8-376">元素允许在`s`除数字之外</span><span class="sxs-lookup"><span data-stu-id="172b8-376">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="172b8-377">仅为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-377">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="172b8-378">小数点 (*。*) 和*fractional_digits*元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-378">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="172b8-379">但是，如果样式不包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志， *fractional_digits*必须包含仅一个或多个数字 0; 否则为<xref:System.OverflowException>引发。</span><span class="sxs-lookup"><span data-stu-id="172b8-379">However, if style does not include the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, *fractional_digits* must consist of only one or more 0 digits; otherwise, an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="172b8-380">"E"或"E"字符，它指示指数记数法，连同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="172b8-380">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="172b8-381">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-381">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="172b8-382">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-382">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="172b8-383">之前登录*数字*。</span><span class="sxs-lookup"><span data-stu-id="172b8-383">A sign before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="172b8-384">登录后的*数字*。</span><span class="sxs-lookup"><span data-stu-id="172b8-384">A sign after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="172b8-385">之前和之后的括号*数字*以指示负值。</span><span class="sxs-lookup"><span data-stu-id="172b8-385">Parentheses before and after *digits* to indicate a negative value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="172b8-386">组分隔符 (*，*) 元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-386">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="172b8-387">货币 (*$*) 元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-387">The currency (*$*) element.</span></span>|  
  
 <span data-ttu-id="172b8-388">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用标志，`s`必须是十六进制值。</span><span class="sxs-lookup"><span data-stu-id="172b8-388">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="172b8-389">有效的十六进制数字为 0 到 9、 a 到 f 和 A 到 f。前缀，例如"0x"，不支持，并导致分析操作失败。</span><span class="sxs-lookup"><span data-stu-id="172b8-389">Valid hexadecimal digits are 0 through 9, a through f, and A through F. A prefix, such as "0x", is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="172b8-390">其他标志只有可以与组合<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>是<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="172b8-390">The only other flags that can be combined with <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="172b8-391">(<xref:System.Globalization.NumberStyles>枚举包含复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="172b8-391">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="172b8-392">如果`s`参数的值的字符串表示形式的十六进制数，则无法前面添加的任何修饰符 (如`0x`或`&h`) 用于将其识别为十六进制数。</span><span class="sxs-lookup"><span data-stu-id="172b8-392">If the `s` parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="172b8-393">这将导致分析操作引发异常。</span><span class="sxs-lookup"><span data-stu-id="172b8-393">This causes the parse operation to throw an exception.</span></span>  
  
 <span data-ttu-id="172b8-394">`provider`参数是<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>对象，提供区域性特定信息的格式`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-394">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="172b8-395">有三种方法使用`provider`参数来提供到分析操作的自定义格式设置信息：</span><span class="sxs-lookup"><span data-stu-id="172b8-395">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="172b8-396">你可以将传递的实际<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-396">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="172b8-397">(其实现<xref:System.IFormatProvider.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="172b8-397">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="172b8-398">你可以将传递<xref:System.Globalization.CultureInfo>指定的格式设置将使用的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-398">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="172b8-399">其<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性提供格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="172b8-399">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="172b8-400">你可以将自定义传递<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-400">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="172b8-401">其<xref:System.IFormatProvider.GetFormat%2A>方法必须实例化并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-401">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="172b8-402">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>对象使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="172b8-402">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="172b8-403">下面的示例使用<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法将各种字符串表示形式之间的数字转换为 16 位无符号的整数值。</span><span class="sxs-lookup"><span data-stu-id="172b8-403">The following example uses the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to convert various string representations of numbers to 16-bit unsigned integer values.</span></span>  
  
 [!code-csharp[System.UInt16.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.parse/cs/parseex4.cs#4)]
 [!code-vb[System.UInt16.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.parse/vb/parseex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="172b8-404"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-404"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="172b8-405"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="172b8-405"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="172b8-406">或</span><span class="sxs-lookup"><span data-stu-id="172b8-406">-or-</span></span>  
  
 <span data-ttu-id="172b8-407"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="172b8-407"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="172b8-408"><paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-408"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="172b8-409"><paramref name="s" /> 表示一个小于 <see cref="F:System.UInt16.MinValue" /> 或大于 <see cref="F:System.UInt16.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-409"><paramref name="s" /> represents a number that is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span>  
  
 <span data-ttu-id="172b8-410">或</span><span class="sxs-lookup"><span data-stu-id="172b8-410">-or-</span></span>  
  
 <span data-ttu-id="172b8-411"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="172b8-411"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.UInt16.ToString" />
        <altmember cref="Overload:System.UInt16.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-412">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-412">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="172b8-413">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-413">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="172b8-414">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-414"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-415">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-415">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="172b8-416">它只能在 <xref:System.UInt16> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-416">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="172b8-417">建议的替代项是调用<xref:System.Convert.ToBoolean%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-417">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-418">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-418">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="172b8-419">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-419">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-420">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-420">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-421">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-421">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="172b8-422">它只能在 <xref:System.UInt16> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-422">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="172b8-423">建议的替代项是调用<xref:System.Convert.ToByte%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-423">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-424">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-424">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="172b8-425">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-425">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-426">当前实例的值，已转换为 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-426">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-427">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-427">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="172b8-428">它只能在 <xref:System.UInt16> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-428">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="172b8-429">建议的替代项是调用<xref:System.Convert.ToChar%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-429">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-430">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-430">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="172b8-431">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="172b8-431">This conversion is not supported.</span></span> <span data-ttu-id="172b8-432">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-432">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-433">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="172b8-433">This conversion is not supported.</span></span> <span data-ttu-id="172b8-434">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="172b8-434">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="172b8-435">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="172b8-435">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-436">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-436">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="172b8-437">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-437">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-438">转换为 <see cref="T:System.Decimal" /> 的该实例的当前值。</span><span class="sxs-lookup"><span data-stu-id="172b8-438">The current value of this instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-439">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-439">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="172b8-440">它只能在 <xref:System.UInt16> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-440">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="172b8-441">建议的替代项是调用<xref:System.Convert.ToDecimal%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-441">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-442">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-442">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="172b8-443">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-443">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-444">转换为 <see cref="T:System.Double" /> 的该实例的当前值。</span><span class="sxs-lookup"><span data-stu-id="172b8-444">The current value of this instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-445">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-445">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="172b8-446">它只能在 <xref:System.UInt16> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-446">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="172b8-447">建议的替代项是调用<xref:System.Convert.ToDouble%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-447">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-448">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-448">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="172b8-449">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-449">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-450">转换为 <see cref="T:System.Int16" /> 的该实例的当前值。</span><span class="sxs-lookup"><span data-stu-id="172b8-450">The current value of this instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-451">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-451">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="172b8-452">它只能在 <xref:System.UInt16> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-452">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="172b8-453">建议的替代项是调用<xref:System.Convert.ToInt16%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-453">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-454">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-454">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="172b8-455">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-455">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-456">转换为 <see cref="T:System.Int32" /> 的该实例的值。</span><span class="sxs-lookup"><span data-stu-id="172b8-456">The value of this instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-457">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-457">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="172b8-458">它只能在 <xref:System.UInt16> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-458">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="172b8-459">建议的替代项是调用<xref:System.Convert.ToInt32%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-459">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-460">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-460">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="172b8-461">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-461">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-462">转换为 <see cref="T:System.Int64" /> 的该实例的当前值。</span><span class="sxs-lookup"><span data-stu-id="172b8-462">The current value of this instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-463">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-463">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="172b8-464">它只能在 <xref:System.UInt16> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-464">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="172b8-465">建议的替代项是调用<xref:System.Convert.ToInt64%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-465">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-466">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-466">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="172b8-467">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-467">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-468">转换为 <see cref="T:System.SByte" /> 的该实例的当前值。</span><span class="sxs-lookup"><span data-stu-id="172b8-468">The current value of this instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-469">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-469">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="172b8-470">它只能在 <xref:System.UInt16> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-470">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="172b8-471">建议的替代项是调用<xref:System.Convert.ToSByte%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-471">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-472">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-472">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="172b8-473">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-473">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-474">转换为 <see cref="T:System.Single" /> 的该实例的当前值。</span><span class="sxs-lookup"><span data-stu-id="172b8-474">The current value pf this instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-475">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-475">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="172b8-476">它只能在 <xref:System.UInt16> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-476">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="172b8-477">建议的替代项是调用<xref:System.Convert.ToSingle%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-477">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="172b8-478">此 <see cref="T:System.UInt16" /> 值要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="172b8-478">The type to which to convert this <see cref="T:System.UInt16" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="172b8-479">一个 <see cref="T:System.IFormatProvider" /> 实现，提供有关返回值格式的信息。</span><span class="sxs-lookup"><span data-stu-id="172b8-479">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="172b8-480">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-480">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-481">转换为 <paramref name="type" /> 的该实例的当前值。</span><span class="sxs-lookup"><span data-stu-id="172b8-481">The current value of this instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-482">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-482">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="172b8-483">它只能在 <xref:System.UInt16> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-483">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="172b8-484">建议的替代项是调用`static`(`Shared`在 Visual Basic 中)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-484">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-485">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-485">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="172b8-486">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-486">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-487">该实例的当前值（未更改）。</span><span class="sxs-lookup"><span data-stu-id="172b8-487">The current value of this instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-488">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-488">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="172b8-489">它只能在 <xref:System.UInt16> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-489">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-490">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-490">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="172b8-491">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-491">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-492">转换为 <see cref="T:System.UInt32" /> 的该实例的当前值。</span><span class="sxs-lookup"><span data-stu-id="172b8-492">The current value of this instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-493">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-493">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="172b8-494">它只能在 <xref:System.UInt16> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-494">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="172b8-495">建议的替代项是调用<xref:System.Convert.ToUInt32%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-495">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-496">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-496">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="172b8-497">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-497">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="172b8-498">转换为 <see cref="T:System.UInt64" /> 的该实例的当前值。</span><span class="sxs-lookup"><span data-stu-id="172b8-498">The current value of this instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-499">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-499">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="172b8-500">它只能在 <xref:System.UInt16> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-500">It can be used only when the <xref:System.UInt16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="172b8-501">建议的替代项是调用<xref:System.Convert.ToUInt64%28System.UInt16%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-501">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.UInt16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="172b8-502">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="172b8-502">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="172b8-503">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="172b8-503">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="172b8-504">此实例的值的字符串表示形式，由范围从 0 到 9 的数字序列组成，不包含符号或前导零。</span><span class="sxs-lookup"><span data-stu-id="172b8-504">The string representation of the value of this instance, which consists of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-505"><xref:System.UInt16.ToString>方法格式<xref:System.UInt16>值在默认的 （"G"或常规） 中使用的格式<xref:System.Globalization.NumberFormatInfo>当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-505">The <xref:System.UInt16.ToString> method formats a <xref:System.UInt16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="172b8-506">如果你想要指定其他文件格式或区域性，使用的其他重载<xref:System.UInt16.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="172b8-506">If you want to specify a different format or culture, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="172b8-507">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="172b8-507">To use format</span></span>|<span data-ttu-id="172b8-508">区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-508">For culture</span></span>|<span data-ttu-id="172b8-509">使用的重载</span><span class="sxs-lookup"><span data-stu-id="172b8-509">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="172b8-510">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="172b8-510">Default ("G") format</span></span>|<span data-ttu-id="172b8-511">特定区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-511">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="172b8-512">特定的格式</span><span class="sxs-lookup"><span data-stu-id="172b8-512">A specific format</span></span>|<span data-ttu-id="172b8-513">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-513">Default (current) culture</span></span>|<xref:System.UInt16.ToString%28System.String%29>|  
|<span data-ttu-id="172b8-514">特定的格式</span><span class="sxs-lookup"><span data-stu-id="172b8-514">A specific format</span></span>|<span data-ttu-id="172b8-515">特定区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-515">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
   
  
## Examples  
 <span data-ttu-id="172b8-516">下面的示例显示<xref:System.UInt16>通过使用默认值<xref:System.UInt16.ToString>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-516">The following example displays a <xref:System.UInt16> value by using the default <xref:System.UInt16.ToString> method.</span></span> <span data-ttu-id="172b8-517">它还显示的字符串表示形式<xref:System.UInt16>通过使用某些标准格式说明符得到的值。</span><span class="sxs-lookup"><span data-stu-id="172b8-517">It also displays the string representations of the <xref:System.UInt16> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="172b8-518">示例使用 EN-US 区域性的格式设置约定来显示。</span><span class="sxs-lookup"><span data-stu-id="172b8-518">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.UInt16.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="172b8-519">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-519">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="172b8-520">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="172b8-520">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="172b8-521">此实例的值的字符串表示形式，由范围从 0 到 9 的数字序列组成，不包含符号或前导零。</span><span class="sxs-lookup"><span data-stu-id="172b8-521">The string representation of the value of this instance, which consists of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-522"><xref:System.UInt16.ToString%28System.IFormatProvider%29>方法格式<xref:System.UInt16>值在默认的 （"G"或常规） 中使用的格式<xref:System.Globalization.NumberFormatInfo>指定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-522">The <xref:System.UInt16.ToString%28System.IFormatProvider%29> method formats a <xref:System.UInt16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="172b8-523">如果你想要指定不同的格式或当前区域性，使用的其他重载<xref:System.UInt16.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="172b8-523">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="172b8-524">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="172b8-524">To use format</span></span>|<span data-ttu-id="172b8-525">区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-525">For culture</span></span>|<span data-ttu-id="172b8-526">使用的重载</span><span class="sxs-lookup"><span data-stu-id="172b8-526">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="172b8-527">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="172b8-527">Default ("G") format</span></span>|<span data-ttu-id="172b8-528">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-528">Default (current) culture</span></span>|<xref:System.UInt16.ToString>|  
|<span data-ttu-id="172b8-529">特定的格式</span><span class="sxs-lookup"><span data-stu-id="172b8-529">A specific format</span></span>|<span data-ttu-id="172b8-530">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-530">Default (current) culture</span></span>|<xref:System.UInt16.ToString%28System.String%29>|  
|<span data-ttu-id="172b8-531">特定的格式</span><span class="sxs-lookup"><span data-stu-id="172b8-531">A specific format</span></span>|<span data-ttu-id="172b8-532">特定区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-532">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="172b8-533">`provider`参数是<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-533">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="172b8-534">其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供区域性特定格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-534">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="172b8-535">但是，没有一个属性的<xref:System.Globalization.NumberFormatInfo>使用通用数值格式说明符 ("G") 格式设置时使用。</span><span class="sxs-lookup"><span data-stu-id="172b8-535">However, none of the properties of the <xref:System.Globalization.NumberFormatInfo> are used when formatting with the general numeric format specifier ("G").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="172b8-536">下面的示例通过使用多个格式提供程序，其中包括一个用于固定区域性设置一个 16 位有符号的整数值。</span><span class="sxs-lookup"><span data-stu-id="172b8-536">The following example formats a 16-bit signed integer value by using several format providers, including one for the invariant culture.</span></span> <span data-ttu-id="172b8-537">该示例的输出阐释带格式的字符串返回的<xref:System.UInt16.ToString%28System.IFormatProvider%29>方法无论是相同的格式提供程序。</span><span class="sxs-lookup"><span data-stu-id="172b8-537">The output from the example illustrates that the formatted string returned by the <xref:System.UInt16.ToString%28System.IFormatProvider%29> method is the same regardless of the format provider.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring2.cs#2)]
 [!code-vb[System.UInt16.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="172b8-538">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="172b8-538">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="172b8-539">使用指定的格式将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="172b8-539">Converts the numeric value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="172b8-540">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="172b8-540">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-541"><xref:System.UInt16.ToString%28System.String%29>方法格式<xref:System.UInt16>中通过使用指定的格式值<xref:System.Globalization.NumberFormatInfo>对象，表示当前区域性的约定。</span><span class="sxs-lookup"><span data-stu-id="172b8-541">The <xref:System.UInt16.ToString%28System.String%29> method formats a <xref:System.UInt16> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="172b8-542">如果你想要使用默认值 （"G"或常规） 格式或指定不同的区域性，请使用其他重载的<xref:System.UInt16.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="172b8-542">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="172b8-543">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="172b8-543">To use format</span></span>|<span data-ttu-id="172b8-544">区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-544">For culture</span></span>|<span data-ttu-id="172b8-545">使用的重载</span><span class="sxs-lookup"><span data-stu-id="172b8-545">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="172b8-546">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="172b8-546">Default ("G") format</span></span>|<span data-ttu-id="172b8-547">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-547">Default (current) culture</span></span>|<xref:System.UInt16.ToString>|  
|<span data-ttu-id="172b8-548">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="172b8-548">Default ("G") format</span></span>|<span data-ttu-id="172b8-549">特定区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-549">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="172b8-550">特定的格式</span><span class="sxs-lookup"><span data-stu-id="172b8-550">A specific format</span></span>|<span data-ttu-id="172b8-551">特定区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-551">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="172b8-552">`format`参数可以是任何有效[标准数字格式说明符](~/docs/standard/base-types/standard-numeric-format-strings.md)，或的任意组合[自定义数字格式说明符](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="172b8-552">The `format` parameter can be any valid [standard numeric format specifier](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format specifiers](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="172b8-553">如果`format`等同于<xref:System.String.Empty?displayProperty=nameWithType>或`null`，当前的返回值<xref:System.UInt16>对象使用常规格式说明符 ("G") 进行格式化。</span><span class="sxs-lookup"><span data-stu-id="172b8-553">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt16> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="172b8-554">如果`format`是任何其他值，该方法将引发<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="172b8-554">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="172b8-555">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="172b8-555">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="172b8-556">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="172b8-556">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="172b8-557">有关.NET Framework 中的格式设置支持的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="172b8-557">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="172b8-558">返回字符串的格式由<xref:System.Globalization.NumberFormatInfo>为当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-558">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="172b8-559">具体取决于`format`参数，此对象控制如组分隔符符号和输出字符串中的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="172b8-559">Depending on the `format` parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string.</span></span> <span data-ttu-id="172b8-560">若要提供区域性而非当前区域性的格式设置信息，请调用<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>重载。</span><span class="sxs-lookup"><span data-stu-id="172b8-560">To provide formatting information for cultures other than the current culture, call the <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="172b8-561">下面的示例显示一个 16 位无符号的整数值，通过使用每个标准格式字符串和某些自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="172b8-561">The following example displays a 16-bit unsigned integer value by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring3.cs#3)]
 [!code-vb[System.UInt16.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="172b8-562"><paramref name="format" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="172b8-562">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="172b8-563">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="172b8-563">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="172b8-564">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-564">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="172b8-565">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="172b8-565">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="172b8-566">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="172b8-566">The string representation of the value of this instance, as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-567"><xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>方法格式<xref:System.UInt16>中通过使用指定的格式值<xref:System.Globalization.NumberFormatInfo>指定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-567">The <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.UInt16> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="172b8-568">如果你想要使用默认格式或区域性设置，使用的其他重载<xref:System.UInt16.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="172b8-568">If you want to use default format or culture settings, use the other overloads of the <xref:System.UInt16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="172b8-569">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="172b8-569">To use format</span></span>|<span data-ttu-id="172b8-570">区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-570">For culture</span></span>|<span data-ttu-id="172b8-571">使用的重载</span><span class="sxs-lookup"><span data-stu-id="172b8-571">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="172b8-572">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="172b8-572">Default ("G") format</span></span>|<span data-ttu-id="172b8-573">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-573">Default (current) culture</span></span>|<xref:System.UInt16.ToString>|  
|<span data-ttu-id="172b8-574">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="172b8-574">Default ("G") format</span></span>|<span data-ttu-id="172b8-575">特定区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-575">A specific culture</span></span>|<xref:System.UInt16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="172b8-576">特定的格式</span><span class="sxs-lookup"><span data-stu-id="172b8-576">A specific format</span></span>|<span data-ttu-id="172b8-577">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="172b8-577">Default (current) culture</span></span>|<xref:System.UInt16.ToString%28System.String%29>|  
  
 <span data-ttu-id="172b8-578">`format`参数可以是任何有效[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)，或的任意组合[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="172b8-578">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="172b8-579">如果`format`等同于<xref:System.String.Empty?displayProperty=nameWithType>或`null`，当前的返回值<xref:System.UInt16>对象使用常规格式说明符 ("G") 进行格式化。</span><span class="sxs-lookup"><span data-stu-id="172b8-579">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt16> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="172b8-580">如果`format`是任何其他值，该方法将引发<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="172b8-580">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="172b8-581">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="172b8-581">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="172b8-582">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="172b8-582">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="172b8-583">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="172b8-583">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="172b8-584">`provider`参数是<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-584">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="172b8-585">其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供此方法返回的字符串的格式的区域性特定信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-585">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="172b8-586">当<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>调用方法时，它调用`provider`参数的<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法并将其传递<xref:System.Type>对象，表示<xref:System.Globalization.NumberFormatInfo>类型。</span><span class="sxs-lookup"><span data-stu-id="172b8-586">When the <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="172b8-587"><xref:System.IFormatProvider.GetFormat%2A>方法然后返回<xref:System.Globalization.NumberFormatInfo>对象，提供信息的格式设置当前<xref:System.UInt16>值，如组分隔符符号或小数点符号。</span><span class="sxs-lookup"><span data-stu-id="172b8-587">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the current <xref:System.UInt16> value, such as the group separator symbol or the decimal point symbol.</span></span> <span data-ttu-id="172b8-588">有三种方法使用`provider`参数来提供到的格式设置信息<xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29>方法：</span><span class="sxs-lookup"><span data-stu-id="172b8-588">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.UInt16.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="172b8-589">你可以将传递<xref:System.Globalization.CultureInfo>表示的区域性的提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-589">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="172b8-590">其<xref:System.Globalization.CultureInfo.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供该区域性的数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-590">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="172b8-591">你可以将传递的实际<xref:System.Globalization.NumberFormatInfo>提供数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-591">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="172b8-592">(其实现<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="172b8-592">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="172b8-593">你可以传递的自定义对象，实现<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="172b8-593">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="172b8-594">其<xref:System.IFormatProvider.GetFormat%2A>方法实例化，并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-594">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="172b8-595">如果`provider`是`null`，返回字符串的格式设置将基于<xref:System.Globalization.NumberFormatInfo>当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-595">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="172b8-596">下面的示例显示一个 16 位无符号的整数值，通过使用标准数字格式说明符和大量的特定<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-596">The following example displays a 16-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <xref:System.Globalization.CultureInfo> objects.</span></span>  
  
 [!code-csharp[System.UInt16.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tostring/cs/tostring4.cs#4)]
 [!code-vb[System.UInt16.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tostring/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="172b8-597"><paramref name="format" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="172b8-597"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="172b8-598">将数字的字符串表示形式转换为它的等效 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-598">Converts the string representation of a number to its 16-bit unsigned integer equivalent.</span></span> <span data-ttu-id="172b8-599">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="172b8-599">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.UInt16.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.ReadOnlySpan{System.Char},System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.UInt16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.String,System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.UInt16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="172b8-600">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="172b8-600">A string that represents the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="172b8-601">当此方法返回时，如果转换成功，则包含与 <c>s</c> 中所含数字等效的 16 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="172b8-601">When this method returns, contains the 16-bit unsigned integer value that is equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="172b8-602">如果 <c>s</c> 参数为 <see langword="null" /> 或为 <see cref="F:System.String.Empty" />，或格式不正确，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="172b8-602">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in the correct format.</span></span> <span data-ttu-id="172b8-603">，或者表示小于 <see cref="F:System.UInt16.MinValue" /> 或大于 <see cref="F:System.UInt16.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-603">, or represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span> <span data-ttu-id="172b8-604">此参数未经初始化即进行传递；最初在 <c>result</c> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="172b8-604">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="172b8-605">尝试将数字的字符串表示形式转换为等效的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-605">Tries to convert the string representation of a number to its 16-bit unsigned integer equivalent.</span></span> <span data-ttu-id="172b8-606">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="172b8-606">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="172b8-607">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-607"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-608"><xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29>方法就像是<xref:System.UInt16.Parse%28System.String%29>方法，但它不会引发异常，如果转换失败。</span><span class="sxs-lookup"><span data-stu-id="172b8-608">The <xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29> method is like the <xref:System.UInt16.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="172b8-609">此方法无需使用异常处理来测试是否<xref:System.FormatException>如果`s`无效，无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="172b8-609">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="172b8-610">`s`参数应为以下形式的十进制数字的字符串表示：</span><span class="sxs-lookup"><span data-stu-id="172b8-610">The `s` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="172b8-611">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="172b8-611">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="172b8-612">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="172b8-612">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="172b8-613">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-613">The following table describes each element.</span></span>  
  
|<span data-ttu-id="172b8-614">元素</span><span class="sxs-lookup"><span data-stu-id="172b8-614">Element</span></span>|<span data-ttu-id="172b8-615">描述</span><span class="sxs-lookup"><span data-stu-id="172b8-615">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="172b8-616">*ws*</span><span class="sxs-lookup"><span data-stu-id="172b8-616">*ws*</span></span>|<span data-ttu-id="172b8-617">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="172b8-617">Optional white space.</span></span>|  
|<span data-ttu-id="172b8-618">*sign*</span><span class="sxs-lookup"><span data-stu-id="172b8-618">*sign*</span></span>|<span data-ttu-id="172b8-619">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="172b8-619">An optional sign.</span></span> <span data-ttu-id="172b8-620">有效的符号字符由<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="172b8-620">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="172b8-621">*digits*</span><span class="sxs-lookup"><span data-stu-id="172b8-621">*digits*</span></span>|<span data-ttu-id="172b8-622">范围从 0 到 9 的十进制数字的序列。</span><span class="sxs-lookup"><span data-stu-id="172b8-622">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="172b8-623">指定的字符串`s`参数不能包含任何组分隔符或小数分隔符，并且它不能具有小数部分。</span><span class="sxs-lookup"><span data-stu-id="172b8-623">The string specified by the `s` parameter cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="172b8-624">`s`参数解释使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="172b8-624">The `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="172b8-625">十进制数字，除了允许仅前导空格和尾随空格带有前导符号。</span><span class="sxs-lookup"><span data-stu-id="172b8-625">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="172b8-626">若要显式定义可出现在的区域性特定格式设置信息的样式元素`s`，调用<xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29>方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-626">To explicitly define the style elements with the culture-specific formatting information that can be present in `s`, call the <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> method.</span></span>  
  
 <span data-ttu-id="172b8-627">`s`通过使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-627">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current system culture.</span></span> <span data-ttu-id="172b8-628">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="172b8-628">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="172b8-629">此重载将解释中的所有位`s`为十进制数字的参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-629">This overload interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="172b8-630">若要分析的字符串表示形式的十六进制数，请调用<xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29>重载。</span><span class="sxs-lookup"><span data-stu-id="172b8-630">To parse the string representation of a hexadecimal number, call the <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="172b8-631">下面的示例调用<xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29>对于字符串数组中每个元素执行一次的方法。</span><span class="sxs-lookup"><span data-stu-id="172b8-631">The following example calls the <xref:System.UInt16.TryParse%28System.String%2CSystem.UInt16%40%29> method once for each element in a string array.</span></span>  
  
 [!code-csharp[System.UInt32.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.UInt32.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.TryParse(System.String,System.Int32@)" />
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <altmember cref="M:System.UInt16.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out ushort result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt16 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="172b8-632">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="172b8-632">A string that represents the number to convert.</span></span> <span data-ttu-id="172b8-633">该字符串使用由 <c>style</c> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="172b8-633">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="172b8-634">枚举值的按位组合，指示 <c>s</c> 允许使用的格式。</span><span class="sxs-lookup"><span data-stu-id="172b8-634">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span></span> <span data-ttu-id="172b8-635">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-635">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="172b8-636">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="172b8-636">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <param name="result"><span data-ttu-id="172b8-637">当此方法返回时，如果转换成功，则包含与 <c>s</c> 中所含数字等效的 16 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="172b8-637">When this method returns, contains the 16-bit unsigned integer value equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="172b8-638">如果 <c>s</c> 参数为 <see langword="null" /> 或为 <see cref="F:System.String.Empty" />、格式不符合 <c>style</c>，或表示的数小于 <see cref="F:System.UInt16.MinValue" /> 或大于 <see cref="F:System.UInt16.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="172b8-638">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, or represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span> <span data-ttu-id="172b8-639">此参数未经初始化即进行传递；最初在 <c>result</c> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="172b8-639">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="172b8-640">尝试将数字的指定样式和区域性特定格式的字符串表示形式转换为其等效的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="172b8-640">Tries to convert the string representation of a number in a specified style and culture-specific format to its 16-bit unsigned integer equivalent.</span></span> <span data-ttu-id="172b8-641">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="172b8-641">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="172b8-642">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="172b8-642"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="172b8-643"><xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29>方法就像是<xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法，但它不会引发异常，如果转换失败。</span><span class="sxs-lookup"><span data-stu-id="172b8-643">The <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> method is like the <xref:System.UInt16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="172b8-644">此方法无需使用异常处理来测试是否<xref:System.FormatException>如果`s`无效，无法成功分析...</span><span class="sxs-lookup"><span data-stu-id="172b8-644">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be parsed successfully..</span></span>  
  
 <span data-ttu-id="172b8-645">`style`参数定义中允许的样式元素 （如空白或正整数或负号）`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-645">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="172b8-646">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="172b8-646">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="172b8-647">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="172b8-647">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="172b8-648">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="172b8-648">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="172b8-649">方括号 （[和]） 中是可选的项。</span><span class="sxs-lookup"><span data-stu-id="172b8-649">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="172b8-650">或者，如果`style`参数包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier>、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="172b8-650">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="172b8-651">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="172b8-651">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="172b8-652">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-652">The following table describes each element.</span></span>  
  
 <span data-ttu-id="172b8-653">*ws*</span><span class="sxs-lookup"><span data-stu-id="172b8-653">*ws*</span></span>  
 <span data-ttu-id="172b8-654">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="172b8-654">Optional white space.</span></span> <span data-ttu-id="172b8-655">空格可以出现在开始`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，或在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-655">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>  
  
 *$*  
 <span data-ttu-id="172b8-656">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="172b8-656">A culture-specific currency symbol.</span></span> <span data-ttu-id="172b8-657">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>属性<xref:System.Globalization.NumberFormatInfo>返回对象<xref:System.IFormatProvider.GetFormat%2A>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="172b8-657">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="172b8-658">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-658">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="172b8-659">*sign*</span><span class="sxs-lookup"><span data-stu-id="172b8-659">*sign*</span></span>  
 <span data-ttu-id="172b8-660">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="172b8-660">An optional sign.</span></span> <span data-ttu-id="172b8-661">符号可以出现在开始`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-661">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="172b8-662">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-662">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="172b8-663">但是，如果负号存在，`s`只能表示零值，使分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="172b8-663">However, if the negative sign is present, `s` can only represent the value zero for the parse operation to succeed.</span></span>  
  
 <span data-ttu-id="172b8-664">*digits*</span><span class="sxs-lookup"><span data-stu-id="172b8-664">*digits*</span></span>  
 <span data-ttu-id="172b8-665">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-665">A sequence of digits from 0 through 9.</span></span>  
  
 <span data-ttu-id="172b8-666">*，*</span><span class="sxs-lookup"><span data-stu-id="172b8-666">*,*</span></span>  
 <span data-ttu-id="172b8-667">特定于区域性的组分隔符。</span><span class="sxs-lookup"><span data-stu-id="172b8-667">A culture-specific group separator.</span></span> <span data-ttu-id="172b8-668">指定的区域性的组分隔符`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-668">The group separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="172b8-669">*.*</span><span class="sxs-lookup"><span data-stu-id="172b8-669">*.*</span></span>  
 <span data-ttu-id="172b8-670">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="172b8-670">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="172b8-671">指定的区域性的小数点符号`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-671">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="172b8-672">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="172b8-672">*fractional_digits*</span></span>  
 <span data-ttu-id="172b8-673">数字 0 的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="172b8-673">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="172b8-674">小数位数可以出现在`s`才`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-674">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="172b8-675">E</span><span class="sxs-lookup"><span data-stu-id="172b8-675">E</span></span>  
 <span data-ttu-id="172b8-676">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="172b8-676">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="172b8-677">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-677">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="172b8-678">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="172b8-678">*exponential_digits*</span></span>  
 <span data-ttu-id="172b8-679">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-679">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="172b8-680">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="172b8-680">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="172b8-681">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="172b8-681">*hexdigits*</span></span>  
 <span data-ttu-id="172b8-682">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="172b8-682">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>  
  
 <span data-ttu-id="172b8-683">仅为十进制数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>标志) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="172b8-683">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="172b8-684">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能会存在，但不是要求必须存在，此输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-684">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="172b8-685">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-685">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="172b8-686">非复合`NumberStyles`值</span><span class="sxs-lookup"><span data-stu-id="172b8-686">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="172b8-687">除数字之外的值中允许的元素</span><span class="sxs-lookup"><span data-stu-id="172b8-687">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="172b8-688">仅为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-688">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="172b8-689">小数点 (*。*) 和*fractional_digits*元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-689">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="172b8-690">但是， *fractional_digits*仅一个或多个数字 0 或该方法将返回必须组成`false`。</span><span class="sxs-lookup"><span data-stu-id="172b8-690">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="172b8-691">"E"或"E"字符，它指示指数记数法，连同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="172b8-691">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="172b8-692">如果`s`表示的数字在指数记数法，它不能有非零、 小数组件。</span><span class="sxs-lookup"><span data-stu-id="172b8-692">If `s` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="172b8-693">*Ws*起始处的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-693">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="172b8-694">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-694">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="172b8-695">*登录*元素之前*数字*。</span><span class="sxs-lookup"><span data-stu-id="172b8-695">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="172b8-696">*登录*元素的后面*数字*。</span><span class="sxs-lookup"><span data-stu-id="172b8-696">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="172b8-697">*登录*在括号内包含零个数值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-697">The *sign* element in the form of parentheses enclosing a zero numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="172b8-698">组分隔符 (*，*) 元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-698">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="172b8-699">货币 (*$*) 元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-699">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="172b8-700">所有元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-700">All elements.</span></span> <span data-ttu-id="172b8-701">但是，`s`不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-701">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="172b8-702">*Ws*开头或末尾的元素`s`，*登录*开头的`s`，和小数点 (*。*) 符号。</span><span class="sxs-lookup"><span data-stu-id="172b8-702">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="172b8-703">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="172b8-703">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="172b8-704">*Ws*，*登录*，组分隔符 (*，*)，和小数点 (*。*) 元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-704">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="172b8-705">所有元素。</span><span class="sxs-lookup"><span data-stu-id="172b8-705">All elements.</span></span> <span data-ttu-id="172b8-706">但是，`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="172b8-706">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="172b8-707">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用标志，`s`必须是十六进制值。</span><span class="sxs-lookup"><span data-stu-id="172b8-707">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="172b8-708">有效的十六进制数字为 0 到 9、 a 到 f 和 A 到 f。一个前缀，例如"0x"不支持，并导致分析操作失败。</span><span class="sxs-lookup"><span data-stu-id="172b8-708">Valid hexadecimal digits are 0 through 9, a through f, and A through F. A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="172b8-709">仅其他标志可出现在`style`是<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="172b8-709">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="172b8-710">(<xref:System.Globalization.NumberStyles>枚举具有复合样式， <xref:System.Globalization.NumberStyles.HexNumber>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="172b8-710">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="172b8-711">如果`s`是的字符串表示的十六进制数，则无法将前面添加的任何修饰符 (如`0x`或`&h`) 用于将其识别为十六进制数。</span><span class="sxs-lookup"><span data-stu-id="172b8-711">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="172b8-712">这将导致转换失败。</span><span class="sxs-lookup"><span data-stu-id="172b8-712">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="172b8-713">`provider`参数是<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="172b8-713">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="172b8-714">其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>对象，提供区域性特定信息的格式`s`。</span><span class="sxs-lookup"><span data-stu-id="172b8-714">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="172b8-715">`provider`参数可以是以下任何一个：</span><span class="sxs-lookup"><span data-stu-id="172b8-715">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="172b8-716">A<xref:System.Globalization.CultureInfo>表示的区域性的提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-716">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="172b8-717">其<xref:System.Globalization.CultureInfo.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供该区域性的数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-717">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="172b8-718">A<xref:System.Globalization.NumberFormatInfo>提供数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-718">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="172b8-719">(其实现<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="172b8-719">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="172b8-720">实现一个自定义对象<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="172b8-720">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="172b8-721">其<xref:System.IFormatProvider.GetFormat%2A>方法实例化，并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="172b8-721">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="172b8-722">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>对象使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="172b8-722">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="172b8-723">下面的示例调用<xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29>与大量的不同的字符串的方法和<xref:System.Globalization.NumberStyles>值。</span><span class="sxs-lookup"><span data-stu-id="172b8-723">The following example calls the <xref:System.UInt16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt16%40%29> method with a number of different strings and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt16.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint16.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.UInt16.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint16.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int32.TryParse(System.String,System.Int32@)" />
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="172b8-724"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="172b8-724"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="172b8-725">或</span><span class="sxs-lookup"><span data-stu-id="172b8-725">-or-</span></span>  
  
 <span data-ttu-id="172b8-726"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="172b8-726"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.UInt16.Parse(System.String)" />
        <altmember cref="M:System.UInt16.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>