<Type Name="EntryPointNotFoundException" FullName="System.EntryPointNotFoundException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a06cde606e85e1cdc19126bb4c29455a8086c2a1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30728471" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EntryPointNotFoundException : TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit EntryPointNotFoundException extends System.TypeLoadException" />
  <TypeSignature Language="DocId" Value="T:System.EntryPointNotFoundException" />
  <TypeSignature Language="VB.NET" Value="Public Class EntryPointNotFoundException&#xA;Inherits TypeLoadException" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntryPointNotFoundException : TypeLoadException" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.TypeLoadException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ca8b9-101">因不存在项方法而导致加载类的尝试失败时引发的异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca8b9-101">The exception that is thrown when an attempt to load a class fails due to the absence of an entry method.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca8b9-102"><xref:System.EntryPointNotFoundException>公共语言运行时无法加载程序集，因为它不能确定程序集的入口点时将引发异常。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-102">An <xref:System.EntryPointNotFoundException> exception is thrown when the common language runtime is unable to load an assembly because it cannot identify the assembly's entry point.</span></span>  <span data-ttu-id="ca8b9-103">在以下情况下，可能引发此异常：</span><span class="sxs-lookup"><span data-stu-id="ca8b9-103">This exception can be thrown under the following conditions:</span></span>  
  
-   <span data-ttu-id="ca8b9-104">公共语言运行时找不到应用程序入口点 (通常`Main`方法) 中可执行程序集。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-104">The common language runtime is unable to locate an application entry point (typically a `Main` method) in an executable assembly.</span></span> <span data-ttu-id="ca8b9-105">应用程序入口点必须是全局或`static`具有任何参数或作为其唯一参数的字符串数组的方法。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-105">The application entry point must be a global or `static` method that has either no parameters or a string array as its only parameter.</span></span> <span data-ttu-id="ca8b9-106">入口点可以返回`void`，或者它可以返回<xref:System.Int32>或<xref:System.UInt32>退出代码。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-106">The entry point can return `void`, or it can return an <xref:System.Int32> or <xref:System.UInt32> exit code.</span></span> <span data-ttu-id="ca8b9-107">应用程序程序集不能定义多个入口点。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-107">An application assembly cannot define more than one entry point.</span></span>  
  
-   <span data-ttu-id="ca8b9-108">无法解析对 Windows DLL 中的函数的调用，因为找不到函数。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-108">The call to a function in a Windows DLL cannot be resolved because the function cannot be found.</span></span> <span data-ttu-id="ca8b9-109">在下面的示例中，<xref:System.EntryPointNotFoundException>因为 User32.dll 中不包含一个名为函数引发异常`GetMyNumber`。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-109">In the following example, an <xref:System.EntryPointNotFoundException> exception is thrown because User32.dll does not include a function named `GetMyNumber`.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/nofunction1.cs#1)]
     [!code-vb[System.EntryPointNotFoundException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/nofunction1.vb#1)]  
  
-   <span data-ttu-id="ca8b9-110">无法解析对 Windows DLL 中的函数的调用，因为该方法调用中使用的名称与在程序集中找到的名称不匹配。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-110">The call to a function in a Windows DLL cannot be resolved because the name used in the method call does not match a name found in the assembly.</span></span> <span data-ttu-id="ca8b9-111">通常情况下，这是因为<xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=nameWithType>字段隐式或显式设置为`true`、 被调用的方法包括一个或多个字符串参数，并且有 ANSI 和 Unicode 版本，和方法调用中使用的名称不对应于此 ANSI 或 Unicode 版本的名称。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-111">Frequently, this occurs because the <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=nameWithType> field is either implicitly or explicitly set to `true`, the called method includes one or more string parameters and has both an ANSI and a Unicode version, and the name used in the method call does not correspond to the name of this ANSI or Unicode version.</span></span> <span data-ttu-id="ca8b9-112">下面的示例通过尝试调用 Windows 提供方面的演示`MessageBox`User32.dll 中的函数。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-112">The following example provides an illustration by attempting to call the Windows `MessageBox` function in User32.dll.</span></span> <span data-ttu-id="ca8b9-113">因为第一个方法定义指定<xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType>封送处理字符串，公共语言查找函数的宽字符版本`MessageBoxW`，而不是调用方法中使用的名称`MessageBox`。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-113">Because the first method definition specifies <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType> for string marshaling, the common language looks for the wide-character version of the function, `MessageBoxW`, instead of the name used in the method call, `MessageBox`.</span></span>  <span data-ttu-id="ca8b9-114">第二个方法定义可以解决此问题，通过调用`MessageBoxW`而不是`MessageBox`函数。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-114">The second method definition corrects this problem by calling the `MessageBoxW` instead of the `MessageBox` function.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/badcall1.cs#2)]
     [!code-vb[System.EntryPointNotFoundException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/badcall1.vb#2)]  
  
-   <span data-ttu-id="ca8b9-115">您正试图通过其简单的名称，而不是其修饰的名动态链接库中调用的函数。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-115">You are trying to call a function in a dynamic link library by its simple name rather than its decorated name.</span></span> <span data-ttu-id="ca8b9-116">通常情况下，c + + 编译器将生成 DLL 函数的修饰的名称。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-116">Typically, the C++ compiler generates a decorated name for DLL functions.</span></span> <span data-ttu-id="ca8b9-117">例如，下面的 c + + 代码定义一个名为函数`Double`名为 TestDll.dll 库中。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-117">For example, the following C++ code defines a function named `Double` in a library named TestDll.dll.</span></span>  
  
     [!code-cpp[System.EntryPointNotFoundException.Class#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cpp/testdll.cpp#6)]  
  
     <span data-ttu-id="ca8b9-118">当尝试调用函数，下面的示例中的代码时<xref:System.EntryPointNotFoundException>引发异常，因为`Double`找不到函数。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-118">When the code in the following example tries to call the function, an <xref:System.EntryPointNotFoundException> exception is thrown because the `Double` function cannot be found.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/mangle1.cs#7)]
     [!code-vb[System.EntryPointNotFoundException.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/mangle1.vb#7)]  
  
     <span data-ttu-id="ca8b9-119">但是，如果该函数称为通过其修饰的名 (在这种情况下， `?Double@@YAHH@Z`)，函数调用成功，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-119">However, if the function is called by using its decorated name (in this case, `?Double@@YAHH@Z`), the function call succeeds, as the following example shows.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/mangle2.cs#8)]
     [!code-vb[System.EntryPointNotFoundException.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/mangle2.vb#8)]  
  
     <span data-ttu-id="ca8b9-120">你可以找到由 DLL 导出的使用 Dumpbin.exe 之类的实用工具函数的修饰的名。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-120">You can find the decorated names of functions exported by a DLL by using a utility such as Dumpbin.exe.</span></span>  
  
-   <span data-ttu-id="ca8b9-121">您试图从中调用中的托管程序集的方法，就像它是托管动态链接库。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-121">You are attempting to call a method in a managed assembly as if it were an unmanaged dynamic link library.</span></span> <span data-ttu-id="ca8b9-122">若要查看此操作中，编译的程序集名为 StringUtilities.dll 下面的示例。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-122">To see this in action, compile the following example to an assembly named StringUtilities.dll.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/stringutilities.cs#3)]
     [!code-vb[System.EntryPointNotFoundException.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/stringutilities.vb#3)]  
  
     <span data-ttu-id="ca8b9-123">然后编译并执行下面的示例，它会尝试调用`StringUtilities.SayGoodMorning`StringUtilities.dll 动态链接库中的方法就像它是非托管的代码。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-123">Then compile and execute the following example, which attempts to call the `StringUtilities.SayGoodMorning` method in the StringUtilities.dll dynamic link library as if it were unmanaged code.</span></span> <span data-ttu-id="ca8b9-124">结果是<xref:System.EntryPointNotFoundException>异常。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-124">The result is an <xref:System.EntryPointNotFoundException> exception.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/importassembly1.cs#4)]
     [!code-vb[System.EntryPointNotFoundException.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/importassembly1.vb#4)]  
  
     <span data-ttu-id="ca8b9-125">若要消除此异常，添加到托管程序集并访问引用`StringUtilities.SayGoodMorning`就像你将访问在托管代码中的任何其他方法，如以下示例执行的方法。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-125">To eliminate the exception, add a reference to the managed assembly and access the `StringUtilities.SayGoodMorning` method just as you would access any other method in managed code, as the following example does.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/fiximportassembly1.cs#5)]
     [!code-vb[System.EntryPointNotFoundException.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/fiximportassembly1.vb#5)]  
  
-   <span data-ttu-id="ca8b9-126">您正试图 COM DLL 中调用的方法，就像它是 Windows DLL。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-126">You are trying to call a method in a COM DLL as if it were a Windows DLL.</span></span> <span data-ttu-id="ca8b9-127">若要访问 COM DLL，请选择**添加引用**Visual Studio 添加到项目中，引用，然后选择从类型库中的选项**COM**选项卡。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-127">To access a COM DLL, select the **Add Reference** option in Visual Studio to add a reference to the project, and then select the type library from the **COM** tab.</span></span>  
  
 <span data-ttu-id="ca8b9-128">有关的实例的初始属性值的列表<xref:System.EntryPointNotFoundException>，请参阅<xref:System.EntryPointNotFoundException.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-128">For a list of initial property values for an instance of <xref:System.EntryPointNotFoundException>, see the <xref:System.EntryPointNotFoundException.%23ctor%2A> constructors.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca8b9-129">初始化 <see cref="T:System.EntryPointNotFoundException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca8b9-129">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca8b9-130">初始化 <see cref="T:System.EntryPointNotFoundException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca8b9-130">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca8b9-131">此构造函数初始化<xref:System.Exception.Message%2A>为系统提供的消息的描述错误，如"未找到入口点。"的新实例的属性</span><span class="sxs-lookup"><span data-stu-id="ca8b9-131">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Entry point was not found."</span></span> <span data-ttu-id="ca8b9-132">此消息将当前系统区域性考虑在内。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-132">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="ca8b9-133">下表显示 <xref:System.EntryPointNotFoundException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-133">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="ca8b9-134">Property</span><span class="sxs-lookup"><span data-stu-id="ca8b9-134">Property</span></span>|<span data-ttu-id="ca8b9-135">“值”</span><span class="sxs-lookup"><span data-stu-id="ca8b9-135">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ca8b9-136">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-136">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="ca8b9-137">本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-137">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="ca8b9-138">解释异常原因的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca8b9-138">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca8b9-139">用指定的错误消息初始化 <see cref="T:System.EntryPointNotFoundException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca8b9-139">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca8b9-140">`message` 的内容被设计为人可理解的形式。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-140">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="ca8b9-141">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-141">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="ca8b9-142">下表显示 <xref:System.EntryPointNotFoundException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-142">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="ca8b9-143">Property</span><span class="sxs-lookup"><span data-stu-id="ca8b9-143">Property</span></span>|<span data-ttu-id="ca8b9-144">“值”</span><span class="sxs-lookup"><span data-stu-id="ca8b9-144">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ca8b9-145">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-145">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="ca8b9-146">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-146">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EntryPointNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EntryPointNotFoundException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="ca8b9-147">承载序列化对象数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca8b9-147">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="ca8b9-148">关于来源和目标的上下文信息</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca8b9-148">The contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca8b9-149">用序列化数据初始化 <see cref="T:System.EntryPointNotFoundException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca8b9-149">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca8b9-150">此构造函数在反序列化过程中调用，以便重建通过流传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-150">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException(System::String ^ message, Exception ^ inner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="ca8b9-151">解释异常原因的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca8b9-151">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="ca8b9-152">导致当前异常的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca8b9-152">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="ca8b9-153">如果 <c>inner</c> 参数不是空引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 <see langword="catch" /> 块中引发当前异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca8b9-153">If the <c>inner</c> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca8b9-154">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.EntryPointNotFoundException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca8b9-154">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca8b9-155">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-155">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="ca8b9-156"><xref:System.Exception.InnerException%2A> 属性返回传递到构造函数中的相同值，或者如果 `Nothing` 属性不向构造函数提供内部异常值，则为空引用（在 Visual Basic 中为 <xref:System.Exception.InnerException%2A>）。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-156">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="ca8b9-157">下表显示 <xref:System.EntryPointNotFoundException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-157">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="ca8b9-158">Property</span><span class="sxs-lookup"><span data-stu-id="ca8b9-158">Property</span></span>|<span data-ttu-id="ca8b9-159">“值”</span><span class="sxs-lookup"><span data-stu-id="ca8b9-159">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ca8b9-160">内部异常引用。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-160">The inner exception reference.</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="ca8b9-161">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="ca8b9-161">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>