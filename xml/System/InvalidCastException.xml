<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InvalidCastException.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57906f31b11cbf95ef8c0899681cd7c2ecc491667.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7906f31b11cbf95ef8c0899681cd7c2ecc491667</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.InvalidCastException">
          <source>The exception that is thrown for invalid casting or explicit conversion.</source>
          <target state="translated">当执行了无效的强制转换或显式转换时引发的异常。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The .NET Framework supports automatic conversion from derived types to their base types and back to the derived type, as well as from types that present interfaces to interface objects and back.</source>
          <target state="translated">.NET Framework 支持自动转换从派生类型到其基类型并返回到派生类型，以及提供接口的对象，并在返回的接口的类型。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>It also includes a variety of mechanisms that support custom conversions.</source>
          <target state="translated">它还包括各种支持自定义转换的机制。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>For more information, see <bpt id="p1">[</bpt>Type Conversion in the .NET Framework<ept id="p1">](~/docs/standard/base-types/type-conversion.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>.NET Framework 中的类型转换<ept id="p1">](~/docs/standard/base-types/type-conversion.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>An <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception is thrown when the conversion of an instance of one type to another type is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>不支持的一种类型的实例转换为另一种类型时引发异常。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>For example, attempting to convert a <ph id="ph1">&lt;xref:System.Char&gt;</ph> value to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value throws an <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> exception.</source>
          <target state="translated">例如，尝试转换<ph id="ph1">&lt;xref:System.Char&gt;</ph>值赋给<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>值都将引发<ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph>异常。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>It differs from an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception, which is thrown when a conversion of one type to another is supported, but the value of the source type is outside the range of the target type.</source>
          <target state="translated">它不同于<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>支持到另一种类型的转换，但源类型的值超出了目标类型的范围时引发的异常。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>An <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception is caused by developer error and should not be handled in a <ph id="ph2">`try/catch`</ph> block; instead, the cause of the exception should be eliminated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>异常由开发人员错误，不应在处理<ph id="ph2">`try/catch`</ph>块; 相反，应消除异常的原因。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>For information about conversions supported by the system, see the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class.</source>
          <target state="translated">有关系统支持的转换的信息，请参阅<ph id="ph1">&lt;xref:System.Convert&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>For errors that occur when the destination type can store source type values, but is not large enough to store a specific source value, see the <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">有关源类型值，但不大的目标类型可以存储时出现错误不足以存储特定源值，请参阅<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>异常。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>In many cases, your language compiler detects that no conversion exists between the source type and the target type and issues a compiler error.</source>
          <target state="translated">在许多情况下，您的语言编译器检测到的任何转换的源类型和目标类型之间存在，并发出编译器错误。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Some of the conditions under which an attempted conversion throws an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception are discussed in the following sections:</source>
          <target state="translated">一些条件在其下尝试的转换会引发<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>下列部分中讨论了异常：</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><bpt id="p1">[</bpt>Primitive types and IConvertible<ept id="p1">](#Primitive)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>基元类型和 IConvertible<ept id="p1">](#Primitive)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><bpt id="p1">[</bpt>The Convert.ChangeType method<ept id="p1">](#ChangeType)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Convert.ChangeType 方法<ept id="p1">](#ChangeType)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><bpt id="p1">[</bpt>Narrowing conversions and IConvertible implementations<ept id="p1">](#Narrowing)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>收缩转换和 IConvertible 实现<ept id="p1">](#Narrowing)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><bpt id="p1">[</bpt>Downcasting<ept id="p1">](#Downcasting)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>向下转换<ept id="p1">](#Downcasting)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><bpt id="p1">[</bpt>Conversion from an interface object<ept id="p1">](#Interface)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>从接口对象的转换<ept id="p1">](#Interface)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><bpt id="p1">[</bpt>String conversions<ept id="p1">](#String)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>字符串转换<ept id="p1">](#String)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><bpt id="p1">[</bpt>Visual Basic 6.0 migration<ept id="p1">](#Migration)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Visual Basic 6.0 中迁移<ept id="p1">](#Migration)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>For an explicit reference conversion to be successful, the source value must be <ph id="ph1">`null`</ph>, or the object type referenced by the source argument must be convertible to the destination type by an implicit reference conversion.</source>
          <target state="translated">为了使显式引用转换成功，源值必须为<ph id="ph1">`null`</ph>，或源参数引用的对象类型必须可转换为通过隐式引用转换的目标类型。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The following intermediate language (IL) instructions throw an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception:</source>
          <target state="translated">以下的中间语言 (IL) 指令引发<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>异常：</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> uses the HRESULT COR_E_INVALIDCAST, which has the value 0x80004002.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> 使用 HRESULT COR_E_INVALIDCAST，其值 0x80004002。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.InvalidCastException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">有关的实例的初始属性值的列表<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>，请参阅<ph id="ph2">&lt;xref:System.InvalidCastException.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Primitive types and IConvertible</source>
          <target state="translated">基元类型和 IConvertible</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>You directly or indirectly call a primitive type's <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> implementation that does not support a particular conversion.</source>
          <target state="translated">直接或间接调用基元类型的<ph id="ph1">&lt;xref:System.IConvertible&gt;</ph>不支持的特定转换的实现。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>For example, trying to convert a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Char&gt;</ph> or a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value to an <ph id="ph4">&lt;xref:System.Int32&gt;</ph> throws an <ph id="ph5">&lt;xref:System.InvalidCastException&gt;</ph> exception.</source>
          <target state="translated">例如，尝试将转换<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>值赋给<ph id="ph2">&lt;xref:System.Char&gt;</ph>或<ph id="ph3">&lt;xref:System.DateTime&gt;</ph>值赋给<ph id="ph4">&lt;xref:System.Int32&gt;</ph>引发<ph id="ph5">&lt;xref:System.InvalidCastException&gt;</ph>异常。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The following example calls both the <ph id="ph1">&lt;xref:System.Boolean.System%23IConvertible%23ToChar%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> methods to convert a <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> value to a <ph id="ph4">&lt;xref:System.Char&gt;</ph>.</source>
          <target state="translated">下面的示例调用同时<ph id="ph1">&lt;xref:System.Boolean.System%23IConvertible%23ToChar%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType&gt;</ph>用于转换的方法<ph id="ph3">&lt;xref:System.Boolean&gt;</ph>值赋给<ph id="ph4">&lt;xref:System.Char&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>In both cases, the method call throws an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception.</source>
          <target state="translated">在这两种情况下，方法调用引发<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>异常。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Because the conversion is not supported, there is no workaround.</source>
          <target state="translated">由于不支持转换，目前没有解决方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The Convert.ChangeType method</source>
          <target state="translated">Convert.ChangeType 方法</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>You've called the <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method to convert an object from one type to another, but one or both types don't implement the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">已调用<ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph>方法将对象转换到另一个类型，但一个或两种类型从不实现<ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>In most cases, because the conversion is not supported, there is no workaround.</source>
          <target state="translated">在大多数情况下，由于不支持转换，目前没有解决方法。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>In some cases, a possible workaround is to manually assign property values from the source type to similar properties of a the target type.</source>
          <target state="translated">在某些情况下，可能的解决方法是手动将源类型的属性值分配给类似属性的目标类型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Narrowing conversions and IConvertible implementations</source>
          <target state="translated">收缩转换和 IConvertible 实现</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Narrowing operators define the explicit conversions supported by a type.</source>
          <target state="translated">收缩运算符定义支持的一种类型的显式转换。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>A casting operator in C# or the <ph id="ph1">`CType`</ph> conversion method in Visual Basic (if <ph id="ph2">`Option Strict`</ph> is on)  is required to perform the conversion.</source>
          <target state="translated">在 C# 强制转换运算符或<ph id="ph1">`CType`</ph>Visual Basic 中的转换方法 (如果<ph id="ph2">`Option Strict`</ph>位于) 需执行转换。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>However, if neither the source type nor the target type defines an explicit or narrowing conversion between the two types, and the <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> implementation of one or both types doesn't support a conversion from the source type to the target type, an <ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph> exception is thrown.</source>
          <target state="translated">但是，如果源类型和目标类型都不定义的显式或收缩的两种类型之间的转换和<ph id="ph1">&lt;xref:System.IConvertible&gt;</ph>实现的一个或两种类型不支持从的源类型转换为目标类型， <ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph>引发异常。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>In most cases, because the conversion is not supported, there is no workaround.</source>
          <target state="translated">在大多数情况下，由于不支持转换，目前没有解决方法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Downcasting</source>
          <target state="translated">向下转换</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>You are downcasting, that is, trying to convert an instance of a base type to one of its derived types.</source>
          <target state="translated">您将向下转换，即，尝试将基类型的实例转换为它的某个派生类型。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>In the following example, trying to convert a <ph id="ph1">`Person`</ph> object to a <ph id="ph2">`PersonWithID`</ph> object fails.</source>
          <target state="translated">在下面的示例中，尝试将转换<ph id="ph1">`Person`</ph>对象传递给<ph id="ph2">`PersonWithID`</ph>对象失败。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>As the example shows, the downcast succeeds only if the <ph id="ph1">`Person`</ph> object was created by an upcast from a <ph id="ph2">`PersonWithId`</ph> object to a <ph id="ph3">`Person`</ph> object, or if the <ph id="ph4">`Person`</ph> object is <ph id="ph5">`null`</ph>.</source>
          <target state="translated">如示例所示，向下转换时才会成功<ph id="ph1">`Person`</ph>对象由从向上转换<ph id="ph2">`PersonWithId`</ph>对象传递给<ph id="ph3">`Person`</ph>对象，或者如果<ph id="ph4">`Person`</ph>对象是<ph id="ph5">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Conversion from an interface object</source>
          <target state="translated">从接口对象的转换</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>You are attempting to convert an interface object to a type that  implements that interface, but the target type is not the same type or a base class of the type from which the interface object was originally derived.</source>
          <target state="translated">正在尝试将接口对象转换为实现该接口的类型，但目标类型不是相同类型或从其最初派生接口对象的类型的基类。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The following example throws an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception when it attempts to convert an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> object  to a <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.</source>
          <target state="translated">下面的示例引发<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>异常在尝试转换时<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>对象传递给<ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The conversion fails because although the <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interface, the <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object is not related to the <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class from which  the interface object was derived.</source>
          <target state="translated">转换失败，因为虽然<ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>类实现<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>接口，<ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>不与相关对象<ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph>类派生的接口对象。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>As the exception message indicates, the conversion would succeed only if the interface object is converted back to an instance of the original type, in this case a  <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>.</source>
          <target state="translated">为与该异常消息表示，仅当界面对象转换回原始类型的实例在这种情况下，转换将成功<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The conversion would also succeed if the interface object is converted to an instance of a base type of the original type.</source>
          <target state="translated">如果接口对象转换为原始类型的基类型的实例，也将成功转换。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>String conversions</source>
          <target state="translated">字符串转换</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>You are trying to convert a value or an object to its string representation by using a casting operator in C#.</source>
          <target state="translated">正在尝试通过在 C# 中使用强制转换运算符转换为其字符串表示形式的值或对象。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>In the following example, both the attempt to cast a <ph id="ph1">&lt;xref:System.Char&gt;</ph> value to a string and the attempt to cast an integer to a string throw an <ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph> exception.</source>
          <target state="translated">在下面的示例中，这两个尝试强制转换<ph id="ph1">&lt;xref:System.Char&gt;</ph>为字符串，并尝试强制转换为字符串引发一个整数值<ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph>异常。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Using the Visual Basic <ph id="ph1">`CStr`</ph> operator to convert a value of a primitive type to a string succeeds.</source>
          <target state="translated">使用 Visual Basic<ph id="ph1">`CStr`</ph>运算符，将基元类型的值转换为字符串成功。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The operation does not throw an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception.</source>
          <target state="translated">该操作不会引发<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>异常。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>To successfully covert an instance of any type to its string representation, call its <ph id="ph1">`ToString`</ph> method, as the following example does.</source>
          <target state="translated">为成功转换为其字符串表示形式的任何类型的实例，请在调用其<ph id="ph1">`ToString`</ph>方法，如下面的示例执行。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The <ph id="ph1">`ToString`</ph> method is always present, since the <ph id="ph2">&lt;xref:System.Object.ToString%2A&gt;</ph> method is defined by the <ph id="ph3">&lt;xref:System.Object&gt;</ph> class and therefore is either inherited or overridden by all managed types.</source>
          <target state="translated"><ph id="ph1">`ToString`</ph>方法始终会出现，因为<ph id="ph2">&lt;xref:System.Object.ToString%2A&gt;</ph>方法由定义<ph id="ph3">&lt;xref:System.Object&gt;</ph>类并因此继承，或者由所有的托管类型中重写。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Visual Basic 6.0 migration</source>
          <target state="translated">Visual Basic 6.0 中迁移</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>You're upgrading a Visual Basic 6.0 application with a call to a custom event in a user control to Visual Basic .NET, and an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception is thrown with the message, "Specified cast is not valid."</source>
          <target state="translated">要将用户控件中自定义事件的调用将 Visual Basic 6.0 应用程序升级到 Visual Basic.NET 和<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>消息将引发异常，"指定的转换无效。"</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>To eliminate this exception, change the line of code in your form (such as <ph id="ph1">`Form1`</ph>)</source>
          <target state="translated">若要消除此异常，更改你的窗体中的代码行 (如<ph id="ph1">`Form1`</ph>)</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>and replace it with the following line of code:</source>
          <target state="translated">并将其替换为以下代码行：</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="T:System.InvalidCastException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Cannot cast from source type to destination type."</source>
          <target state="translated">此构造函数初始化<ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph>为系统提供的消息描述诸如"无法转换从源类型为目标类型。"的错误，将新实例的属性</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">此消息将当前系统区域性考虑在内。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>.</source>
          <target state="translated">下表显示 <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> 的实例的初始属性值。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">空引用（在 Visual Basic 中为 <ph id="ph1">`Nothing`</ph>）。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">本地化的错误消息字符串。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">描述错误的消息。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">用指定的错误消息初始化 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property of the new exception using the <ph id="ph2">`message`</ph> parameter.</source>
          <target state="translated">此构造函数初始化<ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>属性的新异常使用<ph id="ph2">`message`</ph>参数。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated"><ph id="ph1">`message`</ph> 的内容被设计为人可理解的形式。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>.</source>
          <target state="translated">下表显示 <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> 的实例的初始属性值。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">空引用（在 Visual Basic 中为 <ph id="ph1">`Nothing`</ph>）。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">错误消息字符串。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">承载序列化对象数据的对象。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">关于来源和目标的上下文信息</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">用序列化数据初始化 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">此构造函数在反序列化过程中调用，以便重建通过流传输的异常对象。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>XML 和 SOAP 序列化<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">解释异常原因的错误消息。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">导致当前异常的异常。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 参数不为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则当前异常会在处理内部异常的 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 块中引发。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">因前一个异常而直接引发的异常应在 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 属性中包含对前一个异常的引用。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or returns <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>属性返回相同的值传递到构造函数中，或返回<ph id="ph2">`null`</ph>如果<ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>属性不会提供给构造函数的内部异常值。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>.</source>
          <target state="translated">下表显示 <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> 的实例的初始属性值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">内部异常引用。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">错误消息字符串。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>The message that indicates the reason the exception occurred.</source>
          <target state="translated">指示所发生异常的原因的消息。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>The error code (HRESULT) value associated with the exception.</source>
          <target state="translated">与异常关联的错误代码 (HRESULT) 值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> class with a specified message and error code.</source>
          <target state="translated">使用指定的消息和错误代码初始化 <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property of the new exception using the <ph id="ph2">`message`</ph> parameter.</source>
          <target state="translated">此构造函数初始化<ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>属性的新异常使用<ph id="ph2">`message`</ph>参数。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated"><ph id="ph1">`message`</ph> 的内容被设计为人可理解的形式。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>This constructor supplies an HRESULT value that is accessible to inheritors of the <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> class, via the protected <ph id="ph2">&lt;xref:System.Exception.HResult%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Exception&gt;</ph> class.</source>
          <target state="translated">此构造函数提供的继承者可以访问的 HRESULT 值<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>类，通过受保护<ph id="ph2">&lt;xref:System.Exception.HResult%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Exception&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>.</source>
          <target state="translated">下表显示 <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> 的实例的初始属性值。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">空引用（在 Visual Basic 中为 <ph id="ph1">`Nothing`</ph>）。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>The error message string.</source>
          <target state="translated">错误消息字符串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>