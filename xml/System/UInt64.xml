<Type Name="UInt64" FullName="System.UInt64">
  <TypeSignature Language="C#" Value="public struct UInt64 : IComparable, IComparable&lt;ulong&gt;, IConvertible, IEquatable&lt;ulong&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int64&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int64&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.UInt64" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt64&#xA;Implements IComparable, IComparable(Of ULong), IConvertible, IEquatable(Of ULong), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt64 : IComparable, IComparable&lt;System::UInt64&gt;, IConvertible, IEquatable&lt;System::UInt64&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ba776-101">表示 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-101">Represents a 64-bit unsigned integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-102"><xref:System.UInt64>值类型表示值介于 0 到 18446744073709551615 之间的无符号的整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-102">The <xref:System.UInt64> value type represents unsigned integers with values ranging from 0 to 18,446,744,073,709,551,615.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ba776-103"><xref:System.UInt64>类型不是符合 CLS。</span><span class="sxs-lookup"><span data-stu-id="ba776-103">The <xref:System.UInt64> type is not CLS-compliant.</span></span> <span data-ttu-id="ba776-104">符合 cls 的替代类型是<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="ba776-104">The CLS-compliant alternative type is <xref:System.Decimal>.</span></span> <span data-ttu-id="ba776-105"><xref:System.Int64> 可以改用替换<xref:System.UInt64>值，其范围从 0 到<xref:System.Int64.MaxValue>。</span><span class="sxs-lookup"><span data-stu-id="ba776-105"><xref:System.Int64> can be used instead to replace a <xref:System.UInt64> value that ranges from zero to <xref:System.Int64.MaxValue>.</span></span> <span data-ttu-id="ba776-106">有关 CLS 遵从性的详细信息，请参阅[语言独立性和独立于语言的组件](~/docs/standard/language-independence-and-language-independent-components.md)。</span><span class="sxs-lookup"><span data-stu-id="ba776-106">For more information about CLS compliance, see [Language Independence and Language-Independent Components](~/docs/standard/language-independence-and-language-independent-components.md).</span></span>  
  
 <span data-ttu-id="ba776-107"><xref:System.UInt64> 提供用于比较此类型的实例，实例的值转换为其字符串表示形式中，以及将数字的字符串表示转换为此类型的实例方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-107"><xref:System.UInt64> provides methods to compare instances of this type, convert the value of an instance to its string representation, and convert the string representation of a number to an instance of this type.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ba776-108">此类型的所有成员都是线程安全。</span><span class="sxs-lookup"><span data-stu-id="ba776-108">All members of this type are thread safe.</span></span> <span data-ttu-id="ba776-109">实际上，看起来要修改实例状态的成员返回使用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="ba776-109">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="ba776-110">作为与任何其他类型，读取和写入到共享的变量，其中包含此类型的实例必须受使用锁来确保的线程安全性。</span><span class="sxs-lookup"><span data-stu-id="ba776-110">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.Int64" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba776-111">将此实例与指定的对象或 <see cref="T:System.UInt64" /> 进行比较，并返回二者相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="ba776-111">Compares this instance to a specified object or <see cref="T:System.UInt64" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba776-112">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-112">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ba776-113">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="ba776-113">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="ba776-114">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="ba776-114">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="ba776-115"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="ba776-115"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="ba776-116"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="ba776-116"></term><description> Description</span></span>  
  
 <span data-ttu-id="ba776-117"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="ba776-117"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="ba776-118"></term><description> 此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-118"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="ba776-119"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="ba776-119"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="ba776-120"></term><description> 此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-120"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="ba776-121"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="ba776-121"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="ba776-122"></term><description> 此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-122"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="ba776-123">或</span><span class="sxs-lookup"><span data-stu-id="ba776-123">-or-</span></span>  
  
 <span data-ttu-id="ba776-124"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-124"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-125">任何实例<xref:System.UInt64>，无论其值被视为大于`null`。</span><span class="sxs-lookup"><span data-stu-id="ba776-125">Any instance of <xref:System.UInt64>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="ba776-126">`value` 必须是`null`或实例<xref:System.UInt64>; 否则为将引发异常。</span><span class="sxs-lookup"><span data-stu-id="ba776-126">`value` must be `null` or an instance of <xref:System.UInt64>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba776-127">下面的代码示例演示<xref:System.UInt64.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-127">The following code example demonstrates the <xref:System.UInt64.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[UInt64 Example#3](~/samples/snippets/cpp/VS_Snippets_CLR/UInt64 Example/CPP/source.cpp#3)]
 [!code-csharp[UInt64 Example#3](~/samples/snippets/csharp/VS_Snippets_CLR/UInt64 Example/CS/source.cs#3)]
 [!code-vb[UInt64 Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt64 Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba776-128"><paramref name="value" /> 不是 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-128"><paramref name="value" /> is not a <see cref="T:System.UInt64" />.</span></span></exception>
        <altmember cref="M:System.UInt64.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.CompareTo(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba776-129">要比较的无符号整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-129">An unsigned integer to compare.</span></span></param>
        <summary><span data-ttu-id="ba776-130">将此实例与指定的 64 位无符号整数进行比较并返回对其相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="ba776-130">Compares this instance to a specified 64-bit unsigned integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="ba776-131">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="ba776-131">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="ba776-132"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="ba776-132"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="ba776-133"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="ba776-133"></term><description> Description</span></span>  
  
 <span data-ttu-id="ba776-134"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="ba776-134"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="ba776-135"></term><description> 此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-135"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="ba776-136"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="ba776-136"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="ba776-137"></term><description> 此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-137"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="ba776-138"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="ba776-138"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="ba776-139"></term><description> 此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-139"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-140">此方法实现<xref:System.IComparable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.UInt64.CompareTo%2A?displayProperty=nameWithType>方法因为它不具有要转换`value`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-140">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.UInt64.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="ba776-141">具体取决于您的编程语言，它可能会对代码<xref:System.UInt64.CompareTo%2A>其中的参数类型具有较少的位的方法 （为较窄） 比实例类型。</span><span class="sxs-lookup"><span data-stu-id="ba776-141">Depending on your programming language, it might be possible to code a <xref:System.UInt64.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="ba776-142">这可能是因为某些编程语言中执行的隐式的扩大转换，它表示具有任意数量的位的实例作为类型参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-142">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="ba776-143">例如，假设实例类型是<xref:System.Int32>和参数类型是<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="ba776-143">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="ba776-144">Microsoft C# 编译器生成的指令来表示形式的参数值<xref:System.Int32>对象，然后生成<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>比较的值的方法<xref:System.Int32>实例和<xref:System.Int32>参数表示形式。</span><span class="sxs-lookup"><span data-stu-id="ba776-144">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="ba776-145">请查阅你的编程语言的文档，以确定其编译器是否对数值类型执行隐式的扩大转换。</span><span class="sxs-lookup"><span data-stu-id="ba776-145">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba776-146">下面的代码示例演示泛型和非泛型版本的<xref:System.UInt64.CompareTo%2A>多个值和引用类型的方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-146">The following code example demonstrates generic and nongeneric versions of the <xref:System.UInt64.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba776-147">返回一个值，该值指示此实例是否与指定的对象或 <see cref="T:System.UInt64" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="ba776-147">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.UInt64" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ba776-148">要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-148">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="ba776-149">返回一个值，该值指示此实例是否等于指定的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-149">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="ba776-150">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.UInt64" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-150"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.UInt64" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba776-151">下面的示例演示<xref:System.UInt64.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-151">The following example demonstrates the <xref:System.UInt64.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.UInt64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equals1.cs#1)]
 [!code-vb[System.UInt64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="ba776-152">编译器重载决策可能应对明显的差异的两个行为<see cref="M:System.UInt64.Equals(System.UInt64)" />方法重载。</span><span class="sxs-lookup"><span data-stu-id="ba776-152">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt64.Equals(System.UInt64)" /> method overloads.</span></span> <span data-ttu-id="ba776-153">如果之间的隐式转换<paramref name="obj" />自变量和一个<see cref="T:System.UInt64" />定义和自变量并不类型化为<see cref="T:System.Object" />，编译器执行隐式转换和调用<see cref="M:System.UInt64.Equals(System.UInt64)" />方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-153">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method.</span></span> <span data-ttu-id="ba776-154">否则，它们调用<see cref="M:System.UInt64.Equals(System.Object)" />方法，始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.UInt64" />值。</span><span class="sxs-lookup"><span data-stu-id="ba776-154">Otherwise, they call the <see cref="M:System.UInt64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt64" /> value.</span></span> <span data-ttu-id="ba776-155">下面的示例阐释了两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="ba776-155">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="ba776-156">情况下<see cref="T:System.Byte" />， <see cref="T:System.UInt16" />，和<see cref="T:System.UInt32" />值，第一个比较返回<see langword="true" />因为编译器自动执行一个的扩大转换，调用<see cref="M:System.UInt64.Equals(System.UInt64)" />方法，而第二个比较返回<see langword="false" />由于编译器调用<see cref="M:System.UInt64.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-156">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt64.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)]
 [!code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</para>
        </block>
        <altmember cref="M:System.UInt64.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ulong obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Equals(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt64 obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ba776-157">要与此实例进行比较的 <see cref="T:System.UInt64" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba776-157">A <see cref="T:System.UInt64" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="ba776-158">返回一个值，该值指示此实例是否等于指定的 <see cref="T:System.UInt64" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba776-158">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt64" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="ba776-159">如果 <paramref name="obj" /> 的值与此实例相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-159"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-160">此方法实现<xref:System.IEquatable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.UInt64.Equals%2A>因为它不具有要转换`obj`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-160">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.UInt64.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba776-161">下面的示例演示<xref:System.UInt64.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-161">The following example demonstrates the <xref:System.UInt64.Equals%2A> method.</span></span>  
  
 [!code-cpp[UInt64_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/UInt64_Equals/CPP/uint64_equals.cpp#1)]
 [!code-csharp[UInt64_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/UInt64_Equals/CS/uint64_equals.cs#1)]
 [!code-vb[UInt64_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt64_Equals/VB/uint64_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="ba776-162">编译器重载决策可能应对明显的差异的两个行为<see cref="M:System.UInt64.Equals(System.UInt64)" />方法重载。</span><span class="sxs-lookup"><span data-stu-id="ba776-162">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt64.Equals(System.UInt64)" /> method overloads.</span></span> <span data-ttu-id="ba776-163">如果之间的隐式转换<paramref name="obj" />自变量和一个<see cref="T:System.UInt64" />定义和自变量并不类型化为<see cref="T:System.Object" />，编译器执行隐式转换和调用<see cref="M:System.UInt64.Equals(System.UInt64)" />方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-163">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method.</span></span> <span data-ttu-id="ba776-164">否则，它们调用<see cref="M:System.UInt64.Equals(System.Object)" />方法，始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.UInt64" />值。</span><span class="sxs-lookup"><span data-stu-id="ba776-164">Otherwise, they call the <see cref="M:System.UInt64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt64" /> value.</span></span> <span data-ttu-id="ba776-165">下面的示例阐释了两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="ba776-165">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="ba776-166">情况下<see cref="T:System.Byte" />， <see cref="T:System.UInt16" />，和<see cref="T:System.UInt32" />值，第一个比较返回<see langword="true" />因为编译器自动执行一个的扩大转换，调用<see cref="M:System.UInt64.Equals(System.UInt64)" />方法，而第二个比较返回<see langword="false" />由于编译器调用<see cref="M:System.UInt64.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-166">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt64.Equals(System.UInt64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt64.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.UInt64.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.equals/cs/equalsoverl.cs#2)]
 [!code-vb[System.UInt64.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.equals/vb/equalsoverl.vb#2)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba776-167">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="ba776-167">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="ba776-168">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="ba776-168">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba776-169">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-169">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt64" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-170">枚举常数 <see cref="F:System.TypeCode.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-170">The enumerated constant, <see cref="F:System.TypeCode.UInt64" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const ulong MaxValue = 18446744073709551615;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int64 MaxValue = unsigned int64(18446744073709551615)" />
      <MemberSignature Language="DocId" Value="F:System.UInt64.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As ULong  = 18446744073709551615" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt64 MaxValue = 18446744073709551615;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <MemberValue>18446744073709551615</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ba776-171">表示 <see cref="T:System.UInt64" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="ba776-171">Represents the largest possible value of <see cref="T:System.UInt64" />.</span></span> <span data-ttu-id="ba776-172">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="ba776-172">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-173">此常量的值是 18446744073709551615;也就是说，十六进制 0xFFFFFFFFFFFFFFFF。</span><span class="sxs-lookup"><span data-stu-id="ba776-173">The value of this constant is 18,446,744,073,709,551,615; that is, hexadecimal 0xFFFFFFFFFFFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba776-174">下面的示例使用<xref:System.UInt64.MinValue>和<xref:System.UInt64.MaxValue>字段验证<xref:System.Double>值的范围内<xref:System.UInt64>键入执行类型转换之前。</span><span class="sxs-lookup"><span data-stu-id="ba776-174">The following example uses the <xref:System.UInt64.MinValue> and <xref:System.UInt64.MaxValue> fields to verify that a <xref:System.Double> value is within the range of the <xref:System.UInt64> type before it performs a type conversion.</span></span> <span data-ttu-id="ba776-175">这可以防止<xref:System.OverflowException>在运行时。</span><span class="sxs-lookup"><span data-stu-id="ba776-175">This prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt64.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt64.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt64.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt64.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt64.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const ulong MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int64 MinValue = unsigned int64(0)" />
      <MemberSignature Language="DocId" Value="F:System.UInt64.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As ULong  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt64 MinValue = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ba776-176">表示 <see cref="T:System.UInt64" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="ba776-176">Represents the smallest possible value of <see cref="T:System.UInt64" />.</span></span> <span data-ttu-id="ba776-177">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="ba776-177">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-178">此常量的值为 0。</span><span class="sxs-lookup"><span data-stu-id="ba776-178">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba776-179">下面的示例使用<xref:System.UInt64.MinValue>和<xref:System.UInt64.MaxValue>字段验证<xref:System.Double>值的范围内<xref:System.UInt64>键入执行类型转换之前。</span><span class="sxs-lookup"><span data-stu-id="ba776-179">The following example uses the <xref:System.UInt64.MinValue> and <xref:System.UInt64.MaxValue> fields to verify that a <xref:System.Double> value is within the range of the <xref:System.UInt64> type before it performs a type conversion.</span></span> <span data-ttu-id="ba776-180">这可以防止<xref:System.OverflowException>在运行时。</span><span class="sxs-lookup"><span data-stu-id="ba776-180">This prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt64.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt64.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt64.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt64.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt64.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba776-181">将数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-181">Converts the string representation of a number to its 64-bit unsigned integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.UInt64.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ba776-182">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="ba776-182">A string that represents the number to convert.</span></span></param>
        <summary><span data-ttu-id="ba776-183">将数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-183">Converts the string representation of a number to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="ba776-184">与 <paramref name="s" /> 中包含的数字等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-184">A 64-bit unsigned integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-185">`s`参数应为以下形式的数字的字符串表示。</span><span class="sxs-lookup"><span data-stu-id="ba776-185">The `s` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="ba776-186">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ba776-186">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="ba776-187">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="ba776-187">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ba776-188">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-188">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ba776-189">元素</span><span class="sxs-lookup"><span data-stu-id="ba776-189">Element</span></span>|<span data-ttu-id="ba776-190">描述</span><span class="sxs-lookup"><span data-stu-id="ba776-190">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ba776-191">*ws*</span><span class="sxs-lookup"><span data-stu-id="ba776-191">*ws*</span></span>|<span data-ttu-id="ba776-192">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="ba776-192">Optional white space.</span></span>|  
|<span data-ttu-id="ba776-193">*sign*</span><span class="sxs-lookup"><span data-stu-id="ba776-193">*sign*</span></span>|<span data-ttu-id="ba776-194">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="ba776-194">An optional sign.</span></span> <span data-ttu-id="ba776-195">有效的符号字符由<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="ba776-195">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="ba776-196">但是，可以仅使用零; 使用负号符号否则，该方法将引发<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="ba776-196">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="ba776-197">*digits*</span><span class="sxs-lookup"><span data-stu-id="ba776-197">*digits*</span></span>|<span data-ttu-id="ba776-198">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="ba776-198">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="ba776-199">忽略任何前导零。</span><span class="sxs-lookup"><span data-stu-id="ba776-199">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="ba776-200">指定的字符串`s`参数解释使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="ba776-200">The string specified by the `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="ba776-201">不能包含任何组分隔符或小数分隔符，并且它不能具有小数部分。</span><span class="sxs-lookup"><span data-stu-id="ba776-201">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="ba776-202">`s`通过使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-202">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="ba776-203">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ba776-203">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ba776-204">若要通过使用特定区域性的格式设置信息中分析字符串，使用<xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-204">To parse a string by using the formatting information of a specific culture, use the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba776-205">下面的示例使用<xref:System.UInt64.Parse%2A>方法，以便分析的字符串值的数组。</span><span class="sxs-lookup"><span data-stu-id="ba776-205">The following example uses the <xref:System.UInt64.Parse%2A> method to parse an array of string values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parse1.cs#1)]
 [!code-vb[System.UInt64.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba776-206"><paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-206">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ba776-207"><paramref name="s" /> 参数的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="ba776-207">The <paramref name="s" /> parameter is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ba776-208"><paramref name="s" /> 参数表示小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-208">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.UInt64.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ba776-209">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="ba776-209">A string that represents the number to convert.</span></span> <span data-ttu-id="ba776-210">该字符串使用由 <c>style</c> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="ba776-210">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="ba776-211">枚举值的按位组合，这些枚举值指定 <c>s</c> 的允许格式。</span><span class="sxs-lookup"><span data-stu-id="ba776-211">A bitwise combination of the enumeration values that specifies the permitted format of <c>s</c>.</span></span> <span data-ttu-id="ba776-212">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-212">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="ba776-213">将指定样式的数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-213">Converts the string representation of a number in a specified style to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="ba776-214">与 <paramref name="s" /> 中指定的数字等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-214">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-215">`style`参数定义中允许的样式元素 （如空格、 正整数或负号符号、 组分隔符符号或小数点符号）`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-215">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ba776-216">`style` 必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="ba776-216">`style` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="ba776-217">`style`参数将使得此方法重载有用`s`时数字系统 （十进制或十六进制） 由包含的字符串表示形式的十六进制值，`s`仅在运行时，已知时，或者当你想要禁止的空白区域或正负符号`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-217">The `style` parameter makes this method overload useful when `s` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `s` is known only at run time, or when you want to disallow white space or a sign symbol in `s`.</span></span>  
  
 <span data-ttu-id="ba776-218">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="ba776-218">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ba776-219">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="ba776-219">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="ba776-220">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="ba776-220">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ba776-221">如果`style`包括<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`参数可能包含下列元素：</span><span class="sxs-lookup"><span data-stu-id="ba776-221">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="ba776-222">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ba776-222">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="ba776-223">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-223">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ba776-224">元素</span><span class="sxs-lookup"><span data-stu-id="ba776-224">Element</span></span>|<span data-ttu-id="ba776-225">描述</span><span class="sxs-lookup"><span data-stu-id="ba776-225">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ba776-226">*ws*</span><span class="sxs-lookup"><span data-stu-id="ba776-226">*ws*</span></span>|<span data-ttu-id="ba776-227">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="ba776-227">Optional white space.</span></span> <span data-ttu-id="ba776-228">空格可以出现在开始`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-228">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ba776-229">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="ba776-229">A culture-specific currency symbol.</span></span> <span data-ttu-id="ba776-230">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="ba776-230">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="ba776-231">当前区域性的货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-231">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-232">*sign*</span><span class="sxs-lookup"><span data-stu-id="ba776-232">*sign*</span></span>|<span data-ttu-id="ba776-233">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="ba776-233">An optional sign.</span></span> <span data-ttu-id="ba776-234">符号可以出现在开始`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-234">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ba776-235">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-235">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ba776-236">但是，可以仅使用零; 使用负号符号否则，该方法将引发<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="ba776-236">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="ba776-237">*digits*</span><span class="sxs-lookup"><span data-stu-id="ba776-237">*digits*</span></span><br /><br /> <span data-ttu-id="ba776-238">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ba776-238">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="ba776-239">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="ba776-239">*exponential_digits*</span></span>|<span data-ttu-id="ba776-240">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-240">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="ba776-241">有关*fractional_digits*，但只数字 0 有效。</span><span class="sxs-lookup"><span data-stu-id="ba776-241">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="ba776-242">*，*</span><span class="sxs-lookup"><span data-stu-id="ba776-242">*,*</span></span>|<span data-ttu-id="ba776-243">区域性特定的组分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="ba776-243">A culture-specific group separator symbol.</span></span> <span data-ttu-id="ba776-244">当前区域性的组分隔符可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-244">The current culture's group separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-245">*.*</span><span class="sxs-lookup"><span data-stu-id="ba776-245">*.*</span></span>|<span data-ttu-id="ba776-246">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="ba776-246">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ba776-247">当前区域性的小数点符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-247">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ba776-248">仅数字 0 可以显示为分析操作才能成功; 一个小数数字如果*fractional_digits*包括任何其他数字<xref:System.FormatException>引发。</span><span class="sxs-lookup"><span data-stu-id="ba776-248">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="ba776-249">E</span><span class="sxs-lookup"><span data-stu-id="ba776-249">E</span></span>|<span data-ttu-id="ba776-250">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="ba776-250">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="ba776-251">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-251">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-252">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ba776-252">*hexdigits*</span></span>|<span data-ttu-id="ba776-253">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="ba776-253">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="ba776-254">仅为数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>样式) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="ba776-254">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="ba776-255">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能会存在，但不是需要为存在于输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-255">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="ba776-256">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-256">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="ba776-257">`NumberStyles` 值</span><span class="sxs-lookup"><span data-stu-id="ba776-257">`NumberStyles` value</span></span>|<span data-ttu-id="ba776-258">元素允许在`s`除数字之外</span><span class="sxs-lookup"><span data-stu-id="ba776-258">Elements permitted in `s` in addition to digits</span></span>|  
|--------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="ba776-259">*数字*仅元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-259">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="ba776-260">小数点 （.） 和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-260">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="ba776-261">"E"或"E"字符，它指示指数记数法，连同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="ba776-261">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="ba776-262">*Ws*起始处的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-262">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="ba776-263">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-263">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="ba776-264">*登录*起始处的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-264">The *sign* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="ba776-265">*登录*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-265">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="ba776-266">*登录*在括号内包含的数字值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-266">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="ba776-267">组分隔符 （，） 元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-267">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="ba776-268">货币 （$） 元素中。</span><span class="sxs-lookup"><span data-stu-id="ba776-268">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="ba776-269">所有元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-269">All elements.</span></span> <span data-ttu-id="ba776-270">但是，`s`不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-270">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="ba776-271">*Ws*开头或末尾的元素`s`，*登录*开头的`s`，和小数点 (*。*) 符号。</span><span class="sxs-lookup"><span data-stu-id="ba776-271">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="ba776-272">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="ba776-272">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="ba776-273">`ws`， `sign`，组分隔符 (*，*)，和小数点 (*。*) 元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-273">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="ba776-274">所有元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-274">All elements.</span></span> <span data-ttu-id="ba776-275">但是，`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-275">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="ba776-276">与其他不同<xref:System.Globalization.NumberStyles>值，该值允许，但不是需要，特定样式中的元素是否存在`s`、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>样式值意味着中的单个数字字符`s`总是被解释为十六进制字符。</span><span class="sxs-lookup"><span data-stu-id="ba776-276">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `s`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `s` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="ba776-277">有效的十六进制字符为 0-9、 A-F 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="ba776-277">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="ba776-278">一个前缀，例如"0x"不支持，并导致分析操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba776-278">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="ba776-279">其他标志只有可以与组合`style`参数<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ba776-279">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ba776-280">(<xref:System.Globalization.NumberStyles>枚举包含复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="ba776-280">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba776-281">如果`s`是的字符串表示的十六进制数，则无法将前面添加的任何修饰符 (如`0x`或`&h`) 用于将其识别为十六进制数。</span><span class="sxs-lookup"><span data-stu-id="ba776-281">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="ba776-282">这将导致转换失败。</span><span class="sxs-lookup"><span data-stu-id="ba776-282">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="ba776-283">`s`通过使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-283">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="ba776-284">若要指定分析操作使用其格式设置信息的区域性，调用<xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>重载。</span><span class="sxs-lookup"><span data-stu-id="ba776-284">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba776-285">下面的示例尝试分析字符串数组中的每个元素，方法是使用大量的<xref:System.Globalization.NumberStyles>值。</span><span class="sxs-lookup"><span data-stu-id="ba776-285">The following example tries to parse each element in a string array by using a number of <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parseex2.cs#2)]
 [!code-vb[System.UInt64.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parseex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba776-286"><paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-286">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba776-287"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba776-287"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="ba776-288">或</span><span class="sxs-lookup"><span data-stu-id="ba776-288">-or-</span></span>  
  
 <span data-ttu-id="ba776-289"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="ba776-289"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ba776-290"><paramref name="s" /> 参数的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-290">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ba776-291"><paramref name="s" /> 参数表示小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-291">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span>  
  
 <span data-ttu-id="ba776-292">或</span><span class="sxs-lookup"><span data-stu-id="ba776-292">-or-</span></span>  
  
 <span data-ttu-id="ba776-293"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="ba776-293"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="Overload:System.UInt64.ToString" />
        <altmember cref="Overload:System.UInt64.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ba776-294">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="ba776-294">A string that represents the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="ba776-295">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="ba776-295">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="ba776-296">将指定区域性特定格式的数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-296">Converts the string representation of a number in a specified culture-specific format to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="ba776-297">与 <paramref name="s" /> 中指定的数字等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-297">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-298">此重载<xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29>方法通常用于将可在多个方面与格式设置的文本转换<xref:System.UInt64>值。</span><span class="sxs-lookup"><span data-stu-id="ba776-298">This overload of the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="ba776-299">例如，它可以用于将转换到 HTML 文本框中为数值用户输入的文本。</span><span class="sxs-lookup"><span data-stu-id="ba776-299">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="ba776-300">`s`参数包含一个数字的窗体：</span><span class="sxs-lookup"><span data-stu-id="ba776-300">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="ba776-301">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="ba776-301">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="ba776-302">方括号 （[和]） 中是可选的项。</span><span class="sxs-lookup"><span data-stu-id="ba776-302">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ba776-303">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-303">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ba776-304">元素</span><span class="sxs-lookup"><span data-stu-id="ba776-304">Element</span></span>|<span data-ttu-id="ba776-305">描述</span><span class="sxs-lookup"><span data-stu-id="ba776-305">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ba776-306">*ws*</span><span class="sxs-lookup"><span data-stu-id="ba776-306">*ws*</span></span>|<span data-ttu-id="ba776-307">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="ba776-307">Optional white space.</span></span>|  
|<span data-ttu-id="ba776-308">*sign*</span><span class="sxs-lookup"><span data-stu-id="ba776-308">*sign*</span></span>|<span data-ttu-id="ba776-309">可选的正号或负号如果`s`表示零的值。</span><span class="sxs-lookup"><span data-stu-id="ba776-309">An optional positive sign, or a negative sign if `s` represents the value zero.</span></span>|  
|<span data-ttu-id="ba776-310">*digits*</span><span class="sxs-lookup"><span data-stu-id="ba776-310">*digits*</span></span>|<span data-ttu-id="ba776-311">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="ba776-311">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="ba776-312">使用解释 s 参数<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="ba776-312">The s parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="ba776-313">无符号的整数值的十进制数字，除了允许仅前导空格和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="ba776-313">In addition to the unsigned integer value's decimal digits, only leading and trailing spaces along with a leading sign is allowed.</span></span> <span data-ttu-id="ba776-314">(如果存在，负号，则`s`必须表示的值为零或该方法将引发<xref:System.OverflowException>。)若要显式定义的样式元素以及可出现在区域性特定格式设置信息`s`，使用<xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-314">(If the negative sign is present, `s` must represent a value of zero, or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="ba776-315">`provider`参数是<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>对象，提供区域性特定信息的格式`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-315">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="ba776-316">有三种方法使用`provider`参数来提供到分析操作的自定义格式设置信息：</span><span class="sxs-lookup"><span data-stu-id="ba776-316">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="ba776-317">你可以将传递的实际<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-317">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="ba776-318">(其实现<xref:System.IFormatProvider.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="ba776-318">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="ba776-319">你可以将传递<xref:System.Globalization.CultureInfo>指定的格式设置将使用的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-319">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="ba776-320">其<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性提供格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="ba776-320">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="ba776-321">你可以将自定义传递<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-321">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="ba776-322">其<xref:System.IFormatProvider.GetFormat%2A>方法必须实例化并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-322">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ba776-323">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="ba776-323">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba776-324">下面的示例是按钮单击事件处理程序的 Web 窗体。</span><span class="sxs-lookup"><span data-stu-id="ba776-324">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="ba776-325">它使用返回的数组<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>属性来确定用户的区域设置。</span><span class="sxs-lookup"><span data-stu-id="ba776-325">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="ba776-326">它然后实例化<xref:System.Globalization.CultureInfo>对应于该区域设置的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-326">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="ba776-327"><xref:System.Globalization.NumberFormatInfo>对象所属的<xref:System.Globalization.CultureInfo>对象随后会传递给<xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29>方法将用户输入转换为<xref:System.UInt64>值。</span><span class="sxs-lookup"><span data-stu-id="ba776-327">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.UInt64.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.UInt64> value.</span></span>  
  
 [!code-csharp[ParseMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#1)]
 [!code-vb[ParseMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba776-328"><paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-328">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ba776-329"><paramref name="s" /> 参数的样式不正确。</span><span class="sxs-lookup"><span data-stu-id="ba776-329">The <paramref name="s" /> parameter is not in the correct style.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ba776-330"><paramref name="s" /> 参数表示小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-330">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt64.ToString" />
        <altmember cref="Overload:System.UInt64.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As ULong" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static ulong Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ba776-331">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="ba776-331">A string that represents the number to convert.</span></span> <span data-ttu-id="ba776-332">该字符串使用由 <c>style</c> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="ba776-332">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="ba776-333">枚举值的按位组合，用于指示可出现在 <c>s</c> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-333">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="ba776-334">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-334">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="ba776-335">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="ba776-335">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="ba776-336">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-336">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="ba776-337">与 <paramref name="s" /> 中指定的数字等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-337">A 64-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-338">`style`参数定义中允许的样式元素 （如空白或正整数或负号符号）`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-338">The `style` parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ba776-339">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="ba776-339">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="ba776-340">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="ba776-340">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ba776-341">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="ba776-341">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="ba776-342">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="ba776-342">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ba776-343">如果`style`包括<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="ba776-343">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ba776-344">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ba776-344">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="ba776-345">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-345">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ba776-346">元素</span><span class="sxs-lookup"><span data-stu-id="ba776-346">Element</span></span>|<span data-ttu-id="ba776-347">描述</span><span class="sxs-lookup"><span data-stu-id="ba776-347">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ba776-348">*ws*</span><span class="sxs-lookup"><span data-stu-id="ba776-348">*ws*</span></span>|<span data-ttu-id="ba776-349">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="ba776-349">Optional white space.</span></span> <span data-ttu-id="ba776-350">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-350">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ba776-351">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="ba776-351">A culture-specific currency symbol.</span></span> <span data-ttu-id="ba776-352">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>属性<xref:System.Globalization.NumberFormatInfo>返回的对象<xref:System.IFormatProvider.GetFormat%2A>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-352">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="ba776-353">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-353">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-354">*sign*</span><span class="sxs-lookup"><span data-stu-id="ba776-354">*sign*</span></span>|<span data-ttu-id="ba776-355">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="ba776-355">An optional sign.</span></span> <span data-ttu-id="ba776-356">(该方法将引发<xref:System.OverflowException>如果`s`包括一个负号和表示的非零数字。)符号可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现的末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-356">(The method throws an <xref:System.OverflowException> if `s` includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ba776-357">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-357">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-358">*digits*</span><span class="sxs-lookup"><span data-stu-id="ba776-358">*digits*</span></span>|<span data-ttu-id="ba776-359">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-359">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="ba776-360">*.*</span><span class="sxs-lookup"><span data-stu-id="ba776-360">*.*</span></span>|<span data-ttu-id="ba776-361">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="ba776-361">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ba776-362">当前区域性的小数点符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-362">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-363">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ba776-363">*fractional_digits*</span></span>|<span data-ttu-id="ba776-364">一个或多个出现的数字 0-9 如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志或如果它不为 0 的数字的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="ba776-364">One or more occurrences of the digit 0-9 if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, or one or more occurrences of the digit 0 if it does not.</span></span> <span data-ttu-id="ba776-365">小数位数可以出现在`s`才`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-365">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-366">E</span><span class="sxs-lookup"><span data-stu-id="ba776-366">E</span></span>|<span data-ttu-id="ba776-367">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="ba776-367">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="ba776-368">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-368">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-369">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="ba776-369">*exponential_digits*</span></span>|<span data-ttu-id="ba776-370">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-370">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="ba776-371">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-371">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-372">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ba776-372">*hexdigits*</span></span>|<span data-ttu-id="ba776-373">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="ba776-373">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="ba776-374">仅为十进制数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>样式) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="ba776-374">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="ba776-375">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能会存在，但不是要求必须存在，此输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-375">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="ba776-376">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-376">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="ba776-377">非复合`NumberStyles`值</span><span class="sxs-lookup"><span data-stu-id="ba776-377">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="ba776-378">元素允许在`s`除数字之外</span><span class="sxs-lookup"><span data-stu-id="ba776-378">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="ba776-379">仅为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-379">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="ba776-380">小数点 (*。*) 和*fractional_digits*元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-380">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="ba776-381">但是，如果样式不包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志， *fractional_digits*必须包含仅一个或多个数字 0; 否则为<xref:System.OverflowException>引发。</span><span class="sxs-lookup"><span data-stu-id="ba776-381">However, if style does not include the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, *fractional_digits* must consist of only one or more 0 digits; otherwise, an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="ba776-382">"E"或"E"字符，它指示指数记数法，连同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="ba776-382">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="ba776-383">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-383">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="ba776-384">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-384">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="ba776-385">之前登录*数字*。</span><span class="sxs-lookup"><span data-stu-id="ba776-385">A sign before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="ba776-386">登录后的*数字*。</span><span class="sxs-lookup"><span data-stu-id="ba776-386">A sign after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="ba776-387">之前和之后的括号*数字*以指示负值。</span><span class="sxs-lookup"><span data-stu-id="ba776-387">Parentheses before and after *digits* to indicate a negative value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="ba776-388">组分隔符 (*，*) 元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-388">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="ba776-389">货币 (*$*) 元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-389">The currency (*$*) element.</span></span>|  
  
 <span data-ttu-id="ba776-390">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用标志，`s`必须是十六进制值。</span><span class="sxs-lookup"><span data-stu-id="ba776-390">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="ba776-391">有效的十六进制字符为 0-9、 A-F 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="ba776-391">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="ba776-392">一个前缀，例如"0x"不支持，并导致分析操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba776-392">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="ba776-393">仅其他标志，可以与它组合为<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ba776-393">The only other flags that can be combined with it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ba776-394">(<xref:System.Globalization.NumberStyles>枚举包含复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="ba776-394">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba776-395">如果`s`参数的值的字符串表示形式的十六进制数，则无法前面添加的任何修饰符 (如`0x`或`&h`) 用于将其识别为十六进制数。</span><span class="sxs-lookup"><span data-stu-id="ba776-395">If the `s` parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="ba776-396">这将导致分析操作引发异常。</span><span class="sxs-lookup"><span data-stu-id="ba776-396">This causes the parse operation to throw an exception.</span></span>  
  
 <span data-ttu-id="ba776-397">`provider`参数是<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>对象，提供区域性特定信息的格式`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-397">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="ba776-398">有三种方法使用`provider`参数来提供到分析操作的自定义格式设置信息：</span><span class="sxs-lookup"><span data-stu-id="ba776-398">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="ba776-399">你可以将传递的实际<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-399">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="ba776-400">(其实现<xref:System.IFormatProvider.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="ba776-400">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="ba776-401">你可以将传递<xref:System.Globalization.CultureInfo>指定的格式设置将使用的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-401">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="ba776-402">其<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性提供格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="ba776-402">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="ba776-403">你可以将自定义传递<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-403">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="ba776-404">其<xref:System.IFormatProvider.GetFormat%2A>方法必须实例化并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-404">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ba776-405">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>对象使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="ba776-405">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba776-406">下面的示例使用<xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法将各种字符串表示形式之间的数字转换为 64 位无符号的整数值。</span><span class="sxs-lookup"><span data-stu-id="ba776-406">The following example uses the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to convert various string representations of numbers to 64-bit unsigned integer values.</span></span>  
  
 [!code-csharp[System.UInt64.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.parse/cs/parseex4.cs#4)]
 [!code-vb[System.UInt64.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.parse/vb/parseex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba776-407"><paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-407">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba776-408"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba776-408"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="ba776-409">或</span><span class="sxs-lookup"><span data-stu-id="ba776-409">-or-</span></span>  
  
 <span data-ttu-id="ba776-410"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="ba776-410"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ba776-411"><paramref name="s" /> 参数的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-411">The <paramref name="s" /> parameter is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ba776-412"><paramref name="s" /> 参数表示小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-412">The <paramref name="s" /> parameter represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span>  
  
 <span data-ttu-id="ba776-413">或</span><span class="sxs-lookup"><span data-stu-id="ba776-413">-or-</span></span>  
  
 <span data-ttu-id="ba776-414"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="ba776-414"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="Overload:System.UInt64.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-415">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-415">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba776-416">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-416">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="ba776-417">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-417"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-418">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-418">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba776-419">它只能在 <xref:System.UInt64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-419">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba776-420">建议的替代项是调用<xref:System.Convert.ToBoolean%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-420">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-421">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-421">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba776-422">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-422">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-423">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-423">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-424">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-424">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba776-425">它只能在 <xref:System.UInt64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-425">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba776-426">建议的替代项是调用<xref:System.Convert.ToByte%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-426">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-427">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-427">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba776-428">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-428">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-429">当前实例的值，已转换为 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-429">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-430">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-430">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba776-431">它只能在 <xref:System.UInt64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-431">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba776-432">建议的替代项是调用<xref:System.Convert.ToChar%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-432">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-433">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-433">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba776-434">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="ba776-434">This conversion is not supported.</span></span> <span data-ttu-id="ba776-435">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-435">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-436">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="ba776-436">This conversion is not supported.</span></span> <span data-ttu-id="ba776-437">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="ba776-437">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ba776-438">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="ba776-438">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-439">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-439">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba776-440">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-440">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-441">当前实例的值，已转换为 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-441">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-442">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-442">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba776-443">它只能在 <xref:System.UInt64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-443">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba776-444">建议的替代项是调用<xref:System.Convert.ToDecimal%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-444">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-445">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-445">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba776-446">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-446">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-447">当前实例的值，已转换为 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-447">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-448">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-448">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba776-449">它只能在 <xref:System.UInt64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-449">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba776-450">建议的替代项是调用<xref:System.Convert.ToDouble%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-450">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-451">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-451">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba776-452">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-452">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-453">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-453">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-454">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-454">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba776-455">它只能在 <xref:System.UInt64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-455">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba776-456">建议的替代项是调用<xref:System.Convert.ToInt16%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-456">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-457">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-457">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba776-458">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-458">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-459">当前实例的值，已转换为 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-459">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-460">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-460">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba776-461">它只能在 <xref:System.UInt64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-461">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba776-462">建议的替代项是调用<xref:System.Convert.ToInt32%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-462">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-463">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-463">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba776-464">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-464">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-465">当前实例的值，已转换为 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-465">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-466">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-466">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba776-467">它只能在 <xref:System.UInt64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-467">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba776-468">建议的替代项是调用<xref:System.Convert.ToInt64%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-468">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-469">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-469">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba776-470">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-470">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-471">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-471">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-472">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-472">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba776-473">它只能在 <xref:System.UInt64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-473">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba776-474">建议的替代项是调用<xref:System.Convert.ToSByte%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-474">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-475">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-475">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba776-476">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-476">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-477">当前实例的值，已转换为 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-477">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-478">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-478">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba776-479">它只能在 <xref:System.UInt64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-479">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba776-480">建议的替代项是调用<xref:System.Convert.ToSingle%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-480">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ba776-481">此 <see cref="T:System.UInt64" /> 值要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="ba776-481">The type to which to convert this <see cref="T:System.UInt64" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="ba776-482">一个 <see cref="T:System.IFormatProvider" /> 实现，提供有关返回值格式的信息。</span><span class="sxs-lookup"><span data-stu-id="ba776-482">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="ba776-483">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-483">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-484">当前实例的值，已转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-484">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-485">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-485">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba776-486">它只能在 <xref:System.UInt64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-486">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba776-487">建议的替代项是调用`static`(`Shared`在 Visual Basic 中)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-487">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-488">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-488">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba776-489">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-489">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-490">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-490">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-491">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-491">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba776-492">它只能在 <xref:System.UInt64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-492">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba776-493">建议的替代项是调用<xref:System.Convert.ToUInt16%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-493">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-494">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-494">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba776-495">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-495">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-496">当前实例的值，已转换为 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-496">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-497">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-497">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba776-498">它只能在 <xref:System.UInt64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-498">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba776-499">建议的替代项是调用<xref:System.Convert.ToUInt32%28System.UInt64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-499">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-500">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-500">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba776-501">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-501">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba776-502">当前实例的值，未更改。</span><span class="sxs-lookup"><span data-stu-id="ba776-502">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-503">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-503">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba776-504">它只能在 <xref:System.UInt64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-504">It can be used only when the <xref:System.UInt64> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba776-505">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="ba776-505">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba776-506">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="ba776-506">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="ba776-507">此实例的值的字符串表示形式，由一系列从 0 到 9 之间的数字组成，不包含符号或前导零。</span><span class="sxs-lookup"><span data-stu-id="ba776-507">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-508"><xref:System.UInt64.ToString>方法格式<xref:System.UInt64>值在默认的 （"G"或常规） 中使用的格式<xref:System.Globalization.NumberFormatInfo>当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-508">The <xref:System.UInt64.ToString> method formats a <xref:System.UInt64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="ba776-509">如果你想要指定其他文件格式或区域性，使用的其他重载<xref:System.UInt64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ba776-509">If you want to specify a different format or culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ba776-510">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="ba776-510">To use format</span></span>|<span data-ttu-id="ba776-511">区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-511">For culture</span></span>|<span data-ttu-id="ba776-512">使用的重载</span><span class="sxs-lookup"><span data-stu-id="ba776-512">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ba776-513">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="ba776-513">Default ("G") format</span></span>|<span data-ttu-id="ba776-514">特定区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-514">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="ba776-515">特定的格式</span><span class="sxs-lookup"><span data-stu-id="ba776-515">A specific format</span></span>|<span data-ttu-id="ba776-516">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-516">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
|<span data-ttu-id="ba776-517">特定的格式</span><span class="sxs-lookup"><span data-stu-id="ba776-517">A specific format</span></span>|<span data-ttu-id="ba776-518">特定区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-518">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
   
  
## Examples  
 <span data-ttu-id="ba776-519">下面的示例显示<xref:System.UInt64>通过使用默认值<xref:System.UInt64.ToString>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-519">The following example displays a <xref:System.UInt64> value by using the default <xref:System.UInt64.ToString> method.</span></span> <span data-ttu-id="ba776-520">它还显示的字符串表示形式<xref:System.UInt64>通过使用某些标准格式说明符得到的值。</span><span class="sxs-lookup"><span data-stu-id="ba776-520">It also displays the string representations of the <xref:System.UInt64> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="ba776-521">示例使用 EN-US 区域性的格式设置约定来显示。</span><span class="sxs-lookup"><span data-stu-id="ba776-521">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.UInt64.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba776-522">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-522">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="ba776-523">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="ba776-523">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="ba776-524">此实例的值的字符串表示形式，由范围从 0 到 9 的数字序列组成，不包含符号或前导零。</span><span class="sxs-lookup"><span data-stu-id="ba776-524">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-525"><xref:System.UInt64.ToString%28System.IFormatProvider%29>方法格式<xref:System.UInt64>值在默认的 （"G"或常规） 中使用的格式<xref:System.Globalization.NumberFormatInfo>指定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-525">The <xref:System.UInt64.ToString%28System.IFormatProvider%29> method formats a <xref:System.UInt64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="ba776-526">如果你想要指定不同的格式或当前区域性，使用的其他重载<xref:System.UInt64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ba776-526">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ba776-527">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="ba776-527">To use format</span></span>|<span data-ttu-id="ba776-528">区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-528">For culture</span></span>|<span data-ttu-id="ba776-529">使用的重载</span><span class="sxs-lookup"><span data-stu-id="ba776-529">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ba776-530">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="ba776-530">Default ("G") format</span></span>|<span data-ttu-id="ba776-531">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-531">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="ba776-532">特定的格式</span><span class="sxs-lookup"><span data-stu-id="ba776-532">A specific format</span></span>|<span data-ttu-id="ba776-533">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-533">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
|<span data-ttu-id="ba776-534">特定的格式</span><span class="sxs-lookup"><span data-stu-id="ba776-534">A specific format</span></span>|<span data-ttu-id="ba776-535">特定区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-535">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="ba776-536">`provider`参数是<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-536">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="ba776-537">其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供区域性特定格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-537">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="ba776-538">但是，没有一个属性的<xref:System.Globalization.NumberFormatInfo>使用通用数值格式说明符 ("G") 格式设置时使用。</span><span class="sxs-lookup"><span data-stu-id="ba776-538">However, none of the properties of the <xref:System.Globalization.NumberFormatInfo> are used when formatting with the general numeric format specifier ("G").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba776-539">下面的示例通过使用多个格式提供程序，其中包括一个用于固定区域性设置 64 位有符号的整数值。</span><span class="sxs-lookup"><span data-stu-id="ba776-539">The following example formats a 64-bit signed integer value by using several format providers, including one for the invariant culture.</span></span> <span data-ttu-id="ba776-540">该示例的输出阐释带格式的字符串返回的<xref:System.UInt64.ToString%28System.IFormatProvider%29>方法无论是相同的格式提供程序。</span><span class="sxs-lookup"><span data-stu-id="ba776-540">The output from the example illustrates that the formatted string returned by the <xref:System.UInt64.ToString%28System.IFormatProvider%29> method is the same regardless of the format provider.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring2.cs#2)]
 [!code-vb[System.UInt64.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="ba776-541">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="ba776-541">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="ba776-542">使用指定的格式将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="ba776-542">Converts the numeric value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="ba776-543">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="ba776-543">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-544"><xref:System.UInt64.ToString%28System.String%29>方法格式<xref:System.UInt64>中通过使用指定的格式值<xref:System.Globalization.NumberFormatInfo>对象，表示当前区域性的约定。</span><span class="sxs-lookup"><span data-stu-id="ba776-544">The <xref:System.UInt64.ToString%28System.String%29> method formats a <xref:System.UInt64> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="ba776-545">如果你想要使用默认值 （"G"或常规） 格式或指定不同的区域性，请使用其他重载的<xref:System.UInt64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ba776-545">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ba776-546">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="ba776-546">To use format</span></span>|<span data-ttu-id="ba776-547">区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-547">For culture</span></span>|<span data-ttu-id="ba776-548">使用的重载</span><span class="sxs-lookup"><span data-stu-id="ba776-548">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ba776-549">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="ba776-549">Default ("G") format</span></span>|<span data-ttu-id="ba776-550">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-550">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="ba776-551">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="ba776-551">Default ("G") format</span></span>|<span data-ttu-id="ba776-552">特定区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-552">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="ba776-553">特定的格式</span><span class="sxs-lookup"><span data-stu-id="ba776-553">A specific format</span></span>|<span data-ttu-id="ba776-554">特定区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-554">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="ba776-555">`format`参数可以是任何有效[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)，或的任意组合[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="ba776-555">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="ba776-556">如果`format`等同于<xref:System.String.Empty?displayProperty=nameWithType>或`null`，当前的返回值<xref:System.UInt64>对象使用常规格式说明符 ("G") 进行格式化。</span><span class="sxs-lookup"><span data-stu-id="ba776-556">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt64> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="ba776-557">如果`format`是任何其他值，该方法将引发<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="ba776-557">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="ba776-558">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="ba776-558">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="ba776-559">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="ba776-559">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="ba776-560">有关.NET Framework 中的格式设置支持的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="ba776-560">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="ba776-561">返回字符串的格式由<xref:System.Globalization.NumberFormatInfo>为当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-561">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="ba776-562">具体取决于`format`参数，此对象控制如组分隔符符号和输出字符串中的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="ba776-562">Depending on the `format` parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string.</span></span> <span data-ttu-id="ba776-563">若要提供区域性而非当前区域性的格式设置信息，请调用<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>重载。</span><span class="sxs-lookup"><span data-stu-id="ba776-563">To provide formatting information for cultures other than the current culture, call the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba776-564">下面的示例显示了通过使用每个标准格式字符串和某些自定义格式字符串的 64 位无符号的整数值。</span><span class="sxs-lookup"><span data-stu-id="ba776-564">The following example displays a 64-bit unsigned integer value by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring3.cs#3)]
 [!code-vb[System.UInt64.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="ba776-565"><paramref name="format" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="ba776-565">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="ba776-566">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="ba776-566">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="ba776-567">一个对象，它提供有关此实例的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="ba776-567">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="ba776-568">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="ba776-568">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="ba776-569">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="ba776-569">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-570"><xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>方法格式<xref:System.UInt64>中通过使用指定的格式值<xref:System.Globalization.NumberFormatInfo>指定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-570">The <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.UInt64> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="ba776-571">如果你想要使用默认格式或区域性设置，使用的其他重载<xref:System.UInt64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ba776-571">If you want to use default format or culture settings, use the other overloads of the <xref:System.UInt64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ba776-572">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="ba776-572">To use format</span></span>|<span data-ttu-id="ba776-573">区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-573">For culture</span></span>|<span data-ttu-id="ba776-574">使用的重载</span><span class="sxs-lookup"><span data-stu-id="ba776-574">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ba776-575">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="ba776-575">Default ("G") format</span></span>|<span data-ttu-id="ba776-576">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-576">Default (current) culture</span></span>|<xref:System.UInt64.ToString>|  
|<span data-ttu-id="ba776-577">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="ba776-577">Default ("G") format</span></span>|<span data-ttu-id="ba776-578">特定区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-578">A specific culture</span></span>|<xref:System.UInt64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="ba776-579">特定的格式</span><span class="sxs-lookup"><span data-stu-id="ba776-579">A specific format</span></span>|<span data-ttu-id="ba776-580">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="ba776-580">Default (current) culture</span></span>|<xref:System.UInt64.ToString%28System.String%29>|  
  
 <span data-ttu-id="ba776-581">`format`参数可以是任何有效[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)，或的任意组合[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="ba776-581">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="ba776-582">如果`format`等同于<xref:System.String.Empty?displayProperty=nameWithType>或`null`，当前的返回值<xref:System.UInt64>对象使用常规格式说明符 ("G") 进行格式化。</span><span class="sxs-lookup"><span data-stu-id="ba776-582">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt64> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="ba776-583">如果`format`是任何其他值，该方法将引发<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="ba776-583">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="ba776-584">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="ba776-584">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="ba776-585">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="ba776-585">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="ba776-586">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="ba776-586">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="ba776-587">`provider`参数是<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-587">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="ba776-588">其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供此方法返回的字符串的格式的区域性特定信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-588">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="ba776-589">当<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>调用方法时，它调用`provider`参数的<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法并将其传递<xref:System.Type>对象，表示<xref:System.Globalization.NumberFormatInfo>类型。</span><span class="sxs-lookup"><span data-stu-id="ba776-589">When the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="ba776-590"><xref:System.IFormatProvider.GetFormat%2A>方法然后返回<xref:System.Globalization.NumberFormatInfo>对象，提供信息的格式设置当前<xref:System.UInt64>值，如组分隔符符号或小数点符号。</span><span class="sxs-lookup"><span data-stu-id="ba776-590">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the current <xref:System.UInt64> value, such as the group separator symbol or the decimal point symbol.</span></span> <span data-ttu-id="ba776-591">有三种方法使用`provider`参数来提供到的格式设置信息<xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29>方法：</span><span class="sxs-lookup"><span data-stu-id="ba776-591">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.UInt64.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="ba776-592">你可以将传递<xref:System.Globalization.CultureInfo>表示的区域性的提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-592">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="ba776-593">其<xref:System.Globalization.CultureInfo.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供该区域性的数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-593">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="ba776-594">你可以将传递的实际<xref:System.Globalization.NumberFormatInfo>提供数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-594">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="ba776-595">(其实现<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="ba776-595">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="ba776-596">你可以传递的自定义对象，实现<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="ba776-596">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="ba776-597">其<xref:System.IFormatProvider.GetFormat%2A>方法实例化，并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-597">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ba776-598">如果`provider`是`null`，返回字符串的格式设置将基于<xref:System.Globalization.NumberFormatInfo>当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-598">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba776-599">下面的示例显示一个 32 位无符号的整数值，通过使用标准数字格式说明符和大量的特定<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-599">The following example displays a 32-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <xref:System.Globalization.CultureInfo> objects.</span></span>  
  
 [!code-csharp[System.UInt64.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tostring/cs/tostring4.cs#4)]
 [!code-vb[System.UInt64.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tostring/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="ba776-600"><paramref name="format" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="ba776-600">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba776-601">尝试将数字的字符串表示形式转换为等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-601">Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent.</span></span> <span data-ttu-id="ba776-602">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="ba776-602">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.UInt64.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.ReadOnlySpan{System.Char},System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.UInt64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.String,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.UInt64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ba776-603">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="ba776-603">A string that represents the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="ba776-604">当此方法返回时，如果转换成功，则结果包含与 <c>s</c> 中所含数字等效的 64 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="ba776-604">When this method returns, contains the 64-bit unsigned integer value that is equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="ba776-605">如果 <c>s</c> 参数为 <see langword="null" /> 或为 <see cref="F:System.String.Empty" />、格式不正确，或者表示小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" /> 的数，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="ba776-605">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span> <span data-ttu-id="ba776-606">此参数未经初始化即进行传递；最初在 <c>result</c> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="ba776-606">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="ba776-607">尝试将数字的字符串表示形式转换为等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-607">Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent.</span></span> <span data-ttu-id="ba776-608">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="ba776-608">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="ba776-609">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-609"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-610"><xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29>方法就像是<xref:System.UInt64.Parse%28System.String%29>方法，但它不会引发异常，如果转换失败。</span><span class="sxs-lookup"><span data-stu-id="ba776-610">The <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> method is like the <xref:System.UInt64.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="ba776-611">此方法无需使用异常处理来测试是否<xref:System.FormatException>如果`s`无效，无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="ba776-611">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="ba776-612">`s`参数应为以下形式的十进制数字的字符串表示：</span><span class="sxs-lookup"><span data-stu-id="ba776-612">The `s` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="ba776-613">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ba776-613">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="ba776-614">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="ba776-614">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ba776-615">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-615">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ba776-616">元素</span><span class="sxs-lookup"><span data-stu-id="ba776-616">Element</span></span>|<span data-ttu-id="ba776-617">描述</span><span class="sxs-lookup"><span data-stu-id="ba776-617">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ba776-618">*ws*</span><span class="sxs-lookup"><span data-stu-id="ba776-618">*ws*</span></span>|<span data-ttu-id="ba776-619">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="ba776-619">Optional white space.</span></span>|  
|<span data-ttu-id="ba776-620">*sign*</span><span class="sxs-lookup"><span data-stu-id="ba776-620">*sign*</span></span>|<span data-ttu-id="ba776-621">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="ba776-621">An optional sign.</span></span> <span data-ttu-id="ba776-622">有效的符号字符由<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="ba776-622">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="ba776-623">*digits*</span><span class="sxs-lookup"><span data-stu-id="ba776-623">*digits*</span></span>|<span data-ttu-id="ba776-624">范围从 0 到 9 的十进制数字的序列。</span><span class="sxs-lookup"><span data-stu-id="ba776-624">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="ba776-625">`s`参数解释使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="ba776-625">The `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="ba776-626">十进制数字，除了允许仅前导空格和尾随空格带有前导符号。</span><span class="sxs-lookup"><span data-stu-id="ba776-626">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="ba776-627">若要显式定义可出现在的区域性特定格式设置信息的样式元素`s`，调用<xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29>方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-627">To explicitly define the style elements with the culture-specific formatting information that can be present in `s`, call the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba776-628">指定的字符串`s`参数不能包含任何组分隔符或小数分隔符，并且它不能具有小数部分。</span><span class="sxs-lookup"><span data-stu-id="ba776-628">The string specified by the `s` parameter cannot contain any group separators or decimal separator, and it cannot have a fractional portion.</span></span>  
  
 <span data-ttu-id="ba776-629">`s`使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-629">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="ba776-630">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ba776-630">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba776-631">此重载将解释中的所有位`s`为十进制数字的参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-631">This overload interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="ba776-632">若要分析的字符串表示形式的十六进制数，请调用<xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29>重载。</span><span class="sxs-lookup"><span data-stu-id="ba776-632">To parse the string representation of a hexadecimal number, call the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba776-633">下面的示例调用<xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29>对于字符串数组中每个元素执行一次的方法。</span><span class="sxs-lookup"><span data-stu-id="ba776-633">The following example calls the <xref:System.UInt64.TryParse%28System.String%2CSystem.UInt64%40%29> method once for each element in a string array.</span></span>  
  
 [!code-csharp[System.UInt64.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.UInt64.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <altmember cref="Overload:System.UInt64.Parse" />
        <altmember cref="Overload:System.UInt64.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out ulong result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt64 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ba776-634">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="ba776-634">A string that represents the number to convert.</span></span> <span data-ttu-id="ba776-635">该字符串使用由 <c>style</c> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="ba776-635">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="ba776-636">枚举值的按位组合，指示 <c>s</c> 允许使用的格式。</span><span class="sxs-lookup"><span data-stu-id="ba776-636">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span></span> <span data-ttu-id="ba776-637">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-637">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="ba776-638">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="ba776-638">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <param name="result"><span data-ttu-id="ba776-639">当此方法返回时，如果转换成功，则结果包含与 <c>s</c> 中所含数字等效的 64 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="ba776-639">When this method returns, contains the 64-bit unsigned integer value equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="ba776-640">如果 <c>s</c> 参数为 <see langword="null" /> 或为 <see cref="F:System.String.Empty" />、格式不符合 <c>style</c>，或表示的数小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="ba776-640">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, or represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span> <span data-ttu-id="ba776-641">此参数未经初始化即进行传递；最初在 <c>result</c> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="ba776-641">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="ba776-642">尝试将数字的指定样式和区域性特定格式的字符串表示形式转换为其等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="ba776-642">Tries to convert the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</span></span> <span data-ttu-id="ba776-643">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="ba776-643">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="ba776-644">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba776-644"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba776-645"><xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29>方法就像是<xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法，但它不会引发异常，如果转换失败。</span><span class="sxs-lookup"><span data-stu-id="ba776-645">The <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method is like the <xref:System.UInt64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="ba776-646">此方法无需使用异常处理来测试是否<xref:System.FormatException>如果`s`无效，无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="ba776-646">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="ba776-647">`style`参数定义中允许的样式元素 （如空白或正整数或负号）`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-647">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ba776-648">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="ba776-648">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="ba776-649">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="ba776-649">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ba776-650">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="ba776-650">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="ba776-651">方括号 （[和]） 中是可选的项。</span><span class="sxs-lookup"><span data-stu-id="ba776-651">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ba776-652">或者，如果`style`参数包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="ba776-652">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ba776-653">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ba776-653">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="ba776-654">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-654">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ba776-655">元素</span><span class="sxs-lookup"><span data-stu-id="ba776-655">Element</span></span>|<span data-ttu-id="ba776-656">描述</span><span class="sxs-lookup"><span data-stu-id="ba776-656">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ba776-657">*ws*</span><span class="sxs-lookup"><span data-stu-id="ba776-657">*ws*</span></span>|<span data-ttu-id="ba776-658">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="ba776-658">Optional white space.</span></span> <span data-ttu-id="ba776-659">空格可以出现在开始`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，或在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-659">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ba776-660">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="ba776-660">A culture-specific currency symbol.</span></span> <span data-ttu-id="ba776-661">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>属性<xref:System.Globalization.NumberFormatInfo>返回对象<xref:System.IFormatProvider.GetFormat%2A>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="ba776-661">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="ba776-662">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-662">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-663">*sign*</span><span class="sxs-lookup"><span data-stu-id="ba776-663">*sign*</span></span>|<span data-ttu-id="ba776-664">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="ba776-664">An optional sign.</span></span> <span data-ttu-id="ba776-665">符号可以出现在开始`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-665">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ba776-666">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-666">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ba776-667">但是，如果负号存在，`s`只能表示零值，使分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="ba776-667">However, if the negative sign is present, `s` can only represent the value zero for the parse operation to succeed.</span></span>|  
|<span data-ttu-id="ba776-668">*digits*</span><span class="sxs-lookup"><span data-stu-id="ba776-668">*digits*</span></span>|<span data-ttu-id="ba776-669">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-669">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="ba776-670">*，*</span><span class="sxs-lookup"><span data-stu-id="ba776-670">*,*</span></span>|<span data-ttu-id="ba776-671">特定于区域性的组分隔符。</span><span class="sxs-lookup"><span data-stu-id="ba776-671">A culture-specific group separator.</span></span> <span data-ttu-id="ba776-672">指定的区域性的组分隔符`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-672">The group separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-673">*.*</span><span class="sxs-lookup"><span data-stu-id="ba776-673">*.*</span></span>|<span data-ttu-id="ba776-674">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="ba776-674">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ba776-675">指定的区域性的小数点符号`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-675">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-676">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ba776-676">*fractional_digits*</span></span>|<span data-ttu-id="ba776-677">数字 0 的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="ba776-677">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="ba776-678">小数位数可以出现在`s`才`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-678">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-679">E</span><span class="sxs-lookup"><span data-stu-id="ba776-679">E</span></span>|<span data-ttu-id="ba776-680">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="ba776-680">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="ba776-681">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-681">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-682">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="ba776-682">*exponential_digits*</span></span>|<span data-ttu-id="ba776-683">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-683">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="ba776-684">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="ba776-684">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba776-685">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ba776-685">*hexdigits*</span></span>|<span data-ttu-id="ba776-686">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="ba776-686">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="ba776-687">仅为十进制数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>标志) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="ba776-687">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="ba776-688">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能会存在，但不是要求必须存在，此输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-688">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="ba776-689">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-689">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="ba776-690">非复合`NumberStyles`值</span><span class="sxs-lookup"><span data-stu-id="ba776-690">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="ba776-691">除数字之外的值中允许的元素</span><span class="sxs-lookup"><span data-stu-id="ba776-691">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="ba776-692">仅为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-692">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="ba776-693">小数点 (*。*) 和*fractional_digits*元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-693">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="ba776-694">但是， *fractional_digits*仅一个或多个数字 0 或该方法将返回必须组成`false`。</span><span class="sxs-lookup"><span data-stu-id="ba776-694">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="ba776-695">"E"或"E"字符，它指示指数记数法，连同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="ba776-695">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="ba776-696">如果`s`表示的数字在指数记数法，它不能有非零、 小数组件。</span><span class="sxs-lookup"><span data-stu-id="ba776-696">If `s` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="ba776-697">*Ws*起始处的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-697">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="ba776-698">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-698">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="ba776-699">*登录*元素之前*数字*。</span><span class="sxs-lookup"><span data-stu-id="ba776-699">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="ba776-700">*登录*元素的后面*数字*。</span><span class="sxs-lookup"><span data-stu-id="ba776-700">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="ba776-701">*登录*在括号内包含零个数值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-701">The *sign* element in the form of parentheses enclosing a zero numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="ba776-702">组分隔符 (*，*) 元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-702">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="ba776-703">货币 (*$*) 元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-703">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="ba776-704">所有元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-704">All elements.</span></span> <span data-ttu-id="ba776-705">但是，`s`不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-705">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="ba776-706">*Ws*开头或末尾的元素`s`，*登录*开头的`s`，和小数点 (*。*) 符号。</span><span class="sxs-lookup"><span data-stu-id="ba776-706">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="ba776-707">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="ba776-707">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="ba776-708">*Ws*，*登录*，组分隔符 (*，*)，和小数点 (*。*) 元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-708">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="ba776-709">所有元素。</span><span class="sxs-lookup"><span data-stu-id="ba776-709">All elements.</span></span> <span data-ttu-id="ba776-710">但是，`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="ba776-710">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="ba776-711">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用标志，`s`必须是十六进制值。</span><span class="sxs-lookup"><span data-stu-id="ba776-711">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="ba776-712">有效的十六进制字符为 0-9、 A-F 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="ba776-712">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="ba776-713">一个前缀，例如"0x"不支持，并导致分析操作失败。</span><span class="sxs-lookup"><span data-stu-id="ba776-713">A prefix such as "0x" is not supported and causes the parse operation to fail.</span></span> <span data-ttu-id="ba776-714">仅其他标志可出现在`style`是<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ba776-714">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ba776-715">(<xref:System.Globalization.NumberStyles>枚举具有复合样式， <xref:System.Globalization.NumberStyles.HexNumber>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="ba776-715">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba776-716">如果`s`是的字符串表示的十六进制数，则无法将前面添加的任何修饰符 (如`0x`或`&h`) 用于将其识别为十六进制数。</span><span class="sxs-lookup"><span data-stu-id="ba776-716">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="ba776-717">这将导致转换失败。</span><span class="sxs-lookup"><span data-stu-id="ba776-717">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="ba776-718">`provider`参数是<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="ba776-718">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="ba776-719">其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>对象，提供区域性特定信息的格式`s`。</span><span class="sxs-lookup"><span data-stu-id="ba776-719">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="ba776-720">`provider`参数可以是以下任何一个：</span><span class="sxs-lookup"><span data-stu-id="ba776-720">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="ba776-721">A<xref:System.Globalization.CultureInfo>表示的区域性的提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-721">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="ba776-722">其<xref:System.Globalization.CultureInfo.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供该区域性的数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-722">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="ba776-723">A<xref:System.Globalization.NumberFormatInfo>提供数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-723">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="ba776-724">(其实现<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="ba776-724">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="ba776-725">实现一个自定义对象<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="ba776-725">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="ba776-726">其<xref:System.IFormatProvider.GetFormat%2A>方法实例化，并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="ba776-726">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ba776-727">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>对象使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="ba776-727">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba776-728">下面的示例调用<xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29>与大量的不同的字符串的方法和<xref:System.Globalization.NumberStyles>值。</span><span class="sxs-lookup"><span data-stu-id="ba776-728">The following example calls the <xref:System.UInt64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt64%40%29> method with a number of different strings and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt64.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint64.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.UInt64.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint64.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.Parse(System.String)" />
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba776-729"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="ba776-729"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="ba776-730">或</span><span class="sxs-lookup"><span data-stu-id="ba776-730">-or-</span></span>  
  
 <span data-ttu-id="ba776-731"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="ba776-731"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.UInt64.Parse(System.String)" />
        <altmember cref="Overload:System.UInt64.Parse" />
        <altmember cref="Overload:System.UInt64.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>