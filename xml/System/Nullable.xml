<Type Name="Nullable" FullName="System.Nullable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9d44f8b4b203508bbd1f1bd7041595781bf9220" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39766040" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Nullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Nullable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Nullable" />
  <TypeSignature Language="VB.NET" Value="Public Class Nullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Nullable abstract sealed" />
  <TypeSignature Language="F#" Value="type Nullable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ed18f-101">支持可分配有 <see langword="null" /> 的值类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed18f-101">Supports a value type that can be assigned <see langword="null" />.</span>
      </span>
      <span data-ttu-id="ed18f-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed18f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed18f-103">一种类型称为可为 null，如果它可以分配一个值，或者可以分配`null`，这意味着该类型有没有任何值。</span><span class="sxs-lookup"><span data-stu-id="ed18f-103">A type is said to be nullable if it can be assigned a value or can be assigned `null`, which means the type has no value whatsoever.</span></span> <span data-ttu-id="ed18f-104">默认情况下，所有的引用类型，如<xref:System.String>，可以为 null，但所有值类型，如<xref:System.Int32>，不是。</span><span class="sxs-lookup"><span data-stu-id="ed18f-104">By default, all reference types, such as <xref:System.String>, are nullable, but all value types, such as <xref:System.Int32>, are not.</span></span>  
  
 <span data-ttu-id="ed18f-105">通过使用 C# 和 Visual Basic 中，在标记为可为 null 的值类型`?`后的值类型的表示法。</span><span class="sxs-lookup"><span data-stu-id="ed18f-105">In C# and Visual Basic, you mark a value type as nullable by using the `?` notation after the value type.</span></span> <span data-ttu-id="ed18f-106">例如， `int?` C# 中或`Integer?`在 Visual Basic 中声明了整数值类型，可以分配`null`。</span><span class="sxs-lookup"><span data-stu-id="ed18f-106">For example, `int?` in C# or `Integer?` in Visual Basic declares an integer value type that can be assigned `null`.</span></span>  
  
 <span data-ttu-id="ed18f-107"><xref:System.Nullable>类提供了补充支持<xref:System.Nullable%601>结构。</span><span class="sxs-lookup"><span data-stu-id="ed18f-107">The <xref:System.Nullable> class provides complementary support for the <xref:System.Nullable%601> structure.</span></span> <span data-ttu-id="ed18f-108"><xref:System.Nullable>类支持获取基础类型的为 null 的类型，并对其基础值类型可以为 null 的类型的比较和相等操作不支持泛型比较和相等运算。</span><span class="sxs-lookup"><span data-stu-id="ed18f-108">The <xref:System.Nullable> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.</span></span>  
  
## <a name="boxing-and-unboxing"></a><span data-ttu-id="ed18f-109">装箱和取消装箱</span><span class="sxs-lookup"><span data-stu-id="ed18f-109">Boxing and Unboxing</span></span>  
 <span data-ttu-id="ed18f-110">可以为 null 的类型进行装箱时，公共语言运行时自动框的基础值<xref:System.Nullable%601>对象，而不<xref:System.Nullable%601>对象本身。</span><span class="sxs-lookup"><span data-stu-id="ed18f-110">When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <xref:System.Nullable%601> object, not the <xref:System.Nullable%601> object itself.</span></span> <span data-ttu-id="ed18f-111">也就是说，如果<xref:System.Nullable%601.HasValue%2A>属性是`true`，内容<xref:System.Nullable%601.Value%2A>属性进行装箱。</span><span class="sxs-lookup"><span data-stu-id="ed18f-111">That is, if the <xref:System.Nullable%601.HasValue%2A> property is `true`, the contents of the <xref:System.Nullable%601.Value%2A> property is boxed.</span></span> <span data-ttu-id="ed18f-112">如果`HasValue`属性是`false`，`null`进行装箱。</span><span class="sxs-lookup"><span data-stu-id="ed18f-112">If the `HasValue` property is `false`, `null` is boxed.</span></span> <span data-ttu-id="ed18f-113">未装箱可以为 null 的类型的基础值时，公共语言运行时创建一个新<xref:System.Nullable%601>结构初始化为基础的值。</span><span class="sxs-lookup"><span data-stu-id="ed18f-113">When the underlying value of a nullable type is unboxed, the common language runtime creates a new <xref:System.Nullable%601> structure initialized to the underlying value.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Nullable`1" />
  </Docs>
  <Members>
    <Member MemberName="Compare&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int Compare&lt;T&gt; (Nullable&lt;T&gt; n1, Nullable&lt;T&gt; n2) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Nullable`1&lt;!!T&gt; n1, valuetype System.Nullable`1&lt;!!T&gt; n2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare(Of T As Structure) (n1 As Nullable(Of T), n2 As Nullable(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static int Compare(Nullable&lt;T&gt; n1, Nullable&lt;T&gt; n2);" />
      <MemberSignature Language="F#" Value="static member Compare : Nullable&lt;'T (requires 'T : struct)&gt; * Nullable&lt;'T (requires 'T : struct)&gt; -&gt; int (requires 'T : struct)" Usage="System.Nullable.Compare (n1, n2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="n1" Type="System.Nullable&lt;T&gt;" />
        <Parameter Name="n2" Type="System.Nullable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ed18f-114">基础值类型<c>n1</c>并<c>n2</c>参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-114">The underlying value type of the <c>n1</c> and <c>n2</c> parameters.</span>
          </span>
        </typeparam>
        <param name="n1">
          <span data-ttu-id="ed18f-115">
            <see cref="T:System.Nullable`1" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-115">A <see cref="T:System.Nullable`1" /> object.</span>
          </span>
        </param>
        <param name="n2">
          <span data-ttu-id="ed18f-116">
            <see cref="T:System.Nullable`1" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-116">A <see cref="T:System.Nullable`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed18f-117">比较两个 <see cref="T:System.Nullable`1" /> 对象的相对值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-117">Compares the relative values of two <see cref="T:System.Nullable`1" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed18f-118">一个整数，指示 <paramref name="n1" /> 和 <paramref name="n2" /> 参数的相对值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-118">An integer that indicates the relative values of the <paramref name="n1" /> and <paramref name="n2" /> parameters.</span>
          </span>
          <span data-ttu-id="ed18f-119">
            <list type="table">
              <listheader>
                <term> 返回值 </term>
                <description> 说明 </description>
              </listheader>
              <item>
                <term> 小于零 </term>
                <description>
                  <paramref name="n1" /> 的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />，<paramref name="n2" /> 的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />。或者，<paramref name="n1" /> 和 <paramref name="n2" /> 的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，<paramref name="n1" /> 的 <see cref="P:System.Nullable`1.Value" /> 属性值小于 <paramref name="n2" /> 的 <see cref="P:System.Nullable`1.Value" /> 属性。</description>
              </item>
              <item>
                <term> 零 </term>
                <description>
                  <paramref name="n1" /> 和 <paramref name="n2" /> 的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />。或者，<paramref name="n1" /> 和 <paramref name="n2" />的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，<paramref name="n1" /> 的 <see cref="P:System.Nullable`1.Value" /> 属性值等于 <paramref name="n2" /> 的 <see cref="P:System.Nullable`1.Value" /> 属性值。</description>
              </item>
              <item>
                <term> 大于零 </term>
                <description>
                  <paramref name="n1" /> 的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，<paramref name="n2" /> 的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />。或者，<paramref name="n1" /> 和 <paramref name="n2" /> 的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，<paramref name="n1" /> 的 <see cref="P:System.Nullable`1.Value" /> 属性值大于 <paramref name="n2" /> 的 <see cref="P:System.Nullable`1.Value" /> 属性值。</description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-119">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The <see cref="P:System.Nullable`1.HasValue" /> property for <paramref name="n1" /> is <see langword="false" />, and the <see cref="P:System.Nullable`1.HasValue" /> property for <paramref name="n2" /> is <see langword="true" />.  -or-  The <see cref="P:System.Nullable`1.HasValue" /> properties for <paramref name="n1" /> and <paramref name="n2" /> are <see langword="true" />, and the value of the <see cref="P:System.Nullable`1.Value" /> property for <paramref name="n1" /> is less than the value of the <see cref="P:System.Nullable`1.Value" /> property for <paramref name="n2" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The <see cref="P:System.Nullable`1.HasValue" /> properties for <paramref name="n1" /> and <paramref name="n2" /> are <see langword="false" />.  -or-  The <see cref="P:System.Nullable`1.HasValue" /> properties for <paramref name="n1" /> and <paramref name="n2" /> are <see langword="true" />, and the value of the <see cref="P:System.Nullable`1.Value" /> property for <paramref name="n1" /> is equal to the value of the <see cref="P:System.Nullable`1.Value" /> property for <paramref name="n2" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The <see cref="P:System.Nullable`1.HasValue" /> property for <paramref name="n1" /> is <see langword="true" />, and the <see cref="P:System.Nullable`1.HasValue" /> property for <paramref name="n2" /> is <see langword="false" />.  -or-  The <see cref="P:System.Nullable`1.HasValue" /> properties for <paramref name="n1" /> and <paramref name="n2" /> are <see langword="true" />, and the value of the <see cref="P:System.Nullable`1.Value" /> property for <paramref name="n1" /> is greater than the value of the <see cref="P:System.Nullable`1.Value" /> property for <paramref name="n2" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Equals&lt;T&gt; (Nullable&lt;T&gt; n1, Nullable&lt;T&gt; n2) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Nullable`1&lt;!!T&gt; n1, valuetype System.Nullable`1&lt;!!T&gt; n2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals(Of T As Structure) (n1 As Nullable(Of T), n2 As Nullable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool Equals(Nullable&lt;T&gt; n1, Nullable&lt;T&gt; n2);" />
      <MemberSignature Language="F#" Value="static member Equals : Nullable&lt;'T (requires 'T : struct)&gt; * Nullable&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="System.Nullable.Equals (n1, n2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="n1" Type="System.Nullable&lt;T&gt;" />
        <Parameter Name="n2" Type="System.Nullable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ed18f-120">基础值类型<c>n1</c>并<c>n2</c>参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-120">The underlying value type of the <c>n1</c> and <c>n2</c> parameters.</span>
          </span>
        </typeparam>
        <param name="n1">
          <span data-ttu-id="ed18f-121">
            <see cref="T:System.Nullable`1" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-121">A <see cref="T:System.Nullable`1" /> object.</span>
          </span>
        </param>
        <param name="n2">
          <span data-ttu-id="ed18f-122">
            <see cref="T:System.Nullable`1" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-122">A <see cref="T:System.Nullable`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed18f-123">指示所指定的两个 <see cref="T:System.Nullable`1" /> 对象是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-123">Indicates whether two specified <see cref="T:System.Nullable`1" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed18f-124">如果 <paramref name="n1" /> 参数等于 <paramref name="n2" /> 参数，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-124">
              <see langword="true" /> if the <paramref name="n1" /> parameter is equal to the <paramref name="n2" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed18f-125">返回值取决于所比较的两个参数的 <see cref="P:System.Nullable`1.HasValue" /> 和 <see cref="P:System.Nullable`1.Value" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-125">The return value depends on the <see cref="P:System.Nullable`1.HasValue" /> and <see cref="P:System.Nullable`1.Value" /> properties of the two parameters that are compared.</span>
          </span>
          <span data-ttu-id="ed18f-126">
            <list type="table">
              <listheader>
                <term> 返回值 </term>
                <description> 说明 </description>
              </listheader>
              <item>
                <term>
                  <see langword="true" />
                </term>
                <description>
                  <paramref name="n1" /> 和 <paramref name="n2" /> 的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />。或者，<paramref name="n1" /> 和 <paramref name="n2" /> 的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，各参数的 <see cref="P:System.Nullable`1.Value" /> 属性相等。</description>
              </item>
              <item>
                <term>
                  <see langword="false" />
                </term>
                <description> 一个参数的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，另一个参数的该属性为 <see langword="false" />。或者，<paramref name="n1" /> 和 <paramref name="n2" /> 的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，各参数的 <see cref="P:System.Nullable`1.Value" /> 属性相等。</description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-126">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term>
                    <see langword="true" />
                  </term>
                  <description> The <see cref="P:System.Nullable`1.HasValue" /> properties for <paramref name="n1" /> and <paramref name="n2" /> are <see langword="false" />.  -or-  The <see cref="P:System.Nullable`1.HasValue" /> properties for <paramref name="n1" /> and <paramref name="n2" /> are <see langword="true" />, and the <see cref="P:System.Nullable`1.Value" /> properties of the parameters are equal.  </description>
                </item>
                <item>
                  <term>
                    <see langword="false" />
                  </term>
                  <description> The <see cref="P:System.Nullable`1.HasValue" /> property is <see langword="true" /> for one parameter and <see langword="false" /> for the other parameter.  -or-  The <see cref="P:System.Nullable`1.HasValue" /> properties for <paramref name="n1" /> and <paramref name="n2" /> are <see langword="true" />, and the <see cref="P:System.Nullable`1.Value" /> properties of the parameters are unequal.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnderlyingType">
      <MemberSignature Language="C#" Value="public static Type GetUnderlyingType (Type nullableType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetUnderlyingType(class System.Type nullableType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable.GetUnderlyingType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnderlyingType (nullableType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetUnderlyingType(Type ^ nullableType);" />
      <MemberSignature Language="F#" Value="static member GetUnderlyingType : Type -&gt; Type" Usage="System.Nullable.GetUnderlyingType nullableType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nullableType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="nullableType">
          <span data-ttu-id="ed18f-127">一个 <see cref="T:System.Type" /> 对象，描述关闭的泛型可以为 null 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-127">A <see cref="T:System.Type" /> object that describes a closed generic nullable type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed18f-128">返回指定可以为 null 的类型的基础类型参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-128">Returns the underlying type argument of the specified nullable type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed18f-129">如果 <paramref name="nullableType" /> 参数为关闭的泛型可以为 null 的类型，则为 <paramref name="nullableType" /> 参数的类型变量；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-129">The type argument of the <paramref name="nullableType" /> parameter, if the <paramref name="nullableType" /> parameter is a closed generic nullable type; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed18f-130">泛型类型定义是类型声明，例如<xref:System.Nullable%601>、 包含类型参数列表中，和类型参数列表声明了一个或多个类型参数。</span><span class="sxs-lookup"><span data-stu-id="ed18f-130">A generic type definition is a type declaration, such as <xref:System.Nullable%601>, that contains a type parameter list, and the type parameter list declares one or more type parameters.</span></span> <span data-ttu-id="ed18f-131">封闭式泛型类型是类型声明为类型参数指定特定类型的位置。</span><span class="sxs-lookup"><span data-stu-id="ed18f-131">A closed generic type is a type declaration where a particular type is specified for a type parameter.</span></span>  
  
 <span data-ttu-id="ed18f-132">例如，如果`nullableType`参数是一种`Nullable<Int32>`C# 中 (`Nullable(Of Int32)`在 Visual Basic 中)，则返回值是一种<xref:System.Int32>（即，已关闭的泛型类型的类型参数）。</span><span class="sxs-lookup"><span data-stu-id="ed18f-132">For example, if the `nullableType` parameter is the type of `Nullable<Int32>` in C# (`Nullable(Of Int32)` in Visual Basic), the return value is the type of <xref:System.Int32> (that is, the type argument of the closed generic type).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed18f-133">下面的代码示例定义的方法的返回值为类型<xref:System.Nullable%601>的<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="ed18f-133">The following code example defines a method whose return value is of type <xref:System.Nullable%601> of <xref:System.Int32>.</span></span> <span data-ttu-id="ed18f-134">代码示例使用<xref:System.Nullable.GetUnderlyingType%2A>方法来显示返回值的类型参数。</span><span class="sxs-lookup"><span data-stu-id="ed18f-134">The code example uses the <xref:System.Nullable.GetUnderlyingType%2A> method to display the type argument of the return value.</span></span>  
  
 [!code-csharp[system.nullable_GetUnderlyingType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable_GetUnderlyingType/cs/gut.cs#1)]
 [!code-vb[system.nullable_GetUnderlyingType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable_GetUnderlyingType/vb/gut.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ed18f-135">
            <paramref name="nullableType" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed18f-135">
              <paramref name="nullableType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>