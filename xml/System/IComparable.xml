<Type Name="IComparable" FullName="System.IComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="204519a433353f750a9b8f4cd673d693827bb73c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37480234" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e3955-101">定义一种特定于类型的通用比较方法，值类型或类通过实现此方法对其实例进行排序。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e3955-101">Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3955-102">此接口实现的可排序的值类型。</span><span class="sxs-lookup"><span data-stu-id="e3955-102">This interface is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="e3955-103">它需要实现的类型定义一个方法， <xref:System.IComparable.CompareTo%28System.Object%29>，，该值指示是否在排序顺序中的当前实例的位置是之前，之后，或者与相同类型的第二个对象相同。</span><span class="sxs-lookup"><span data-stu-id="e3955-103">It requires that implementing types define a single method, <xref:System.IComparable.CompareTo%28System.Object%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="e3955-104">实例<xref:System.IComparable>实现将自动调用方法等<xref:System.Array.Sort%2A?displayProperty=nameWithType>和<xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e3955-104">The instance's <xref:System.IComparable> implementation is called automatically by methods such as <xref:System.Array.Sort%2A?displayProperty=nameWithType> and <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e3955-105">实现<xref:System.IComparable.CompareTo%28System.Object%29>方法必须返回<xref:System.Int32>，具有三个值之一下, 表中所示。</span><span class="sxs-lookup"><span data-stu-id="e3955-105">The implementation of the <xref:System.IComparable.CompareTo%28System.Object%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="e3955-106">值</span><span class="sxs-lookup"><span data-stu-id="e3955-106">Value</span></span>|<span data-ttu-id="e3955-107">含义</span><span class="sxs-lookup"><span data-stu-id="e3955-107">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="e3955-108">小于零</span><span class="sxs-lookup"><span data-stu-id="e3955-108">Less than zero</span></span>|<span data-ttu-id="e3955-109">当前实例位于指定的对象<xref:System.IComparable.CompareTo%2A>方法排序顺序中的。</span><span class="sxs-lookup"><span data-stu-id="e3955-109">The current instance precedes the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="e3955-110">零</span><span class="sxs-lookup"><span data-stu-id="e3955-110">Zero</span></span>|<span data-ttu-id="e3955-111">此当前实例中出现的相同位置在排序顺序中指定的对象作为<xref:System.IComparable.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e3955-111">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable.CompareTo%2A> method.</span></span>|  
|<span data-ttu-id="e3955-112">大于零</span><span class="sxs-lookup"><span data-stu-id="e3955-112">Greater than zero</span></span>|<span data-ttu-id="e3955-113">此当前实例位于指定的对象<xref:System.IComparable.CompareTo%2A>方法排序顺序中的。</span><span class="sxs-lookup"><span data-stu-id="e3955-113">This current instance follows the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
  
 <span data-ttu-id="e3955-114">所有数值类型 (如<xref:System.Int32>并<xref:System.Double>) 实现<xref:System.IComparable>，这一点与<xref:System.String>， <xref:System.Char>，并<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="e3955-114">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="e3955-115">自定义类型还应提供其自己的实现<xref:System.IComparable>以启用要排序或排序的对象实例。</span><span class="sxs-lookup"><span data-stu-id="e3955-115">Custom types should also provide their own implementation of <xref:System.IComparable> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3955-116">下面的示例演示的实现<xref:System.IComparable>和必需的<xref:System.IComparable.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e3955-116">The following example illustrates the implementation of <xref:System.IComparable> and the requisite <xref:System.IComparable.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="e3955-117">与此实例进行比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3955-117">An object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3955-118">将当前实例与同一类型的另一个对象进行比较，并返回一个整数，该整数指示当前实例在排序顺序中的位置是位于另一个对象之前、之后还是与其位置相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3955-118">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3955-119">一个值，指示要比较的对象的相对顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3955-119">A value that indicates the relative order of the objects being compared.</span>
          </span>
          <span data-ttu-id="e3955-120">返回值的含义如下：<list type="table"><listheader><term> 值  </term><description> 含义  </description></listheader><item><term> 小于零  </term><description> 此实例在排序顺序中位于 <paramref name="obj" /> 之前。</description></item><item><term> 零  </term><description> 此实例在排序顺序中出现在与 <paramref name="obj" /> 的相同位置。</description></item><item><term> 大于零  </term><description> 此实例在排序顺序中位于 <paramref name="obj" /> 之后。  </description></item></list></span>
          <span class="sxs-lookup">
            <span data-stu-id="e3955-120">The return value has these meanings:  <list type="table"><listheader><term> Value  </term><description> Meaning  </description></listheader><item><term> Less than zero  </term><description> This instance precedes <paramref name="obj" /> in the sort order.  </description></item><item><term> Zero  </term><description> This instance occurs in the same position in the sort order as <paramref name="obj" />.  </description></item><item><term> Greater than zero  </term><description> This instance follows <paramref name="obj" /> in the sort order.  </description></item></list></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3955-121"><xref:System.IComparable.CompareTo%2A>可排序的值类型实现方法。</span><span class="sxs-lookup"><span data-stu-id="e3955-121">The <xref:System.IComparable.CompareTo%2A> method is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="e3955-122">它将自动调用非泛型集合对象的方法如<xref:System.Array.Sort%2A?displayProperty=nameWithType>、 进行排序数组的每个成员。</span><span class="sxs-lookup"><span data-stu-id="e3955-122">It is called automatically by methods of non-generic collection objects, such as <xref:System.Array.Sort%2A?displayProperty=nameWithType>, to order each member of the array.</span></span> <span data-ttu-id="e3955-123">如果自定义类或结构不实现<xref:System.IComparable>，其成员不能进行排序和排序操作可能会引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="e3955-123">If a custom class or structure does not implement <xref:System.IComparable>, its members cannot be ordered and the sort operation can throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="e3955-124">此方法只是一个定义，必须由特定类或值类型产生影响。</span><span class="sxs-lookup"><span data-stu-id="e3955-124">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="e3955-125">部分 （"之前"、"中出现的相同位置作为"，和"后面"） 取决于特定实现的返回值中指定的比较的含义。</span><span class="sxs-lookup"><span data-stu-id="e3955-125">The meaning of the comparisons specified in the Return Value section ("precedes", "occurs in the same position as", and "follows") depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="e3955-126">根据定义，任何对象进行比较大于 （或遵循） `null`，两个 null 引用的比较结果相等的。</span><span class="sxs-lookup"><span data-stu-id="e3955-126">By definition, any object compares greater than (or follows) `null`, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="e3955-127">参数， `obj`，必须是与类相同的类型或值类型，可实现此接口; 否则为<xref:System.ArgumentException>引发。</span><span class="sxs-lookup"><span data-stu-id="e3955-127">The parameter, `obj`, must be the same type as the class or value type that implements this interface; otherwise, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3955-128">下面的示例演示如何使用<xref:System.IComparable.CompareTo%2A>进行比较`Temperature`对象，实现<xref:System.IComparable>与另一个对象。</span><span class="sxs-lookup"><span data-stu-id="e3955-128">The following example illustrates the use of <xref:System.IComparable.CompareTo%2A> to compare a `Temperature` object implementing <xref:System.IComparable> with another object.</span></span> <span data-ttu-id="e3955-129">`Temperature`对象将实现<xref:System.IComparable.CompareTo%2A>进行简单包装即可调用<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="e3955-129">The `Temperature` object implements <xref:System.IComparable.CompareTo%2A> by simply wrapping a call to the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e3955-130">
            <paramref name="obj" /> 不具有与此实例相同的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3955-130">
              <paramref name="obj" /> is not the same type as this instance.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="e3955-131">
            <para>必须满足下列对象 A、 B 和 C: <c>A.CompareTo(A)</c>必须返回零。如果<c>A.CompareTo(B)</c>返回零，则<c>B.CompareTo(A)</c>必须返回零。如果<c>A.CompareTo(B)</c>将返回零和<c>B.CompareTo(C)</c>返回零，则<c>A.CompareTo(C)</c>必须返回零。如果<c>A.CompareTo(B)</c>返回的值不为零，然后<c>B.CompareTo(A)</c>必须返回符号相反的值。如果<c>A.CompareTo(B)</c>返回的值<paramref name="x" />不等于零，和<c>B.CompareTo(C)</c>返回的值<paramref name="y" />的相同的符号<paramref name="x" />，然后<c>a。CompareTo(C)</c>必须返回相同的符号的值<paramref name="x" />和<paramref name="y" />。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e3955-131">
              <para>For objects A, B and C, the following must be true:  <c>A.CompareTo(A)</c> must return zero.  If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> must return zero.  If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> must return zero.  If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> must return a value of the opposite sign.  If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> must return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</para>
            </span>
          </span>
        </block>
        <block subset="none" type="usage">
          <span data-ttu-id="e3955-132">
            <para>使用<see cref="M:System.IComparable.CompareTo(System.Object)" />方法来确定某个类的实例的排序。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e3955-132">
              <para>Use the <see cref="M:System.IComparable.CompareTo(System.Object)" /> method to determine the ordering of instances of a class.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>