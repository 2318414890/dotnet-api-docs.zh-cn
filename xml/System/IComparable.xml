<Type Name="IComparable" FullName="System.IComparable">
  <TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="81240-101">定义由值类型或类实现的特定于类型的通用比较方法，旨在对其实例进行排序。</span><span class="sxs-lookup"><span data-stu-id="81240-101">Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81240-102">此接口由可排序其值类型实现。</span><span class="sxs-lookup"><span data-stu-id="81240-102">This interface is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="81240-103">它需要实现的类型定义一个方法， <xref:System.IComparable.CompareTo%28System.Object%29>，，该值指示当前实例在排序顺序中的位置是否在之前，之后，还是与相同类型的第二个对象相同。</span><span class="sxs-lookup"><span data-stu-id="81240-103">It requires that implementing types define a single method, <xref:System.IComparable.CompareTo%28System.Object%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="81240-104">实例的<xref:System.IComparable>调用实现自动方法通过如<xref:System.Array.Sort%2A?displayProperty=nameWithType>和<xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="81240-104">The instance's <xref:System.IComparable> implementation is called automatically by methods such as <xref:System.Array.Sort%2A?displayProperty=nameWithType> and <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="81240-105">实现<xref:System.IComparable.CompareTo%28System.Object%29>方法必须返回<xref:System.Int32>，有三个值之一下, 表中所示。</span><span class="sxs-lookup"><span data-stu-id="81240-105">The implementation of the <xref:System.IComparable.CompareTo%28System.Object%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="81240-106">“值”</span><span class="sxs-lookup"><span data-stu-id="81240-106">Value</span></span>|<span data-ttu-id="81240-107">含义</span><span class="sxs-lookup"><span data-stu-id="81240-107">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="81240-108">小于零</span><span class="sxs-lookup"><span data-stu-id="81240-108">Less than zero</span></span>|<span data-ttu-id="81240-109">当前实例之前指定的对象<xref:System.IComparable.CompareTo%2A>在排序顺序的方法。</span><span class="sxs-lookup"><span data-stu-id="81240-109">The current instance precedes the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="81240-110">零</span><span class="sxs-lookup"><span data-stu-id="81240-110">Zero</span></span>|<span data-ttu-id="81240-111">此当前实例在排序顺序中作为指定的对象的同一位置中发生<xref:System.IComparable.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="81240-111">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable.CompareTo%2A> method.</span></span>|  
|<span data-ttu-id="81240-112">大于零</span><span class="sxs-lookup"><span data-stu-id="81240-112">Greater than zero</span></span>|<span data-ttu-id="81240-113">此当前实例遵循指定的对象<xref:System.IComparable.CompareTo%2A>在排序顺序的方法。</span><span class="sxs-lookup"><span data-stu-id="81240-113">This current instance follows the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
  
 <span data-ttu-id="81240-114">所有数值类型 (如<xref:System.Int32>和<xref:System.Double>) 实现<xref:System.IComparable>，这一点与<xref:System.String>， <xref:System.Char>，和<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="81240-114">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="81240-115">自定义类型还应提供自己实现<xref:System.IComparable>使对象实例排序或排序。</span><span class="sxs-lookup"><span data-stu-id="81240-115">Custom types should also provide their own implementation of <xref:System.IComparable> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81240-116">下面的示例演示的实现<xref:System.IComparable>以及必需<xref:System.IComparable.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="81240-116">The following example illustrates the implementation of <xref:System.IComparable> and the requisite <xref:System.IComparable.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="81240-117">与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="81240-117">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="81240-118">将当前实例与同一类型的另一个对象进行比较，并返回一个整数，该整数指示当前实例在排序顺序中的位置是位于另一个对象之前、之后还是与其位置相同。</span><span class="sxs-lookup"><span data-stu-id="81240-118">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="81240-119">一个值，指示要比较的对象的相对顺序。</span><span class="sxs-lookup"><span data-stu-id="81240-119">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="81240-120">返回值的含义如下：</span><span class="sxs-lookup"><span data-stu-id="81240-120">The return value has these meanings:</span></span>  
  
 <span data-ttu-id="81240-121"><list type="table"><listheader><term> 值</span><span class="sxs-lookup"><span data-stu-id="81240-121"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="81240-122"></term><description> 含义</span><span class="sxs-lookup"><span data-stu-id="81240-122"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="81240-123"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="81240-123"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="81240-124"></term><description> 此实例在排序顺序中位于 <paramref name="obj" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="81240-124"></term><description> This instance precedes <paramref name="obj" /> in the sort order.</span></span>  
  
 <span data-ttu-id="81240-125"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="81240-125"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="81240-126"></term><description> 此实例在排序顺序中与 <paramref name="obj" /> 的位置相同。</span><span class="sxs-lookup"><span data-stu-id="81240-126"></term><description> This instance occurs in the same position in the sort order as <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="81240-127"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="81240-127"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="81240-128"></term><description> 此实例在排序顺序中位于 <paramref name="obj" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="81240-128"></term><description> This instance follows <paramref name="obj" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81240-129"><xref:System.IComparable.CompareTo%2A>方法由实现可排序其值类型。</span><span class="sxs-lookup"><span data-stu-id="81240-129">The <xref:System.IComparable.CompareTo%2A> method is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="81240-130">它将自动调用方法的非泛型集合对象，如<xref:System.Array.Sort%2A?displayProperty=nameWithType>、 进行排序数组的每个成员。</span><span class="sxs-lookup"><span data-stu-id="81240-130">It is called automatically by methods of non-generic collection objects, such as <xref:System.Array.Sort%2A?displayProperty=nameWithType>, to order each member of the array.</span></span> <span data-ttu-id="81240-131">如果自定义类或结构不实现<xref:System.IComparable>、 及其成员无法进行排序和排序操作会引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="81240-131">If a custom class or structure does not implement <xref:System.IComparable>, its members cannot be ordered and the sort operation can throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="81240-132">此方法只是一个定义，必须实现的特定的类或值类型，才能生效。</span><span class="sxs-lookup"><span data-stu-id="81240-132">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="81240-133">部分 （"之前"、"发生在同一个位置"，而"遵循"） 依赖于特定实现的返回值中指定的比较的含义。</span><span class="sxs-lookup"><span data-stu-id="81240-133">The meaning of the comparisons specified in the Return Value section ("precedes", "occurs in the same position as", and "follows") depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="81240-134">根据定义，任何对象比较大于 （或遵循） `null`，两个 null 引用的比较结果为彼此相等。</span><span class="sxs-lookup"><span data-stu-id="81240-134">By definition, any object compares greater than (or follows) `null`, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="81240-135">参数， `obj`、 必须与类相同的类型或值类型，可实现此接口中; 否则为<xref:System.ArgumentException>引发。</span><span class="sxs-lookup"><span data-stu-id="81240-135">The parameter, `obj`, must be the same type as the class or value type that implements this interface; otherwise, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81240-136">下面的示例演示如何使用<xref:System.IComparable.CompareTo%2A>要比较`Temperature`对象实现<xref:System.IComparable>与另一个对象。</span><span class="sxs-lookup"><span data-stu-id="81240-136">The following example illustrates the use of <xref:System.IComparable.CompareTo%2A> to compare a `Temperature` object implementing <xref:System.IComparable> with another object.</span></span> <span data-ttu-id="81240-137">`Temperature`对象实现<xref:System.IComparable.CompareTo%2A>包装调用<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="81240-137">The `Temperature` object implements <xref:System.IComparable.CompareTo%2A> by simply wrapping a call to the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="81240-138"><paramref name="obj" /> 不具有与此实例相同的类型。</span><span class="sxs-lookup"><span data-stu-id="81240-138"><paramref name="obj" /> is not the same type as this instance.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="81240-139">对于对象 A、 B 和 C，必须满足以下条件：</span><span class="sxs-lookup"><span data-stu-id="81240-139">For objects A, B and C, the following must be true:</span></span>  
  
 <span data-ttu-id="81240-140"><c>A.CompareTo(A)</c>必须返回零。</span><span class="sxs-lookup"><span data-stu-id="81240-140"><c>A.CompareTo(A)</c> must return zero.</span></span>  
  
 <span data-ttu-id="81240-141">如果<c>A.CompareTo(B)</c>返回零，则<c>B.CompareTo(A)</c>必须返回零。</span><span class="sxs-lookup"><span data-stu-id="81240-141">If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> must return zero.</span></span>  
  
 <span data-ttu-id="81240-142">如果<c>A.CompareTo(B)</c>返回零和<c>B.CompareTo(C)</c>返回零，则<c>A.CompareTo(C)</c>必须返回零。</span><span class="sxs-lookup"><span data-stu-id="81240-142">If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> must return zero.</span></span>  
  
 <span data-ttu-id="81240-143">如果<c>A.CompareTo(B)</c>返回非零，一个值则<c>B.CompareTo(A)</c>必须返回值的符号相反。</span><span class="sxs-lookup"><span data-stu-id="81240-143">If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> must return a value of the opposite sign.</span></span>  
  
 <span data-ttu-id="81240-144">如果<c>A.CompareTo(B)</c>返回一个值<paramref name="x" />不等于零，和<c>B.CompareTo(C)</c>返回一个值<paramref name="y" />相同的符号的<paramref name="x" />，然后<c>a。CompareTo(C)</c>必须返回相同的符号的值<paramref name="x" />和<paramref name="y" />。</span><span class="sxs-lookup"><span data-stu-id="81240-144">If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> must return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</span></span></para>
        </block>
        <block subset="none" type="usage">
          <para><span data-ttu-id="81240-145">使用<see cref="M:System.IComparable.CompareTo(System.Object)" />方法来确定的类的实例排序。</span><span class="sxs-lookup"><span data-stu-id="81240-145">Use the <see cref="M:System.IComparable.CompareTo(System.Object)" /> method to determine the ordering of instances of a class.</span></span></para>
        </block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>