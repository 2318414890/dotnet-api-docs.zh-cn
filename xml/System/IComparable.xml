<Type Name="IComparable" FullName="System.IComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="756600c35a7609b82f5adbdfa1f787b5e3863a38" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39886270" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定义由值类型或类实现的特定于类型的通用比较方法，旨在对其实例进行排序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此接口实现的可排序的值类型。 它需要实现的类型定义一个方法， <xref:System.IComparable.CompareTo%28System.Object%29>，，该值指示是否在排序顺序中的当前实例的位置是之前，之后，或者与相同类型的第二个对象相同。 实例<xref:System.IComparable>实现将自动调用方法等<xref:System.Array.Sort%2A?displayProperty=nameWithType>和<xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>。  
  
 实现<xref:System.IComparable.CompareTo%28System.Object%29>方法必须返回<xref:System.Int32>，具有三个值之一下, 表中所示。  
  
|“值”|含义|  
|-----------|-------------|  
|小于零|当前实例位于指定的对象<xref:System.IComparable.CompareTo%2A>方法排序顺序中的。|  
|零|此当前实例中出现的相同位置在排序顺序中指定的对象作为<xref:System.IComparable.CompareTo%2A>方法。|  
|大于零|此当前实例位于指定的对象<xref:System.IComparable.CompareTo%2A>方法排序顺序中的。|  
  
 所有数值类型 (如<xref:System.Int32>并<xref:System.Double>) 实现<xref:System.IComparable>，这一点与<xref:System.String>， <xref:System.Char>，并<xref:System.DateTime>。 自定义类型还应提供其自己的实现<xref:System.IComparable>以启用要排序或排序的对象实例。  
  
   
  
## Examples  
 下面的示例演示的实现<xref:System.IComparable>和必需的<xref:System.IComparable.CompareTo%2A>方法。  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">与此实例进行比较的对象。</param>
        <summary>将当前实例与同一类型的另一个对象进行比较，并返回一个整数，该整数指示当前实例在排序顺序中的位置是位于另一个对象之前、之后还是与其位置相同。</summary>
        <returns>一个值，指示要比较的对象的相对顺序。 返回值的含义如下： 
 <list type="table"><listheader><term> 值 </term><description> 含义 </description></listheader><item><term> 小于零 </term><description> 此实例在排序顺序中位于 <paramref name="obj" /> 之前。</description></item><item><term> 零  </term><description> 此实例在排序顺序中出现在与 <paramref name="obj" /> 的相同位置。</description></item><item><term> 大于零  </term><description> 此实例在排序顺序中位于 <paramref name="obj" /> 之后。  </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IComparable.CompareTo%2A>可排序的值类型实现方法。 它将自动调用非泛型集合对象的方法如<xref:System.Array.Sort%2A?displayProperty=nameWithType>、 进行排序数组的每个成员。 如果自定义类或结构不实现<xref:System.IComparable>，其成员不能进行排序和排序操作可能会引发<xref:System.InvalidOperationException>。  
  
 此方法只是一个定义，必须由特定类或值类型产生影响。 部分 （"之前"、"中出现的相同位置作为"，和"后面"） 取决于特定实现的返回值中指定的比较的含义。  
  
 根据定义，任何对象进行比较大于 （或遵循） `null`，两个 null 引用的比较结果相等的。  
  
 参数， `obj`，必须是与类相同的类型或值类型，可实现此接口; 否则为<xref:System.ArgumentException>引发。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.IComparable.CompareTo%2A>进行比较`Temperature`对象，实现<xref:System.IComparable>与另一个对象。 `Temperature`对象将实现<xref:System.IComparable.CompareTo%2A>进行简单包装即可调用<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>方法。  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" /> 不具有与此实例相同的类型。</exception>
        <block subset="none" type="overrides">
          <para>必须满足下列对象 A、 B 和 C: <c>A.CompareTo(A)</c>必须返回零。如果<c>A.CompareTo(B)</c>返回零，则<c>B.CompareTo(A)</c>必须返回零。如果<c>A.CompareTo(B)</c>将返回零和<c>B.CompareTo(C)</c>返回零，则<c>A.CompareTo(C)</c>必须返回零。如果<c>A.CompareTo(B)</c>返回的值不为零，然后<c>B.CompareTo(A)</c>必须返回符号相反的值。如果<c>A.CompareTo(B)</c>返回的值<paramref name="x" />不等于零，和<c>B.CompareTo(C)</c>返回的值<paramref name="y" />的相同的符号<paramref name="x" />，然后<c>a。CompareTo(C)</c>必须返回相同的符号的值<paramref name="x" />和<paramref name="y" />。</para>
        </block>
        <block subset="none" type="usage">
          <para>使用<see cref="M:System.IComparable.CompareTo(System.Object)" />方法来确定某个类的实例的排序。</para>
        </block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>