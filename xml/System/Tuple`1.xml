<Type Name="Tuple&lt;T1&gt;" FullName="System.Tuple&lt;T1&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91e890c5d1b99ff5bbf3ae06484d5934f8e4b72b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39745590" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`1&lt;T1&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1">
      <span data-ttu-id="5bf6c-101">元组的唯一一个分量的类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5bf6c-101">The type of the tuple's only component.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="5bf6c-102">表示 1 元组，或单元组。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5bf6c-102">Represents a 1-tuple, or singleton.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bf6c-103">元组是具有特定数量和值序列的数据结构。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-103">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="5bf6c-104"><xref:System.Tuple%601>类表示 1 元组或单一实例，是具有单个组件的元组。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-104">The <xref:System.Tuple%601> class represents a 1-tuple, or singleton, which is a tuple that has a single component.</span></span> <span data-ttu-id="5bf6c-105">应用程序开发中，很少使用单一实例。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-105">A singleton is used comparatively rarely in application development.</span></span>  
  
 <span data-ttu-id="5bf6c-106">可以实例化<xref:System.Tuple%601>对象通过调用<xref:System.Tuple%601.%23ctor%2A>构造函数或静态<xref:System.Tuple.Create%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-106">You can instantiate a <xref:System.Tuple%601> object by calling either the <xref:System.Tuple%601.%23ctor%2A> constructor or the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="5bf6c-107">您可以使用只读的检索的值元组的单个组件<xref:System.Tuple%601.Item1%2A>实例属性。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-107">You can retrieve the value of the tuple's single component by using the read-only <xref:System.Tuple%601.Item1%2A> instance property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1&gt; : 'T1 -&gt; Tuple&lt;'T1&gt;" Usage="new System.Tuple&lt;'T1&gt; item1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
      </Parameters>
      <Docs>
        <param name="item1">
          <span data-ttu-id="5bf6c-108">元组的唯一一个分量的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-108">The value of the tuple's only component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bf6c-109">初始化 <see cref="T:System.Tuple`1" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-109">Initializes a new instance of the <see cref="T:System.Tuple`1" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bf6c-110">此外可以使用静态<xref:System.Tuple.Create%2A?displayProperty=nameWithType>方法实例化 1 元组对象，而无需显式指定其组件的类型。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-110">You can also use the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate a 1-tuple object without having to explicitly specify the type of its component.</span></span> <span data-ttu-id="5bf6c-111">下面的示例使用<xref:System.Tuple.Create%2A>方法来实例化一个 1 元组，其元素类型的<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-111">The following example uses the <xref:System.Tuple.Create%2A> method to instantiate a 1-tuple whose component is of type <xref:System.Int32>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#1)]
 [!code-vb[System.Tuple.Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#1)]  
  
 <span data-ttu-id="5bf6c-112">这相当于对的以下调用<xref:System.Tuple%601.%23ctor%2A>类构造函数。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-112">This is equivalent to the following call to the <xref:System.Tuple%601.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#2)]
 [!code-vb[System.Tuple.Create#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="5bf6c-113">与该实例进行比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-113">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bf6c-114">返回一个值，该值指示当前的 <see cref="T:System.Tuple`1" /> 对象是否与指定对象相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-114">Returns a value that indicates whether the current <see cref="T:System.Tuple`1" /> object is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5bf6c-115">如果当前实例等于指定对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-115">
              <see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bf6c-116">`obj`参数被视为等于当前实例在以下情况下：</span><span class="sxs-lookup"><span data-stu-id="5bf6c-116">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="5bf6c-117">它是<xref:System.Tuple%601>对象。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-117">It is a <xref:System.Tuple%601> object.</span></span>  
  
-   <span data-ttu-id="5bf6c-118">它的一个组件是类型的与当前实例相同。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-118">Its single component is of the same type as the current instance.</span></span>  
  
-   <span data-ttu-id="5bf6c-119">它的一个组件等于当前实例。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-119">Its single component is equal to that of the current instance.</span></span> <span data-ttu-id="5bf6c-120">相等性取决于每个组件的默认对象相等比较器。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-120">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bf6c-121">下面的示例调用<xref:System.Tuple%601.Equals%28System.Object%29?displayProperty=nameWithType>方法来比较<xref:System.Tuple%601>对象，其组件是<xref:System.Double>值，该值具有三个<xref:System.Tuple%601>对象其组件具有以下特征：</span><span class="sxs-lookup"><span data-stu-id="5bf6c-121">The following example calls the <xref:System.Tuple%601.Equals%28System.Object%29?displayProperty=nameWithType> method to compare a <xref:System.Tuple%601> object whose component is a <xref:System.Double> value with three <xref:System.Tuple%601> objects whose components have the following characteristics:</span></span>  
  
-   <span data-ttu-id="5bf6c-122">相同的类型 (<xref:System.Double>) 和相同的值。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-122">Same type (<xref:System.Double>) and same value.</span></span>  
  
-   <span data-ttu-id="5bf6c-123">相同的类型 (<xref:System.Double>)，但不同的值。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-123">Same type (<xref:System.Double>), but different value.</span></span>  
  
-   <span data-ttu-id="5bf6c-124">不同的类型 (<xref:System.Single>)，但相同的值。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-124">Different type (<xref:System.Single>), but same value.</span></span>  
  
 [!code-csharp[System.Tuple\`1.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`1.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5bf6c-125">返回当前 <see cref="T:System.Tuple`1" /> 对象的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-125">Returns the hash code for the current <see cref="T:System.Tuple`1" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5bf6c-126">32 位有符号整数哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-126">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`1.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bf6c-127">获取 <see cref="T:System.Tuple`1" /> 对象的单一分量的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-127">Gets the value of the <see cref="T:System.Tuple`1" /> object's single component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bf6c-128">当前 <see cref="T:System.Tuple`1" /> 对象的单一分量的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-128">The value of the current <see cref="T:System.Tuple`1" /> object's single component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bf6c-129">您可以确定的类型<xref:System.Tuple%601.Item1%2A>组件在两种方式之一：</span><span class="sxs-lookup"><span data-stu-id="5bf6c-129">You can determine the type of the <xref:System.Tuple%601.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="5bf6c-130">通过调用`GetType`方法返回的值<xref:System.Tuple%601.Item1%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-130">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%601.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="5bf6c-131">通过检索<xref:System.Type>对象，表示<xref:System.Tuple%601>对象，并从返回的数组中检索的第一个元素及其<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-131">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%601> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="5bf6c-132">该示例阐释了这两种方法。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-132">The example illustrates both approaches.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bf6c-133">以下示例显示有关两个单一实例及其组件的信息。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-133">The following example displays information about two singletons and their components.</span></span>  
  
 [!code-csharp[System.Tuple\`1.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`1.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="5bf6c-134">要与当前实例进行比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-134">An object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="5bf6c-135">提供用于比较的自定义规则的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-135">An object that provides custom rules for comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bf6c-136">使用指定的比较器将当前的 <see cref="T:System.Tuple`1" /> 对象与指定对象进行比较，并返回一个整数，该整数指示当前对象在排序顺序中的位置是在指定对象之前、之后还是与其相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-136">Compares the current <see cref="T:System.Tuple`1" /> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5bf6c-137">一个带符号整数，指示此实例和 <paramref name="other" /> 在排序顺序中的相对位置，如下表所示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-137">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span>
          </span>
          <span data-ttu-id="5bf6c-138">
            <list type="table">
              <listheader>
                <term> 值  </term>
                <description> 描述  </description>
              </listheader>
              <item>
                <term> 负整数  </term>
                <description> 此实例位于 <paramref name="other" /> 之前。</description>
              </item>
              <item>
                <term> 零  </term>
                <description> 此实例和 <paramref name="other" /> 在排序顺序中的位置相同。</description>
              </item>
              <item>
                <term> 正整数  </term>
                <description> 此实例位于 <paramref name="other" /> 之后。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-138">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> A negative integer  </term>
                  <description> This instance precedes <paramref name="other" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance and <paramref name="other" /> have the same position in the sort order.  </description>
                </item>
                <item>
                  <term> A positive integer  </term>
                  <description> This instance follows <paramref name="other" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bf6c-139">虽然可以直接调用此方法，通常称为集合排序方法，包括通过<xref:System.Collections.IComparer>参数集合的成员进行排序。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-139">Although this method can be called directly, it is most commonly called by collection sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="5bf6c-140">例如，调用<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>方法和<xref:System.Collections.SortedList.Add%2A>方法<xref:System.Collections.SortedList>对象，它通过使用实例化<xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-140">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="5bf6c-141"><xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A>方法应在排序操作中使用。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-141">The <xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="5bf6c-142">它不应比较的主要目的在于确定两个对象是否相等。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-142">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="5bf6c-143">若要确定两个对象，调用<xref:System.Tuple%601.System%23Collections%23IStructuralEquatable%23Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-143">To determine whether two objects are equal, call the <xref:System.Tuple%601.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bf6c-144">下面的示例定义一个名为的泛型类`DescendingComparer`实现<xref:System.Collections.Generic.IComparer%601>接口。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-144">The following example defines a generic class named `DescendingComparer` that implements the <xref:System.Collections.Generic.IComparer%601> interface.</span></span> <span data-ttu-id="5bf6c-145">`DescendingComparer` 在通过反转特定类型的默认比较器返回的值而不按升序排列降序对象进行排序。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-145">`DescendingComparer` sorts objects in descending rather than ascending order by reversing the value returned by the default comparer for a particular type.</span></span> <span data-ttu-id="5bf6c-146">实例的泛型`DescendingComparer`然后将类传递给<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>方法进行排序的数组<xref:System.Tuple%601>降序排序的对象。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-146">An instance of the generic `DescendingComparer` class is then passed to the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method to sort an array of <xref:System.Tuple%601> objects in descending order.</span></span> <span data-ttu-id="5bf6c-147">请注意，该示例不直接调用<xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-147">Note that the example does not directly call the <xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A> method.</span></span> <span data-ttu-id="5bf6c-148">隐式调用此方法<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>数组中的每个元素的方法。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-148">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`1.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`1.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5bf6c-149">
            <paramref name="other" /> 不是 <see cref="T:System.Tuple`1" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-149">
              <paramref name="other" /> is not a <see cref="T:System.Tuple`1" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="5bf6c-150">与该实例进行比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-150">The object to compare with this instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="5bf6c-151">一个对象，该对象定义用于评估两个对象是否相等的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-151">An object that defines the method to use to evaluate whether the two objects are equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bf6c-152">返回一个值，该值根据指定的比较方法指示当前的 <see cref="T:System.Tuple`1" /> 对象是否与指定对象相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-152">Returns a value that indicates whether the current <see cref="T:System.Tuple`1" /> object is equal to a specified object based on a specified comparison method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5bf6c-153">如果当前实例等于指定对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-153">
              <see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bf6c-154">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-154">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5bf6c-155">它只能在 <xref:System.Tuple%601> 实例强制转换为 <xref:System.Collections.IStructuralEquatable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-155">It can be used only when the <xref:System.Tuple%601> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="5bf6c-156"><xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>仅当调用实现`other`不是`null`，并可以成功地强制转换 （在 C#) 或 （在 Visual Basic) 转换为<xref:System.Tuple%601>的单个组件是与当前实例相同的类型的对象。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-156">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%601> object whose single component is of the same type as the current instance.</span></span> <span data-ttu-id="5bf6c-157">该方法传递<xref:System.Tuple%601.Item1%2A>当前实例的组件和<xref:System.Tuple%601.Item1%2A>组成部分<xref:System.Tuple%601>所表示对象`other`参数。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-157">The method is passed the <xref:System.Tuple%601.Item1%2A> component of the current instance and the <xref:System.Tuple%601.Item1%2A> component of the <xref:System.Tuple%601> object represented by the `other` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bf6c-158">下面的示例定义<xref:System.Collections.IEqualityComparer>考虑两个浮点值则大约为彼此相等 （即，如果一个值为其他.01%范围内） 的实现。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-158">The following example defines an <xref:System.Collections.IEqualityComparer> implementation that considers two floating-point values to be equal if they are approximately equal to each other (that is, if one value is within .01 percent of the other).</span></span>  
  
 [!code-csharp[System.Tuple\`1.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`1.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="5bf6c-159">一个对象，其 <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 方法计算当前 <see cref="T:System.Tuple`1" /> 对象的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-159">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`1" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bf6c-160">使用指定的计算方法计算当前 <see cref="T:System.Tuple`1" /> 对象的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-160">Calculates the hash code for the current <see cref="T:System.Tuple`1" /> object by using a specified computation method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5bf6c-161">32 位有符号整数哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-161">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bf6c-162">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-162">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5bf6c-163">它只能在 <xref:System.Tuple%601> 实例强制转换为 <xref:System.Collections.IStructuralEquatable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-163">It can be used only when the <xref:System.Tuple%601> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="5bf6c-164">此方法只是包装调用`comparer`对象的<xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType>实现。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-164">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="5bf6c-165">用于计算哈希代码的算法应返回相同的哈希代码的两个<xref:System.Tuple%601>被认为是相等的对象。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-165">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%601> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="5bf6c-166">要与当前实例进行比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-166">An object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bf6c-167">将当前 <see cref="T:System.Tuple`1" /> 对象与指定对象进行比较，并返回一个整数，该整数指示当前对象在排序顺序中的位置是位于指定对象之前、之后还是与其位置相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-167">Compares the current <see cref="T:System.Tuple`1" /> object to a specified object, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5bf6c-168">一个带符号整数，指示此实例和 <paramref name="obj" /> 在排序顺序中的相对位置，如下表所示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-168">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span>
          </span>
          <span data-ttu-id="5bf6c-169">
            <list type="table">
              <listheader>
                <term> 值  </term>
                <description> 描述  </description>
              </listheader>
              <item>
                <term> 负整数  </term>
                <description> 此实例位于 <paramref name="obj" /> 之前。</description>
              </item>
              <item>
                <term> 零  </term>
                <description> 此实例和 <paramref name="obj" /> 在排序顺序中的位置相同。</description>
              </item>
              <item>
                <term> 正整数  </term>
                <description> 此实例位于 <paramref name="obj" /> 之后。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-169">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> A negative integer  </term>
                  <description> This instance precedes <paramref name="obj" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance and <paramref name="obj" /> have the same position in the sort order.  </description>
                </item>
                <item>
                  <term> A positive integer  </term>
                  <description> This instance follows <paramref name="obj" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bf6c-170">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-170">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5bf6c-171">它只能在 <xref:System.Tuple%601> 实例强制转换为 <xref:System.IComparable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-171">It can be used only when the <xref:System.Tuple%601> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="5bf6c-172">此方法提供<xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType>实现<xref:System.Tuple%601>类。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-172">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%601> class.</span></span> <span data-ttu-id="5bf6c-173">虽然可以直接调用该方法，最常调用的排序方法，如集合的默认重载<xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType>和<xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>、 集合的成员进行排序。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-173">Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="5bf6c-174"><xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType>方法应在排序操作中使用。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-174">The <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method is intended for use in sorting operations.</span></span> <span data-ttu-id="5bf6c-175">它不应比较的主要目的在于确定两个对象是否相等。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-175">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="5bf6c-176">若要确定两个对象，调用<xref:System.Tuple%601.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-176">To determine whether two objects are equal, call the <xref:System.Tuple%601.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="5bf6c-177"><xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType>方法使用的默认对象比较器。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-177">The <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method uses the default object  comparer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bf6c-178">下面的示例创建单一实例的组件是一个数组<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-178">The following example creates an array of singletons whose component is a <xref:System.Double> value.</span></span> <span data-ttu-id="5bf6c-179">它显示未排序顺序中的每个元组组件的值对数组进行排序，然后按排序顺序中显示的值。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-179">It displays the value of each tuple component in unsorted order, sorts the array, and then displays the values in sorted order.</span></span> <span data-ttu-id="5bf6c-180">请注意，该示例不直接调用<xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-180">Note that the example does not directly call the <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="5bf6c-181">隐式调用此方法<xref:System.Array.Sort%28System.Array%29>数组中的每个元素的方法。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-181">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`1.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`1.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5bf6c-182">
            <paramref name="obj" /> 不是 <see cref="T:System.Tuple`1" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-182">
              <paramref name="obj" /> is not a <see cref="T:System.Tuple`1" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Tuple`1.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5bf6c-183">
            <see langword="Tuple" /> 元素的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-183">The index of the <see langword="Tuple" /> element.</span>
          </span>
          <span data-ttu-id="5bf6c-184">
            <c>index</c> 必须为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-184">
              <c>index</c> must be 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5bf6c-185">获取 <see langword="Tuple" /> 元素的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-185">Gets the value of the <see langword="Tuple" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bf6c-186">
            <see langword="Tuple" /> 元素的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-186">The value of the <see langword="Tuple" /> element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bf6c-187"><xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType>属性是显式接口实现。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-187">The <xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="5bf6c-188">若要调用它，必须强制转换或转换<xref:System.Tuple%601>对象传递给<xref:System.Runtime.CompilerServices.ITuple>接口对象。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-188">To call it, you must cast or convert the <xref:System.Tuple%601> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="5bf6c-189">
            <paramref name="index" /> 小于 0 或大于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-189">
              <paramref name="index" /> is less than 0 or greater than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5bf6c-190">获取 <see langword="Tuple" /> 中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-190">Gets the number of elements in the <see langword="Tuple" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5bf6c-191">1，<see cref="T:System.Tuple`1" /> 对象中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-191">1, the number of elements in a <see cref="T:System.Tuple`1" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bf6c-192"><xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Length%2A>属性是显式接口实现。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-192">The <xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="5bf6c-193">若要调用它，必须强制转换或转换<xref:System.Tuple%601>对象传递给<xref:System.Runtime.CompilerServices.ITuple>接口对象。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-193">To call it, you must cast or convert the <xref:System.Tuple%601> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5bf6c-194">返回表示此 <see cref="T:System.Tuple`1" /> 实例的值的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-194">Returns a string that represents the value of this <see cref="T:System.Tuple`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5bf6c-195">此 <see cref="T:System.Tuple`1" /> 对象的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5bf6c-195">The string representation of this <see cref="T:System.Tuple`1" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bf6c-196">此方法返回字符串的形式 (*Item1*)，其中*Item1*表示的值的<xref:System.Tuple%601.Item1%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-196">The string returned by this method takes the form (*Item1*), where *Item1* represents the value of the <xref:System.Tuple%601.Item1%2A> property.</span></span> <span data-ttu-id="5bf6c-197">如果的值<xref:System.Tuple%601.Item1%2A>是`null`，它表示为<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-197">If the value of <xref:System.Tuple%601.Item1%2A> is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5bf6c-198">下面的示例演示<xref:System.Tuple%601.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5bf6c-198">The following example illustrates the <xref:System.Tuple%601.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`1.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`1.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>