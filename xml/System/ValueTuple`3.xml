<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ValueTuple`3.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a41b9e9b4d5cbee9db9dfe3c9677b223c7368e22.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a41b9e9b4d5cbee9db9dfe3c9677b223c7368e22</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.7.1,netframework-4.7,netstandard-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>The type of the value tuple's first element.</source>
          <target state="translated">值元组的第 1 个元素的类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>The type of the value tuple's second element.</source>
          <target state="translated">值元组的第 2 个元素的类型。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>The type of the value tuple's third element.</source>
          <target state="translated">值元组的第 3 个元素的类型。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.ValueTuple`3">
          <source>Represents a value tuple with 3 components.</source>
          <target state="translated">表示含有 3 个组件的值元组。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>A value tuple is a data structure that has a specific number and sequence of values.</source>
          <target state="translated">值元组是具有特定的数量和值序列的数据结构。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph> structure represents a value tuple that has three elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph>结构表示具有三个元素的值元组。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>The value tuple types differ from the tuple types (such as <ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph>) as follows:</source>
          <target state="translated">值元组类型的区别的元组类型 (如<ph id="ph1">&lt;xref:System.Tuple%603&gt;</ph>)，如下所示：</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>They are structures (value types) rather than classes (reference types).</source>
          <target state="translated">它们是结构 （值类型） 而不是类 （引用类型）。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>Members such as <ph id="ph1">&lt;xref:System.ValueTuple%603.Item1&gt;</ph> and   <ph id="ph2">&lt;xref:System.ValueTuple%603.Item2&gt;</ph> are fields rather than properties.</source>
          <target state="translated">成员，如<ph id="ph1">&lt;xref:System.ValueTuple%603.Item1&gt;</ph>和<ph id="ph2">&lt;xref:System.ValueTuple%603.Item2&gt;</ph>是字段而不是属性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>Their fields are mutable rather than read-only.</source>
          <target state="translated">其字段是可变而不是只读的。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>The value tuple types provide the runtime implementation that supports <bpt id="p1">[</bpt>tuples in C#<ept id="p1">](~/docs/csharp/tuples.md)</ept> and struct tuples in F#.</source>
          <target state="translated">值元组类型提供支持的运行时实现<bpt id="p1">[</bpt>C# 中的元组<ept id="p1">](~/docs/csharp/tuples.md)</ept>和 F # 中的结构元组。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>In addition to creating a <ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph> instance by using language syntax, you can call the <ph id="ph2">&lt;xref:System.ValueTuple.Create%2A&gt;</ph> factory method.</source>
          <target state="translated">除了创建<ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph>实例通过使用语言语法，您可以调用<ph id="ph2">&lt;xref:System.ValueTuple.Create%2A&gt;</ph>工厂方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>Serialization and value tuples</source>
          <target state="translated">序列化和值的元组</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph> type is not serializable in .NET Core 1.x or in the .NET Framework 4.7 and earlier versions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph>类型不是可序列化在.NET 核心 1.x 或.NET Framework 4.7 和早期版本中。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>In addition, .NET Standard, including .NET Standard 2.0, does not mandate serialization of <ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph> instances; whether or not a <ph id="ph2">&lt;xref:System.ValueTuple%603&gt;</ph> instance is serializable depends on the individual .NET Standard implementation.</source>
          <target state="translated">此外，.NET 标准，包括.NET 标准 2.0 中，不强制要求的序列化<ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph>实例; 是否<ph id="ph2">&lt;xref:System.ValueTuple%603&gt;</ph>实例是可序列化取决于单个.NET 标准的实现。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>To determine whether a <ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph> type is serializable on a particular .NET implementation, get a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph3">&lt;xref:System.ValueTuple%603&gt;</ph> type and retrieve the value of its <ph id="ph4">&lt;xref:System.Type.IsSerializable%2A&gt;</ph> property.</source>
          <target state="translated">若要确定是否<ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph>类型是可序列化上的特定的.NET 实现，获取<ph id="ph2">&lt;xref:System.Type&gt;</ph>对象，表示<ph id="ph3">&lt;xref:System.ValueTuple%603&gt;</ph>键入和检索的值其<ph id="ph4">&lt;xref:System.Type.IsSerializable%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ValueTuple`3">
          <source>For a list of serializable types in .NET Core and the .NET Framework, see <bpt id="p1">[</bpt>Binary Serialization<ept id="p1">](~/docs/standard/serialization/binary-serialization.md)</ept>.</source>
          <target state="translated">有关.NET 核心和.NET Framework 中的可序列化类型的列表，请参阅<bpt id="p1">[</bpt>二进制序列化<ept id="p1">](~/docs/standard/serialization/binary-serialization.md)</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.#ctor(`0,`1,`2)">
          <source>The value tuple's first element.</source>
          <target state="translated">值元组的第 1 个元素。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.#ctor(`0,`1,`2)">
          <source>The value tuple's second element.</source>
          <target state="translated">值元组的第 2 个元素。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.#ctor(`0,`1,`2)">
          <source>The value tuple's third element.</source>
          <target state="translated">值元组的第 3 个元素。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.#ctor(`0,`1,`2)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance.</source>
          <target state="translated">初始化一个新 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.CompareTo(System.ValueTuple{`0,`1,`2})">
          <source>The tuple to compare with this instance.</source>
          <target state="translated">要与此实例进行比较的元组。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.CompareTo(System.ValueTuple{`0,`1,`2})">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance to a specified <ph id="ph2">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance.</source>
          <target state="translated">将当前 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例与指定的 <ph id="ph2">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例进行比较。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.CompareTo(System.ValueTuple{`0,`1,`2})">
          <source>A signed integer that indicates the relative position of this instance and                      <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">一个有符号整数，指示此实例和 <ph id="ph1">&lt;paramref name="other" /&gt;</ph> 在排序顺序中的相对位置，如下表所示。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.CompareTo(System.ValueTuple{`0,`1,`2})">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 值</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.CompareTo(System.ValueTuple{`0,`1,`2})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.CompareTo(System.ValueTuple{`0,`1,`2})">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 负整数</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.CompareTo(System.ValueTuple{`0,`1,`2})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes                                      <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例位于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 之前。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.CompareTo(System.ValueTuple{`0,`1,`2})">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.CompareTo(System.ValueTuple{`0,`1,`2})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and                                      <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例在排序顺序中的位置与 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 相同。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.CompareTo(System.ValueTuple{`0,`1,`2})">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 正整数</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.CompareTo(System.ValueTuple{`0,`1,`2})">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows                                      <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例位于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 之后。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="T:System.ValueTuple`3">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance is equal to a specified object.</source>
          <target state="translated">返回一个值，该值指示当前 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例是否与指定的对象相等。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">与该实例进行比较的对象。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.Equals(System.Object)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance is equal to a specified object.</source>
          <target state="translated">返回一个值，该值指示当前 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例是否与指定的对象相等。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果当前实例等于指定对象，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`3.Equals(System.Object)">
          <source>The                          <ph id="ph1">`obj`</ph> argument is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated"><ph id="ph1">`obj`</ph>自变量被视为等于当前实例在下列情况下：</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`3.Equals(System.Object)">
          <source>It is a                                  <ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph> value type.</source>
          <target state="translated">它是<ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph>值类型。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`3.Equals(System.Object)">
          <source>Its components are of the same types as those of the current instance.</source>
          <target state="translated">其组件是与当前实例相同的类型。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`3.Equals(System.Object)">
          <source>Its components are equal to those of the current instance.</source>
          <target state="translated">其组件是等于当前实例。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`3.Equals(System.Object)">
          <source>Equality is determined by the default equality comparer for each component.</source>
          <target state="translated">相等性取决于每个组件的默认相等比较器。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.Equals(System.ValueTuple{`0,`1,`2})">
          <source>The value tuple to compare with this instance.</source>
          <target state="translated">要与此实例进行比较的值元组。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.Equals(System.ValueTuple{`0,`1,`2})">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance is equal to a specified <ph id="ph2">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance.</source>
          <target state="translated">返回一个值，该值指示当前 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例是否与指定的 <ph id="ph2">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例相等。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.Equals(System.ValueTuple{`0,`1,`2})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified tuple; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果当前实例等于指定元组，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`3.Equals(System.ValueTuple{`0,`1,`2})">
          <source>The                          <ph id="ph1">`other`</ph> argument is considered to be equal to the current instance under the following conditions:</source>
          <target state="translated"><ph id="ph1">`other`</ph>自变量被视为等于当前实例在下列情况下：</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`3.Equals(System.ValueTuple{`0,`1,`2})">
          <source>Its components are of the same types as those of the current instance.</source>
          <target state="translated">其组件是与当前实例相同的类型。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`3.Equals(System.ValueTuple{`0,`1,`2})">
          <source>Its components are equal to those of the current instance.</source>
          <target state="translated">其组件是等于当前实例。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`3.Equals(System.ValueTuple{`0,`1,`2})">
          <source>Equality is determined by the default equality comparer for each component.</source>
          <target state="translated">相等性取决于每个组件的默认相等比较器。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.GetHashCode">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance.</source>
          <target state="translated">计算当前 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例的哈希代码。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.GetHashCode">
          <source>The hash code for the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例的哈希代码。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`3.Item1">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance's first element.</source>
          <target state="translated">获取当前 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例的第 1 个元素的值。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`3.Item2">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance's second element.</source>
          <target state="translated">获取当前 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例的第 2 个元素的值。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="F:System.ValueTuple`3.Item3">
          <source>Gets the value of the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance's third element.</source>
          <target state="translated">获取当前 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例的第 3 个元素的值。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>The object to compare with the current instance.</source>
          <target state="translated">要与当前实例进行比较的对象。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>An object that provides custom rules for comparison.</source>
          <target state="translated">提供用于比较的自定义规则的对象。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">使用指定的比较器比较当前 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例与指定对象，并返回一个整数，该整数指示当前对象在排序顺序中的位置：是在指定对象之前、之后还是在与指定对象相同的位置。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">一个带符号整数，指示此实例和 <ph id="ph1">&lt;paramref name="other" /&gt;</ph> 在排序顺序中的相对位置，如下表所示。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 值</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 负整数</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例位于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 之前。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例在排序顺序中的位置与 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 相同。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 正整数</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例位于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 之后。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with this instance.</source>
          <target state="translated">与该实例进行比较的对象。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that defines the method to use to evaluate whether the two objects are equal.</source>
          <target state="translated">一个对象，该对象定义用于评估两个对象是否相等的方法。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Returns a value that indicates whether the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance is equal to a specified object based on a specified comparison method.</source>
          <target state="translated">返回一个值，该值指示基于指定的比较方法，当前 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例是否与指定的对象相等。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance is equal to the specified objects; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果当前实例等于指定对象，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object whose <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> method calculates the hash code of the current <ph id="ph2">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance.</source>
          <target state="translated">一个对象，其 <ph id="ph1">&lt;see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /&gt;</ph> 方法计算当前 <ph id="ph2">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例的哈希代码。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>Calculates the hash code for the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance by using a specified computation method.</source>
          <target state="translated">通过使用指定计算方法计算当前 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例的哈希代码。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 位有符号整数哈希代码。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#IComparable#CompareTo(System.Object)">
          <source>The object to compare with the current instance.</source>
          <target state="translated">要与当前实例进行比较的对象。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#IComparable#CompareTo(System.Object)">
          <source>Compares the current <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</source>
          <target state="translated">使用指定的比较器比较当前 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例与指定对象，并返回一个整数，该整数指示当前对象在排序顺序中的位置：是在指定对象之前、之后还是在与指定对象相同的位置。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#IComparable#CompareTo(System.Object)">
          <source>A signed integer that indicates the relative position of this instance and <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> in the sort order, as shown in the following table.</source>
          <target state="translated">一个带符号整数，指示此实例和 <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 在排序顺序中的相对位置，如下表所示。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 值</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A negative integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 负整数</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例位于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 之前。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same position in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例在排序顺序中的位置与 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 相同。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> A positive integer</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 正整数</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.System#IComparable#CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此实例位于 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 之后。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The index of the specified <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> element.</source>
          <target state="translated">指定 <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 元素的索引。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> can range from 0 to 2.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> 的范围可以介于 0 到 2 之间。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>Gets the value of the specified <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> element.</source>
          <target state="translated">获取指定 <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 元素的值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> element at the specified position.</source>
          <target state="translated">指定位置 <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 元素的值。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%603.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ValueTuple%603.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType&gt;</ph>属性是显式接口实现。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">若要调用它，您必须强制转换或转换<ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph>对象传递给<ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph>界面对象。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0 or greater than 2.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小于 0 或大于 2。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.ValueTuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 中的元素数。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>3, the number of elements in a <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> object.</source>
          <target state="translated">3，<ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 对象中的元素数。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>The <ph id="ph1">&lt;xref:System.ValueTuple%603.System%23Runtime%23CompilerServices%23ITuple%23Length%2A?displayProperty=nameWithType&gt;</ph> property is an explicit interface implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ValueTuple%603.System%23Runtime%23CompilerServices%23ITuple%23Length%2A?displayProperty=nameWithType&gt;</ph>属性是显式接口实现。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ValueTuple`3.System#Runtime#CompilerServices#ITuple#Length">
          <source>To call it, you must cast or convert the <ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph> interface object.</source>
          <target state="translated">若要调用它，您必须强制转换或转换<ph id="ph1">&lt;xref:System.ValueTuple%603&gt;</ph>对象传递给<ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ITuple&gt;</ph>界面对象。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.ToString">
          <source>Returns a string that represents the value of this <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> instance.</source>
          <target state="translated">返回表示此 <ph id="ph1">&lt;see cref="T:System.ValueTuple`3" /&gt;</ph> 实例的值的字符串。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ValueTuple`3.ToString">
          <source>The string representation of this <ph id="ph1">&lt;see cref="T:System.ValueTuple`2" /&gt;</ph> instance.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.ValueTuple`2" /&gt;</ph> 实例的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`3.ToString">
          <source>The string returned by this method takes the form (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>, <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>, where <bpt id="p4">*</bpt>Item1<ept id="p4">*</ept>, <bpt id="p5">*</bpt>Item2<ept id="p5">*</ept>, and <bpt id="p6">*</bpt>Item3<ept id="p6">*</ept> represent the values of the <ph id="ph1">&lt;xref:System.ValueTuple%603.Item1&gt;</ph>, <ph id="ph2">&lt;xref:System.ValueTuple%603.Item2&gt;</ph>, and <ph id="ph3">&lt;xref:System.ValueTuple%603.Item3&gt;</ph> fields.</source>
          <target state="translated">通过此方法返回的字符串的形式 (<bpt id="p1">*</bpt>Item1<ept id="p1">*</ept>， <bpt id="p2">*</bpt>Item2<ept id="p2">*</ept>， <bpt id="p3">*</bpt>Item3<ept id="p3">*</ept>，其中<bpt id="p4">*</bpt>Item1<ept id="p4">*</ept>， <bpt id="p5">*</bpt>Item2<ept id="p5">*</ept>，和<bpt id="p6">*</bpt>Item3<ept id="p6">*</ept>表示的值<ph id="ph1">&lt;xref:System.ValueTuple%603.Item1&gt;</ph>， <ph id="ph2">&lt;xref:System.ValueTuple%603.Item2&gt;</ph>，和<ph id="ph3">&lt;xref:System.ValueTuple%603.Item3&gt;</ph>字段。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ValueTuple`3.ToString">
          <source>If any of the field values is <ph id="ph1">`null`</ph>, it is represented as <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果任何字段值为<ph id="ph1">`null`</ph>，它会表示为<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>