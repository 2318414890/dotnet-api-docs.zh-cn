<Type Name="ResolveEventHandler" FullName="System.ResolveEventHandler">
  <TypeSignature Language="C#" Value="public delegate System.Reflection.Assembly ResolveEventHandler(object sender, ResolveEventArgs args);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ResolveEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ResolveEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ResolveEventHandler(sender As Object, args As ResolveEventArgs) As Assembly " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Reflection::Assembly ^ ResolveEventHandler(System::Object ^ sender, ResolveEventArgs ^ args);" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="args" Type="System.ResolveEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Reflection.Assembly</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="96c0e-101">事件源。</span><span class="sxs-lookup"><span data-stu-id="96c0e-101">The source of the event.</span></span></param>
    <param name="args"><span data-ttu-id="96c0e-102">事件数据。</span><span class="sxs-lookup"><span data-stu-id="96c0e-102">The event data.</span></span></param>
    <summary><span data-ttu-id="96c0e-103">表示处理 <see cref="E:System.AppDomain.TypeResolve" /> 的 <see cref="E:System.AppDomain.ResourceResolve" />、<see cref="E:System.AppDomain.AssemblyResolve" /> 或 <see cref="T:System.AppDomain" /> 事件的方法。</span><span class="sxs-lookup"><span data-stu-id="96c0e-103">Represents a method that handles the <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" />, or <see cref="E:System.AppDomain.AssemblyResolve" /> event of an <see cref="T:System.AppDomain" />.</span></span></summary>
    <returns><span data-ttu-id="96c0e-104">解析类型、程序集或资源的程序集；如果无法解析程序集，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="96c0e-104">The assembly that resolves the type, assembly, or resource; or <see langword="null" /> if the assembly cannot be resolved.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c0e-105">如果运行时类加载程序无法解析对程序集、 类型或资源的引用，将引发相应的事件，从而使有机会通知被引用程序集、 类型或资源位于哪个程序集中的运行时的回调。</span><span class="sxs-lookup"><span data-stu-id="96c0e-105">If the runtime class loader cannot resolve a reference to an assembly, type, or resource, the corresponding events are raised to give the callback a chance to tell the runtime which assembly the referenced assembly, type, or resource is in.</span></span> <span data-ttu-id="96c0e-106">它负责<xref:System.ResolveEventHandler>返回的程序集的解析类型、 程序集或资源，或者若要返回无法识别程序集的情况下为 null。</span><span class="sxs-lookup"><span data-stu-id="96c0e-106">It is the responsibility of the <xref:System.ResolveEventHandler> to return the assembly that resolves the type, assembly, or resource, or to return null if the assembly is not recognized.</span></span> <span data-ttu-id="96c0e-107">有关详细信息，请参阅[解析程序集加载](~/docs/framework/app-domains/resolve-assembly-loads.md)和<xref:System.AppDomain.ResourceResolve?displayProperty=nameWithType>， <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType>，和<xref:System.AppDomain.ReflectionOnlyAssemblyResolve?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="96c0e-107">For more information, see [Resolving Assembly Loads](~/docs/framework/app-domains/resolve-assembly-loads.md) and the <xref:System.AppDomain.ResourceResolve?displayProperty=nameWithType>, <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType>, and <xref:System.AppDomain.ReflectionOnlyAssemblyResolve?displayProperty=nameWithType> events.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="96c0e-108">开头[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.ResolveEventHandler?displayProperty=nameWithType>事件引发的所有程序集，包括资源程序集。</span><span class="sxs-lookup"><span data-stu-id="96c0e-108">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ResolveEventHandler?displayProperty=nameWithType> event is raised for all assemblies, including resource assemblies.</span></span> <span data-ttu-id="96c0e-109">在早期版本中的资源程序集不引发事件。</span><span class="sxs-lookup"><span data-stu-id="96c0e-109">In earlier versions, the event was not raised for resource assemblies.</span></span> <span data-ttu-id="96c0e-110">如果本地化操作系统，则可能会调用处理程序多次： 一次针对回退链中每个区域性。</span><span class="sxs-lookup"><span data-stu-id="96c0e-110">If the operating system is localized, the handler might be called multiple times: once for each culture in the fallback chain.</span></span>  
  
 <span data-ttu-id="96c0e-111">每个派生的类<xref:System.Delegate>和<xref:System.MulticastDelegate>具有构造函数和`Invoke`方法。</span><span class="sxs-lookup"><span data-stu-id="96c0e-111">Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and an `Invoke` method.</span></span> <span data-ttu-id="96c0e-112">请参阅中的说明的 c + + 代码示例<xref:System.Delegate>类。</span><span class="sxs-lookup"><span data-stu-id="96c0e-112">See the C++ code example in the description for the <xref:System.Delegate> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.ResourceResolve" />
    <altmember cref="E:System.AppDomain.AssemblyResolve" />
    <altmember cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />
  </Docs>
</Type>