<Type Name="UInt32" FullName="System.UInt32">
  <TypeSignature Language="C#" Value="public struct UInt32 : IComparable, IComparable&lt;uint&gt;, IConvertible, IEquatable&lt;uint&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int32&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int32&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.UInt32" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt32&#xA;Implements IComparable, IComparable(Of UInteger), IConvertible, IEquatable(Of UInteger), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt32 : IComparable, IComparable&lt;System::UInt32&gt;, IConvertible, IEquatable&lt;System::UInt32&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0490c-101">表示 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-101">Represents a 32-bit unsigned integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-102">`UInt32`值类型表示值介于 0 到 4294967295 之间的无符号的整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-102">The `UInt32` value type represents unsigned integers with values ranging from 0 to 4,294,967,295.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0490c-103"><xref:System.UInt32>类型不是符合 CLS。</span><span class="sxs-lookup"><span data-stu-id="0490c-103">The <xref:System.UInt32> type is not CLS-compliant.</span></span> <span data-ttu-id="0490c-104">符合 cls 的替代类型是<xref:System.Int64>。</span><span class="sxs-lookup"><span data-stu-id="0490c-104">The CLS-compliant alternative type is <xref:System.Int64>.</span></span> <span data-ttu-id="0490c-105"><xref:System.Int32> 可以改用替换<xref:System.UInt32>值，其范围从 0 到<xref:System.Int32.MaxValue>。</span><span class="sxs-lookup"><span data-stu-id="0490c-105"><xref:System.Int32> can be used instead to replace a <xref:System.UInt32> value that ranges from zero to <xref:System.Int32.MaxValue>.</span></span> <span data-ttu-id="0490c-106">有关 CLS 遵从性的详细信息，请参阅[语言独立性和独立于语言的组件](~/docs/standard/language-independence-and-language-independent-components.md)。</span><span class="sxs-lookup"><span data-stu-id="0490c-106">For more information about CLS compliance, see [Language Independence and Language-Independent Components](~/docs/standard/language-independence-and-language-independent-components.md).</span></span>  
  
 <span data-ttu-id="0490c-107">`UInt32` 提供用于比较此类型的实例，请将转换到实例的值的方法及其<xref:System.String>表示形式，并将转换<xref:System.String>到此类型的实例的数字表示形式。</span><span class="sxs-lookup"><span data-stu-id="0490c-107">`UInt32` provides methods to compare instances of this type, convert the value of an instance to its <xref:System.String> representation, and convert the <xref:System.String> representation of a number to an instance of this type.</span></span>  
  
 <span data-ttu-id="0490c-108">了解如何设置规范代码控件的格式<xref:System.String>表示形式的值类型，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="0490c-108">For information about how format specification codes control the <xref:System.String> representation of value types, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="0490c-109">此类型的所有成员都是线程安全。</span><span class="sxs-lookup"><span data-stu-id="0490c-109">All members of this type are thread safe.</span></span> <span data-ttu-id="0490c-110">实际上，看起来要修改实例状态的成员返回使用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="0490c-110">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="0490c-111">作为与任何其他类型，读取和写入到共享的变量，其中包含此类型的实例必须受使用锁来确保的线程安全性。</span><span class="sxs-lookup"><span data-stu-id="0490c-111">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.Int32" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0490c-112">将此实例与指定的对象或 <see cref="T:System.UInt32" /> 进行比较，并返回二者相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="0490c-112">Compares this instance to a specified object or <see cref="T:System.UInt32" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0490c-113">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-113">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="0490c-114">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="0490c-114">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="0490c-115">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="0490c-115">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="0490c-116"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="0490c-116"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="0490c-117"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="0490c-117"></term><description> Description</span></span>  
  
 <span data-ttu-id="0490c-118"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="0490c-118"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="0490c-119"></term><description> 此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-119"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="0490c-120"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="0490c-120"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="0490c-121"></term><description> 此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-121"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="0490c-122"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="0490c-122"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="0490c-123"></term><description> 此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-123"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="0490c-124">或</span><span class="sxs-lookup"><span data-stu-id="0490c-124">-or-</span></span>  
  
 <span data-ttu-id="0490c-125"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-125"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-126">任何实例<xref:System.UInt32>，无论其值被视为大于`null`。</span><span class="sxs-lookup"><span data-stu-id="0490c-126">Any instance of <xref:System.UInt32>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="0490c-127">`value`参数必须是`null`或实例<xref:System.UInt32>; 否则为将引发异常。</span><span class="sxs-lookup"><span data-stu-id="0490c-127">The `value` parameter must be `null` or an instance of <xref:System.UInt32>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0490c-128">下面的代码示例演示<xref:System.UInt32.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-128">The following code example demonstrates the <xref:System.UInt32.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[UInt32 Example#3](~/samples/snippets/cpp/VS_Snippets_CLR/UInt32 Example/CPP/source.cpp#3)]
 [!code-csharp[UInt32 Example#3](~/samples/snippets/csharp/VS_Snippets_CLR/UInt32 Example/CS/source.cs#3)]
 [!code-vb[UInt32 Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt32 Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0490c-129"><paramref name="value" /> 不是 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-129"><paramref name="value" /> is not a <see cref="T:System.UInt32" />.</span></span></exception>
        <altmember cref="M:System.UInt32.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.CompareTo(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0490c-130">要比较的无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-130">An unsigned integer to compare.</span></span></param>
        <summary><span data-ttu-id="0490c-131">将此实例与指定的 32 位无符号整数进行比较并返回对其相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="0490c-131">Compares this instance to a specified 32-bit unsigned integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="0490c-132">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="0490c-132">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="0490c-133"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="0490c-133"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="0490c-134"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="0490c-134"></term><description> Description</span></span>  
  
 <span data-ttu-id="0490c-135"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="0490c-135"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="0490c-136"></term><description> 此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-136"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="0490c-137"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="0490c-137"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="0490c-138"></term><description> 此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-138"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="0490c-139"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="0490c-139"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="0490c-140"></term><description> 此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-140"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-141">此方法实现<xref:System.IComparable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.UInt32.CompareTo%2A?displayProperty=nameWithType>方法因为它不具有要转换`value`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-141">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.UInt32.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="0490c-142">具体取决于您的编程语言，它可能会对代码<xref:System.UInt32.CompareTo%2A>其中的参数类型具有较少的位的方法 （为较窄） 比实例类型。</span><span class="sxs-lookup"><span data-stu-id="0490c-142">Depending on your programming language, it might be possible to code a <xref:System.UInt32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="0490c-143">这可能是因为某些编程语言中执行的隐式的扩大转换，它表示具有任意数量的位的实例作为类型参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-143">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="0490c-144">例如，假设实例类型是<xref:System.Int32>和参数类型是<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="0490c-144">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="0490c-145">Microsoft C# 编译器生成的指令来表示形式的参数值<xref:System.Int32>对象，然后生成<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>比较的值的方法<xref:System.Int32>实例和<xref:System.Int32>参数表示形式。</span><span class="sxs-lookup"><span data-stu-id="0490c-145">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="0490c-146">请查阅你的编程语言的文档，以确定其编译器是否对数值类型执行隐式的扩大转换。</span><span class="sxs-lookup"><span data-stu-id="0490c-146">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0490c-147">下面的代码示例演示泛型和非泛型版本的<xref:System.UInt32.CompareTo%2A>多个值和引用类型的方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-147">The following code example demonstrates generic and nongeneric versions of the <xref:System.UInt32.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt32.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0490c-148">返回一个值，该值指示此实例是否与指定的对象或 <see cref="T:System.UInt32" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="0490c-148">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.UInt32" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="0490c-149">与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-149">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="0490c-150">返回一个值，该值指示此实例是否等于指定的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-150">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="0490c-151">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.UInt32" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-151"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.UInt32" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0490c-152">下面的代码示例演示<xref:System.UInt32.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-152">The following code example demonstrates the <xref:System.UInt32.Equals%2A> method.</span></span>  
  
 [!code-cpp[UInt32_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/UInt32_Equals/CPP/uint32_equals.cpp#1)]
 [!code-csharp[UInt32_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/UInt32_Equals/CS/uint32_equals.cs#1)]
 [!code-vb[UInt32_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt32_Equals/VB/uint32_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="0490c-153">编译器重载决策可能应对明显的差异的两个行为<see cref="M:System.UInt32.Equals(System.UInt32)" />方法重载。</span><span class="sxs-lookup"><span data-stu-id="0490c-153">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt32.Equals(System.UInt32)" /> method overloads.</span></span> <span data-ttu-id="0490c-154">如果之间的隐式转换<paramref name="obj" />自变量和一个<see cref="T:System.UInt32" />定义和自变量并不类型化为<see cref="T:System.Object" />，编译器执行隐式转换和调用<see cref="M:System.UInt32.Equals(System.UInt32)" />方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-154">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt32.Equals(System.UInt32)" /> method.</span></span> <span data-ttu-id="0490c-155">否则，它们调用<see cref="M:System.UInt32.Equals(System.Object)" />方法，始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.UInt32" />值。</span><span class="sxs-lookup"><span data-stu-id="0490c-155">Otherwise, they call the <see cref="M:System.UInt32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt32" /> value.</span></span> <span data-ttu-id="0490c-156">下面的示例阐释了两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="0490c-156">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="0490c-157">情况下<see cref="T:System.Byte" />和<see cref="T:System.UInt16" />值，第一个比较返回<see langword="true" />因为编译器自动执行一个的扩大转换，调用<see cref="M:System.UInt32.Equals(System.UInt32)" />方法，而第二个比较返回<see langword="false" />由于编译器调用<see cref="M:System.UInt32.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-157">In the case of <see cref="T:System.Byte" /> and <see cref="T:System.UInt16" /> values,  the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt32.Equals(System.UInt32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt32.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.UInt32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.equals/cs/equalsoverl.cs#1)]
 [!code-vb[System.UInt32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.equals/vb/equalsoverl.vb#1)]</para>
        </block>
        <altmember cref="M:System.UInt32.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (uint obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Equals(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt32 obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="0490c-158">要与此实例进行比较的值。</span><span class="sxs-lookup"><span data-stu-id="0490c-158">A value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="0490c-159">返回一个值，该值指示此实例是否与指定的 <see cref="T:System.UInt32" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="0490c-159">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt32" />.</span></span></summary>
        <returns>
          <span data-ttu-id="0490c-160">如果 <paramref name="obj" /> 的值与此实例相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-160"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-161">此方法实现<xref:System.IEquatable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.UInt32.Equals%28System.Object%29>方法因为它不具有要转换`obj`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-161">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than the <xref:System.UInt32.Equals%28System.Object%29> method because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="0490c-162">编译器重载决策可能应对明显的差异的两个行为<see cref="M:System.UInt32.Equals(System.UInt32)" />方法重载。</span><span class="sxs-lookup"><span data-stu-id="0490c-162">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt32.Equals(System.UInt32)" /> method overloads.</span></span> <span data-ttu-id="0490c-163">如果之间的隐式转换<paramref name="obj" />自变量和一个<see cref="T:System.UInt32" />定义和自变量并不类型化为<see cref="T:System.Object" />，编译器执行隐式转换和调用<see cref="M:System.UInt32.Equals(System.UInt32)" />方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-163">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt32.Equals(System.UInt32)" /> method.</span></span> <span data-ttu-id="0490c-164">否则，它们调用<see cref="M:System.UInt32.Equals(System.Object)" />方法，始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.UInt32" />值。</span><span class="sxs-lookup"><span data-stu-id="0490c-164">Otherwise, they call the <see cref="M:System.UInt32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt32" /> value.</span></span> <span data-ttu-id="0490c-165">下面的示例阐释了两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="0490c-165">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="0490c-166">情况下<see cref="T:System.Byte" />和<see cref="T:System.UInt16" />值，第一个比较返回<see langword="true" />因为编译器自动执行一个的扩大转换，调用<see cref="M:System.UInt32.Equals(System.UInt32)" />方法，而第二个比较返回<see langword="false" />由于编译器调用<see cref="M:System.UInt32.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-166">In the case of <see cref="T:System.Byte" /> and <see cref="T:System.UInt16" /> values,  the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt32.Equals(System.UInt32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt32.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.UInt32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.equals/cs/equalsoverl.cs#1)]
 [!code-vb[System.UInt32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.equals/vb/equalsoverl.vb#1)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0490c-167">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="0490c-167">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="0490c-168">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="0490c-168">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0490c-169">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-169">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-170">枚举常数 <see cref="F:System.TypeCode.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-170">The enumerated constant, <see cref="F:System.TypeCode.UInt32" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const uint MaxValue = 4294967295;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int32 MaxValue = unsigned int32(4294967295)" />
      <MemberSignature Language="DocId" Value="F:System.UInt32.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As UInteger  = 4294967295" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt32 MaxValue = 4294967295;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <MemberValue>4294967295</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0490c-171">表示 <see cref="T:System.UInt32" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="0490c-171">Represents the largest possible value of <see cref="T:System.UInt32" />.</span></span> <span data-ttu-id="0490c-172">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="0490c-172">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-173">此常量的值是 4294967295;也就是说，十六进制 0xFFFFFFFF。</span><span class="sxs-lookup"><span data-stu-id="0490c-173">The value of this constant is 4,294,967,295; that is, hexadecimal 0xFFFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0490c-174">下面的示例使用<xref:System.UInt32.MinValue>和<xref:System.UInt32.MaxValue>字段验证<xref:System.Int64>值的范围内<xref:System.UInt32>键入执行类型转换之前。</span><span class="sxs-lookup"><span data-stu-id="0490c-174">The following example uses the <xref:System.UInt32.MinValue> and <xref:System.UInt32.MaxValue> fields to verify that an <xref:System.Int64> value is within the range of the <xref:System.UInt32> type before it performs a type conversion.</span></span> <span data-ttu-id="0490c-175">此验证可防止<xref:System.OverflowException>在运行时。</span><span class="sxs-lookup"><span data-stu-id="0490c-175">This verification prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt32.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt32.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt32.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const uint MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int32 MinValue = unsigned int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.UInt32.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As UInteger  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt32 MinValue = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0490c-176">表示 <see cref="T:System.UInt32" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="0490c-176">Represents the smallest possible value of <see cref="T:System.UInt32" />.</span></span> <span data-ttu-id="0490c-177">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="0490c-177">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-178">此常量的值为 0。</span><span class="sxs-lookup"><span data-stu-id="0490c-178">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0490c-179">下面的示例演示如何使用<xref:System.UInt32.MinValue>的字段来显示的最小可能值<xref:System.UInt32>变量。</span><span class="sxs-lookup"><span data-stu-id="0490c-179">The following example demonstrates how to use the <xref:System.UInt32.MinValue> field to display the smallest possible value of a <xref:System.UInt32> variable.</span></span>  
  
 [!code-cpp[UInt32 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/UInt32 Example/CPP/source.cpp#2)]
 [!code-csharp[UInt32 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/UInt32 Example/CS/source.cs#2)]
 [!code-vb[UInt32 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt32 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt32.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0490c-180">将数字的字符串表示形式转换为它的等效 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-180">Converts the string representation of a number to its 32-bit unsigned integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.UInt32.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="0490c-181">一个字符串，表示要转换的数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-181">A string representing the number to convert.</span></span></param>
        <summary><span data-ttu-id="0490c-182">将数字的字符串表示形式转换为它的等效 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-182">Converts the string representation of a number to its 32-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="0490c-183">与 <paramref name="s" /> 中包含的数字等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-183">A 32-bit unsigned integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-184">`s`参数应为以下形式的数字的字符串表示。</span><span class="sxs-lookup"><span data-stu-id="0490c-184">The `s` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="0490c-185">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="0490c-185">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="0490c-186">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0490c-186">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="0490c-187">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-187">The following table describes each element.</span></span>  
  
|<span data-ttu-id="0490c-188">元素</span><span class="sxs-lookup"><span data-stu-id="0490c-188">Element</span></span>|<span data-ttu-id="0490c-189">描述</span><span class="sxs-lookup"><span data-stu-id="0490c-189">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0490c-190">*ws*</span><span class="sxs-lookup"><span data-stu-id="0490c-190">*ws*</span></span>|<span data-ttu-id="0490c-191">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="0490c-191">Optional white space.</span></span>|  
|<span data-ttu-id="0490c-192">*sign*</span><span class="sxs-lookup"><span data-stu-id="0490c-192">*sign*</span></span>|<span data-ttu-id="0490c-193">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="0490c-193">An optional sign.</span></span> <span data-ttu-id="0490c-194">有效的符号字符由<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="0490c-194">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="0490c-195">但是，可以仅使用零; 使用负号符号否则，该方法将引发<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="0490c-195">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="0490c-196">*digits*</span><span class="sxs-lookup"><span data-stu-id="0490c-196">*digits*</span></span>|<span data-ttu-id="0490c-197">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="0490c-197">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="0490c-198">忽略任何前导零。</span><span class="sxs-lookup"><span data-stu-id="0490c-198">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="0490c-199">指定的字符串`s`参数解释使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="0490c-199">The string specified by the `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="0490c-200">不能包含任何组分隔符或小数分隔符，并且它不能具有小数部分。</span><span class="sxs-lookup"><span data-stu-id="0490c-200">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="0490c-201">`s`通过使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-201">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="0490c-202">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0490c-202">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0490c-203">若要通过使用特定区域性的格式设置信息中分析字符串，使用<xref:System.UInt32.Parse%28System.String%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-203">To parse a string by using the formatting information of a specific culture, use the <xref:System.UInt32.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0490c-204">下面的示例使用<xref:System.UInt32.Parse%28System.String%29>方法，以便分析的字符串值的数组。</span><span class="sxs-lookup"><span data-stu-id="0490c-204">The following example uses the <xref:System.UInt32.Parse%28System.String%29> method to parse an array of string values.</span></span>  
  
 [!code-csharp[System.UInt32.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.parse/cs/parse1.cs#1)]
 [!code-vb[System.UInt32.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0490c-205"><paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-205">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="0490c-206"><paramref name="s" /> 参数的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="0490c-206">The <paramref name="s" /> parameter is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="0490c-207"><paramref name="s" /> 参数表示小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-207">The <paramref name="s" /> parameter represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="0490c-208">一个字符串，表示要转换的数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-208">A string representing the number to convert.</span></span> <span data-ttu-id="0490c-209">该字符串使用由 <c>style</c> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="0490c-209">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="0490c-210">枚举值的按位组合，这些枚举值指定 <c>s</c> 允许使用的格式。</span><span class="sxs-lookup"><span data-stu-id="0490c-210">A bitwise combination of the enumeration values that specify the permitted format of <c>s</c>.</span></span> <span data-ttu-id="0490c-211">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-211">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="0490c-212">将指定样式的数字的字符串表示形式转换为它的等效 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-212">Converts the string representation of a number in a specified style to its 32-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="0490c-213">与 <paramref name="s" /> 中指定的数字等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-213">A 32-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-214">`style`参数定义中允许的样式元素 （如空格、 正整数或负号符号、 组分隔符符号或小数点符号）`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-214">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="0490c-215">`style` 必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="0490c-215">`style` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="0490c-216">`style`参数将使得此方法重载有用`s`时数字系统 （十进制或十六进制） 由包含的字符串表示形式的十六进制值，`s`仅在运行时，已知时，或者当你想要禁止的空白区域或正负符号`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-216">The `style` parameter makes this method overload useful when `s` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `s` is known only at run time, or when you want to disallow white space or a sign symbol in `s`.</span></span>  
  
 <span data-ttu-id="0490c-217">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="0490c-217">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="0490c-218">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="0490c-218">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="0490c-219">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0490c-219">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="0490c-220">如果`style`包括<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`参数可能包含下列元素：</span><span class="sxs-lookup"><span data-stu-id="0490c-220">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="0490c-221">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="0490c-221">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="0490c-222">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-222">The following table describes each element.</span></span>  
  
|<span data-ttu-id="0490c-223">元素</span><span class="sxs-lookup"><span data-stu-id="0490c-223">Element</span></span>|<span data-ttu-id="0490c-224">描述</span><span class="sxs-lookup"><span data-stu-id="0490c-224">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0490c-225">*ws*</span><span class="sxs-lookup"><span data-stu-id="0490c-225">*ws*</span></span>|<span data-ttu-id="0490c-226">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="0490c-226">Optional white space.</span></span> <span data-ttu-id="0490c-227">空格可以出现在开始`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-227">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="0490c-228">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="0490c-228">A culture-specific currency symbol.</span></span> <span data-ttu-id="0490c-229">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="0490c-229">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="0490c-230">当前区域性的货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-230">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-231">*sign*</span><span class="sxs-lookup"><span data-stu-id="0490c-231">*sign*</span></span>|<span data-ttu-id="0490c-232">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="0490c-232">An optional sign.</span></span> <span data-ttu-id="0490c-233">符号可以出现在开始`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-233">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="0490c-234">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-234">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="0490c-235">但是，可以仅使用零; 使用负号符号否则，该方法将引发<xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="0490c-235">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="0490c-236">*digits*</span><span class="sxs-lookup"><span data-stu-id="0490c-236">*digits*</span></span><br /><br /> <span data-ttu-id="0490c-237">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="0490c-237">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="0490c-238">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="0490c-238">*exponential_digits*</span></span>|<span data-ttu-id="0490c-239">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-239">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="0490c-240">有关*fractional_digits*，但只数字 0 有效。</span><span class="sxs-lookup"><span data-stu-id="0490c-240">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="0490c-241">*，*</span><span class="sxs-lookup"><span data-stu-id="0490c-241">*,*</span></span>|<span data-ttu-id="0490c-242">区域性特定的组分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="0490c-242">A culture-specific group separator symbol.</span></span> <span data-ttu-id="0490c-243">当前区域性的组分隔符可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-243">The current culture's group separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-244">*.*</span><span class="sxs-lookup"><span data-stu-id="0490c-244">*.*</span></span>|<span data-ttu-id="0490c-245">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="0490c-245">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="0490c-246">当前区域性的小数点符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-246">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="0490c-247">仅数字 0 可以显示为分析操作才能成功; 一个小数数字如果*fractional_digits*包括任何其他数字<xref:System.FormatException>引发。</span><span class="sxs-lookup"><span data-stu-id="0490c-247">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0490c-248">E</span><span class="sxs-lookup"><span data-stu-id="0490c-248">E</span></span>|<span data-ttu-id="0490c-249">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="0490c-249">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="0490c-250">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-250">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-251">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="0490c-251">*hexdigits*</span></span>|<span data-ttu-id="0490c-252">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="0490c-252">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="0490c-253">仅为数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>样式) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="0490c-253">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="0490c-254">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能会存在，但不是需要为存在于输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-254">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="0490c-255">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-255">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="0490c-256">`NumberStyles` 值</span><span class="sxs-lookup"><span data-stu-id="0490c-256">`NumberStyles` value</span></span>|<span data-ttu-id="0490c-257">元素允许在`s`除数字之外</span><span class="sxs-lookup"><span data-stu-id="0490c-257">Elements permitted in `s` in addition to digits</span></span>|  
|--------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="0490c-258">*数字*仅元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-258">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="0490c-259">小数点 （.） 和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-259">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="0490c-260">"E"或"E"字符，它指示指数记数法，连同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="0490c-260">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="0490c-261">*Ws*起始处的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-261">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="0490c-262">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-262">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="0490c-263">*登录*起始处的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-263">The *sign* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="0490c-264">*登录*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-264">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="0490c-265">*登录*在括号内包含的数字值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-265">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="0490c-266">组分隔符 （，） 元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-266">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="0490c-267">货币 （$） 元素中。</span><span class="sxs-lookup"><span data-stu-id="0490c-267">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="0490c-268">所有元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-268">All elements.</span></span> <span data-ttu-id="0490c-269">但是，`s`不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-269">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="0490c-270">*Ws*开头或末尾的元素`s`，*登录*开头的`s`，和小数点 (*。*) 符号。</span><span class="sxs-lookup"><span data-stu-id="0490c-270">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="0490c-271">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="0490c-271">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="0490c-272">`ws`， `sign`，组分隔符 (*，*)，和小数点 (*。*) 元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-272">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="0490c-273">所有元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-273">All elements.</span></span> <span data-ttu-id="0490c-274">但是，`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-274">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="0490c-275">与其他不同<xref:System.Globalization.NumberStyles>值，该值允许，但不是需要，特定样式中的元素是否存在`s`、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>样式值意味着中的单个数字字符`s`总是被解释为十六进制字符。</span><span class="sxs-lookup"><span data-stu-id="0490c-275">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `s`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `s` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="0490c-276">有效的十六进制字符为 0-9、 A-F 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="0490c-276">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="0490c-277">不允许的前缀，如"0x"。</span><span class="sxs-lookup"><span data-stu-id="0490c-277">A prefix, such as "0x", is not allowed.</span></span> <span data-ttu-id="0490c-278">其他标志只有可以与组合`style`参数<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0490c-278">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0490c-279">(<xref:System.Globalization.NumberStyles>枚举包含复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="0490c-279">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
 <span data-ttu-id="0490c-280">其他标志只有可以与组合`style`参数<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0490c-280">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0490c-281">(<xref:System.Globalization.NumberStyles>枚举包含复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="0490c-281">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0490c-282">如果`s`是的字符串表示的十六进制数，则无法将前面添加的任何修饰符 (如`0x`或`&h`) 用于将其识别为十六进制数。</span><span class="sxs-lookup"><span data-stu-id="0490c-282">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="0490c-283">这将导致转换失败。</span><span class="sxs-lookup"><span data-stu-id="0490c-283">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="0490c-284">`s`通过使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-284">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="0490c-285">若要指定分析操作使用其格式设置信息的区域性，调用<xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>重载。</span><span class="sxs-lookup"><span data-stu-id="0490c-285">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0490c-286">下面的示例尝试分析字符串数组中的每个元素，方法是使用大量的<xref:System.Globalization.NumberStyles>值。</span><span class="sxs-lookup"><span data-stu-id="0490c-286">The following example tries to parse each element in a string array by using a number of <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt32.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.parse/cs/parseex2.cs#2)]
 [!code-vb[System.UInt32.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.parse/vb/parseex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0490c-287"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-287"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0490c-288"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0490c-288"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="0490c-289">或</span><span class="sxs-lookup"><span data-stu-id="0490c-289">-or-</span></span>  
  
 <span data-ttu-id="0490c-290"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="0490c-290"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0490c-291"><paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-291"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="0490c-292"><paramref name="s" /> 表示一个小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-292"><paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span>  
  
 <span data-ttu-id="0490c-293">或</span><span class="sxs-lookup"><span data-stu-id="0490c-293">-or-</span></span>  
  
 <span data-ttu-id="0490c-294"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="0490c-294"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.UInt32.ToString" />
        <altmember cref="Overload:System.UInt32.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="0490c-295">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="0490c-295">A string that represents the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="0490c-296">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="0490c-296">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="0490c-297">将指定区域性特定格式的数字的字符串表示形式转换为它的等效 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-297">Converts the string representation of a number in a specified culture-specific format to its 32-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="0490c-298">与 <paramref name="s" /> 中指定的数字等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-298">A 32-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-299">`s`参数包含一个数字的窗体：</span><span class="sxs-lookup"><span data-stu-id="0490c-299">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="0490c-300">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="0490c-300">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="0490c-301">方括号 （[和]） 中是可选的项。</span><span class="sxs-lookup"><span data-stu-id="0490c-301">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="0490c-302">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-302">The following table describes each element.</span></span>  
  
|<span data-ttu-id="0490c-303">元素</span><span class="sxs-lookup"><span data-stu-id="0490c-303">Element</span></span>|<span data-ttu-id="0490c-304">描述</span><span class="sxs-lookup"><span data-stu-id="0490c-304">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0490c-305">*ws*</span><span class="sxs-lookup"><span data-stu-id="0490c-305">*ws*</span></span>|<span data-ttu-id="0490c-306">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="0490c-306">Optional white space.</span></span>|  
|<span data-ttu-id="0490c-307">*sign*</span><span class="sxs-lookup"><span data-stu-id="0490c-307">*sign*</span></span>|<span data-ttu-id="0490c-308">一个可选符号后或负号如果`s`表示零的值。</span><span class="sxs-lookup"><span data-stu-id="0490c-308">An optional sign, or a negative sign if `s` represents the value zero.</span></span>|  
|<span data-ttu-id="0490c-309">*digits*</span><span class="sxs-lookup"><span data-stu-id="0490c-309">*digits*</span></span>|<span data-ttu-id="0490c-310">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="0490c-310">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="0490c-311">使用解释 s 参数<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="0490c-311">The s parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="0490c-312">无符号的整数值的十进制数字，除了允许仅前导空格和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="0490c-312">In addition to the unsigned integer value's decimal digits, only leading and trailing spaces along with a leading sign is allowed.</span></span> <span data-ttu-id="0490c-313">(如果存在，负号，则`s`必须表示的值为零或该方法将引发<xref:System.OverflowException>。)若要显式定义的样式元素以及可出现在区域性特定格式设置信息`s`，使用<xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-313">(If the negative sign is present, `s` must represent a value of zero, or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="0490c-314">`provider`参数是<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>对象，提供区域性特定信息的格式`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-314">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="0490c-315">有三种方法使用`provider`参数来提供到分析操作的自定义格式设置信息：</span><span class="sxs-lookup"><span data-stu-id="0490c-315">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="0490c-316">你可以将传递的实际<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-316">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="0490c-317">(其实现<xref:System.IFormatProvider.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="0490c-317">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="0490c-318">你可以将传递<xref:System.Globalization.CultureInfo>指定的格式设置将使用的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-318">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="0490c-319">其<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性提供格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="0490c-319">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="0490c-320">你可以将自定义传递<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-320">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="0490c-321">其<xref:System.IFormatProvider.GetFormat%2A>方法必须实例化并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-321">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="0490c-322">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="0490c-322">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0490c-323">下面的示例是按钮单击事件处理程序的 Web 窗体。</span><span class="sxs-lookup"><span data-stu-id="0490c-323">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="0490c-324">它使用返回的数组<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>属性来确定用户的区域设置。</span><span class="sxs-lookup"><span data-stu-id="0490c-324">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="0490c-325">它然后实例化<xref:System.Globalization.CultureInfo>对应于该区域设置的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-325">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="0490c-326"><xref:System.Globalization.NumberFormatInfo>对象所属的<xref:System.Globalization.CultureInfo>对象随后会传递给<xref:System.UInt32.Parse%28System.String%2CSystem.IFormatProvider%29>方法将用户输入转换为<xref:System.UInt32>值。</span><span class="sxs-lookup"><span data-stu-id="0490c-326">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.UInt32.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.UInt32> value.</span></span>  
  
 [!code-csharp[ParseMethod#6](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#6)]
 [!code-vb[ParseMethod#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#6)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0490c-327"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-327"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0490c-328"><paramref name="s" /> 采用的样式不正确。</span><span class="sxs-lookup"><span data-stu-id="0490c-328"><paramref name="s" /> is not in the correct style.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="0490c-329"><paramref name="s" /> 表示一个小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-329"><paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt32.ToString" />
        <altmember cref="Overload:System.UInt32.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As UInteger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="0490c-330">一个字符串，表示要转换的数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-330">A string representing the number to convert.</span></span> <span data-ttu-id="0490c-331">该字符串使用由 <c>style</c> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="0490c-331">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="0490c-332">枚举值的按位组合，用于指示可出现在 <c>s</c> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-332">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="0490c-333">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-333">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="0490c-334">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="0490c-334">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="0490c-335">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-335">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="0490c-336">与 <paramref name="s" /> 中指定的数字等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-336">A 32-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-337">`style`参数定义中允许的样式元素 （如空白或正整数或负号符号）`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-337">The `style` parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="0490c-338">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="0490c-338">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="0490c-339">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="0490c-339">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="0490c-340">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="0490c-340">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="0490c-341">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0490c-341">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="0490c-342">如果`style`包括<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="0490c-342">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="0490c-343">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="0490c-343">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="0490c-344">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-344">The following table describes each element.</span></span>  
  
|<span data-ttu-id="0490c-345">元素</span><span class="sxs-lookup"><span data-stu-id="0490c-345">Element</span></span>|<span data-ttu-id="0490c-346">描述</span><span class="sxs-lookup"><span data-stu-id="0490c-346">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0490c-347">*ws*</span><span class="sxs-lookup"><span data-stu-id="0490c-347">*ws*</span></span>|<span data-ttu-id="0490c-348">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="0490c-348">Optional white space.</span></span> <span data-ttu-id="0490c-349">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-349">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="0490c-350">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="0490c-350">A culture-specific currency symbol.</span></span> <span data-ttu-id="0490c-351">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>属性<xref:System.Globalization.NumberFormatInfo>返回的对象<xref:System.IFormatProvider.GetFormat%2A>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-351">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="0490c-352">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-352">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-353">*sign*</span><span class="sxs-lookup"><span data-stu-id="0490c-353">*sign*</span></span>|<span data-ttu-id="0490c-354">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="0490c-354">An optional sign.</span></span> <span data-ttu-id="0490c-355">(该方法将引发<xref:System.OverflowException>如果`s`包括一个负号和表示的非零数字。)符号可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现的末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-355">(The method throws an <xref:System.OverflowException> if `s` includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="0490c-356">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-356">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-357">*digits*</span><span class="sxs-lookup"><span data-stu-id="0490c-357">*digits*</span></span>|<span data-ttu-id="0490c-358">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-358">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="0490c-359">*.*</span><span class="sxs-lookup"><span data-stu-id="0490c-359">*.*</span></span>|<span data-ttu-id="0490c-360">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="0490c-360">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="0490c-361">当前区域性的小数点符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-361">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-362">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="0490c-362">*fractional_digits*</span></span>|<span data-ttu-id="0490c-363">一个或多个出现的数字 0-9 如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志或如果它不为 0 的数字的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="0490c-363">One or more occurrences of the digit 0-9 if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, or one or more occurrences of the digit 0 if it does not.</span></span> <span data-ttu-id="0490c-364">小数位数可以出现在`s`才`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-364">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-365">E</span><span class="sxs-lookup"><span data-stu-id="0490c-365">E</span></span>|<span data-ttu-id="0490c-366">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="0490c-366">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="0490c-367">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-367">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-368">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="0490c-368">*exponential_digits*</span></span>|<span data-ttu-id="0490c-369">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-369">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="0490c-370">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-370">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-371">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="0490c-371">*hexdigits*</span></span>|<span data-ttu-id="0490c-372">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="0490c-372">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="0490c-373">仅为十进制数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>样式) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="0490c-373">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="0490c-374">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能会存在，但不是要求必须存在，此输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-374">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="0490c-375">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-375">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="0490c-376">非复合`NumberStyles`值</span><span class="sxs-lookup"><span data-stu-id="0490c-376">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="0490c-377">元素允许在`s`除数字之外</span><span class="sxs-lookup"><span data-stu-id="0490c-377">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="0490c-378">仅为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-378">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="0490c-379">小数点 (*。*) 和*fractional_digits*元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-379">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="0490c-380">但是，如果样式不包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志， *fractional_digits*必须包含仅一个或多个数字 0; 否则为<xref:System.OverflowException>引发。</span><span class="sxs-lookup"><span data-stu-id="0490c-380">However, if style does not include the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, *fractional_digits* must consist of only one or more 0 digits; otherwise, an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="0490c-381">"E"或"E"字符，它指示指数记数法，连同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="0490c-381">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="0490c-382">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-382">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="0490c-383">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-383">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="0490c-384">之前登录*数字*。</span><span class="sxs-lookup"><span data-stu-id="0490c-384">A sign before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="0490c-385">登录后的*数字*。</span><span class="sxs-lookup"><span data-stu-id="0490c-385">A sign after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="0490c-386">之前和之后的括号*数字*以指示负值。</span><span class="sxs-lookup"><span data-stu-id="0490c-386">Parentheses before and after *digits* to indicate a negative value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="0490c-387">组分隔符 (*，*) 元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-387">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="0490c-388">货币 (*$*) 元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-388">The currency (*$*) element.</span></span>|  
  
 <span data-ttu-id="0490c-389">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用标志，`s`必须是十六进制值。</span><span class="sxs-lookup"><span data-stu-id="0490c-389">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="0490c-390">仅其他标志，可以与它组合为<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0490c-390">The only other flags that can be combined with it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0490c-391">(<xref:System.Globalization.NumberStyles>枚举包含复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="0490c-391">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0490c-392">如果`s`参数的值的字符串表示形式的十六进制数，则无法前面添加的任何修饰符 (如`0x`或`&h`) 用于将其识别为十六进制数。</span><span class="sxs-lookup"><span data-stu-id="0490c-392">If the `s` parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="0490c-393">这将导致分析操作引发异常。</span><span class="sxs-lookup"><span data-stu-id="0490c-393">This causes the parse operation to throw an exception.</span></span>  
  
 <span data-ttu-id="0490c-394">`provider`参数是<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>对象，提供区域性特定信息的格式`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-394">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="0490c-395">有三种方法使用`provider`参数来提供到分析操作的自定义格式设置信息：</span><span class="sxs-lookup"><span data-stu-id="0490c-395">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="0490c-396">你可以将传递的实际<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-396">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="0490c-397">(其实现<xref:System.IFormatProvider.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="0490c-397">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="0490c-398">你可以将传递<xref:System.Globalization.CultureInfo>指定的格式设置将使用的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-398">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="0490c-399">其<xref:System.Globalization.CultureInfo.NumberFormat%2A>属性提供格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="0490c-399">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="0490c-400">你可以将自定义传递<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-400">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="0490c-401">其<xref:System.IFormatProvider.GetFormat%2A>方法必须实例化并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-401">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="0490c-402">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>对象使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="0490c-402">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0490c-403">下面的示例使用<xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法将各种字符串表示形式之间的数字转换为 32 位无符号的整数值。</span><span class="sxs-lookup"><span data-stu-id="0490c-403">The following example uses the <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to convert various string representations of numbers to 32-bit unsigned integer values.</span></span>  
  
 [!code-csharp[System.UInt32.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.parse/cs/parseex4.cs#4)]
 [!code-vb[System.UInt32.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.parse/vb/parseex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0490c-404"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-404"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0490c-405"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0490c-405"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="0490c-406">或</span><span class="sxs-lookup"><span data-stu-id="0490c-406">-or-</span></span>  
  
 <span data-ttu-id="0490c-407"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="0490c-407"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0490c-408"><paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-408"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="0490c-409"><paramref name="s" /> 表示一个小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-409"><paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span>  
  
 <span data-ttu-id="0490c-410">或</span><span class="sxs-lookup"><span data-stu-id="0490c-410">-or-</span></span>  
  
 <span data-ttu-id="0490c-411"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="0490c-411"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.UInt32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-412">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-412">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="0490c-413">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-413">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="0490c-414">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-414"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-415">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-415">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0490c-416">它只能在 <xref:System.UInt32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-416">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0490c-417">建议的替代项是调用<xref:System.Convert.ToBoolean%28System.UInt32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-417">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-418">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-418">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="0490c-419">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-419">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-420">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-420">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-421">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-421">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0490c-422">它只能在 <xref:System.UInt32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-422">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0490c-423">建议的替代项是调用<xref:System.Convert.ToByte%28System.UInt32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-423">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-424">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-424">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="0490c-425">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-425">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-426">当前实例的值，已转换为 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-426">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-427">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-427">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0490c-428">它只能在 <xref:System.UInt32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-428">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0490c-429">建议的替代项是调用<xref:System.Convert.ToChar%28System.UInt32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-429">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-430">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-430">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="0490c-431">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="0490c-431">This conversion is not supported.</span></span> <span data-ttu-id="0490c-432">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-432">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-433">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="0490c-433">This conversion is not supported.</span></span> <span data-ttu-id="0490c-434">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="0490c-434">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="0490c-435">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="0490c-435">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-436">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-436">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="0490c-437">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-437">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-438">当前实例的值，已转换为 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-438">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-439">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-439">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0490c-440">它只能在 <xref:System.UInt32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-440">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0490c-441">建议的替代项是调用<xref:System.Convert.ToDecimal%28System.UInt32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-441">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-442">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-442">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="0490c-443">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-443">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-444">当前实例的值，已转换为 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-444">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-445">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-445">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0490c-446">它只能在 <xref:System.UInt32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-446">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0490c-447">建议的替代项是调用<xref:System.Convert.ToDouble%28System.UInt32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-447">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-448">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-448">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="0490c-449">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-449">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-450">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-450">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-451">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-451">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0490c-452">它只能在 <xref:System.UInt32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-452">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0490c-453">建议的替代项是调用<xref:System.Convert.ToInt16%28System.UInt32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-453">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-454">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-454">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="0490c-455">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-455">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-456">当前实例的值，已转换为 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-456">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-457">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-457">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0490c-458">它只能在 <xref:System.UInt32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-458">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0490c-459">建议的替代项是调用<xref:System.Convert.ToInt32%28System.UInt32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-459">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-460">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-460">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="0490c-461">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-461">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-462">当前实例的值，已转换为 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-462">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-463">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-463">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0490c-464">它只能在 <xref:System.UInt32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-464">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0490c-465">建议的替代项是调用<xref:System.Convert.ToInt64%28System.UInt32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-465">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-466">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-466">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="0490c-467">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-467">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-468">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-468">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-469">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-469">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0490c-470">它只能在 <xref:System.UInt32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-470">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0490c-471">建议的替代项是调用<xref:System.Convert.ToSByte%28System.UInt32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-471">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-472">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-472">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="0490c-473">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-473">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-474">当前实例的值，已转换为 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-474">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-475">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-475">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0490c-476">它只能在 <xref:System.UInt32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-476">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0490c-477">建议的替代项是调用<xref:System.Convert.ToSingle%28System.UInt32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-477">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0490c-478">此 <see cref="T:System.UInt32" /> 值要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="0490c-478">The type to which to convert this <see cref="T:System.UInt32" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="0490c-479">一个 <see cref="T:System.IFormatProvider" /> 实现，提供有关返回值格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="0490c-479">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="0490c-480">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-480">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-481">当前实例的值，已转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-481">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-482">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-482">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0490c-483">它只能在 <xref:System.UInt32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-483">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0490c-484">建议的替代项是调用`static`(`Shared`在 Visual Basic 中)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-484">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-485">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-485">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="0490c-486">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-486">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-487">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-487">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-488">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-488">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0490c-489">它只能在 <xref:System.UInt32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-489">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0490c-490">建议的替代项是调用<xref:System.Convert.ToUInt16%28System.UInt32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-490">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-491">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-491">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="0490c-492">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-492">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-493">当前实例的值，未更改。</span><span class="sxs-lookup"><span data-stu-id="0490c-493">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-494">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-494">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0490c-495">它只能在 <xref:System.UInt32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-495">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-496">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-496">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="0490c-497">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-497">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="0490c-498">当前实例的值，已转换为 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-498">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-499">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-499">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0490c-500">它只能在 <xref:System.UInt32> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-500">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="0490c-501">建议的替代项是调用<xref:System.Convert.ToUInt64%28System.UInt32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-501">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0490c-502">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0490c-502">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0490c-503">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0490c-503">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="0490c-504">此实例的值的字符串表示形式，由一系列从 0 到 9 之间的数字组成，不包含符号或前导零。</span><span class="sxs-lookup"><span data-stu-id="0490c-504">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-505"><xref:System.UInt32.ToString>方法格式<xref:System.UInt32>值在默认的 （"G"或常规） 中使用的格式<xref:System.Globalization.NumberFormatInfo>当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-505">The <xref:System.UInt32.ToString> method formats a <xref:System.UInt32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="0490c-506">如果你想要指定其他文件格式或区域性，使用的其他重载<xref:System.UInt32.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0490c-506">If you want to specify a different format or culture, use the other overloads of the <xref:System.UInt32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="0490c-507">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="0490c-507">To use format</span></span>|<span data-ttu-id="0490c-508">区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-508">For culture</span></span>|<span data-ttu-id="0490c-509">使用的重载</span><span class="sxs-lookup"><span data-stu-id="0490c-509">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="0490c-510">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="0490c-510">Default ("G") format</span></span>|<span data-ttu-id="0490c-511">特定区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-511">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="0490c-512">特定的格式</span><span class="sxs-lookup"><span data-stu-id="0490c-512">A specific format</span></span>|<span data-ttu-id="0490c-513">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-513">Default (current) culture</span></span>|<xref:System.UInt32.ToString%28System.String%29>|  
|<span data-ttu-id="0490c-514">特定的格式</span><span class="sxs-lookup"><span data-stu-id="0490c-514">A specific format</span></span>|<span data-ttu-id="0490c-515">特定区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-515">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
   
  
## Examples  
 <span data-ttu-id="0490c-516">下面的示例显示<xref:System.UInt32>通过使用默认值<xref:System.UInt32.ToString>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-516">The following example displays a <xref:System.UInt32> value by using the default <xref:System.UInt32.ToString> method.</span></span> <span data-ttu-id="0490c-517">它还显示的字符串表示形式<xref:System.UInt32>通过使用某些标准格式说明符得到的值。</span><span class="sxs-lookup"><span data-stu-id="0490c-517">It also displays the string representations of the <xref:System.UInt32> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="0490c-518">示例使用 EN-US 区域性的格式设置约定来显示。</span><span class="sxs-lookup"><span data-stu-id="0490c-518">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.UInt32.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.UInt32.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="0490c-519">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-519">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="0490c-520">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0490c-520">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="0490c-521">此实例的值的字符串表示形式，由范围从 0 到 9 的数字序列组成，不包含符号或前导零。</span><span class="sxs-lookup"><span data-stu-id="0490c-521">The string representation of the value of this instance, which consists of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-522"><xref:System.UInt32.ToString%28System.IFormatProvider%29>方法格式<xref:System.UInt32>值在默认的 （"G"或常规） 中使用的格式<xref:System.Globalization.NumberFormatInfo>指定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-522">The <xref:System.UInt32.ToString%28System.IFormatProvider%29> method formats a <xref:System.UInt32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="0490c-523">如果你想要指定不同的格式或当前区域性，使用的其他重载<xref:System.UInt32.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0490c-523">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.UInt32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="0490c-524">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="0490c-524">To use format</span></span>|<span data-ttu-id="0490c-525">区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-525">For culture</span></span>|<span data-ttu-id="0490c-526">使用的重载</span><span class="sxs-lookup"><span data-stu-id="0490c-526">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="0490c-527">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="0490c-527">Default ("G") format</span></span>|<span data-ttu-id="0490c-528">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-528">Default (current) culture</span></span>|<xref:System.UInt32.ToString>|  
|<span data-ttu-id="0490c-529">特定的格式</span><span class="sxs-lookup"><span data-stu-id="0490c-529">A specific format</span></span>|<span data-ttu-id="0490c-530">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-530">Default (current) culture</span></span>|<xref:System.UInt32.ToString%28System.String%29>|  
|<span data-ttu-id="0490c-531">特定的格式</span><span class="sxs-lookup"><span data-stu-id="0490c-531">A specific format</span></span>|<span data-ttu-id="0490c-532">特定区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-532">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="0490c-533">`provider`参数是<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-533">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="0490c-534">其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供区域性特定格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-534">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="0490c-535">但是，没有一个属性的<xref:System.Globalization.NumberFormatInfo>使用通用数值格式说明符 ("G") 格式设置时使用。</span><span class="sxs-lookup"><span data-stu-id="0490c-535">However, none of the properties of the <xref:System.Globalization.NumberFormatInfo> are used when formatting with the general numeric format specifier ("G").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0490c-536">下面的示例通过使用多个格式提供程序，其中包括一个用于固定区域性设置一个 16 位有符号的整数值。</span><span class="sxs-lookup"><span data-stu-id="0490c-536">The following example formats a 16-bit signed integer value by using several format providers, including one for the invariant culture.</span></span> <span data-ttu-id="0490c-537">该示例的输出阐释带格式的字符串返回的<xref:System.UInt32.ToString%28System.IFormatProvider%29>方法无论是相同的格式提供程序。</span><span class="sxs-lookup"><span data-stu-id="0490c-537">The output from the example illustrates that the formatted string returned by the <xref:System.UInt32.ToString%28System.IFormatProvider%29> method is the same regardless of the format provider.</span></span>  
  
 [!code-csharp[System.UInt32.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tostring/cs/tostring2.cs#2)]
 [!code-vb[System.UInt32.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tostring/vb/tostring2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="0490c-538">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0490c-538">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="0490c-539">使用指定的格式将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0490c-539">Converts the numeric value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="0490c-540">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="0490c-540">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-541"><xref:System.UInt32.ToString%28System.String%29>方法格式<xref:System.UInt32>中通过使用指定的格式值<xref:System.Globalization.NumberFormatInfo>对象，表示当前区域性的约定。</span><span class="sxs-lookup"><span data-stu-id="0490c-541">The <xref:System.UInt32.ToString%28System.String%29> method formats a <xref:System.UInt32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="0490c-542">如果你想要使用默认值 （"G"或常规） 格式或指定不同的区域性，请使用其他重载的<xref:System.UInt32.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0490c-542">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.UInt32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="0490c-543">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="0490c-543">To use format</span></span>|<span data-ttu-id="0490c-544">区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-544">For culture</span></span>|<span data-ttu-id="0490c-545">使用的重载</span><span class="sxs-lookup"><span data-stu-id="0490c-545">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="0490c-546">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="0490c-546">Default ("G") format</span></span>|<span data-ttu-id="0490c-547">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-547">Default (current) culture</span></span>|<xref:System.UInt32.ToString>|  
|<span data-ttu-id="0490c-548">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="0490c-548">Default ("G") format</span></span>|<span data-ttu-id="0490c-549">特定区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-549">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="0490c-550">特定的格式</span><span class="sxs-lookup"><span data-stu-id="0490c-550">A specific format</span></span>|<span data-ttu-id="0490c-551">特定区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-551">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="0490c-552">`format`参数可以是任何有效[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)，或的任意组合[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="0490c-552">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="0490c-553">如果`format`等同于<xref:System.String.Empty?displayProperty=nameWithType>或`null`，当前的返回值<xref:System.UInt32>对象使用常规格式说明符 ("G") 进行格式化。</span><span class="sxs-lookup"><span data-stu-id="0490c-553">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt32> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="0490c-554">如果`format`是任何其他值，该方法将引发<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="0490c-554">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="0490c-555">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="0490c-555">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0490c-556">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="0490c-556">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0490c-557">有关.NET Framework 中的格式设置支持的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="0490c-557">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="0490c-558">返回字符串的格式由<xref:System.Globalization.NumberFormatInfo>为当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-558">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="0490c-559">具体取决于`format`参数，此对象控制如组分隔符符号和输出字符串中的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="0490c-559">Depending on the `format` parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string.</span></span> <span data-ttu-id="0490c-560">若要提供区域性而非当前区域性的格式设置信息，请调用<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>重载。</span><span class="sxs-lookup"><span data-stu-id="0490c-560">To provide formatting information for cultures other than the current culture, call the <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0490c-561">下面的示例显示一个 32 位无符号的整数值，通过使用每个标准格式字符串和某些自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0490c-561">The following example displays a 32-bit unsigned integer value by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.UInt32.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tostring/cs/tostring3.cs#3)]
 [!code-vb[System.UInt32.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tostring/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="0490c-562"><paramref name="format" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="0490c-562">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="0490c-563">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="0490c-563">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="0490c-564">一个对象，它提供有关此实例的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="0490c-564">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="0490c-565">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0490c-565">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="0490c-566">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="0490c-566">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-567"><xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>方法格式<xref:System.UInt32>中通过使用指定的格式值<xref:System.Globalization.NumberFormatInfo>指定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-567">The <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.UInt32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="0490c-568">如果你想要使用默认格式或区域性设置，使用的其他重载<xref:System.UInt32.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0490c-568">If you want to use default format or culture settings, use the other overloads of the <xref:System.UInt32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="0490c-569">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="0490c-569">To use format</span></span>|<span data-ttu-id="0490c-570">区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-570">For culture</span></span>|<span data-ttu-id="0490c-571">使用的重载</span><span class="sxs-lookup"><span data-stu-id="0490c-571">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="0490c-572">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="0490c-572">Default ("G") format</span></span>|<span data-ttu-id="0490c-573">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-573">Default (current) culture</span></span>|<xref:System.UInt32.ToString>|  
|<span data-ttu-id="0490c-574">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="0490c-574">Default ("G") format</span></span>|<span data-ttu-id="0490c-575">特定区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-575">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="0490c-576">特定的格式</span><span class="sxs-lookup"><span data-stu-id="0490c-576">A specific format</span></span>|<span data-ttu-id="0490c-577">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="0490c-577">Default (current) culture</span></span>|<xref:System.UInt32.ToString%28System.String%29>|  
  
 <span data-ttu-id="0490c-578">`format`参数可以是任何有效[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)，或的任意组合[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="0490c-578">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="0490c-579">如果`format`等同于<xref:System.String.Empty?displayProperty=nameWithType>或`null`，当前的返回值<xref:System.UInt32>对象使用常规格式说明符 ("G") 进行格式化。</span><span class="sxs-lookup"><span data-stu-id="0490c-579">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt32> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="0490c-580">如果`format`是任何其他值，该方法将引发<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="0490c-580">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="0490c-581">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="0490c-581">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0490c-582">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="0490c-582">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0490c-583">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="0490c-583">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="0490c-584">`provider`参数是<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-584">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="0490c-585">其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供此方法返回的字符串的格式的区域性特定信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-585">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="0490c-586">当<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>调用方法时，它调用`provider`参数的<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法并将其传递<xref:System.Type>对象，表示<xref:System.Globalization.NumberFormatInfo>类型。</span><span class="sxs-lookup"><span data-stu-id="0490c-586">When the <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="0490c-587"><xref:System.IFormatProvider.GetFormat%2A>方法然后返回<xref:System.Globalization.NumberFormatInfo>对象，提供信息的格式设置当前<xref:System.UInt32>值，如组分隔符符号或小数点符号。</span><span class="sxs-lookup"><span data-stu-id="0490c-587">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the current <xref:System.UInt32> value, such as the group separator symbol or the decimal point symbol.</span></span> <span data-ttu-id="0490c-588">有三种方法使用`provider`参数来提供到的格式设置信息<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>方法：</span><span class="sxs-lookup"><span data-stu-id="0490c-588">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="0490c-589">你可以将传递<xref:System.Globalization.CultureInfo>表示的区域性的提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-589">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="0490c-590">其<xref:System.Globalization.CultureInfo.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供该区域性的数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-590">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="0490c-591">你可以将传递的实际<xref:System.Globalization.NumberFormatInfo>提供数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-591">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="0490c-592">(其实现<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="0490c-592">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="0490c-593">你可以传递的自定义对象，实现<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="0490c-593">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="0490c-594">其<xref:System.IFormatProvider.GetFormat%2A>方法实例化，并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-594">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="0490c-595">如果`provider`是`null`，返回字符串的格式设置将基于<xref:System.Globalization.NumberFormatInfo>当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-595">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0490c-596">下面的示例显示一个 32 位无符号的整数值，通过使用标准数字格式说明符和大量的特定<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-596">The following example displays a 32-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <xref:System.Globalization.CultureInfo> objects.</span></span>  
  
 [!code-csharp[System.UInt32.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tostring/cs/tostring4.cs#4)]
 [!code-vb[System.UInt32.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tostring/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="0490c-597"><paramref name="format" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="0490c-597">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0490c-598">尝试将数字的字符串表示形式转换为等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-598">Tries to convert the string representation of a number to its 32-bit unsigned integer equivalent.</span></span> <span data-ttu-id="0490c-599">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="0490c-599">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.UInt32.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out uint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryParse(System.ReadOnlySpan{System.Char},System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::UInt32 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out uint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryParse(System.String,System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::UInt32 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="0490c-600">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="0490c-600">A string that represents the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="0490c-601">当此方法返回时，如果转换成功，则包含与 <c>s</c> 中所包含的数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="0490c-601">When this method returns, contains the 32-bit unsigned integer value that is equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="0490c-602">如果 <c>s</c> 参数为 <see langword="null" /> 或为 <see cref="F:System.String.Empty" />、格式不正确，或者表示小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" /> 的数，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="0490c-602">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span> <span data-ttu-id="0490c-603">此参数未经初始化即进行传递；最初在 <c>result</c> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="0490c-603">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="0490c-604">尝试将数字的字符串表示形式转换为等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-604">Tries to convert the string representation of a number to its 32-bit unsigned integer equivalent.</span></span> <span data-ttu-id="0490c-605">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="0490c-605">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="0490c-606">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-606"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-607"><xref:System.UInt32.TryParse%2A>方法就像是<xref:System.UInt32.Parse%2A>方法，但它不会引发异常，如果转换失败。</span><span class="sxs-lookup"><span data-stu-id="0490c-607">The <xref:System.UInt32.TryParse%2A> method is like the <xref:System.UInt32.Parse%2A> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="0490c-608">此方法无需使用异常处理来测试是否<xref:System.FormatException>如果`s`无效，无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="0490c-608">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="0490c-609">`s`参数应为以下形式的十进制数字的字符串表示：</span><span class="sxs-lookup"><span data-stu-id="0490c-609">The `s` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="0490c-610">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="0490c-610">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="0490c-611">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="0490c-611">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="0490c-612">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-612">The following table describes each element.</span></span>  
  
|<span data-ttu-id="0490c-613">元素</span><span class="sxs-lookup"><span data-stu-id="0490c-613">Element</span></span>|<span data-ttu-id="0490c-614">描述</span><span class="sxs-lookup"><span data-stu-id="0490c-614">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0490c-615">*ws*</span><span class="sxs-lookup"><span data-stu-id="0490c-615">*ws*</span></span>|<span data-ttu-id="0490c-616">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="0490c-616">Optional white space.</span></span>|  
|<span data-ttu-id="0490c-617">*sign*</span><span class="sxs-lookup"><span data-stu-id="0490c-617">*sign*</span></span>|<span data-ttu-id="0490c-618">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="0490c-618">An optional sign.</span></span> <span data-ttu-id="0490c-619">有效的符号字符由<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="0490c-619">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="0490c-620">*digits*</span><span class="sxs-lookup"><span data-stu-id="0490c-620">*digits*</span></span>|<span data-ttu-id="0490c-621">范围从 0 到 9 的十进制数字的序列。</span><span class="sxs-lookup"><span data-stu-id="0490c-621">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="0490c-622">`s`参数解释使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="0490c-622">The `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="0490c-623">十进制数字，除了允许仅前导空格和尾随空格带有前导符号。</span><span class="sxs-lookup"><span data-stu-id="0490c-623">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="0490c-624">若要显式定义可出现在的区域性特定格式设置信息的样式元素`s`，调用<xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29>方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-624">To explicitly define the style elements with the culture-specific formatting information that can be present in `s`, call the <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0490c-625">指定的字符串`s`参数不能包含任何组分隔符或小数分隔符，并且它不能具有小数部分。</span><span class="sxs-lookup"><span data-stu-id="0490c-625">The string specified by the `s` parameter cannot contain any group separators or decimal separator, and it cannot have a fractional portion.</span></span>  
  
 <span data-ttu-id="0490c-626">`s`通过使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-626">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current system culture.</span></span> <span data-ttu-id="0490c-627">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0490c-627">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0490c-628">此重载将解释中的所有位`s`为十进制数字的参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-628">This overload interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="0490c-629">若要分析的字符串表示形式的十六进制数，请调用<xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29>重载。</span><span class="sxs-lookup"><span data-stu-id="0490c-629">To parse the string representation of a hexadecimal number, call the <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0490c-630">下面的示例调用<xref:System.UInt32.TryParse%28System.String%2CSystem.UInt32%40%29>对于字符串数组中每个元素执行一次的方法。</span><span class="sxs-lookup"><span data-stu-id="0490c-630">The following example calls the <xref:System.UInt32.TryParse%28System.String%2CSystem.UInt32%40%29> method once for each element in a string array.</span></span>  
  
 [!code-csharp[System.UInt32.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.UInt32.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.TryParse(System.String,System.Int64@)" />
        <altmember cref="M:System.UInt32.Parse(System.String)" />
        <altmember cref="M:System.UInt32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out uint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt32 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out uint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt32 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="0490c-631">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="0490c-631">A string that represents the number to convert.</span></span> <span data-ttu-id="0490c-632">该字符串使用由 <c>style</c> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="0490c-632">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="0490c-633">枚举值的按位组合，指示 <c>s</c> 允许使用的格式。</span><span class="sxs-lookup"><span data-stu-id="0490c-633">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span></span> <span data-ttu-id="0490c-634">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-634">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="0490c-635">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="0490c-635">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <param name="result"><span data-ttu-id="0490c-636">当此方法返回时，如果转换成功，则包含与 <c>s</c> 中所包含的数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="0490c-636">When this method returns, contains the 32-bit unsigned integer value equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="0490c-637">如果 <c>s</c> 参数为 <see langword="null" /> 或为 <see cref="F:System.String.Empty" />、格式不符合 <c>style</c>，或表示的数小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="0490c-637">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, or represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span> <span data-ttu-id="0490c-638">此参数未经初始化即进行传递；最初在 <c>result</c> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="0490c-638">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="0490c-639">尝试将数字的指定样式和区域性特定格式的字符串表示形式转换为其等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="0490c-639">Tries to convert the string representation of a number in a specified style and culture-specific format to its 32-bit unsigned integer equivalent.</span></span> <span data-ttu-id="0490c-640">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="0490c-640">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="0490c-641">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0490c-641"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0490c-642"><xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29>方法就像是<xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>方法，但它不会引发异常，如果转换失败。</span><span class="sxs-lookup"><span data-stu-id="0490c-642">The <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> method is like the <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="0490c-643">此方法无需使用异常处理来测试是否<xref:System.FormatException>如果`s`无效，无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="0490c-643">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="0490c-644">`style`参数定义中允许的样式元素 （如空白或正整数或负号）`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-644">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="0490c-645">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="0490c-645">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="0490c-646">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="0490c-646">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="0490c-647">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="0490c-647">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="0490c-648">方括号 （[和]） 中是可选的项。</span><span class="sxs-lookup"><span data-stu-id="0490c-648">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="0490c-649">或者，如果`style`参数包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="0490c-649">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="0490c-650">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="0490c-650">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="0490c-651">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-651">The following table describes each element.</span></span>  
  
|<span data-ttu-id="0490c-652">元素</span><span class="sxs-lookup"><span data-stu-id="0490c-652">Element</span></span>|<span data-ttu-id="0490c-653">描述</span><span class="sxs-lookup"><span data-stu-id="0490c-653">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0490c-654">*ws*</span><span class="sxs-lookup"><span data-stu-id="0490c-654">*ws*</span></span>|<span data-ttu-id="0490c-655">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="0490c-655">Optional white space.</span></span> <span data-ttu-id="0490c-656">空格可以出现在开始`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，或在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-656">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="0490c-657">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="0490c-657">A culture-specific currency symbol.</span></span> <span data-ttu-id="0490c-658">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>属性<xref:System.Globalization.NumberFormatInfo>返回对象<xref:System.IFormatProvider.GetFormat%2A>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="0490c-658">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="0490c-659">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-659">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-660">*sign*</span><span class="sxs-lookup"><span data-stu-id="0490c-660">*sign*</span></span>|<span data-ttu-id="0490c-661">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="0490c-661">An optional sign.</span></span> <span data-ttu-id="0490c-662">符号可以出现在开始`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-662">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="0490c-663">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-663">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="0490c-664">但是，如果负号存在，`s`只能表示零值，使分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="0490c-664">However, if the negative sign is present, `s` can only represent the value zero for the parse operation to succeed.</span></span>|  
|<span data-ttu-id="0490c-665">*digits*</span><span class="sxs-lookup"><span data-stu-id="0490c-665">*digits*</span></span>|<span data-ttu-id="0490c-666">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-666">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="0490c-667">*，*</span><span class="sxs-lookup"><span data-stu-id="0490c-667">*,*</span></span>|<span data-ttu-id="0490c-668">特定于区域性的组分隔符。</span><span class="sxs-lookup"><span data-stu-id="0490c-668">A culture-specific group separator.</span></span> <span data-ttu-id="0490c-669">指定的区域性的组分隔符`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-669">The group separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-670">*.*</span><span class="sxs-lookup"><span data-stu-id="0490c-670">*.*</span></span>|<span data-ttu-id="0490c-671">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="0490c-671">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="0490c-672">指定的区域性的小数点符号`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-672">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-673">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="0490c-673">*fractional_digits*</span></span>|<span data-ttu-id="0490c-674">数字 0 的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="0490c-674">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="0490c-675">小数位数可以出现在`s`才`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-675">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-676">E</span><span class="sxs-lookup"><span data-stu-id="0490c-676">E</span></span>|<span data-ttu-id="0490c-677">"E"或者"E"字符，指示该值表示指数 （科学型） 表示法。</span><span class="sxs-lookup"><span data-stu-id="0490c-677">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="0490c-678">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-678">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-679">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="0490c-679">*exponential_digits*</span></span>|<span data-ttu-id="0490c-680">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-680">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="0490c-681">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="0490c-681">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="0490c-682">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="0490c-682">*hexdigits*</span></span>|<span data-ttu-id="0490c-683">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="0490c-683">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="0490c-684">仅为十进制数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>标志) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="0490c-684">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="0490c-685">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能会存在，但不是要求必须存在，此输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-685">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="0490c-686">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-686">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="0490c-687">非复合`NumberStyles`值</span><span class="sxs-lookup"><span data-stu-id="0490c-687">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="0490c-688">除数字之外的值中允许的元素</span><span class="sxs-lookup"><span data-stu-id="0490c-688">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="0490c-689">仅为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-689">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="0490c-690">小数点 (*。*) 和*fractional_digits*元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-690">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="0490c-691">但是， *fractional_digits*仅一个或多个数字 0 或该方法将返回必须组成`false`。</span><span class="sxs-lookup"><span data-stu-id="0490c-691">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="0490c-692">"E"或"E"字符，它指示指数记数法，连同*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="0490c-692">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="0490c-693">如果`s`表示的数字在指数记数法，它不能有非零、 小数组件。</span><span class="sxs-lookup"><span data-stu-id="0490c-693">If `s` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="0490c-694">*Ws*起始处的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-694">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="0490c-695">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-695">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="0490c-696">*登录*元素之前*数字*。</span><span class="sxs-lookup"><span data-stu-id="0490c-696">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="0490c-697">*登录*元素的后面*数字*。</span><span class="sxs-lookup"><span data-stu-id="0490c-697">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="0490c-698">*登录*在括号内包含零个数值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-698">The *sign* element in the form of parentheses enclosing a zero numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="0490c-699">组分隔符 (*，*) 元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-699">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="0490c-700">货币 (*$*) 元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-700">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="0490c-701">所有元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-701">All elements.</span></span> <span data-ttu-id="0490c-702">但是，`s`不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-702">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="0490c-703">*Ws*开头或末尾的元素`s`，*登录*开头的`s`，和小数点 (*。*) 符号。</span><span class="sxs-lookup"><span data-stu-id="0490c-703">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="0490c-704">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="0490c-704">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="0490c-705">*Ws*，*登录*，组分隔符 (*，*)，和小数点 (*。*) 元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-705">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="0490c-706">所有元素。</span><span class="sxs-lookup"><span data-stu-id="0490c-706">All elements.</span></span> <span data-ttu-id="0490c-707">但是，`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="0490c-707">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="0490c-708">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用标志，`s`必须是十六进制值。</span><span class="sxs-lookup"><span data-stu-id="0490c-708">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="0490c-709">仅其他标志可出现在`style`是<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0490c-709">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0490c-710">(<xref:System.Globalization.NumberStyles>枚举具有复合样式， <xref:System.Globalization.NumberStyles.HexNumber>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="0490c-710">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0490c-711">如果`s`是的字符串表示的十六进制数，则无法将前面添加的任何修饰符 (如`0x`或`&h`) 用于将其识别为十六进制数。</span><span class="sxs-lookup"><span data-stu-id="0490c-711">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="0490c-712">这将导致转换失败。</span><span class="sxs-lookup"><span data-stu-id="0490c-712">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="0490c-713">`provider`参数是<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="0490c-713">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="0490c-714">其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>对象，提供区域性特定信息的格式`s`。</span><span class="sxs-lookup"><span data-stu-id="0490c-714">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="0490c-715">`provider`参数可以是以下任何一个：</span><span class="sxs-lookup"><span data-stu-id="0490c-715">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="0490c-716">A<xref:System.Globalization.CultureInfo>表示的区域性的提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-716">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="0490c-717">其<xref:System.Globalization.CultureInfo.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供该区域性的数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-717">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="0490c-718">A<xref:System.Globalization.NumberFormatInfo>提供数字格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-718">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="0490c-719">(其实现<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>仅返回它自身。)</span><span class="sxs-lookup"><span data-stu-id="0490c-719">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="0490c-720">实现一个自定义对象<xref:System.IFormatProvider>。</span><span class="sxs-lookup"><span data-stu-id="0490c-720">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="0490c-721">其<xref:System.IFormatProvider.GetFormat%2A>方法实例化，并返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="0490c-721">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="0490c-722">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>对象使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="0490c-722">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0490c-723">下面的示例调用<xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29>与大量的不同的字符串的方法和<xref:System.Globalization.NumberStyles>值。</span><span class="sxs-lookup"><span data-stu-id="0490c-723">The following example calls the <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> method with a number of different strings and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt32.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.UInt32.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.TryParse(System.String,System.Int64@)" />
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0490c-724"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0490c-724"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="0490c-725">或</span><span class="sxs-lookup"><span data-stu-id="0490c-725">-or-</span></span>  
  
 <span data-ttu-id="0490c-726"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="0490c-726"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
        <altmember cref="M:System.UInt32.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>