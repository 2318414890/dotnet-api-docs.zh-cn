<Type Name="IFormatProvider" FullName="System.IFormatProvider">
  <TypeSignature Language="C#" Value="public interface IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.IFormatProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d4043-101">提供一种机制，用于检索对象以控制格式化。</span><span class="sxs-lookup"><span data-stu-id="d4043-101">Provides a mechanism for retrieving an object to control formatting.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4043-102"><xref:System.IFormatProvider>接口提供提供的格式设置和分析操作中使用格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="d4043-102">The <xref:System.IFormatProvider> interface supplies an object that provides formatting information for formatting and parsing operations.</span></span> <span data-ttu-id="d4043-103">格式设置操作的一种类型的值转换为的字符串表示形式该值。</span><span class="sxs-lookup"><span data-stu-id="d4043-103">Formatting operations convert the value of a type to the string representation of that value.</span></span> <span data-ttu-id="d4043-104">典型的格式设置方法包括`ToString`方法的类型，以及<xref:System.String.Format%2A>。</span><span class="sxs-lookup"><span data-stu-id="d4043-104">Typical formatting methods are the `ToString` methods of a type, as well as <xref:System.String.Format%2A>.</span></span> <span data-ttu-id="d4043-105">分析操作将字符串值的表示形式转换为具有该值的类型。</span><span class="sxs-lookup"><span data-stu-id="d4043-105">Parsing operations convert the string representation of a value to a type with that value.</span></span> <span data-ttu-id="d4043-106">典型的分析方法包括`Parse`和`TryParse`。</span><span class="sxs-lookup"><span data-stu-id="d4043-106">Typical parsing methods are `Parse` and `TryParse`.</span></span>  
  
 <span data-ttu-id="d4043-107"><xref:System.IFormatProvider>接口包含一个方法， <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d4043-107">The <xref:System.IFormatProvider> interface consists of a single method, <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d4043-108"><xref:System.IFormatProvider.GetFormat%2A> 是一个回调方法： 分析或格式设置方法调用它，并将其传递<xref:System.Type>表示的格式设置或分析方法需要的对象的类型的对象将提供的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="d4043-108"><xref:System.IFormatProvider.GetFormat%2A> is a callback method: The parsing or formatting method calls it and passes it a <xref:System.Type> object that represents the type of object that the formatting or parsing method expects will provide formatting information.</span></span> <span data-ttu-id="d4043-109"><xref:System.IFormatProvider.GetFormat%2A>方法负责返回该类型的对象。</span><span class="sxs-lookup"><span data-stu-id="d4043-109">The <xref:System.IFormatProvider.GetFormat%2A> method is responsible for returning an object of that type.</span></span>  
  
 <span data-ttu-id="d4043-110"><xref:System.IFormatProvider> 实现常用隐式的格式设置和分析方法。</span><span class="sxs-lookup"><span data-stu-id="d4043-110"><xref:System.IFormatProvider> implementations are often used implicitly by formatting and parsing methods.</span></span> <span data-ttu-id="d4043-111">例如，<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>方法隐式使用<xref:System.IFormatProvider>表示系统的当前区域性的实现。</span><span class="sxs-lookup"><span data-stu-id="d4043-111">For example, the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method implicitly uses an <xref:System.IFormatProvider> implementation that represents the system's current culture.</span></span> <span data-ttu-id="d4043-112"><xref:System.IFormatProvider> 实现还可以指定显式由拥有类型的参数的方法<xref:System.IFormatProvider>，如<xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>和<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d4043-112"><xref:System.IFormatProvider> implementations can also be specified explicitly by methods that have a parameter of type <xref:System.IFormatProvider>, such as <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> and <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d4043-113">.NET Framework 包括下列三个预定义<xref:System.IFormatProvider>实现提供区域性特定格式设置或分析数字和日期和时间值中使用的信息：</span><span class="sxs-lookup"><span data-stu-id="d4043-113">The .NET Framework includes the following three predefined <xref:System.IFormatProvider> implementations to provide culture-specific information that is used in formatting or parsing numeric and date and time values:</span></span>  
  
-   <span data-ttu-id="d4043-114"><xref:System.Globalization.NumberFormatInfo>类，该类提供信息用于格式化数字，如货币、 千位分隔符和特定区域性的小数分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="d4043-114">The <xref:System.Globalization.NumberFormatInfo> class, which provides information that is used to format numbers, such as the currency, thousands separator, and decimal separator symbols for a particular culture.</span></span> <span data-ttu-id="d4043-115">有关识别的预定义的格式字符串信息<xref:System.Globalization.NumberFormatInfo>对象，并在数字格式设置操作中使用，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="d4043-115">For information about the predefined format strings recognized by a <xref:System.Globalization.NumberFormatInfo> object and used in numeric formatting operations, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="d4043-116"><xref:System.Globalization.DateTimeFormatInfo>类，该类提供用于设置日期和时间，例如特定区域性或顺序和日期的年、 月和日部分的格式的日期和时间分隔符符号格式的信息。</span><span class="sxs-lookup"><span data-stu-id="d4043-116">The <xref:System.Globalization.DateTimeFormatInfo> class, which provides information that is used to format dates and times, such as the date and time separator symbols for a particular culture or the order and format of a date's year, month, and day components.</span></span> <span data-ttu-id="d4043-117">有关识别的预定义的格式字符串信息<xref:System.Globalization.DateTimeFormatInfo>对象，并在数字格式设置操作中使用，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="d4043-117">For information about the predefined format strings recognized by a <xref:System.Globalization.DateTimeFormatInfo> object and used in numeric formatting operations, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="d4043-118"><xref:System.Globalization.CultureInfo>类，该类表示特定区域性。</span><span class="sxs-lookup"><span data-stu-id="d4043-118">The <xref:System.Globalization.CultureInfo> class, which represents a particular culture.</span></span> <span data-ttu-id="d4043-119">其<xref:System.IFormatProvider.GetFormat%2A>方法返回特定于区域性的<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.DateTimeFormatInfo>对象，具体取决于是否<xref:System.Globalization.CultureInfo>对象使用的格式设置或分析涉及数字或日期和时间的操作中。</span><span class="sxs-lookup"><span data-stu-id="d4043-119">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a culture-specific <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.DateTimeFormatInfo> object, depending on whether the <xref:System.Globalization.CultureInfo> object is used in a formatting or parsing operation that involves numbers or dates and times.</span></span>  
  
 <span data-ttu-id="d4043-120">.NET Framework 还支持自定义格式设置。</span><span class="sxs-lookup"><span data-stu-id="d4043-120">The .NET Framework also supports custom formatting.</span></span> <span data-ttu-id="d4043-121">这通常涉及到同时实现的格式设置类创建<xref:System.IFormatProvider>和<xref:System.ICustomFormatter>。</span><span class="sxs-lookup"><span data-stu-id="d4043-121">This typically involves the creation of a formatting class that implements both <xref:System.IFormatProvider> and <xref:System.ICustomFormatter>.</span></span> <span data-ttu-id="d4043-122">此类的实例然后作为参数传递给如执行的自定义的格式设置操作的方法<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>示例进行了说明设置为 12 位数字的帐号数字格式的此类的自定义实现。</span><span class="sxs-lookup"><span data-stu-id="d4043-122">An instance of this class is then passed as a parameter to a method that performs a custom formatting operation, such as <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> The example provides an illustration of such a custom implementation that formats a number as a 12-digit account number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4043-123">下面的示例演示如何<xref:System.IFormatProvider>实现可以更改日期和时间值的表示形式。</span><span class="sxs-lookup"><span data-stu-id="d4043-123">The following example illustrates how an <xref:System.IFormatProvider> implementation can change the representation of a date and time value.</span></span> <span data-ttu-id="d4043-124">在这种情况下，通过使用显示单个日期<xref:System.Globalization.CultureInfo>代表四个不同区域的对象。</span><span class="sxs-lookup"><span data-stu-id="d4043-124">In this case, a single date is displayed by using <xref:System.Globalization.CultureInfo> objects that represent four different cultures.</span></span>  
  
 [!code-csharp[System.IFormatProvider.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/provider2.cs#3)]
 [!code-vb[System.IFormatProvider.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/provider2.vb#3)]  
  
 <span data-ttu-id="d4043-125">下面的示例演示如何实现的类使用<xref:System.IFormatProvider>接口和<xref:System.IFormatProvider.GetFormat%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d4043-125">The following example illustrates the use of a class that implements the <xref:System.IFormatProvider> interface and the <xref:System.IFormatProvider.GetFormat%2A> method.</span></span> <span data-ttu-id="d4043-126">`AcctNumberFormat`类将<xref:System.Int64>值，该值表示设置格式的 12 位数字帐号帐号。</span><span class="sxs-lookup"><span data-stu-id="d4043-126">The `AcctNumberFormat` class converts an <xref:System.Int64> value that represents an account number to a formatted 12-digit account number.</span></span> <span data-ttu-id="d4043-127">其`GetFormat`方法返回对当前的引用`AcctNumberFormat`实例如果`formatType`参数是指一个类以实现<xref:System.ICustomFormatter>; 否则为`GetFormat`返回`null`。</span><span class="sxs-lookup"><span data-stu-id="d4043-127">Its `GetFormat` method returns a reference to the current `AcctNumberFormat` instance if the `formatType` parameter refers to a class that implements <xref:System.ICustomFormatter>; otherwise, `GetFormat` returns `null`.</span></span>  
  
 [!code-csharp[System.IFormatProvider.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#2)]
 [!code-vb[System.IFormatProvider.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#2)]  
  
 <span data-ttu-id="d4043-128">实现的类<xref:System.IFormatProvider>随后可对的格式设置和分析操作的调用中。</span><span class="sxs-lookup"><span data-stu-id="d4043-128">The class that implements <xref:System.IFormatProvider> can then be used in a call to a formatting and parsing operation.</span></span> <span data-ttu-id="d4043-129">例如，下面的代码调用<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>方法来生成一个字符串，包含设置了格式的 12 位数字帐号。</span><span class="sxs-lookup"><span data-stu-id="d4043-129">For example, the following code calls the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method to generate a string that contains a formatted 12-digit account number.</span></span>  
  
 [!code-csharp[System.IFormatProvider.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#1)]
 [!code-vb[System.IFormatProvider.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ICustomFormatter" />
    <altmember cref="T:System.IFormattable" />
  </Docs>
  <Members>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormatProvider.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType"><span data-ttu-id="d4043-130">一个对象，该对象指定要返回的格式对象的类型。</span><span class="sxs-lookup"><span data-stu-id="d4043-130">An object that specifies the type of format object to return.</span></span></param>
        <summary><span data-ttu-id="d4043-131">返回一个对象，该对象为指定类型提供格式设置服务。</span><span class="sxs-lookup"><span data-stu-id="d4043-131">Returns an object that provides formatting services for the specified type.</span></span></summary>
        <returns><span data-ttu-id="d4043-132">如果 <see cref="T:System.IFormatProvider" /> 实现能够提供该类型的对象，则为 <paramref name="formatType" /> 所指定对象的实例；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d4043-132">An instance of the object specified by <paramref name="formatType" />, if the <see cref="T:System.IFormatProvider" /> implementation can supply that type of object; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4043-133"><xref:System.IFormatProvider.GetFormat%2A> 为回调方法，以格式设置和分析方法调用来检索有关格式的输入字符串在分析操作或在格式设置操作的输出字符串的格式的信息。</span><span class="sxs-lookup"><span data-stu-id="d4043-133"><xref:System.IFormatProvider.GetFormat%2A> is a callback method that formatting and parsing methods invoke to retrieve information about the format of the input string in parsing operations or the format of the output string in formatting operations.</span></span> <span data-ttu-id="d4043-134">在`formatType`参数中，将格式设置或分析方法传递的对象执行其操作所需的类型。</span><span class="sxs-lookup"><span data-stu-id="d4043-134">In the `formatType` parameter, the formatting or parsing method passes the type of object it requires to perform its operation.</span></span> <span data-ttu-id="d4043-135">如果<xref:System.IFormatProvider>实现可提供该格式设置或分析对象，它将返回该对象。</span><span class="sxs-lookup"><span data-stu-id="d4043-135">If the <xref:System.IFormatProvider> implementation can supply this formatting or parsing object, it returns that object.</span></span> <span data-ttu-id="d4043-136">如果不是，它返回`null`。</span><span class="sxs-lookup"><span data-stu-id="d4043-136">If not, it returns `null`.</span></span>  
  
 <span data-ttu-id="d4043-137">例如，在调用<xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>方法，该方法的参数是<xref:System.IFormatProvider>对象，提供有关如何可能设置格式的字符串表示形式的当前整数实例的信息。</span><span class="sxs-lookup"><span data-stu-id="d4043-137">For example, in the call to the <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method, the method argument is an <xref:System.IFormatProvider> object that provides information about how the string representation of the current integer instance might be formatted.</span></span> <span data-ttu-id="d4043-138">当运行时执行该方法时，它将调用<xref:System.IFormatProvider>对象的<xref:System.IFormatProvider.GetFormat%2A>方法并将其传递<xref:System.Type>对象，表示<xref:System.Globalization.NumberFormatInfo>类型。</span><span class="sxs-lookup"><span data-stu-id="d4043-138">When the runtime executes the method, it calls the <xref:System.IFormatProvider> object's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="d4043-139">如果<xref:System.IFormatProvider>对象可以提供<xref:System.Globalization.NumberFormatInfo>对象，它将返回该对象。</span><span class="sxs-lookup"><span data-stu-id="d4043-139">If the <xref:System.IFormatProvider> object can supply a <xref:System.Globalization.NumberFormatInfo> object, it returns that object.</span></span> <span data-ttu-id="d4043-140">如果它不能提供该类型的对象，它将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="d4043-140">If it cannot supply an object of that type, it returns `null`.</span></span>  
  
 <span data-ttu-id="d4043-141">你可以实现<xref:System.IFormatProvider>接口和<xref:System.IFormatProvider.GetFormat%2A>提供自定义格式设置或分析服务的类中的方法。</span><span class="sxs-lookup"><span data-stu-id="d4043-141">You can implement the <xref:System.IFormatProvider> interface and the <xref:System.IFormatProvider.GetFormat%2A> method in classes that provide custom formatting or parsing services.</span></span> <span data-ttu-id="d4043-142"><xref:System.IFormatProvider>实现然后作为参数传递给分析或格式设置方法的类型的参数的任何重载<xref:System.IFormatProvider>，如<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>， <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>，或<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d4043-142">The <xref:System.IFormatProvider> implementation is then passed as an argument to any overload of a parsing or formatting method that has a parameter of type <xref:System.IFormatProvider>, such as <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4043-143">下面的示例演示如何实现的类使用<xref:System.IFormatProvider>接口和<xref:System.IFormatProvider.GetFormat%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d4043-143">The following example illustrates the use of a class that implements the <xref:System.IFormatProvider> interface and the <xref:System.IFormatProvider.GetFormat%2A> method.</span></span> <span data-ttu-id="d4043-144">`AcctNumberFormat`类将<xref:System.Int64>值，该值表示设置格式的 12 位数字帐号帐号。</span><span class="sxs-lookup"><span data-stu-id="d4043-144">The `AcctNumberFormat` class converts an <xref:System.Int64> value that represents an account number to a formatted 12-digit account number.</span></span> <span data-ttu-id="d4043-145">其`GetFormat`方法返回对自身的引用，如果`formatType`参数是指一个类以实现<xref:System.ICustomFormatter>; 否则为`GetFormat`返回`null`。</span><span class="sxs-lookup"><span data-stu-id="d4043-145">Its `GetFormat` method returns a reference to itself if the `formatType` parameter refers to a class that implements <xref:System.ICustomFormatter>; otherwise, `GetFormat` returns `null`.</span></span>  
  
 [!code-csharp[System.IFormatProvider.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#2)]
 [!code-vb[System.IFormatProvider.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#2)]  
  
 <span data-ttu-id="d4043-146">实例`AcctNumberFormat`类到一个提供格式设置或分析服务方法然后传递作为自变量。</span><span class="sxs-lookup"><span data-stu-id="d4043-146">An instance of the `AcctNumberFormat` class can then be passed as an argument to a method that provides formatting or parsing services.</span></span> <span data-ttu-id="d4043-147">例如，下面的代码传递`AcctNumberFormat`类到<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>方法来生成设置了格式的 12 位数字帐号。</span><span class="sxs-lookup"><span data-stu-id="d4043-147">For example, the following code passes an `AcctNumberFormat` class to the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method to generate a formatted 12-digit account number.</span></span>  
  
 [!code-csharp[System.IFormatProvider.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#1)]
 [!code-vb[System.IFormatProvider.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>