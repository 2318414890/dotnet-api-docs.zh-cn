<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ActivationContext.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac535c4a5921f18d3bb6188f0bf00dbbed472f78231.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">35c4a5921f18d3bb6188f0bf00dbbed472f78231</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ActivationContext">
          <source>Identifies the activation context for the current application.</source>
          <target state="translated">标识当前应用程序的激活上下文。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ActivationContext">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ActivationContext">
          <source>The <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> class contains an <ph id="ph2">&lt;xref:System.ApplicationIdentity&gt;</ph> and provides internal-only access to the application manifest.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>类包含<ph id="ph2">&lt;xref:System.ApplicationIdentity&gt;</ph>并提供对应用程序清单的仅限内部使用的访问。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ActivationContext">
          <source>The activation context is used during manifest-based activation to set up the domain policy and provide an application-based security model.</source>
          <target state="translated">激活上下文用于在基于清单的激活过程中设置域策略并提供基于应用程序的安全模型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ActivationContext">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationSecurityManager&gt;</ph> class.</source>
          <target state="translated">有关更多信息，请参见 <ph id="ph1">&lt;xref:System.Security.Policy.ApplicationSecurityManager&gt;</ph> 类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ActivationContext">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">此类型实现<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ActivationContext">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">在使用完类型后，您应直接或间接释放类型。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ActivationContext">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">若要直接释放类型，调用其<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>中的方法<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>块。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ActivationContext">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要间接释放类型，请使用 <ph id="ph1">`using`</ph>（在 C# 中）或 <ph id="ph2">`Using`</ph>（在 Visual Basic 中）等语言构造。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ActivationContext">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>接口主题。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ActivationContext">
          <source>The following code example demonstrates the use of an <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> object to obtain the <ph id="ph2">&lt;xref:System.ApplicationIdentity&gt;</ph> for a manifest-based application.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>对象以获取<ph id="ph2">&lt;xref:System.ApplicationIdentity&gt;</ph>基于清单的应用程序。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ActivationContext">
          <source>For correct results, execute this code example as a manifest-based application.</source>
          <target state="translated">有关正确的结果，以基于清单的应用程序中执行此代码示例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.ActivationContext.ApplicationManifestBytes">
          <source>Gets the ClickOnce application manifest for the current application.</source>
          <target state="translated">获取当前应用程序的 ClickOnce 应用程序清单。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.ApplicationManifestBytes">
          <source>A byte array that contains the ClickOnce application manifest for the application that is associated with this <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph>.</source>
          <target state="translated">一个字节数组，它包含与此 <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> 关联的应用程序的 ClickOnce 应用程序清单。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.ApplicationManifestBytes">
          <source>If the activation context is <ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.Loose&gt;</ph>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder.</source>
          <target state="translated">如果激活上下文是<ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.Loose&gt;</ph>，这意味着应用程序未安装在 ClickOnce 存储中，部署清单读取临时下载文件夹。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.ApplicationManifestBytes">
          <source>If the activation context is <ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.StoreBounded&gt;</ph>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store.</source>
          <target state="translated">如果激活上下文是<ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.StoreBounded&gt;</ph>，这意味着应用程序安装在 ClickOnce 应用商店，部署清单读取从 ClickOnce 存储区中。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.ApplicationManifestBytes">
          <source>For more information about deployment manifests, see <bpt id="p1">[</bpt>ClickOnce Deployment Manifest<ept id="p1">](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)</ept>.</source>
          <target state="translated">有关部署清单的详细信息，请参阅<bpt id="p1">[</bpt>ClickOnce 部署清单<ept id="p1">](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.ActivationContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)">
          <source>An object that identifies an application.</source>
          <target state="translated">一个对象，用于标识应用程序。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> class using the specified application identity.</source>
          <target state="translated">使用指定的应用程序标识初始化 <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)">
          <source>An object with the specified application identity.</source>
          <target state="translated">具有指定应用程序标识的对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)">
          <source>The <ph id="ph1">&lt;xref:System.ActivationContext.CreatePartialActivationContext%2A&gt;</ph> method calls an internal constructor to create a new activation context.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ActivationContext.CreatePartialActivationContext%2A&gt;</ph>方法调用内部的构造函数，以创建新的激活上下文。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)">
          <source>The implementation of the <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder.</source>
          <target state="translated">实现<ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>.NET Framework 2.0 版中的类专用于应用程序是未在存储中完全安装或未完全包含在一个文件夹。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)">
          <source>This method provides backward compatibility for later releases in which public constructors provide full activation contexts.</source>
          <target state="translated">此方法提供公共构造函数提供完整的激活上下文的更高版本的向后兼容的性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)">
          <source>No deployment or application identity is specified in <ph id="ph1">&lt;paramref name="identity" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;paramref name="identity" /&gt;</ph> 中没有指定部署标识或应用程序标识。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source>An object that identifies an application.</source>
          <target state="translated">一个对象，用于标识应用程序。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source>A string array of manifest paths for the application.</source>
          <target state="translated">应用程序的清单路径的字符串数组。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> class using the specified application identity and array of manifest paths.</source>
          <target state="translated">使用指定的应用程序标识和清单路径数组来初始化 <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source>An object with the specified application identity and array of manifest paths.</source>
          <target state="translated">具有指定应用程序标识和清单路径数组的对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source>The <ph id="ph1">&lt;xref:System.ActivationContext.CreatePartialActivationContext%2A&gt;</ph> method calls an internal constructor to create a new activation context.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ActivationContext.CreatePartialActivationContext%2A&gt;</ph>方法调用内部的构造函数，以创建新的激活上下文。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source>The implementation of the <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder.</source>
          <target state="translated">实现<ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>.NET Framework 2.0 版中的类专用于应用程序是未在存储中完全安装或未完全包含在一个文件夹。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source>This method provides backward compatibility for later releases in which public constructors provide full activation contexts.</source>
          <target state="translated">此方法提供公共构造函数提供完整的激活上下文的更高版本的向后兼容的性。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source><ph id="ph1">&lt;paramref name="manifestPaths" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manifestPaths" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source>No deployment or application identity is specified in <ph id="ph1">&lt;paramref name="identity" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;paramref name="identity" /&gt;</ph> 中没有指定部署标识或应用程序标识。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> does not match the identity in the manifests.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> 与清单中的标识不匹配。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> does not have the same number of components as the manifest paths.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> 没有与清单路径相同的组件数量。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.ActivationContext.DeploymentManifestBytes">
          <source>Gets the ClickOnce deployment manifest for the current application.</source>
          <target state="translated">获取当前应用程序的 ClickOnce 部署清单。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.DeploymentManifestBytes">
          <source>A byte array that contains the ClickOnce deployment manifest for the application that is associated with this <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph>.</source>
          <target state="translated">一个字节数组，其中包含与此 <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> 关联的应用程序的 ClickOnce 部署清单。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.DeploymentManifestBytes">
          <source>If the activation context is <ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.Loose&gt;</ph>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder.</source>
          <target state="translated">如果激活上下文是<ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.Loose&gt;</ph>，这意味着应用程序未安装在 ClickOnce 存储中，部署清单读取临时下载文件夹。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.DeploymentManifestBytes">
          <source>If the activation context is <ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.StoreBounded&gt;</ph>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store.</source>
          <target state="translated">如果激活上下文是<ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.StoreBounded&gt;</ph>，这意味着应用程序安装在 ClickOnce 应用商店，部署清单读取从 ClickOnce 存储区中。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.DeploymentManifestBytes">
          <source>For more information about deployment manifests, see <bpt id="p1">[</bpt>ClickOnce Deployment Manifest<ept id="p1">](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)</ept>.</source>
          <target state="translated">有关部署清单的详细信息，请参阅<bpt id="p1">[</bpt>ClickOnce 部署清单<ept id="p1">](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)</ept>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph>.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> 使用的所有资源。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ActivationContext.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph>.</source>
          <target state="translated">在完成使用 <ph id="ph1">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph> 后，应调用 <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ActivationContext.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph> 方法使 <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ActivationContext.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ActivationContext&gt;</ph> was occupying.</source>
          <target state="translated">在调用<ph id="ph1">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph>，必须释放对所有引用<ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph>以便垃圾回收器才能回收的内存，<ph id="ph3">&lt;xref:System.ActivationContext&gt;</ph>占用。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ActivationContext.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ActivationContext.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph>.</source>
          <target state="translated">每次释放对 <ph id="ph1">&lt;xref:System.ActivationContext.Dispose%2A&gt;</ph> 的最后一个引用前，均应调用 <ph id="ph2">&lt;xref:System.ActivationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ActivationContext.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否则，在垃圾回收器调用 <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> 对象的 <ph id="ph2">`Finalize`</ph> 方法之前，该对象正在使用的资源不会被释放。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.Finalize">
          <source>Enables an <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> object to attempt to free resources and perform other cleanup operations before the <ph id="ph2">&lt;see cref="T:System.ActivationContext" /&gt;</ph> is reclaimed by garbage collection.</source>
          <target state="translated">使 <ph id="ph1">&lt;see cref="T:System.ActivationContext" /&gt;</ph> 对象在垃圾回收已收回 <ph id="ph2">&lt;see cref="T:System.ActivationContext" /&gt;</ph> 之前尝试释放资源并执行其他清理操作。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.ActivationContext.Form">
          <source>Gets the form, or store context, for the current application.</source>
          <target state="translated">获取当前应用程序的窗体或存储区上下文。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.Form">
          <source>One of the enumeration values.</source>
          <target state="translated">枚举值之一。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.Form">
          <source>A manifest-based application might not be installed in the ClickOnce store.</source>
          <target state="translated">基于清单的应用程序可能未安装 ClickOnce 存储中。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.Form">
          <source>An application that is not in the store, such as a manifest-activated application executing in <ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>, is classified as <ph id="ph2">&lt;xref:System.ActivationContext.ContextForm.Loose&gt;</ph>.</source>
          <target state="translated">不在存储中，如清单激活的应用程序执行中的应用程序<ph id="ph1">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>，归类为<ph id="ph2">&lt;xref:System.ActivationContext.ContextForm.Loose&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.Form">
          <source>An application that is contained in the store is classified as <ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.StoreBounded&gt;</ph>.</source>
          <target state="translated">应用程序存储中包含归类为<ph id="ph1">&lt;xref:System.ActivationContext.ContextForm.StoreBounded&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.ActivationContext.Identity">
          <source>Gets the application identity for the current application.</source>
          <target state="translated">获取当前应用程序的应用程序标识。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.Identity">
          <source>An <ph id="ph1">&lt;see cref="T:System.ApplicationIdentity" /&gt;</ph> object that identifies the current application.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ApplicationIdentity" /&gt;</ph> 对象，用于标识当前应用程序。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.Identity">
          <source>An <ph id="ph1">&lt;xref:System.ApplicationIdentity&gt;</ph> uniquely identifies an application by its full name and location.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ApplicationIdentity&gt;</ph>唯一标识应用程序由其完整名称和位置。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.Identity">
          <source>The following code example demonstrates the use of an <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> object to obtain the <ph id="ph2">&lt;xref:System.ApplicationIdentity&gt;</ph> for a manifest-based application.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>对象以获取<ph id="ph2">&lt;xref:System.ApplicationIdentity&gt;</ph>基于清单的应用程序。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ActivationContext.Identity">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.ActivationContext&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object to populate with data.</source>
          <target state="translated">要填充数据的对象。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The structure for this serialization.</source>
          <target state="translated">此序列化的结构。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with the data needed to serialize the target object.</source>
          <target state="translated">使用将目标对象序列化所需的数据填充 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>