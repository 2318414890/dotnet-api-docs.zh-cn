<Type Name="ActivationContext" FullName="System.ActivationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="835c7c454998fde526720afae2ec02b0a7deec3d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36433280" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ActivationContext : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ActivationContext extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.ActivationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActivationContext&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivationContext sealed : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type ActivationContext = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="179bd-101">Identifies the activation context for the current application.</span>
      <span class="sxs-lookup">
        <span data-stu-id="179bd-101">Identifies the activation context for the current application.</span>
      </span>
      <span data-ttu-id="179bd-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="179bd-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179bd-103"><xref:System.ActivationContext>类包含<xref:System.ApplicationIdentity>并提供对应用程序清单的仅限内部使用的访问。</span><span class="sxs-lookup"><span data-stu-id="179bd-103">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> and provides internal-only access to the application manifest.</span></span> <span data-ttu-id="179bd-104">激活上下文用于在基于清单的激活过程中设置域策略并提供基于应用程序的安全模型。</span><span class="sxs-lookup"><span data-stu-id="179bd-104">The activation context is used during manifest-based activation to set up the domain policy and provide an application-based security model.</span></span> <span data-ttu-id="179bd-105">有关更多信息，请参见 <xref:System.Security.Policy.ApplicationSecurityManager> 类。</span><span class="sxs-lookup"><span data-stu-id="179bd-105">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="179bd-106">此类型实现<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="179bd-106">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="179bd-107">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="179bd-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="179bd-108">若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try` / `catch`块。</span><span class="sxs-lookup"><span data-stu-id="179bd-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="179bd-109">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="179bd-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="179bd-110">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分<xref:System.IDisposable>接口主题。</span><span class="sxs-lookup"><span data-stu-id="179bd-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="179bd-111">下面的代码示例演示如何将<xref:System.ActivationContext>对象以获取<xref:System.ApplicationIdentity>基于清单的应用程序。</span><span class="sxs-lookup"><span data-stu-id="179bd-111">The following code example demonstrates the use of an <xref:System.ActivationContext> object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application.</span></span> <span data-ttu-id="179bd-112">有关正确的结果，以基于清单的应用程序中执行此代码示例。</span><span class="sxs-lookup"><span data-stu-id="179bd-112">For correct results, execute this code example as a manifest-based application.</span></span>  
  
 [!code-csharp[System.ActivationContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#1)]
 [!code-vb[System.ActivationContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationManifestBytes">
      <MemberSignature Language="C#" Value="public byte[] ApplicationManifestBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] ApplicationManifestBytes" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.ApplicationManifestBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationManifestBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ ApplicationManifestBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationManifestBytes : byte[]" Usage="System.ActivationContext.ApplicationManifestBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="179bd-113">Gets the ClickOnce application manifest for the current application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-113">Gets the ClickOnce application manifest for the current application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="179bd-114">字节数组，其中包含与此关联的应用程序的 ClickOnce 应用程序清单<see cref="T:System.ActivationContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-114">A byte array that contains the ClickOnce application manifest for the application that is associated with this <see cref="T:System.ActivationContext" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179bd-115">如果激活上下文是<xref:System.ActivationContext.ContextForm.Loose>，这意味着应用程序未安装在 ClickOnce 存储中，部署清单读取临时下载文件夹。</span><span class="sxs-lookup"><span data-stu-id="179bd-115">If the activation context is <xref:System.ActivationContext.ContextForm.Loose>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder.</span></span> <span data-ttu-id="179bd-116">如果激活上下文是<xref:System.ActivationContext.ContextForm.StoreBounded>，这意味着应用程序安装在 ClickOnce 应用商店，部署清单读取从 ClickOnce 存储区中。</span><span class="sxs-lookup"><span data-stu-id="179bd-116">If the activation context is <xref:System.ActivationContext.ContextForm.StoreBounded>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store.</span></span> <span data-ttu-id="179bd-117">有关部署清单的详细信息，请参阅[ClickOnce 部署清单](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)。</span><span class="sxs-lookup"><span data-stu-id="179bd-117">For more information about deployment manifests, see [ClickOnce Deployment Manifest](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePartialActivationContext">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="179bd-118">Initializes a new instance of the <see cref="T:System.ActivationContext" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-118">Initializes a new instance of the <see cref="T:System.ActivationContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePartialActivationContext">
      <MemberSignature Language="C#" Value="public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ActivationContext CreatePartialActivationContext(class System.ApplicationIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartialActivationContext (identity As ApplicationIdentity) As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ActivationContext ^ CreatePartialActivationContext(ApplicationIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="static member CreatePartialActivationContext : ApplicationIdentity -&gt; ActivationContext" Usage="System.ActivationContext.CreatePartialActivationContext identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ApplicationIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="179bd-119">An object that identifies an application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-119">An object that identifies an application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="179bd-120">Initializes a new instance of the <see cref="T:System.ActivationContext" /> class using the specified application identity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-120">Initializes a new instance of the <see cref="T:System.ActivationContext" /> class using the specified application identity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="179bd-121">An object with the specified application identity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-121">An object with the specified application identity.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179bd-122"><xref:System.ActivationContext.CreatePartialActivationContext%2A>方法调用内部的构造函数，以创建新的激活上下文。</span><span class="sxs-lookup"><span data-stu-id="179bd-122">The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context.</span></span> <span data-ttu-id="179bd-123">实现<xref:System.ActivationContext>.NET Framework 2.0 版中的类专用于应用程序是未在存储中完全安装或未完全包含在一个文件夹。</span><span class="sxs-lookup"><span data-stu-id="179bd-123">The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder.</span></span> <span data-ttu-id="179bd-124">此方法提供公共构造函数提供完整的激活上下文的更高版本的向后兼容的性。</span><span class="sxs-lookup"><span data-stu-id="179bd-124">This method provides backward compatibility for later releases in which public constructors provide full activation contexts.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="179bd-125">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-125">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="179bd-126">No deployment or application identity is specified in <paramref name="identity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-126">No deployment or application identity is specified in <paramref name="identity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreatePartialActivationContext">
      <MemberSignature Language="C#" Value="public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity, string[] manifestPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ActivationContext CreatePartialActivationContext(class System.ApplicationIdentity identity, string[] manifestPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartialActivationContext (identity As ApplicationIdentity, manifestPaths As String()) As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ActivationContext ^ CreatePartialActivationContext(ApplicationIdentity ^ identity, cli::array &lt;System::String ^&gt; ^ manifestPaths);" />
      <MemberSignature Language="F#" Value="static member CreatePartialActivationContext : ApplicationIdentity * string[] -&gt; ActivationContext" Usage="System.ActivationContext.CreatePartialActivationContext (identity, manifestPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ApplicationIdentity" />
        <Parameter Name="manifestPaths" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="179bd-127">An object that identifies an application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-127">An object that identifies an application.</span>
          </span>
        </param>
        <param name="manifestPaths">
          <span data-ttu-id="179bd-128">A string array of manifest paths for the application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-128">A string array of manifest paths for the application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="179bd-129">Initializes a new instance of the <see cref="T:System.ActivationContext" /> class using the specified application identity and array of manifest paths.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-129">Initializes a new instance of the <see cref="T:System.ActivationContext" /> class using the specified application identity and array of manifest paths.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="179bd-130">An object with the specified application identity and array of manifest paths.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-130">An object with the specified application identity and array of manifest paths.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179bd-131"><xref:System.ActivationContext.CreatePartialActivationContext%2A>方法调用内部的构造函数，以创建新的激活上下文。</span><span class="sxs-lookup"><span data-stu-id="179bd-131">The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context.</span></span> <span data-ttu-id="179bd-132">实现<xref:System.ActivationContext>.NET Framework 2.0 版中的类专用于应用程序是未在存储中完全安装或未完全包含在一个文件夹。</span><span class="sxs-lookup"><span data-stu-id="179bd-132">The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder.</span></span> <span data-ttu-id="179bd-133">此方法提供公共构造函数提供完整的激活上下文的更高版本的向后兼容的性。</span><span class="sxs-lookup"><span data-stu-id="179bd-133">This method provides backward compatibility for later releases in which public constructors provide full activation contexts.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="179bd-134">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-134">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="179bd-135">-or-  <paramref name="manifestPaths" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-135">-or-  <paramref name="manifestPaths" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="179bd-136">No deployment or application identity is specified in <paramref name="identity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-136">No deployment or application identity is specified in <paramref name="identity" />.</span>
          </span>
          <span data-ttu-id="179bd-137">-or-  <paramref name="identity" /> does not match the identity in the manifests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-137">-or-  <paramref name="identity" /> does not match the identity in the manifests.</span>
          </span>
          <span data-ttu-id="179bd-138">-or-  <paramref name="identity" /> does not have the same number of components as the manifest paths.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-138">-or-  <paramref name="identity" /> does not have the same number of components as the manifest paths.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeploymentManifestBytes">
      <MemberSignature Language="C#" Value="public byte[] DeploymentManifestBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DeploymentManifestBytes" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.DeploymentManifestBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeploymentManifestBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DeploymentManifestBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeploymentManifestBytes : byte[]" Usage="System.ActivationContext.DeploymentManifestBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="179bd-139">Gets the ClickOnce deployment manifest for the current application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-139">Gets the ClickOnce deployment manifest for the current application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="179bd-140">一个字节数组，其中包含与此 <see cref="T:System.ActivationContext" /> 关联的应用程序的 ClickOnce 部署清单。</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-140">A byte array that contains the ClickOnce deployment manifest for the application that is associated with this <see cref="T:System.ActivationContext" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179bd-141">如果激活上下文是<xref:System.ActivationContext.ContextForm.Loose>，这意味着应用程序未安装在 ClickOnce 存储中，部署清单读取临时下载文件夹。</span><span class="sxs-lookup"><span data-stu-id="179bd-141">If the activation context is <xref:System.ActivationContext.ContextForm.Loose>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder.</span></span> <span data-ttu-id="179bd-142">如果激活上下文是<xref:System.ActivationContext.ContextForm.StoreBounded>，这意味着应用程序安装在 ClickOnce 应用商店，部署清单读取从 ClickOnce 存储区中。</span><span class="sxs-lookup"><span data-stu-id="179bd-142">If the activation context is <xref:System.ActivationContext.ContextForm.StoreBounded>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store.</span></span> <span data-ttu-id="179bd-143">有关部署清单的详细信息，请参阅[ClickOnce 部署清单](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b)。</span><span class="sxs-lookup"><span data-stu-id="179bd-143">For more information about deployment manifests, see [ClickOnce Deployment Manifest](http://msdn.microsoft.com/library/8457e615-e3b6-4990-8dcf-11bc590e4e9b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="activationContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="179bd-144">Releases all resources used by the <see cref="T:System.ActivationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-144">Releases all resources used by the <see cref="T:System.ActivationContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179bd-145">在完成使用 <xref:System.ActivationContext.Dispose%2A> 后，应调用 <xref:System.ActivationContext>。</span><span class="sxs-lookup"><span data-stu-id="179bd-145">Call <xref:System.ActivationContext.Dispose%2A> when you are finished using the <xref:System.ActivationContext>.</span></span> <span data-ttu-id="179bd-146"><xref:System.ActivationContext.Dispose%2A> 方法使 <xref:System.ActivationContext> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="179bd-146">The <xref:System.ActivationContext.Dispose%2A> method leaves the <xref:System.ActivationContext> in an unusable state.</span></span> <span data-ttu-id="179bd-147">在调用<xref:System.ActivationContext.Dispose%2A>，必须释放对所有引用<xref:System.ActivationContext>以便垃圾回收器才能回收的内存，<xref:System.ActivationContext>占用。</span><span class="sxs-lookup"><span data-stu-id="179bd-147">After calling <xref:System.ActivationContext.Dispose%2A>, you must release all references to the <xref:System.ActivationContext> so the garbage collector can reclaim the memory that the <xref:System.ActivationContext> was occupying.</span></span> <span data-ttu-id="179bd-148">有关详细信息，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="179bd-148">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="179bd-149">每次释放对 <xref:System.ActivationContext.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.ActivationContext>。</span><span class="sxs-lookup"><span data-stu-id="179bd-149">Always call <xref:System.ActivationContext.Dispose%2A> before you release your last reference to the <xref:System.ActivationContext>.</span></span> <span data-ttu-id="179bd-150">否则，在垃圾回收器调用 <xref:System.ActivationContext> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="179bd-150">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ActivationContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ActivationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ActivationContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="activationContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="179bd-151">Enables an <see cref="T:System.ActivationContext" /> object to attempt to free resources and perform other cleanup operations before the <see cref="T:System.ActivationContext" /> is reclaimed by garbage collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-151">Enables an <see cref="T:System.ActivationContext" /> object to attempt to free resources and perform other cleanup operations before the <see cref="T:System.ActivationContext" /> is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public ActivationContext.ContextForm Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ActivationContext/ContextForm Form" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As ActivationContext.ContextForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ActivationContext::ContextForm Form { ActivationContext::ContextForm get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : ActivationContext.ContextForm" Usage="System.ActivationContext.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext+ContextForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="179bd-152">Gets the form, or store context, for the current application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-152">Gets the form, or store context, for the current application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="179bd-153">枚举值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-153">One of the enumeration values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179bd-154">基于清单的应用程序可能未安装 ClickOnce 存储中。</span><span class="sxs-lookup"><span data-stu-id="179bd-154">A manifest-based application might not be installed in the ClickOnce store.</span></span> <span data-ttu-id="179bd-155">不在存储中，如在 Visual Studio 中，清单激活的应用程序执行的应用程序被归类为<xref:System.ActivationContext.ContextForm.Loose>。</span><span class="sxs-lookup"><span data-stu-id="179bd-155">An application that is not in the store, such as a manifest-activated application executing in Visual Studio, is classified as <xref:System.ActivationContext.ContextForm.Loose>.</span></span> <span data-ttu-id="179bd-156">应用程序存储中包含归类为<xref:System.ActivationContext.ContextForm.StoreBounded>。</span><span class="sxs-lookup"><span data-stu-id="179bd-156">An application that is contained in the store is classified as <xref:System.ActivationContext.ContextForm.StoreBounded>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public ApplicationIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ApplicationIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.Identity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identity As ApplicationIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ApplicationIdentity ^ Identity { ApplicationIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : ApplicationIdentity" Usage="System.ActivationContext.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ApplicationIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="179bd-157">Gets the application identity for the current application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-157">Gets the application identity for the current application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="179bd-158">
            <see cref="T:System.ApplicationIdentity" />标识当前应用程序的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-158">An <see cref="T:System.ApplicationIdentity" /> object that identifies the current application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179bd-159"><xref:System.ApplicationIdentity>唯一标识应用程序由其完整名称和位置。</span><span class="sxs-lookup"><span data-stu-id="179bd-159">An <xref:System.ApplicationIdentity> uniquely identifies an application by its full name and location.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="179bd-160">下面的代码示例演示如何将<xref:System.ActivationContext>对象以获取<xref:System.ApplicationIdentity>基于清单的应用程序。</span><span class="sxs-lookup"><span data-stu-id="179bd-160">The following code example demonstrates the use of an <xref:System.ActivationContext> object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application.</span></span> <span data-ttu-id="179bd-161">此代码示例摘自更大的示例为提供<xref:System.ActivationContext>类。</span><span class="sxs-lookup"><span data-stu-id="179bd-161">This code example is part of a larger example provided for the <xref:System.ActivationContext> class.</span></span>  
  
 [!code-csharp[System.ActivationContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#2)]
 [!code-vb[System.ActivationContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="179bd-162">The object to populate with data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-162">The object to populate with data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="179bd-163">The structure for this serialization.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-163">The structure for this serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="179bd-164">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-164">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="179bd-165">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-165">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="179bd-166">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="179bd-166">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>