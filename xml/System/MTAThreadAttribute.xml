<Type Name="MTAThreadAttribute" FullName="System.MTAThreadAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19265a3002579e7a42ce6aa68bf6bb78adf1822d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36430099" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MTAThreadAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MTAThreadAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.MTAThreadAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MTAThreadAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MTAThreadAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type MTAThreadAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4b9c0-101">指示应用程序的 COM 线程模型为多线程单元 (MTA)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b9c0-101">Indicates that the COM threading model for an application is multithreaded apartment (MTA).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b9c0-102">将此特性应用于入口点方法 ( `Main()` C# 和 Visual Basic 中的方法)。</span><span class="sxs-lookup"><span data-stu-id="4b9c0-102">Apply this attribute to the entry point method (the `Main()` method in C# and Visual Basic).</span></span> <span data-ttu-id="4b9c0-103">它具有不会影响其他方法。</span><span class="sxs-lookup"><span data-stu-id="4b9c0-103">It has no effect on other methods.</span></span> <span data-ttu-id="4b9c0-104">若要设置在你的代码中启动的线程的单元状态，使用<xref:System.Threading.Thread.SetApartmentState%2A?displayProperty=nameWithType>或<xref:System.Threading.Thread.TrySetApartmentState%2A?displayProperty=nameWithType>方法，然后再启动线程。</span><span class="sxs-lookup"><span data-stu-id="4b9c0-104">To set the apartment state of threads you start in your code, use the <xref:System.Threading.Thread.SetApartmentState%2A?displayProperty=nameWithType> or <xref:System.Threading.Thread.TrySetApartmentState%2A?displayProperty=nameWithType> method before starting the thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4b9c0-105">有关 COM 线程模型的概述，请参阅[了解和使用 COM 线程处理模型](http://msdn.microsoft.com/library/ms809971.aspx)。</span><span class="sxs-lookup"><span data-stu-id="4b9c0-105">For an overview of COM threading models, see [Understanding and Using COM Threading Models](http://msdn.microsoft.com/library/ms809971.aspx).</span></span>  
  
 <span data-ttu-id="4b9c0-106">COM 线程处理模型仅适用于使用 COM 互操作的应用程序。</span><span class="sxs-lookup"><span data-stu-id="4b9c0-106">COM threading models only apply to applications that use COM interop.</span></span> <span data-ttu-id="4b9c0-107">COM 线程模型可以设置为单线程单元或多线程的单元。</span><span class="sxs-lookup"><span data-stu-id="4b9c0-107">The COM threading model can be set to single-threaded apartment or multithreaded apartment.</span></span> <span data-ttu-id="4b9c0-108">如果线程实际进行对 COM 组件的调用，仅初始化将应用程序线程为 COM 互操作。</span><span class="sxs-lookup"><span data-stu-id="4b9c0-108">The application thread is only initialized for COM interop if the thread actually makes a call to a COM component.</span></span> <span data-ttu-id="4b9c0-109">如果未使用 COM 互操作，则该线程不会被初始化，和<xref:System.MTAThreadAttribute>特性，如果不存在，没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="4b9c0-109">If COM interop is not used, then the thread is not initialized, and the <xref:System.MTAThreadAttribute> attribute, if it is present, has no effect.</span></span>  
  
 <span data-ttu-id="4b9c0-110">线程模型为 COM 互操作的默认值从.NET Framework 2.0 版开始，取决于在其中你正在开发应用程序，如下表所示的语言。</span><span class="sxs-lookup"><span data-stu-id="4b9c0-110">Starting with the .NET Framework version 2.0, the default threading model for COM interop depends on the language in which you are developing your application, as the following table shows.</span></span>  
  
|<span data-ttu-id="4b9c0-111">语言</span><span class="sxs-lookup"><span data-stu-id="4b9c0-111">Language</span></span>|<span data-ttu-id="4b9c0-112">COM 单元模型</span><span class="sxs-lookup"><span data-stu-id="4b9c0-112">COM apartment model</span></span>|  
|--------------|-------------------------|  
|<span data-ttu-id="4b9c0-113">C#</span><span class="sxs-lookup"><span data-stu-id="4b9c0-113">C#</span></span>|<span data-ttu-id="4b9c0-114">多线程的单元</span><span class="sxs-lookup"><span data-stu-id="4b9c0-114">Multithreaded apartment</span></span>|  
|<span data-ttu-id="4b9c0-115">C++</span><span class="sxs-lookup"><span data-stu-id="4b9c0-115">C++</span></span>|<span data-ttu-id="4b9c0-116">多线程的单元</span><span class="sxs-lookup"><span data-stu-id="4b9c0-116">Multithreaded apartment</span></span>|  
|<span data-ttu-id="4b9c0-117">Visual Basic</span><span class="sxs-lookup"><span data-stu-id="4b9c0-117">Visual Basic</span></span>|<span data-ttu-id="4b9c0-118">单线程单元</span><span class="sxs-lookup"><span data-stu-id="4b9c0-118">Single-threaded apartment</span></span>|  
  
 <span data-ttu-id="4b9c0-119">若要更改这些默认设置，请使用<xref:System.MTAThreadAttribute>要设置的应用程序或调用的线程模型属性<xref:System.Threading.Thread.SetApartmentState%2A?displayProperty=nameWithType>或<xref:System.Threading.Thread.TrySetApartmentState%2A?displayProperty=nameWithType>方法，然后再启动线程设置特定线程的线程模型。</span><span class="sxs-lookup"><span data-stu-id="4b9c0-119">To change these defaults, you use the <xref:System.MTAThreadAttribute> attribute to set the threading model for the application, or call the <xref:System.Threading.Thread.SetApartmentState%2A?displayProperty=nameWithType> or <xref:System.Threading.Thread.TrySetApartmentState%2A?displayProperty=nameWithType> method before starting the thread to set the threading model for a particular thread.</span></span> <span data-ttu-id="4b9c0-120">在 c + +，您还可以使用[/CLRTHREADATTRIBUTE （设置 CLR 线程特性）](http://msdn.microsoft.com/library/4907e9ef-5031-446c-aecf-0a0b32fae1e8)链接器选项以指定的单元模型。</span><span class="sxs-lookup"><span data-stu-id="4b9c0-120">In C++, you can also use the [/CLRTHREADATTRIBUTE (Set CLR Thread Attribute)](http://msdn.microsoft.com/library/4907e9ef-5031-446c-aecf-0a0b32fae1e8) linker option to specify the apartment model.</span></span>  
  
 <span data-ttu-id="4b9c0-121">某些情况下，你想要使用<xref:System.MTAThreadAttribute>将线程模型显式设置为多线程单元的属性包括：</span><span class="sxs-lookup"><span data-stu-id="4b9c0-121">Some of the cases in which you want to use the <xref:System.MTAThreadAttribute> attribute to explicitly set the threading model to multithreaded apartment include the following:</span></span>  
  
-   <span data-ttu-id="4b9c0-122">你正在开发的 Visual Basic 应用程序调用到 C# 库反过来依赖于 COM 互操作。</span><span class="sxs-lookup"><span data-stu-id="4b9c0-122">You're developing a Visual Basic app that calls to a C# library that in turn relies on COM interop.</span></span> <span data-ttu-id="4b9c0-123">由于多线程的单元模型的默认值为 C#，你应将更改应用程序的线程模型为多线程通过使用<xref:System.MTAThreadAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="4b9c0-123">Because the multithreaded apartment model is the default for C#, you should change your app's threading model to multithreaded by using the <xref:System.MTAThreadAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="4b9c0-124">你的应用程序可以对使用多线程的单元模型的 COM 组件的调用。</span><span class="sxs-lookup"><span data-stu-id="4b9c0-124">Your application makes calls to COM components that use the multithreaded apartment model.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.STAThreadAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MTAThreadAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MTAThreadAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MTAThreadAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b9c0-125">初始化 <see cref="T:System.MTAThreadAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b9c0-125">Initializes a new instance of the <see cref="T:System.MTAThreadAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.STAThreadAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>