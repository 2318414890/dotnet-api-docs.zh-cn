<Type Name="Int64" FullName="System.Int64">
  <TypeSignature Language="C#" Value="public struct Int64 : IComparable, IComparable&lt;long&gt;, IConvertible, IEquatable&lt;long&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int64&gt;, class System.IConvertible, class System.IEquatable`1&lt;int64&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int64" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int64&#xA;Implements IComparable, IComparable(Of Long), IConvertible, IEquatable(Of Long), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int64 : IComparable, IComparable&lt;long&gt;, IConvertible, IEquatable&lt;long&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5c297-101">表示 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="5c297-101">Represents a 64-bit signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-102"><xref:System.Int64> 是表示不可变的值类型的有符号整数值，其范围从-9223372036854775808 (这由<xref:System.Int64.MinValue?displayProperty=nameWithType>常量) 到 （这由+9223372036854775807之间<xref:System.Int64.MaxValue?displayProperty=nameWithType>常量。</span><span class="sxs-lookup"><span data-stu-id="5c297-102"><xref:System.Int64> is an immutable value type that represents signed integers with values that range from negative 9,223,372,036,854,775,808 (which is represented by the <xref:System.Int64.MinValue?displayProperty=nameWithType> constant) through positive 9,223,372,036,854,775,807 (which is represented by the <xref:System.Int64.MaxValue?displayProperty=nameWithType> constant.</span></span> <span data-ttu-id="5c297-103">.NET Framework 还包括 64 位无符号的整数值类型， <xref:System.UInt64>，它表示从 0 到 18446744073709551615 之间的值。</span><span class="sxs-lookup"><span data-stu-id="5c297-103">The .NET Framework also includes an unsigned 64-bit integer value type, <xref:System.UInt64>, which represents values that range from 0 to 18,446,744,073,709,551,615.</span></span>  
  
## <a name="instantiating-an-int64-value"></a><span data-ttu-id="5c297-104">实例化的 Int64 值</span><span class="sxs-lookup"><span data-stu-id="5c297-104">Instantiating an Int64 Value</span></span>  
 <span data-ttu-id="5c297-105">可以实例化<xref:System.Int64>有几个方面的值：</span><span class="sxs-lookup"><span data-stu-id="5c297-105">You can instantiate an <xref:System.Int64> value in several ways:</span></span>  
  
-   <span data-ttu-id="5c297-106">你可以声明<xref:System.Int64>变量并将其分配的范围内的整数值<xref:System.Int64>数据类型。</span><span class="sxs-lookup"><span data-stu-id="5c297-106">You can declare an <xref:System.Int64> variable and assign it a literal integer value that is within the range of the <xref:System.Int64> data type.</span></span> <span data-ttu-id="5c297-107">下面的示例声明了两个<xref:System.Int64>变量并将它们分配在这种方式中的值。</span><span class="sxs-lookup"><span data-stu-id="5c297-107">The following example declares two <xref:System.Int64> variables and assigns them values in this way.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#1)]
     [!code-vb[System.Int64.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#1)]  
  
-   <span data-ttu-id="5c297-108">你可以分配其范围是子集的整数类型的值的<xref:System.Int64>类型。</span><span class="sxs-lookup"><span data-stu-id="5c297-108">You can assign the value of an integral type whose range is a subset of the <xref:System.Int64> type.</span></span> <span data-ttu-id="5c297-109">这是一个不需要强制转换运算符在 C# 或 Visual Basic 中的转换方法的扩大转换。</span><span class="sxs-lookup"><span data-stu-id="5c297-109">This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#4)]
     [!code-vb[System.Int64.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#4)]  
  
-   <span data-ttu-id="5c297-110">你可以分配其范围超过数值类型的值的<xref:System.Int64>类型。</span><span class="sxs-lookup"><span data-stu-id="5c297-110">You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int64> type.</span></span> <span data-ttu-id="5c297-111">这是收缩转换，因此如果需要强制转换运算符在 C# 和 Visual Basic 中的转换方法`Option Strict`上。</span><span class="sxs-lookup"><span data-stu-id="5c297-111">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="5c297-112">如果该数值为<xref:System.Single>， <xref:System.Double>，或<xref:System.Decimal>包括小数组件，其小数部分处理的值取决于编译器执行转换。</span><span class="sxs-lookup"><span data-stu-id="5c297-112">If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="5c297-113">下面的示例执行收缩转换将分配到的几个数值<xref:System.Int64>变量。</span><span class="sxs-lookup"><span data-stu-id="5c297-113">The following example performs narrowing conversions to assign several numeric values to <xref:System.Int64> variables.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#2)]
     [!code-vb[System.Int64.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#2)]  
  
-   <span data-ttu-id="5c297-114">你可以调用的方法<xref:System.Convert>类能够将任何支持的类型到<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="5c297-114">You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int64> value.</span></span> <span data-ttu-id="5c297-115">这是可能因为<xref:System.Int64>支持<xref:System.IConvertible>接口。</span><span class="sxs-lookup"><span data-stu-id="5c297-115">This is possible because <xref:System.Int64> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="5c297-116">下面的示例阐释了数组的转换<xref:System.Decimal>值复制到<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="5c297-116">The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int64> values.</span></span>  
  
     [!code-csharp[System.Convert.ToInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#4)]
     [!code-vb[System.Convert.ToInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#4)]  
  
-   <span data-ttu-id="5c297-117">你可以调用<xref:System.Int64.Parse%2A>或<xref:System.Int64.TryParse%2A>方法将转换的字符串表示形式<xref:System.Int64>值赋给<xref:System.Int64>。</span><span class="sxs-lookup"><span data-stu-id="5c297-117">You can call the <xref:System.Int64.Parse%2A> or <xref:System.Int64.TryParse%2A> method to convert the string representation of an <xref:System.Int64> value to an <xref:System.Int64>.</span></span> <span data-ttu-id="5c297-118">字符串可以包含十进制或十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-118">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="5c297-119">下面的示例演示使用十进制和十六进制字符串分析操作。</span><span class="sxs-lookup"><span data-stu-id="5c297-119">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#3)]
     [!code-vb[System.Int64.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#3)]  
  
## <a name="performing-operations-on-int64-values"></a><span data-ttu-id="5c297-120">对 Int64 值执行操作</span><span class="sxs-lookup"><span data-stu-id="5c297-120">Performing Operations on Int64 Values</span></span>  
 <span data-ttu-id="5c297-121"><xref:System.Int64>类型支持标准的数学运算，例如加法、 减法、 除法、 乘法、 求反和一元求反。</span><span class="sxs-lookup"><span data-stu-id="5c297-121">The <xref:System.Int64> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation.</span></span> <span data-ttu-id="5c297-122">与其他整数类型，类似<xref:System.Int64>类型还支持的按位`AND`， `OR`， `XOR`，左移位和右移位运算符。</span><span class="sxs-lookup"><span data-stu-id="5c297-122">Like the other integral types, the <xref:System.Int64> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>  
  
 <span data-ttu-id="5c297-123">你可以使用标准数值运算符比较两个<xref:System.Int64>值，也可以调用<xref:System.Int64.CompareTo%2A>或<xref:System.Int64.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-123">You can use the standard numeric operators to compare two <xref:System.Int64> values, or you can call the <xref:System.Int64.CompareTo%2A> or <xref:System.Int64.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="5c297-124">你还可以调用的成员<xref:System.Math>类来执行各种数值操作，包括获取绝对值的数值的数字，计算商和整数除法运算的余数确定两个最大或最小值长整型，获取数字的符号和舍入数。</span><span class="sxs-lookup"><span data-stu-id="5c297-124">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two long integers, getting the sign of a number, and rounding a number.</span></span>  
  
## <a name="representing-an-int64-as-a-string"></a><span data-ttu-id="5c297-125">字符串形式表示 Int64</span><span class="sxs-lookup"><span data-stu-id="5c297-125">Representing an Int64 as a String</span></span>  
 <span data-ttu-id="5c297-126"><xref:System.Int64>类型提供对标准和自定义数字格式字符串的完全支持。</span><span class="sxs-lookup"><span data-stu-id="5c297-126">The <xref:System.Int64> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="5c297-127">(有关详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)，[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)，和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。)</span><span class="sxs-lookup"><span data-stu-id="5c297-127">(For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span></span>  
  
 <span data-ttu-id="5c297-128">若要设置格式<xref:System.Int64>值为一个不带前导零的整数字符串，您可以调用的无参数<xref:System.Int64.ToString>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-128">To format an <xref:System.Int64> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int64.ToString> method.</span></span> <span data-ttu-id="5c297-129">通过使用"D"格式说明符，您还可以包含指定的数目的字符串表示形式中的前导零。</span><span class="sxs-lookup"><span data-stu-id="5c297-129">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="5c297-130">通过使用"N"格式说明符，可以包含组分隔符和指定的十进制位数才会出现在字符串的数字表示形式。</span><span class="sxs-lookup"><span data-stu-id="5c297-130">By using the "N" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number.</span></span> <span data-ttu-id="5c297-131">通过使用"X"格式说明符，您可以表示<xref:System.Int64>十六进制字符串形式的值。</span><span class="sxs-lookup"><span data-stu-id="5c297-131">By using the "X" format specifier, you can represent an <xref:System.Int64> value as a hexadecimal string.</span></span> <span data-ttu-id="5c297-132">下面的示例在一个数组中的元素进行格式设置<xref:System.Int64>以下四种方式中的值。</span><span class="sxs-lookup"><span data-stu-id="5c297-132">The following example formats the elements in an array of <xref:System.Int64> values in these four ways.</span></span>  
  
 [!code-csharp[System.Int64.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.formatting/cs/formatting1.cs#1)]
 [!code-vb[System.Int64.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.formatting/vb/formatting1.vb#1)]  
  
 <span data-ttu-id="5c297-133">你还可以设置格式<xref:System.Int64>通过调用十进制或十六进制字符串值作为二进制、 八进制<xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29>方法并提供将基作为该方法的第二个参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-133">You can also format an <xref:System.Int64> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="5c297-134">下面的示例调用此方法以显示二进制、 八进制和十六进制形式表示的整数值的数组。</span><span class="sxs-lookup"><span data-stu-id="5c297-134">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.</span></span>  
  
 [!code-csharp[System.Int64.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.formatting/cs/formatting1.cs#2)]
 [!code-vb[System.Int64.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.formatting/vb/formatting1.vb#2)]  
  
## <a name="working-with-non-decimal-32-bit-integer-values"></a><span data-ttu-id="5c297-135">使用非十进制 32 位整数值</span><span class="sxs-lookup"><span data-stu-id="5c297-135">Working with Non-Decimal 32-Bit Integer Values</span></span>  
 <span data-ttu-id="5c297-136">除了使用作为十进制值单个长整型，你可能想要执行按位运算替换为长整型值，或使用二进制或十六进制表示形式之间实现的长整型值。</span><span class="sxs-lookup"><span data-stu-id="5c297-136">In addition to working with individual long integers as decimal values, you may want to perform bitwise operations with long integer values, or work with the binary or hexadecimal representations of long integer values.</span></span> <span data-ttu-id="5c297-137"><xref:System.Int64> 值以 63 位，64 位用作符号位为单位表示。</span><span class="sxs-lookup"><span data-stu-id="5c297-137"><xref:System.Int64> values are represented in 63 bits, with the sixty-fourth bit used as a sign bit.</span></span> <span data-ttu-id="5c297-138">正值表示通过使用符号数值表示法。</span><span class="sxs-lookup"><span data-stu-id="5c297-138">Positive values are represented by using sign-and-magnitude representation.</span></span> <span data-ttu-id="5c297-139">负值都以 2 的补数表示。</span><span class="sxs-lookup"><span data-stu-id="5c297-139">Negative values are in two's complement representation.</span></span> <span data-ttu-id="5c297-140">这是重要上执行按位运算时，需要注意<xref:System.Int64>值或当你处理的单个位进行运算。</span><span class="sxs-lookup"><span data-stu-id="5c297-140">This is important to keep in mind when you perform bitwise operations on <xref:System.Int64> values or when you work with individual bits.</span></span> <span data-ttu-id="5c297-141">若要执行数字、 布尔值或对任何两个非十进制值的比较操作，这两个值都必须使用相同的表示形式。</span><span class="sxs-lookup"><span data-stu-id="5c297-141">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="5c297-142">此类型的所有成员都是线程安全。</span><span class="sxs-lookup"><span data-stu-id="5c297-142">All members of this type are thread safe.</span></span> <span data-ttu-id="5c297-143">实际上，看起来要修改实例状态的成员返回使用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="5c297-143">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="5c297-144">作为与任何其他类型，读取和写入到共享的变量，其中包含此类型的实例必须受使用锁来确保的线程安全性。</span><span class="sxs-lookup"><span data-stu-id="5c297-144">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.UInt64" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c297-145">将此实例与指定的对象或 <see cref="T:System.Int64" /> 进行比较，并返回二者相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="5c297-145">Compares this instance to a specified object or <see cref="T:System.Int64" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.CompareTo(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(long value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5c297-146">要比较的整数。</span><span class="sxs-lookup"><span data-stu-id="5c297-146">An integer to compare.</span></span></param>
        <summary><span data-ttu-id="5c297-147">将此实例与指定的 64 位有符号整数进行比较并返回对其相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="5c297-147">Compares this instance to a specified 64-bit signed integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="5c297-148">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="5c297-148">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="5c297-149"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="5c297-149"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="5c297-150"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="5c297-150"></term><description> Description</span></span>  
  
 <span data-ttu-id="5c297-151"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="5c297-151"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="5c297-152"></term><description> 此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-152"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="5c297-153"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="5c297-153"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="5c297-154"></term><description> 此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-154"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="5c297-155"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="5c297-155"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="5c297-156"></term><description> 此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-156"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-157">此方法实现<xref:System.IComparable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.Int64.CompareTo%2A?displayProperty=nameWithType>方法因为它不具有要转换`value`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-157">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int64.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="5c297-158">具体取决于您的编程语言，它可能会对代码<xref:System.Int64.CompareTo%2A>其中的参数类型具有较少的位的方法 （为较窄） 比实例类型。</span><span class="sxs-lookup"><span data-stu-id="5c297-158">Depending on your programming language, it might be possible to code a <xref:System.Int64.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="5c297-159">这可能是因为某些编程语言中执行的隐式的扩大转换，它表示具有任意数量的位的实例作为类型参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-159">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="5c297-160">例如，假设实例类型是<xref:System.Int32>和参数类型是<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="5c297-160">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="5c297-161">Microsoft C# 编译器生成的指令来表示形式的参数值<xref:System.Int32>对象，然后生成<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>比较的值的方法<xref:System.Int32>实例和<xref:System.Int32>参数表示形式。</span><span class="sxs-lookup"><span data-stu-id="5c297-161">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="5c297-162">请查阅你的编程语言的文档，以确定其编译器是否对数值类型执行隐式的扩大转换。</span><span class="sxs-lookup"><span data-stu-id="5c297-162">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c297-163">下面的代码示例演示泛型和非泛型版本的<xref:System.Int64.CompareTo%2A>多个值和引用类型的方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-163">The following code example demonstrates generic and nongeneric versions of the <xref:System.Int64.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Int64.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5c297-164">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-164">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="5c297-165">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="5c297-165">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="5c297-166">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="5c297-166">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="5c297-167"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="5c297-167"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="5c297-168"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="5c297-168"></term><description> Description</span></span>  
  
 <span data-ttu-id="5c297-169"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="5c297-169"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="5c297-170"></term><description> 此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-170"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="5c297-171"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="5c297-171"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="5c297-172"></term><description> 此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-172"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="5c297-173"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="5c297-173"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="5c297-174"></term><description> 此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-174"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="5c297-175">或</span><span class="sxs-lookup"><span data-stu-id="5c297-175">-or-</span></span>  
  
 <span data-ttu-id="5c297-176"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-176"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-177"><xref:System.Int64>，无论其值被视为大于空引用。</span><span class="sxs-lookup"><span data-stu-id="5c297-177">An <xref:System.Int64>, regardless of its value, is considered greater than a null reference.</span></span>  
  
 <span data-ttu-id="5c297-178">`value`参数必须是`null`或实例<xref:System.Int64>; 否则为将引发异常。</span><span class="sxs-lookup"><span data-stu-id="5c297-178">The `value` parameter must be `null` or an instance of <xref:System.Int64>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5c297-179"><paramref name="value" /> 不是 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-179"><paramref name="value" /> is not an <see cref="T:System.Int64" />.</span></span></exception>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Int64.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c297-180">返回一个值，该值指示此实例是否与指定的对象或 <see cref="T:System.Int64" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="5c297-180">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int64" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (long obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Equals(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(long obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="5c297-181">要与此实例进行比较的 <see cref="T:System.Int64" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5c297-181">An <see cref="T:System.Int64" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="5c297-182">返回一个值，该值指示此实例是否等于指定的 <see cref="T:System.Int64" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5c297-182">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int64" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="5c297-183">如果 <paramref name="obj" /> 的值与此实例相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-183"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-184">此方法实现<xref:System.IEquatable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.Int64.Equals%2A>因为它不具有要转换`obj`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-184">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int64.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="5c297-185">编译器重载决策可能应对明显的差异的两个行为<see cref="M:System.Int64.Equals(System.Int64)" />方法重载。</span><span class="sxs-lookup"><span data-stu-id="5c297-185">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int64.Equals(System.Int64)" /> method overloads.</span></span> <span data-ttu-id="5c297-186">如果之间的隐式转换<paramref name="obj" />自变量和<see cref="T:System.Int64" />定义和自变量并不类型化为<see cref="T:System.Object" />，编译器执行隐式转换和调用<see cref="M:System.Int64.Equals(System.Int64)" />方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-186">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int64.Equals(System.Int64)" /> method.</span></span> <span data-ttu-id="5c297-187">否则，它们调用<see cref="M:System.Int64.Equals(System.Object)" />方法，始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.Int64" />值。</span><span class="sxs-lookup"><span data-stu-id="5c297-187">Otherwise, they call the <see cref="M:System.Int64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int64" /> value.</span></span> <span data-ttu-id="5c297-188">下面的示例阐释了两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="5c297-188">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="5c297-189">情况下<see cref="T:System.Byte" />， <see cref="T:System.SByte" />， <see cref="T:System.Int16" />， <see cref="T:System.UInt16" />， <see cref="T:System.Int32" />，和<see cref="T:System.UInt32" />值，第一个比较返回<see langword="true" />因为编译器自动执行一个的扩大转换，调用<see cref="M:System.Int64.Equals(System.Int64)" />方法，而第二个比较返回<see langword="false" />由于编译器调用<see cref="M:System.Int64.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-189">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int64.Equals(System.Int64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int64.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Int64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.equals/cs/equalsoverl.cs#1)]
 [!code-vb[System.Int64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.equals/vb/equalsoverl.vb#1)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="5c297-190">与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-190">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="5c297-191">返回一个值，该值指示此实例是否等于指定的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-191">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="5c297-192">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.Int64" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-192"><see langword="true" /> if <paramref name="obj" /> is an instance of an <see cref="T:System.Int64" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5c297-193">下面的代码示例演示如何使用`Equals`的上下文中`Int64`、 比较两个长整型值和返回`true`如果它们表示同一数字，或`false`如果它们不这样做。</span><span class="sxs-lookup"><span data-stu-id="5c297-193">The following code example illustrates the use of `Equals` in the context of `Int64`, comparing two long values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int64_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int64_Equals/CPP/int64_equals.cpp#1)]
 [!code-csharp[Int64_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int64_Equals/CS/int64_equals.cs#1)]
 [!code-vb[Int64_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int64_Equals/VB/int64_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="5c297-194">编译器重载决策可能应对明显的差异的两个行为<see cref="M:System.Int64.Equals(System.Int64)" />方法重载。</span><span class="sxs-lookup"><span data-stu-id="5c297-194">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int64.Equals(System.Int64)" /> method overloads.</span></span> <span data-ttu-id="5c297-195">如果之间的隐式转换<paramref name="obj" />自变量和<see cref="T:System.Int64" />定义和自变量并不类型化为<see cref="T:System.Object" />，编译器执行隐式转换和调用<see cref="M:System.Int64.Equals(System.Int64)" />方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-195">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int64.Equals(System.Int64)" /> method.</span></span> <span data-ttu-id="5c297-196">否则，它们调用<see cref="M:System.Int64.Equals(System.Object)" />方法，始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.Int64" />值。</span><span class="sxs-lookup"><span data-stu-id="5c297-196">Otherwise, they call the <see cref="M:System.Int64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int64" /> value.</span></span> <span data-ttu-id="5c297-197">下面的示例阐释了两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="5c297-197">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="5c297-198">情况下<see cref="T:System.Byte" />， <see cref="T:System.SByte" />， <see cref="T:System.Int16" />， <see cref="T:System.UInt16" />， <see cref="T:System.Int32" />，和<see cref="T:System.UInt32" />值，第一个比较返回<see langword="true" />因为编译器自动执行一个的扩大转换，调用<see cref="M:System.Int64.Equals(System.Int64)" />方法，而第二个比较返回<see langword="false" />由于编译器调用<see cref="M:System.Int64.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-198">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int64.Equals(System.Int64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int64.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Int64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.equals/cs/equalsoverl.cs#1)]
 [!code-vb[System.Int64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.equals/vb/equalsoverl.vb#1)]</para>
        </block>
        <altmember cref="M:System.Int64.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c297-199">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="5c297-199">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="5c297-200">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="5c297-200">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c297-201">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-201">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-202">枚举常数 <see cref="F:System.TypeCode.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-202">The enumerated constant, <see cref="F:System.TypeCode.Int64" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const long MaxValue = 9223372036854775807;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 MaxValue = int64(9223372036854775807)" />
      <MemberSignature Language="DocId" Value="F:System.Int64.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Long  = 9223372036854775807" />
      <MemberSignature Language="C++ CLI" Value="public: long MaxValue = 9223372036854775807;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>9223372036854775807</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5c297-203">表示 <see langword="Int64" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="5c297-203">Represents the largest possible value of an <see langword="Int64" />.</span></span> <span data-ttu-id="5c297-204">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="5c297-204">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-205">此常量的值是 9223372036854775807;也就是说，十六进制 0x7FFFFFFFFFFFFFFF。</span><span class="sxs-lookup"><span data-stu-id="5c297-205">The value of this constant is 9,223,372,036,854,775,807; that is, hexadecimal 0x7FFFFFFFFFFFFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int64.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const long MinValue = -9223372036854775808;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 MinValue = int64(-9223372036854775808)" />
      <MemberSignature Language="DocId" Value="F:System.Int64.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Long  = -9223372036854775808" />
      <MemberSignature Language="C++ CLI" Value="public: long MinValue = -9223372036854775808;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>-9223372036854775808</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5c297-206">表示 <see langword="Int64" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="5c297-206">Represents the smallest possible value of an <see langword="Int64" />.</span></span> <span data-ttu-id="5c297-207">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="5c297-207">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-208">此常量的值是-9223372036854775808;也就是说，十六进制 0x8000000000000000。</span><span class="sxs-lookup"><span data-stu-id="5c297-208">The value of this constant is negative 9,223,372,036,854,775,808; that is, hexadecimal 0x8000000000000000.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int64.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c297-209">将数字的字符串表示形式转换为它的等效 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="5c297-209">Converts the string representation of a number to its 64-bit signed integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.Int64.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="5c297-210">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="5c297-210">A string containing a number to convert.</span></span></param>
        <summary><span data-ttu-id="5c297-211">将数字的字符串表示形式转换为它的等效 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="5c297-211">Converts the string representation of a number to its 64-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="5c297-212">与 <paramref name="s" /> 中包含的数字等效的 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="5c297-212">A 64-bit signed integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-213">`s`参数包含一个数字的窗体：</span><span class="sxs-lookup"><span data-stu-id="5c297-213">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="5c297-214">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="5c297-214">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="5c297-215">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="5c297-215">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="5c297-216">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-216">The following table describes each element.</span></span>  
  
|<span data-ttu-id="5c297-217">元素</span><span class="sxs-lookup"><span data-stu-id="5c297-217">Element</span></span>|<span data-ttu-id="5c297-218">描述</span><span class="sxs-lookup"><span data-stu-id="5c297-218">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="5c297-219">ws</span><span class="sxs-lookup"><span data-stu-id="5c297-219">ws</span></span>|<span data-ttu-id="5c297-220">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="5c297-220">Optional white space.</span></span>|  
|<span data-ttu-id="5c297-221">Sign</span><span class="sxs-lookup"><span data-stu-id="5c297-221">sign</span></span>|<span data-ttu-id="5c297-222">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="5c297-222">An optional sign.</span></span>|  
|<span data-ttu-id="5c297-223">数字</span><span class="sxs-lookup"><span data-stu-id="5c297-223">digits</span></span>|<span data-ttu-id="5c297-224">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="5c297-224">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="5c297-225">`s`参数被解释使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="5c297-225">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="5c297-226">十进制数字，除了允许仅前导空格和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="5c297-226">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="5c297-227">若要显式定义可出现在的样式元素`s`，可以使用两种<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>或<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-227">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="5c297-228">`s`使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-228">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="5c297-229">若要分析使用的格式信息的一些其他区域性的字符串，请使用<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-229">To parse a string using the formatting information of some other culture, use the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c297-230">下面的示例演示如何将字符串值转换为 64 位有符号的整数值使用<xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-230">The following example demonstrates how to convert a string value into a 64-bit signed integer value using the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="5c297-231">然后显示生成的长整型值。</span><span class="sxs-lookup"><span data-stu-id="5c297-231">It then displays the resulting long integer value.</span></span>  
  
 [!code-csharp[System.Int64.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.parse/cs/Parse1.cs#1)]
 [!code-vb[System.Int64.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5c297-232"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-232"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="5c297-233"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="5c297-233"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="5c297-234"><paramref name="s" /> 表示小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-234"><paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int64.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="5c297-235">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="5c297-235">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="5c297-236"><see cref="T:System.Globalization.NumberStyles" /> 值的按位组合，指示 <c>s</c> 的允许格式。</span><span class="sxs-lookup"><span data-stu-id="5c297-236">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the permitted format of <c>s</c>.</span></span> <span data-ttu-id="5c297-237">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-237">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="5c297-238">将指定样式的数字的字符串表示形式转换为它的等效 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="5c297-238">Converts the string representation of a number in a specified style to its 64-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="5c297-239">与 <paramref name="s" /> 中指定的数字等效的 64 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="5c297-239">A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-240">`style`参数定义的样式元素 (如空格、 正或负号符号或千位分隔符号) 中允许`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-240">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="5c297-241">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="5c297-241">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="5c297-242">根据值`style`、`s`参数可能包含下列元素：</span><span class="sxs-lookup"><span data-stu-id="5c297-242">Depending on the value of `style`, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="5c297-243">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span><span class="sxs-lookup"><span data-stu-id="5c297-243">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="5c297-244">或者，如果`style`包括<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="5c297-244">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="5c297-245">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="5c297-245">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="5c297-246">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="5c297-246">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="5c297-247">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-247">The following table describes each element.</span></span>  
  
|<span data-ttu-id="5c297-248">元素</span><span class="sxs-lookup"><span data-stu-id="5c297-248">Element</span></span>|<span data-ttu-id="5c297-249">描述</span><span class="sxs-lookup"><span data-stu-id="5c297-249">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="5c297-250">*ws*</span><span class="sxs-lookup"><span data-stu-id="5c297-250">*ws*</span></span>|<span data-ttu-id="5c297-251">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="5c297-251">Optional white space.</span></span> <span data-ttu-id="5c297-252">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-252">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="5c297-253">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="5c297-253">A culture-specific currency symbol.</span></span> <span data-ttu-id="5c297-254">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="5c297-254">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="5c297-255">当前区域性的货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-255">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="5c297-256">*sign*</span><span class="sxs-lookup"><span data-stu-id="5c297-256">*sign*</span></span>|<span data-ttu-id="5c297-257">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="5c297-257">An optional sign.</span></span> <span data-ttu-id="5c297-258">符号可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-258">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="5c297-259">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-259">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="5c297-260">*digits*</span><span class="sxs-lookup"><span data-stu-id="5c297-260">*digits*</span></span><br /><br /> <span data-ttu-id="5c297-261">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="5c297-261">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="5c297-262">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="5c297-262">*exponential_digits*</span></span>|<span data-ttu-id="5c297-263">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-263">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="5c297-264">有关*fractional_digits*，但只数字 0 有效。</span><span class="sxs-lookup"><span data-stu-id="5c297-264">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="5c297-265">*，*</span><span class="sxs-lookup"><span data-stu-id="5c297-265">*,*</span></span>|<span data-ttu-id="5c297-266">特定于区域性的千位分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="5c297-266">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="5c297-267">当前区域性的千位分隔符可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-267">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="5c297-268">*.*</span><span class="sxs-lookup"><span data-stu-id="5c297-268">*.*</span></span>|<span data-ttu-id="5c297-269">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="5c297-269">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="5c297-270">当前区域性的小数点符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-270">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="5c297-271">仅数字 0 可以显示为分析操作才能成功; 一个小数数字如果*fractional_digits*包括任何其他数字<xref:System.OverflowException>引发。</span><span class="sxs-lookup"><span data-stu-id="5c297-271">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="5c297-272">*e*</span><span class="sxs-lookup"><span data-stu-id="5c297-272">*e*</span></span>|<span data-ttu-id="5c297-273">E 或者 E 字符，它指示的值用在指数记数法表示。</span><span class="sxs-lookup"><span data-stu-id="5c297-273">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="5c297-274">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-274">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="5c297-275">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="5c297-275">*hexdigits*</span></span>|<span data-ttu-id="5c297-276">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="5c297-276">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="5c297-277">仅为数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>样式) 始终可以在范围内是否分析成功<xref:System.Int64>类型。</span><span class="sxs-lookup"><span data-stu-id="5c297-277">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int64> type.</span></span> <span data-ttu-id="5c297-278">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能但不是需要输入字符串中存在的元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-278">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="5c297-279">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="5c297-279">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="5c297-280">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="5c297-280">NumberStyles value</span></span>|<span data-ttu-id="5c297-281">除数字之外的 s 中允许的元素</span><span class="sxs-lookup"><span data-stu-id="5c297-281">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="5c297-282">*数字*仅元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-282">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="5c297-283">小数点 ( *。*</span><span class="sxs-lookup"><span data-stu-id="5c297-283">The decimal point ( *.*</span></span> <span data-ttu-id="5c297-284">) 和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-284">) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="5c297-285">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="5c297-285">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="5c297-286">如果`s`数字指数记数法，生成的数字值表示不能包含任何非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="5c297-286">If `s` represents a number in exponential notation, the resulting numeric value cannot include any non-zero fractional digits.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="5c297-287">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="5c297-287">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="5c297-288">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="5c297-288">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="5c297-289">*登录*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="5c297-289">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="5c297-290">*登录*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="5c297-290">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="5c297-291">*登录*在括号内包含的数字值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-291">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="5c297-292">千位分隔符 ( *，* ) 元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-292">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="5c297-293">* $ *元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-293">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="5c297-294">全部。</span><span class="sxs-lookup"><span data-stu-id="5c297-294">All.</span></span> <span data-ttu-id="5c297-295">`s`参数不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-295">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="5c297-296">*Ws*元素的开头或末尾`s`，*登录*开头`s`，和小数点 ( *。*</span><span class="sxs-lookup"><span data-stu-id="5c297-296">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="5c297-297">) 符号。</span><span class="sxs-lookup"><span data-stu-id="5c297-297">) symbol.</span></span> <span data-ttu-id="5c297-298">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="5c297-298">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="5c297-299">*Ws*，*登录*，千位分隔符 ( *，* )，和小数点 ( *。*</span><span class="sxs-lookup"><span data-stu-id="5c297-299">The *ws*, *sign*, thousands separator ( *,* ), and decimal point ( *.*</span></span> <span data-ttu-id="5c297-300">) 元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-300">) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="5c297-301">所有样式，除`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-301">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="5c297-302">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用标志，`s`必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="5c297-302">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="5c297-303">例如，"C9AF3"分析成功，但是"0xC9AF3"却没有。</span><span class="sxs-lookup"><span data-stu-id="5c297-303">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="5c297-304">其他标志只有可以与组合`s`参数<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c297-304">The only other flags that can be combined with the `s` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5c297-305">(<xref:System.Globalization.NumberStyles>枚举包含复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="5c297-305">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="5c297-306">`s`使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-306">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="5c297-307">若要指定分析操作使用其格式设置信息的区域性，调用<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>重载。</span><span class="sxs-lookup"><span data-stu-id="5c297-307">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c297-308">下面的示例使用<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>方法，以便分析的字符串表示形式几个<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="5c297-308">The following example uses the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of several <xref:System.Int64> values.</span></span> <span data-ttu-id="5c297-309">该示例的当前区域性为 EN-US。</span><span class="sxs-lookup"><span data-stu-id="5c297-309">The current culture for the example is en-US.</span></span>  
  
 [!code-csharp[System.Int64.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int64.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5c297-310"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-310"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5c297-311"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5c297-311"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="5c297-312">或</span><span class="sxs-lookup"><span data-stu-id="5c297-312">-or-</span></span>  
  
 <span data-ttu-id="5c297-313"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="5c297-313"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="5c297-314"><paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-314"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="5c297-315"><paramref name="s" /> 表示小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-315"><paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span>  
  
 <span data-ttu-id="5c297-316">或</span><span class="sxs-lookup"><span data-stu-id="5c297-316">-or-</span></span>  
  
 <span data-ttu-id="5c297-317"><paramref name="style" /> 支持小数位但 <paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="5c297-317"><paramref name="style" /> supports fractional digits but <paramref name="s" /> includes non-zero fractional digits.</span></span></exception>
        <altmember cref="M:System.Int64.ToString" />
        <altmember cref="Overload:System.Int64.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="5c297-318">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="5c297-318">A string containing a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="5c297-319">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="5c297-319">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="5c297-320">将指定的区域性特定格式的数字的字符串表示形式转换为它的等效 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="5c297-320">Converts the string representation of a number in a specified culture-specific format to its 64-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="5c297-321">与 <paramref name="s" /> 中指定的数字等效的 64 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="5c297-321">A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-322">此重载<xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29>方法通常用于将可在多个方面与格式设置的文本转换<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="5c297-322">This overload of the <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int64> value.</span></span> <span data-ttu-id="5c297-323">例如，它可以用于将转换到 HTML 文本框中为数值用户输入的文本。</span><span class="sxs-lookup"><span data-stu-id="5c297-323">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="5c297-324">`s`参数包含一个数字的窗体：</span><span class="sxs-lookup"><span data-stu-id="5c297-324">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="5c297-325">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="5c297-325">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="5c297-326">方括号 （[和]） 是可选的中的项和其他项如下所示。</span><span class="sxs-lookup"><span data-stu-id="5c297-326">Items in square brackets ([ and ]) are optional, and other items are as follows.</span></span>  
  
 <span data-ttu-id="5c297-327">ws</span><span class="sxs-lookup"><span data-stu-id="5c297-327">ws</span></span>  
 <span data-ttu-id="5c297-328">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="5c297-328">An optional white space.</span></span>  
  
 <span data-ttu-id="5c297-329">Sign</span><span class="sxs-lookup"><span data-stu-id="5c297-329">sign</span></span>  
 <span data-ttu-id="5c297-330">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="5c297-330">An optional sign.</span></span>  
  
 <span data-ttu-id="5c297-331">数字</span><span class="sxs-lookup"><span data-stu-id="5c297-331">digits</span></span>  
 <span data-ttu-id="5c297-332">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="5c297-332">A sequence of digits ranging from 0 to 9.</span></span>  
  
 <span data-ttu-id="5c297-333">`s`参数被解释使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="5c297-333">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="5c297-334">十进制数字，除了允许仅前导空格和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="5c297-334">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="5c297-335">若要显式定义可出现在的样式元素`s`，使用<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-335">To explicitly define the style elements that can be present in `s`, use the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="5c297-336">`provider`参数是<xref:System.IFormatProvider>实现，如<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-336">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="5c297-337">`provider`参数提供区域性特定信息的格式有关`s`。</span><span class="sxs-lookup"><span data-stu-id="5c297-337">The `provider` parameter supplies culture-specific information about the format of `s`.</span></span> <span data-ttu-id="5c297-338">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="5c297-338">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c297-339">下面的示例是按钮单击事件处理程序的 Web 窗体。</span><span class="sxs-lookup"><span data-stu-id="5c297-339">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="5c297-340">它使用返回的数组<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>属性来确定用户的区域设置。</span><span class="sxs-lookup"><span data-stu-id="5c297-340">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="5c297-341">它然后实例化<xref:System.Globalization.CultureInfo>对应于该区域设置的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-341">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="5c297-342"><xref:System.Globalization.NumberFormatInfo>对象所属的<xref:System.Globalization.CultureInfo>对象随后会传递给<xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29>方法将用户输入转换为<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="5c297-342">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to an <xref:System.Int64> value.</span></span>  
  
 [!code-csharp[ParseMethod#5](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#5)]
 [!code-vb[ParseMethod#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5c297-343"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-343"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="5c297-344"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="5c297-344"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="5c297-345"><paramref name="s" /> 表示小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-345"><paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int64.ToString" />
        <altmember cref="Overload:System.Int64.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Long" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="5c297-346">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="5c297-346">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="5c297-347">枚举值的按位组合，用于指示可出现在 <c>s</c> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-347">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="5c297-348">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-348">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="5c297-349">一个 <see cref="T:System.IFormatProvider" />，它提供有关 <c>s</c> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="5c297-349">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="5c297-350">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="5c297-350">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="5c297-351">与 <paramref name="s" /> 中指定的数字等效的 64 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="5c297-351">A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-352">`style`参数定义中允许的样式元素 （如空白或正号）`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-352">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="5c297-353">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="5c297-353">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="5c297-354">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="5c297-354">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="5c297-355">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span><span class="sxs-lookup"><span data-stu-id="5c297-355">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="5c297-356">或者，如果`style`包括<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="5c297-356">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="5c297-357">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="5c297-357">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="5c297-358">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="5c297-358">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="5c297-359">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-359">The following table describes each element.</span></span>  
  
|<span data-ttu-id="5c297-360">元素</span><span class="sxs-lookup"><span data-stu-id="5c297-360">Element</span></span>|<span data-ttu-id="5c297-361">描述</span><span class="sxs-lookup"><span data-stu-id="5c297-361">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="5c297-362">*ws*</span><span class="sxs-lookup"><span data-stu-id="5c297-362">*ws*</span></span>|<span data-ttu-id="5c297-363">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="5c297-363">Optional white space.</span></span> <span data-ttu-id="5c297-364">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-364">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="5c297-365">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="5c297-365">A culture-specific currency symbol.</span></span> <span data-ttu-id="5c297-366">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>属性<xref:System.Globalization.NumberFormatInfo>返回对象<xref:System.IFormatProvider.GetFormat%2A>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-366">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="5c297-367">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-367">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="5c297-368">*sign*</span><span class="sxs-lookup"><span data-stu-id="5c297-368">*sign*</span></span>|<span data-ttu-id="5c297-369">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="5c297-369">An optional sign.</span></span> <span data-ttu-id="5c297-370">符号可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志或末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-370">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="5c297-371">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-371">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="5c297-372">*digits*</span><span class="sxs-lookup"><span data-stu-id="5c297-372">*digits*</span></span><br /><br /> <span data-ttu-id="5c297-373">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="5c297-373">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="5c297-374">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="5c297-374">*exponential_digits*</span></span>|<span data-ttu-id="5c297-375">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-375">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="5c297-376">*，*</span><span class="sxs-lookup"><span data-stu-id="5c297-376">*,*</span></span>|<span data-ttu-id="5c297-377">特定于区域性的千位分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="5c297-377">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="5c297-378">千位分隔符的指定的区域性`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-378">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="5c297-379">*.*</span><span class="sxs-lookup"><span data-stu-id="5c297-379">*.*</span></span>|<span data-ttu-id="5c297-380">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="5c297-380">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="5c297-381">指定的区域性的小数点符号`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-381">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span><br /><br /> <span data-ttu-id="5c297-382">仅数字 0 可以显示为分析操作才能成功; 一个小数数字如果*fractional_digits*包括任何其他数字<xref:System.OverflowException>引发。</span><span class="sxs-lookup"><span data-stu-id="5c297-382">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="5c297-383">*e*</span><span class="sxs-lookup"><span data-stu-id="5c297-383">*e*</span></span>|<span data-ttu-id="5c297-384">E 或者 E 字符，它指示的值用在指数记数法表示。</span><span class="sxs-lookup"><span data-stu-id="5c297-384">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="5c297-385">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-385">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="5c297-386">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="5c297-386">*hexdigits*</span></span>|<span data-ttu-id="5c297-387">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="5c297-387">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="5c297-388">仅为十进制数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>样式) 始终可以在范围内是否分析成功<xref:System.Int64>类型。</span><span class="sxs-lookup"><span data-stu-id="5c297-388">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int64> type.</span></span> <span data-ttu-id="5c297-389">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能但不是要求必须包含在此输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-389">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="5c297-390">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="5c297-390">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="5c297-391">非复合 NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="5c297-391">Non-composite NumberStyles values</span></span>|<span data-ttu-id="5c297-392">除数字之外的 s 中允许的元素</span><span class="sxs-lookup"><span data-stu-id="5c297-392">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="5c297-393">仅为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-393">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="5c297-394">小数点 ( *。*</span><span class="sxs-lookup"><span data-stu-id="5c297-394">The decimal point ( *.*</span></span> <span data-ttu-id="5c297-395">) 和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-395">) and *fractional-digits* elements.</span></span> <span data-ttu-id="5c297-396">但是，*小数位数*必须包含仅一个或多个数字 0 或<xref:System.OverflowException>引发。</span><span class="sxs-lookup"><span data-stu-id="5c297-396">However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="5c297-397">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="5c297-397">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="5c297-398">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="5c297-398">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="5c297-399">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="5c297-399">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="5c297-400">登录之前可以出现*数字*。</span><span class="sxs-lookup"><span data-stu-id="5c297-400">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="5c297-401">包含符号可以出现后*数字*。</span><span class="sxs-lookup"><span data-stu-id="5c297-401">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="5c297-402">*登录*在括号内包含的数字值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-402">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="5c297-403">千位分隔符 ( *，* ) 元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-403">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="5c297-404">* $ *元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-404">The *$* element.</span></span>|  
  
 <span data-ttu-id="5c297-405">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用标志，`s`必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="5c297-405">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="5c297-406">例如，"C9AF3"分析成功，但是"0xC9AF3"却没有。</span><span class="sxs-lookup"><span data-stu-id="5c297-406">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="5c297-407">仅其他标志可出现在`style`是<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c297-407">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5c297-408">(<xref:System.Globalization.NumberStyles>枚举具有复合数字样式<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="5c297-408">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="5c297-409">`provider`参数是<xref:System.IFormatProvider>实现，如<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-409">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="5c297-410">`provider`参数提供区域性特定信息在分析中使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-410">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="5c297-411">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="5c297-411">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c297-412">下面的示例使用的各种`style`和`provider`参数来分析的字符串表示形式<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="5c297-412">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int64> values.</span></span> <span data-ttu-id="5c297-413">它还说明了一些相同的字符串可以解释根据区域性的格式设置信息用于分析操作的不同方式。</span><span class="sxs-lookup"><span data-stu-id="5c297-413">It also illustrates some of the different ways the same string can be interpreted depending on the culture whose formatting information is used for the parsing operation.</span></span>  
  
 [!code-csharp[System.Int64.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.parse/cs/Parse3.cs#3)]
 [!code-vb[System.Int64.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5c297-414"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-414"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5c297-415"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5c297-415"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="5c297-416">或</span><span class="sxs-lookup"><span data-stu-id="5c297-416">-or-</span></span>  
  
 <span data-ttu-id="5c297-417"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="5c297-417"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="5c297-418"><paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-418"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="5c297-419"><paramref name="s" /> 表示小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-419"><paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span>  
  
 <span data-ttu-id="5c297-420">或</span><span class="sxs-lookup"><span data-stu-id="5c297-420">-or-</span></span>  
  
 <span data-ttu-id="5c297-421"><paramref name="style" /> 支持小数位但 <paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="5c297-421"><paramref name="style" /> supports fractional digits, but <paramref name="s" /> includes non-zero fractional digits.</span></span></exception>
        <altmember cref="M:System.Int64.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-422">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-422">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="5c297-423">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-423">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="5c297-424">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-424"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-425">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5c297-425">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5c297-426">它只能在 <xref:System.Int64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-426">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="5c297-427">建议的替代项是调用<xref:System.Convert.ToBoolean%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-427">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-428">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-428">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="5c297-429">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-429">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-430">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-430">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-431">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5c297-431">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5c297-432">它只能在 <xref:System.Int64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-432">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="5c297-433">建议的替代项是调用<xref:System.Convert.ToByte%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-433">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-434">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-434">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="5c297-435">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-435">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-436">当前实例的值，已转换为 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-436">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-437">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5c297-437">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5c297-438">它只能在 <xref:System.Int64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-438">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="5c297-439">建议的替代项是调用<xref:System.Convert.ToChar%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-439">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-440">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-440">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="5c297-441">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="5c297-441">This conversion is not supported.</span></span> <span data-ttu-id="5c297-442">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-442">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-443">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="5c297-443">This conversion is not supported.</span></span> <span data-ttu-id="5c297-444">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="5c297-444">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="5c297-445">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="5c297-445">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-446">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-446">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="5c297-447">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-447">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-448">当前实例的值，已转换为 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-448">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-449">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5c297-449">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5c297-450">它只能在 <xref:System.Int64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-450">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="5c297-451">建议的替代项是调用<xref:System.Convert.ToDecimal%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-451">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-452">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-452">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="5c297-453">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-453">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-454">当前实例的值，已转换为 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-454">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-455">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5c297-455">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5c297-456">它只能在 <xref:System.Int64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-456">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="5c297-457">建议的替代项是调用<xref:System.Convert.ToDouble%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-457">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-458">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-458">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="5c297-459">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-459">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-460">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-460">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-461">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5c297-461">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5c297-462">它只能在 <xref:System.Int64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-462">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="5c297-463">建议的替代项是调用<xref:System.Convert.ToInt16%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-463">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-464">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-464">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="5c297-465">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-465">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-466">当前实例的值，已转换为 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-466">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-467">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5c297-467">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5c297-468">它只能在 <xref:System.Int64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-468">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="5c297-469">建议的替代项是调用<xref:System.Convert.ToInt32%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-469">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-470">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-470">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="5c297-471">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-471">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-472">当前实例的值，未更改。</span><span class="sxs-lookup"><span data-stu-id="5c297-472">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-473">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5c297-473">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5c297-474">它只能在 <xref:System.Int64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-474">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-475">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-475">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="5c297-476">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-476">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-477">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-477">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-478">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5c297-478">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5c297-479">它只能在 <xref:System.Int64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-479">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="5c297-480">建议的替代项是调用<xref:System.Convert.ToSByte%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-480">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-481">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-481">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="5c297-482">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-482">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-483">当前实例的值，已转换为 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-483">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-484">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5c297-484">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5c297-485">它只能在 <xref:System.Int64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-485">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="5c297-486">建议的替代项是调用<xref:System.Convert.ToSingle%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-486">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5c297-487">此 <see cref="T:System.Int64" /> 值要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="5c297-487">The type to which to convert this <see cref="T:System.Int64" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="5c297-488">一个 <see cref="T:System.IFormatProvider" /> 实现，提供有关返回值的格式的信息。</span><span class="sxs-lookup"><span data-stu-id="5c297-488">An <see cref="T:System.IFormatProvider" /> implementation that provides information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="5c297-489">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-489">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-490">当前实例的值，已转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-490">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-491">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5c297-491">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5c297-492">它只能在 <xref:System.Int64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-492">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="5c297-493">建议的替代项是调用`static`(`Shared`在 Visual Basic 中)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-493">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-494">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-494">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="5c297-495">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-495">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-496">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-496">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-497">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5c297-497">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5c297-498">它只能在 <xref:System.Int64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-498">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="5c297-499">建议的替代项是调用<xref:System.Convert.ToUInt16%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-499">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-500">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-500">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="5c297-501">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-501">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-502">当前实例的值，已转换为 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-502">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-503">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5c297-503">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5c297-504">它只能在 <xref:System.Int64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-504">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="5c297-505">建议的替代项是调用<xref:System.Convert.ToUInt32%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-505">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-506">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-506">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="5c297-507">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-507">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="5c297-508">当前实例的值，已转换为 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-508">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-509">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="5c297-509">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5c297-510">它只能在 <xref:System.Int64> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="5c297-510">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="5c297-511">建议的替代项是调用<xref:System.Convert.ToUInt64%28System.Int64%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-511">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c297-512">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="5c297-512">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c297-513">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="5c297-513">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="5c297-514">此实例的值的字符串表示形式，由减号（如果值为负）和范围从 0 到 9 且没有前导零的数字序列组成。</span><span class="sxs-lookup"><span data-stu-id="5c297-514">The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-515"><xref:System.Int64.ToString>方法格式<xref:System.Int64>值在默认的 （"G"或常规） 中使用的格式<xref:System.Globalization.NumberFormatInfo>当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-515">The <xref:System.Int64.ToString> method formats an <xref:System.Int64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="5c297-516">如果你想要指定其他文件格式或区域性，使用的其他重载<xref:System.Int64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="5c297-516">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="5c297-517">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="5c297-517">To use format</span></span>|<span data-ttu-id="5c297-518">区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-518">For culture</span></span>|<span data-ttu-id="5c297-519">使用的重载</span><span class="sxs-lookup"><span data-stu-id="5c297-519">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="5c297-520">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="5c297-520">Default ("G") format</span></span>|<span data-ttu-id="5c297-521">特定区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-521">A specific culture</span></span>|<xref:System.Int64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="5c297-522">特定的格式</span><span class="sxs-lookup"><span data-stu-id="5c297-522">A specific format</span></span>|<span data-ttu-id="5c297-523">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-523">Default (current) culture</span></span>|<xref:System.Int64.ToString%28System.String%29>|  
|<span data-ttu-id="5c297-524">特定的格式</span><span class="sxs-lookup"><span data-stu-id="5c297-524">A specific format</span></span>|<span data-ttu-id="5c297-525">特定区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-525">A specific culture</span></span>|<xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="5c297-526">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="5c297-526">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="5c297-527">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="5c297-527">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="5c297-528">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="5c297-528">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c297-529">下面的示例显示<xref:System.Int64>值使用默认<xref:System.Int64.ToString>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-529">The following example displays an <xref:System.Int64> value using the default <xref:System.Int64.ToString> method.</span></span> <span data-ttu-id="5c297-530">它还显示的字符串表示形式<xref:System.Int64>通过使用数量的标准格式说明符得到的值。</span><span class="sxs-lookup"><span data-stu-id="5c297-530">It also displays the string representations of the <xref:System.Int64> value that results from using a number of standard format specifiers.</span></span> <span data-ttu-id="5c297-531">示例使用 EN-US 区域性的格式设置约定来显示。</span><span class="sxs-lookup"><span data-stu-id="5c297-531">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Int64.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#1)]
 [!code-vb[System.Int64.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5c297-532">一个 <see cref="T:System.IFormatProvider" />，它提供区域性特定的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="5c297-532">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="5c297-533">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="5c297-533">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="5c297-534">此实例的值的字符串表示形式，由 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="5c297-534">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-535"><xref:System.Int64.ToString%28System.IFormatProvider%29>方法格式<xref:System.Int64>值在默认的 （"G"或常规） 中使用的格式<xref:System.Globalization.NumberFormatInfo>指定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-535">The <xref:System.Int64.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="5c297-536">如果你想要指定不同的格式或当前区域性，使用的其他重载<xref:System.Int64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="5c297-536">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="5c297-537">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="5c297-537">To use format</span></span>|<span data-ttu-id="5c297-538">区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-538">For culture</span></span>|<span data-ttu-id="5c297-539">使用的重载</span><span class="sxs-lookup"><span data-stu-id="5c297-539">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="5c297-540">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="5c297-540">Default ("G") format</span></span>|<span data-ttu-id="5c297-541">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-541">Default (current) culture</span></span>|<xref:System.Int64.ToString>|  
|<span data-ttu-id="5c297-542">特定的格式</span><span class="sxs-lookup"><span data-stu-id="5c297-542">A specific format</span></span>|<span data-ttu-id="5c297-543">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-543">Default (current) culture</span></span>|<xref:System.Int64.ToString%28System.String%29>|  
|<span data-ttu-id="5c297-544">特定的格式</span><span class="sxs-lookup"><span data-stu-id="5c297-544">A specific format</span></span>|<span data-ttu-id="5c297-545">特定区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-545">A specific culture</span></span>|<xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="5c297-546">`provider`参数是一个对象，实现<xref:System.IFormatProvider>接口。</span><span class="sxs-lookup"><span data-stu-id="5c297-546">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="5c297-547">其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供此方法返回的字符串的格式的区域性特定信息的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-547">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="5c297-548">实现的对象<xref:System.IFormatProvider>可以是任何以下：</span><span class="sxs-lookup"><span data-stu-id="5c297-548">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="5c297-549">A<xref:System.Globalization.CultureInfo>代表要使用其格式设置规则的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-549">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="5c297-550">A<xref:System.Globalization.NumberFormatInfo>对象，其中包含特定的数字格式设置信息，此值。</span><span class="sxs-lookup"><span data-stu-id="5c297-550">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="5c297-551">实现一个自定义对象<xref:System.IFormatProvider>并且其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-551">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="5c297-552">如果`provider`是`null`或<xref:System.Globalization.NumberFormatInfo>对象不能从获取`provider`，返回的值进行格式设置<xref:System.Globalization.NumberFormatInfo>为当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-552">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted with the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
 <span data-ttu-id="5c297-553">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="5c297-553">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="5c297-554">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="5c297-554">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="5c297-555">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="5c297-555">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c297-556">下面的示例显示的字符串表示形式<xref:System.Int64>值使用<xref:System.Globalization.CultureInfo>表示几种不同区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-556">The following example displays the string representation of an <xref:System.Int64> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Int64.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#2)]
 [!code-vb[System.Int64.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="5c297-557">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="5c297-557">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="5c297-558">使用指定的格式，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="5c297-558">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="5c297-559">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="5c297-559">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-560"><xref:System.Int64.ToString%28System.String%29>方法格式<xref:System.Int64>中通过使用指定的格式值<xref:System.Globalization.NumberFormatInfo>对象，表示当前区域性的约定。</span><span class="sxs-lookup"><span data-stu-id="5c297-560">The <xref:System.Int64.ToString%28System.String%29> method formats an <xref:System.Int64> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="5c297-561">如果你想要使用默认值 （"G"或常规） 格式或指定不同的区域性，请使用其他重载的<xref:System.Int64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="5c297-561">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="5c297-562">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="5c297-562">To use format</span></span>|<span data-ttu-id="5c297-563">区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-563">For culture</span></span>|<span data-ttu-id="5c297-564">使用的重载</span><span class="sxs-lookup"><span data-stu-id="5c297-564">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="5c297-565">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="5c297-565">Default ("G") format</span></span>|<span data-ttu-id="5c297-566">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-566">Default (current) culture</span></span>|<xref:System.Int64.ToString>|  
|<span data-ttu-id="5c297-567">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="5c297-567">Default ("G") format</span></span>|<span data-ttu-id="5c297-568">特定区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-568">A specific culture</span></span>|<xref:System.Int64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="5c297-569">特定的格式</span><span class="sxs-lookup"><span data-stu-id="5c297-569">A specific format</span></span>|<span data-ttu-id="5c297-570">特定区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-570">A specific culture</span></span>|<xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="5c297-571">`format`参数可以是任何有效的标准数字格式说明符 （"R"除外） 以及自定义数字格式说明符的任意组合。</span><span class="sxs-lookup"><span data-stu-id="5c297-571">The `format` parameter can be any valid standard numeric format specifier except for "R", as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="5c297-572">如果`format`是`null`或空字符串 ("")，此实例返回值的格式与常规的数字格式说明符 ("G")。</span><span class="sxs-lookup"><span data-stu-id="5c297-572">If `format` is `null` or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="5c297-573">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="5c297-573">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="5c297-574">有关数字格式说明符的详细信息[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="5c297-574">For more information about numeric format specifiers, [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="5c297-575">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="5c297-575">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="5c297-576">此实例返回的值进行格式设置<xref:System.Globalization.NumberFormatInfo>为当前区域性。</span><span class="sxs-lookup"><span data-stu-id="5c297-576">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c297-577">下面的示例显示<xref:System.Int64>值使用每个支持标准数字格式说明符以及两个自定义数字格式字符串。</span><span class="sxs-lookup"><span data-stu-id="5c297-577">The following example displays an <xref:System.Int64> value using each of the supported standard numeric format specifiers together with two custom numeric format strings.</span></span> <span data-ttu-id="5c297-578">在将数字的值转换为字符串，该示例使用 EN-US 区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="5c297-578">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Int64.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#3)]
 [!code-vb[System.Int64.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="5c297-579"><paramref name="format" /> 无效或不受支持。</span><span class="sxs-lookup"><span data-stu-id="5c297-579"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="5c297-580">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="5c297-580">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="5c297-581">一个对象，它提供有关此实例的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="5c297-581">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="5c297-582">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="5c297-582">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="5c297-583">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="5c297-583">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-584"><xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>方法格式<xref:System.Int64>中通过使用指定的格式值<xref:System.Globalization.NumberFormatInfo>指定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-584">The <xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int64> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="5c297-585">如果你想要使用默认格式或区域性设置，使用的其他重载<xref:System.Int64.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="5c297-585">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="5c297-586">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="5c297-586">To use format</span></span>|<span data-ttu-id="5c297-587">区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-587">For culture</span></span>|<span data-ttu-id="5c297-588">使用的重载</span><span class="sxs-lookup"><span data-stu-id="5c297-588">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="5c297-589">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="5c297-589">Default ("G") format</span></span>|<span data-ttu-id="5c297-590">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-590">Default (current) culture</span></span>|<xref:System.Int64.ToString>|  
|<span data-ttu-id="5c297-591">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="5c297-591">Default ("G") format</span></span>|<span data-ttu-id="5c297-592">特定区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-592">A specific culture</span></span>|<xref:System.Int64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="5c297-593">特定的格式</span><span class="sxs-lookup"><span data-stu-id="5c297-593">A specific format</span></span>|<span data-ttu-id="5c297-594">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="5c297-594">Default (current) culture</span></span>|<xref:System.Int64.ToString%28System.String%29>|  
  
 <span data-ttu-id="5c297-595">`format`参数可以是一个标准或自定义数字格式字符串。</span><span class="sxs-lookup"><span data-stu-id="5c297-595">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="5c297-596">支持"R"（或"r"） 以外的所有标准数字格式字符串，因为所有自定义数字格式字符。</span><span class="sxs-lookup"><span data-stu-id="5c297-596">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="5c297-597">如果`format`是`null`或空字符串 ("")，此实例返回的值的格式与常规的数字格式说明符 ("G")。</span><span class="sxs-lookup"><span data-stu-id="5c297-597">If `format` is `null` or an empty string (""), the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="5c297-598">`provider`参数是一个对象，实现<xref:System.IFormatProvider>接口。</span><span class="sxs-lookup"><span data-stu-id="5c297-598">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="5c297-599">其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供此方法返回的字符串的格式的区域性特定信息的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-599">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="5c297-600">实现的对象<xref:System.IFormatProvider>可以是任何以下：</span><span class="sxs-lookup"><span data-stu-id="5c297-600">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="5c297-601">A<xref:System.Globalization.CultureInfo>代表要使用其格式设置规则的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-601">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="5c297-602">A<xref:System.Globalization.NumberFormatInfo>对象，其中包含特定的数字格式设置信息，此值。</span><span class="sxs-lookup"><span data-stu-id="5c297-602">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="5c297-603">实现一个自定义对象<xref:System.IFormatProvider>并且其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-603">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="5c297-604">如果`provider`是`null`或<xref:System.Globalization.NumberFormatInfo>对象不能从获取`provider`，此实例返回的值进行格式设置<xref:System.Globalization.NumberFormatInfo>为当前区域性。</span><span class="sxs-lookup"><span data-stu-id="5c297-604">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
 <span data-ttu-id="5c297-605">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="5c297-605">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="5c297-606">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="5c297-606">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="5c297-607">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="5c297-607">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c297-608">下面的示例显示正值和负值的每个支持标准数字格式说明符用于三种不同的区域性。</span><span class="sxs-lookup"><span data-stu-id="5c297-608">The following example displays a positive and a negative value using each of the supported standard numeric format specifiers for three different cultures.</span></span>  
  
 [!code-csharp[System.Int64.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#4)]
 [!code-vb[System.Int64.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="5c297-609"><paramref name="format" /> 无效或不受支持。</span><span class="sxs-lookup"><span data-stu-id="5c297-609"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int64.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5c297-610">将数字的字符串表示形式转换为它的等效 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="5c297-610">Converts the string representation of a number to its 64-bit signed integer equivalent.</span></span> <span data-ttu-id="5c297-611">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="5c297-611">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.Int64.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.ReadOnlySpan{System.Char},System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] long % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.String,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] long % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="5c297-612">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="5c297-612">A string containing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="5c297-613">当此方法返回时，如果转换成功，则结果包含与 <c>s</c> 中所包含的数字等效的 64 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="5c297-613">When this method returns, contains the 64-bit signed integer value equivalent of the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="5c297-614">如果 <c>s</c> 参数为 <see langword="null" /> 或为 <see cref="F:System.String.Empty" />、格式不正确，或者表示小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" /> 的数，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="5c297-614">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="5c297-615">此参数未经初始化即进行传递；最初在 <c>result</c> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="5c297-615">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="5c297-616">将数字的字符串表示形式转换为它的等效 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="5c297-616">Converts the string representation of a number to its 64-bit signed integer equivalent.</span></span> <span data-ttu-id="5c297-617">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="5c297-617">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="5c297-618">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-618"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-619"><xref:System.Int64.TryParse%2A>方法就像是<xref:System.Int64.Parse%2A>方法，除了<xref:System.Int64.TryParse%2A>方法不会引发异常，如果转换失败。</span><span class="sxs-lookup"><span data-stu-id="5c297-619">The <xref:System.Int64.TryParse%2A> method is like the <xref:System.Int64.Parse%2A> method, except the <xref:System.Int64.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="5c297-620">不必使用异常处理来测试是否<xref:System.FormatException>的事件中`s`无效，无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="5c297-620">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="5c297-621">`s`参数包含一个数字的窗体：</span><span class="sxs-lookup"><span data-stu-id="5c297-621">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="5c297-622">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="5c297-622">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="5c297-623">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="5c297-623">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="5c297-624">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-624">The following table describes each element.</span></span>  
  
|<span data-ttu-id="5c297-625">元素</span><span class="sxs-lookup"><span data-stu-id="5c297-625">Element</span></span>|<span data-ttu-id="5c297-626">描述</span><span class="sxs-lookup"><span data-stu-id="5c297-626">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="5c297-627">*ws*</span><span class="sxs-lookup"><span data-stu-id="5c297-627">*ws*</span></span>|<span data-ttu-id="5c297-628">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="5c297-628">An optional white space.</span></span>|  
|<span data-ttu-id="5c297-629">*sign*</span><span class="sxs-lookup"><span data-stu-id="5c297-629">*sign*</span></span>|<span data-ttu-id="5c297-630">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="5c297-630">An optional sign.</span></span>|  
|<span data-ttu-id="5c297-631">*digits*</span><span class="sxs-lookup"><span data-stu-id="5c297-631">*digits*</span></span>|<span data-ttu-id="5c297-632">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="5c297-632">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="5c297-633">`s`参数被解释使用<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="5c297-633">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="5c297-634">十进制数字，除了允许仅前导空格和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="5c297-634">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="5c297-635">若要显式定义的样式元素以及可出现在区域性特定格式设置信息`s`，使用<xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29>方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-635">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29> method.</span></span>  
  
 <span data-ttu-id="5c297-636">`s`使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-636">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="5c297-637">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="5c297-637">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="5c297-638">此重载<xref:System.Int64.TryParse%2A>方法将解释中的所有位`s`为十进制数字的参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-638">This overload of the <xref:System.Int64.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="5c297-639">若要分析的字符串表示形式的十六进制数，请调用<xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29>重载。</span><span class="sxs-lookup"><span data-stu-id="5c297-639">To parse the string representation of a hexadecimal number, call the <xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c297-640">下面的示例调用<xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29?displayProperty=nameWithType>与大量的不同字符串值的方法。</span><span class="sxs-lookup"><span data-stu-id="5c297-640">The following example calls the <xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-csharp[System.Int64.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int64.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="5c297-641">一些字符串，<xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29>方法不能进行转换在此示例是：</span><span class="sxs-lookup"><span data-stu-id="5c297-641">Some of the strings that the <xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="5c297-642">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="5c297-642">"9432.0".</span></span> <span data-ttu-id="5c297-643">转换失败，因为字符串不能包含小数分隔符;它必须包含仅为整型数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-643">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="5c297-644">"16,667".</span><span class="sxs-lookup"><span data-stu-id="5c297-644">"16,667".</span></span> <span data-ttu-id="5c297-645">转换失败，因为字符串不能包含组分隔符，则为它必须包含仅为整型数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-645">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="5c297-646">"(100)".</span><span class="sxs-lookup"><span data-stu-id="5c297-646">"(100)".</span></span> <span data-ttu-id="5c297-647">转换失败，因为字符串不能包含而不是定义由当前区域性的负号<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="5c297-647">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="5c297-648">"01FA"。</span><span class="sxs-lookup"><span data-stu-id="5c297-648">"01FA".</span></span> <span data-ttu-id="5c297-649">转换失败，因为字符串不能包含十六进制数字;它必须包含仅为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-649">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="M:System.Int64.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] long % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] long % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="5c297-650">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="5c297-650">A string containing a number to convert.</span></span> <span data-ttu-id="5c297-651">该字符串使用由 <c>style</c> 指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="5c297-651">The string is interpreted using the style specified by <c>style</c>.</span></span></param>
        <param name="style"><span data-ttu-id="5c297-652">枚举值的按位组合，用于指示可出现在 <c>s</c> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-652">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="5c297-653">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-653">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="5c297-654">一个对象，提供有关 <c>s</c> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="5c297-654">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <param name="result"><span data-ttu-id="5c297-655">当此方法返回时，如果转换成功，则结果包含与 <c>s</c> 中所包含的数字等效的 64 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="5c297-655">When this method returns, contains the 64-bit signed integer value equivalent of the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="5c297-656">如果 <c>s</c> 参数为 <see langword="null" /> 或为 <see cref="F:System.String.Empty" />、格式不符合 <c>style</c>，或表示的数小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="5c297-656">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, or represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="5c297-657">此参数未经初始化即进行传递；最初在 <c>result</c> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="5c297-657">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="5c297-658">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="5c297-658">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent.</span></span> <span data-ttu-id="5c297-659">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="5c297-659">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="5c297-660">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5c297-660"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c297-661"><xref:System.Int64.TryParse%2A>方法就像是<xref:System.Int64.Parse%2A>方法，除了<xref:System.Int64.TryParse%2A>方法不会引发异常，如果转换失败。</span><span class="sxs-lookup"><span data-stu-id="5c297-661">The <xref:System.Int64.TryParse%2A> method is like the <xref:System.Int64.Parse%2A> method, except the <xref:System.Int64.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="5c297-662">不必使用异常处理来测试是否<xref:System.FormatException>的事件中`s`无效，无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="5c297-662">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="5c297-663">`style`参数定义中允许的样式元素 （如空白或正整数或负号）`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-663">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="5c297-664">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="5c297-664">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="5c297-665">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="5c297-665">Depending on the value of `style`,the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="5c297-666">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span><span class="sxs-lookup"><span data-stu-id="5c297-666">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="5c297-667">或者，如果`style`参数包含<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="5c297-667">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span></span>  
  
 <span data-ttu-id="5c297-668">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="5c297-668">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="5c297-669">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="5c297-669">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="5c297-670">下表描述每个元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-670">The following table describes each element.</span></span>  
  
|<span data-ttu-id="5c297-671">元素</span><span class="sxs-lookup"><span data-stu-id="5c297-671">Element</span></span>|<span data-ttu-id="5c297-672">描述</span><span class="sxs-lookup"><span data-stu-id="5c297-672">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="5c297-673">*ws*</span><span class="sxs-lookup"><span data-stu-id="5c297-673">*ws*</span></span>|<span data-ttu-id="5c297-674">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="5c297-674">Optional white space.</span></span> <span data-ttu-id="5c297-675">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，或在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-675">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="5c297-676">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="5c297-676">A culture-specific currency symbol.</span></span> <span data-ttu-id="5c297-677">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>属性<xref:System.Globalization.NumberFormatInfo>返回对象<xref:System.IFormatProvider.GetFormat%2A>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="5c297-677">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="5c297-678">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-678">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="5c297-679">*sign*</span><span class="sxs-lookup"><span data-stu-id="5c297-679">*sign*</span></span>|<span data-ttu-id="5c297-680">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="5c297-680">An optional sign.</span></span> <span data-ttu-id="5c297-681">正负符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>或<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-681">A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> or <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flags.</span></span>|  
|<span data-ttu-id="5c297-682">*digits*</span><span class="sxs-lookup"><span data-stu-id="5c297-682">*digits*</span></span><br /><br /> <span data-ttu-id="5c297-683">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="5c297-683">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="5c297-684">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="5c297-684">*exponential_digits*</span></span>|<span data-ttu-id="5c297-685">一系列从 0 到 9 的数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-685">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="5c297-686">有关*fractional_digits*，但只数字 0 有效。</span><span class="sxs-lookup"><span data-stu-id="5c297-686">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="5c297-687">*，*</span><span class="sxs-lookup"><span data-stu-id="5c297-687">*,*</span></span>|<span data-ttu-id="5c297-688">特定于区域性的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="5c297-688">A culture-specific thousands separator.</span></span> <span data-ttu-id="5c297-689">千位分隔符的指定的区域性`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-689">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="5c297-690">*.*</span><span class="sxs-lookup"><span data-stu-id="5c297-690">*.*</span></span>|<span data-ttu-id="5c297-691">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="5c297-691">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="5c297-692">指定的区域性的小数点符号`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-692">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="5c297-693">*e*</span><span class="sxs-lookup"><span data-stu-id="5c297-693">*e*</span></span>|<span data-ttu-id="5c297-694">E 或者 E 字符，它指示的值用在指数记数法表示。</span><span class="sxs-lookup"><span data-stu-id="5c297-694">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="5c297-695">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="5c297-695">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="5c297-696">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="5c297-696">*hexdigits*</span></span>|<span data-ttu-id="5c297-697">一系列从 0 到 f 或从 0 到 F.的十六进制数字</span><span class="sxs-lookup"><span data-stu-id="5c297-697">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="5c297-698">仅为十进制数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>标志) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="5c297-698">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="5c297-699">其余的大多数<xref:System.Globalization.NumberStyles>成员控件可能但不是要求必须包含在此输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-699">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="5c297-700">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="5c297-700">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="5c297-701">非复合 NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="5c297-701">Non-composite NumberStyles values</span></span>|<span data-ttu-id="5c297-702">除数字之外的 s 中允许的元素</span><span class="sxs-lookup"><span data-stu-id="5c297-702">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="5c297-703">仅为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-703">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="5c297-704">小数点 ( *。*</span><span class="sxs-lookup"><span data-stu-id="5c297-704">The decimal point ( *.*</span></span> <span data-ttu-id="5c297-705">) 和*fractional_digits*元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-705">) and *fractional_digits* elements.</span></span> <span data-ttu-id="5c297-706">但是， *fractional_digits*仅一个或多个数字 0 或该方法将返回必须组成`false`。</span><span class="sxs-lookup"><span data-stu-id="5c297-706">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="5c297-707">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="5c297-707">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="5c297-708">`s`参数必须表示的范围内的整数<xref:System.Int64>没有非零值的小数部分的数据类型。</span><span class="sxs-lookup"><span data-stu-id="5c297-708">The `s` parameter must represent an integer within the range of the <xref:System.Int64> data type without a non-zero fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="5c297-709">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="5c297-709">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="5c297-710">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="5c297-710">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="5c297-711">登录之前可以出现*数字*。</span><span class="sxs-lookup"><span data-stu-id="5c297-711">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="5c297-712">包含符号可以出现后*数字*。</span><span class="sxs-lookup"><span data-stu-id="5c297-712">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="5c297-713">*登录*在括号内包含的数字值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-713">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="5c297-714">千位分隔符 ( *，* ) 元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-714">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="5c297-715">* $ *元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-715">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="5c297-716">所有元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-716">All elements.</span></span> <span data-ttu-id="5c297-717">`s`参数不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-717">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="5c297-718">*Ws*元素的开头或末尾`s`，*登录*开头`s`，和小数点 ( *。*</span><span class="sxs-lookup"><span data-stu-id="5c297-718">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="5c297-719">) 符号。</span><span class="sxs-lookup"><span data-stu-id="5c297-719">) symbol.</span></span> <span data-ttu-id="5c297-720">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="5c297-720">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="5c297-721">*Ws*，*登录*，千位分隔符 (*，*)，和小数点 (*。*) 元素。</span><span class="sxs-lookup"><span data-stu-id="5c297-721">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="5c297-722">所有样式，除`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="5c297-722">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="5c297-723">如果<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用标志，`s`必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="5c297-723">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="5c297-724">例如，"C9AF3"分析成功，但是"0xC9AF3"却没有。</span><span class="sxs-lookup"><span data-stu-id="5c297-724">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="5c297-725">仅其他标志可出现在`style`是<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5c297-725">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5c297-726">(<xref:System.Globalization.NumberStyles>枚举具有复合样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。)</span><span class="sxs-lookup"><span data-stu-id="5c297-726">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="5c297-727">`provider`参数是<xref:System.IFormatProvider>实现，如<xref:System.Globalization.CultureInfo>对象或<xref:System.Globalization.NumberFormatInfo>对象，其<xref:System.IFormatProvider.GetFormat%2A>方法返回<xref:System.Globalization.NumberFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="5c297-727">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="5c297-728"><xref:System.Globalization.NumberFormatInfo>对象提供的格式的区域性特定信息`s`。</span><span class="sxs-lookup"><span data-stu-id="5c297-728">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="5c297-729">如果`provider`是`null`、<xref:System.Globalization.NumberFormatInfo>对象使用当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="5c297-729">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c297-730">下面的示例调用<xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29>与大量的不同的字符串的方法和<xref:System.Globalization.NumberStyles>值。</span><span class="sxs-lookup"><span data-stu-id="5c297-730">The following example calls the <xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29> method with a number of different string and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.Int64.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int64.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5c297-731"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="5c297-731"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="5c297-732">或</span><span class="sxs-lookup"><span data-stu-id="5c297-732">-or-</span></span>  
  
 <span data-ttu-id="5c297-733"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="5c297-733"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="M:System.Int64.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>