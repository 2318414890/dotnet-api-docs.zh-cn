<Type Name="Comparison&lt;T&gt;" FullName="System.Comparison&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7151af5b5f10df3b19384378de07298f33cb48a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58739654" /></Metadata><TypeSignature Language="C#" Value="public delegate int Comparison&lt;in T&gt;(T x, T y);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Comparison`1&lt;- T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Comparison`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Comparison(Of In T)(x As T, y As T) As Integer " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate int Comparison(T x, T y);" />
  <TypeSignature Language="F#" Value="type Comparison&lt;'T&gt; = delegate of 'T * 'T -&gt; int" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="x" Type="T" />
    <Parameter Name="y" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Int32</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">要比较的对象的类型。</typeparam>
    <param name="x">要比较的第一个对象。</param>
    <param name="y">要比较的第二个对象。</param>
    <summary>表示比较同一类型的两个对象的方法。</summary>
    <returns>一个有符号整数，指示 <paramref name="x" /> 和 <paramref name="y" /> 的相对值，如下表所示。  
  
 <list type="table"><listheader><term> 值 
 </term><description> 含义 
 </description></listheader><item><term> 小于 0 
 </term><description><paramref name="x" /> 小于 <paramref name="y" />。  
  
 </description></item><item><term> 0 
 </term><description><paramref name="x" /> 等于 <paramref name="y" />。  
  
 </description></item><item><term> 大于 0 
 </term><description><paramref name="x" /> 大于 <paramref name="y" />。  
  
 </description></item></list></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过使用此委托<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29>的方法重载<xref:System.Array>类和<xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29>的方法重载<xref:System.Collections.Generic.List%601>类，以对数组或列表中的元素进行排序。  
  
   
  
## Examples  
 下面的代码示例演示如何将<xref:System.Comparison%601>委托，其<xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29>方法重载。  
  
 代码示例定义名为的字符串替换比较方法`CompareDinosByLength`。 此方法的工作方式如下：首先，测试比较数是否为`null`，并为 null 引用被视为小于非空。 其次，比较字符串长度，并更长的字符串被认为更高版本。 第三，如果长度相等，则使用常规字符串比较。  
  
 一个<xref:System.Collections.Generic.List%601>的字符串创建并填充了四个字符串，顺序不分先后。 列表还包括一个空字符串和 null 引用。 显示列表，使用排序<xref:System.Comparison%601>泛型委托表示`CompareDinosByLength`方法，并再次显示。  
  
 [!code-cpp[List\`1_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortComparison/cs/source.cs#1)]
 [!code-vb[List\`1_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortComparison/vb/source.vb#1)]  
  
 下面的示例使用<xref:System.Comparison%601>委托的集合的元素进行排序`CityInfo`对象。 `CityInfo` 是一个包含城市和与其人口数量有关的信息的应用程序定义类。 该示例定义了三种方法`CompareByName`， `CompareByPopulation`，并`CompareByNames`，提供三种不同方式排序`CityInfo`对象。 每个方法分配给`comparison`自变量的<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29?displayProperty=nameWithType>方法。  
  
 [!code-csharp[System.Comparison\`1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.comparison`1/cs/comparisont1.cs#1)]
 [!code-vb[System.Comparison\`1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.comparison`1/vb/comparisont1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Array.Sort``1(``0[],System.Comparison{``0})" />
    <altmember cref="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
  </Docs>
</Type>