<Type Name="Console" FullName="System.Console">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b006f3d9b207ce1cfdf984f93be8c753b8e073cc" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33659638" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Console" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Console extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Console" />
  <TypeSignature Language="VB.NET" Value="Public Class Console" />
  <TypeSignature Language="C++ CLI" Value="public ref class Console abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Console</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1e68b-101">表示控制台应用程序的标准输入流、输出流和错误流。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1e68b-101">Represents the standard input, output, and error streams for console applications.</span>
      </span>
      <span data-ttu-id="1e68b-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1e68b-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-103">在控制台中，其中用户交互与操作系统或与基于文本的控制台应用程序通过计算机键盘输入文本，并从计算机终端读取文本输出操作系统窗口。</span><span class="sxs-lookup"><span data-stu-id="1e68b-103">The console is an operating system window where users interact with the operating system or with a text-based console application by entering text input through the computer keyboard, and by reading text output from the computer terminal.</span></span> <span data-ttu-id="1e68b-104">例如，在 Windows 操作系统，控制台称为命令提示符窗口，并接受 MS-DOS 命令。</span><span class="sxs-lookup"><span data-stu-id="1e68b-104">For example, in the Windows operating system, the console is called the Command Prompt window and accepts MS-DOS commands.</span></span> <span data-ttu-id="1e68b-105"><xref:System.Console>类提供基本支持的应用程序读取字符，并向控制台写入字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-105">The <xref:System.Console> class provides basic support for applications that read characters from, and write characters to, the console.</span></span>  
  
 <span data-ttu-id="1e68b-106">有关开发与信息<xref:System.Console>类，请参阅以下各节：</span><span class="sxs-lookup"><span data-stu-id="1e68b-106">For information about developing with the <xref:System.Console> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="1e68b-107">控制台 I/O 流</span><span class="sxs-lookup"><span data-stu-id="1e68b-107">Console I/O Streams</span></span>](#Streams)  
  
-   [<span data-ttu-id="1e68b-108">屏幕缓冲区和控制台窗口</span><span class="sxs-lookup"><span data-stu-id="1e68b-108">Screen Buffer and Console Window</span></span>](#Buffer)  
  
-   [<span data-ttu-id="1e68b-109">控制台的 Unicode 支持</span><span class="sxs-lookup"><span data-stu-id="1e68b-109">Unicode Support for the Console</span></span>](#Unicode)  
  
-   [<span data-ttu-id="1e68b-110">常见操作</span><span class="sxs-lookup"><span data-stu-id="1e68b-110">Common Operations</span></span>](#Operations)  
  
-   [<span data-ttu-id="1e68b-111">.NET 核心说明</span><span class="sxs-lookup"><span data-stu-id="1e68b-111">.NET Core Notes</span></span>](#Core)  
  
<a name="Streams"></a>   
## <a name="console-io-streams"></a><span data-ttu-id="1e68b-112">控制台 I/O 流</span><span class="sxs-lookup"><span data-stu-id="1e68b-112">Console I/O Streams</span></span>  
 <span data-ttu-id="1e68b-113">一个控制台应用程序启动时，操作系统自动将相关联三个 I/O 流与控制台： 标准输入流、 标准输出流和标准错误输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-113">When a console application starts, the operating system automatically associates three I/O streams with the console: standard input stream, standard output stream, and standard error output stream.</span></span> <span data-ttu-id="1e68b-114">你的应用程序可以从标准输入流; 读取用户输入正常的数据写入标准输出流;并将错误数据写入到标准错误输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-114">Your application can read user input from the standard input stream; write normal data to the standard output stream; and write error data to the standard error output stream.</span></span> <span data-ttu-id="1e68b-115">向应用程序的值作为呈现这些流<xref:System.Console.In%2A?displayProperty=nameWithType>， <xref:System.Console.Out%2A?displayProperty=nameWithType>，和<xref:System.Console.Error%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-115">These streams are presented to your application as the values of the <xref:System.Console.In%2A?displayProperty=nameWithType>, <xref:System.Console.Out%2A?displayProperty=nameWithType>, and <xref:System.Console.Error%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="1e68b-116">默认情况下，值<xref:System.Console.In%2A>属性是<xref:System.IO.TextReader?displayProperty=nameWithType>表示键盘和的值的对象<xref:System.Console.Out%2A>和<xref:System.Console.Error%2A>属性<xref:System.IO.TextWriter?displayProperty=nameWithType>表示控制台窗口的对象。</span><span class="sxs-lookup"><span data-stu-id="1e68b-116">By default, the value of the <xref:System.Console.In%2A> property is a <xref:System.IO.TextReader?displayProperty=nameWithType> object that represents the keyboard, and the values of the <xref:System.Console.Out%2A> and <xref:System.Console.Error%2A> properties are <xref:System.IO.TextWriter?displayProperty=nameWithType> objects that represent a console window.</span></span> <span data-ttu-id="1e68b-117">但是，可以设置这些属性为流，以便不表示控制台窗口或键盘;例如，你可以将这些属性设置为表示文件的流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-117">However, you can set these properties to streams that do not represent the console window or keyboard; for example, you can set these properties to streams that represent files.</span></span> <span data-ttu-id="1e68b-118">若要将标准输入、 标准输出或标准错误流重定向，调用<xref:System.Console.SetIn%2A?displayProperty=nameWithType>， <xref:System.Console.SetOut%2A?displayProperty=nameWithType>，或<xref:System.Console.SetError%2A?displayProperty=nameWithType>方法，分别。</span><span class="sxs-lookup"><span data-stu-id="1e68b-118">To redirect the standard input, standard output, or standard error stream, call the <xref:System.Console.SetIn%2A?displayProperty=nameWithType>, <xref:System.Console.SetOut%2A?displayProperty=nameWithType>, or <xref:System.Console.SetError%2A?displayProperty=nameWithType> method, respectively.</span></span> <span data-ttu-id="1e68b-119">使用这些流的 I/O 操作保持同步，这意味着多个线程可以读取或写入流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-119">I/O operations that use these streams are synchronized, which means that multiple threads can read from, or write to, the streams.</span></span> <span data-ttu-id="1e68b-120">这意味着，方法是通常异步的如<xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>，如果该对象表示控制台流以同步方式执行。</span><span class="sxs-lookup"><span data-stu-id="1e68b-120">This means that methods that are ordinarily asynchronous, such as <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>, execute synchronously if the object represents a console stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e68b-121">不要使用<xref:System.Console>类等服务器应用程序的无人参与应用程序中显示输出。</span><span class="sxs-lookup"><span data-stu-id="1e68b-121">Do not use the <xref:System.Console> class to display output in unattended applications, such as server applications.</span></span> <span data-ttu-id="1e68b-122">如调用方法<xref:System.Console.Write%2A?displayProperty=nameWithType>和<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>GUI 应用程序中产生任何影响。</span><span class="sxs-lookup"><span data-stu-id="1e68b-122">Calls to methods such as <xref:System.Console.Write%2A?displayProperty=nameWithType> and <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> have no effect in GUI applications.</span></span>  
  
 <span data-ttu-id="1e68b-123"><xref:System.Console> 如果流重定向，例如，到文件，则基础流定向到控制台时正常工作的类成员可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="1e68b-123"><xref:System.Console> class members that work normally when the underlying stream is directed to a console might throw an exception if the stream is redirected, for example, to a file.</span></span> <span data-ttu-id="1e68b-124">在应用程序中捕获<xref:System.IO.IOException?displayProperty=nameWithType>异常如果重定向标准流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-124">Program your application to catch <xref:System.IO.IOException?displayProperty=nameWithType> exceptions if you redirect a standard stream.</span></span> <span data-ttu-id="1e68b-125">你还可以使用<xref:System.Console.IsOutputRedirected%2A>， <xref:System.Console.IsInputRedirected%2A>，和<xref:System.Console.IsErrorRedirected%2A>属性来确定是否标准流重定向之前正在执行的操作引发<xref:System.IO.IOException?displayProperty=nameWithType>异常。</span><span class="sxs-lookup"><span data-stu-id="1e68b-125">You can also use the <xref:System.Console.IsOutputRedirected%2A>, <xref:System.Console.IsInputRedirected%2A>, and <xref:System.Console.IsErrorRedirected%2A> properties to determine whether a standard stream is redirected before performing an operation that throws an <xref:System.IO.IOException?displayProperty=nameWithType> exception.</span></span>  
  
 <span data-ttu-id="1e68b-126">有时很有用，以显式调用所表示的流对象的成员<xref:System.Console.In%2A>， <xref:System.Console.Out%2A>，和<xref:System.Console.Error%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-126">It is sometimes useful to explicitly call the members of the stream objects represented by the <xref:System.Console.In%2A>, <xref:System.Console.Out%2A>, and <xref:System.Console.Error%2A> properties.</span></span> <span data-ttu-id="1e68b-127">例如，默认情况下，<xref:System.Console.ReadLine%2A?displayProperty=nameWithType>方法从标准输入流读取输入。</span><span class="sxs-lookup"><span data-stu-id="1e68b-127">For example, by default, the <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method reads input from the standard input stream.</span></span> <span data-ttu-id="1e68b-128">同样，<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法将数据写入标准输出流和数据后跟的默认值的行终止字符串，这是一个回车和换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="1e68b-128">Similarly, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method writes data to the standard output stream, and the data is followed by the default line termination string, which is  a carriage return and line feed ("\r\n").</span></span> <span data-ttu-id="1e68b-129">但是，<xref:System.Console>类不提供相应的方法将数据写入到标准错误输出流或要更改写入到该流的数据的行终止字符串的属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-129">However, the <xref:System.Console> class does not provide a corresponding method to write data to the standard error output stream, or a property to change the line termination string for data written to that stream.</span></span>  
  
 <span data-ttu-id="1e68b-130">你可以通过设置来解决此问题<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>属性<xref:System.Console.Out%2A>或<xref:System.Console.Error%2A>到另一个行终止字符串的属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-130">You can solve this problem by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> or <xref:System.Console.Error%2A> property to another line termination string.</span></span> <span data-ttu-id="1e68b-131">例如，下面的 C# 语句将标准错误输出流的行终止字符串设置为两个回车符和换行符序列：</span><span class="sxs-lookup"><span data-stu-id="1e68b-131">For example, the following C# statement sets the line termination string for the standard error output stream to two carriage return and line feed sequences:</span></span>  
  
 `Console.Error.NewLine = "\r\n\r\n";`  
  
 <span data-ttu-id="1e68b-132">然后，可以显式调用<xref:System.IO.TextWriter.WriteLine%2A>方法的错误输出的流对象，如下面的 C# 语句所示：</span><span class="sxs-lookup"><span data-stu-id="1e68b-132">You can then explicitly call the <xref:System.IO.TextWriter.WriteLine%2A> method of the error output stream object, as in the following C# statement:</span></span>  
  
 `Console.Error.WriteLine();`  
  
<a name="Buffer"></a>   
## <a name="screen-buffer-and-console-window"></a><span data-ttu-id="1e68b-133">屏幕缓冲区和控制台窗口</span><span class="sxs-lookup"><span data-stu-id="1e68b-133">Screen Buffer and Console Window</span></span>  
 <span data-ttu-id="1e68b-134">在控制台的两个密切相关的功能是屏幕缓冲区和控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="1e68b-134">Two closely related features of the console are the screen buffer and the console window.</span></span> <span data-ttu-id="1e68b-135">文本实际读取或写入到流归控制台中，但似乎无法读取或写入到拥有调用屏幕缓冲区的控制台的区域。</span><span class="sxs-lookup"><span data-stu-id="1e68b-135">Text is actually read from or written to streams owned by the console, but appear to be read from or written to an area owned by the console called the screen buffer.</span></span> <span data-ttu-id="1e68b-136">屏幕缓冲区是在控制台的属性，组织为行和列的每个网格交集或字符单元格中，其中包含一个字符的一个矩形网格。</span><span class="sxs-lookup"><span data-stu-id="1e68b-136">The screen buffer is an attribute of the console, and is organized as a rectangular grid of rows and columns where each grid intersection, or character cell, can contain a character.</span></span> <span data-ttu-id="1e68b-137">每个字符具有其自己的前景颜色，并且每个字符单元格中具有其自己的背景色。</span><span class="sxs-lookup"><span data-stu-id="1e68b-137">Each character has its own foreground color, and each character cell has its own background color.</span></span>  
  
 <span data-ttu-id="1e68b-138">通过调用控制台窗口的矩形区域查看屏幕缓冲区。</span><span class="sxs-lookup"><span data-stu-id="1e68b-138">The screen buffer is viewed through a rectangular region called the console window.</span></span> <span data-ttu-id="1e68b-139">控制台窗口是在控制台中; 另一个特性它不是本身，它是操作系统窗口的控制台。</span><span class="sxs-lookup"><span data-stu-id="1e68b-139">The console window is another attribute of the console; it is not the console itself, which is an operating system window.</span></span> <span data-ttu-id="1e68b-140">控制台窗口按行和列排列，小于或等于屏幕缓冲区的大小，可以对其进行移动，以查看不同区域的基础的屏幕缓冲区。</span><span class="sxs-lookup"><span data-stu-id="1e68b-140">The console window is arranged in rows and columns, is less than or equal to the size of the screen buffer, and can be moved to view different areas of the underlying screen buffer.</span></span> <span data-ttu-id="1e68b-141">如果屏幕缓冲区大于控制台窗口，则控制台都将自动显示滚动条，以便可以通过屏幕缓冲区重新定位控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="1e68b-141">If the screen buffer is larger than the console window, the console automatically displays scroll bars so the console window can be repositioned over the screen buffer area.</span></span>  
  
 <span data-ttu-id="1e68b-142">光标指示的屏幕缓冲区的位置其中文本当前读取或写入。</span><span class="sxs-lookup"><span data-stu-id="1e68b-142">A cursor indicates the screen buffer position where text is currently read or written.</span></span> <span data-ttu-id="1e68b-143">可以隐藏光标，或将其变得可见，并且可以更改窗体的高度。</span><span class="sxs-lookup"><span data-stu-id="1e68b-143">The cursor can be hidden or made visible, and its height can be changed.</span></span> <span data-ttu-id="1e68b-144">如果光标是否可见，因此光标在视图中始终是控制台窗口的位置将自动移动。</span><span class="sxs-lookup"><span data-stu-id="1e68b-144">If the cursor is visible, the console window position is moved automatically so the cursor is always in view.</span></span>  
  
 <span data-ttu-id="1e68b-145">屏幕缓冲区中的字符单元格坐标的源是左上的角，和光标和控制台窗口的位置进行计量相对于该原点。</span><span class="sxs-lookup"><span data-stu-id="1e68b-145">The origin for character cell coordinates in the screen buffer is the upper left corner, and the positions of the cursor and the console window are measured relative to that origin.</span></span> <span data-ttu-id="1e68b-146">使用从零开始的索引来指定位置;即指定为 0，行和列 0 作为最左边的列的最顶部的行。</span><span class="sxs-lookup"><span data-stu-id="1e68b-146">Use zero-based indexes to specify positions; that is, specify the topmost row as row 0, and the leftmost column as column 0.</span></span> <span data-ttu-id="1e68b-147">行和列索引的最大值是<xref:System.Int16.MaxValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-147">The maximum value for the row and column indexes is <xref:System.Int16.MaxValue?displayProperty=nameWithType>.</span></span>  
  
<a name="Unicode"></a>   
## <a name="unicode-support-for-the-console"></a><span data-ttu-id="1e68b-148">控制台的 Unicode 支持</span><span class="sxs-lookup"><span data-stu-id="1e68b-148">Unicode Support for the Console</span></span>  
 <span data-ttu-id="1e68b-149">一般情况下，控制台读取输入，并通过使用默认情况下定义的系统区域设置的当前控制台代码页写入输出。</span><span class="sxs-lookup"><span data-stu-id="1e68b-149">In general, the console reads input and writes output by using the current console code page, which the system locale defines by default.</span></span> <span data-ttu-id="1e68b-150">代码页可以处理可用的 Unicode 字符的一个子集，因此如果你尝试显示字符未映射的特定代码页，控制台将无法显示所有字符或准确地表示它们。</span><span class="sxs-lookup"><span data-stu-id="1e68b-150">A code page can handle only a subset of available Unicode characters, so if you try to display characters that are not mapped by a particular code page, the console won't be able to display all characters or represent them accurately.</span></span> <span data-ttu-id="1e68b-151">以下示例阐释了此问题。</span><span class="sxs-lookup"><span data-stu-id="1e68b-151">The following example illustrates this problem.</span></span> <span data-ttu-id="1e68b-152">它尝试向控制台显示到 U + 044F 从 U + 0410年西里尔字母的字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-152">It tries to display the characters of the Cyrillic alphabet from U+0410 to U+044F to the console.</span></span> <span data-ttu-id="1e68b-153">如果使用控制台代码页 437 的系统上运行示例，每个字符都替换为问号 （？），因为西里尔语字符不映射到代码页 437 中的字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-153">If you run the example on a system that uses console code page 437, each character is replaced by a question mark (?), because Cyrillic characters do not map to the characters in code page 437.</span></span>  
  
 [!code-csharp[System.Console.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/unicode1.cs#1)]
 [!code-vb[System.Console.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/unicode1.vb#1)]  
  
 <span data-ttu-id="1e68b-154">除了支持代码页，<xref:System.Console>类支持 utf-8 编码与<xref:System.Text.UTF8Encoding>类。</span><span class="sxs-lookup"><span data-stu-id="1e68b-154">In addition to supporting code pages, the <xref:System.Console> class supports UTF-8 encoding with the <xref:System.Text.UTF8Encoding> class.</span></span> <span data-ttu-id="1e68b-155">从.NET Framework 4.5，开始<xref:System.Console>类还支持使用编码的 utf-16<xref:System.Text.UnicodeEncoding>类。</span><span class="sxs-lookup"><span data-stu-id="1e68b-155">Beginning with the .NET Framework 4.5, the <xref:System.Console> class also supports UTF-16 encoding with the <xref:System.Text.UnicodeEncoding> class.</span></span> <span data-ttu-id="1e68b-156">若要向控制台显示 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-156">To display Unicode characters to the console.</span></span> <span data-ttu-id="1e68b-157">你设置<xref:System.Console.OutputEncoding%2A>属性为<xref:System.Text.UTF8Encoding>或<xref:System.Text.UnicodeEncoding>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-157">you set the <xref:System.Console.OutputEncoding%2A> property to either <xref:System.Text.UTF8Encoding> or  <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 <span data-ttu-id="1e68b-158">Unicode 字符的支持需要编码器来识别特定的 Unicode 字符，并且还需要具有需要呈现该字符的标志符号的字体。</span><span class="sxs-lookup"><span data-stu-id="1e68b-158">Support for Unicode characters requires the encoder to recognize a particular Unicode character, and also requires a font that has the glyphs needed to render that character.</span></span> <span data-ttu-id="1e68b-159">若要成功向控制台显示 Unicode 字符，必须为非光栅或 TrueType 字体，例如 Consolas 或 Lucida Console 设置控制台字体。</span><span class="sxs-lookup"><span data-stu-id="1e68b-159">To successfully display Unicode characters to the console, the console font must be set to a non-raster or TrueType font such as Consolas or Lucida Console.</span></span> <span data-ttu-id="1e68b-160">下面的示例演示如何以编程方式更改字体从光栅字体到 Lucida Console。</span><span class="sxs-lookup"><span data-stu-id="1e68b-160">The following example shows how you can programmatically change the font from a raster font to Lucida Console.</span></span>  
  
 [!code-csharp[System.Console.Class.Unsafe#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class.unsafe/cs/setfont1.cs#3)]
 [!code-vb[System.Console.Class.Unsafe#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class.unsafe/vb/setfont1.vb#3)]  
  
 <span data-ttu-id="1e68b-161">但是，TrueType 字体可以显示标志符号的一个子集。</span><span class="sxs-lookup"><span data-stu-id="1e68b-161">However, TrueType fonts can display only a subset of glyphs.</span></span> <span data-ttu-id="1e68b-162">例如，Lucida Console 字体显示仅 643 的从 U + 0021 到 U + FB02 大约 64,000 可用字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-162">For example, the Lucida Console font displays only 643 of the approximately 64,000 available characters from U+0021 to U+FB02.</span></span> <span data-ttu-id="1e68b-163">若要查看其字符特定字体支持，请打开**字体**小程序中 Control Panel 中，选择**查找字符**选项，然后选择希望在中检查其字符集的字体**字体**列表**字符映射表**窗口。</span><span class="sxs-lookup"><span data-stu-id="1e68b-163">To see which characters a particular font supports, open the **Fonts** applet in Control Panel, choose the **Find a character** option, and choose the font whose character set you'd like to examine in the **Font** list of the **Character Map** window.</span></span>  
  
 <span data-ttu-id="1e68b-164">Windows 使用字体链接显示在特定字体中不可用的标志符号。</span><span class="sxs-lookup"><span data-stu-id="1e68b-164">Windows uses font linking to display glyphs that are not available in a particular font.</span></span> <span data-ttu-id="1e68b-165">有关链接以显示其他字符集的字体的信息，请参阅[全球化分步： 字体](http://go.microsoft.com/fwlink/?LinkId=229111)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-165">For information about font linking to display additional character sets, see [Globalization Step-by-Step: Fonts](http://go.microsoft.com/fwlink/?LinkId=229111).</span></span> <span data-ttu-id="1e68b-166">在注册表的 HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink 子项中定义链接的字体。</span><span class="sxs-lookup"><span data-stu-id="1e68b-166">Linked fonts are defined in the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink subkey of the registry.</span></span> <span data-ttu-id="1e68b-167">此子项与关联的每个条目对应于基字体的名称，其值为一个字符串数组定义的字体文件，并链接到基字体的字体。</span><span class="sxs-lookup"><span data-stu-id="1e68b-167">Each entry associated with this subkey corresponds to the name of a base font, and its value is a string array that defines the font files and the fonts that are linked to the base font.</span></span> <span data-ttu-id="1e68b-168">该数组的每个成员定义链接的字体，并采用形式*字体文件名*，*字体名称*。</span><span class="sxs-lookup"><span data-stu-id="1e68b-168">Each member of the array defines a linked font and takes the form *font-file-name*,*font-name*.</span></span> <span data-ttu-id="1e68b-169">下面的示例演示如何以编程方式定义名为 SimSun 名为显示简化汉字字符的 simsun.ttc 的字体文件中找到的链接的字体。</span><span class="sxs-lookup"><span data-stu-id="1e68b-169">The following example illustrates how you can programmatically define a linked font named SimSun found in a font file named simsun.ttc that displays Simplified Han characters.</span></span>  
  
 [!code-csharp[System.Console.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/fontlink1.cs#2)]
 [!code-vb[System.Console.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/fontlink1.vb#2)]  
  
 <span data-ttu-id="1e68b-170">Unicode 支持控制台具有以下限制：</span><span class="sxs-lookup"><span data-stu-id="1e68b-170">Unicode support for the console has the following limitations:</span></span>  
  
-   <span data-ttu-id="1e68b-171">不支持 utf-32 编码。</span><span class="sxs-lookup"><span data-stu-id="1e68b-171">UTF-32 encoding is not supported.</span></span> <span data-ttu-id="1e68b-172">唯一受支持的 Unicode 编码为 utf-8 和 utf-16，由表示<xref:System.Text.UTF8Encoding>和<xref:System.Text.UnicodeEncoding>类，分别。</span><span class="sxs-lookup"><span data-stu-id="1e68b-172">The only supported Unicode encodings are UTF-8 and UTF-16, which are represented by the <xref:System.Text.UTF8Encoding> and <xref:System.Text.UnicodeEncoding> classes, respectively.</span></span>  
  
-   <span data-ttu-id="1e68b-173">不支持双向输出。</span><span class="sxs-lookup"><span data-stu-id="1e68b-173">Bidirectional output is not supported.</span></span>  
  
-   <span data-ttu-id="1e68b-174">显示基本多语言平面外的字符 (即代理项对的) 不支持，即使它们链接的字体文件中定义。</span><span class="sxs-lookup"><span data-stu-id="1e68b-174">Display of characters outside the Basic Multilingual Plane (that is, of surrogate pairs) is not supported, even if they are defined in a linked font file.</span></span>  
  
-   <span data-ttu-id="1e68b-175">不支持显示复杂脚本中的字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-175">Display of characters in complex scripts is not supported.</span></span>  
  
-   <span data-ttu-id="1e68b-176">组合字符序列 （即，基字符和一个或多个组合字符组成的字符） 将显示为不同的字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-176">Combining character sequences (that is, characters that consist of a base character and one or more combining characters) are displayed as separate characters.</span></span> <span data-ttu-id="1e68b-177">若要解决此限制，你可以通过调用显示的字符串规范化<xref:System.String.Normalize%2A?displayProperty=nameWithType>方法，然后才能将输出发送到控制台。</span><span class="sxs-lookup"><span data-stu-id="1e68b-177">To work around this limitation, you can normalize the string to be displayed by calling the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method before sending output to the console.</span></span> <span data-ttu-id="1e68b-178">在下面的示例中，一个字符串，包含组合字符序列 U + 0061 U + 0308年显示到控制台，为两个字符之前进行了规范化输出字符串，并作为单个字符后<xref:System.String.Normalize%2A?displayProperty=nameWithType>调用方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-178">In the following example, a string that contains the combining character sequence U+0061 U+0308 is displayed to the console as two characters before the output string is normalized, and as a single character after the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method is called.</span></span>  
  
     [!code-csharp[System.Console.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/normalize1.cs#5)]
     [!code-vb[System.Console.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/normalize1.vb#5)]  
  
     <span data-ttu-id="1e68b-179">请注意规范化是可行的解决方案，仅当标准字符包含对应于特定 combining 一个预先撰写窗体的 Unicode 字符序列。</span><span class="sxs-lookup"><span data-stu-id="1e68b-179">Note that normalization is a viable solution only if the Unicode standard for the character includes a pre-composed form that corresponds to a particular combining character sequence.</span></span>  
  
-   <span data-ttu-id="1e68b-180">如果一种字体为专用区域中的代码点提供的标志符号，则将显示该标志符号。</span><span class="sxs-lookup"><span data-stu-id="1e68b-180">If a font provides a glyph for a code point in the private use area, that glyph will be displayed.</span></span> <span data-ttu-id="1e68b-181">但是，由于专用区域中的字符是特定于应用程序，这可能不是预期的标志符号。</span><span class="sxs-lookup"><span data-stu-id="1e68b-181">However, because characters in the private use area are application-specific, this may not be the expected glyph.</span></span>  
  
 <span data-ttu-id="1e68b-182">下面的示例向控制台显示一系列的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-182">The following example displays a range of Unicode characters to the console.</span></span> <span data-ttu-id="1e68b-183">此示例接受三个命令行参数： 要显示，请显示，以及是否使用当前控制台编码范围的末尾的范围开始 (`false`) 或 utf-16 编码 (`true`)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-183">The example accepts three command-line parameters: the start of the range to display, the end of the range to display, and whether to use the current console encoding (`false`) or UTF-16 encoding (`true`).</span></span> <span data-ttu-id="1e68b-184">它假定控制台正在使用 TrueType 字体。</span><span class="sxs-lookup"><span data-stu-id="1e68b-184">It assumes that the console is using a TrueType font.</span></span>  
  
 [!code-csharp[System.Console.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/example3.cs#4)]
 [!code-vb[System.Console.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/example3.vb#4)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a><span data-ttu-id="1e68b-185">常见操作</span><span class="sxs-lookup"><span data-stu-id="1e68b-185">Common Operations</span></span>  
 <span data-ttu-id="1e68b-186"><xref:System.Console>类包含用于读取控制台输入和写入控制台输出的以下方法：</span><span class="sxs-lookup"><span data-stu-id="1e68b-186">The <xref:System.Console> class contains the following methods for reading console input and writing console output:</span></span>  
  
-   <span data-ttu-id="1e68b-187">重载<xref:System.Console.ReadKey%2A>方法读取单个字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-187">The overloads of the <xref:System.Console.ReadKey%2A> method read an individual character.</span></span>  
  
-   <span data-ttu-id="1e68b-188"><xref:System.Console.ReadLine%2A>方法读取输入一整行。</span><span class="sxs-lookup"><span data-stu-id="1e68b-188">The <xref:System.Console.ReadLine%2A> method reads an entire line of input.</span></span>  
  
-   <span data-ttu-id="1e68b-189"><xref:System.Console.Write%2A>方法重载转换为格式化或非格式化字符串，值类型、 字符，数组或一组对象的实例，然后将该字符串写入控制台。</span><span class="sxs-lookup"><span data-stu-id="1e68b-189">The <xref:System.Console.Write%2A> method overloads convert an instance of a value type, an array of characters, or a set of objects to a formatted or unformatted string, and then write that string to the console.</span></span>  
  
-   <span data-ttu-id="1e68b-190">并行整套<xref:System.Console.WriteLine%2A>方法重载相同形式的字符串的输出<xref:System.Console.Write%2A>重载，但是也添加一个行终止字符串。</span><span class="sxs-lookup"><span data-stu-id="1e68b-190">A parallel set of <xref:System.Console.WriteLine%2A> method overloads output the same string as the <xref:System.Console.Write%2A> overloads but also add a line termination string.</span></span>  
  
 <span data-ttu-id="1e68b-191"><xref:System.Console>类还包含方法和属性，以执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="1e68b-191">The <xref:System.Console> class also contains methods and properties to perform the following operations:</span></span>  
  
-   <span data-ttu-id="1e68b-192">获取或设置屏幕缓冲区的大小。</span><span class="sxs-lookup"><span data-stu-id="1e68b-192">Get or set the size of the screen buffer.</span></span> <span data-ttu-id="1e68b-193"><xref:System.Console.BufferHeight%2A>和<xref:System.Console.BufferWidth%2A>属性使你可以获取或设置缓冲区的高度和宽度，分别与<xref:System.Console.SetBufferSize%2A>方法使你可以在单个方法调用中设置缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="1e68b-193">The <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties let you get or set the buffer height and width, respectively, and the <xref:System.Console.SetBufferSize%2A> method lets you set the buffer size in a single method call.</span></span>  
  
-   <span data-ttu-id="1e68b-194">获取或设置控制台窗口的大小。</span><span class="sxs-lookup"><span data-stu-id="1e68b-194">Get or set the size of the console window.</span></span> <span data-ttu-id="1e68b-195"><xref:System.Console.WindowHeight%2A>和<xref:System.Console.WindowWidth%2A>属性使你可以获取或设置窗口的高度和宽度，分别与<xref:System.Console.SetWindowSize%2A>方法使你可以在单个方法调用中设置窗口大小。</span><span class="sxs-lookup"><span data-stu-id="1e68b-195">The <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties let you get or set the window height and width, respectively, and the <xref:System.Console.SetWindowSize%2A> method lets you set the window size in a single method call.</span></span>  
  
-   <span data-ttu-id="1e68b-196">获取或设置光标的大小。</span><span class="sxs-lookup"><span data-stu-id="1e68b-196">Get or set the size of the cursor.</span></span> <span data-ttu-id="1e68b-197"><xref:System.Console.CursorSize%2A>属性指定在字符单元格中的光标的高度。</span><span class="sxs-lookup"><span data-stu-id="1e68b-197">The <xref:System.Console.CursorSize%2A> property specifies the height of the cursor in a character cell.</span></span>  
  
-   <span data-ttu-id="1e68b-198">获取或设置控制台窗口相对于屏幕缓冲区的位置。</span><span class="sxs-lookup"><span data-stu-id="1e68b-198">Get or set the position of the console window relative to the screen buffer.</span></span> <span data-ttu-id="1e68b-199"><xref:System.Console.WindowTop%2A>和<xref:System.Console.WindowLeft%2A>属性使你可以获取或设置的最上面一行和显示在控制台窗口中，屏幕缓冲区的最左侧列和<xref:System.Console.SetWindowPosition%2A>方法使你可以在单个方法调用中设置这些值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-199">The <xref:System.Console.WindowTop%2A> and <xref:System.Console.WindowLeft%2A> properties let you get or set the top row and leftmost column of the screen buffer that appears in the console window, and the <xref:System.Console.SetWindowPosition%2A> method lets you set these values in a single method call.</span></span>  
  
-   <span data-ttu-id="1e68b-200">获取或设置光标的位置通过获取或设置<xref:System.Console.CursorTop%2A>和<xref:System.Console.CursorLeft%2A>属性或一组通过调用光标的位置<xref:System.Console.SetCursorPosition%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-200">Get or set the position of the cursor by getting or setting the <xref:System.Console.CursorTop%2A> and <xref:System.Console.CursorLeft%2A> properties, or set the position of the cursor by calling the <xref:System.Console.SetCursorPosition%2A> method.</span></span>  
  
-   <span data-ttu-id="1e68b-201">移动或通过调用清除屏幕缓冲区中的数据<xref:System.Console.MoveBufferArea%2A>或<xref:System.Console.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-201">Move or clear data in the screen buffer by calling the <xref:System.Console.MoveBufferArea%2A> or <xref:System.Console.Clear%2A> method.</span></span>  
  
-   <span data-ttu-id="1e68b-202">获取或设置前景色和背景颜色，通过使用<xref:System.Console.ForegroundColor%2A>和<xref:System.Console.BackgroundColor%2A>属性，或重置前景色和背景为其默认颜色通过调用<xref:System.Console.ResetColor%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-202">Get or set the foreground and background colors by using the <xref:System.Console.ForegroundColor%2A> and <xref:System.Console.BackgroundColor%2A> properties, or reset the background and foreground to their default colors by calling the <xref:System.Console.ResetColor%2A> method.</span></span>  
  
-   <span data-ttu-id="1e68b-203">通过调用播放的声音通过控制台扬声器播放提示音<xref:System.Console.Beep%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-203">Play the sound of a beep through the console speaker by calling the <xref:System.Console.Beep%2A> method.</span></span>  
  
<a name="Core"></a>   
## <a name="includenetcoreincludesnet-core-mdmd-notes"></a>[!INCLUDE[net_core](~/includes/net-core-md.md)]<span data-ttu-id="1e68b-204"> 说明</span><span class="sxs-lookup"><span data-stu-id="1e68b-204"> Notes</span></span>  
 <span data-ttu-id="1e68b-205">在桌面上，.NET Framework 中<xref:System.Console>类使用返回的编码`GetConsoleCP`和`GetConsoleOutputCP`，这通常代码页编码。</span><span class="sxs-lookup"><span data-stu-id="1e68b-205">In the .NET Framework on the desktop, the <xref:System.Console> class uses the encoding returned by `GetConsoleCP` and `GetConsoleOutputCP`, which typically is a code page encoding.</span></span> <span data-ttu-id="1e68b-206">有关示例代码，其区域性为英语 （美国），代码页 437 的系统上是默认情况下使用的编码。</span><span class="sxs-lookup"><span data-stu-id="1e68b-206">For example code, on systems whose culture is English (United States), code page 437 is the encoding that is used by default.</span></span> <span data-ttu-id="1e68b-207">但是，[!INCLUDE[net_core](~/includes/net-core-md.md)]可能提供仅这些编码的有限的子集。</span><span class="sxs-lookup"><span data-stu-id="1e68b-207">However, [!INCLUDE[net_core](~/includes/net-core-md.md)] may make only a limited subset of these encodings available.</span></span> <span data-ttu-id="1e68b-208">这种情况，<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>用作控制台的默认编码。</span><span class="sxs-lookup"><span data-stu-id="1e68b-208">Where this is the case, <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> is used as the default encoding for the console.</span></span>  
  
 <span data-ttu-id="1e68b-209">如果你的应用程序依赖于特定的代码页编码，就可以仍可以通过执行以下*之前*调用任何<xref:System.Console>方法：</span><span class="sxs-lookup"><span data-stu-id="1e68b-209">If your app depends on specific code page encodings, you can still make them available by doing the following *before* you call any <xref:System.Console> methods:</span></span>  
  
1.  <span data-ttu-id="1e68b-210">将 System.Text.Encoding.CodePages.dll 程序集的引用添加到你的项目。</span><span class="sxs-lookup"><span data-stu-id="1e68b-210">Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</span></span>  
  
2.  <span data-ttu-id="1e68b-211">检索<xref:System.Text.EncodingProvider>对象<xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-211">Retrieve the <xref:System.Text.EncodingProvider> object from the <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="1e68b-212">传递<xref:System.Text.EncodingProvider>对象传递给<xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType>方法使编码的可用提供程序支持的其他编码。</span><span class="sxs-lookup"><span data-stu-id="1e68b-212">Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the additional encodings supported by the encoding provider available.</span></span>  
  
 <span data-ttu-id="1e68b-213"><xref:System.Console>类将自动使用默认系统编码而不 UTF8，前提是你在调用任何之前注册编码提供<xref:System.Console>输出方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-213">The <xref:System.Console> class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any <xref:System.Console> output methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-214">下面的示例演示如何读取数据，并将数据写入到的标准输入和输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-214">The following example demonstrates how to read data from, and write data to, the standard input and output streams.</span></span> <span data-ttu-id="1e68b-215">请注意这些流，可以通过使用重定向<xref:System.Console.SetIn%2A>和<xref:System.Console.SetOut%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-215">Note that these streams can be redirected by using the <xref:System.Console.SetIn%2A> and <xref:System.Console.SetOut%2A> methods.</span></span>  
  
 [!code-cpp[Classic Console Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Console Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Console Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Console Example/CS/source.cs#1)]
 [!code-vb[Classic Console Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Console Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="1e68b-216">此类型是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1e68b-216">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Console.BackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BackgroundColor As ConsoleColor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ConsoleColor BackgroundColor { ConsoleColor get(); void set(ConsoleColor value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-217">获取或设置控制台的背景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-217">Gets or sets the background color of the console.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-218">一个值，指定控制台的背景色；也就是显示在每个字符后面的颜色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-218">A value that specifies the background color of the console; that is, the color that appears behind each character.</span>
          </span>
          <span data-ttu-id="1e68b-219">默认为黑色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-219">The default is black.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-220">更改<xref:System.Console.BackgroundColor%2A>属性会影响更改背景色后写入单个字符单元格的仅限 output。</span><span class="sxs-lookup"><span data-stu-id="1e68b-220">A change to the <xref:System.Console.BackgroundColor%2A> property affects only output that is written to individual character cells after the background color is changed.</span></span> <span data-ttu-id="1e68b-221">若要更改作为一个整体控制台窗口的背景色，设置<xref:System.Console.BackgroundColor%2A>属性并调用<xref:System.Console.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-221">To change the background color of the console window as a whole, set the <xref:System.Console.BackgroundColor%2A> property and call the <xref:System.Console.Clear%2A> method.</span></span> <span data-ttu-id="1e68b-222">下面的示例进行了这方面的演示。</span><span class="sxs-lookup"><span data-stu-id="1e68b-222">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Console.BackgroundColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.backgroundcolor/cs/backgroundcolor1.cs#1)]
 [!code-vb[System.Console.BackgroundColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.backgroundcolor/vb/backgroundcolor1.vb#1)]  
  
 <span data-ttu-id="1e68b-223">对于基于 Windows 的应用程序，在其中一个控制台不存在，get 操作返回<xref:System.ConsoleColor.Black?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-223">A get operation for a Windows-based application, in which a console does not exist, returns <xref:System.ConsoleColor.Black?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-224">下面的示例将保存的值<xref:System.ConsoleColor>枚举到一个数组，并将存储的当前值<xref:System.Console.BackgroundColor%2A>和<xref:System.Console.ForegroundColor%2A>到变量的属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-224">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="1e68b-225">然后前景色更改为在每个颜色<xref:System.ConsoleColor>枚举只不过为颜色匹配当前的背景中，并且它的背景色更改为在每个颜色<xref:System.ConsoleColor>与匹配的颜色除枚举当前前景色。</span><span class="sxs-lookup"><span data-stu-id="1e68b-225">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="1e68b-226">（如果相同的背景色的前景色，文本不是可见。）最后，它调用<xref:System.Console.ResetColor%2A>方法还原原始的控制台颜色。</span><span class="sxs-lookup"><span data-stu-id="1e68b-226">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e68b-227">设置操作中指定的颜色不是 <see cref="T:System.ConsoleColor" /> 的有效成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-227">The color specified in a set operation is not a valid member of <see cref="T:System.ConsoleColor" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-228">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-228">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-229">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-229">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-230">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-230">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-231">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-231">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Beep">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-232">通过控制台扬声器播放提示音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-232">Plays the sound of a beep through the console speaker.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Beep" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Beep ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-233">通过控制台扬声器播放提示音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-233">Plays the sound of a beep through the console speaker.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-234">默认情况下，播放提示音为 800 赫兹频率的 200 毫秒的持续时间。</span><span class="sxs-lookup"><span data-stu-id="1e68b-234">By default, the beep plays at a frequency of 800 hertz for a duration of 200 milliseconds.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e68b-235"><xref:System.Console.Beep%2A>方法不支持在 64 位版本的 Windows Vista 和 Windows XP 上。</span><span class="sxs-lookup"><span data-stu-id="1e68b-235">The <xref:System.Console.Beep%2A> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</span></span>  
  
 <span data-ttu-id="1e68b-236"><xref:System.Console.Beep%2A> 包装对 Windows 的调用[鸣叫函数](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-236"><xref:System.Console.Beep%2A> wraps a call to the Windows [Beep function](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx).</span></span> <span data-ttu-id="1e68b-237">是否<xref:System.Console.Beep%2A>在 Windows 7 取决于是否存在的 8254 可编程间隔计时器芯片前生成的 Windows 版本上声音。</span><span class="sxs-lookup"><span data-stu-id="1e68b-237">Whether <xref:System.Console.Beep%2A> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</span></span> <span data-ttu-id="1e68b-238">从 Windows 7 开始，它依赖于默认声音设备。</span><span class="sxs-lookup"><span data-stu-id="1e68b-238">Starting with Windows 7, it depends on the default sound device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-239">下面的示例演示<xref:System.Console.Beep%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-239">The following example demonstrates the <xref:System.Console.Beep%2A> method.</span></span> <span data-ttu-id="1e68b-240">该示例接受一个介于 1 到 9 作为命令行自变量，并播放提示音的次数。</span><span class="sxs-lookup"><span data-stu-id="1e68b-240">The example accepts a number from 1 through 9 as a command line argument, and plays the beep that number of times.</span></span>  
  
 [!code-cpp[console.beep#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.beep/CPP/beep.cpp#1)]
 [!code-csharp[console.beep#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.beep/CS/beep.cs#1)]
 [!code-vb[console.beep#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.beep/VB/beep.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.HostProtectionException">
          <span data-ttu-id="1e68b-241">在不允许访问用户界面的服务器（例如 SQL Server）上执行此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-241">This method was executed on a server, such as SQL Server, that does not permit access to a user interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep (int frequency, int duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep(int32 frequency, int32 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Beep(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Beep (frequency As Integer, duration As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep(int frequency, int duration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frequency" Type="System.Int32" />
        <Parameter Name="duration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="frequency">
          <span data-ttu-id="1e68b-242">提示音的频率，介于 37 到 32767 赫兹之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-242">The frequency of the beep, ranging from 37 to 32767 hertz.</span>
          </span>
        </param>
        <param name="duration">
          <span data-ttu-id="1e68b-243">提示音的持续时间，以毫秒为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-243">The duration of the beep measured in milliseconds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-244">通过控制台扬声器播放具有指定频率和持续时间的提示音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-244">Plays the sound of a beep of a specified frequency and duration through the console speaker.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-245"><xref:System.Console.Beep%2A> 包装对 Windows 的调用[鸣叫函数](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-245"><xref:System.Console.Beep%2A> wraps a call to the Windows [Beep function](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx).</span></span> <span data-ttu-id="1e68b-246">是否<xref:System.Console.Beep%2A>在 Windows 7 取决于是否存在的 8254 可编程间隔计时器芯片前生成的 Windows 版本上声音。</span><span class="sxs-lookup"><span data-stu-id="1e68b-246">Whether <xref:System.Console.Beep%2A> produces a sound on versions of Windows before Windows 7 depends on the presence of a 8254 programmable interval timer chip.</span></span> <span data-ttu-id="1e68b-247">从 Windows 7 开始，它依赖于默认声音设备。</span><span class="sxs-lookup"><span data-stu-id="1e68b-247">Starting with Windows 7, it depends on the default sound device.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e68b-248"><xref:System.Console.Beep%2A>方法不支持在 64 位版本的 Windows Vista 和 Windows XP 上。</span><span class="sxs-lookup"><span data-stu-id="1e68b-248">The <xref:System.Console.Beep%2A> method is not supported on the 64-bit editions of Windows Vista and Windows XP.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-249">此示例演示<xref:System.Console.Beep%2A>，通过播放通过控制台扬声器一首歌曲的第一个几个说明的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-249">This example demonstrates the <xref:System.Console.Beep%2A> method by playing the first few notes of a song through the console speaker.</span></span>  
  
 [!code-cpp[console.beep2#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.beep2/CPP/b2.cpp#1)]
 [!code-csharp[console.beep2#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.beep2/CS/b2.cs#1)]
 [!code-vb[console.beep2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.beep2/VB/b2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-250">
            <paramref name="frequency" /> 小于 37 或大于 32767 赫兹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-250">
              <paramref name="frequency" /> is less than 37 or more than 32767 hertz.</span>
          </span>
          <span data-ttu-id="1e68b-251">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-251">-or-</span>
          </span>
          <span data-ttu-id="1e68b-252">
            <paramref name="duration" /> 小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-252">
              <paramref name="duration" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.HostProtectionException">
          <span data-ttu-id="1e68b-253">在不允许访问控制台的服务器（例如 SQL Server）上执行此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-253">This method was executed on a server, such as SQL Server, that does not permit access to the console.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BufferHeight">
      <MemberSignature Language="C#" Value="public static int BufferHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.BufferHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BufferHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int BufferHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-254">获取或设置缓冲区的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-254">Gets or sets the height of the buffer area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-255">缓冲区的当前高度，以行为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-255">The current height, in rows, of the buffer area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-256">此属性定义行 （或行），它存储在控制台模式窗口访问的缓冲区的数。</span><span class="sxs-lookup"><span data-stu-id="1e68b-256">This property defines the number of rows (or lines) stored in the buffer that is accessed by a console mode window.</span></span> <span data-ttu-id="1e68b-257">与此相反，<xref:System.Console.WindowHeight%2A>属性定义的实际显示在控制台窗口在任何特定时间的行数。</span><span class="sxs-lookup"><span data-stu-id="1e68b-257">In contrast, the <xref:System.Console.WindowHeight%2A> property defines the number of rows that are actually displayed in the console window at any particular time.</span></span> <span data-ttu-id="1e68b-258">如果实际写入缓冲区的行数超过所定义的行数<xref:System.Console.WindowHeight%2A>属性，以便它可显示的连续相等的行数可垂直滚动窗口<xref:System.Console.WindowHeight%2A>属性，也位于任何位置中缓冲区。</span><span class="sxs-lookup"><span data-stu-id="1e68b-258">If the number of rows actually written to the buffer exceeds the number of rows defined by the <xref:System.Console.WindowHeight%2A> property, the window can be scrolled vertically so that it displays a contiguous number of rows that are equal to the <xref:System.Console.WindowHeight%2A> property and are located anywhere in the buffer.</span></span>  
  
 <span data-ttu-id="1e68b-259">如果集运算中的值减少<xref:System.Console.BufferHeight%2A>属性，将删除最顶部的行。</span><span class="sxs-lookup"><span data-stu-id="1e68b-259">If a set operation decreases the value of the <xref:System.Console.BufferHeight%2A> property, the uppermost lines are removed.</span></span> <span data-ttu-id="1e68b-260">例如，如果行数都会从 300 减少到 250、 行 0 到 49 被移除，而现有行 50 到 299 成为行 0 是通过 249。</span><span class="sxs-lookup"><span data-stu-id="1e68b-260">For example, if the number of lines is reduced from 300 to 250, lines 0 through 49 are removed, and the existing lines 50 through 299 become lines 0 through 249.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-261">此示例演示<xref:System.Console.BufferHeight%2A>和<xref:System.Console.BufferWidth%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-261">This example demonstrates the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="1e68b-262">该示例将报告操作系统窗口中设置为 300 行和 85 列的缓冲区大小的尺寸。</span><span class="sxs-lookup"><span data-stu-id="1e68b-262">The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</span></span>  
  
 [!code-cpp[console.bufferHW#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.bufferHW/CPP/hw.cpp#1)]
 [!code-csharp[console.bufferHW#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.bufferHW/CS/hw.cs#1)]
 [!code-vb[console.bufferHW#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.bufferHW/VB/hw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-263">Set 操作中的值小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-263">The value in a set operation is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="1e68b-264">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-264">-or-</span>
          </span>
          <span data-ttu-id="1e68b-265">集运算中的值大于或等于 <see cref="F:System.Int16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-265">The value in a set operation is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="1e68b-266">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-266">-or-</span>
          </span>
          <span data-ttu-id="1e68b-267">Set 操作中的值小于 <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-267">The value in a set operation is less than <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-268">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-268">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-269">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-269">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-270">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-270">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-271">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-271">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BufferWidth">
      <MemberSignature Language="C#" Value="public static int BufferWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.BufferWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BufferWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int BufferWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-272">获取或设置缓冲区的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-272">Gets or sets the width of the buffer area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-273">缓冲区的当前宽度，以列为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-273">The current width, in columns, of the buffer area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-274">如果集运算中的值减少<xref:System.Console.BufferWidth%2A>属性，将删除最右边的列。</span><span class="sxs-lookup"><span data-stu-id="1e68b-274">If a set operation decreases the value of the <xref:System.Console.BufferWidth%2A> property, the rightmost columns are removed.</span></span> <span data-ttu-id="1e68b-275">例如，如果从 80 情况下，列数减少到 60，会删除 60 79 个每个行和列。</span><span class="sxs-lookup"><span data-stu-id="1e68b-275">For example, if the number of columns is reduced from 80 to 60, columns 60 through 79 of each row are removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-276">此示例演示<xref:System.Console.BufferHeight%2A>和<xref:System.Console.BufferWidth%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-276">This example demonstrates the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="1e68b-277">该示例将报告操作系统窗口中设置为 300 行和 85 列的缓冲区大小的尺寸。</span><span class="sxs-lookup"><span data-stu-id="1e68b-277">The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.</span></span>  
  
 [!code-cpp[console.bufferHW#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.bufferHW/CPP/hw.cpp#1)]
 [!code-csharp[console.bufferHW#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.bufferHW/CS/hw.cs#1)]
 [!code-vb[console.bufferHW#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.bufferHW/VB/hw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-278">Set 操作中的值小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-278">The value in a set operation is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="1e68b-279">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-279">-or-</span>
          </span>
          <span data-ttu-id="1e68b-280">集运算中的值大于或等于 <see cref="F:System.Int16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-280">The value in a set operation is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="1e68b-281">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-281">-or-</span>
          </span>
          <span data-ttu-id="1e68b-282">Set 操作中的值小于 <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-282">The value in a set operation is less than <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-283">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-283">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-284">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-284">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-285">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-285">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-286">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-286">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CancelKeyPress">
      <MemberSignature Language="C#" Value="public static event ConsoleCancelEventHandler CancelKeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ConsoleCancelEventHandler CancelKeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Console.CancelKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CancelKeyPress As ConsoleCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event ConsoleCancelEventHandler ^ CancelKeyPress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-287">当 <see cref="F:System.ConsoleModifiers.Control" /> 修改键 (Ctrl) 和 <see cref="F:System.ConsoleKey.C" /> console 键 (C) 或 Break 键同时按住（Ctrl+C 或 Ctrl+Break）时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-287">Occurs when the <see cref="F:System.ConsoleModifiers.Control" /> modifier key (Ctrl) and either the <see cref="F:System.ConsoleKey.C" /> console key (C) or the Break key are pressed simultaneously (Ctrl+C or Ctrl+Break).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-288">结合使用此事件<xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType>和<xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-288">This event is used in conjunction with <xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType> and <xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1e68b-289"><xref:System.Console.CancelKeyPress>事件可以截获 Ctrl + C 信号，以便事件处理程序可以决定是继续执行，还是终止将控制台应用程序。</span><span class="sxs-lookup"><span data-stu-id="1e68b-289">The <xref:System.Console.CancelKeyPress> event enables a console application to intercept the Ctrl+C signal so the event handler can decide whether to continue executing or terminate.</span></span> <span data-ttu-id="1e68b-290">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-290">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1e68b-291">当用户按下 Ctrl + C 或 Ctrl + Break，<xref:System.Console.CancelKeyPress>激发事件和应用程序的<xref:System.ConsoleCancelEventHandler>执行事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="1e68b-291">When the user presses either Ctrl+C or Ctrl+Break, the <xref:System.Console.CancelKeyPress> event is fired and the application's <xref:System.ConsoleCancelEventHandler> event handler is executed.</span></span> <span data-ttu-id="1e68b-292">事件处理程序传递<xref:System.ConsoleCancelEventArgs>具有两个有用的属性的对象：</span><span class="sxs-lookup"><span data-stu-id="1e68b-292">The event handler is passed a <xref:System.ConsoleCancelEventArgs> object that has two useful properties:</span></span>  
  
-   <span data-ttu-id="1e68b-293"><xref:System.ConsoleCancelEventArgs.SpecialKey%2A>它可以确定是否由于用户按 Ctrl + C 调用处理程序 (该属性值将<xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType>) 或 Ctrl + Break (该属性值将<xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-293"><xref:System.ConsoleCancelEventArgs.SpecialKey%2A>, which allows you to determine whether the handler was invoked as a result of the user pressing Ctrl+C (the property value is <xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType>) or Ctrl+Break (the property value is <xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType>).</span></span>  
  
-   <span data-ttu-id="1e68b-294"><xref:System.ConsoleCancelEventArgs.Cancel%2A>它可以确定如何向应用程序应响应用户按 Ctrl + C 或 Ctrl + Break。</span><span class="sxs-lookup"><span data-stu-id="1e68b-294"><xref:System.ConsoleCancelEventArgs.Cancel%2A>, which allows you to determine how to your application should respond to the user pressing Ctrl+C or Ctrl+Break.</span></span> <span data-ttu-id="1e68b-295">默认情况下，<xref:System.ConsoleCancelEventArgs.Cancel%2A>属性是`false`，其原因程序终止事件处理程序退出时的执行。</span><span class="sxs-lookup"><span data-stu-id="1e68b-295">By default, the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property is `false`, which causes program execution to terminate when the event handler exits.</span></span> <span data-ttu-id="1e68b-296">更改其属性`true`指定应用程序应继续执行。</span><span class="sxs-lookup"><span data-stu-id="1e68b-296">Changing its property to `true` specifies that the application should continue to execute.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="1e68b-297">如果你的应用程序具有简单的要求，则可以使用<xref:System.Console.TreatControlCAsInput%2A>而不是此事件的属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-297">If your application has simple requirements, you can use the <xref:System.Console.TreatControlCAsInput%2A> property instead of this event.</span></span> <span data-ttu-id="1e68b-298">通过将此属性设置为`false`，你可以确保应用程序始终退出如果用户按下 Ctrl + C。</span><span class="sxs-lookup"><span data-stu-id="1e68b-298">By setting this property to `false`, you can ensure that your application always exits if the user presses Ctrl+C.</span></span> <span data-ttu-id="1e68b-299">通过将它设置为`true`，你可以确保，按 Ctrl + C 将不会终止应用程序。</span><span class="sxs-lookup"><span data-stu-id="1e68b-299">By setting it to `true`, you can ensure that pressing Ctrl+C will not terminate the application.</span></span>  
  
 <span data-ttu-id="1e68b-300">此事件的事件处理程序是在线程池线程上执行的。</span><span class="sxs-lookup"><span data-stu-id="1e68b-300">The event handler for this event is executed on a thread pool thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-301">下面的示例演示如何<xref:System.Console.CancelKeyPress>使用事件。</span><span class="sxs-lookup"><span data-stu-id="1e68b-301">The following example demonstrates how the <xref:System.Console.CancelKeyPress> event is used.</span></span> <span data-ttu-id="1e68b-302">当您按 Ctrl + C 时，中断读取的操作和`myHandler`调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="1e68b-302">When you press Ctrl+C, the read operation is interrupted and the `myHandler` event handler is invoked.</span></span> <span data-ttu-id="1e68b-303">到事件处理程序，在输入时<xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType>属性是`false`，这意味着，当事件处理程序终止时，将终止当前进程。</span><span class="sxs-lookup"><span data-stu-id="1e68b-303">Upon entry to the event handler, the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> property is `false`, which means that the current process will terminate when the event handler terminates.</span></span> <span data-ttu-id="1e68b-304">但是，事件处理程序设置<xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType>属性`true`，这意味着将不会终止进程，并且会继续读取的操作。</span><span class="sxs-lookup"><span data-stu-id="1e68b-304">However, the event handler sets the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> property to `true`, which means that the process will not terminate and the read operation will resume.</span></span>  
  
 [!code-cpp[console.cancelkeypress#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cancelkeypress/cpp/ckp.cpp#1)]
 [!code-csharp[console.cancelkeypress#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cancelkeypress/cs/ckp.cs#1)]
 [!code-vb[console.cancelkeypress#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cancelkeypress/vb/ckp.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-305">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-305">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-306">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-306">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="T:System.ConsoleCancelEventArgs" />
        <altmember cref="T:System.ConsoleCancelEventHandler" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
      </Docs>
    </Member>
    <Member MemberName="CapsLock">
      <MemberSignature Language="C#" Value="public static bool CapsLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CapsLock" />
      <MemberSignature Language="DocId" Value="P:System.Console.CapsLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CapsLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CapsLock { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-307">获取一个值，该值指示 Caps Lock 键盘切换键是打开的还是关闭的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-307">Gets a value indicating whether the CAPS LOCK keyboard toggle is turned on or turned off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-308">如果 Caps Lock 是打开的，则为 <see langword="true" />；如果 Caps Lock 是关闭的，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-308">
              <see langword="true" /> if CAPS LOCK is turned on; <see langword="false" /> if CAPS LOCK is turned off.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-309">清除控制台缓冲区和相应的控制台窗口的显示信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-309">Clears the console buffer and corresponding console window of display information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-310">使用<xref:System.Console.Clear%2A>方法相当调用 MS-DOS`cls`命令在命令提示符窗口。</span><span class="sxs-lookup"><span data-stu-id="1e68b-310">Using the <xref:System.Console.Clear%2A> method is equivalent invoking the MS-DOS `cls` command in the command prompt window.</span></span> <span data-ttu-id="1e68b-311">当<xref:System.Console.Clear%2A>调用方法、 光标自动滚动到窗口的左上角和屏幕缓冲区的内容设置为使用当前前景色背景色的空白。</span><span class="sxs-lookup"><span data-stu-id="1e68b-311">When the <xref:System.Console.Clear%2A> method is called, the cursor automatically scrolls to the top-left corner of the window and the contents of the screen buffer are set to blanks using the current foreground background colors.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e68b-312">尝试调用<xref:System.Console.Clear%2A>方法在一个控制台应用程序的输出定向到一个文件时将引发<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-312">Attempting to call the <xref:System.Console.Clear%2A> method when a console application's output is redirected to a file throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="1e68b-313">若要防止此情况，始终将包装对的调用<xref:System.Console.Clear%2A>中的方法`try`...`catch`</span><span class="sxs-lookup"><span data-stu-id="1e68b-313">To prevent this, always wrap a call to the <xref:System.Console.Clear%2A> method in a `try`…`catch`</span></span> <span data-ttu-id="1e68b-314">块。</span><span class="sxs-lookup"><span data-stu-id="1e68b-314">block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-315">下面的示例使用<xref:System.Console.Clear%2A>方法清除控制台，然后它会执行一个循环，将提示用户选择前景色和背景颜色，并输入要显示的字符串。</span><span class="sxs-lookup"><span data-stu-id="1e68b-315">The following example uses the <xref:System.Console.Clear%2A> method to clear the console before it executes a loop, prompts the user to select a foreground and background color and to enter a string to display.</span></span> <span data-ttu-id="1e68b-316">如果用户选择不退出程序，将还原控制台的原始的前景色和背景色和<xref:System.Console.Clear%2A>重新执行循环之前调用方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-316">If the user chooses not to exit the program, the console's original foreground and background colors are restored and the <xref:System.Console.Clear%2A> method is called again before re-executing the loop.</span></span>  
  
 [!code-csharp[System.Console.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.clear/cs/clear1.cs#1)]
 [!code-vb[System.Console.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.clear/vb/clear1.vb#1)]  
  
 <span data-ttu-id="1e68b-317">示例依赖于`GetKeyPress`用于验证用户的选择前景色和背景颜色的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-317">The example relies on a `GetKeyPress` method to validate the user's selection of a foreground and background color.</span></span>  
  
 <span data-ttu-id="1e68b-318">此示例演示<xref:System.Console.CursorLeft%2A>和<xref:System.Console.CursorTop%2A>属性，与<xref:System.Console.SetCursorPosition%2A>和<xref:System.Console.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-318">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="1e68b-319">该示例定位光标，确定将在其中的下一步的写入发生，由结合使用的 5 字符矩形中绘制 5 字符"+"，"&#124;"，和"-"字符串。</span><span class="sxs-lookup"><span data-stu-id="1e68b-319">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="1e68b-320">请注意，无法使用其他字符串结合使用的步骤较少绘制矩形。</span><span class="sxs-lookup"><span data-stu-id="1e68b-320">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-321">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-321">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CursorLeft">
      <MemberSignature Language="C#" Value="public static int CursorLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorLeft" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorLeft { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-322">获取或设置光标在缓冲区中的列位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-322">Gets or sets the column position of the cursor within the buffer area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-323">光标的当前位置，以列为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-323">The current position, in columns, of the cursor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e68b-324">此示例演示<xref:System.Console.CursorLeft%2A>和<xref:System.Console.CursorTop%2A>属性，与<xref:System.Console.SetCursorPosition%2A>和<xref:System.Console.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-324">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="1e68b-325">该示例定位光标，确定将在其中的下一步的写入发生，由结合使用的 5 字符矩形中绘制 5 字符"+"，"&#124;"，和"-"字符串。</span><span class="sxs-lookup"><span data-stu-id="1e68b-325">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="1e68b-326">请注意，无法使用其他字符串结合使用的步骤较少绘制矩形。</span><span class="sxs-lookup"><span data-stu-id="1e68b-326">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-327">集运算中的值小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-327">The value in a set operation is less than zero.</span>
          </span>
          <span data-ttu-id="1e68b-328">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-328">-or-</span>
          </span>
          <span data-ttu-id="1e68b-329">集运算中的值大于或等于 <see cref="P:System.Console.BufferWidth" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-329">The value in a set operation is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-330">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-330">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-331">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-331">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-332">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-332">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-333">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-333">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CursorSize">
      <MemberSignature Language="C#" Value="public static int CursorSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorSize" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-334">获取或设置光标在字符单元格中的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-334">Gets or sets the height of the cursor within a character cell.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-335">光标的大小，以字符单元格高度的百分比表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-335">The size of the cursor expressed as a percentage of the height of a character cell.</span>
          </span>
          <span data-ttu-id="1e68b-336">属性值的范围为 1 到 100。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-336">The property value ranges from 1 to 100.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-337">光标外观将发生变化，从底部的单元格一条水平线，当属性值为 1，到完全填充单元格，当属性值为 100。</span><span class="sxs-lookup"><span data-stu-id="1e68b-337">The cursor appearance varies, ranging from a horizontal line at the bottom of the cell when the property value is 1, to completely filling the cell when the property value is 100.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-338">此示例演示<xref:System.Console.CursorSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-338">This example demonstrates the <xref:System.Console.CursorSize%2A> property.</span></span> <span data-ttu-id="1e68b-339">该示例会增大的光标每次任何控制台键按下时，然后在终止之前将光标还原到其原始大小的大小。</span><span class="sxs-lookup"><span data-stu-id="1e68b-339">The example increases the size of the cursor each time any console key is pressed, then restores the cursor to its original size before terminating.</span></span>  
  
 [!code-cpp[console.cursorsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorsize/CPP/csize.cpp#1)]
 [!code-csharp[console.cursorsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorsize/CS/csize.cs#1)]
 [!code-vb[console.cursorsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorsize/VB/csize.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-340">集运算中指定的值小于 1 或大于 100.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-340">The value specified in a set operation is less than 1 or greater than 100.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-341">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-341">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-342">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-342">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-343">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-343">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-344">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-344">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CursorTop">
      <MemberSignature Language="C#" Value="public static int CursorTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorTop" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorTop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorTop { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-345">获取或设置光标在缓冲区中的行位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-345">Gets or sets the row position of the cursor within the buffer area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-346">光标的当前位置，以行为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-346">The current position, in rows, of the cursor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e68b-347">此示例演示<xref:System.Console.CursorLeft%2A>和<xref:System.Console.CursorTop%2A>属性，与<xref:System.Console.SetCursorPosition%2A>和<xref:System.Console.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-347">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="1e68b-348">该示例定位光标，确定将在其中的下一步的写入发生，由结合使用的 5 字符矩形中绘制 5 字符"+"，"&#124;"，和"-"字符串。</span><span class="sxs-lookup"><span data-stu-id="1e68b-348">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="1e68b-349">请注意，无法使用其他字符串结合使用的步骤较少绘制矩形。</span><span class="sxs-lookup"><span data-stu-id="1e68b-349">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-350">集运算中的值小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-350">The value in a set operation is less than zero.</span>
          </span>
          <span data-ttu-id="1e68b-351">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-351">-or-</span>
          </span>
          <span data-ttu-id="1e68b-352">集运算中的值大于或等于 <see cref="P:System.Console.BufferHeight" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-352">The value in a set operation is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-353">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-353">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-354">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-354">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-355">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-355">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-356">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-356">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CursorVisible">
      <MemberSignature Language="C#" Value="public static bool CursorVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CursorVisible" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorVisible" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CursorVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-357">获取或设置一个值，用以指示光标是否可见。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-357">Gets or sets a value indicating whether the cursor is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-358">如果光标可见，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-358">
              <see langword="true" /> if the cursor is visible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e68b-359">此示例演示<xref:System.Console.CursorVisible%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-359">This example demonstrates the <xref:System.Console.CursorVisible%2A> property.</span></span> <span data-ttu-id="1e68b-360">示例使光标，如果输入的第一列是 + 字符可见或不可见，如果输入-字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-360">The example makes the cursor visible if the first column of input is a '+' character or invisible if the input is a '-' character.</span></span>  
  
 [!code-cpp[console.cursorvis#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorvis/CPP/vis.cpp#1)]
 [!code-csharp[console.cursorvis#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorvis/CS/vis.cs#1)]
 [!code-vb[console.cursorvis#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorvis/VB/vis.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-361">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-361">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-362">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-362">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-363">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-363">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-364">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-364">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Error" />
      <MemberSignature Language="DocId" Value="P:System.Console.Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Error As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextWriter ^ Error { System::IO::TextWriter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-365">获取标准错误输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-365">Gets the standard error output stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-366">表示标准错误输出流的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-366">A <see cref="T:System.IO.TextWriter" /> that represents the standard error output stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-367">默认情况下，此标准错误流设置到控制台。</span><span class="sxs-lookup"><span data-stu-id="1e68b-367">This standard error stream is set to the console by default.</span></span> <span data-ttu-id="1e68b-368">它可以设置到另一个流<xref:System.Console.SetError%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-368">It can be set to another stream with the <xref:System.Console.SetError%2A> method.</span></span> <span data-ttu-id="1e68b-369">标准错误流重定向后，它可以重新获取通过调用<xref:System.Console.OpenStandardError%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-369">After the standard error stream is redirected, it can be reacquired by calling the <xref:System.Console.OpenStandardError%2A> method.</span></span>  
  
 <span data-ttu-id="1e68b-370">标准错误流中的信息性输出通常定向到一个文件的控制台应用程序，可通过<xref:System.Console.Error%2A>属性可以用于向控制台显示的信息，即使重定向输出。</span><span class="sxs-lookup"><span data-stu-id="1e68b-370">In console applications whose informational output is often redirected to a file, the standard error stream available through the <xref:System.Console.Error%2A> property can be used to display information to the console even if output is redirected.</span></span> <span data-ttu-id="1e68b-371">下面的示例从 1 开始的一次显示 10 个数字的产品表。</span><span class="sxs-lookup"><span data-stu-id="1e68b-371">The following example displays product tables for 10 numbers at a time starting with 1.</span></span> <span data-ttu-id="1e68b-372">在 10 个数字，每个集之后<xref:System.Console.Error%2A>使用属性来要求用户是否显示下一组。</span><span class="sxs-lookup"><span data-stu-id="1e68b-372">After every set of 10 numbers, the <xref:System.Console.Error%2A> property is used to ask the user whether to display the next set.</span></span> <span data-ttu-id="1e68b-373">如果标准输出定向到一个文件，则仍例程是否应生成的下一步的一套产品要求用户。</span><span class="sxs-lookup"><span data-stu-id="1e68b-373">If the standard output is redirected to a file, the user is still asked whether the routine should generate the next set of products.</span></span>  
  
 [!code-csharp[System.Console.Error#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.error/cs/error1.cs#1)]
 [!code-vb[System.Console.Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.error/vb/error1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-374">下面的示例是名为将在文本文件中的制表符替换为四个空格，通过定义的值的 ExpandTabs 的命令行实用工具`tabSize`变量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-374">The following example is a command line utility named ExpandTabs that replaces tab characters in a text file with four spaces, the value defined by the `tabSize` variable.</span></span> <span data-ttu-id="1e68b-375">它将重定向的标准输入和输出到文件，流式处理，但使用<xref:System.Console.Error%2A>属性以将标准错误流写入到控制台。</span><span class="sxs-lookup"><span data-stu-id="1e68b-375">It redirects the standard input and output streams to files, but uses the <xref:System.Console.Error%2A> property to write the standard error stream to the console.</span></span> <span data-ttu-id="1e68b-376">通过提供包含制表符的文件的名称和输出文件的名称，可以从命令行启动它。</span><span class="sxs-lookup"><span data-stu-id="1e68b-376">It can be launched from the command line by supplying the name of the file that contains tab characters and the name of the output file.</span></span>  
  
 [!code-cpp[Console-EXPANDTABSEX#1](~/samples/snippets/cpp/VS_Snippets_CLR/Console-EXPANDTABSEX/CPP/expandtabsex.cpp#1)]
 [!code-csharp[Console-EXPANDTABSEX#1](~/samples/snippets/csharp/VS_Snippets_CLR/Console-EXPANDTABSEX/CS/expandtabsex.cs#1)]
 [!code-vb[Console-EXPANDTABSEX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Console-EXPANDTABSEX/VB/expandtabsex.vb#1)]  
  
 <span data-ttu-id="1e68b-377">下面的示例是向控制台显示的一个或多个文本文件的内容的简单文本文件查看器。</span><span class="sxs-lookup"><span data-stu-id="1e68b-377">The following example is a simple text file viewer that displays the contents of one or more text files to the console.</span></span> <span data-ttu-id="1e68b-378">如果没有任何命令行参数，或者如果不存在作为命令行自变量传递的任何文件，该示例将调用<xref:System.Console.SetError%2A>方法来将错误信息重定向到文件中，调用<xref:System.Console.OpenStandardError%2A>过程中重新获取标准错误的方法流，并指示错误的信息已写入到文件。</span><span class="sxs-lookup"><span data-stu-id="1e68b-378">If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the <xref:System.Console.OpenStandardError%2A> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</span></span>  
  
 [!code-csharp[System.Console.OpenStandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.openstandarderror/cs/viewtextfile.cs#1)]
 [!code-vb[System.Console.OpenStandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.openstandarderror/vb/viewtextfile.vb#1)]  
  
 <span data-ttu-id="1e68b-379">请注意，<xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType>属性设置为`true`之前重新获取错误流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-379">Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property is set to `true` before reacquiring the error stream.</span></span> <span data-ttu-id="1e68b-380">这可确保，输出将立即发送到控制台而不是缓冲。</span><span class="sxs-lookup"><span data-stu-id="1e68b-380">This ensures that output will be sent to the console immediately rather than buffered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ForegroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor ForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor ForegroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Console.ForegroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ForegroundColor As ConsoleColor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ConsoleColor ForegroundColor { ConsoleColor get(); void set(ConsoleColor value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-381">获取或设置控制台的前景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-381">Gets or sets the foreground color of the console.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-382">一个 <see cref="T:System.ConsoleColor" />，指定控制台的前景色；也就是显示的每个字符的颜色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-382">A <see cref="T:System.ConsoleColor" /> that specifies the foreground color of the console; that is, the color of each character that is displayed.</span>
          </span>
          <span data-ttu-id="1e68b-383">默认为灰色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-383">The default is gray.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-384">对于基于 Windows 的应用程序，在其中一个控制台不存在，get 操作返回<xref:System.ConsoleColor.Gray>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-384">A get operation for a Windows-based application, in which a console does not exist, returns <xref:System.ConsoleColor.Gray>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-385">下面的示例检查是否控制台的背景色为黑色，是否是，它的背景色更改为红色，为黑色的前景色。</span><span class="sxs-lookup"><span data-stu-id="1e68b-385">The following example checks whether the console's background color is black and, if it is, it changes the background color to red and the foreground color to black.</span></span>  
  
 [!code-csharp[System.ConsoleColor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/Example2.cs#2)] 
 [!code-vb[System.ConsoleColor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/Example2.vb#2)]  
  
 <span data-ttu-id="1e68b-386">下面的示例将保存的值<xref:System.ConsoleColor>枚举到一个数组，并将存储的当前值<xref:System.Console.BackgroundColor%2A>和<xref:System.Console.ForegroundColor%2A>到变量的属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-386">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="1e68b-387">然后前景色更改为在每个颜色<xref:System.ConsoleColor>枚举只不过为颜色匹配当前的背景中，并且它的背景色更改为在每个颜色<xref:System.ConsoleColor>与匹配的颜色除枚举当前前景色。</span><span class="sxs-lookup"><span data-stu-id="1e68b-387">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="1e68b-388">（如果相同的背景色的前景色，文本不是可见。）最后，它调用<xref:System.Console.ResetColor%2A>方法还原原始的控制台颜色。</span><span class="sxs-lookup"><span data-stu-id="1e68b-388">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e68b-389">设置操作中指定的颜色不是 <see cref="T:System.ConsoleColor" /> 的有效成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-389">The color specified in a set operation is not a valid member of <see cref="T:System.ConsoleColor" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-390">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-390">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-391">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-391">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-392">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-392">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-393">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-393">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="In">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader In { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextReader In" />
      <MemberSignature Language="DocId" Value="P:System.Console.In" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property In As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextReader ^ In { System::IO::TextReader ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-394">获取标准输入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-394">Gets the standard input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-395">表示标准输入流的 <see cref="T:System.IO.TextReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-395">A <see cref="T:System.IO.TextReader" /> that represents the standard input stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-396">默认情况下，此属性设置为标准输入流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-396">This property is set to the standard input stream by default.</span></span> <span data-ttu-id="1e68b-397">此属性可以设置为另一个流<xref:System.Console.SetIn%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-397">This property can be set to another stream with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
 <span data-ttu-id="1e68b-398">读取操作的标准输入流上同步执行。</span><span class="sxs-lookup"><span data-stu-id="1e68b-398">Read operations on the standard input stream execute synchronously.</span></span> <span data-ttu-id="1e68b-399">也就是说，它们受阻，直到指定的读取的操作完成。</span><span class="sxs-lookup"><span data-stu-id="1e68b-399">That is, they block until the specified read operation has completed.</span></span> <span data-ttu-id="1e68b-400">这甚至适用如果异步方法，如<xref:System.IO.TextReader.ReadLineAsync%2A>，调用<xref:System.IO.TextReader>返回对象<xref:System.Console.In%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-400">This is true even if an asynchronous method, such as <xref:System.IO.TextReader.ReadLineAsync%2A>, is called on the <xref:System.IO.TextReader> object returned by the <xref:System.Console.In%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-401">下面的示例演示如何使用`In`属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-401">The following sample illustrates the use of the `In` property.</span></span>  
  
 [!code-cpp[consolein#1](~/samples/snippets/cpp/VS_Snippets_CLR/consolein/CPP/consolein.cpp#1)]
 [!code-csharp[consolein#1](~/samples/snippets/csharp/VS_Snippets_CLR/consolein/CS/consolein.cs#1)]
 [!code-vb[consolein#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/consolein/VB/consolein.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Console.OpenStandardInput" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="InputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding InputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding InputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Console.InputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property InputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ InputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-402">获取或设置控制台用于读取输入的编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-402">Gets or sets the encoding the console uses to read input.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-403">用于读取控制台输入的编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-403">The encoding used to read console input.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-404">控制台使用要将键盘输入转换为相应的字符编码的输入。</span><span class="sxs-lookup"><span data-stu-id="1e68b-404">The console uses the input encoding to translate keyboard input into a corresponding character.</span></span> <span data-ttu-id="1e68b-405">输入编码用到了映射到单独字符的 256 键盘字符代码的代码页。</span><span class="sxs-lookup"><span data-stu-id="1e68b-405">The input encoding incorporates a code page that maps 256 keyboard character codes to individual characters.</span></span> <span data-ttu-id="1e68b-406">不同的代码页包含不同的特殊字符，通常会对一种语言或一组语言进行自定义。</span><span class="sxs-lookup"><span data-stu-id="1e68b-406">Different code pages include different special characters, typically customized for a language or a group of languages.</span></span>  
  
 <span data-ttu-id="1e68b-407">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，属性 get 操作可以返回而不是控制台的当前输入编码的缓存的值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-407">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], a property get operation may return a cached value instead of the console's current input encoding.</span></span> <span data-ttu-id="1e68b-408">发生这种情况的值<xref:System.Console.InputEncoding%2A>以外的分配给其他一些方式修改属性<xref:System.Console.InputEncoding%2A>属性，例如在调用 Windows`SetConsoleCP`函数或使用`chcp`命令从 PowerShell 脚本。</span><span class="sxs-lookup"><span data-stu-id="1e68b-408">This can occur if the value of the <xref:System.Console.InputEncoding%2A> property is modified by some means other than an assignment to the <xref:System.Console.InputEncoding%2A> property, such as calling the Windows `SetConsoleCP` function or using the `chcp` command from a PowerShell script.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-409">集运算中的属性值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-409">The property value in a set operation is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-410">执行此操作期间出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-410">An error occurred during the execution of this operation.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-411">你的应用程序没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-411">Your application does not have permission to perform this operation.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-412">用于读取和写入顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-412">for reading and writing to top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-413">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-413">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="IsErrorRedirected">
      <MemberSignature Language="C#" Value="public static bool IsErrorRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsErrorRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsErrorRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsErrorRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsErrorRedirected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-414">获取指示错误输出流是否已经从标准错误流被再定位的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-414">Gets a value that indicates whether the error output stream has been redirected from the standard error stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-415">如果重定向错误，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-415">
              <see langword="true" /> if error output is redirected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
        <altmember cref="M:System.Console.OpenStandardError" />
      </Docs>
    </Member>
    <Member MemberName="IsInputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsInputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInputRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsInputRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInputRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInputRedirected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-416">获取指示输入是否已从标准输入流中重定向的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-416">Gets a value that indicates whether input has been redirected from the standard input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-417">如果重定向输入，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-417">
              <see langword="true" /> if input is redirected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
        <altmember cref="M:System.Console.OpenStandardInput" />
      </Docs>
    </Member>
    <Member MemberName="IsOutputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsOutputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsOutputRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsOutputRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsOutputRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsOutputRedirected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-418">获取指示输出是否已从标准输入流中重定向的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-418">Gets a value that indicates whether output has been redirected from the standard output stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-419">如果重定向输出，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-419">
              <see langword="true" /> if output is redirected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
        <altmember cref="M:System.Console.OpenStandardError" />
      </Docs>
    </Member>
    <Member MemberName="KeyAvailable">
      <MemberSignature Language="C#" Value="public static bool KeyAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeyAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Console.KeyAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property KeyAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool KeyAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-420">获取一个值，该值指示按键操作在输入流中是否可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-420">Gets a value indicating whether a key press is available in the input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-421">如果按键操作可用，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-421">
              <see langword="true" /> if a key press is available; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-422">立即; 返回的属性值也就是说，<xref:System.Console.KeyAvailable%2A>属性不会阻止输入，直到按键操作可用。</span><span class="sxs-lookup"><span data-stu-id="1e68b-422">The property value is returned immediately; that is, the <xref:System.Console.KeyAvailable%2A> property does not block input until a key press is available.</span></span>  
  
 <span data-ttu-id="1e68b-423">使用<xref:System.Console.KeyAvailable%2A>属性结合使用并且仅带有<xref:System.Console.ReadKey%2A>方法，不<xref:System.Console.Read%2A>或<xref:System.Console.ReadLine%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-423">Use the <xref:System.Console.KeyAvailable%2A> property in conjunction with only the <xref:System.Console.ReadKey%2A> method, not the <xref:System.Console.Read%2A> or <xref:System.Console.ReadLine%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-424">下面的示例演示如何使用<xref:System.Console.KeyAvailable%2A>要创建运行直到按下某个键的循环属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-424">The following example demonstrates how to use the <xref:System.Console.KeyAvailable%2A> property to create a loop that runs until a key is pressed.</span></span>  
  
 [!code-cpp[console.keyavailable#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.keyavailable/CPP/ka.cpp#1)]
 [!code-csharp[console.keyavailable#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.keyavailable/CS/ka.cs#1)]
 [!code-vb[console.keyavailable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.keyavailable/VB/ka.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-425">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-425">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1e68b-426">标准输入重定向到文件而不是键盘。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-426">Standard input is redirected to a file instead of the keyboard.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowHeight">
      <MemberSignature Language="C#" Value="public static int LargestWindowHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.LargestWindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LargestWindowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-427">根据当前字体和屏幕分辨率获取控制台窗口可能具有的最大行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-427">Gets the largest possible number of console window rows, based on the current font and screen resolution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-428">控制台窗口可能具有的最大高度，以行为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-428">The height of the largest possible console window measured in rows.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowWidth">
      <MemberSignature Language="C#" Value="public static int LargestWindowWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.LargestWindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LargestWindowWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowWidth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-429">根据当前字体和屏幕分辨率获取控制台窗口可能具有的最大列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-429">Gets the largest possible number of console window columns, based on the current font and screen resolution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-430">控制台窗口可能具有的最大宽度，以列为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-430">The width of the largest possible console window measured in columns.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveBufferArea">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-431">将屏幕缓冲区的指定源区域复制到指定的目标区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-431">Copies a specified source area of the screen buffer to a specified destination area.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveBufferArea (sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" />
        <Parameter Name="sourceTop" Type="System.Int32" />
        <Parameter Name="sourceWidth" Type="System.Int32" />
        <Parameter Name="sourceHeight" Type="System.Int32" />
        <Parameter Name="targetLeft" Type="System.Int32" />
        <Parameter Name="targetTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceLeft">
          <span data-ttu-id="1e68b-432">源区域最左边的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-432">The leftmost column of the source area.</span>
          </span>
        </param>
        <param name="sourceTop">
          <span data-ttu-id="1e68b-433">源区域最顶部的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-433">The topmost row of the source area.</span>
          </span>
        </param>
        <param name="sourceWidth">
          <span data-ttu-id="1e68b-434">源区域中列的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-434">The number of columns in the source area.</span>
          </span>
        </param>
        <param name="sourceHeight">
          <span data-ttu-id="1e68b-435">源区域中行的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-435">The number of rows in the source area.</span>
          </span>
        </param>
        <param name="targetLeft">
          <span data-ttu-id="1e68b-436">目标区域最左边的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-436">The leftmost column of the destination area.</span>
          </span>
        </param>
        <param name="targetTop">
          <span data-ttu-id="1e68b-437">目标区域最顶部的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-437">The topmost row of the destination area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-438">将屏幕缓冲区的指定源区域复制到指定的目标区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-438">Copies a specified source area of the screen buffer to a specified destination area.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-439">如果目标和源参数指定位于当前屏幕缓冲区的边界之外的位置，则复制仅适合目标区域的源区域的部分。</span><span class="sxs-lookup"><span data-stu-id="1e68b-439">If the destination and source parameters specify a position located outside the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</span></span> <span data-ttu-id="1e68b-440">也就是说，源区域进行剪裁以适应当前屏幕缓冲区的大小。</span><span class="sxs-lookup"><span data-stu-id="1e68b-440">That is, the source area is clipped to fit the current screen buffer.</span></span>  
  
 <span data-ttu-id="1e68b-441"><xref:System.Console.MoveBufferArea%2A>方法将源区域复制到的目标区域。</span><span class="sxs-lookup"><span data-stu-id="1e68b-441">The <xref:System.Console.MoveBufferArea%2A> method copies the source area to the destination area.</span></span> <span data-ttu-id="1e68b-442">如果目标区域不相交的源区域，用空格使用当前的前景色和背景色填充源区域。</span><span class="sxs-lookup"><span data-stu-id="1e68b-442">If the destination area does not intersect the source area, the source area is filled with blanks using the current foreground and background colors.</span></span> <span data-ttu-id="1e68b-443">否则，将不填充源区域相交的部分。</span><span class="sxs-lookup"><span data-stu-id="1e68b-443">Otherwise, the intersected portion of the source area is not filled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-444">一个或多个参数小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-444">One or more of the parameters is less than zero.</span>
          </span>
          <span data-ttu-id="1e68b-445">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-445">-or-</span>
          </span>
          <span data-ttu-id="1e68b-446">
            <paramref name="sourceLeft" /> 或 <paramref name="targetLeft" /> 大于或等于 <see cref="P:System.Console.BufferWidth" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-446">
              <paramref name="sourceLeft" /> or <paramref name="targetLeft" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
          <span data-ttu-id="1e68b-447">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-447">-or-</span>
          </span>
          <span data-ttu-id="1e68b-448">
            <paramref name="sourceTop" /> 或 <paramref name="targetTop" /> 大于或等于 <see cref="P:System.Console.BufferHeight" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-448">
              <paramref name="sourceTop" /> or <paramref name="targetTop" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
          <span data-ttu-id="1e68b-449">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-449">-or-</span>
          </span>
          <span data-ttu-id="1e68b-450">
            <paramref name="sourceTop" /> + <paramref name="sourceHeight" /> 大于或等于 <see cref="P:System.Console.BufferHeight" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-450">
              <paramref name="sourceTop" /> + <paramref name="sourceHeight" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
          <span data-ttu-id="1e68b-451">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-451">-or-</span>
          </span>
          <span data-ttu-id="1e68b-452">
            <paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> 大于或等于 <see cref="P:System.Console.BufferWidth" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-452">
              <paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-453">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-453">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-454">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-454">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-455">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-455">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-456">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-456">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop, char sourceChar, valuetype System.ConsoleColor sourceForeColor, valuetype System.ConsoleColor sourceBackColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveBufferArea (sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer, sourceChar As Char, sourceForeColor As ConsoleColor, sourceBackColor As ConsoleColor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" />
        <Parameter Name="sourceTop" Type="System.Int32" />
        <Parameter Name="sourceWidth" Type="System.Int32" />
        <Parameter Name="sourceHeight" Type="System.Int32" />
        <Parameter Name="targetLeft" Type="System.Int32" />
        <Parameter Name="targetTop" Type="System.Int32" />
        <Parameter Name="sourceChar" Type="System.Char" />
        <Parameter Name="sourceForeColor" Type="System.ConsoleColor" />
        <Parameter Name="sourceBackColor" Type="System.ConsoleColor" />
      </Parameters>
      <Docs>
        <param name="sourceLeft">
          <span data-ttu-id="1e68b-457">源区域最左边的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-457">The leftmost column of the source area.</span>
          </span>
        </param>
        <param name="sourceTop">
          <span data-ttu-id="1e68b-458">源区域最顶部的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-458">The topmost row of the source area.</span>
          </span>
        </param>
        <param name="sourceWidth">
          <span data-ttu-id="1e68b-459">源区域中列的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-459">The number of columns in the source area.</span>
          </span>
        </param>
        <param name="sourceHeight">
          <span data-ttu-id="1e68b-460">源区域中行的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-460">The number of rows in the source area.</span>
          </span>
        </param>
        <param name="targetLeft">
          <span data-ttu-id="1e68b-461">目标区域最左边的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-461">The leftmost column of the destination area.</span>
          </span>
        </param>
        <param name="targetTop">
          <span data-ttu-id="1e68b-462">目标区域最顶部的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-462">The topmost row of the destination area.</span>
          </span>
        </param>
        <param name="sourceChar">
          <span data-ttu-id="1e68b-463">用于填充源区域的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-463">The character used to fill the source area.</span>
          </span>
        </param>
        <param name="sourceForeColor">
          <span data-ttu-id="1e68b-464">用于填充源区域的前景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-464">The foreground color used to fill the source area.</span>
          </span>
        </param>
        <param name="sourceBackColor">
          <span data-ttu-id="1e68b-465">用于填充源区域的背景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-465">The background color used to fill the source area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-466">将屏幕缓冲区的指定源区域复制到指定的目标区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-466">Copies a specified source area of the screen buffer to a specified destination area.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-467">如果目标和源参数指定的位置位于超出当前屏幕缓冲区的边界，则复制仅适合目标区域的源区域的部分。</span><span class="sxs-lookup"><span data-stu-id="1e68b-467">If the destination and source parameters specify a position located beyond the boundaries of the current screen buffer, only the portion of the source area that fits within the destination area is copied.</span></span> <span data-ttu-id="1e68b-468">也就是说，源区域进行剪裁以适应当前屏幕缓冲区的大小。</span><span class="sxs-lookup"><span data-stu-id="1e68b-468">That is, the source area is clipped to fit the current screen buffer.</span></span>  
  
 <span data-ttu-id="1e68b-469"><xref:System.Console.MoveBufferArea%2A>方法将源区域复制到的目标区域。</span><span class="sxs-lookup"><span data-stu-id="1e68b-469">The <xref:System.Console.MoveBufferArea%2A> method copies the source area to the destination area.</span></span> <span data-ttu-id="1e68b-470">如果目标区域不相交的源区域，使用指定的字符填充源区域`sourceChar`，使用指定的颜色`sourceForeColor`和`sourceBackColor`。</span><span class="sxs-lookup"><span data-stu-id="1e68b-470">If the destination area does not intersect the source area, the source area is filled with the character specified by `sourceChar`, using the colors specified by `sourceForeColor` and `sourceBackColor`.</span></span> <span data-ttu-id="1e68b-471">否则，将不填充源区域相交的部分。</span><span class="sxs-lookup"><span data-stu-id="1e68b-471">Otherwise, the intersected portion of the source area is not filled.</span></span>  
  
 <span data-ttu-id="1e68b-472"><xref:System.Console.MoveBufferArea%2A>方法执行任何操作，如果`sourceWidth`或`sourceHeight`为零。</span><span class="sxs-lookup"><span data-stu-id="1e68b-472">The <xref:System.Console.MoveBufferArea%2A> method performs no operation if `sourceWidth` or `sourceHeight` is zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-473">一个或多个参数小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-473">One or more of the parameters is less than zero.</span>
          </span>
          <span data-ttu-id="1e68b-474">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-474">-or-</span>
          </span>
          <span data-ttu-id="1e68b-475">
            <paramref name="sourceLeft" /> 或 <paramref name="targetLeft" /> 大于或等于 <see cref="P:System.Console.BufferWidth" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-475">
              <paramref name="sourceLeft" /> or <paramref name="targetLeft" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
          <span data-ttu-id="1e68b-476">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-476">-or-</span>
          </span>
          <span data-ttu-id="1e68b-477">
            <paramref name="sourceTop" /> 或 <paramref name="targetTop" /> 大于或等于 <see cref="P:System.Console.BufferHeight" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-477">
              <paramref name="sourceTop" /> or <paramref name="targetTop" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
          <span data-ttu-id="1e68b-478">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-478">-or-</span>
          </span>
          <span data-ttu-id="1e68b-479">
            <paramref name="sourceTop" /> + <paramref name="sourceHeight" /> 大于或等于 <see cref="P:System.Console.BufferHeight" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-479">
              <paramref name="sourceTop" /> + <paramref name="sourceHeight" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
          <span data-ttu-id="1e68b-480">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-480">-or-</span>
          </span>
          <span data-ttu-id="1e68b-481">
            <paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> 大于或等于 <see cref="P:System.Console.BufferWidth" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-481">
              <paramref name="sourceLeft" /> + <paramref name="sourceWidth" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e68b-482">一个或两个颜色参数不是 <see cref="T:System.ConsoleColor" /> 枚举的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-482">One or both of the color parameters is not a member of the <see cref="T:System.ConsoleColor" /> enumeration.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-483">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-483">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-484">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-484">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-485">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-485">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-486">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-486">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="NumberLock">
      <MemberSignature Language="C#" Value="public static bool NumberLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool NumberLock" />
      <MemberSignature Language="DocId" Value="P:System.Console.NumberLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NumberLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool NumberLock { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-487">获取一个值，该值指示 Num Lock 键盘切换键是打开的还是关闭的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-487">Gets a value indicating whether the NUM LOCK keyboard toggle is turned on or turned off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-488">如果 Num Lock 是打开的，则为 <see langword="true" />；如果 Num Lock 是关闭的，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-488">
              <see langword="true" /> if NUM LOCK is turned on; <see langword="false" /> if NUM LOCK is turned off.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardError">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-489">获取标准错误流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-489">Acquires the standard error stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardError" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardError () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardError();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-490">获取标准错误流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-490">Acquires the standard error stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e68b-491">标准错误流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-491">The standard error stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-492">此方法可以用于已由更改后重新获取标准错误流<xref:System.Console.SetError%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-492">This method can be used to reacquire the standard error stream after it has been changed by the <xref:System.Console.SetError%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-493">下面的示例是向控制台显示的一个或多个文本文件的内容的简单文本文件查看器。</span><span class="sxs-lookup"><span data-stu-id="1e68b-493">The following example is a simple text file viewer that displays the contents of one or more text files to the console.</span></span> <span data-ttu-id="1e68b-494">如果没有任何命令行参数，或者如果不存在作为命令行自变量传递的任何文件，该示例将调用<xref:System.Console.SetError%2A>方法来将错误信息重定向到文件中，调用<xref:System.Console.OpenStandardError%2A>过程中重新获取标准错误的方法流，并指示错误的信息已写入到文件。</span><span class="sxs-lookup"><span data-stu-id="1e68b-494">If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the <xref:System.Console.OpenStandardError%2A> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.</span></span>  
  
 [!code-csharp[System.Console.OpenStandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.openstandarderror/cs/viewtextfile.cs#1)]
 [!code-vb[System.Console.OpenStandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.openstandarderror/vb/viewtextfile.vb#1)]  
  
 <span data-ttu-id="1e68b-495">请注意，<xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType>属性设置为`true`之前重新获取错误流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-495">Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property is set to `true` before reacquiring the error stream.</span></span> <span data-ttu-id="1e68b-496">这可确保，输出将立即发送到控制台而不是缓冲。</span><span class="sxs-lookup"><span data-stu-id="1e68b-496">This ensures that output will be sent to the console immediately rather than buffered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardError (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardError(int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bufferSize">
          <span data-ttu-id="1e68b-497">内部流缓冲区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-497">The internal stream buffer size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-498">获取设置为指定缓冲区大小的标准错误流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-498">Acquires the standard error stream, which is set to a specified buffer size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e68b-499">标准错误流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-499">The standard error stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-500">此方法可以用于已由更改后重新获取标准错误流<xref:System.Console.SetError%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-500">This method can be used to reacquire the standard error stream after it has been changed by the <xref:System.Console.SetError%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-501">
            <paramref name="bufferSize" /> 小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-501">
              <paramref name="bufferSize" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardInput">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-502">获取标准输入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-502">Acquires the standard input stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardInput () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardInput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-503">获取标准输入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-503">Acquires the standard input stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e68b-504">标准输入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-504">The standard input stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-505">此方法可以用于已由更改后重新获取标准输入的流<xref:System.Console.SetIn%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-505">This method can be used to reacquire the standard input stream after it has been changed by the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-506">下面的示例演示如何使用`OpenStandardInput`属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-506">The following example illustrates the use of the `OpenStandardInput` property.</span></span>  
  
 [!code-cpp[System.Console.OpenStandartInput#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CPP/decode.cpp#1)]
 [!code-csharp[System.Console.OpenStandartInput#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CS/decode.cs#1)]
 [!code-vb[System.Console.OpenStandartInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.OpenStandartInput/VB/decode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardInput (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardInput(int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bufferSize">
          <span data-ttu-id="1e68b-507">内部流缓冲区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-507">The internal stream buffer size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-508">获取设置为指定缓冲区大小的标准输入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-508">Acquires the standard input stream, which is set to a specified buffer size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e68b-509">标准输入流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-509">The standard input stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-510">此方法可以用于已由更改后重新获取标准输出流<xref:System.Console.SetIn%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-510">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-511">下面的示例演示如何使用`OpenStandardInput`属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-511">The following example illustrates the use of the `OpenStandardInput` property.</span></span>  
  
 [!code-cpp[System.Console.OpenStandartInput#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CPP/decode.cpp#1)]
 [!code-csharp[System.Console.OpenStandartInput#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CS/decode.cs#1)]
 [!code-vb[System.Console.OpenStandartInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.OpenStandartInput/VB/decode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-512">
            <paramref name="bufferSize" /> 小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-512">
              <paramref name="bufferSize" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardOutput">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-513">获取标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-513">Acquires the standard output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardOutput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardOutput () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardOutput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-514">获取标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-514">Acquires the standard output stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e68b-515">标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-515">The standard output stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-516">此方法可以用于已由更改后重新获取标准输出流<xref:System.Console.SetOut%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-516">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetOut%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-517">下面的示例演示 <xref:System.Console.OpenStandardOutput%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-517">The following example illustrates the use of the <xref:System.Console.OpenStandardOutput%2A> method.</span></span> <span data-ttu-id="1e68b-518">它用制表符替换字符串中的四个连续空格字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-518">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="1e68b-519">若要运行它，您必须提供两个命令行自变量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-519">To run it, you must supply two command-line arguments.</span></span> <span data-ttu-id="1e68b-520">第一个是要将标准输入流重定向到的现有文本文件的名称。</span><span class="sxs-lookup"><span data-stu-id="1e68b-520">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="1e68b-521">第二个是要将标准输出流重定向到的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="1e68b-521">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="1e68b-522">此文件不需要存在。</span><span class="sxs-lookup"><span data-stu-id="1e68b-522">This file need not exist.</span></span> <span data-ttu-id="1e68b-523">如果它这么做，其内容将被覆盖。</span><span class="sxs-lookup"><span data-stu-id="1e68b-523">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsOutputRedirected" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardOutput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardOutput (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardOutput(int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bufferSize">
          <span data-ttu-id="1e68b-524">内部流缓冲区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-524">The internal stream buffer size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-525">获取设置为指定缓冲区大小的标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-525">Acquires the standard output stream, which is set to a specified buffer size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e68b-526">标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-526">The standard output stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-527">此方法可以用于已由更改后重新获取标准输出流<xref:System.Console.SetOut%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-527">This method can be used to reacquire the standard output stream after it has been changed by the <xref:System.Console.SetOut%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-528">下面的示例演示 <xref:System.Console.OpenStandardOutput%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-528">The following example illustrates the use of the <xref:System.Console.OpenStandardOutput%2A> method.</span></span> <span data-ttu-id="1e68b-529">它用制表符替换字符串中的四个连续空格字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-529">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="1e68b-530">若要运行它，您必须提供两个命令行自变量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-530">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="1e68b-531">第一个是要将标准输入流重定向到的现有文本文件的名称。</span><span class="sxs-lookup"><span data-stu-id="1e68b-531">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="1e68b-532">第二个是要将标准输出流重定向到的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="1e68b-532">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="1e68b-533">此文件不需要存在。</span><span class="sxs-lookup"><span data-stu-id="1e68b-533">This file need not exist.</span></span> <span data-ttu-id="1e68b-534">如果它这么做，其内容将被覆盖。</span><span class="sxs-lookup"><span data-stu-id="1e68b-534">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-535">
            <paramref name="bufferSize" /> 小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-535">
              <paramref name="bufferSize" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsOutputRedirected" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Out">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Out { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Out" />
      <MemberSignature Language="DocId" Value="P:System.Console.Out" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Out As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextWriter ^ Out { System::IO::TextWriter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-536">获取标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-536">Gets the standard output stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-537">表示标准输出流的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-537">A <see cref="T:System.IO.TextWriter" /> that represents the standard output stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-538">默认情况下，此属性设置为标准输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-538">This property is set to the standard output stream by default.</span></span> <span data-ttu-id="1e68b-539">此属性可以设置为另一个流<xref:System.Console.SetOut%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-539">This property can be set to another stream with the <xref:System.Console.SetOut%2A> method.</span></span>  
  
 <span data-ttu-id="1e68b-540">请注意，调用`Console.Out.WriteLine`方法是等效于调用相应<xref:System.Console.WriteLine%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-540">Note that calls to `Console.Out.WriteLine` methods are equivalent to calls to the corresponding <xref:System.Console.WriteLine%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-541">下面的示例使用<xref:System.Console.Out%2A>属性显示包含到标准输出设备的应用程序的当前目录中的文件的名称的数组。</span><span class="sxs-lookup"><span data-stu-id="1e68b-541">The following example uses the <xref:System.Console.Out%2A> property to display an array containing the names of files in the application's current directory to the standard output device.</span></span> <span data-ttu-id="1e68b-542">然后将标准输出设置为一个名为 Files.txt 文件，并列出了对文件的数组元素。</span><span class="sxs-lookup"><span data-stu-id="1e68b-542">It then sets the standard output to a file named Files.txt and lists the array elements to the file.</span></span> <span data-ttu-id="1e68b-543">最后，它将输出设置写入标准输出流，也不会显示数组元素到标准输出设备。</span><span class="sxs-lookup"><span data-stu-id="1e68b-543">Finally, it sets the output to the standard output stream and again displays the array elements to the standard output device.</span></span>  
  
 [!code-csharp[System.Console.Out#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.out/cs/out1.cs#1)]
 [!code-vb[System.Console.Out#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.out/vb/out1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.In" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OutputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding OutputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding OutputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Console.OutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property OutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ OutputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-544">获取或设置控制台用于写入输出的编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-544">Gets or sets the encoding the console uses to write output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-545">用于写入控制台输出的编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-545">The encoding used to write console output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-546">控制台使用的输出编码将转换控制台显示的相应字符的应用程序写入的字符转换。</span><span class="sxs-lookup"><span data-stu-id="1e68b-546">The console uses the output encoding to translate characters written by an application into corresponding console display characters.</span></span> <span data-ttu-id="1e68b-547">该控制台使用的默认代码页由系统区域设置确定。</span><span class="sxs-lookup"><span data-stu-id="1e68b-547">The default code page that the console uses is determined by the system locale.</span></span>  
  
 <span data-ttu-id="1e68b-548">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，属性 get 操作可以返回而不是控制台的当前输出编码的缓存的值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-548">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], a property get operation may return a cached value instead of the console's current output encoding.</span></span> <span data-ttu-id="1e68b-549">发生这种情况的值<xref:System.Console.OutputEncoding%2A>以外的分配给其他一些方式修改属性<xref:System.Console.OutputEncoding%2A>属性，例如在调用 Windows`SetConsoleOutputCP`函数。</span><span class="sxs-lookup"><span data-stu-id="1e68b-549">This can occur if the value of the <xref:System.Console.OutputEncoding%2A> property is modified by some means other than an assignment to the <xref:System.Console.OutputEncoding%2A> property, such as calling the Windows `SetConsoleOutputCP` function.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-550">集运算中的属性值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-550">The property value in a set operation is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-551">执行此操作期间出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-551">An error occurred during the execution of this operation.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-552">你的应用程序没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-552">Your application does not have permission to perform this operation.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-553">用于读取和写入顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-553">for reading and writing to top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-554">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-554">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="1e68b-555">Unicode 编码，<see cref="T:System.Console" />类支持 utf-8 编码与<see cref="T:System.Text.UTF8Encoding" />类，然后，使用启动[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，它支持使用编码的 utf-16<see cref="T:System.Text.UnicodeEncoding" />类。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-555">Of the Unicode encodings, the <see cref="T:System.Console" /> class supports UTF-8 encoding with the <see cref="T:System.Text.UTF8Encoding" /> class and, starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it supports UTF-16 encoding with the <see cref="T:System.Text.UnicodeEncoding" /> class.</span>
            </span>
            <span data-ttu-id="1e68b-556">使用 utf-32 编码<see cref="T:System.Text.UTF32Encoding" />不支持类。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-556">UTF-32 encoding with the <see cref="T:System.Text.UTF32Encoding" /> class is not supported.</span>
            </span>
            <span data-ttu-id="1e68b-557">正在尝试设置的输出编码 utf-32 引发<see cref="T:System.IO.IOException" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-557">Attempting to set the output encoding to UTF-32 throws an <see cref="T:System.IO.IOException" />.</span>
            </span>
            <span data-ttu-id="1e68b-558">请注意，已成功向控制台显示 Unicode 字符需要以下：</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-558">Note that successfully displaying Unicode characters to the console requires the following:</span>
            </span>  
  
-   <span data-ttu-id="1e68b-559">控制台必须使用 TrueType 字体，例如 Lucida Console 或 Consolas，显示字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-559">The console must use a TrueType font, such as Lucida Console or Consolas, to display characters.</span></span>  
  
-   <span data-ttu-id="1e68b-560">特定的标志符号或要显示的标志符号，则必须定义控制台使用的字体。</span><span class="sxs-lookup"><span data-stu-id="1e68b-560">A font used by the console must define the particular glyph or glyphs to be displayed.</span></span><span data-ttu-id="1e68b-561">控制台可以利用链接以显示从链接字体的标志符号，如果基字体不包含该标志符号的定义的字体。</span><span class="sxs-lookup"><span data-stu-id="1e68b-561">The console can take advantage of font linking to display glyphs from linked fonts if the base font does not contain a definition for that glyph.</span></span><span data-ttu-id="1e68b-562">有关 Unicode 支持的详细信息编码由控制台中，请参阅"Unicode 支持的控制台"中部分<see cref="T:System.Console" />类。</span><span class="sxs-lookup"><span data-stu-id="1e68b-562">For more information about support for Unicode encoding by the console, see the "Unicode Support for the Console" section in the <see cref="T:System.Console" /> class.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Read" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-563">从标准输入流读取下一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-563">Reads the next character from the standard input stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e68b-564">输入流中的下一个字符；如果当前没有更多的字符可供读取，则为负一 (-1)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-564">The next character from the input stream, or negative one (-1) if there are currently no more characters to be read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-565"><xref:System.Console.Read%2A>方法阻止其返回值时键入输入的字符; 它终止时按<xref:System.ConsoleKey.Enter>密钥。</span><span class="sxs-lookup"><span data-stu-id="1e68b-565">The <xref:System.Console.Read%2A> method blocks its return while you type input characters; it terminates when you press the <xref:System.ConsoleKey.Enter> key.</span></span> <span data-ttu-id="1e68b-566">按 Enter 将依赖于平台的行终止序列追加到你的输入 （例如，Windows 追加回车换行符序列）。</span><span class="sxs-lookup"><span data-stu-id="1e68b-566">Pressing Enter appends a platform-dependent line termination sequence to your input (for example, Windows appends a carriage return-linefeed sequence).</span></span> <span data-ttu-id="1e68b-567">后续调用<xref:System.Console.Read%2A>方法一次检索你输入的一个字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-567">Subsequent calls to the <xref:System.Console.Read%2A> method retrieve your input one character at a time.</span></span> <span data-ttu-id="1e68b-568">检索最后一个字符后，<xref:System.Console.Read%2A>阻止其返回再次并重复上述循环。</span><span class="sxs-lookup"><span data-stu-id="1e68b-568">After the final character is retrieved, <xref:System.Console.Read%2A> blocks its return again and the cycle repeats.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1e68b-569"><xref:System.Console.ReadLine%2A>方法，或<xref:System.Console.KeyAvailable%2A>属性和<xref:System.Console.ReadKey%2A>方法要优于使用<xref:System.Console.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-569">The <xref:System.Console.ReadLine%2A> method, or the <xref:System.Console.KeyAvailable%2A> property and <xref:System.Console.ReadKey%2A> method are preferable to using the <xref:System.Console.Read%2A> method.</span></span>  
  
 <span data-ttu-id="1e68b-570">请注意该方法不会不返回-1，除非你执行以下操作之一：</span><span class="sxs-lookup"><span data-stu-id="1e68b-570">Note that the method does not return -1 unless you perform one of the following actions:</span></span>  
  
-   <span data-ttu-id="1e68b-571">同时按<xref:System.ConsoleModifiers.Control>修改键和<xref:System.ConsoleKey.Z>控制台键 (Ctrl + Z)，指示文件尾条件。</span><span class="sxs-lookup"><span data-stu-id="1e68b-571">Simultaneously press the <xref:System.ConsoleModifiers.Control> modifier key and <xref:System.ConsoleKey.Z> console key (Ctrl+Z), which signals the end-of-file condition.</span></span>  
  
-   <span data-ttu-id="1e68b-572">按等效键，用于通知的文件尾条件，例如在 Windows 中的 F6 函数密钥。</span><span class="sxs-lookup"><span data-stu-id="1e68b-572">Press an equivalent key that signals the end-of-file condition, such as the F6 function key in Windows.</span></span>  
  
-   <span data-ttu-id="1e68b-573">将输入的流重定向到的源，如的文本文件，包含实际的文件尾字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-573">Redirect the input stream to a source, such as a text file, that has an actual end-of-file character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-574">下面的示例演示<xref:System.Console.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-574">The following example demonstrates the <xref:System.Console.Read%2A> method.</span></span>  
  
 [!code-cpp[console.read#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.read/CPP/read.cpp#1)]
 [!code-csharp[console.read#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.read/CS/read.cs#1)]
 [!code-vb[console.read#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.read/VB/read.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-575">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-575">An I/O error occurred.</span>
          </span>
        </exception>
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadKey">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-576">获取用户按下的下一个字符或功能键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-576">Obtains the next character or function key pressed by the user.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadKey () As ConsoleKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ConsoleKeyInfo ReadKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-577">获取用户按下的下一个字符或功能键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-577">Obtains the next character or function key pressed by the user.</span>
          </span>
          <span data-ttu-id="1e68b-578">按下的键显示在控制台窗口中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-578">The pressed key is displayed in the console window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e68b-579">一个对象，描述 <see cref="T:System.ConsoleKey" /> 常数和对应于按下的控制台键的 Unicode 字符（如果存在这样的字符）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-579">An object that describes the <see cref="T:System.ConsoleKey" /> constant and Unicode character, if any, that correspond to the pressed console key.</span>
          </span>
          <span data-ttu-id="1e68b-580">
            <see cref="T:System.ConsoleKeyInfo" /> 对象还在 <see cref="T:System.ConsoleModifiers" /> 值的按位组合中描述是否在按下控制台键的同时按下了一个或多个 Shift、Alt 和 Ctrl 修改键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-580">The <see cref="T:System.ConsoleKeyInfo" /> object also describes, in a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-581"><xref:System.Console.ReadKey%2A>方法，即等待线程颁发上的块<xref:System.Console.ReadKey%2A>方法，直到按下字符或功能键。</span><span class="sxs-lookup"><span data-stu-id="1e68b-581">The <xref:System.Console.ReadKey%2A> method waits, that is, blocks on the thread issuing the <xref:System.Console.ReadKey%2A> method, until a character or function key is pressed.</span></span> <span data-ttu-id="1e68b-582">字符或功能键可以为同一个或多个 Alt、 Ctrl 或 shift 键修改键一起按下组合。</span><span class="sxs-lookup"><span data-stu-id="1e68b-582">A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</span></span> <span data-ttu-id="1e68b-583">但是，修改键按下不会导致<xref:System.Console.ReadKey%2A>方法以返回。</span><span class="sxs-lookup"><span data-stu-id="1e68b-583">However, pressing a modifier key by itself will not cause the <xref:System.Console.ReadKey%2A> method to return.</span></span>  
  
 <span data-ttu-id="1e68b-584">具体取决于你的应用程序，你可能想要使用<xref:System.Console.ReadKey%2A>方法结合<xref:System.Console.KeyAvailable%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-584">Depending on your application, you might want to use the <xref:System.Console.ReadKey%2A> method in conjunction with the <xref:System.Console.KeyAvailable%2A> property.</span></span>  
  
 <span data-ttu-id="1e68b-585"><xref:System.Console.ReadKey%2A>即使标准输入重定向到的文件，方法将读取从键盘<xref:System.Console.SetIn%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-585">The <xref:System.Console.ReadKey%2A> method reads from the keyboard even if the standard input is redirected to a file with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-586">最常见的一个用途的<xref:System.Console.ReadKey>方法是停止程序执行，直到用户按下某个键和应用程序终止或显示其他窗口的信息。</span><span class="sxs-lookup"><span data-stu-id="1e68b-586">One of the most common uses of the <xref:System.Console.ReadKey> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</span></span> <span data-ttu-id="1e68b-587">下面的示例使用<xref:System.Console.ReadKey>方法以等待用户按下 Enter 键，然后终止应用程序。</span><span class="sxs-lookup"><span data-stu-id="1e68b-587">The following example uses the  <xref:System.Console.ReadKey> method to wait for the user to press the Enter key before terminating the app.</span></span>  
  
 [!code-csharp[System.Console.ReadKey#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Console.ReadKey/cs/ReadKey1.cs#1)]
 [!code-vb[System.Console.ReadKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Console.ReadKey/vb/ReadKey1.vb#1)]  
  
 <span data-ttu-id="1e68b-588">请注意，此重载<xref:System.Console.ReadKey%2A>方法默认情况下的将回显到控制台用户按下任何可显示密钥。</span><span class="sxs-lookup"><span data-stu-id="1e68b-588">Note that this overload of the <xref:System.Console.ReadKey%2A> method by default echoes any displayable keys that the user presses to the console.</span></span> <span data-ttu-id="1e68b-589">若要取消它们，调用<xref:System.Console.ReadKey%2A>方法替换`intercept`参数`true`。</span><span class="sxs-lookup"><span data-stu-id="1e68b-589">To suppress them, call the  <xref:System.Console.ReadKey%2A> method with an `intercept` argument of `true`.</span></span>  
  
 <span data-ttu-id="1e68b-590">下面的示例使用<xref:System.Console.ReadKey>方法以显示有关哪个密钥用户按下的信息...</span><span class="sxs-lookup"><span data-stu-id="1e68b-590">The following example uses the <xref:System.Console.ReadKey> method to display information about which key the user pressed..</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1e68b-591">从控制台以外的某个流重定向 <see cref="P:System.Console.In" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-591">The <see cref="P:System.Console.In" /> property is redirected from some stream other than the console.</span>
          </span>
        </exception>
        <altmember cref="T:System.ConsoleKey" />
        <altmember cref="P:System.Console.KeyAvailable" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey (bool intercept);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey(bool intercept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadKey(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadKey (intercept As Boolean) As ConsoleKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ConsoleKeyInfo ReadKey(bool intercept);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intercept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="intercept">
          <span data-ttu-id="1e68b-592">确定是否在控制台窗口中显示按下的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-592">Determines whether to display the pressed key in the console window.</span>
          </span>
          <span data-ttu-id="1e68b-593">如果为 <see langword="true" />，则不显示按下的键；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-593">
              <see langword="true" /> to not display the pressed key; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-594">获取用户按下的下一个字符或功能键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-594">Obtains the next character or function key pressed by the user.</span>
          </span>
          <span data-ttu-id="1e68b-595">按下的键可以选择显示在控制台窗口中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-595">The pressed key is optionally displayed in the console window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e68b-596">一个对象，描述 <see cref="T:System.ConsoleKey" /> 常数和对应于按下的控制台键的 Unicode 字符（如果存在这样的字符）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-596">An object that describes the <see cref="T:System.ConsoleKey" /> constant and Unicode character, if any, that correspond to the pressed console key.</span>
          </span>
          <span data-ttu-id="1e68b-597">
            <see cref="T:System.ConsoleKeyInfo" /> 对象还在 <see cref="T:System.ConsoleModifiers" /> 值的按位组合中描述是否在按下控制台键的同时按下了一个或多个 Shift、Alt 和 Ctrl 修改键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-597">The <see cref="T:System.ConsoleKeyInfo" /> object also describes, in a bitwise combination of <see cref="T:System.ConsoleModifiers" /> values, whether one or more Shift, Alt, or Ctrl modifier keys was pressed simultaneously with the console key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-598"><xref:System.Console.ReadKey%2A>方法，即等待线程颁发上的块<xref:System.Console.ReadKey%2A>方法，直到按下字符或功能键。</span><span class="sxs-lookup"><span data-stu-id="1e68b-598">The <xref:System.Console.ReadKey%2A> method waits, that is, blocks on the thread issuing the <xref:System.Console.ReadKey%2A> method, until a character or function key is pressed.</span></span> <span data-ttu-id="1e68b-599">字符或功能键可以为同一个或多个 Alt、 Ctrl 或 shift 键修改键一起按下组合。</span><span class="sxs-lookup"><span data-stu-id="1e68b-599">A character or function key can be pressed in combination with one or more Alt, Ctrl, or Shift modifier keys.</span></span> <span data-ttu-id="1e68b-600">但是，修改键按下不会导致<xref:System.Console.ReadKey%2A>方法以返回。</span><span class="sxs-lookup"><span data-stu-id="1e68b-600">However, pressing a modifier key by itself will not cause the <xref:System.Console.ReadKey%2A> method to return.</span></span>  
  
 <span data-ttu-id="1e68b-601">如果`intercept`参数是`true`，截获按下的键，并且不显示在控制台窗口中; 否则为将显示按下的键。</span><span class="sxs-lookup"><span data-stu-id="1e68b-601">If the `intercept` parameter is `true`, the pressed key is intercepted and not displayed in the console window; otherwise, the pressed key is displayed.</span></span>  
  
 <span data-ttu-id="1e68b-602">具体取决于你的应用程序，你可能想要使用<xref:System.Console.ReadKey%2A>方法结合<xref:System.Console.KeyAvailable%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-602">Depending on your application, you might want to use the <xref:System.Console.ReadKey%2A> method in conjunction with the <xref:System.Console.KeyAvailable%2A> property.</span></span>  
  
 <span data-ttu-id="1e68b-603"><xref:System.Console.ReadKey%2A>即使标准输入重定向到的文件，方法将读取从键盘<xref:System.Console.SetIn%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-603">The <xref:System.Console.ReadKey%2A> method reads from the keyboard even if the standard input is redirected to a file with the <xref:System.Console.SetIn%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-604">最常见的一个用途的<xref:System.Console.ReadKey%2A>方法是停止程序执行，直到用户按下某个键和应用程序终止或显示其他窗口的信息。</span><span class="sxs-lookup"><span data-stu-id="1e68b-604">One of the most common uses of the <xref:System.Console.ReadKey%2A> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information.</span></span> <span data-ttu-id="1e68b-605">下面的示例使用<xref:System.Console.ReadKey%28System.Boolean%29>方法以等待用户按下 Enter 键，然后终止应用程序。</span><span class="sxs-lookup"><span data-stu-id="1e68b-605">The following example uses the  <xref:System.Console.ReadKey%28System.Boolean%29> method to wait for the user to press the Enter key before terminating the app.</span></span> <span data-ttu-id="1e68b-606">请注意，是否用户按任何其他键时，它不回显到控制台。</span><span class="sxs-lookup"><span data-stu-id="1e68b-606">Note that, if the user presses any other key, it is not echoed to the console.</span></span>  
  
 [!code-csharp[System.Console.ReadKey#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Console.ReadKey/cs/ReadKey2.cs#2)]
 [!code-vb[System.Console.ReadKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Console.ReadKey/vb/ReadKey2.vb#2)]  
  
 <span data-ttu-id="1e68b-607">下面的示例使用<xref:System.Console.ReadKey%28System.Boolean%29>方法以显示有关按下用户，而无需回显到控制台该注册表项的键的信息。</span><span class="sxs-lookup"><span data-stu-id="1e68b-607">The following example uses the <xref:System.Console.ReadKey%28System.Boolean%29> method to display information about the key pressed by a user without echoing that key to the console.</span></span>  
  
 [!code-cpp[console.readkey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey2/CPP/rkbool.cpp#1)]
 [!code-csharp[console.readkey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey2/CS/rkbool.cs#1)]
 [!code-vb[console.readkey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey2/VB/rkbool.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1e68b-608">从控制台以外的某个流重定向 <see cref="P:System.Console.In" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-608">The <see cref="P:System.Console.In" /> property is redirected from some stream other than the console.</span>
          </span>
        </exception>
        <altmember cref="T:System.ConsoleKey" />
        <altmember cref="P:System.Console.KeyAvailable" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public static string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReadLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-609">从标准输入流读取下一行字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-609">Reads the next line of characters from the standard input stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e68b-610">输入流中的下一行字符；如果没有更多的可用行，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-610">The next line of characters from the input stream, or <see langword="null" /> if no more lines are available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-611"><xref:System.Console.ReadLine%2A>方法从标准输入流中读取一行。</span><span class="sxs-lookup"><span data-stu-id="1e68b-611">The <xref:System.Console.ReadLine%2A> method reads a line from the standard input stream.</span></span> <span data-ttu-id="1e68b-612">（有关行的定义，请参阅段落后下面的列表。）这表示：</span><span class="sxs-lookup"><span data-stu-id="1e68b-612">(For the definition of a line, see the paragraph after the following list.) This means that:</span></span>  
  
-   <span data-ttu-id="1e68b-613">标准输入的设备是否键盘，<xref:System.Console.ReadLine%2A>方法阻塞，直到用户按可实现**Enter**密钥。</span><span class="sxs-lookup"><span data-stu-id="1e68b-613">If the standard input device is the keyboard, the <xref:System.Console.ReadLine%2A> method blocks until the user presses the **Enter** key.</span></span>  
  
     <span data-ttu-id="1e68b-614">最常见的一个用途的<xref:System.Console.ReadLine%2A>方法是暂停程序执行之前清除控制台并显示新信息，或者提示用户按下 Enter 键，然后终止应用程序。</span><span class="sxs-lookup"><span data-stu-id="1e68b-614">One of the most common uses of the <xref:System.Console.ReadLine%2A> method is to pause program execution before clearing the console and displaying new information to it, or to prompt the user to press the Enter key before terminating the application.</span></span> <span data-ttu-id="1e68b-615">下面的示例阐释了这一点。</span><span class="sxs-lookup"><span data-stu-id="1e68b-615">The following example illustrates this.</span></span>  
  
     [!code-cpp[System.Console.ReadLine#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.ReadLine/cpp/ReadLineSimple.cpp#6)]
     [!code-csharp[System.Console.ReadLine#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLineSimple.cs#6)]
     [!code-vb[System.Console.ReadLine#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLineSimple.vb#6)]  
  
-   <span data-ttu-id="1e68b-616">标准输入重定向到一个文件，如果<xref:System.Console.ReadLine%2A>方法从文件中读取一行文本。</span><span class="sxs-lookup"><span data-stu-id="1e68b-616">If standard input is redirected to a file, the <xref:System.Console.ReadLine%2A> method reads a line of text from a file.</span></span> <span data-ttu-id="1e68b-617">例如，下面是一个名为 ReadLine1.txt 文本文件：</span><span class="sxs-lookup"><span data-stu-id="1e68b-617">For example, the following is a text file named ReadLine1.txt:</span></span>  
  
    ```  
  
    This is the first line.  
    This is the second line.  
    This is the third line.  
    This is the fourth line.  
  
    ```  
  
     <span data-ttu-id="1e68b-618">下面的示例使用<xref:System.Console.ReadLine%2A>方法来读取从文件重定向的输入。</span><span class="sxs-lookup"><span data-stu-id="1e68b-618">The following example uses the <xref:System.Console.ReadLine%2A> method to read input that is redirected from a file.</span></span> <span data-ttu-id="1e68b-619">读取的操作终止时该方法返回`null`，这指示没有线仍要读取。</span><span class="sxs-lookup"><span data-stu-id="1e68b-619">The read operation terminates when the  method returns `null`, which indicates that no lines remain to be read.</span></span>  
  
     [!code-csharp[System.Console.ReadLine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLine3.cs#3)]
     [!code-vb[System.Console.ReadLine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLine3.vb#3)]  
  
     <span data-ttu-id="1e68b-620">后编译到可执行文件的命名 ReadLine1.exe 示例，你可以运行使用从命令行语法</span><span class="sxs-lookup"><span data-stu-id="1e68b-620">After compiling the example to an executable named ReadLine1.exe, you can run it from the command line with the syntax</span></span>  
  
    ```  
    ReadLine1 < ReadLine1.txt  
    ```  
  
     <span data-ttu-id="1e68b-621">读取文件的内容并将它们显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="1e68b-621">to read the contents of the file and display them to the console.</span></span>  
  
 <span data-ttu-id="1e68b-622">将行定义为字符后跟回车符 (十六进制 0x000d)、 换行符 (十六进制 0x000a) 或值的序列<xref:System.Environment.NewLine%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-622">A line is defined as a sequence of characters followed by a carriage return (hexadecimal 0x000d), a line feed (hexadecimal 0x000a), or the value of the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="1e68b-623">返回的字符串不包含的终止字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-623">The returned string does not contain the terminating character(s).</span></span> <span data-ttu-id="1e68b-624">默认情况下，该方法读取输入 256 个字符输入缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="1e68b-624">By default, the method reads input from a 256-character input buffer.</span></span> <span data-ttu-id="1e68b-625">因为这包括<xref:System.Environment.NewLine%2A?displayProperty=nameWithType>字符，该方法可以读取包含超过 254 个字符的行。</span><span class="sxs-lookup"><span data-stu-id="1e68b-625">Because this includes the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> character(s), the method can read lines that contain up to 254 characters.</span></span> <span data-ttu-id="1e68b-626">若要读取较长的行，调用<xref:System.Console.OpenStandardInput%28System.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-626">To read longer lines, call the <xref:System.Console.OpenStandardInput%28System.Int32%29> method.</span></span>  
  
 <span data-ttu-id="1e68b-627"><xref:System.Console.ReadLine%2A>方法以同步方式执行。</span><span class="sxs-lookup"><span data-stu-id="1e68b-627">The <xref:System.Console.ReadLine%2A> method executes synchronously.</span></span> <span data-ttu-id="1e68b-628">即，被阻止，直至读取行或按下 Ctrl + Z 键盘组合。</span><span class="sxs-lookup"><span data-stu-id="1e68b-628">That is, it blocks until a line is read or the Ctrl+Z keyboard combination is pressed.</span></span> <span data-ttu-id="1e68b-629"><xref:System.Console.In%2A>属性返回<xref:System.IO.TextReader>对象，它表示标准输入的流并具有这两个同步<xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType>方法和异步<xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-629">The <xref:System.Console.In%2A> property returns a <xref:System.IO.TextReader> object that represents the standard input stream and that has both a synchronous <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method and an asynchronous <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1e68b-630">但是，当用作控制台的标准输入流，<xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>同步而不是以异步方式执行，并返回`Task<String>`仅完成读取的操作后。</span><span class="sxs-lookup"><span data-stu-id="1e68b-630">However, when used as the console's standard input stream, the <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> executes synchronously rather than asynchronously and returns a `Task<String>` only after the read operation has completed.</span></span>  
  
 <span data-ttu-id="1e68b-631">如果此方法将引发<xref:System.OutOfMemoryException>异常，而在基础读取器的位置<xref:System.IO.Stream>对象高级的字符的方法是可以读取，但已读入内部的字符数<xref:System.Console.ReadLine%2A>缓冲区是丢弃。</span><span class="sxs-lookup"><span data-stu-id="1e68b-631">If this method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.Console.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="1e68b-632">由于不能更改流中读取器的位置，因此已读取的字符是不可恢复，并可以访问仅通过重新初始化<xref:System.IO.TextReader>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-632">Since the position of the reader in the stream cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="1e68b-633">如果流中的初始位置是未知或流不支持查找，基础<xref:System.IO.Stream>还需要重新初始化。</span><span class="sxs-lookup"><span data-stu-id="1e68b-633">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span> <span data-ttu-id="1e68b-634">若要避免这种情况并生成可靠的代码，应使用<xref:System.Console.KeyAvailable%2A>属性和<xref:System.Console.ReadKey%2A>只读方法和应用商店中预先分配的缓冲区的字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-634">To avoid such a situation and to produce robust code, you should use the <xref:System.Console.KeyAvailable%2A> property and <xref:System.Console.ReadKey%2A> method and store the read characters in a pre-allocated buffer.</span></span>  
  
 <span data-ttu-id="1e68b-635">如果该方法是从控制台读取输入时按 Ctrl + Z 字符，该方法返回`null`。</span><span class="sxs-lookup"><span data-stu-id="1e68b-635">If the Ctrl+Z character is pressed when the method is reading input from the console, the method returns `null`.</span></span> <span data-ttu-id="1e68b-636">这使用户以防止进一步的键盘输入时<xref:System.Console.ReadLine%2A>在循环中调用方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-636">This enables the user to prevent further keyboard input when the <xref:System.Console.ReadLine%2A> method is called in a loop.</span></span> <span data-ttu-id="1e68b-637">下面的示例阐释了这种情况。</span><span class="sxs-lookup"><span data-stu-id="1e68b-637">The following example illustrates this scenario.</span></span>  
  
 [!code-cpp[System.Console.ReadLine#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.ReadLine/cpp/readline2.cpp#1)]
 [!code-csharp[System.Console.ReadLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLine2.cs#1)]
 [!code-vb[System.Console.ReadLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLine2.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-638">下面的示例要求两个命令行自变量： 的现有文本文件的名称和要将输出写入到的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="1e68b-638">The following example requires two command line arguments: the name of an existing text file, and the name of a file to write the output to.</span></span> <span data-ttu-id="1e68b-639">打开现有的文本文件，并将该文件从键盘的标准输入重定向。</span><span class="sxs-lookup"><span data-stu-id="1e68b-639">It opens the existing text file and redirects the standard input from the keyboard to that file.</span></span> <span data-ttu-id="1e68b-640">它还将从控制台到输出文件的标准输出重定向。</span><span class="sxs-lookup"><span data-stu-id="1e68b-640">It also redirects the standard output from the console to the output file.</span></span> <span data-ttu-id="1e68b-641">然后，它使用<xref:System.Console.ReadLine%2A?displayProperty=nameWithType>方法来读取在文件中，每个行，每个序列的四个空格替换制表符，并使用<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法来将结果写入到输出文件。</span><span class="sxs-lookup"><span data-stu-id="1e68b-641">It then uses the <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> method to read each line in the file, replaces every sequence of four spaces with a tab character, and uses the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method to write the result to the output file.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-642">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-642">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="1e68b-643">没有足够的内存来为返回的字符串分配缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-643">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-644">下一行中的字符的字符数大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-644">The number of characters in the next line of characters is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="ResetColor">
      <MemberSignature Language="C#" Value="public static void ResetColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ResetColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetColor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-645">将控制台的前景色和背景色设置为默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-645">Sets the foreground and background console colors to their defaults.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-646">前景色和背景颜色将还原为当前进程开始时存在的颜色。</span><span class="sxs-lookup"><span data-stu-id="1e68b-646">The foreground and background colors are restored to the colors that existed when the current process began.</span></span> <span data-ttu-id="1e68b-647">有关详细信息，请参阅<xref:System.Console.ForegroundColor%2A>和<xref:System.Console.BackgroundColor%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-647">For more information, see the <xref:System.Console.ForegroundColor%2A> and <xref:System.Console.BackgroundColor%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-648">下面的示例将保存的值<xref:System.ConsoleColor>枚举到一个数组，并将存储的当前值<xref:System.Console.BackgroundColor%2A>和<xref:System.Console.ForegroundColor%2A>到变量的属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-648">The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables.</span></span> <span data-ttu-id="1e68b-649">然后前景色更改为在每个颜色<xref:System.ConsoleColor>枚举只不过为颜色匹配当前的背景中，并且它的背景色更改为在每个颜色<xref:System.ConsoleColor>与匹配的颜色除枚举当前前景色。</span><span class="sxs-lookup"><span data-stu-id="1e68b-649">It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground.</span></span> <span data-ttu-id="1e68b-650">（如果相同的背景色的前景色，文本不是可见。）最后，它调用<xref:System.Console.ResetColor%2A>方法还原原始的控制台颜色。</span><span class="sxs-lookup"><span data-stu-id="1e68b-650">(If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.</span></span>  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-651">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-651">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-652">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-652">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-653">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-653">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-654">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-654">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetBufferSize">
      <MemberSignature Language="C#" Value="public static void SetBufferSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBufferSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetBufferSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetBufferSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetBufferSize(int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="1e68b-655">缓冲区的宽度，以列为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-655">The width of the buffer area measured in columns.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="1e68b-656">缓冲区的高度，以行为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-656">The height of the buffer area measured in rows.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-657">将屏幕缓冲区的高度和宽度设置为指定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-657">Sets the height and width of the screen buffer area to the specified values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e68b-658">下面的示例演示<xref:System.Console.WindowLeft%2A>， <xref:System.Console.WindowTop%2A>， <xref:System.Console.WindowWidth%2A>， <xref:System.Console.WindowHeight%2A>， <xref:System.Console.BufferWidth%2A>， <xref:System.Console.BufferHeight%2A>，和<xref:System.Console.CursorVisible%2A>属性; 与<xref:System.Console.SetWindowPosition%2A>， <xref:System.Console.SetBufferSize%2A>，和<xref:System.Console.ReadKey%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-658">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="1e68b-659">该示例基于屏幕缓冲区的宽度屏幕缓冲区中绘制网格模式。</span><span class="sxs-lookup"><span data-stu-id="1e68b-659">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="1e68b-660">然后该示例将移动到的向上箭头，按下的向下箭头、 向左键或向右箭头控制台键的响应中的控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="1e68b-660">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="1e68b-661">网格模式有助于你查看控制台窗口相对于屏幕缓冲区的移动。</span><span class="sxs-lookup"><span data-stu-id="1e68b-661">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-662">
            <paramref name="height" /> 或 <paramref name="width" /> 小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-662">
              <paramref name="height" /> or <paramref name="width" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="1e68b-663">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-663">-or-</span>
          </span>
          <span data-ttu-id="1e68b-664">
            <paramref name="height" /> 或 <paramref name="width" /> 大于或等于 <see cref="F:System.Int16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-664">
              <paramref name="height" /> or <paramref name="width" /> is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="1e68b-665">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-665">-or-</span>
          </span>
          <span data-ttu-id="1e68b-666">
            <paramref name="width" /> 小于 <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-666">
              <paramref name="width" /> is less than <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />.</span>
          </span>
          <span data-ttu-id="1e68b-667">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-667">-or-</span>
          </span>
          <span data-ttu-id="1e68b-668">
            <paramref name="height" /> 小于 <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-668">
              <paramref name="height" /> is less than <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-669">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-669">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-670">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-670">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-671">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-671">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-672">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-672">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public static void SetCursorPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCursorPosition(int32 left, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetCursorPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCursorPosition (left As Integer, top As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCursorPosition(int left, int top);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1e68b-673">光标的列位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-673">The column position of the cursor.</span>
          </span>
          <span data-ttu-id="1e68b-674">将从 0 开始从左到右对列进行编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-674">Columns are numbered from left to right starting at 0.</span>
          </span>
        </param>
        <param name="top">
          <span data-ttu-id="1e68b-675">光标的行位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-675">The row position of the cursor.</span>
          </span>
          <span data-ttu-id="1e68b-676">从上到下，从 0 开始为行编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-676">Rows are numbered from top to bottom starting at 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-677">设置光标位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-677">Sets the position of the cursor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-678">使用<xref:System.Console.SetCursorPosition%2A>方法，以指定在控制台窗口中下一步的写入操作即将开始。</span><span class="sxs-lookup"><span data-stu-id="1e68b-678">Use the <xref:System.Console.SetCursorPosition%2A> method to specify where the next write operation in the console window is to begin.</span></span> <span data-ttu-id="1e68b-679">如果指定的光标的位置是在控制台窗口是当前可见区域之外，则窗口原点将自动更改以使光标可见。</span><span class="sxs-lookup"><span data-stu-id="1e68b-679">If the specified cursor position is outside the area that is currently visible in the console window, the window origin changes automatically to make the cursor visible.</span></span>  
  
 <span data-ttu-id="1e68b-680">光标自动移动到每次一个字符写入到控制台窗口的下一个字符位置。</span><span class="sxs-lookup"><span data-stu-id="1e68b-680">The cursor automatically moves to the next character position each time a character is written to the console window.</span></span> <span data-ttu-id="1e68b-681">如果光标位于控制台窗口的底部右侧的字符位置下, 一个写入操作将导致控制台窗口滚动，以使光标保持可见。</span><span class="sxs-lookup"><span data-stu-id="1e68b-681">If the cursor is at the bottom right character position of the console window, the next write operation causes the console window to scroll so the cursor remains visible.</span></span> <span data-ttu-id="1e68b-682">如果你想要而不会导致控制台窗口中，以向下滚动，请使用将字符写入底部右侧的字符位置<xref:System.Console.MoveBufferArea%2A>方法将一个字符移到该位置。</span><span class="sxs-lookup"><span data-stu-id="1e68b-682">If you want to write a character to the bottom right character position without causing the console window to scroll, use the <xref:System.Console.MoveBufferArea%2A> method to move a character to that position.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-683">此示例演示<xref:System.Console.CursorLeft%2A>和<xref:System.Console.CursorTop%2A>属性，与<xref:System.Console.SetCursorPosition%2A>和<xref:System.Console.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-683">This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods.</span></span> <span data-ttu-id="1e68b-684">该示例定位光标，确定将在其中的下一步的写入发生，由结合使用的 5 字符矩形中绘制 5 字符"+"，"&#124;"，和"-"字符串。</span><span class="sxs-lookup"><span data-stu-id="1e68b-684">The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of "+", "&#124;", and "-" strings.</span></span> <span data-ttu-id="1e68b-685">请注意，无法使用其他字符串结合使用的步骤较少绘制矩形。</span><span class="sxs-lookup"><span data-stu-id="1e68b-685">Note that the rectangle could be drawn with fewer steps using a combination of other strings.</span></span>  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-686">
            <paramref name="left" /> 或 <paramref name="top" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-686">
              <paramref name="left" /> or <paramref name="top" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1e68b-687">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-687">-or-</span>
          </span>
          <span data-ttu-id="1e68b-688">
            <paramref name="left" /> 大于或等于 <see cref="P:System.Console.BufferWidth" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-688">
              <paramref name="left" /> is greater than or equal to <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
          <span data-ttu-id="1e68b-689">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-689">-or-</span>
          </span>
          <span data-ttu-id="1e68b-690">
            <paramref name="top" /> 大于或等于 <see cref="P:System.Console.BufferHeight" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-690">
              <paramref name="top" /> is greater than or equal to <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-691">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-691">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-692">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-692">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-693">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-693">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-694">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-694">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetError">
      <MemberSignature Language="C#" Value="public static void SetError (System.IO.TextWriter newError);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetError(class System.IO.TextWriter newError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetError(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetError (newError As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetError(System::IO::TextWriter ^ newError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newError" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newError">
          <span data-ttu-id="1e68b-695">一个流，它是新的标准错误输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-695">A stream that is the new standard error output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-696">将 <see cref="P:System.Console.Error" /> 属性设置为指定的 <see cref="T:System.IO.TextWriter" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-696">Sets the <see cref="P:System.Console.Error" /> property to the specified <see cref="T:System.IO.TextWriter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-697">默认情况下，<xref:System.Console.Error%2A>属性设置为标准错误输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-697">By default, the <xref:System.Console.Error%2A> property is set to the standard error output stream.</span></span>  
  
 <span data-ttu-id="1e68b-698">A<xref:System.IO.StreamWriter>封装<xref:System.IO.FileStream>可以用于将错误消息发送到一个文件。</span><span class="sxs-lookup"><span data-stu-id="1e68b-698">A <xref:System.IO.StreamWriter> that encapsulates a <xref:System.IO.FileStream> can be used to send error messages to a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-699">下面的示例演示如何将标准错误流重定向到一个文件。</span><span class="sxs-lookup"><span data-stu-id="1e68b-699">The following example shows how to redirect the standard error stream to a file.</span></span>  
  
 [!code-cpp[System.Console.SetError#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.SetError/cpp/seterror1.cpp#1)]
 [!code-csharp[System.Console.SetError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.SetError/cs/SetError1.cs#1)]
 [!code-vb[System.Console.SetError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.SetError/vb/SetError1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-700">
            <paramref name="newError" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-700">
              <paramref name="newError" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-701">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-701">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1e68b-702">用于调用非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-702">for calling unmanaged code.</span>
          </span>
          <span data-ttu-id="1e68b-703">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-703">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="P:System.Console.Error" />
      </Docs>
    </Member>
    <Member MemberName="SetIn">
      <MemberSignature Language="C#" Value="public static void SetIn (System.IO.TextReader newIn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIn(class System.IO.TextReader newIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetIn(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIn (newIn As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIn(System::IO::TextReader ^ newIn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newIn" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="newIn">
          <span data-ttu-id="1e68b-704">一个流，它是新的标准输入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-704">A stream that is the new standard input.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-705">将 <see cref="P:System.Console.In" /> 属性设置为指定的 <see cref="T:System.IO.TextReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-705">Sets the <see cref="P:System.Console.In" /> property to the specified <see cref="T:System.IO.TextReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-706">默认情况下，<xref:System.Console.In%2A>属性设置为标准输入流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-706">By default, the <xref:System.Console.In%2A> property is set to the standard input stream.</span></span>  
  
 <span data-ttu-id="1e68b-707">A<xref:System.IO.StreamReader>封装<xref:System.IO.FileStream>可用于接收来自文件的输入。</span><span class="sxs-lookup"><span data-stu-id="1e68b-707">A <xref:System.IO.StreamReader> that encapsulates a <xref:System.IO.FileStream> can be used to receive input from a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-708">下面的示例演示 <xref:System.Console.SetIn%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-708">The following example illustrates the use of the <xref:System.Console.SetIn%2A> method.</span></span> <span data-ttu-id="1e68b-709">它用制表符替换字符串中的四个连续空格字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-709">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="1e68b-710">若要运行它，您必须提供两个命令行自变量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-710">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="1e68b-711">第一个是要将标准输入流重定向到的现有文本文件的名称。</span><span class="sxs-lookup"><span data-stu-id="1e68b-711">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="1e68b-712">第二个是要将标准输出流重定向到的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="1e68b-712">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="1e68b-713">此文件不需要存在。</span><span class="sxs-lookup"><span data-stu-id="1e68b-713">This file need not exist.</span></span> <span data-ttu-id="1e68b-714">如果它这么做，其内容将被覆盖。</span><span class="sxs-lookup"><span data-stu-id="1e68b-714">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-715">
            <paramref name="newIn" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-715">
              <paramref name="newIn" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-716">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-716">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1e68b-717">用于调用非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-717">for calling unmanaged code.</span>
          </span>
          <span data-ttu-id="1e68b-718">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-718">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Console.In" />
      </Docs>
    </Member>
    <Member MemberName="SetOut">
      <MemberSignature Language="C#" Value="public static void SetOut (System.IO.TextWriter newOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetOut(class System.IO.TextWriter newOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetOut(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetOut (newOut As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetOut(System::IO::TextWriter ^ newOut);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newOut" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newOut">
          <span data-ttu-id="1e68b-719">一个流，它是新的标准输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-719">A stream that is the new standard output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-720">将 <see cref="P:System.Console.Out" /> 属性设置为指定的 <see cref="T:System.IO.TextWriter" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-720">Sets the <see cref="P:System.Console.Out" /> property to the specified <see cref="T:System.IO.TextWriter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-721">默认情况下，<xref:System.Console.Out%2A>属性设置为标准输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-721">By default, the <xref:System.Console.Out%2A> property is set to the standard output stream.</span></span>  
  
 <span data-ttu-id="1e68b-722">A<xref:System.IO.StreamWriter>封装<xref:System.IO.FileStream>可以用于将输出发送到一个文件。</span><span class="sxs-lookup"><span data-stu-id="1e68b-722">A <xref:System.IO.StreamWriter> that encapsulates a <xref:System.IO.FileStream> can be used to send output to a file.</span></span> <span data-ttu-id="1e68b-723">例如:</span><span class="sxs-lookup"><span data-stu-id="1e68b-723">For example:</span></span>  
  
 [!code-cpp[System.Console.SetOut#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.setout/cpp/source.cpp#1)]
 [!code-csharp[System.Console.SetOut#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.setout/cs/source.cs#1)]
 [!code-vb[System.Console.SetOut#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.setout/vb/source.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-724">下面的示例演示 <xref:System.Console.SetOut%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-724">The following example illustrates the use of the <xref:System.Console.SetOut%2A> method.</span></span> <span data-ttu-id="1e68b-725">它用制表符替换字符串中的四个连续空格字符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-725">It replaces four consecutive space characters in a string with a tab character.</span></span> <span data-ttu-id="1e68b-726">若要运行它，您必须提供两个命令行自变量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-726">To run it, you must supply two command line arguments.</span></span> <span data-ttu-id="1e68b-727">第一个是要将标准输入流重定向到的现有文本文件的名称。</span><span class="sxs-lookup"><span data-stu-id="1e68b-727">The first is the name of an existing text file to redirect the standard input stream to.</span></span> <span data-ttu-id="1e68b-728">第二个是要将标准输出流重定向到的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="1e68b-728">The second is the name of a file to redirect the standard output stream to.</span></span> <span data-ttu-id="1e68b-729">此文件不需要存在。</span><span class="sxs-lookup"><span data-stu-id="1e68b-729">This file need not exist.</span></span> <span data-ttu-id="1e68b-730">如果它这么做，其内容将被覆盖。</span><span class="sxs-lookup"><span data-stu-id="1e68b-730">If it does, its contents will be overwritten.</span></span>  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-731">
            <paramref name="newOut" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-731">
              <paramref name="newOut" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-732">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-732">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1e68b-733">用于调用非托管的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-733">for calling unmanaged code.</span>
          </span>
          <span data-ttu-id="1e68b-734">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-734">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Console.Out" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowPosition">
      <MemberSignature Language="C#" Value="public static void SetWindowPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowPosition(int32 left, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetWindowPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWindowPosition (left As Integer, top As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWindowPosition(int left, int top);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1e68b-735">控制台窗口左上角的列位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-735">The column position of the upper left  corner of the console window.</span>
          </span>
        </param>
        <param name="top">
          <span data-ttu-id="1e68b-736">控制台窗口左上角的行位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-736">The row position of the upper left corner of the console window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-737">设置控制台窗口相对于屏幕缓冲区的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-737">Sets the position of the console window relative to the screen buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-738">操作系统窗口显示控制台窗口中，并控制台窗口会显示屏幕缓冲区的一部分。</span><span class="sxs-lookup"><span data-stu-id="1e68b-738">The operating system window displays the console window, and the console window displays a portion of the screen buffer.</span></span> <span data-ttu-id="1e68b-739"><xref:System.Console.SetWindowPosition%2A>方法影响的位置的控制台窗口相对于屏幕缓冲区中，但不会影响相对于桌面操作系统窗口的位置。</span><span class="sxs-lookup"><span data-stu-id="1e68b-739">The <xref:System.Console.SetWindowPosition%2A> method affects the position of the console window relative to the screen buffer, but does not affect the position of the operating system window relative to the desktop.</span></span>  
  
 <span data-ttu-id="1e68b-740">控制台和操作系统 windows 通常不会影响每个其他。</span><span class="sxs-lookup"><span data-stu-id="1e68b-740">The console and operating system windows generally do not affect each other.</span></span> <span data-ttu-id="1e68b-741">但是，如果屏幕缓冲区无法显示在控制台窗口的当前边界，操作系统会自动将滚动条到操作系统窗口。</span><span class="sxs-lookup"><span data-stu-id="1e68b-741">However, if the screen buffer cannot be displayed in the current boundaries of the console window, the operating system automatically appends scroll bars to the operating system window.</span></span> <span data-ttu-id="1e68b-742">在这种情况下，移动操作系统窗口滚动条影响的位置的控制台窗口中，并移动控制台窗口<xref:System.Console.SetWindowPosition%2A>方法影响操作系统窗口滚动条的位置。</span><span class="sxs-lookup"><span data-stu-id="1e68b-742">In that case, moving the operating system window scroll bars affects the position of the console window, and moving the console window with the <xref:System.Console.SetWindowPosition%2A> method affects the position of the operating system window scroll bars.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-743">下面的示例演示<xref:System.Console.WindowLeft%2A>， <xref:System.Console.WindowTop%2A>， <xref:System.Console.WindowWidth%2A>， <xref:System.Console.WindowHeight%2A>， <xref:System.Console.BufferWidth%2A>， <xref:System.Console.BufferHeight%2A>，和<xref:System.Console.CursorVisible%2A>属性; 与<xref:System.Console.SetWindowPosition%2A>， <xref:System.Console.SetBufferSize%2A>，和<xref:System.Console.ReadKey%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-743">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="1e68b-744">该示例基于屏幕缓冲区的宽度屏幕缓冲区中绘制网格模式。</span><span class="sxs-lookup"><span data-stu-id="1e68b-744">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="1e68b-745">然后该示例将移动到的向上箭头，按下的向下箭头、 向左键或向右箭头控制台键的响应中的控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="1e68b-745">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="1e68b-746">网格模式有助于你查看控制台窗口相对于屏幕缓冲区的移动。</span><span class="sxs-lookup"><span data-stu-id="1e68b-746">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-747">
            <paramref name="left" /> 或 <paramref name="top" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-747">
              <paramref name="left" /> or <paramref name="top" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1e68b-748">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-748">-or-</span>
          </span>
          <span data-ttu-id="1e68b-749">
            <paramref name="left" /> + <see cref="P:System.Console.WindowWidth" /> 大于 <see cref="P:System.Console.BufferWidth" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-749">
              <paramref name="left" /> + <see cref="P:System.Console.WindowWidth" /> is greater than <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
          <span data-ttu-id="1e68b-750">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-750">-or-</span>
          </span>
          <span data-ttu-id="1e68b-751">
            <paramref name="top" /> + <see cref="P:System.Console.WindowHeight" /> 大于 <see cref="P:System.Console.BufferHeight" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-751">
              <paramref name="top" /> + <see cref="P:System.Console.WindowHeight" /> is greater than <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-752">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-752">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-753">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-753">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-754">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-754">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-755">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-755">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetWindowSize">
      <MemberSignature Language="C#" Value="public static void SetWindowSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetWindowSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWindowSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWindowSize(int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="1e68b-756">控制台窗口的宽度，以列为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-756">The width of the console window measured in columns.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="1e68b-757">控制台窗口的高度，以行为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-757">The height of the console window measured in rows.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-758">将控制台窗口的高度和宽度设置为指定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-758">Sets the height and width of the console window to the specified values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e68b-759">此示例演示<xref:System.Console.SetWindowSize%2A>方法，与<xref:System.Console.WindowWidth%2A>和<xref:System.Console.WindowHeight%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-759">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="1e68b-760">你必须运行该示例才能查看更改控制台窗口大小的完整效果。</span><span class="sxs-lookup"><span data-stu-id="1e68b-760">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="1e68b-761">该示例报告设置为 85 列和 43 行的控制台窗口的尺寸，然后等待要按键。</span><span class="sxs-lookup"><span data-stu-id="1e68b-761">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key to be pressed.</span></span> <span data-ttu-id="1e68b-762">当按任意键时，控制台窗口的尺寸会减半、 报告的新维度，和示例等待另一个按键。</span><span class="sxs-lookup"><span data-stu-id="1e68b-762">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="1e68b-763">最后，当按任意键时，控制台窗口还原到其原始尺寸和示例终止。</span><span class="sxs-lookup"><span data-stu-id="1e68b-763">Finally, when any key is pressed, the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-764">
            <paramref name="width" /> 或 <paramref name="height" /> 小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-764">
              <paramref name="width" /> or <paramref name="height" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="1e68b-765">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-765">-or-</span>
          </span>
          <span data-ttu-id="1e68b-766">
            <paramref name="width" /> 加 <see cref="P:System.Console.WindowLeft" /> 或 <paramref name="height" /> 加 <see cref="P:System.Console.WindowTop" /> 大于或等于 <see cref="F:System.Int16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-766">
              <paramref name="width" /> plus <see cref="P:System.Console.WindowLeft" /> or <paramref name="height" /> plus <see cref="P:System.Console.WindowTop" /> is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="1e68b-767">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-767">-or-</span>
          </span>
          <span data-ttu-id="1e68b-768">
            <paramref name="width" /> 或 <paramref name="height" /> 的值大于当前屏幕分辨率和控制台字体的最大可能的窗口宽度或高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-768">
              <paramref name="width" /> or <paramref name="height" /> is greater than the largest possible window width or height for the current screen resolution and console font.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="1e68b-769">用户没有执行此操作的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-769">The user does not have permission to perform this action.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-770">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-770">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-771">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-771">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-772">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-772">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public static string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string Title" />
      <MemberSignature Language="DocId" Value="P:System.Console.Title" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-773">获取或设置要显示在控制台标题栏中的标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-773">Gets or sets the title to display in the console title bar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-774">要在控制台的标题栏中显示的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-774">The string to be displayed in the title bar of the console.</span>
          </span>
          <span data-ttu-id="1e68b-775">标题字符串的最大长度是 24500 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-775">The maximum length of the title string is 24500 characters.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e68b-776">此示例演示<xref:System.Console.Title%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-776">This example demonstrates the <xref:System.Console.Title%2A> property.</span></span> <span data-ttu-id="1e68b-777">此示例显示当前操作系统窗口的标题、 等待按键，然后显示新标题。</span><span class="sxs-lookup"><span data-stu-id="1e68b-777">The example displays the current title of the operating system window, waits for a key press, then displays a new title.</span></span>  
  
 [!code-cpp[console.title#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.title/CPP/mytitle.cpp#1)]
 [!code-csharp[console.title#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.title/CS/mytitle.cs#1)]
 [!code-vb[console.title#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.title/VB/mytitle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1e68b-778">在获取操作中，检索到的标题长度超过 24500 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-778">In a get operation, the retrieved title is longer than 24500 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-779">在集运算中，指定的标题长度超过 24500 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-779">In a set operation, the specified title is longer than 24500 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-780">在集运算中，指定的标题是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-780">In a set operation, the specified title is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-781">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-781">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-782">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-782">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-783">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-783">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TreatControlCAsInput">
      <MemberSignature Language="C#" Value="public static bool TreatControlCAsInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool TreatControlCAsInput" />
      <MemberSignature Language="DocId" Value="P:System.Console.TreatControlCAsInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property TreatControlCAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool TreatControlCAsInput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-784">获取或设置一个值，该值指示是将修改键 <see cref="F:System.ConsoleModifiers.Control" /> 和控制台键 <see cref="F:System.ConsoleKey.C" /> 的组合 (Ctrl+C) 视为普通输入，还是视为由操作系统处理的中断。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-784">Gets or sets a value indicating whether the combination of the <see cref="F:System.ConsoleModifiers.Control" /> modifier key and <see cref="F:System.ConsoleKey.C" /> console key (Ctrl+C) is treated as ordinary input or as an interruption that is handled by the operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-785">如果将 Ctrl+C 视为普通输入，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-785">
              <see langword="true" /> if Ctrl+C is treated as ordinary input; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-786">如果值<xref:System.Console.TreatControlCAsInput%2A>属性是`false`并按下 Ctrl + C，按下的密钥不存储输入缓冲区中，并且操作系统终止当前正在执行的进程。</span><span class="sxs-lookup"><span data-stu-id="1e68b-786">If the value of the <xref:System.Console.TreatControlCAsInput%2A> property is `false` and Ctrl+C is pressed, the pressed keys are not stored in the input buffer and the operating system terminates the currently executing process.</span></span> <span data-ttu-id="1e68b-787">这是默认值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-787">This is the default value.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1e68b-788">使用此属性谨慎，因为将其设置为`true`具有如此显著的影响。</span><span class="sxs-lookup"><span data-stu-id="1e68b-788">Use this property judiciously because setting it to `true` has such a dramatic effect.</span></span> <span data-ttu-id="1e68b-789">大多数用户期望 Ctrl + C 终止一个控制台应用程序。</span><span class="sxs-lookup"><span data-stu-id="1e68b-789">Most users expect Ctrl+C to terminate a console application.</span></span> <span data-ttu-id="1e68b-790">如果禁用 Ctrl + C 的效果，用户必须记得使用 Ctrl + Break 终止该应用程序，这是不太常见的键组合。</span><span class="sxs-lookup"><span data-stu-id="1e68b-790">If you disable the effect of Ctrl+C, the user must remember to use Ctrl+Break to terminate the application, which is a less familiar key combination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-791">下面的示例演示<xref:System.Console.TreatControlCAsInput%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-791">The following example demonstrates the <xref:System.Console.TreatControlCAsInput%2A> property.</span></span>  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-792">无法获取或设置控制台输入缓冲区的输入模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-792">Unable to get or set the input mode of the console input buffer.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-793">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-793">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-794">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-794">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="F:System.ConsoleModifiers.Control" />
        <altmember cref="F:System.ConsoleKey.C" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="WindowHeight">
      <MemberSignature Language="C#" Value="public static int WindowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-795">获取或设置控制台窗口区域的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-795">Gets or sets the height of the console window area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-796">控制台窗口的高度，以行为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-796">The height of the console window measured in rows.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-797">正在尝试设置的值<xref:System.Console.WindowHeight%2A>属性在输出重定向时将引发或者<xref:System.ArgumentOutOfRangeException>或<xref:System.IO.IOException>异常。</span><span class="sxs-lookup"><span data-stu-id="1e68b-797">Attempting to set the value of the <xref:System.Console.WindowHeight%2A> property when output is redirected throws either an <xref:System.ArgumentOutOfRangeException> or an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="1e68b-798">若要防止出现异常，可以设置此属性仅当值<xref:System.Console.IsOutputRedirected%2A>属性返回`false`。</span><span class="sxs-lookup"><span data-stu-id="1e68b-798">To prevent an exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-799">此示例演示<xref:System.Console.SetWindowSize%2A>方法，与<xref:System.Console.WindowWidth%2A>和<xref:System.Console.WindowHeight%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-799">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="1e68b-800">你必须运行该示例才能查看更改控制台窗口大小的完整效果。</span><span class="sxs-lookup"><span data-stu-id="1e68b-800">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="1e68b-801">该示例报告设置为 85 列和 43 行的控制台窗口的尺寸，然后等待按键。</span><span class="sxs-lookup"><span data-stu-id="1e68b-801">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</span></span> <span data-ttu-id="1e68b-802">当按任意键时，控制台窗口的尺寸会减半、 报告的新维度，和示例等待另一个按键。</span><span class="sxs-lookup"><span data-stu-id="1e68b-802">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="1e68b-803">最后，当按下任何键控制台窗口还原到其原始维度，该示例终止。</span><span class="sxs-lookup"><span data-stu-id="1e68b-803">Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-804">属性 <see cref="P:System.Console.WindowWidth" /> 的值或属性 <see cref="P:System.Console.WindowHeight" /> 的值小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-804">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is less than or equal to 0.</span>
          </span>
          <span data-ttu-id="1e68b-805">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-805">-or-</span>
          </span>
          <span data-ttu-id="1e68b-806">属性 <see cref="P:System.Console.WindowHeight" /> 的值加上属性 <see cref="P:System.Console.WindowTop" /> 的值大于或等于 <see cref="F:System.Int16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-806">The value of the <see cref="P:System.Console.WindowHeight" /> property plus the value of the <see cref="P:System.Console.WindowTop" /> property is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="1e68b-807">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-807">-or-</span>
          </span>
          <span data-ttu-id="1e68b-808">
            <see cref="P:System.Console.WindowWidth" /> 属性的值或 <see cref="P:System.Console.WindowHeight" /> 属性的值大于当前屏幕分辨率和控制台字体的最大可能的窗口宽度或高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-808">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is greater than the largest possible window width or height for the current screen resolution and console font.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-809">读取或写入信息时发生错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-809">Error reading or writing information.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WindowLeft">
      <MemberSignature Language="C#" Value="public static int WindowLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowLeft" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowLeft { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-810">获取或设置控制台窗口区域的最左边相对于屏幕缓冲区的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-810">Gets or sets the leftmost position of the console window area relative to the screen buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-811">控制台窗口的最左边的位置，以列为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-811">The leftmost console window position measured in columns.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-812">控制台到更大的矩形缓冲区区域表示的矩形窗口。</span><span class="sxs-lookup"><span data-stu-id="1e68b-812">The console represents a rectangular window into a larger rectangular buffer area.</span></span> <span data-ttu-id="1e68b-813">窗口和缓冲区垂直测量了通过它们的行数和水平方向的列数。</span><span class="sxs-lookup"><span data-stu-id="1e68b-813">Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</span></span> <span data-ttu-id="1e68b-814">通过定义缓冲区的尺寸<xref:System.Console.BufferHeight%2A>和<xref:System.Console.BufferWidth%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-814">The dimensions of the buffer area are defined by the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="1e68b-815">通过定义控制台区域的维度<xref:System.Console.WindowHeight%2A>和<xref:System.Console.WindowWidth%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-815">The dimensions of the console area are defined by the <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties.</span></span> <span data-ttu-id="1e68b-816"><xref:System.Console.WindowLeft%2A>属性确定缓冲区的列显示在控制台窗口的第一列。</span><span class="sxs-lookup"><span data-stu-id="1e68b-816">The <xref:System.Console.WindowLeft%2A> property determines which column of the buffer area is displayed in the first column of the console window.</span></span> <span data-ttu-id="1e68b-817">值<xref:System.Console.WindowLeft%2A>属性可以介于 0 到<xref:System.Console.BufferWidth%2A>  -  <xref:System.Console.WindowWidth%2A>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-817">The value of the <xref:System.Console.WindowLeft%2A> property can range from 0 to <xref:System.Console.BufferWidth%2A> - <xref:System.Console.WindowWidth%2A>.</span></span> <span data-ttu-id="1e68b-818">尝试将其设置为的值超出了该范围将引发<xref:System.ArgumentOutOfRangeException>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-818">Attempting to set it to a value outside that range throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="1e68b-819">控制台窗口首次打开时，默认值的<xref:System.Console.WindowLeft%2A>属性为零，指示由控制台所示的第一列对应于在缓冲区中的第一列 （位置零上的列）。</span><span class="sxs-lookup"><span data-stu-id="1e68b-819">When a console window first opens, the default value of the <xref:System.Console.WindowLeft%2A> property is zero, which indicates that the first column shown by the console corresponds to the first column (the column at position zero) in the buffer area.</span></span> <span data-ttu-id="1e68b-820">控制台窗口和缓冲区的默认宽度为 80 的列。</span><span class="sxs-lookup"><span data-stu-id="1e68b-820">The default width of both the console window and the buffer area is 80 columns.</span></span> <span data-ttu-id="1e68b-821">这意味着，<xref:System.Console.WindowLeft%2A>只有控制台窗口变窄或缓冲区变宽，则可以修改属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-821">This means that the <xref:System.Console.WindowLeft%2A> property can be modified only if the console window is made narrower or the buffer area is made wider.</span></span>  
  
 <span data-ttu-id="1e68b-822">请注意，如果缓冲区的宽度超过控制台窗口的值的宽度<xref:System.Console.WindowLeft%2A>属性自动调整当用户使用水平滚动条来到缓冲区定义窗口的关系。</span><span class="sxs-lookup"><span data-stu-id="1e68b-822">Note that if the width of the buffer area exceeds the width of the console window, the value of the <xref:System.Console.WindowLeft%2A> property is automatically adjusted when the user uses the horizontal scroll bar to define the window's relationship to the buffer area.</span></span>  
  
 <span data-ttu-id="1e68b-823">正在尝试设置的值<xref:System.Console.WindowLeft%2A>属性输出时重定向引发<xref:System.IO.IOException>异常。</span><span class="sxs-lookup"><span data-stu-id="1e68b-823">Attempting to set the value of the <xref:System.Console.WindowLeft%2A> property when output is redirected throws an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="1e68b-824">若要避免此异常，可以设置此属性仅当值<xref:System.Console.IsOutputRedirected%2A>属性返回`false`。</span><span class="sxs-lookup"><span data-stu-id="1e68b-824">To prevent the exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-825">下面的示例打开一个 80 列控制台窗口中，并定义 120 列宽的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="1e68b-825">The following example opens an 80-column console window and defines a buffer area that is 120 columns wide.</span></span> <span data-ttu-id="1e68b-826">它显示在窗口和缓冲区大小的信息，然后等待用户按左箭头键或向右箭头键。</span><span class="sxs-lookup"><span data-stu-id="1e68b-826">It displays information on window and buffer size, and then waits for the user to press either the LEFT ARROW key or the RIGHT ARROW key.</span></span> <span data-ttu-id="1e68b-827">在以前的情况下，它递减的值<xref:System.Console.WindowLeft%2A>1 如果结果为非法值的属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-827">In the former case, it decrements the value of the <xref:System.Console.WindowLeft%2A> property by one if the result is a legal value.</span></span> <span data-ttu-id="1e68b-828">在后一种情况下，它的值增加<xref:System.Console.WindowLeft%2A>1 如果结果将是合法的属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-828">In the latter case, it increases the value of the <xref:System.Console.WindowLeft%2A> property by one if the result would be legal.</span></span> <span data-ttu-id="1e68b-829">请注意，该示例不需要处理<xref:System.ArgumentOutOfRangeException>，因为它会检查的值分配给<xref:System.Console.WindowLeft%2A>属性不为负且不会导致的总和<xref:System.Console.WindowLeft%2A>和<xref:System.Console.WindowWidth%2A>属性超过<xref:System.Console.BufferWidth%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-829">Note that the example does not have to handle an <xref:System.ArgumentOutOfRangeException>, because it checks that the value to be assigned to the <xref:System.Console.WindowLeft%2A> property is not negative and does not cause the sum of the <xref:System.Console.WindowLeft%2A> and <xref:System.Console.WindowWidth%2A> properties to exceed the <xref:System.Console.BufferWidth%2A> property value.</span></span>  
  
 [!code-cpp[System.Console.WindowLeft#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.windowleft/cpp/windowleft1.cpp#1)]
 [!code-csharp[System.Console.WindowLeft#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.windowleft/cs/windowleft1.cs#1)]
 [!code-vb[System.Console.WindowLeft#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.windowleft/vb/windowleft1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-830">在集运算中，要赋予的值小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-830">In a set operation, the value to be assigned is less than zero.</span>
          </span>
          <span data-ttu-id="1e68b-831">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-831">-or-</span>
          </span>
          <span data-ttu-id="1e68b-832">赋值之后，<see cref="P:System.Console.WindowLeft" /> 加 <see cref="P:System.Console.WindowWidth" /> 将超过 <see cref="P:System.Console.BufferWidth" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-832">As a result of the assignment, <see cref="P:System.Console.WindowLeft" /> plus <see cref="P:System.Console.WindowWidth" /> would exceed <see cref="P:System.Console.BufferWidth" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-833">读取或写入信息时发生错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-833">Error reading or writing information.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WindowTop">
      <MemberSignature Language="C#" Value="public static int WindowTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowTop" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowTop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowTop { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-834">获取或设置控制台窗口区域的最顶部相对于屏幕缓冲区的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-834">Gets or sets the top position of the console window area relative to the screen buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-835">控制台窗口最顶部的位置，以行为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-835">The uppermost console window position measured in rows.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-836">控制台到更大的矩形缓冲区区域表示的矩形窗口。</span><span class="sxs-lookup"><span data-stu-id="1e68b-836">The console represents a rectangular window into a larger rectangular buffer area.</span></span> <span data-ttu-id="1e68b-837">窗口和缓冲区垂直测量了通过它们的行数和水平方向的列数。</span><span class="sxs-lookup"><span data-stu-id="1e68b-837">Both the window and the buffer are measured vertically by their number of rows and horizontally by their number of columns.</span></span> <span data-ttu-id="1e68b-838">通过定义缓冲区的尺寸<xref:System.Console.BufferHeight%2A>和<xref:System.Console.BufferWidth%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-838">The dimensions of the buffer area are defined by the <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties.</span></span> <span data-ttu-id="1e68b-839">通过定义控制台区域的维度<xref:System.Console.WindowHeight%2A>和<xref:System.Console.WindowWidth%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-839">The dimensions of the console area are defined by the <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties.</span></span> <span data-ttu-id="1e68b-840"><xref:System.Console.WindowTop%2A>属性确定缓冲区的行显示在控制台窗口的第一列。</span><span class="sxs-lookup"><span data-stu-id="1e68b-840">The <xref:System.Console.WindowTop%2A> property determines which row of the buffer area is displayed in the first column of the console window.</span></span> <span data-ttu-id="1e68b-841">值<xref:System.Console.WindowTop%2A>属性可以介于 0 到<xref:System.Console.BufferHeight%2A>  -  <xref:System.Console.WindowHeight%2A>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-841">The value of the <xref:System.Console.WindowTop%2A> property can range from 0 to <xref:System.Console.BufferHeight%2A> - <xref:System.Console.WindowHeight%2A>.</span></span> <span data-ttu-id="1e68b-842">尝试将其设置为的值超出了该范围将引发<xref:System.ArgumentOutOfRangeException>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-842">Attempting to set it to a value outside that range throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="1e68b-843">正在尝试设置的值<xref:System.Console.WindowTop%2A>属性输出时重定向引发<xref:System.IO.IOException>异常。</span><span class="sxs-lookup"><span data-stu-id="1e68b-843">Attempting to set the value of the <xref:System.Console.WindowTop%2A> property when output is redirected throws an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="1e68b-844">若要避免此异常，可以设置此属性仅当值<xref:System.Console.IsOutputRedirected%2A>属性返回`false`。</span><span class="sxs-lookup"><span data-stu-id="1e68b-844">To prevent the exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-845">下面的示例演示<xref:System.Console.WindowLeft%2A>， <xref:System.Console.WindowTop%2A>， <xref:System.Console.WindowWidth%2A>， <xref:System.Console.WindowHeight%2A>， <xref:System.Console.BufferWidth%2A>， <xref:System.Console.BufferHeight%2A>，和<xref:System.Console.CursorVisible%2A>属性; 与<xref:System.Console.SetWindowPosition%2A>， <xref:System.Console.SetBufferSize%2A>，和<xref:System.Console.ReadKey%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-845">The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods.</span></span> <span data-ttu-id="1e68b-846">该示例基于屏幕缓冲区的宽度屏幕缓冲区中绘制网格模式。</span><span class="sxs-lookup"><span data-stu-id="1e68b-846">The example draws a grid pattern in the screen buffer based on the screen buffer width.</span></span> <span data-ttu-id="1e68b-847">然后该示例将移动到的向上箭头，按下的向下箭头、 向左键或向右箭头控制台键的响应中的控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="1e68b-847">Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed.</span></span> <span data-ttu-id="1e68b-848">网格模式有助于你查看控制台窗口相对于屏幕缓冲区的移动。</span><span class="sxs-lookup"><span data-stu-id="1e68b-848">The grid pattern helps you see the movement of the console window relative to the screen buffer.</span></span>  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-849">在集运算中，要赋予的值小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-849">In a set operation, the value to be assigned is less than zero.</span>
          </span>
          <span data-ttu-id="1e68b-850">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-850">-or-</span>
          </span>
          <span data-ttu-id="1e68b-851">赋值之后，<see cref="P:System.Console.WindowTop" /> 加 <see cref="P:System.Console.WindowHeight" /> 将超过 <see cref="P:System.Console.BufferHeight" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-851">As a result of the assignment, <see cref="P:System.Console.WindowTop" /> plus <see cref="P:System.Console.WindowHeight" /> would exceed <see cref="P:System.Console.BufferHeight" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-852">读取或写入信息时发生错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-852">Error reading or writing information.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WindowWidth">
      <MemberSignature Language="C#" Value="public static int WindowWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-853">获取或设置控制台窗口的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-853">Gets or sets the width of the console window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e68b-854">控制台窗口的宽度，以列为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-854">The width of the console window measured in columns.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-855">正在尝试设置的值<xref:System.Console.WindowWidth%2A>属性在输出重定向时将引发或者<xref:System.ArgumentOutOfRangeException>或<xref:System.IO.IOException>异常。</span><span class="sxs-lookup"><span data-stu-id="1e68b-855">Attempting to set the value of the <xref:System.Console.WindowWidth%2A> property when output is redirected throws either an <xref:System.ArgumentOutOfRangeException> or an <xref:System.IO.IOException> exception.</span></span> <span data-ttu-id="1e68b-856">若要防止出现异常，可以设置此属性仅当值<xref:System.Console.IsOutputRedirected%2A>属性返回`false`。</span><span class="sxs-lookup"><span data-stu-id="1e68b-856">To prevent an exception, you can set the value of this property only if the <xref:System.Console.IsOutputRedirected%2A> property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-857">此示例演示<xref:System.Console.SetWindowSize%2A>方法，与<xref:System.Console.WindowWidth%2A>和<xref:System.Console.WindowHeight%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-857">This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties.</span></span> <span data-ttu-id="1e68b-858">你必须运行该示例才能查看更改控制台窗口大小的完整效果。</span><span class="sxs-lookup"><span data-stu-id="1e68b-858">You must run the example to see the full effect of changing the console window size.</span></span>  
  
 <span data-ttu-id="1e68b-859">该示例报告设置为 85 列和 43 行的控制台窗口的尺寸，然后等待按键。</span><span class="sxs-lookup"><span data-stu-id="1e68b-859">The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press.</span></span> <span data-ttu-id="1e68b-860">当按任意键时，控制台窗口的尺寸会减半、 报告的新维度，和示例等待另一个按键。</span><span class="sxs-lookup"><span data-stu-id="1e68b-860">When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press.</span></span> <span data-ttu-id="1e68b-861">最后，当按下任何键控制台窗口还原到其原始维度，该示例终止。</span><span class="sxs-lookup"><span data-stu-id="1e68b-861">Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.</span></span>  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-862">属性 <see cref="P:System.Console.WindowWidth" /> 的值或属性 <see cref="P:System.Console.WindowHeight" /> 的值小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-862">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is less than or equal to 0.</span>
          </span>
          <span data-ttu-id="1e68b-863">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-863">-or-</span>
          </span>
          <span data-ttu-id="1e68b-864">属性 <see cref="P:System.Console.WindowHeight" /> 的值加上属性 <see cref="P:System.Console.WindowTop" /> 的值大于或等于 <see cref="F:System.Int16.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-864">The value of the <see cref="P:System.Console.WindowHeight" /> property plus the value of the <see cref="P:System.Console.WindowTop" /> property is greater than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
          <span data-ttu-id="1e68b-865">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-865">-or-</span>
          </span>
          <span data-ttu-id="1e68b-866">
            <see cref="P:System.Console.WindowWidth" /> 属性的值或 <see cref="P:System.Console.WindowHeight" /> 属性的值大于当前屏幕分辨率和控制台字体的最大可能的窗口宽度或高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-866">The value of the <see cref="P:System.Console.WindowWidth" /> property or the value of the <see cref="P:System.Console.WindowHeight" /> property is greater than the largest possible window width or height for the current screen resolution and console font.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-867">读取或写入信息时发生错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-867">Error reading or writing information.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-868">将指定值的文本表示形式写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-868">Writes the text representation of the specified value or values to the standard output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-869">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-869">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-870">将指定的布尔值的文本表示形式写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-870">Writes the text representation of the specified Boolean value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-871">文本表示形式`value`由调用<xref:System.Boolean.ToString%2A?displayProperty=nameWithType>，该操作会输出<xref:System.Boolean.TrueString?displayProperty=nameWithType>或<xref:System.Boolean.FalseString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-871">The text representation of `value` is produced by calling <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>, which outputs either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-872">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-872">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-873">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-873">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-874">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-874">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-875">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-875">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-876">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-876">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-877">将指定的 Unicode 字符值写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-877">Writes the specified Unicode character value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e68b-878">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-878">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-879">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-879">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-880">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-880">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-881">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-881">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1e68b-882">Unicode 字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-882">A Unicode character array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-883">将指定的 Unicode 字符数组写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-883">Writes the specified array of Unicode characters to the standard output stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-884">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-884">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-885">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-885">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-886">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-886">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-887">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-887">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-888">将指定的 <see cref="T:System.Decimal" /> 值的文本表示形式写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-888">Writes the text representation of the specified <see cref="T:System.Decimal" /> value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-889">文本表示形式`value`由调用<xref:System.Decimal.ToString%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-889">The text representation of `value` is produced by calling <xref:System.Decimal.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-890">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-890">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-891">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-891">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-892">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-892">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-893">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-893">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-894">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-894">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-895">将指定的双精度浮点值的文本表示形式写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-895">Writes the text representation of the specified double-precision floating-point value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-896">文本表示形式`value`由调用<xref:System.Double.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-896">The text representation of `value` is produced by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-897">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-897">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-898">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-898">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-899">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-899">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-900">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-900">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-901">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-901">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-902">将指定的 32 位有符号整数值的文本表示写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-902">Writes the text representation of the specified 32-bit signed integer value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-903">文本表示形式`value`由调用<xref:System.Int32.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-903">The text representation of `value` is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-904">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-904">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-905">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-905">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-906">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-906">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-907">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-907">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-908">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-908">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-909">将指定的 64 位有符号整数值的文本表示写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-909">Writes the text representation of the specified 64-bit signed integer value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-910">文本表示形式`value`由调用<xref:System.Int64.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-910">The text representation of `value` is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-911">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-911">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-912">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-912">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-913">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-913">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-914">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-914">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-915">要写入的值，或者为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-915">The value to write, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-916">将指定对象的文本表示形式写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-916">Writes the text representation of the specified object to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-917">如果`value`是`null`，则不写入，并且会引发任何异常。</span><span class="sxs-lookup"><span data-stu-id="1e68b-917">If `value` is `null`, nothing is written and no exception is thrown.</span></span> <span data-ttu-id="1e68b-918">否则为`ToString`方法`value`调用以生成其字符串表示形式中，并且生成的字符串会写入到标准输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-918">Otherwise, the `ToString` method of `value` is called to produce its string representation, and the resulting string is written to the standard output stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-919">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-919">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-920">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-920">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-921">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-921">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-922">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-922">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-923">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-923">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-924">将指定的单精度浮点值的文本表示形式写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-924">Writes the text representation of the specified single-precision floating-point value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-925">文本表示形式`value`由调用<xref:System.Single.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-925">The text representation of `value` is produced by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-926">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-926">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-927">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-927">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-928">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-928">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-929">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-929">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-930">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-930">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-931">将指定的字符串值写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-931">Writes the specified string value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-932">如果值为`null`，则不写入到标准输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-932">If value is `null`, nothing is written to the standard output stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-933">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-933">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-934">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-934">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-935">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-935">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-936">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-936">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-937">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-937">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-938">将指定的 32 位无符号整数值的文本表示写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-938">Writes the text representation of the specified 32-bit unsigned integer value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-939">文本表示形式`value`由调用<xref:System.UInt32.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-939">The text representation of `value` is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-940">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-940">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-941">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-941">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-942">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-942">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-943">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-943">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-944">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-944">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-945">将指定的 64 位无符号整数值的文本表示写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-945">Writes the text representation of the specified 64-bit unsigned integer value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-946">文本表示形式`value`由调用<xref:System.UInt64.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-946">The text representation of `value` is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-947">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-947">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-948">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-948">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-949">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-949">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-950">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-950">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="1e68b-951">复合格式字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-951">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="1e68b-952">要使用 <c>format</c> 写入的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-952">An object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-953">使用指定的格式信息将指定对象的文本表示形式写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-953">Writes the text representation of the specified object to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-954">此方法使用[复合格式设置功能](~/docs/standard/base-types/composite-formatting.md)要将对象的值转换为它的文本表示形式，并将该表示形式嵌入在字符串中的.NET framework。</span><span class="sxs-lookup"><span data-stu-id="1e68b-954">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1e68b-955">生成的字符串写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-955">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1e68b-956">`format`参数由零个或多个文本混和组成，零个或多个索引占位符称为格式项，对应于此方法的参数列表中的对象。</span><span class="sxs-lookup"><span data-stu-id="1e68b-956">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1e68b-957">格式设置的过程将每个格式项替换的文本表示形式相应对象的值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-957">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1e68b-958">格式项的语法是`{`*索引*[`,`*对齐*] [`:`*formatString*]`}`，它指定强制索引、 可选长度和对齐方式的带格式的文本和一个可选的字符串的格式说明符字符用于控制如何设置相应的对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="1e68b-958">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1e68b-959">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍。</span><span class="sxs-lookup"><span data-stu-id="1e68b-959">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1e68b-960">有关如方法支持复合格式设置功能的详细信息<xref:System.String.Format%2A>， <xref:System.Text.StringBuilder.AppendFormat%2A>，和的某些重载<xref:System.Console.WriteLine%2A>，请参阅[复合格式设置](~/docs/standard/base-types/composite-formatting.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-960">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1e68b-961">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-961">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-962">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-962">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-963">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](~/docs/standard/base-types/enumeration-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-963">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-964">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-964">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-965">下面的示例使用 `WriteLine` 方法演示数字、日期和枚举的标准格式说明符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-965">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)] 
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="1e68b-966">下面的示例演示 <xref:System.Console.Write%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-966">The following example illustrates the use of the <xref:System.Console.Write%2A> method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-967">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-967">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-968">
            <paramref name="format" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-968">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1e68b-969">
            <paramref name="format" /> 中的格式规范无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-969">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-970">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-970">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-971">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-971">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="1e68b-972">复合格式字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-972">A composite format string.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="1e68b-973">要使用 <c>format</c> 写入的对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-973">An array of objects to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-974">使用指定的格式信息将指定的对象数组的文本表示形式写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-974">Writes the text representation of the specified array of objects to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-975">此方法使用[复合格式设置功能](~/docs/standard/base-types/composite-formatting.md)要将对象的值转换为它的文本表示形式，并将该表示形式嵌入在字符串中的.NET framework。</span><span class="sxs-lookup"><span data-stu-id="1e68b-975">This method uses the  [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1e68b-976">生成的字符串写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-976">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1e68b-977">`format`参数由零个或多个文本混和组成，零个或多个索引占位符称为格式项，对应于此方法的参数列表中的对象。</span><span class="sxs-lookup"><span data-stu-id="1e68b-977">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1e68b-978">格式设置的过程将每个格式项替换的文本表示形式相应对象的值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-978">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1e68b-979">格式项的语法是`{`*索引*[`,`*对齐*] [`:`*formatString*]`}`，它指定强制索引、 可选长度和对齐方式的带格式的文本和一个可选的字符串的格式说明符字符用于控制如何设置相应的对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="1e68b-979">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1e68b-980">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍。</span><span class="sxs-lookup"><span data-stu-id="1e68b-980">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1e68b-981">有关如方法支持复合格式设置功能的详细信息<xref:System.String.Format%2A>， <xref:System.Text.StringBuilder.AppendFormat%2A>，和的某些重载<xref:System.Console.WriteLine%2A>，请参阅[复合格式设置](~/docs/standard/base-types/composite-formatting.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-981">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1e68b-982">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-982">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-983">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-983">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-984">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](~/docs/standard/base-types/enumeration-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-984">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-985">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-985">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="1e68b-986">`arg`参数是一个参数数组。</span><span class="sxs-lookup"><span data-stu-id="1e68b-986">The `arg` parameter is a parameter array.</span></span> <span data-ttu-id="1e68b-987">作为数组或五个或多个项的列表，则可以将自变量传递给方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-987">Arguments  can be passed to the method either as an array or as list of five or more items.</span></span> <span data-ttu-id="1e68b-988">这些示例说明了两种形式的方法调用。</span><span class="sxs-lookup"><span data-stu-id="1e68b-988">The examples illustrate both forms of method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-989">下面的示例定义`Person`与大量的属性提供了有关个人信息的类。</span><span class="sxs-lookup"><span data-stu-id="1e68b-989">The following example defines a `Person` class with a number of properties that provide information about a person.</span></span> <span data-ttu-id="1e68b-990">其`GetDescription`方法返回一个数组，包含所有属性值，但一个除外。</span><span class="sxs-lookup"><span data-stu-id="1e68b-990">Its `GetDescription` method returns an array that contains all of the property values except one.</span></span> <span data-ttu-id="1e68b-991">然后，该示例使用返回的数组`GetDescription`方法以显示 Person 对象的值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-991">The example then uses the array returned by the  `GetDescription` method  to display the values of the Person object.</span></span>  
  
 [!code-csharp[System.Console.Write#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.write/cs/WriteParams1.cs#1)]
 [!code-vb[System.Console.Write#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.write/vb/WriteParams1.vb#1)]  
  
 <span data-ttu-id="1e68b-992">请注意，该示例调用<xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29>方法而不是<xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29>方法因为它尝试显示的值`Person.Remarks`同一行上的属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-992">Note that the example calls the <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29> method rather than the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29> method because it attempts to display the value of the `Person.Remarks` property on the same line.</span></span> <span data-ttu-id="1e68b-993">若要执行此操作，它检查的值<xref:System.Console.CursorLeft%2A>和<xref:System.Console.WindowWidth%2A>属性，以确定是否有足够的空间以适合的批注。</span><span class="sxs-lookup"><span data-stu-id="1e68b-993">To do this, it examines the value of the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.WindowWidth%2A> properties to determine whether there is enough space for the remark to fit.</span></span>  <span data-ttu-id="1e68b-994">如果没有，它显示的行。</span><span class="sxs-lookup"><span data-stu-id="1e68b-994">If there is, it displays the line.</span></span> <span data-ttu-id="1e68b-995">如果没有，它写入行，缩进三个空格，并显示备注。</span><span class="sxs-lookup"><span data-stu-id="1e68b-995">If not, it writes a line, indents three spaces, and displays the remark.</span></span>  
  
 <span data-ttu-id="1e68b-996">下面的示例是第一个，相同，但它会提供一个五项列表作为`arg`而不是参数数组的自变量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-996">The following example is identical to the first, except that it supplies a five-item list as the `arg` argument instead of a parameter array.</span></span>  
  
 [!code-csharp[System.Console.Write#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.write/cs/WriteParams2.cs#2)]
 [!code-vb[System.Console.Write#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.write/vb/WriteParams2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-997">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-997">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-998">
            <paramref name="format" /> 或 <paramref name="arg" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-998">
              <paramref name="format" /> or <paramref name="arg" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1e68b-999">
            <paramref name="format" /> 中的格式规范无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-999">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1000">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1000">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1001">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1001">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="1e68b-1002">此方法不由 c + + 代码调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-1002">This method is not called by C++ code.</span>
            </span>
            <span data-ttu-id="1e68b-1003">C + + 编译器将解析对调用[System.Console.Write](xref:System.Console.Write*) ，作为对的调用中包含字符串和四个或多个对象参数的列表<see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-1003">The C++ compiler resolves calls to [System.Console.Write](xref:System.Console.Write*) that include a string and a list of four or more object parameters as a call to <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />.</span>
            </span>
            <span data-ttu-id="1e68b-1004">它解析到调用[System.Console.Write](xref:System.Console.Write*) ，作为对的调用中包含字符串和一个对象数组<see cref="M:System.Console.Write(System.String,System.Object)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-1004">It resolves calls to [System.Console.Write](xref:System.Console.Write*) that include a string and an object array as a call to <see cref="M:System.Console.Write(System.String,System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1e68b-1005">Unicode 字符的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1005">An array of Unicode characters.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1e68b-1006">
            <c>buffer</c> 中的起始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1006">The starting position in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1e68b-1007">要写入的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1007">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1008">将指定的 Unicode 字符子数组写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1008">Writes the specified subarray of Unicode characters to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1009">此方法将写入`count`字符位置开始`index`的`buffer`写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1009">This method writes `count` characters starting at position `index` of `buffer` to the standard output stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-1010">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1010">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-1011">
            <paramref name="index" /> 或 <paramref name="count" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1011">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e68b-1012">
            <paramref name="index" /> 加 <paramref name="count" /> 指定不在 <paramref name="buffer" /> 内的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1012">
              <paramref name="index" /> plus <paramref name="count" /> specify a position that is not within <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1013">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1013">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1014">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1014">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1015">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1015">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="1e68b-1016">复合格式字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1016">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="1e68b-1017">要使用 <c>format</c> 写入的第 1 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1017">The first object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="1e68b-1018">要使用 <c>format</c> 写入的第 2 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1018">The second object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1019">使用指定的格式信息将指定对象的文本表示形式写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1019">Writes the text representation of the specified objects to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1020">此方法使用[复合格式设置功能](~/docs/standard/base-types/composite-formatting.md)要将对象的值转换为它的文本表示形式，并将该表示形式嵌入在字符串中的.NET framework。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1020">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1e68b-1021">生成的字符串写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1021">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1e68b-1022">`format`参数由零个或多个文本混和组成，零个或多个索引占位符称为格式项，对应于此方法的参数列表中的对象。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1022">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1e68b-1023">格式设置的过程将每个格式项替换的文本表示形式相应对象的值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1023">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1e68b-1024">格式项的语法是`{`*索引*[`,`*对齐*] [`:`*formatString*]`}`，它指定强制索引、 可选长度和对齐方式的带格式的文本和一个可选的字符串的格式说明符字符用于控制如何设置相应的对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1024">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1e68b-1025">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1025">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1e68b-1026">有关如方法支持复合格式设置功能的详细信息<xref:System.String.Format%2A>， <xref:System.Text.StringBuilder.AppendFormat%2A>，和的某些重载<xref:System.Console.WriteLine%2A>，请参阅[复合格式设置](~/docs/standard/base-types/composite-formatting.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1026">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1027">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1027">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1028">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1028">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1029">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](~/docs/standard/base-types/enumeration-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1029">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1030">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1030">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1031">下面的示例使用 `WriteLine` 方法演示数字、日期和枚举的标准格式说明符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1031">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="1e68b-1032">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1032">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1033">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1033">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-1034">
            <paramref name="format" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1034">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1e68b-1035">
            <paramref name="format" /> 中的格式规范无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1035">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1036">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1036">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1037">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1037">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="1e68b-1038">复合格式字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1038">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="1e68b-1039">要使用 <c>format</c> 写入的第 1 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1039">The first object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="1e68b-1040">要使用 <c>format</c> 写入的第 2 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1040">The second object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="1e68b-1041">要使用 <c>format</c> 写入的第 3 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1041">The third object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1042">使用指定的格式信息将指定对象的文本表示形式写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1042">Writes the text representation of the specified objects to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1043">此方法使用[复合格式设置功能](~/docs/standard/base-types/composite-formatting.md)要将对象的值转换为它的文本表示形式，并将该表示形式嵌入在字符串中的.NET framework。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1043">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1e68b-1044">生成的字符串写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1044">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1e68b-1045">`format`参数由零个或多个文本混和组成，零个或多个索引占位符称为格式项，对应于此方法的参数列表中的对象。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1045">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1e68b-1046">格式设置的过程将每个格式项替换的文本表示形式相应对象的值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1046">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1e68b-1047">格式项的语法是`{`*索引*[`,`*对齐*] [`:`*formatString*]`}`，它指定强制索引、 可选长度和对齐方式的带格式的文本和一个可选的字符串的格式说明符字符用于控制如何设置相应的对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1047">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1e68b-1048">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1048">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1e68b-1049">有关如方法支持复合格式设置功能的详细信息<xref:System.String.Format%2A>， <xref:System.Text.StringBuilder.AppendFormat%2A>，和的某些重载<xref:System.Console.WriteLine%2A>，请参阅[复合格式设置](~/docs/standard/base-types/composite-formatting.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1049">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1050">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1050">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1051">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1051">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1052">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](~/docs/standard/base-types/enumeration-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1052">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1053">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1053">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1054">下面的示例使用 `WriteLine` 方法演示数字、日期和枚举的标准格式说明符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1054">The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="1e68b-1055">下面的示例演示 `Write` 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1055">The following example illustrates the use of the `Write` method.</span></span>  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1056">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1056">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-1057">
            <paramref name="format" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1057">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1e68b-1058">
            <paramref name="format" /> 中的格式规范无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1058">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1059">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1059">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1060">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1060">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
        <Parameter Name="arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="1e68b-1061">复合格式字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1061">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="1e68b-1062">要使用 <c>format</c> 写入的第 1 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1062">The first object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="1e68b-1063">要使用 <c>format</c> 写入的第 2 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1063">The second object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="1e68b-1064">要使用 <c>format</c> 写入的第 3 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1064">The third object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="1e68b-1065">要使用 <c>format</c> 写入的第 4 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1065">The fourth object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1066">使用指定的格式信息将指定的对象和可变长度参数列表的文本表示形式写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1066">Writes the text representation of the specified objects and variable-length parameter list to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1e68b-1067">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1067">This API is not CLS-compliant.</span></span> <span data-ttu-id="1e68b-1068">符合 CLS 的替代方法是 <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1068">The CLS-compliant alternative is <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1e68b-1069">C# 和 Visual Basic 编译器自动解决调用此方法与调用<xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1069">The C# and Visual Basic compilers automatically resolve a call to this method as a call to <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1e68b-1070">此方法使用[复合格式设置功能](~/docs/standard/base-types/composite-formatting.md)要将对象的值转换为它的文本表示形式，并将该表示形式嵌入在字符串中的.NET framework。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1070">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1e68b-1071">生成的字符串写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1071">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1e68b-1072">`format`参数由零个或多个文本混和组成，零个或多个索引占位符称为格式项，对应于此方法的参数列表中的对象。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1072">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1e68b-1073">格式设置的过程将每个格式项替换的文本表示形式相应对象的值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1073">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1e68b-1074">格式项的语法是`{`*索引*[`,`*对齐*] [`:`*formatString*]`}`，它指定强制索引、 可选长度和对齐方式的带格式的文本和一个可选的字符串的格式说明符字符用于控制如何设置相应的对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1074">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1e68b-1075">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1075">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1e68b-1076">有关如方法支持复合格式设置功能的详细信息<xref:System.String.Format%2A>， <xref:System.Text.StringBuilder.AppendFormat%2A>，和的某些重载<xref:System.Console.WriteLine%2A>，请参阅[复合格式设置](~/docs/standard/base-types/composite-formatting.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1076">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1077">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1077">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1078">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1078">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1079">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](~/docs/standard/base-types/enumeration-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1079">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1080">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1080">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1081">下面的示例演示如何使用变量参数的<xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1081">The following example illustrates the use of variable parameters with the <xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="1e68b-1082">使用复合格式字符串和五个格式项调用该方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1082">The method is called with a composite format string and five format items.</span></span>  
  
 [!code-cpp[System.Console.Write#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.write/cpp/con_write.cpp#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1083">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1083">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-1084">
            <paramref name="format" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1084">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1e68b-1085">
            <paramref name="format" /> 中的格式规范无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1085">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1086">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1086">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1087">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1087">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="1e68b-1088">此方法将标有<see langword="vararg" />关键字，这意味着它支持可变数目的参数。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-1088">This method is marked with the <see langword="vararg" /> keyword, which means that it supports a variable number of parameters.</span>
            </span>
            <span data-ttu-id="1e68b-1089">可以从 Visual c + +，调用方法，但不是能从 C# 或 Visual Basic 代码调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-1089">The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</span>
            </span>
            <span data-ttu-id="1e68b-1090">C# 和 Visual Basic 编译器解决调用<see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />一样调用<see cref="M:System.Console.Write(System.String,System.Object[])" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-1090">The C# and Visual Basic compilers resolve calls to <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /> as calls to <see cref="M:System.Console.Write(System.String,System.Object[])" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-1091">将指定的数据（后跟当前行终止符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1091">Writes the specified data, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1092">默认的行终止符是其值是回车符后跟换行符的字符串 ("\r\n"在 C# 中，或`vbCrLf`在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1092">The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or `vbCrLf` in Visual Basic).</span></span> <span data-ttu-id="1e68b-1093">你可以通过设置更改的行终止符<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>属性<xref:System.Console.Out%2A>到另一个字符串的属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1093">You can change the line terminator by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> property to another string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e68b-1094">将当前行终止符写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1094">Writes the current line terminator to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1095">默认的行终止符是其值是回车符后跟换行符的字符串 ("\r\n"在 C# 中，或`vbCrLf`在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1095">The default line terminator is a string whose value is a carriage return followed by a line feed ("\r\n" in C#, or `vbCrLf` in Visual Basic).</span></span> <span data-ttu-id="1e68b-1096">你可以通过设置更改的行终止符<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>属性<xref:System.Console.Out%2A>到另一个字符串的属性。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1096">You can change the line terminator by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property of the <xref:System.Console.Out%2A> property to another string.</span></span> <span data-ttu-id="1e68b-1097">说明如示例所示。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1097">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1098">该示例将从其默认值为"\r\n"更改的行终止符或`vbCrLf`到"\r\n\r\n"或`vbCrLf`  +  `vbCrLf`。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1098">The example changes the line terminator from its default value of "\r\n" or `vbCrLf` to "\r\n\r\n" or `vbCrLf` + `vbCrLf`.</span></span> <span data-ttu-id="1e68b-1099">然后，它调用<xref:System.Console.WriteLine>和<xref:System.Console.WriteLine%28System.String%29>方法来向控制台显示输出。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1099">It then calls the <xref:System.Console.WriteLine> and <xref:System.Console.WriteLine%28System.String%29> methods to display output to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/newline1.cpp#2)]
 [!code-csharp[System.Console.WriteLine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/newline1.cs#2)]
 [!code-vb[System.Console.WriteLine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/newline1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1100">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1100">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1101">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1101">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1102">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1102">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
        <altmember cref="P:System.Console.Out" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-1103">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1103">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1104">将指定布尔值的文本表示形式（后跟当前行终止符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1104">Writes the text representation of the specified Boolean value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1105">文本表示形式`value`由调用<xref:System.Boolean.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1105">The text representation of `value` is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1e68b-1106">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1106">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1107">下面的示例将生成 10 个随机整数，使用<xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType>方法，以指示它们是否即使。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1107">The following example generates ten random integers and uses the <xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType> method to indicate whether they are even.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_boolean1.cpp#4)]
 [!code-csharp[System.Console.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/writeline_boolean1.cs#4)]
 [!code-vb[System.Console.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/writeline_boolean1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1108">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1108">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1109">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1109">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1110">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1110">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-1111">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1111">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1112">将指定的 Unicode 字符值（后跟当前行终止符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1112">Writes the specified Unicode character, followed by the current line terminator, value to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1113">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1113">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1114">下面的示例是一个提示计算器计算 18%提示，并使用<xref:System.Console.WriteLine%2A>方法来显示原始费用金额、 提示，量和总量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1114">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1e68b-1115">示例是一个控制台应用程序要求用户提供作为命令行参数的原始费用金额。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1115">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1116">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1116">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1117">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1117">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1118">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1118">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1e68b-1119">Unicode 字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1119">A Unicode character array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1120">将指定的 Unicode 字符数组（后跟当前行终止符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1120">Writes the specified array of Unicode characters, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1121">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1121">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1122">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1122">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1123">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1123">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1124">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1124">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-1125">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1125">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1126">将指定的 <see cref="T:System.Decimal" /> 值的文本表示形式（后跟当前行终止符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1126">Writes the text representation of the specified <see cref="T:System.Decimal" /> value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1127">文本表示形式`value`由调用<xref:System.Decimal.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1127">The text representation of `value` is produced by calling the <xref:System.Decimal.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1e68b-1128">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1128">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1129">下面的示例是一个提示计算器计算 18%提示，并使用<xref:System.Console.WriteLine%2A>方法来显示原始费用金额、 提示，量和总量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1129">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1e68b-1130">示例是一个控制台应用程序要求用户提供作为命令行参数的原始费用金额。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1130">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1131">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1131">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1132">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1132">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1133">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1133">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-1134">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1134">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1135">将指定的双精度浮点值的文本表示形式（后跟当前行终止符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1135">Writes the text representation of the specified double-precision floating-point value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1136">文本表示形式`value`由调用<xref:System.Double.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1136">The text representation of `value` is produced by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1e68b-1137">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1137">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1138">下面的示例是一个提示计算器计算 18%提示，并使用<xref:System.Console.WriteLine%2A>方法来显示原始费用金额、 提示，量和总量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1138">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1e68b-1139">示例是一个控制台应用程序要求用户提供作为命令行参数的原始费用金额。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1139">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1140">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1140">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1141">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1141">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1142">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1142">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-1143">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1143">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1144">将指定的 32 位有符号整数值的文本表示（后跟当前行的结束符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1144">Writes the text representation of the specified 32-bit signed integer value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1145">文本表示形式`value`由调用<xref:System.Int32.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1145">The text representation of `value` is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1e68b-1146">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1146">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1147">下面的示例是一个提示计算器计算 18%提示，并使用<xref:System.Console.WriteLine%2A>方法来显示原始费用金额、 提示，量和总量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1147">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1e68b-1148">示例是一个控制台应用程序要求用户提供作为命令行参数的原始费用金额。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1148">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1149">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1149">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1150">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1150">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1151">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1151">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-1152">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1152">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1153">将指定的 64 位有符号整数值的文本表示（后跟当前行的结束符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1153">Writes the text representation of the specified 64-bit signed integer value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1154">文本表示形式`value`由调用<xref:System.Int64.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1154">The text representation of `value` is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1e68b-1155">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1155">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1156">下面的示例是一个提示计算器计算 18%提示，并使用<xref:System.Console.WriteLine%2A>方法来显示原始费用金额、 提示，量和总量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1156">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1e68b-1157">示例是一个控制台应用程序要求用户提供作为命令行参数的原始费用金额。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1157">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1158">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1158">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1159">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1159">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1160">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1160">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-1161">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1161">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1162">将指定对象的文本表示形式（后跟当前行终止符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1162">Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1163">如果 `value` 为 `null`，则只写入行终止符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1163">If `value` is `null`, only the line terminator is written.</span></span> <span data-ttu-id="1e68b-1164">否则为`ToString`方法`value`调用以生成其字符串表示形式中，并且生成的字符串会写入到标准输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1164">Otherwise, the `ToString` method of `value` is called to produce its string representation, and the resulting string is written to the standard output stream.</span></span>  
  
 <span data-ttu-id="1e68b-1165">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1165">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1166">下面的示例使用<xref:System.Console.WriteLine%28System.Object%29>方法以显示到控制台对象数组中的每个值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1166">The following example uses the <xref:System.Console.WriteLine%28System.Object%29> method to display each value in an object array to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_obj1.cpp#3)]
 [!code-csharp[System.Console.WriteLine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/writeline_obj1.cs#3)]
 [!code-vb[System.Console.WriteLine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/writeline_obj1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1167">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1167">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1168">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1168">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1169">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1169">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-1170">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1170">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1171">将指定的单精度浮点值的文本表示形式（后跟当前行终止符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1171">Writes the text representation of the specified single-precision floating-point value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1172">文本表示形式`value`由调用<xref:System.Single.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1172">The text representation of `value` is produced by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1e68b-1173">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1173">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1174">下面的示例是一个提示计算器计算 18%提示，并使用<xref:System.Console.WriteLine%2A>方法来显示原始费用金额、 提示，量和总量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1174">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1e68b-1175">示例是一个控制台应用程序要求用户提供作为命令行参数的原始费用金额。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1175">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1176">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1176">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1177">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1177">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1178">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1178">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-1179">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1179">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1180">将指定的字符串值（后跟当前行终止符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1180">Writes the specified string value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1181">如果值为`null`，只将行终止符写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1181">If value is `null`, only the line terminator is written to the standard output stream.</span></span>  
  
 <span data-ttu-id="1e68b-1182">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1182">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1183">该示例将从其默认值为"\r\n"更改的行终止符或`vbCrLf`到"\r\n\r\n"或`vbCrLf`  +  `vbCrLf`。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1183">The example changes the line terminator from its default value of "\r\n" or `vbCrLf` to "\r\n\r\n" or `vbCrLf` + `vbCrLf`.</span></span> <span data-ttu-id="1e68b-1184">然后，它调用<xref:System.Console.WriteLine>和<xref:System.Console.WriteLine%28System.String%29>方法来向控制台显示输出。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1184">It then calls the <xref:System.Console.WriteLine> and <xref:System.Console.WriteLine%28System.String%29> methods to display output to the console.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/newline1.cpp#2)]
 [!code-csharp[System.Console.WriteLine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/newline1.cs#2)]
 [!code-vb[System.Console.WriteLine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/newline1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1185">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1185">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1186">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1186">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1187">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1187">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-1188">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1188">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1189">将指定的 32 位无符号的整数值的文本表示（后跟当前行的结束符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1189">Writes the text representation of the specified 32-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1190">文本表示形式`value`由调用<xref:System.UInt32.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1190">The text representation of `value` is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1e68b-1191">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1191">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1192">下面的示例是一个提示计算器计算 18%提示，并使用<xref:System.Console.WriteLine%2A>方法来显示原始费用金额、 提示，量和总量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1192">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1e68b-1193">示例是一个控制台应用程序要求用户提供作为命令行参数的原始费用金额。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1193">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1194">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1194">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1195">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1195">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1196">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1196">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1e68b-1197">要写入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1197">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1198">将指定的 64 位无符号的整数值的文本表示（后跟当前行的结束符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1198">Writes the text representation of the specified 64-bit unsigned integer value, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1199">文本表示形式`value`由调用<xref:System.UInt64.ToString%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1199">The text representation of `value` is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1e68b-1200">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1200">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1201">下面的示例是一个提示计算器计算 18%提示，并使用<xref:System.Console.WriteLine%2A>方法来显示原始费用金额、 提示，量和总量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1201">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1e68b-1202">示例是一个控制台应用程序要求用户提供作为命令行参数的原始费用金额。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1202">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1203">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1203">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1204">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1204">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1205">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1205">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="1e68b-1206">复合格式字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1206">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="1e68b-1207">要使用 <c>format</c> 写入的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1207">An object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1208">使用指定的格式信息，将指定对象（后跟当前行终止符）的文本表示形式写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1208">Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1209">此方法使用[复合格式设置功能](~/docs/standard/base-types/composite-formatting.md)要将对象的值转换为它的文本表示形式，并将该表示形式嵌入在字符串中的.NET framework。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1209">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1e68b-1210">生成的字符串写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1210">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1e68b-1211">`format`参数由零个或多个文本混和组成，零个或多个索引占位符称为格式项，对应于此方法的参数列表中的对象。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1211">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1e68b-1212">格式设置的过程将每个格式项替换的文本表示形式相应对象的值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1212">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1e68b-1213">格式项的语法是`{`*索引*[`,`*对齐*] [`:`*formatString*]`}`，它指定强制索引、 可选长度和对齐方式的带格式的文本和一个可选的字符串的格式说明符字符用于控制如何设置相应的对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1213">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1e68b-1214">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1214">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1e68b-1215">有关如方法支持复合格式设置功能的详细信息<xref:System.String.Format%2A>， <xref:System.Text.StringBuilder.AppendFormat%2A>，和的某些重载<xref:System.Console.WriteLine%2A>，请参阅[复合格式设置](~/docs/standard/base-types/composite-formatting.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1215">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1216">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1216">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1217">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1217">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1218">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](~/docs/standard/base-types/enumeration-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1218">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1219">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1219">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="1e68b-1220">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1220">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1221">下面的示例调用<xref:System.Console.WriteLine%28System.String%2CSystem.Object%29>方法以显示五个随机生成<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1221">The following example calls the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> method to display five randomly generated <xref:System.Boolean> values.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/WriteLine6.cs#6)]
 [!code-vb[System.Console.WriteLine#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/WriteLine6.vb#6)]  
  
 <span data-ttu-id="1e68b-1222">下面的示例调用<xref:System.Console.WriteLine%28System.String%2CSystem.Object%29>方法以显示当前日期。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1222">The following example calls the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> method to display the current date.</span></span>   <span data-ttu-id="1e68b-1223">请注意，格式项中`format`参数使用"D"[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)当前区域性的长日期格式显示日期。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1223">Note that the format item in the `format` argument uses the "D" [standard date and time format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) to display the date in the long date format of the current culture.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/WriteLine7.cs#7)]
 [!code-vb[System.Console.WriteLine#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/WriteLine7.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1224">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1224">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-1225">
            <paramref name="format" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1225">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1e68b-1226">
            <paramref name="format" /> 中的格式规范无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1226">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1227">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1227">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1228">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1228">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="1e68b-1229">复合格式字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1229">A composite format string.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="1e68b-1230">要使用 <c>format</c> 写入的对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1230">An array of objects to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1231">使用指定的格式信息，将指定的对象数组（后跟当前行终止符）的文本表示形式写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1231">Writes the text representation of the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1232">此方法使用[复合格式设置功能](~/docs/standard/base-types/composite-formatting.md)要将对象的值转换为它的文本表示形式，并将该表示形式嵌入在字符串中的.NET framework。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1232">This method uses the  [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1e68b-1233">生成的字符串写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1233">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1e68b-1234">`format`参数由零个或多个文本混和组成，零个或多个索引占位符称为格式项，对应于此方法的参数列表中的对象。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1234">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1e68b-1235">格式设置的过程将每个格式项替换的文本表示形式相应对象的值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1235">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1e68b-1236">格式项的语法是`{`*索引*[`,`*对齐*] [`:`*formatString*]`}`，它指定强制索引、 可选长度和对齐方式的带格式的文本和一个可选的字符串的格式说明符字符用于控制如何设置相应的对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1236">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1e68b-1237">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1237">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1e68b-1238">有关如方法支持复合格式设置功能的详细信息<xref:System.String.Format%2A>， <xref:System.Text.StringBuilder.AppendFormat%2A>，和的某些重载<xref:System.Console.WriteLine%2A>，请参阅[复合格式设置](~/docs/standard/base-types/composite-formatting.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1238">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1239">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1239">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1240">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1240">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1241">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](~/docs/standard/base-types/enumeration-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1241">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1242">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1242">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="1e68b-1243">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1243">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1244">下面的示例演示数字、日期和枚举的标准格式说明符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1244">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="1e68b-1245">下面的示例是一个提示计算器计算 18%提示，并使用<xref:System.Console.WriteLine%2A>方法来显示原始费用金额、 提示，量和总量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1245">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1e68b-1246">示例是一个控制台应用程序要求用户提供作为命令行参数的原始费用金额。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1246">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1247">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1247">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-1248">
            <paramref name="format" /> 或 <paramref name="arg" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1248">
              <paramref name="format" /> or <paramref name="arg" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1e68b-1249">
            <paramref name="format" /> 中的格式规范无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1249">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1250">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1250">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1251">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1251">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="1e68b-1252">此方法不由 c + + 代码调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-1252">This method is not called by C++ code.</span>
            </span>
            <span data-ttu-id="1e68b-1253">C + + 编译器将解析对调用[System.Console.WriteLine](xref:System.Console.WriteLine*) ，作为对的调用中包含字符串和四个或多个对象参数的列表<see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-1253">The C++ compiler resolves calls to [System.Console.WriteLine](xref:System.Console.WriteLine*) that include a string and a list of four or more object parameters as a call to <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />.</span>
            </span>
            <span data-ttu-id="1e68b-1254">它解析到调用[System.Console.WriteLine](xref:System.Console.WriteLine*) ，作为对的调用中包含字符串和一个对象数组<see cref="M:System.Console.WriteLine(System.String,System.Object)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-1254">It resolves calls to [System.Console.WriteLine](xref:System.Console.WriteLine*) that include a string and an object array as a call to <see cref="M:System.Console.WriteLine(System.String,System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1e68b-1255">Unicode 字符的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1255">An array of Unicode characters.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1e68b-1256">
            <c>buffer</c> 中的起始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1256">The starting position in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1e68b-1257">要写入的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1257">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1258">将指定的 Unicode 字符子数组（后跟当前行终止符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1258">Writes the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1259">此方法将写入`count`字符位置开始`index`的`buffer`写入标准输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1259">This method writes `count` characters starting at position `index` of `buffer` to the standard output stream.</span></span>  
  
 <span data-ttu-id="1e68b-1260">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1260">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-1261">
            <paramref name="buffer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1261">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1e68b-1262">
            <paramref name="index" /> 或 <paramref name="count" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1262">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1e68b-1263">
            <paramref name="index" /> 加 <paramref name="count" /> 指定不在 <paramref name="buffer" /> 内的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1263">
              <paramref name="index" /> plus <paramref name="count" /> specify a position that is not within <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1264">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1264">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1265">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1265">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1266">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1266">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="1e68b-1267">复合格式字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1267">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="1e68b-1268">要使用 <c>format</c> 写入的第 1 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1268">The first object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="1e68b-1269">要使用 <c>format</c> 写入的第 2 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1269">The second object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1270">使用指定的格式信息，将指定对象的文本表示形式（后跟当前行终止符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1270">Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1271">此方法使用[复合格式设置功能](~/docs/standard/base-types/composite-formatting.md)要将对象的值转换为它的文本表示形式，并将该表示形式嵌入在字符串中的.NET framework。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1271">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1e68b-1272">生成的字符串写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1272">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1e68b-1273">`format`参数由零个或多个文本混和组成，零个或多个索引占位符称为格式项，对应于此方法的参数列表中的对象。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1273">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1e68b-1274">格式设置的过程将每个格式项替换的文本表示形式相应对象的值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1274">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1e68b-1275">格式项的语法是`{`*索引*[`,`*对齐*] [`:`*formatString*]`}`，它指定强制索引、 可选长度和对齐方式的带格式的文本和一个可选的字符串的格式说明符字符用于控制如何设置相应的对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1275">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1e68b-1276">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1276">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1e68b-1277">有关如方法支持复合格式设置功能的详细信息<xref:System.String.Format%2A>， <xref:System.Text.StringBuilder.AppendFormat%2A>，和的某些重载<xref:System.Console.WriteLine%2A>，请参阅[复合格式设置](~/docs/standard/base-types/composite-formatting.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1277">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1278">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1278">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1279">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1279">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1280">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](~/docs/standard/base-types/enumeration-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1280">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1281">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1281">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="1e68b-1282">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1282">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1283">下面的示例演示数字、日期和枚举的标准格式说明符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1283">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="1e68b-1284">下面的示例是一个提示计算器计算 18%提示，并使用<xref:System.Console.WriteLine%2A>方法来显示原始费用金额、 提示，量和总量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1284">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1e68b-1285">示例是一个控制台应用程序要求用户提供作为命令行参数的原始费用金额。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1285">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1286">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1286">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-1287">
            <paramref name="format" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1287">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1e68b-1288">
            <paramref name="format" /> 中的格式规范无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1288">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1289">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1289">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1290">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1290">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="1e68b-1291">复合格式字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1291">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="1e68b-1292">要使用 <c>format</c> 写入的第 1 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1292">The first object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="1e68b-1293">要使用 <c>format</c> 写入的第 2 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1293">The second object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="1e68b-1294">要使用 <c>format</c> 写入的第 3 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1294">The third object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1295">使用指定的格式信息，将指定对象的文本表示形式（后跟当前行终止符）写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1295">Writes the text representation of the specified objects, followed by the current line terminator, to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e68b-1296">此方法使用[复合格式设置功能](~/docs/standard/base-types/composite-formatting.md)要将对象的值转换为它的文本表示形式，并将该表示形式嵌入在字符串中的.NET framework。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1296">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1e68b-1297">生成的字符串写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1297">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1e68b-1298">`format`参数由零个或多个文本混和组成，零个或多个索引占位符称为格式项，对应于此方法的参数列表中的对象。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1298">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1e68b-1299">格式设置的过程将每个格式项替换的文本表示形式相应对象的值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1299">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1e68b-1300">格式项的语法是`{`*索引*[`,`*对齐*] [`:`*formatString*]`}`，它指定强制索引、 可选长度和对齐方式的带格式的文本和一个可选的字符串的格式说明符字符用于控制如何设置相应的对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1300">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1e68b-1301">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1301">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1e68b-1302">有关如方法支持复合格式设置功能的详细信息<xref:System.String.Format%2A>， <xref:System.Text.StringBuilder.AppendFormat%2A>，和的某些重载<xref:System.Console.WriteLine%2A>，请参阅[复合格式设置](~/docs/standard/base-types/composite-formatting.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1302">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1303">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1303">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1304">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1304">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1305">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](~/docs/standard/base-types/enumeration-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1305">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1306">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1306">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="1e68b-1307">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1307">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1308">下面的示例演示数字、日期和枚举的标准格式说明符。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1308">The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.</span></span>  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 <span data-ttu-id="1e68b-1309">下面的示例是一个提示计算器计算 18%提示，并使用<xref:System.Console.WriteLine%2A>方法来显示原始费用金额、 提示，量和总量。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1309">The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount.</span></span> <span data-ttu-id="1e68b-1310">示例是一个控制台应用程序要求用户提供作为命令行参数的原始费用金额。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1310">The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.</span></span>  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1311">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1311">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-1312">
            <paramref name="format" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1312">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1e68b-1313">
            <paramref name="format" /> 中的格式规范无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1313">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1314">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1314">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1315">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1315">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
        <Parameter Name="arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="1e68b-1316">复合格式字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1316">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="1e68b-1317">要使用 <c>format</c> 写入的第 1 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1317">The first object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="1e68b-1318">要使用 <c>format</c> 写入的第 2 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1318">The second object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="1e68b-1319">要使用 <c>format</c> 写入的第 3 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1319">The third object to write using <c>format</c>.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="1e68b-1320">要使用 <c>format</c> 写入的第 4 个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1320">The fourth object to write using <c>format</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e68b-1321">使用指定的格式信息，将指定的对象和可变长度参数列表（后跟当前行终止符）的文本表示形式写入标准输出流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1321">Writes the text representation of the specified objects and variable-length parameter list, followed by the current line terminator, to the standard output stream using the specified format information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1e68b-1322">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1322">This API is not CLS-compliant.</span></span> <span data-ttu-id="1e68b-1323">符合 CLS 的替代方法是 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1323">The CLS-compliant alternative is <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1e68b-1324">C# 和 Visual Basic 编译器自动解决调用此方法与调用<xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1324">The C# and Visual Basic compilers automatically resolve a call to this method as a call to <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1e68b-1325">此方法使用[复合格式设置功能](~/docs/standard/base-types/composite-formatting.md)要将对象的值转换为它的文本表示形式，并将该表示形式嵌入在字符串中的.NET framework。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1325">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="1e68b-1326">生成的字符串写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1326">The resulting string is written to the output stream.</span></span>  
  
 <span data-ttu-id="1e68b-1327">`format`参数由零个或多个文本混和组成，零个或多个索引占位符称为格式项，对应于此方法的参数列表中的对象。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1327">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="1e68b-1328">格式设置的过程将每个格式项替换的文本表示形式相应对象的值。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1328">The formatting process replaces each format item with the text representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="1e68b-1329">格式项的语法是`{`*索引*[`,`*对齐*] [`:`*formatString*]`}`，它指定强制索引、 可选长度和对齐方式的带格式的文本和一个可选的字符串的格式说明符字符用于控制如何设置相应的对象的值的格式。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1329">The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.</span></span>  
  
 <span data-ttu-id="1e68b-1330">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1330">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.</span></span>  
  
-   <span data-ttu-id="1e68b-1331">有关如方法支持复合格式设置功能的详细信息<xref:System.String.Format%2A>， <xref:System.Text.StringBuilder.AppendFormat%2A>，和的某些重载<xref:System.Console.WriteLine%2A>，请参阅[复合格式设置](~/docs/standard/base-types/composite-formatting.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1331">For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1332">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1332">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1333">有关日期和时间格式说明符的详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1333">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1334">有关枚举格式说明符的详细信息，请参阅[枚举格式字符串](~/docs/standard/base-types/enumeration-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1334">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1e68b-1335">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1335">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="1e68b-1336">有关行终止符的详细信息，请参阅备注部分的<xref:System.Console.WriteLine%2A>不带参数的方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1336">For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e68b-1337">下面的示例演示如何使用变量自变量使用<xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29>方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1337">The following example illustrates the use of variable arguments with the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="1e68b-1338">使用复合格式字符串和五个格式项调用该方法。</span><span class="sxs-lookup"><span data-stu-id="1e68b-1338">The method is called with a composite format string and five format items.</span></span>  
  
 [!code-cpp[System.Console.WriteLine#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_vararg.cpp#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1e68b-1339">出现 I/O 错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1339">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e68b-1340">
            <paramref name="format" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1340">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1e68b-1341">
            <paramref name="format" /> 中的格式规范无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1341">The format specification in <paramref name="format" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1e68b-1342">修改安全顶级窗口和子窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1342">for modifying safe top-level windows and subwindows.</span>
          </span>
          <span data-ttu-id="1e68b-1343">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1e68b-1343">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="1e68b-1344">此方法将标有<see langword="vararg" />关键字，这意味着它支持可变数目的参数。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-1344">This method is marked with the <see langword="vararg" /> keyword, which means that it supports a variable number of parameters.</span>
            </span>
            <span data-ttu-id="1e68b-1345">可以从 Visual c + +，调用方法，但不是能从 C# 或 Visual Basic 代码调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-1345">The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code.</span>
            </span>
            <span data-ttu-id="1e68b-1346">C# 和 Visual Basic 编译器解决调用<see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />一样调用<see cref="M:System.Console.WriteLine(System.String,System.Object[])" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e68b-1346">The C# and Visual Basic compilers resolve calls to <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /> as calls to <see cref="M:System.Console.WriteLine(System.String,System.Object[])" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>