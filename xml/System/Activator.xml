<Type Name="Activator" FullName="System.Activator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f08f871f06a5bb5712acbc5adee12315d853a99c" />
    <Meta Name="ms.sourcegitcommit" Value="29c771f79cf4eac4f49e5fae5f1aa8b457acf146" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/21/2018" />
    <Meta Name="ms.locfileid" Value="36299046" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Activator : System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Activator extends System.Object implements class System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="DocId" Value="T:System.Activator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Activator&#xA;Implements _Activator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activator sealed : System::Runtime::InteropServices::_Activator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Activator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Activator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="92943-101">包含特定的方法，用以在本地或从远程创建对象类型，或获取对现有远程对象的引用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="92943-101">Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects.</span>
      </span>
      <span data-ttu-id="92943-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="92943-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-103"><xref:System.Activator.CreateInstance%2A>方法创建一个实例通过调用匹配程度最高的构造函数的程序集中定义的类型指定的参数。</span><span class="sxs-lookup"><span data-stu-id="92943-103">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type defined in an assembly by invoking the constructor that best matches the specified arguments.</span></span> <span data-ttu-id="92943-104">如果未不指定任何参数，则调用没有采用任何参数，即默认构造函数，该构造函数。</span><span class="sxs-lookup"><span data-stu-id="92943-104">If no arguments are specified, the constructor that takes no parameters, that is, the default constructor, is invoked.</span></span>  
  
 <span data-ttu-id="92943-105">您必须有足够的权限，以搜索并调用构造函数;否则，会引发异常。</span><span class="sxs-lookup"><span data-stu-id="92943-105">You must have sufficient permission to search for and call a constructor; otherwise, an exception is thrown.</span></span> <span data-ttu-id="92943-106">默认情况下，仅公共构造函数被视为的构造函数在搜索过程中。</span><span class="sxs-lookup"><span data-stu-id="92943-106">By default, only public constructors are considered during the search for a constructor.</span></span> <span data-ttu-id="92943-107">如果可以找到任何构造函数或默认构造函数，是引发异常。</span><span class="sxs-lookup"><span data-stu-id="92943-107">If no constructor or default constructor can be found, an exception is thrown.</span></span>  
  
 <span data-ttu-id="92943-108">联编程序参数指定合适的构造函数的程序集中搜索的对象。</span><span class="sxs-lookup"><span data-stu-id="92943-108">A binder parameter specifies an object that searches an assembly for a suitable constructor.</span></span> <span data-ttu-id="92943-109">你可以指定你自己的活页夹和搜索条件。</span><span class="sxs-lookup"><span data-stu-id="92943-109">You can specify your own binder and search criteria.</span></span> <span data-ttu-id="92943-110">如果未不指定任何联编，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="92943-110">If no binder is specified, a default binder is used.</span></span> <span data-ttu-id="92943-111">有关更多信息，请参见 <xref:System.Reflection.Binder?displayProperty=nameWithType> 和 <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> 类。</span><span class="sxs-lookup"><span data-stu-id="92943-111">For more information, see the <xref:System.Reflection.Binder?displayProperty=nameWithType> and <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> classes.</span></span>  
  
 <span data-ttu-id="92943-112">Evidence 参数会影响的安全策略和构造函数的权限。</span><span class="sxs-lookup"><span data-stu-id="92943-112">An evidence parameter affects the security policy and permissions for the constructor.</span></span> <span data-ttu-id="92943-113">有关更多信息，请参见 <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> 类。</span><span class="sxs-lookup"><span data-stu-id="92943-113">For more information, see the <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="92943-114">可以在本地或远程站点创建类型的实例。</span><span class="sxs-lookup"><span data-stu-id="92943-114">An instance of a type can be created at a local or remote site.</span></span> <span data-ttu-id="92943-115">如果远程创建的类型、 激活特性参数指定远程网站的 URI。</span><span class="sxs-lookup"><span data-stu-id="92943-115">If the type is created remotely, an activation attribute parameter specifies the URI of the remote site.</span></span> <span data-ttu-id="92943-116">用于创建实例的调用可能会到达该远程站点之前通过中间站点。</span><span class="sxs-lookup"><span data-stu-id="92943-116">The call to create the instance might pass through intermediary sites before it reaches the remote site.</span></span> <span data-ttu-id="92943-117">环境中或上下文，调用在远程和中间站点运行，则可以修改其他激活特性。</span><span class="sxs-lookup"><span data-stu-id="92943-117">Other activation attributes can modify the environment, or context, in which the call operates at the remote and intermediary sites.</span></span>  
  
 <span data-ttu-id="92943-118">如果实例在本地创建，则返回对该对象的引用。</span><span class="sxs-lookup"><span data-stu-id="92943-118">If the instance is created locally, a reference to that object is returned.</span></span> <span data-ttu-id="92943-119">如果从远程创建实例，则返回到代理服务器的引用。</span><span class="sxs-lookup"><span data-stu-id="92943-119">If the instance is created remotely, a reference to a proxy is returned.</span></span> <span data-ttu-id="92943-120">就像它是本地对象，将通过代理操作远程对象。</span><span class="sxs-lookup"><span data-stu-id="92943-120">The remote object is manipulated through the proxy as if it were a local object.</span></span>  
  
 <span data-ttu-id="92943-121"><xref:System.Activator.GetObject%2A>方法创建的当前正在运行远程对象、 服务器激活的已知对象或 XML Web 服务的代理。</span><span class="sxs-lookup"><span data-stu-id="92943-121">The <xref:System.Activator.GetObject%2A> method creates a proxy to a currently running remote object, server-activated well-known object, or XML Web service.</span></span> <span data-ttu-id="92943-122">你可以指定连接中，即通道。</span><span class="sxs-lookup"><span data-stu-id="92943-122">You can specify the connection medium, that is, the channel.</span></span> <span data-ttu-id="92943-123">有关更多信息，请参见 <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> 类。</span><span class="sxs-lookup"><span data-stu-id="92943-123">For more information, see the <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="92943-124">程序集包含类型定义。</span><span class="sxs-lookup"><span data-stu-id="92943-124">Assemblies contain type definitions.</span></span> <span data-ttu-id="92943-125"><xref:System.Activator.CreateInstance%2A>方法从当前正在运行的程序集创建类型的一个实例。</span><span class="sxs-lookup"><span data-stu-id="92943-125">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type from a currently running assembly.</span></span> <span data-ttu-id="92943-126"><xref:System.Activator.CreateInstanceFrom%2A>方法从包含程序集的文件创建一个实例。</span><span class="sxs-lookup"><span data-stu-id="92943-126">The <xref:System.Activator.CreateInstanceFrom%2A> method creates an instance from a file that contains an assembly.</span></span> <span data-ttu-id="92943-127"><xref:System.Activator.CreateComInstanceFrom%2A>方法从文件包含的程序集创建 COM 对象的一个实例。</span><span class="sxs-lookup"><span data-stu-id="92943-127">The <xref:System.Activator.CreateComInstanceFrom%2A> method creates an instance of a COM object from a file that contains an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92943-128">下面的示例演示如何使用<xref:System.Activator>类在运行时动态构造对象。</span><span class="sxs-lookup"><span data-stu-id="92943-128">The following example shows how to use the <xref:System.Activator> class to dynamically construct objects at run time.</span></span>  
  
 [!code-cpp[ActivatorX#1](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#1)]
 [!code-csharp[ActivatorX#1](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#1)]
 [!code-vb[ActivatorX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateComInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92943-129">创建指定名称的 COM 对象的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-129">Creates an instance of the COM object whose name is specified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="92943-130">包含某程序集的文件的名称，将在该程序集内查找名为 <c>typeName</c> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-130">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-131">首选类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-131">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-132">使用命名的程序集文件和默认构造函数，创建指定名称的 COM 对象的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-132">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-133">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-133">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-134">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>方法进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-134">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="92943-135">A<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>属性值为`true`必须以显式或默认方式对 COM 类型应用因此<xref:System.Activator.CreateComInstanceFrom%2A>方法可以创建该类型的实例; 否则为<xref:System.TypeLoadException>引发。</span><span class="sxs-lookup"><span data-stu-id="92943-135">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="92943-136">有关可由调用的方法引发其他异常的信息，请参阅的异常部分<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="92943-136">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-137">从开始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，此方法可以用于创建非公共类型，如果调用方已被授予<xref:System.Security.Permissions.ReflectionPermission>与<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>标志以及是否限制调用方授予为包含非公共类型的程序集的授予集设置或其子集。</span><span class="sxs-lookup"><span data-stu-id="92943-137">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="92943-138">(请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="92943-138">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="92943-139">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="92943-139">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-140">
            <paramref name="typeName" /> 或 <paramref name="assemblyName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-140">
              <paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-141">无法通过 COM 创建实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-141">An instance cannot be created through COM.</span>
          </span>
          <span data-ttu-id="92943-142">- 或 -  在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-142">-or-  <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-143">未找到匹配的构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-143">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-144">未找到 <paramref name="assemblyName" />，或者你正在试图加载的模块未指定文件扩展名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-144">
              <paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-145">无法创建抽象类的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-145">Cannot create an instance of an abstract class.</span>
          </span>
          <span data-ttu-id="92943-146">- 或 -  使用晚期绑定机制调用了此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-146">-or-  This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-147">调用方不能为非继承自 <see cref="T:System.MarshalByRefObject" /> 的对象提供激活属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-147">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92943-148">
            <paramref name="assemblyName" /> 为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-148">
              <paramref name="assemblyName" /> is the empty string ("").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-149">用于访问非公共类型，而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-149">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-150">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-150">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="92943-151">包含某程序集的文件的名称，将在该程序集内查找名为 <c>typeName</c> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-151">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-152">首选类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-152">The name of the preferred type.</span>
          </span>
        </param>
        <param name="hashValue">
          <span data-ttu-id="92943-153">计算所得的哈希代码的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-153">The value of the computed hash code.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="92943-154">用于对文件进行哈希计算并生成强名称的哈希算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-154">The hash algorithm used for hashing files and generating the strong name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-155">使用命名的程序集文件和默认构造函数，创建指定名称的 COM 对象的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-155">Creates an instance of the COM object whose name is specified, using the named assembly file and the default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-156">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-156">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-157">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>方法进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-157">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="92943-158">A<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>属性值为`true`必须以显式或默认方式对 COM 类型应用因此<xref:System.Activator.CreateComInstanceFrom%2A>方法可以创建该类型的实例; 否则为<xref:System.TypeLoadException>引发。</span><span class="sxs-lookup"><span data-stu-id="92943-158">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="92943-159">有关可由调用的方法引发其他异常的信息，请参阅的异常部分<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="92943-159">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-160">从开始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，此方法可以用于创建非公共类型，如果调用方已被授予<xref:System.Security.Permissions.ReflectionPermission>与<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>标志以及是否限制调用方授予为包含非公共类型的程序集的授予集设置或其子集。</span><span class="sxs-lookup"><span data-stu-id="92943-160">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="92943-161">(请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="92943-161">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="92943-162">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="92943-162">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-163">
            <paramref name="typeName" /> 或 <paramref name="assemblyName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-163">
              <paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92943-164">
            <paramref name="assemblyName" /> 为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-164">
              <paramref name="assemblyName" /> is the empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="92943-165">一个程序集或模块用两个不同的证据加载了两次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-165">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="92943-166">- 或 -  <paramref name="assemblyName" /> 超过系统定义的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-166">-or-  <paramref name="assemblyName" /> is longer than the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-167">未找到 <paramref name="assemblyName" />，或者你正在试图加载的模块未指定文件扩展名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-167">
              <paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="92943-168">
            <paramref name="assemblyName" /> 已找到，但无法加载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-168">
              <paramref name="assemblyName" /> is found but cannot be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-169">
            <paramref name="assemblyName" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-169">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="92943-170">指定了不以“file://”开头的基本代码，且没有所需的 <see langword="WebPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-170">A code base that does not start with "file://" was specified without the required <see langword="WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-171">无法通过 COM 创建实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-171">An instance cannot be created through COM.</span>
          </span>
          <span data-ttu-id="92943-172">- 或 -  在 <paramref name="assemblyName" /> 中找不到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-172">-or-  <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-173">未找到匹配的构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-173">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-174">无法创建抽象类的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-174">An instance of an abstract class cannot be created.</span>
          </span>
          <span data-ttu-id="92943-175">- 或 -  使用晚期绑定机制调用了此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-175">-or-  This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-176">调用方不能为非继承自 <see cref="T:System.MarshalByRefObject" /> 的对象提供激活属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-176">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-177">用于访问非公共类型，而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-177">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-178">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-178">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="92943-179">用于读取开头"file://"的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-179">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="92943-180">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-180">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="92943-181">用于读取一个 URI，不以"file://"开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-181">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92943-182">使用与指定参数匹配程度最高的构造函数创建指定类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-182">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationContext">
          <span data-ttu-id="92943-183">一个激活上下文对象，用于指定要创建的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-183">An activation context object that specifies the object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-184">创建类型的一个实例，该类型由指定的 <see cref="T:System.ActivationContext" /> 对象指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-184">Creates an instance of the type designated by the specified <see cref="T:System.ActivationContext" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-185">要访问新创建的对象则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-185">A handle that must be unwrapped to access the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-186">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>方法进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-186">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="92943-187">设置域策略，以便基于应用程序的安全模型，在基于清单的激活过程中使用的激活上下文。</span><span class="sxs-lookup"><span data-stu-id="92943-187">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="92943-188"><xref:System.ActivationContext>类包含<xref:System.ApplicationIdentity>提供对应用程序清单的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="92943-188">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="92943-189">有关更多信息，请参见 <xref:System.Security.Policy.ApplicationSecurityManager> 类。</span><span class="sxs-lookup"><span data-stu-id="92943-189">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="92943-190">要创建的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-190">The type of object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-191">使用指定类型的默认构造函数来创建该类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-191">Creates an instance of the specified type using that type's default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-192">对新创建对象的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-192">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-193">要调用构造函数必须可访问。</span><span class="sxs-lookup"><span data-stu-id="92943-193">The constructor to be invoked must be accessible.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-194">从开始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，此方法可以用于访问非公共类型，如果调用方已被授予<xref:System.Security.Permissions.ReflectionPermission>与<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>标志以及是否限制调用方授予为包含非公共类型的程序集的授予集设置或其子集。</span><span class="sxs-lookup"><span data-stu-id="92943-194">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="92943-195">(请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="92943-195">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="92943-196">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="92943-196">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92943-197">下面的代码示例演示如何调用<xref:System.Activator.CreateInstance%28System.Type%29>方法。</span><span class="sxs-lookup"><span data-stu-id="92943-197">The following code example demonstrates how to call the <xref:System.Activator.CreateInstance%28System.Type%29> method.</span></span> <span data-ttu-id="92943-198">创建几种不同类型的实例，并显示其默认值。</span><span class="sxs-lookup"><span data-stu-id="92943-198">Instances of several different types are created and their default values are displayed.</span></span>  
  
 [!code-cpp[ActivatorX#4](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/source2.cpp#4)]
 [!code-csharp[ActivatorX#4](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/source2.cs#4)]
 [!code-vb[ActivatorX#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/source2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-199">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-199">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92943-200">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-200">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="92943-201">- 或 -  <paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-201">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-202">
            <paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-202">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="92943-203">- 或 -  不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-203">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="92943-204">- 或 -  包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-204">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-205">正在被调用的构造函数引发了一个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-205">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-206">
            <block subset="none" type="note">
              <para>改为在 [用于 Windows 应用商店应用的 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) 或 [可移植类库](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中捕获基类异常 <see cref="T:System.MemberAccessException" />。</para>
            </block>  调用方没有调用此构造函数的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-206">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.  </para>
              </block>  The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-207">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-207">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="92943-208">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-208">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-209">
            <block subset="none" type="note">
              <para> 改为在 [用于 Windows 应用商店应用的 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) 或 [可移植类库](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中捕获基类异常 <see cref="T:System.MissingMemberException" />。</para>
            </block>  找不到匹配的公共构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-209">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.  </para>
              </block>  No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="92943-210">
            <paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-210">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-211">
            <paramref name="type" /> 不是有效类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-211">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-212">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-212">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-213">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-213">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-214">用于访问非公共类型，而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-214">for accessing nonpublic types regardless of their grant sets.</span>
          </span>
          <span data-ttu-id="92943-215">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-215">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationCustomData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext">
          <span data-ttu-id="92943-216">一个激活上下文对象，用于指定要创建的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-216">An activation context object that specifies the object to create.</span>
          </span>
        </param>
        <param name="activationCustomData">
          <span data-ttu-id="92943-217">一个包含自定义激活数据的 Unicode 字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-217">An array of Unicode strings that contain custom activation data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-218">创建类型的一个实例，该类型由指定的 <see cref="T:System.ActivationContext" /> 对象指定，并由指定的自定义激活数据激活。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-218">Creates an instance of the type that is designated by the specified <see cref="T:System.ActivationContext" /> object and activated with the specified custom activation data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-219">要访问新创建的对象则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-219">A handle that must be unwrapped to access the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-220">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>方法进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-220">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="92943-221">设置域策略，以便基于应用程序的安全模型，在基于清单的激活过程中使用的激活上下文。</span><span class="sxs-lookup"><span data-stu-id="92943-221">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="92943-222"><xref:System.ActivationContext>类包含<xref:System.ApplicationIdentity>提供对应用程序清单的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="92943-222">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="92943-223">有关更多信息，请参见 <xref:System.Security.Policy.ApplicationSecurityManager> 类。</span><span class="sxs-lookup"><span data-stu-id="92943-223">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="92943-224">将在其中查找名为 <c>typeName</c> 的类型的程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-224">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="92943-225">如果 <c>assemblyName</c> 为 <see langword="null" />，则搜索正在执行的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-225">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-226">首选类型的完全限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-226">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-227">使用命名的程序集和默认构造函数，创建名称已指定的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-227">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-228">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-228">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-229">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-229">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
 <span data-ttu-id="92943-230">`assemblyName` 可以是以下方法之一：</span><span class="sxs-lookup"><span data-stu-id="92943-230">`assemblyName` can be either of the following:</span></span>  
  
-   <span data-ttu-id="92943-231">程序集，不带路径或文件扩展名的简单名称。</span><span class="sxs-lookup"><span data-stu-id="92943-231">The simple name of an assembly, without its path or file extension.</span></span> <span data-ttu-id="92943-232">例如，将指定`TypeExtensions`其路径和名称是.\bin\TypeExtensions.dll 程序集。</span><span class="sxs-lookup"><span data-stu-id="92943-232">For example, you would specify `TypeExtensions` for an assembly whose path and name are .\bin\TypeExtensions.dll.</span></span>  
  
-   <span data-ttu-id="92943-233">签名的程序集，其中包括其简单名称、 版本、 区域性和公钥标记; 完整名称例如，"TypeExtensions，Version = 1.0.0.0，Culture = neutral，PublicKeyToken = 181869f2f7435b51"。</span><span class="sxs-lookup"><span data-stu-id="92943-233">The full name of a signed assembly, which consists of its simple name, version, culture, and public key token; for example, "TypeExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=181869f2f7435b51".</span></span>  
  
 <span data-ttu-id="92943-234">有关公共语言运行时如何标识和加载程序集的详细信息，请参阅[运行时如何定位程序集](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="92943-234">For more information on how the common language runtime identifies and loads assemblies, see [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span> <span data-ttu-id="92943-235">有关使用应用程序配置文件以定义程序集的位置的信息，请参阅[指定程序集的位置](~/docs/framework/configure-apps/specify-assembly-location.md)。</span><span class="sxs-lookup"><span data-stu-id="92943-235">For information on using the application configuration file to define assembly locations, see [Specifying an Assembly's Location](~/docs/framework/configure-apps/specify-assembly-location.md).</span></span> <span data-ttu-id="92943-236">如果`assemblyName`位于加载到默认上下文中。</span><span class="sxs-lookup"><span data-stu-id="92943-236">If `assemblyName` is found, it is loaded in the default context.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-237">从开始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，此方法可以用于创建非公共类型，如果调用方已被授予<xref:System.Security.Permissions.ReflectionPermission>与<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>标志以及是否限制调用方授予为包含非公共类型的程序集的授予集设置或其子集。</span><span class="sxs-lookup"><span data-stu-id="92943-237">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="92943-238">(请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="92943-238">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="92943-239">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="92943-239">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92943-240">下面的示例定义一个名为`Person`的程序集中名为`PersonInfo`。</span><span class="sxs-lookup"><span data-stu-id="92943-240">The following example defines a class named `Person` in an assembly named `PersonInfo`.</span></span> <span data-ttu-id="92943-241">请注意，`Person`类具有两个构造函数，其中之一是无参数。</span><span class="sxs-lookup"><span data-stu-id="92943-241">Note that the `Person` class has two constructors, one of which is parameterless.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/personinfo.cs#1)]
 [!code-vb[System.Activator.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/personinfo.vb#1)]  
  
 <span data-ttu-id="92943-242">下面的示例调用<xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29>方法可实例化`Person`类。</span><span class="sxs-lookup"><span data-stu-id="92943-242">The following example calls the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method to instantiate the `Person` class.</span></span> <span data-ttu-id="92943-243">它要求对 PersonInfo.dll 要添加到项目的引用。</span><span class="sxs-lookup"><span data-stu-id="92943-243">It requires a reference to PersonInfo.dll to be added to the project.</span></span> <span data-ttu-id="92943-244">因为<xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29>方法调用`Person`类默认构造函数，该示例将值赋给其`Name`属性。</span><span class="sxs-lookup"><span data-stu-id="92943-244">Because the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method calls the `Person` class default constructor,  the example assigns a value to its `Name` property.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1.cs#2)]
 [!code-vb[System.Activator.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1.vb#2)]  
  
 <span data-ttu-id="92943-245">但是，<xref:System.Activator.CreateInstance%2A>频繁调用以实例化的类型，是跨计算机边界或不在设计时已知。</span><span class="sxs-lookup"><span data-stu-id="92943-245">However, <xref:System.Activator.CreateInstance%2A> is frequently called to instantiate a type that crosses machine boundaries or that is not known at design time.</span></span> <span data-ttu-id="92943-246">在这种情况下，您不能在项目中包含程序集的引用，并不能使对该类型的成员的早期绑定调用。</span><span class="sxs-lookup"><span data-stu-id="92943-246">In this case, you cannot include a reference to the assembly in the project and cannot make early-bound calls to the type's members.</span></span> <span data-ttu-id="92943-247">若要解决此限制，下面的示例使用<xref:System.Activator.CreateInstance%2A>方法以及反射来将值赋给`Person`对象的`Name`属性并显示其值。</span><span class="sxs-lookup"><span data-stu-id="92943-247">To work around this limitation, the following example uses the <xref:System.Activator.CreateInstance%2A> method along with reflection to assign a value to the `Person` object's `Name` property and to display its value.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1a.cs#3)]
 [!code-vb[System.Activator.CreateInstance#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1a.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-248">
            <paramref name="typeName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-248">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-249">未找到匹配的公共构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-249">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-250">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-250">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-251">未找到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-251">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-252">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-252">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-253">你无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-253">You cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-254">通过反射调用的构造函数引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-254">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="92943-255">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-255">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-256">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-256">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-257">
            <paramref name="assemblyName" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-257">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="92943-258">- 或 -  当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-258">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="92943-259">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-259">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="92943-260">一个程序集或模块用两个不同的证据加载了两次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-260">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="92943-261">- 或 -  程序集名称或基本代码无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-261">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-262">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-262">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-263">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-263">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-264">用于访问非公共类型，而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-264">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-265">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-265">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="92943-266">要创建的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-266">The type of object to create.</span>
          </span>
        </param>
        <param name="nonPublic">
          <span data-ttu-id="92943-267">如果公共或非公共默认构造函数可以匹配，则为 <see langword="true" />；如果只有公共默认构造函数可以匹配，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-267">
              <see langword="true" /> if a public or nonpublic default constructor can match; <see langword="false" /> if only a public default constructor can match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-268">使用指定类型的默认构造函数来创建该类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-268">Creates an instance of the specified type using that type's default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-269">对新创建对象的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-269">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="92943-270">从开始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，此方法可以用于访问非公共类型和成员调用方是否已被授予<xref:System.Security.Permissions.ReflectionPermission>与<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>标志和包含的非公共类型和成员的程序集的授予集是否受限制调用方的授予集或其子集。</span><span class="sxs-lookup"><span data-stu-id="92943-270">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="92943-271">(请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="92943-271">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="92943-272">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="92943-272">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-273">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-273">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92943-274">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-274">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="92943-275">- 或 -  <paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-275">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-276">
            <paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-276">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="92943-277">- 或 -  不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-277">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="92943-278">- 或 -  包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-278">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-279">正在被调用的构造函数引发了一个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-279">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-280">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-280">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-281">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-281">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="92943-282">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-282">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-283">未找到匹配的公共构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-283">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="92943-284">
            <paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-284">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-285">
            <paramref name="type" /> 不是有效类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-285">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-286">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-286">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-287">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-287">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-288">用于访问非公共类型和成员而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-288">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-289">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-289">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="92943-290">要创建的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-290">The type of object to create.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="92943-291">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-291">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="92943-292">如果 <c>args</c> 为空数组或为 <see langword="null" />，则调用不带任何参数的构造函数（默认构造函数）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-292">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-293">使用与指定参数匹配程度最高的构造函数创建指定类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-293">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-294">对新创建对象的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-294">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-295">要调用构造函数必须是可访问，并且必须提供与指定的参数列表最具体的匹配。</span><span class="sxs-lookup"><span data-stu-id="92943-295">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-296">从开始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，此方法可以用于访问非公共类型，如果调用方已被授予<xref:System.Security.Permissions.ReflectionPermission>与<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>标志以及是否限制调用方授予为包含非公共类型的程序集的授予集设置或其子集。</span><span class="sxs-lookup"><span data-stu-id="92943-296">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="92943-297">(请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="92943-297">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="92943-298">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="92943-298">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92943-299">下面的示例调用<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29>方法来创建<xref:System.String>对象。</span><span class="sxs-lookup"><span data-stu-id="92943-299">The following example calls the  <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to create a <xref:System.String> object.</span></span> <span data-ttu-id="92943-300">它调用<xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>构造函数实例化一个字符串，包含从字符数组的第 14 个位置开始的十个元素。</span><span class="sxs-lookup"><span data-stu-id="92943-300">It calls the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor to instantiate a string that contains ten elements from a character array starting at the fourteenth position.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/CreateInstance5.cs#5)]
 [!code-vb[System.Activator.CreateInstance#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/CreateInstance5.vb#5)]  
  
 <span data-ttu-id="92943-301">下面的示例创建一个交错的数组，其元素是自变量传递给<xref:System.String>构造函数。</span><span class="sxs-lookup"><span data-stu-id="92943-301">The following example creates a jagged array whose elements are arguments to be passed to a <xref:System.String> constructor.</span></span> <span data-ttu-id="92943-302">该示例然后将传递到每个数组<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29>要调用的相应字符串构造函数方法。</span><span class="sxs-lookup"><span data-stu-id="92943-302">The example then passes each array to the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to invoke the appropriate string constructor.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstance2.cs#4)]
 [!code-vb[System.Activator.CreateInstance#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstance2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-303">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-303">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92943-304">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-304">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="92943-305">- 或 -  <paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-305">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-306">
            <paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-306">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="92943-307">- 或 -  不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-307">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="92943-308">- 或 -  包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-308">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="92943-309">- 或 -  最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-309">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-310">正在被调用的构造函数引发了一个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-310">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-311">
            <block subset="none" type="note">
              <para>改为在 [用于 Windows 应用商店应用的 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) 或 [可移植类库](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中捕获基类异常 <see cref="T:System.MemberAccessException" />。</para>
            </block>  调用方没有调用此构造函数的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-311">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.  </para>
              </block>  The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-312">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-312">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="92943-313">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-313">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-314">
            <block subset="none" type="note">
              <para> 改为在 [用于 Windows 应用商店应用的 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) 或 [可移植类库](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中捕获基类异常 <see cref="T:System.MissingMemberException" />。</para>
            </block>  找不到匹配的公共构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-314">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.  </para>
              </block>  No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="92943-315">
            <paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-315">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-316">
            <paramref name="type" /> 不是有效类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-316">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-317">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-317">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-318">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-318">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-319">用于访问非公共类型，而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-319">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-320">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-320">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (domain As AppDomain, assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="92943-321">在其中创建名为 <c>typeName</c> 的类型的远程域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-321">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="92943-322">将在其中查找名为 <c>typeName</c> 的类型的程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-322">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="92943-323">如果 <c>assemblyName</c> 为 <see langword="null" />，则搜索正在执行的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-323">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-324">首选类型的完全限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-324">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-325">使用命名的程序集和默认构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-325">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-326">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-326">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-327">使用<xref:System.Activator.CreateInstance%2A>托管需要在具有受限安全权限的应用程序域中执行代码。</span><span class="sxs-lookup"><span data-stu-id="92943-327">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="92943-328">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-328">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-329">此方法使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>需要具有完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="92943-329">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-330">
            <paramref name="typeName" /> 或 <paramref name="domain" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-330">
              <paramref name="typeName" /> or <paramref name="domain" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-331">未找到匹配的公共构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-331">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-332">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-332">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-333">未找到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-333">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-334">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-334">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-335">无法创建抽象类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-335">Cannot create an instance of an abstract type.</span>
          </span>
          <span data-ttu-id="92943-336">- 或 -  使用晚期绑定机制调用了此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-336">-or-  This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-337">通过反射调用的构造函数引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-337">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="92943-338">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-338">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-339">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-339">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-340">
            <paramref name="assemblyName" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-340">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="92943-341">- 或 -  当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-341">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="92943-342">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-342">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="92943-343">一个程序集或模块用两个不同的证据加载了两次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-343">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="92943-344">- 或 -  程序集名称或基本代码无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-344">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-345">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-345">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-346">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-346">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-347">表示所有类型的成员上调用操作的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-347">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="92943-348">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-348">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="92943-349">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-349">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="92943-350">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-350">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="92943-351">将在其中查找名为 <c>typeName</c> 的类型的程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-351">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="92943-352">如果 <c>assemblyName</c> 为 <see langword="null" />，则搜索正在执行的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-352">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-353">首选类型的完全限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-353">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="92943-354">包含一个或多个可以参与激活的特性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-354">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="92943-355">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-355">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="92943-356">此参数与客户端激活的对象相关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-356">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="92943-357">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-357">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="92943-358">应改用 Windows Communication Foundation 来开发分布式应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-358">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-359">使用命名的程序集和默认构造函数，创建名称已指定的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-359">Creates an instance of the type whose name is specified, using the named assembly and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-360">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-360">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-361">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-361">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-362">从开始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，此方法可以用于创建非公共类型，如果调用方已被授予<xref:System.Security.Permissions.ReflectionPermission>与<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>标志和非公共类型的授予集是否限制为调用方的授予集或其子集。</span><span class="sxs-lookup"><span data-stu-id="92943-362">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="92943-363">(请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="92943-363">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="92943-364">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="92943-364">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-365">
            <paramref name="typeName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-365">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-366">未找到匹配的公共构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-366">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-367">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-367">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-368">未找到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-368">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-369">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-369">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-370">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-370">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="92943-371">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-371">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-372">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-372">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="92943-373">- 或 -  <paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-373">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="92943-374">- 或 -  <paramref name="activationAttributes" /> 不是 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-374">-or-  <paramref name="activationAttributes" /> is not a <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />  array.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-375">
            <paramref name="assemblyName" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-375">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="92943-376">- 或 -  当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-376">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="92943-377">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-377">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="92943-378">一个程序集或模块用两个不同的证据加载了两次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-378">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="92943-379">- 或 -  程序集名称或基本代码无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-379">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-380">尝试在 <paramref name="activationAttributes" /> 中指定的目标中进行远程激活时发生错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-380">An error occurred when attempting remote activation in a target specified in <paramref name="activationAttributes" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-381">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-381">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-382">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-382">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-383">用于访问非公共类型，而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-383">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-384">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-384">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, object[] args, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="92943-385">要创建的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-385">The type of object to create.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="92943-386">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-386">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="92943-387">如果 <c>args</c> 为空数组或为 <see langword="null" />，则调用不带任何参数的构造函数（默认构造函数）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-387">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="92943-388">包含一个或多个可以参与激活的特性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-388">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="92943-389">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-389">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="92943-390">此参数与客户端激活的对象相关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-390">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="92943-391">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-391">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="92943-392">应改用 Windows Communication Foundation 来开发分布式应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-392">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-393">使用与指定参数匹配程度最高的构造函数创建指定类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-393">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-394">对新创建对象的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-394">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-395">要调用构造函数必须是可访问，并且必须提供与指定的参数列表最具体的匹配。</span><span class="sxs-lookup"><span data-stu-id="92943-395">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-396">从开始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，此方法可以用于访问非公共类型，如果调用方已被授予<xref:System.Security.Permissions.ReflectionPermission>与<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>标志以及是否限制调用方授予为包含非公共类型的程序集的授予集设置或其子集。</span><span class="sxs-lookup"><span data-stu-id="92943-396">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="92943-397">(请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="92943-397">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="92943-398">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="92943-398">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-399">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-399">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92943-400">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-400">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="92943-401">- 或 -  <paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-401">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-402">
            <paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-402">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="92943-403">- 或 -  不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-403">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="92943-404">- 或 -  <paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-404">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="92943-405">- 或 -  包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-405">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="92943-406">- 或 -  最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-406">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-407">正在被调用的构造函数引发了一个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-407">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-408">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-408">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-409">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-409">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="92943-410">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-410">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-411">未找到匹配的公共构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-411">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="92943-412">
            <paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-412">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-413">
            <paramref name="type" /> 不是有效类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-413">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-414">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-414">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-415">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-415">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-416">用于访问非公共类型，而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-416">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-417">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-417">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="92943-418">要创建的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-418">The type of object to create.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="92943-419">影响 <c>type</c> 构造函数搜索的零个或多个位标志的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-419">A combination of zero or more bit flags that affect the search for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-420">如果 <c>bindingAttr</c> 为零，则对公共构造函数进行区分大小写的搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-420">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="92943-421">使用 <c>bindingAttr</c> 和 <c>args</c> 查找和标识 <c></c> 构造函数的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-421">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-422">如果 <c>binder</c> 为 <see langword="null" />，则使用默认活页夹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-422">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="92943-423">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-423">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="92943-424">如果 <c>args</c> 为空数组或为 <see langword="null" />，则调用不带任何参数的构造函数（默认构造函数）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-424">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="92943-425">区域性特定的信息，这些信息控制将 <c>args</c> 强制转换为 <c>type</c> 构造函数所声明的正式类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-425">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-426">如果 <c>culture</c> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-426">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-427">使用与指定参数匹配程度最高的构造函数创建指定类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-427">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-428">对新创建对象的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-428">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-429">要调用构造函数必须提供与指定的活页夹和绑定特性的约束下指定的自变量列表最精确的匹配项。</span><span class="sxs-lookup"><span data-stu-id="92943-429">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-430">从开始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，此方法可以用于访问非公共类型和成员调用方是否已被授予<xref:System.Security.Permissions.ReflectionPermission>与<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>标志和包含的非公共类型和成员的程序集的授予集是否受限制调用方的授予集或其子集。</span><span class="sxs-lookup"><span data-stu-id="92943-430">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="92943-431">(请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="92943-431">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="92943-432">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="92943-432">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-433">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-433">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92943-434">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-434">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="92943-435">- 或 -  <paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-435">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-436">
            <paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-436">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="92943-437">- 或 -  不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-437">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="92943-438">- 或 -  包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-438">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="92943-439">- 或 -  最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-439">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-440">正在被调用的构造函数引发了一个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-440">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-441">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-441">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-442">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-442">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="92943-443">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-443">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-444">未找到匹配的构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-444">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="92943-445">
            <paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-445">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-446">
            <paramref name="type" /> 不是有效类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-446">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-447">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-447">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-448">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-448">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-449">用于访问非公共类型和成员而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-449">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-450">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-450">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="92943-451">要创建的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-451">The type of object to create.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="92943-452">影响 <c>type</c> 构造函数搜索的零个或多个位标志的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-452">A combination of zero or more bit flags that affect the search for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-453">如果 <c>bindingAttr</c> 为零，则对公共构造函数进行区分大小写的搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-453">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="92943-454">使用 <c>bindingAttr</c> 和 <c>args</c> 查找和标识 <c></c> 构造函数的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-454">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-455">如果 <c>binder</c> 为 <see langword="null" />，则使用默认活页夹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-455">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="92943-456">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-456">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="92943-457">如果 <c>args</c> 为空数组或为 <see langword="null" />，则调用不带任何参数的构造函数（默认构造函数）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-457">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="92943-458">区域性特定的信息，这些信息控制将 <c>args</c> 强制转换为 <c>type</c> 构造函数所声明的正式类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-458">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>type</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-459">如果 <c>culture</c> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-459">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="92943-460">包含一个或多个可以参与激活的特性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-460">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="92943-461">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-461">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="92943-462">此参数与客户端激活的对象相关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-462">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="92943-463">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-463">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="92943-464">应改用 Windows Communication Foundation 来开发分布式应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-464">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-465">使用与指定参数匹配程度最高的构造函数创建指定类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-465">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-466">对新创建对象的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-466">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-467">要调用构造函数必须提供与指定的活页夹和绑定特性的约束下指定的自变量列表最精确的匹配项。</span><span class="sxs-lookup"><span data-stu-id="92943-467">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-468">从开始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，此方法可以用于访问非公共类型和成员调用方是否已被授予<xref:System.Security.Permissions.ReflectionPermission>与<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>标志和非公共类型和成员的授予集如果被限制到调用方的授予集或其子集。</span><span class="sxs-lookup"><span data-stu-id="92943-468">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="92943-469">(请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="92943-469">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="92943-470">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="92943-470">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-471">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-471">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92943-472">
            <paramref name="type" /> 不是 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-472">
              <paramref name="type" /> is not a <see langword="RuntimeType" />.</span>
          </span>
          <span data-ttu-id="92943-473">- 或 -  <paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-473">-or-  <paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-474">
            <paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-474">
              <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          </span>
          <span data-ttu-id="92943-475">- 或 -  不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-475">-or-  Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="92943-476">- 或 -  <paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-476">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="92943-477">- 或 -  包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-477">-or-  The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span>
          </span>
          <span data-ttu-id="92943-478">- 或 -  最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-478">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-479">正在被调用的构造函数引发了一个异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-479">The constructor being called throws an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-480">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-480">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-481">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-481">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="92943-482">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-482">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-483">未找到匹配的构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-483">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="92943-484">
            <paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-484">
              <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-485">
            <paramref name="type" /> 不是有效类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-485">
              <paramref name="type" /> is not a valid type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-486">提供的证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-486">for supplying evidence.</span>
          </span>
          <span data-ttu-id="92943-487">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-487">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-488">用于访问非公共类型和成员而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-488">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-489">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-489">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="92943-490">将在其中查找名为 <c>typeName</c> 的类型的程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-490">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="92943-491">如果 <c>assemblyName</c> 为 <see langword="null" />，则搜索正在执行的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-491">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-492">首选类型的完全限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-492">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="92943-493">如果指定对 <c>typeName</c> 的搜索不区分大小写，则为 <see langword="true" />；如果指定搜索要区分大小写，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-493">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="92943-494">影响 <c>typeName</c> 构造函数搜索的零个或多个位标志的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-494">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-495">如果 <c>bindingAttr</c> 为零，则对公共构造函数进行区分大小写的搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-495">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="92943-496">使用 <c>bindingAttr</c> 和 <c>args</c> 查找和标识 <c>typeName</c> 构造函数的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-496">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-497">如果 <c>binder</c> 为 <see langword="null" />，则使用默认活页夹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-497">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="92943-498">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-498">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="92943-499">如果 <c>args</c> 为空数组或为 <see langword="null" />，则调用不带任何参数的构造函数（默认构造函数）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-499">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="92943-500">区域性特定的信息，这些信息控制将 <c>args</c> 强制转换为 <c>typeName</c> 构造函数所声明的正式类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-500">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-501">如果 <c>culture</c> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-501">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="92943-502">包含一个或多个可以参与激活的特性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-502">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="92943-503">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-503">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="92943-504">此参数与客户端激活的对象相关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-504">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="92943-505">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-505">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="92943-506">应改用 Windows Communication Foundation 来开发分布式应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-506">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-507">使用指定的程序集和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-507">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-508">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-508">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-509">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-509">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-510">从开始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，此方法可以用于创建非公共类型和成员调用方是否已被授予<xref:System.Security.Permissions.ReflectionPermission>与<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>标志和包含的非公共类型和成员的程序集的授予集是否受限制调用方的授予集或其子集。</span><span class="sxs-lookup"><span data-stu-id="92943-510">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="92943-511">(请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)42d9dc2a-8fcc-4ff3-b002-4ff260ef3dc5。)</span><span class="sxs-lookup"><span data-stu-id="92943-511">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)42d9dc2a-8fcc-4ff3-b002-4ff260ef3dc5.)</span></span>  
>   
>  <span data-ttu-id="92943-512">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="92943-512">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-513">
            <paramref name="typeName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-513">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-514">未找到匹配的构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-514">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-515">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-515">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-516">未找到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-516">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-517">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-517">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-518">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-518">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-519">通过反射调用的构造函数引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-519">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="92943-520">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-520">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-521">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-521">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="92943-522">- 或 -  <paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-522">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="92943-523">- 或 -  最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-523">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-524">
            <paramref name="assemblyName" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-524">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="92943-525">- 或 -  当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-525">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="92943-526">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-526">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="92943-527">一个程序集或模块用两个不同的证据加载了两次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-527">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="92943-528">- 或 -  程序集名称或基本代码无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-528">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-529">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-529">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-530">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-530">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-531">用于访问非公共类型和成员而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-531">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-532">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-532">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="92943-533">在其中创建名为 <c>typeName</c> 的类型的域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-533">The domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="92943-534">将在其中查找名为 <c>typeName</c> 的类型的程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-534">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="92943-535">如果 <c>assemblyName</c> 为 <see langword="null" />，则搜索正在执行的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-535">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-536">首选类型的完全限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-536">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="92943-537">如果指定对 <c>typeName</c> 的搜索不区分大小写，则为 <see langword="true" />；如果指定搜索要区分大小写，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-537">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="92943-538">影响 <c>typeName</c> 构造函数搜索的零个或多个位标志的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-538">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-539">如果 <c>bindingAttr</c> 为零，则对公共构造函数进行区分大小写的搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-539">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="92943-540">使用 <c>bindingAttr</c> 和 <c>args</c> 查找和标识 <c>typeName</c> 构造函数的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-540">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-541">如果 <c>binder</c> 为 <see langword="null" />，则使用默认活页夹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-541">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="92943-542">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-542">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="92943-543">如果 <c>args</c> 为空数组或为 <see langword="null" />，则调用不带任何参数的构造函数（默认构造函数）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-543">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="92943-544">区域性特定的信息，这些信息控制将 <c>args</c> 强制转换为 <c>typeName</c> 构造函数所声明的正式类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-544">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-545">如果 <c>culture</c> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-545">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="92943-546">包含一个或多个可以参与激活的特性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-546">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="92943-547">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-547">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="92943-548">此参数与客户端激活的对象相关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-548">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="92943-549">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-549">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="92943-550">应改用 Windows Communication Foundation 来开发分布式应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-550">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-551">使用命名的程序集和最匹配所指定参数的构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-551">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-552">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-552">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-553">使用<xref:System.Activator.CreateInstance%2A>托管需要在具有受限安全权限的应用程序域中执行代码。</span><span class="sxs-lookup"><span data-stu-id="92943-553">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="92943-554">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-554">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-555">此方法使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>需要具有完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="92943-555">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-556">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-556">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-557">未找到匹配的构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-557">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-558">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-558">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-559">未找到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-559">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-560">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-560">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-561">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-561">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-562">通过反射调用的构造函数引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-562">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="92943-563">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-563">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-564">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-564">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="92943-565">- 或 -  <paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-565">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="92943-566">- 或 -  最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-566">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-567">
            <paramref name="assemblyName" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-567">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="92943-568">- 或 -  当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-568">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="92943-569">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-569">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="92943-570">一个程序集或模块用两个不同的证据加载了两次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-570">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="92943-571">- 或 -  程序集名称或基本代码无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-571">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="92943-572">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-572">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="92943-573">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-573">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-574">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-574">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-575">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-575">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-576">表示所有类型的成员上调用操作的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-576">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="92943-577">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-577">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="92943-578">将在其中查找名为 <c>typeName</c> 的类型的程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-578">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="92943-579">如果 <c>assemblyName</c> 为 <see langword="null" />，则搜索正在执行的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-579">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-580">首选类型的完全限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-580">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="92943-581">如果指定对 <c>typeName</c> 的搜索不区分大小写，则为 <see langword="true" />；如果指定搜索要区分大小写，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-581">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="92943-582">影响 <c>typeName</c> 构造函数搜索的零个或多个位标志的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-582">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-583">如果 <c>bindingAttr</c> 为零，则对公共构造函数进行区分大小写的搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-583">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="92943-584">使用 <c>bindingAttr</c> 和 <c>args</c> 查找和标识 <c>typeName</c> 构造函数的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-584">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-585">如果 <c>binder</c> 为 <see langword="null" />，则使用默认活页夹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-585">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="92943-586">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-586">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="92943-587">如果 <c>args</c> 为空数组或为 <see langword="null" />，则调用不带任何参数的构造函数（默认构造函数）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-587">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="92943-588">区域性特定的信息，这些信息控制将 <c>args</c> 强制转换为 <c>typeName</c> 构造函数所声明的正式类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-588">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-589">如果 <c>culture</c> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-589">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="92943-590">包含一个或多个可以参与激活的特性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-590">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="92943-591">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-591">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="92943-592">此参数与客户端激活的对象相关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-592">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="92943-593">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-593">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="92943-594">应改用 Windows Communication Foundation 来开发分布式应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-594">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="92943-595">用于做出安全策略决策和授予代码权限的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-595">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-596">使用指定的程序集和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-596">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-597">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-597">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-598">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-598">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-599">从开始[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]，此方法可以用于创建非公共类型和成员调用方是否已被授予<xref:System.Security.Permissions.ReflectionPermission>与<xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType>标志和包含的非公共类型和成员的程序集的授予集是否受限制调用方的授予集或其子集。</span><span class="sxs-lookup"><span data-stu-id="92943-599">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller’s grant set or to a subset thereof.</span></span> <span data-ttu-id="92943-600">(请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。)</span><span class="sxs-lookup"><span data-stu-id="92943-600">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="92943-601">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="92943-601">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-602">
            <paramref name="typeName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-602">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-603">未找到匹配的构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-603">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-604">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-604">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-605">未找到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-605">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-606">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-606">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-607">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-607">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-608">通过反射调用的构造函数引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-608">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="92943-609">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-609">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-610">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-610">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="92943-611">- 或 -  <paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-611">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="92943-612">- 或 -  最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-612">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-613">
            <paramref name="assemblyName" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-613">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="92943-614">- 或 -  当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-614">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="92943-615">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-615">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="92943-616">一个程序集或模块用两个不同的证据加载了两次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-616">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="92943-617">- 或 -  程序集名称或基本代码无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-617">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-618">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-618">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-619">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-619">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-620">用于访问非公共类型和成员而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-620">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-621">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-621">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="92943-622">在其中创建名为 <c>typeName</c> 的类型的域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-622">The domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyName">
          <span data-ttu-id="92943-623">将在其中查找名为 <c>typeName</c> 的类型的程序集的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-623">The name of the assembly where the type named <c>typeName</c> is sought.</span>
          </span>
          <span data-ttu-id="92943-624">如果 <c>assemblyName</c> 为 <see langword="null" />，则搜索正在执行的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-624">If <c>assemblyName</c> is <see langword="null" />, the executing assembly is searched.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-625">首选类型的完全限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-625">The fully qualified name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="92943-626">如果指定对 <c>typeName</c> 的搜索不区分大小写，则为 <see langword="true" />；如果指定搜索要区分大小写，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-626">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="92943-627">影响 <c>typeName</c> 构造函数搜索的零个或多个位标志的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-627">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-628">如果 <c>bindingAttr</c> 为零，则对公共构造函数进行区分大小写的搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-628">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="92943-629">使用 <c>bindingAttr</c> 和 <c>args</c> 查找和标识 <c>typeName</c> 构造函数的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-629">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-630">如果 <c>binder</c> 为 <see langword="null" />，则使用默认活页夹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-630">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="92943-631">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-631">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="92943-632">如果 <c>args</c> 为空数组或为 <see langword="null" />，则调用不带任何参数的构造函数（默认构造函数）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-632">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="92943-633">区域性特定的信息，这些信息控制将 <c>args</c> 强制转换为 <c>typeName</c> 构造函数所声明的正式类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-633">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-634">如果 <c>culture</c> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-634">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="92943-635">包含一个或多个可以参与激活的特性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-635">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="92943-636">通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-636">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span>
          </span>
          <span data-ttu-id="92943-637">
            <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 指定激活远程对象所需的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-637">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="92943-638">用于做出安全策略决策和授予代码权限的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-638">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-639">使用命名的程序集和最匹配所指定参数的构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-639">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-640">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-640">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-641">使用<xref:System.Activator.CreateInstance%2A>托管需要在具有受限安全权限的应用程序域中执行代码。</span><span class="sxs-lookup"><span data-stu-id="92943-641">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="92943-642">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-642">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-643">此方法使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>需要具有完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="92943-643">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-644">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-644">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-645">未找到匹配的构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-645">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-646">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-646">
              <paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-647">未找到 <paramref name="assemblyName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-647">
              <paramref name="assemblyName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-648">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-648">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-649">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-649">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-650">通过反射调用的构造函数引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-650">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">
          <span data-ttu-id="92943-651">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-651">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-652">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-652">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span>
          </span>
          <span data-ttu-id="92943-653">- 或 -  <paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-653">-or-  <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
          <span data-ttu-id="92943-654">- 或 -  最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-654">-or-  The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-655">
            <paramref name="assemblyName" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-655">
              <paramref name="assemblyName" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="92943-656">- 或 -  当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-656">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="92943-657">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-657">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="92943-658">一个程序集或模块用两个不同的证据加载了两次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-658">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="92943-659">- 或 -  程序集名称或基本代码无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-659">-or-  The assembly name or code base is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-660">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-660">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-661">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-661">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-662">表示所有类型的成员上调用操作的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-662">for the ability to invoke operations on all type members.</span>
          </span>
          <span data-ttu-id="92943-663">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-663">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="92943-664">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-664">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="92943-665">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-665">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CreateInstance&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CreateInstance&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T CreateInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="92943-666">要创建的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-666">The type to create.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="92943-667">使用无参数构造函数，创建指定泛型类型参数所指定类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-667">Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-668">对新创建对象的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-668">A reference to the newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-669"><xref:System.Activator.CreateInstance%60%601>编译器使用泛型方法来实现指定类型参数的类型实例化。</span><span class="sxs-lookup"><span data-stu-id="92943-669">The <xref:System.Activator.CreateInstance%60%601> generic method is used by compilers to implement the instantiation of types specified by type parameters.</span></span> <span data-ttu-id="92943-670">例如，在下面的泛型方法的实现`new T()`(`gcnew T()` c + + 中) 使用<xref:System.Activator.CreateInstance%60%601>泛型方法。</span><span class="sxs-lookup"><span data-stu-id="92943-670">For example, in the following generic method, the implementation of `new T()` (`gcnew T()` in C++) uses the <xref:System.Activator.CreateInstance%60%601> generic method.</span></span>  
  
 [!code-cpp[System.Activation.CreateInstance~~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cpp/remarks.cpp#1)]
 [!code-csharp[System.Activation.CreateInstance~~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cs/remarks.cs#1)]
 [!code-vb[System.Activation.CreateInstance~~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activation.createinstance~~1/vb/remarks.vb#1)]  
  
 <span data-ttu-id="92943-671">一般情况下，没有无需使用<xref:System.Activator.CreateInstance%60%601>在应用程序中的泛型方法的代码，因为必须在编译时知道的类型。</span><span class="sxs-lookup"><span data-stu-id="92943-671">In general, there is no use for the <xref:System.Activator.CreateInstance%60%601> generic method in application code, because the type must be known at compile time.</span></span> <span data-ttu-id="92943-672">如果在编译时已知类型，可以使用正常的实例化语法 (`new`在 C# 中，运算符`New`在 Visual Basic 中， `gcnew` c + + 中)。</span><span class="sxs-lookup"><span data-stu-id="92943-672">If the type is known at compile time, normal instantiation syntax can be used (`new` operator in C#, `New` in Visual Basic, `gcnew` in C++).</span></span> <span data-ttu-id="92943-673">如果类型不在编译时已知的则可以调用的非泛型重载<xref:System.Activator.CreateInstance%2A>。</span><span class="sxs-lookup"><span data-stu-id="92943-673">If the type is not known at compile time, you can call a non-generic overload of <xref:System.Activator.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="92943-674">不有的任何重载<xref:System.Activator.CreateInstance%60%601>因为非泛型重载的需要自变量列表的泛型方法<xref:System.Activator.CreateInstance%2A>已提供后期绑定构造函数解析。</span><span class="sxs-lookup"><span data-stu-id="92943-674">There are no overloads of the <xref:System.Activator.CreateInstance%60%601> generic method that take argument lists, because the non-generic overloads of <xref:System.Activator.CreateInstance%2A> already provide late-bound constructor resolution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-675">
            <block subset="none" type="note">
              <para> 改为在 [用于 Windows 应用商店应用的 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) 或 [可移植类库](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中捕获基类异常 <see cref="T:System.MissingMemberException" />。</para>
            </block>  为 <paramref name="T" /> 指定的类型没有无参数构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-675">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.  </para>
              </block>  The type that is specified for <paramref name="T" /> does not have a parameterless constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92943-676">使用指定的程序集文件和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-676">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="92943-677">包含某程序集的文件的名称，将在该程序集内查找名为 <c>typeName</c> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-677">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-678">首选类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-678">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-679">使用命名的程序集文件和默认构造函数，创建名称已指定的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-679">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-680">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-680">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-681">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>方法进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-681">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="92943-682">有关可由调用的方法引发其他异常的信息，请参阅的异常部分<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="92943-682">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92943-683">下面的代码示例演示如何调用<xref:System.Activator.CreateInstanceFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="92943-683">The following code example demonstrates how to call the <xref:System.Activator.CreateInstanceFrom%2A> method.</span></span> <span data-ttu-id="92943-684">此代码示例摘自更大的示例为提供<xref:System.Activator>类。</span><span class="sxs-lookup"><span data-stu-id="92943-684">This code example is part of a larger example provided for the <xref:System.Activator> class.</span></span>  
  
 [!code-cpp[ActivatorX#3](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#3)]
 [!code-csharp[ActivatorX#3](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#3)]
 [!code-vb[ActivatorX#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-685">
            <paramref name="typeName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-685">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-686">未找到匹配的公共构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-686">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-687">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-687">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-688">未找到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-688">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-689">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-689">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-690">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-690">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-691">通过反射调用的构造函数引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-691">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="92943-692">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-692">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-693">
            <paramref name="assemblyFile" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-693">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="92943-694">- 或 -  当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-694">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="92943-695">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-695">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-696">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-696">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-697">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-697">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="92943-698">若要搜索的目录路径，并读取其内容的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-698">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="92943-699">关联的枚举：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-699">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-700">用于访问非公共类型，而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-700">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-701">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-701">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (domain As AppDomain, assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="92943-702">在其中创建名为 <c>typeName</c> 的类型的远程域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-702">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="92943-703">包含某程序集的文件的名称，将在该程序集内查找名为 <c>typeName</c> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-703">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-704">首选类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-704">The name of the preferred type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-705">使用命名的程序集文件和默认构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-705">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-706">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-706">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-707">使用<xref:System.Activator.CreateInstanceFrom%2A>托管需要在具有受限安全权限的应用程序域中执行代码。</span><span class="sxs-lookup"><span data-stu-id="92943-707">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="92943-708">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>方法进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-708">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-709">此方法使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>需要具有完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="92943-709">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="92943-710">有关可由调用的方法引发其他异常的信息，请参阅的异常部分<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="92943-710">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-711">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-711">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-712">未找到匹配的公共构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-712">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-713">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-713">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-714">未找到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-714">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-715">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-715">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-716">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-716">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-717">通过反射调用的构造函数引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-717">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="92943-718">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-718">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-719">
            <paramref name="assemblyFile" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-719">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="92943-720">- 或 -  当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-720">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="92943-721">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-721">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-722">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-722">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-723">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-723">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="92943-724">若要搜索的目录路径，并读取其内容的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-724">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="92943-725">关联的枚举：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-725">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="92943-726">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-726">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="92943-727">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-727">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="92943-728">包含某程序集的文件的名称，将在该程序集内查找名为 <c>typeName</c> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-728">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-729">首选类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-729">The name of the preferred type.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="92943-730">包含一个或多个可以参与激活的特性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-730">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="92943-731">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-731">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="92943-732">此参数与客户端激活的对象相关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-732">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="92943-733">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-733">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="92943-734">应改用 Windows Communication Foundation 来开发分布式应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-734">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-735">使用命名的程序集文件和默认构造函数，创建名称已指定的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-735">Creates an instance of the type whose name is specified, using the named assembly file and default constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-736">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-736">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-737">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>方法进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-737">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="92943-738">有关可由调用的方法引发其他异常的信息，请参阅的异常部分<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="92943-738">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-739">
            <paramref name="typeName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-739">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-740">未找到匹配的公共构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-740">No matching public constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-741">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-741">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-742">未找到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-742">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-743">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-743">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-744">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-744">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-745">通过反射调用的构造函数引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-745">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-746">
            <paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-746">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="92943-747">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-747">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-748">
            <paramref name="assemblyFile" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-748">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="92943-749">- 或 -  当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-749">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="92943-750">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-750">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-751">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-751">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-752">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-752">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="92943-753">若要搜索的目录路径，并读取其内容的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-753">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="92943-754">关联的枚举：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-754">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-755">用于访问非公共类型，而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-755">for accessing nonpublic types regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-756">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-756">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="92943-757">包含某程序集的文件的名称，将在该程序集内查找名为 <c>typeName</c> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-757">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-758">首选类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-758">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="92943-759">如果指定对 <c>typeName</c> 的搜索不区分大小写，则为 <see langword="true" />；如果指定搜索要区分大小写，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-759">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="92943-760">影响 <c>typeName</c> 构造函数搜索的零个或多个位标志的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-760">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-761">如果 <c>bindingAttr</c> 为零，则对公共构造函数进行区分大小写的搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-761">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="92943-762">使用 <c>bindingAttr</c> 和 <c>args</c> 查找和标识 <c>typeName</c> 构造函数的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-762">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-763">如果 <c>binder</c> 为 <see langword="null" />，则使用默认活页夹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-763">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="92943-764">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-764">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="92943-765">如果 <c>args</c> 为空数组或为 <see langword="null" />，则调用不带任何参数的构造函数（默认构造函数）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-765">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="92943-766">区域性特定的信息，这些信息控制将 <c>args</c> 强制转换为 <c>typeName</c> 构造函数所声明的正式类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-766">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-767">如果 <c>culture</c> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-767">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="92943-768">包含一个或多个可以参与激活的特性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-768">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="92943-769">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-769">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="92943-770">此参数与客户端激活的对象相关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-770">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="92943-771">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-771">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="92943-772">应改用 Windows Communication Foundation 来开发分布式应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-772">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-773">使用指定的程序集文件和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-773">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-774">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-774">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-775">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>方法进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-775">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="92943-776">有关可由调用的方法引发其他异常的信息，请参阅的异常部分<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="92943-776">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-777">
            <paramref name="typeName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-777">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-778">未找到匹配的构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-778">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-779">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-779">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-780">未找到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-780">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-781">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-781">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-782">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-782">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-783">通过反射调用的构造函数引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-783">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="92943-784">调用方没有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-784">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-785">
            <paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-785">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-786">
            <paramref name="assemblyFile" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-786">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="92943-787">- 或 -  当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-787">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="92943-788">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-788">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-789">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-789">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-790">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-790">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="92943-791">若要搜索的目录路径，并读取其内容的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-791">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="92943-792">关联的枚举：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-792">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-793">用于访问非公共类型和成员而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-793">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-794">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-794">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="92943-795">在其中创建名为 <c>typeName</c> 的类型的远程域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-795">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="92943-796">包含某程序集的文件的名称，将在该程序集内查找名为 <c>typeName</c> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-796">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-797">首选类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-797">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="92943-798">如果指定对 <c>typeName</c> 的搜索不区分大小写，则为 <see langword="true" />；如果指定搜索要区分大小写，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-798">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="92943-799">影响 <c>typeName</c> 构造函数搜索的零个或多个位标志的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-799">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-800">如果 <c>bindingAttr</c> 为零，则对公共构造函数进行区分大小写的搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-800">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="92943-801">使用 <c>bindingAttr</c> 和 <c>args</c> 查找和标识 <c>typeName</c> 构造函数的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-801">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-802">如果 <c>binder</c> 为 <see langword="null" />，则使用默认活页夹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-802">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="92943-803">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-803">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="92943-804">如果 <c>args</c> 为空数组或为 <see langword="null" />，则调用不带任何参数的构造函数（默认构造函数）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-804">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="92943-805">区域性特定的信息，这些信息控制将 <c>args</c> 强制转换为 <c>typeName</c> 构造函数所声明的正式类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-805">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-806">如果 <c>culture</c> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-806">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="92943-807">包含一个或多个可以参与激活的特性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-807">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="92943-808">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-808">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="92943-809">此参数与客户端激活的对象相关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-809">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="92943-810">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-810">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="92943-811">应改用 Windows Communication Foundation 来开发分布式应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-811">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-812">使用命名的程序集文件和最匹配所指定参数的构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-812">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-813">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-813">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-814">使用<xref:System.Activator.CreateInstanceFrom%2A>托管需要在具有受限安全权限的应用程序域中执行代码。</span><span class="sxs-lookup"><span data-stu-id="92943-814">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="92943-815">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>方法进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-815">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="92943-816">有关可由调用的方法引发其他异常信息，请参阅的异常部分<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="92943-816">For information about other exceptions that can be thrown by invoked methods, see the Exceptions sections of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-817">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-817">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-818">未找到匹配的构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-818">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-819">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-819">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-820">未找到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-820">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-821">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-821">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-822">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-822">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-823">通过反射调用的构造函数引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-823">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="92943-824">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-824">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-825">
            <paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-825">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-826">
            <paramref name="assemblyFile" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-826">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="92943-827">- 或 -  <paramref name="assemblyName" /> 是针对晚于当前加载版本的公共语言运行时版本编译的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-827">-or-  <paramref name="assemblyName" /> was compiled for a version of the common language runtime that is later than the version that is currently loaded.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-828">提供的证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-828">for supplying evidence.</span>
          </span>
          <span data-ttu-id="92943-829">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-829">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="92943-830">若要搜索的目录路径，并读取其内容的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-830">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="92943-831">关联的枚举：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-831">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-832">用于访问非公共类型和成员而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-832">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-833">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-833">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="92943-834">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-834">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="92943-835">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-835">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="92943-836">包含某程序集的文件的名称，将在该程序集内查找名为 <c>typeName</c> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-836">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-837">首选类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-837">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="92943-838">如果指定对 <c>typeName</c> 的搜索不区分大小写，则为 <see langword="true" />；如果指定搜索要区分大小写，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-838">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="92943-839">影响 <c>typeName</c> 构造函数搜索的零个或多个位标志的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-839">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-840">如果 <c>bindingAttr</c> 为零，则对公共构造函数进行区分大小写的搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-840">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="92943-841">使用 <c>bindingAttr</c> 和 <c>args</c> 查找和标识 <c>typeName</c> 构造函数的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-841">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-842">如果 <c>binder</c> 为 <see langword="null" />，则使用默认活页夹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-842">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="92943-843">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-843">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="92943-844">如果 <c>args</c> 为空数组或为 <see langword="null" />，则调用不带任何参数的构造函数（默认构造函数）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-844">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="92943-845">区域性特定的信息，这些信息控制将 <c>args</c> 强制转换为 <c>typeName</c> 构造函数所声明的正式类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-845">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-846">如果 <c>culture</c> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-846">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="92943-847">包含一个或多个可以参与激活的特性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-847">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="92943-848">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-848">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="92943-849">此参数与客户端激活的对象相关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-849">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="92943-850">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-850">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="92943-851">应改用 Windows Communication Foundation 来开发分布式应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-851">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityInfo">
          <span data-ttu-id="92943-852">用于做出安全策略决策和授予代码权限的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-852">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-853">使用指定的程序集文件和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-853">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-854">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-854">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-855">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>方法进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-855">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="92943-856">有关可由调用的方法引发其他异常的信息，请参阅的异常部分<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="92943-856">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-857">
            <paramref name="typeName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-857">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-858">未找到匹配的构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-858">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-859">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-859">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-860">未找到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-860">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-861">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-861">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-862">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-862">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-863">通过反射调用的构造函数引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-863">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="92943-864">调用方没有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-864">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-865">
            <paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-865">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-866">
            <paramref name="assemblyFile" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-866">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="92943-867">- 或 -  当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-867">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="92943-868">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-868">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-869">创建委托的一个实例时调用非托管的代码的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-869">for the ability to call unmanaged code when creating an instance of a delegate.</span>
          </span>
          <span data-ttu-id="92943-870">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-870">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="92943-871">若要搜索的目录路径，并读取其内容的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-871">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="92943-872">关联的枚举：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-872">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-873">用于访问非公共类型和成员而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-873">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-874">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-874">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Methods which use Evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="92943-875">在其中创建名为 <c>typeName</c> 的类型的远程域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-875">The remote domain where the type named <c>typeName</c> is created.</span>
          </span>
        </param>
        <param name="assemblyFile">
          <span data-ttu-id="92943-876">包含某程序集的文件的名称，将在该程序集内查找名为 <c>typeName</c> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-876">The name of a file that contains an assembly where the type named <c>typeName</c> is sought.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="92943-877">首选类型的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-877">The name of the preferred type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="92943-878">如果指定对 <c>typeName</c> 的搜索不区分大小写，则为 <see langword="true" />；如果指定搜索要区分大小写，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-878">
              <see langword="true" /> to specify that the search for <c>typeName</c> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="92943-879">影响 <c>typeName</c> 构造函数搜索的零个或多个位标志的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-879">A combination of zero or more bit flags that affect the search for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-880">如果 <c>bindingAttr</c> 为零，则对公共构造函数进行区分大小写的搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-880">If <c>bindingAttr</c> is zero, a case-sensitive search for public constructors is conducted.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="92943-881">使用 <c>bindingAttr</c> 和 <c>args</c> 查找和标识 <c>typeName</c> 构造函数的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-881">An object that uses <c>bindingAttr</c> and <c>args</c> to seek and identify the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-882">如果 <c>binder</c> 为 <see langword="null" />，则使用默认活页夹。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-882">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="92943-883">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-883">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span>
          </span>
          <span data-ttu-id="92943-884">如果 <c>args</c> 为空数组或为 <see langword="null" />，则调用不带任何参数的构造函数（默认构造函数）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-884">If <c>args</c> is an empty array or <see langword="null" />, the constructor that takes no parameters (the default constructor) is invoked.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="92943-885">区域性特定的信息，这些信息控制将 <c>args</c> 强制转换为 <c>typeName</c> 构造函数所声明的正式类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-885">Culture-specific information that governs the coercion of <c>args</c> to the formal types declared for the <c>typeName</c> constructor.</span>
          </span>
          <span data-ttu-id="92943-886">如果 <c>culture</c> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-886">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="92943-887">包含一个或多个可以参与激活的特性的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-887">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="92943-888">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-888">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="92943-889">此参数与客户端激活的对象相关。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-889">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="92943-890">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-890">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="92943-891">应改用 Windows Communication Foundation 来开发分布式应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-891">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <param name="securityAttributes">
          <span data-ttu-id="92943-892">用于做出安全策略决策和授予代码权限的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-892">Information used to make security policy decisions and grant code permissions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-893">使用命名的程序集文件和最匹配所指定参数的构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-893">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-894">要访问新创建的实例则必须解包的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-894">A handle that must be unwrapped to access the newly created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-895">使用<xref:System.Activator.CreateInstanceFrom%2A>托管需要在具有受限安全权限的应用程序域中执行代码。</span><span class="sxs-lookup"><span data-stu-id="92943-895">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="92943-896">使用<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType>方法进行解包返回的值。</span><span class="sxs-lookup"><span data-stu-id="92943-896">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92943-897">此方法使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>需要具有完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="92943-897">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="92943-898">有关可由调用的方法引发其他异常的信息，请参阅的异常部分<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>和<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="92943-898">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-899">
            <paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-899">
              <paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="92943-900">未找到匹配的构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-900">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="92943-901">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-901">
              <paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="92943-902">未找到 <paramref name="assemblyFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-902">
              <paramref name="assemblyFile" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="92943-903">调用方没有权限调用此构造函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-903">The caller does not have permission to call this constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-904">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-904">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="92943-905">通过反射调用的构造函数引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-905">The constructor, which was invoked through reflection, threw an exception.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="92943-906">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-906">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92943-907">
            <paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-907">
              <paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="92943-908">
            <paramref name="assemblyFile" /> 不是有效的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-908">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="92943-909">- 或 -  当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-909">-or-  The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span>
          </span>
          <span data-ttu-id="92943-910">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-910">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="92943-911">提供的证据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-911">for supplying evidence.</span>
          </span>
          <span data-ttu-id="92943-912">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-912">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="92943-913">若要搜索的目录路径，并读取其内容的功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-913">for the ability to search directory paths and read their contents.</span>
          </span>
          <span data-ttu-id="92943-914">关联的枚举：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-914">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="92943-915">用于访问非公共类型和成员而不考虑其授予集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-915">for accessing nonpublic types and members regardless of their grant set.</span>
          </span>
          <span data-ttu-id="92943-916">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-916">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="92943-917">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-917">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="92943-918">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-918">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92943-919">为已知对象或 XML Web services 创建一个代理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-919">Creates a proxy for a well-known object or XML Web service.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="92943-920">希望连接到的已知对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-920">The type of the well-known object to which you want to connect.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="92943-921">已知对象的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-921">The URL of the well-known object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-922">为指定类型和 URL 所指示的已知对象创建一个代理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-922">Creates a proxy for the well-known object indicated by the specified type and URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-923">一个代理，它指向由所请求的已知对象服务的终结点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-923">A proxy that points to an endpoint served by the requested well-known object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-924">调用要将消息发送到远程对象的代理。</span><span class="sxs-lookup"><span data-stu-id="92943-924">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="92943-925">对此代理调用方法之前通过网络不发送任何消息。</span><span class="sxs-lookup"><span data-stu-id="92943-925">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-926">
            <paramref name="type" /> 或 <paramref name="url" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-926">
              <paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="92943-927">
            <paramref name="type" /> 不会通过参考封送并且并非接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-927">
              <paramref name="type" /> is not marshaled by reference and is not an interface.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-928">使用晚期绑定机制调用了此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-928">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="92943-929">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-929">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="92943-930">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-930">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="92943-931">希望连接到的已知对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-931">The type of the well-known object to which you want to connect.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="92943-932">已知对象的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-932">The URL of the well-known object.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="92943-933">通道特定的数据或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-933">Channel-specific data or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-934">为指定类型、URL 和通道数据所指示的已知对象创建一个代理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-934">Creates a proxy for the well-known object indicated by the specified type, URL, and channel data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92943-935">一个代理，它指向由所请求的已知对象服务的终结点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-935">A proxy that points to an endpoint served by the requested well-known object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-936">调用要将消息发送到远程对象的代理。</span><span class="sxs-lookup"><span data-stu-id="92943-936">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="92943-937">对此代理调用方法之前通过网络不发送任何消息。</span><span class="sxs-lookup"><span data-stu-id="92943-937">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 <span data-ttu-id="92943-938">`state`参数将信息传递给通道，并传递给<xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="92943-938">The `state` parameter communicates information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92943-939">
            <paramref name="type" /> 或 <paramref name="url" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-939">
              <paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="92943-940">
            <paramref name="type" /> 不会通过参考封送并且并非接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-940">
              <paramref name="type" /> is not marshaled by reference and is not an interface.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="92943-941">使用晚期绑定机制调用了此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-941">This member was invoked with a late-binding mechanism.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="92943-942">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-942">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="92943-943">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-943">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Activator.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Activator.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Activator::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="92943-944">留待将来使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-944">Reserved for future use.</span>
          </span>
          <span data-ttu-id="92943-945">必须为 IID_NULL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-945">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="92943-946">要映射的名称的传入数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-946">The passed-in array of names to map.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="92943-947">要映射的名称的计数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-947">The count of the names to map.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="92943-948">要在其中解释名称的区域设置上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-948">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="92943-949">调用方分配的数组，用于接收与名称对应的 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-949">The caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-950">将一组名称映射为对应的一组调度标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-950">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-951">此方法用于从非托管代码，访问托管的类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="92943-951">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="92943-952">有关详细信息`IDispatch::GetIDsOfNames`，请参阅 MSDN 库。</span><span class="sxs-lookup"><span data-stu-id="92943-952">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="92943-953">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-953">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Activator.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="92943-954">要返回的类型信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-954">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="92943-955">类型信息的区域设置标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-955">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="92943-956">一个对象，该对象接收指向请求的类型信息对象的指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-956">An object that receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-957">检索对象的类型信息，然后可以使用该信息获取接口的类型信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-957">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-958">此方法用于从非托管代码，访问托管的类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="92943-958">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="92943-959">有关详细信息`IDispatch::GetTypeInfo`，请参阅 MSDN 库。</span><span class="sxs-lookup"><span data-stu-id="92943-959">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="92943-960">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-960">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Activator.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="92943-961">此方法返回时包含一个用于接收对象提供的类型信息接口数量的位置指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-961">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
          <span data-ttu-id="92943-962">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-962">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-963">检索对象提供的类型信息接口的数量（0 或 1）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-963">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-964">此方法用于从非托管代码，访问托管的类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="92943-964">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="92943-965">有关详细信息`IDispatch::GetTypeInfoCount`，请参阅 MSDN 库。</span><span class="sxs-lookup"><span data-stu-id="92943-965">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="92943-966">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-966">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.Invoke">
      <MemberSignature Language="C#" Value="void _Activator.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Activator.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Activator::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="92943-967">一个用于标识成员的调度标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-967">A dispatch identifier that identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="92943-968">留待将来使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-968">Reserved for future use.</span>
          </span>
          <span data-ttu-id="92943-969">必须为 IID_NULL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-969">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="92943-970">要在其中解释参数的区域设置上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-970">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="92943-971">描述调用的上下文的标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-971">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="92943-972">指向一个结构的指针，该结构包含一个参数数组、一个命名参数的 DISPID 参数数组和数组元素的计数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-972">A pointer to a structure that contains an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="92943-973">指向要存储结果的位置的指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-973">A pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="92943-974">指向一个包含异常信息的结构的指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-974">A pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="92943-975">第一个出错自变量的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-975">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92943-976">提供对某一对象公开的属性和方法的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-976">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92943-977">此方法用于从非托管代码，访问托管的类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="92943-977">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="92943-978">有关详细信息`IDispatch::Invoke`，请参阅 MSDN 库。</span><span class="sxs-lookup"><span data-stu-id="92943-978">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="92943-979">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92943-979">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>