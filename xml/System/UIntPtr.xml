<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UIntPtr.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca4566fbda9cc2e26709c8d0ff1f6037d1e2cf173bd87.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fbda9cc2e26709c8d0ff1f6037d1e2cf173bd87</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.UIntPtr">
          <source>A platform-specific type that is used to represent a pointer or a handle.</source>
          <target state="translated">用于表示指针或句柄的平台特定类型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>The <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> type is designed to be an integer whose size is platform-specific.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph>类型都旨在成为一个其大小为特定于平台的整数。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>That is, an instance of this type is expected to be 32-bits on 32-bit hardware and operating systems, and 64-bits on 64-bit hardware and operating systems.</source>
          <target state="translated">也就是说，此类型的实例预计会在 32 位硬件和操作系统，32 位和 64 位在 64 位硬件和操作系统上。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>The <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> type is CLS-compliant, while the <ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph> type is not.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IntPtr&gt;</ph>类型是符合 CLS 时<ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph>类型不是。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>Only the <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> type is used in the common language runtime.</source>
          <target state="translated">仅<ph id="ph1">&lt;xref:System.IntPtr&gt;</ph>类型在公共语言运行时的用法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>The <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> type is provided mostly to maintain architectural symmetry with the <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph>类型主要用于维护与体系结构对称性<ph id="ph2">&lt;xref:System.IntPtr&gt;</ph>类型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>The <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> type can be used by languages that support pointers, and as a common means of referring to data between languages that do and do not support pointers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph>语言支持指针，并作为一种通用引用语言，并不支持指针之间的数据的方式，可以使用类型。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source><ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> objects can also be used to hold handles.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> 对象还可用来保存句柄。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>This type implements the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.</source>
          <target state="translated">此类型实现<ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.UIntPtr">
          <source>This type is thread safe.</source>
          <target state="translated">此类型是线程安全的。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.UIntPtr">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> 的新实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.#ctor(System.UInt32)">
          <source>A pointer or handle contained in a 32-bit unsigned integer.</source>
          <target state="translated">包含于 32 位无符号整数中的指针或句柄。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.#ctor(System.UInt32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> structure using the specified 32-bit pointer or handle.</source>
          <target state="translated">使用指定的 32 位指针或句柄初始化 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> 的新实例。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.#ctor(System.UInt64)">
          <source>A pointer or handle contained in a 64-bit unsigned integer.</source>
          <target state="translated">包含于 64 位无符号整数中的指针或句柄。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.#ctor(System.UInt64)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> using the specified 64-bit pointer or handle.</source>
          <target state="translated">使用指定的 64 位指针或句柄初始化 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> 的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.#ctor(System.UInt64)">
          <source>An exception is only thrown if the value of <ph id="ph1">`value`</ph> requires more bits than the current platform supports.</source>
          <target state="translated">如果时才会引发异常的值<ph id="ph1">`value`</ph>需要比当前平台所支持的更多比特。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.#ctor(System.UInt64)">
          <source>On a 32-bit platform, <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is too large to represent as an <ph id="ph2">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</source>
          <target state="translated">在 32 位的平台上，<ph id="ph1">&lt;paramref name="value" /&gt;</ph> 太大，无法表示为一个 <ph id="ph2">&lt;see cref="T:System.UIntPtr" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.#ctor(System.Void*)">
          <source>A pointer to an unspecified type.</source>
          <target state="translated">指向未指定类型的指针。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.#ctor(System.Void*)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> using the specified pointer to an unspecified type.</source>
          <target state="translated">使用指定的指向未指定类型的指针初始化 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> 的新实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.#ctor(System.Void*)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.#ctor(System.Void*)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>The unsigned pointer to add the offset to.</source>
          <target state="translated">要为其增加偏移量的无符号指针。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>The offset to add.</source>
          <target state="translated">要增加的偏移量。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>Adds an offset to the value of an unsigned pointer.</source>
          <target state="translated">为无符号指针的值增加偏移量。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>A new unsigned pointer that reflects the addition of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> to <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</source>
          <target state="translated">新的无符号指针，反映向 <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 增加 <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph> 的结果。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IntPtr.Add%2A&gt;</ph> method does not throw an exception if the result is too large to represent as a pointer on the specified platform.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IntPtr.Add%2A&gt;</ph>方法不会引发异常，如果结果过大而无法表示为指定的平台上的指针。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>Instead, the addition operation is performed in an unchecked context.</source>
          <target state="translated">相反，在未选中的上下文执行加法运算。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>Languages that do not support operator overloading or custom operators can use this method to add an offset to the value of an unsigned pointer.</source>
          <target state="translated">不支持运算符重载或自定义运算符的语言可以使用此方法将偏移量添加到的无符号指针的值。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> object that points to the beginning of a ten-element array, and then calls the <ph id="ph2">&lt;xref:System.UIntPtr.Add%2A&gt;</ph> method to iterate the elements in the array.</source>
          <target state="translated">下面的示例实例化<ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph>对象指向一个 10 个元素的数组，开头，然后调用<ph id="ph2">&lt;xref:System.UIntPtr.Add%2A&gt;</ph>方法来循环访问数组中的元素。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Equals(System.Object)">
          <source>An object to compare with this instance or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">要与此示例比较的对象，或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Equals(System.Object)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">返回一个值，该值指示此实例是否等于指定的对象。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is an instance of <ph id="ph3">&lt;see cref="T:System.UIntPtr" /&gt;</ph> and equals the value of this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 是 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 的实例并且等于此实例的值，则为 <ph id="ph3">&lt;see cref="T:System.UIntPtr" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">返回此实例的哈希代码。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 位有符号整数哈希代码。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>The unsigned pointer to add the offset to.</source>
          <target state="translated">要为其增加偏移量的无符号指针。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>The offset to add.</source>
          <target state="translated">要增加的偏移量。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>Adds an offset to the value of an unsigned pointer.</source>
          <target state="translated">为无符号指针的值增加偏移量。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>A new unsigned pointer that reflects the addition of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> to <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</source>
          <target state="translated">新的无符号指针，反映向 <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 增加 <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph> 的结果。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.UIntPtr.op_Addition%2A&gt;</ph> method defines the addition operation for <ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UIntPtr.op_Addition%2A&gt;</ph>方法定义的加法运算<ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>It enables code such as the following.</source>
          <target state="translated">它使代码如下所示。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.UIntPtr.Add%2A&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.UIntPtr.Add%2A&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>The addition operation does not throw an exception if the result is too large to represent as a pointer on the specified platform.</source>
          <target state="translated">如果结果过大而无法表示为指定的平台上的指针，加法运算不引发异常。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>Instead, it is performed in an unchecked context.</source>
          <target state="translated">相反，它是在未选中的上下文中执行。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.UIntPtr.Add%28System.UIntPtr%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此运算符的等效方法是<ph id="ph1">&lt;xref:System.UIntPtr.Add%28System.UIntPtr%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
          <source>The first pointer or handle to compare.</source>
          <target state="translated">要比较的第一个指针或句柄。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
          <source>The second pointer or handle to compare.</source>
          <target state="translated">要比较的第二个指针或句柄。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
          <source>Determines whether two specified instances of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> are equal.</source>
          <target state="translated">确定 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> 的两个指定的实例是否相等。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value1" /&gt;</ph> equals <ph id="ph3">&lt;paramref name="value2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="value1" /&gt;</ph> 等于 <ph id="ph3">&lt;paramref name="value2" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr">
          <source>A 32-bit unsigned integer.</source>
          <target state="translated">32 位无符号整数。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr">
          <source>Converts the value of a 32-bit unsigned integer to an <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</source>
          <target state="translated">将 32 位无符号整数的值转换成 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> initialized to <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">初始化为 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> 的 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 新实例。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr">
          <source>A 64-bit unsigned integer.</source>
          <target state="translated">64 位无符号整数。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr">
          <source>Converts the value of a 64-bit unsigned integer to an <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</source>
          <target state="translated">将 64 位无符号整数的值转换成 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> initialized to <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">初始化为 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> 的 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 新实例。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr">
          <source>On a 32-bit platform, <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is too large to represent as an <ph id="ph2">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</source>
          <target state="translated">在 32 位的平台上，<ph id="ph1">&lt;paramref name="value" /&gt;</ph> 太大，无法表示为一个 <ph id="ph2">&lt;see cref="T:System.UIntPtr" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
          <source>The pointer or handle to convert.</source>
          <target state="translated">要转换的指针或句柄。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> to a 32-bit unsigned integer.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> 的值转换为 32 位无符号整数。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
          <source>The contents of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
          <source>An exception is only thrown if the value of <ph id="ph1">`value`</ph> requires more bits than the current platform supports.</source>
          <target state="translated">如果时才会引发异常的值<ph id="ph1">`value`</ph>需要比当前平台所支持的更多比特。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
          <source>On a 64-bit platform, the value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is too large to represent as a 32-bit unsigned integer.</source>
          <target state="translated">在 64 位平台上，<ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值太大，无法表示为 32 位无符号整数。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64">
          <source>The pointer or handle to convert.</source>
          <target state="translated">要转换的指针或句柄。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> to a 64-bit unsigned integer.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> 的值转换为 64 位无符号整数。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64">
          <source>The contents of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
          <source>The pointer or handle to convert.</source>
          <target state="translated">要转换的指针或句柄。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
          <source>Converts the value of the specified <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> to a pointer to an unspecified type.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> 的值转换为指向未指定类型的指针。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此 API 不兼容 CLS。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
          <source>The contents of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
          <source>A pointer to an unspecified type.</source>
          <target state="translated">指向未指定类型的指针。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
          <source>Converts the specified pointer to an unspecified type to an <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>.</source>
          <target state="translated">将指向未指定类型的指定指针转换为 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此 API 不兼容 CLS。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> initialized to <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">初始化为 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> 的 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 新实例。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
          <source>The first pointer or handle to compare.</source>
          <target state="translated">要比较的第一个指针或句柄。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
          <source>The second pointer or handle to compare.</source>
          <target state="translated">要比较的第二个指针或句柄。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
          <source>Determines whether two specified instances of <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> are not equal.</source>
          <target state="translated">确定 <ph id="ph1">&lt;see cref="T:System.UIntPtr" /&gt;</ph> 的两个指定的实例是否不等。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value1" /&gt;</ph> does not equal <ph id="ph3">&lt;paramref name="value2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="value1" /&gt;</ph> 不等于 <ph id="ph3">&lt;paramref name="value2" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">此运算符的等效方法是 <ph id="ph1">&lt;xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>The unsigned pointer to subtract the offset from.</source>
          <target state="translated">要从中减去偏移量的无符号指针。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>The offset to subtract.</source>
          <target state="translated">要减去的偏移量。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>Subtracts an offset from the value of an unsigned pointer.</source>
          <target state="translated">从无符号指针的值中减去偏移量。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>A new unsigned pointer that reflects the subtraction of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> from <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</source>
          <target state="translated">新的无符号指针，反映从 <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 中减去 <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph> 的结果。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.UIntPtr.op_Subtraction%2A&gt;</ph> method defines the subtraction operation for <ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UIntPtr.op_Subtraction%2A&gt;</ph>方法定义的减法运算<ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>It enables code such as the following.</source>
          <target state="translated">它使代码如下所示。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.UIntPtr.Subtract%2A&gt;</ph> method instead.</source>
          <target state="translated">不支持自定义运算符的语言可以调用<ph id="ph1">&lt;xref:System.UIntPtr.Subtract%2A&gt;</ph>方法相反。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>The subtraction operation does not throw an exception if the result is too small to represent as a pointer on the specified platform.</source>
          <target state="translated">减法运算不引发异常，如果结果为太小而无法表示为指定的平台上的指针。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
          <source>Instead, it is performed in an unchecked context.</source>
          <target state="translated">相反，它是在未选中的上下文中执行。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.UIntPtr.Size">
          <source>Gets the size of this instance.</source>
          <target state="translated">获取此实例的大小。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UIntPtr.Size">
          <source>The size of a pointer or handle on this platform, measured in bytes.</source>
          <target state="translated">此平台上的指针或句柄的大小，按字节计。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.UIntPtr.Size">
          <source>The value of this property is 4 on a 32-bit platform, and 8 on a 64-bit platform.</source>
          <target state="translated">此属性的值在 32 位平台上为 4，在 64 位平台上为 8。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>The unsigned pointer to subtract the offset from.</source>
          <target state="translated">要从中减去偏移量的无符号指针。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>The offset to subtract.</source>
          <target state="translated">要减去的偏移量。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>Subtracts an offset from the value of an unsigned pointer.</source>
          <target state="translated">从无符号指针的值中减去偏移量。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>A new unsigned pointer that reflects the subtraction of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> from <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph>.</source>
          <target state="translated">新的无符号指针，反映从 <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 中减去 <ph id="ph2">&lt;paramref name="pointer" /&gt;</ph> 的结果。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph> method does not throw an exception if the result is too small to represent as a pointer on the specified platform.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph>方法不会引发异常，如果结果为太小而无法表示为指定的平台上的指针。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>Instead, the subtraction operation is performed in an unchecked context.</source>
          <target state="translated">相反，在未选中的上下文执行减法运算。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>Languages that do not support operator overloading or custom operators can use this method to subtract an offset from the value of an unsigned pointer.</source>
          <target state="translated">不支持运算符重载或自定义运算符的语言可以使用此方法要减去的偏移量，从无符号指针的值。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
          <source>The following example instantiates an <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> object that points to the end of a ten-element array, and then calls the <ph id="ph2">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph> method to iterate the elements in the array in reverse order.</source>
          <target state="translated">下面的示例实例化<ph id="ph1">&lt;xref:System.IntPtr&gt;</ph>对象，指向数组末尾之间的 10 个元素，然后呼叫<ph id="ph2">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph>方法以按逆序循环访问数组中的元素。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object to populate with data.</source>
          <target state="translated">要填充数据的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination for this serialization.</source>
          <target state="translated">此序列化的目标。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>(This parameter is not used; specify <ph id="ph1">&lt;see langword="null" /&gt;</ph>.)</source>
          <target state="translated">（未使用此参数；指定 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。）</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the data needed to serialize the current <ph id="ph2">&lt;see cref="T:System.UIntPtr" /&gt;</ph> object.</source>
          <target state="translated">使用序列化当前的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 对象所需的所有数据填充 <ph id="ph2">&lt;see cref="T:System.UIntPtr" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method populates the <ph id="ph1">`info`</ph> parameter with the value of the current <ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph> object.</source>
          <target state="translated">此方法填充<ph id="ph1">`info`</ph>参数，并且当前值<ph id="ph2">&lt;xref:System.UIntPtr&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToPointer">
          <source>Converts the value of this instance to a pointer to an unspecified type.</source>
          <target state="translated">将此实例的值转换为指向未指定类型的指针。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToPointer">
          <source>A pointer to <ph id="ph1">&lt;see cref="T:System.Void" /&gt;</ph>; that is, a pointer to memory containing data of an unspecified type.</source>
          <target state="translated">指向 <ph id="ph1">&lt;see cref="T:System.Void" /&gt;</ph> 的指针，即是说，该指针所指向的内存包含有未指定类型的数据。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToString">
          <source>Converts the numeric value of this instance to its equivalent string representation.</source>
          <target state="translated">将此实例的数值转换为其等效的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToString">
          <source>The string representation of the value of this instance.</source>
          <target state="translated">此实例的值的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.ToString">
          <source>If the value of the <ph id="ph1">&lt;xref:System.IntPtr.Size%2A&gt;</ph> property for this instance is 4, then this method is equivalent to <ph id="ph2">&lt;xref:System.UInt32.ToString%2A&gt;</ph>; otherwise, this method is equivalent to <ph id="ph3">&lt;xref:System.UInt64.ToString%2A&gt;</ph>.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.IntPtr.Size%2A&gt;</ph>此实例的属性是 4，则此方法等效于<ph id="ph2">&lt;xref:System.UInt32.ToString%2A&gt;</ph>; 否则为此方法相当于<ph id="ph3">&lt;xref:System.UInt64.ToString%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToUInt32">
          <source>Converts the value of this instance to a 32-bit unsigned integer.</source>
          <target state="translated">将此实例的值转换成 32 位无符号整数。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToUInt32">
          <source>A 32-bit unsigned integer equal to the value of this instance.</source>
          <target state="translated">等于此实例的值的 32 位无符号整数。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.UIntPtr.ToUInt32">
          <source>An exception is only thrown if the value of <ph id="ph1">`value`</ph> requires more bits than the current platform supports.</source>
          <target state="translated">如果时才会引发异常的值<ph id="ph1">`value`</ph>需要比当前平台所支持的更多比特。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToUInt32">
          <source>On a 64-bit platform, the value of this instance is too large to represent as a 32-bit unsigned integer.</source>
          <target state="translated">在 64 位平台上，此实例的值太大，无法表示为 32 位无符号整数。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToUInt64">
          <source>Converts the value of this instance to a 64-bit unsigned integer.</source>
          <target state="translated">将此实例的值转换成 64 位无符号整数。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.UIntPtr.ToUInt64">
          <source>A 64-bit unsigned integer equal to the value of this instance.</source>
          <target state="translated">等于此实例的值的 64 位无符号整数。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="F:System.UIntPtr.Zero">
          <source>A read-only field that represents a pointer or handle that has been initialized to zero.</source>
          <target state="translated">表示已初始化为零的指针或句柄的只读字段。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.UIntPtr.Zero">
          <source>The value of this field is not equivalent to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">此字段的值不等于<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.UIntPtr.Zero">
          <source>Use this field to efficiently determine whether an instance of <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph> has been set to a value other than zero.</source>
          <target state="translated">使用此字段可有效地确定实例是否<ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph>已设置为非零值。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.UIntPtr.Zero">
          <source>For example, assume the variable, uip, is an instance of <ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph>.</source>
          <target state="translated">例如，假定变量 uip，是的一个实例<ph id="ph1">&lt;xref:System.UIntPtr&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.UIntPtr.Zero">
          <source>You can determine if it has been set by comparing it to the value returned by a constructor, for example: " <ph id="ph1">`if uip != new UIntPtr(0)...`</ph> ".</source>
          <target state="translated">你可以确定是否它已设置将它与由构造函数，例如返回的值进行比较:" <ph id="ph1">`if uip != new UIntPtr(0)...`</ph> "。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.UIntPtr.Zero">
          <source>However, invoking a constructor to get an unintialized pointer is inefficient.</source>
          <target state="translated">但是，调用构造函数来获取被初始化的指针的效率低。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.UIntPtr.Zero">
          <source>It is better to code either " <ph id="ph1">`if uip != UIntPtr.Zero...`</ph> ", or " <ph id="ph2">`if !UIntPtr.Zero.Equals(uip)...`</ph> ".</source>
          <target state="translated">它是更好的做法代码" <ph id="ph1">`if uip != UIntPtr.Zero...`</ph> "，或" <ph id="ph2">`if !UIntPtr.Zero.Equals(uip)...`</ph> "。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>