<Type Name="IndexOutOfRangeException" FullName="System.IndexOutOfRangeException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="edc250a3b2c482fa774605d1cee89610a45ffcfc" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52613041" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class IndexOutOfRangeException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit IndexOutOfRangeException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.IndexOutOfRangeException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IndexOutOfRangeException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class IndexOutOfRangeException sealed : SystemException" />
  <TypeSignature Language="F#" Value="type IndexOutOfRangeException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="81454-101">试图访问索引超出界限的数组或集合的元素时引发的异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="81454-101">The exception that is thrown when an attempt is made to access an element of an array or collection with an index that is outside its bounds.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81454-102"><xref:System.IndexOutOfRangeException>的无效索引用于访问数组或集合的成员或用于读取或写入从缓冲区中的特定位置时将引发异常。</span><span class="sxs-lookup"><span data-stu-id="81454-102">An <xref:System.IndexOutOfRangeException> exception is thrown when an invalid index is used to access a member of an array or a collection, or to read or write from a particular location in a buffer.</span></span> <span data-ttu-id="81454-103">此异常继承<xref:System.Exception>类但添加任何独特的成员。</span><span class="sxs-lookup"><span data-stu-id="81454-103">This exception  inherits from the <xref:System.Exception> class but adds no unique members.</span></span>  
  
 <span data-ttu-id="81454-104">通常情况下，<xref:System.IndexOutOfRangeException>导致开发人员错误引发异常。</span><span class="sxs-lookup"><span data-stu-id="81454-104">Typically, an <xref:System.IndexOutOfRangeException> exception is thrown as a result of developer error.</span></span> <span data-ttu-id="81454-105">而不是处理异常，应诊断错误的原因并更正你的代码。</span><span class="sxs-lookup"><span data-stu-id="81454-105">Instead of handling the exception, you should diagnose the cause of the error and correct your code.</span></span> <span data-ttu-id="81454-106">错误的最常见原因是：</span><span class="sxs-lookup"><span data-stu-id="81454-106">The most common causes of the error are:</span></span>  
  
-   <span data-ttu-id="81454-107">从零开始的数组或集合的上限为 1，忘记少于其成员或元素，如下面的示例说明了。</span><span class="sxs-lookup"><span data-stu-id="81454-107">Forgetting that the upper bound of a collection or a zero-based array is one less than its number of members or elements, as the following example illustrates.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/length1.cs#3)]
     [!code-vb[System.IndexOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/length1.vb#3)]  
  
     <span data-ttu-id="81454-108">若要更正此错误，可以使用如下所示的代码。</span><span class="sxs-lookup"><span data-stu-id="81454-108">To correct the error, you can use code like the following.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/length2.cs#4)]
     [!code-vb[System.IndexOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/length2.vb#4)]  
  
     <span data-ttu-id="81454-109">或者，而不是通过它们的索引，循环访问数组中的所有元素，可以使用`foreach`语句 （在 C#) 或`For Each`（在 Visual Basic) 语句。</span><span class="sxs-lookup"><span data-stu-id="81454-109">Alternately, instead of iterating all the elements in the array by their index, you can use the `foreach` statement (in C#) or the `For Each` statement (in Visual Basic).</span></span>  
  
-   <span data-ttu-id="81454-110">尝试将数组元素分配到另一个数组不充分维度并具有较少的原始数组元素。</span><span class="sxs-lookup"><span data-stu-id="81454-110">Attempting to assign an array element to another array that has not been adequately dimensioned and that has fewer elements than the original array.</span></span> <span data-ttu-id="81454-111">下面的示例尝试分配中的最后一个元素`value1`中的同一元素的数组`value2`数组。</span><span class="sxs-lookup"><span data-stu-id="81454-111">The following example attempts to assign the last element in the `value1` array to the same element in the `value2` array.</span></span> <span data-ttu-id="81454-112">但是，`value2`已错误地划分数组具有六个而不是七个元素。</span><span class="sxs-lookup"><span data-stu-id="81454-112">However, the `value2` array has been incorrectly dimensioned to have six instead of seven elements.</span></span> <span data-ttu-id="81454-113">因此，赋值会引发<xref:System.IndexOutOfRangeException>异常。</span><span class="sxs-lookup"><span data-stu-id="81454-113">As a result, the assignment throws an <xref:System.IndexOutOfRangeException> exception.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/Uninit1.cs#10)]
     [!code-vb[System.IndexOutOfRangeException#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/Uninit1.vb#10)]  
  
-   <span data-ttu-id="81454-114">使用值的搜索方法循环访问数组或集合的特定索引位置开始的一部分返回。</span><span class="sxs-lookup"><span data-stu-id="81454-114">Using a value returned by a search method to iterate a portion of an array or collection starting at a particular index position.</span></span> <span data-ttu-id="81454-115">如果你忘记了检查是否搜索操作找到匹配项，则运行时会引发<xref:System.IndexOutOfRangeException>异常，如本示例中所示。</span><span class="sxs-lookup"><span data-stu-id="81454-115">If you forget to check whether the search operation found a match, the runtime throws an <xref:System.IndexOutOfRangeException> exception, as shown in this example.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/negative1.cs#5)]
     [!code-vb[System.IndexOutOfRangeException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/negative1.vb#5)]  
  
     <span data-ttu-id="81454-116">在这种情况下，<xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType>方法返回-1，这是无效的索引值，它无法找到匹配项时。</span><span class="sxs-lookup"><span data-stu-id="81454-116">In this case, the <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=nameWithType> method returns -1, which is an invalid index value, when it fails to find a match.</span></span> <span data-ttu-id="81454-117">若要更正此错误，搜索方法的返回值之前循环访问数组中，检查上，在此示例中所示。</span><span class="sxs-lookup"><span data-stu-id="81454-117">To correct this error, check the search method's return value before iterating the array, as shown in this example.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/negative2.cs#6)]
     [!code-vb[System.IndexOutOfRangeException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/negative2.vb#6)]  
  
-   <span data-ttu-id="81454-118">尝试使用或枚举结果集、 集合或测试是否返回的对象具有任何有效的数据的情况下由查询返回的数组。</span><span class="sxs-lookup"><span data-stu-id="81454-118">Trying to use or enumerate a result set, collection, or array returned by a query without testing whether the returned object has any valid data.</span></span>  
  
-   <span data-ttu-id="81454-119">使用计算的值定义的起始索引、 的结束索引或要迭代的项目数。</span><span class="sxs-lookup"><span data-stu-id="81454-119">Using a computed value to define the starting index, the ending index, or the number of items to be iterated.</span></span> <span data-ttu-id="81454-120">如果计算结果是意外，可能会导致<xref:System.IndexOutOfRangeException>异常。</span><span class="sxs-lookup"><span data-stu-id="81454-120">If the result of the computation is unexpected, it might result in an <xref:System.IndexOutOfRangeException> exception.</span></span> <span data-ttu-id="81454-121">应检查应用程序的逻辑在计算索引值，并循环访问数组或集合之前验证值。</span><span class="sxs-lookup"><span data-stu-id="81454-121">You should check your program's logic in calculating the index value and validate the value before iterating the array or collection.</span></span> <span data-ttu-id="81454-122">以下条件必须同时为 true;否则为<xref:System.IndexOutOfRangeException>引发异常：</span><span class="sxs-lookup"><span data-stu-id="81454-122">The following conditions must all be true; otherwise, an <xref:System.IndexOutOfRangeException> exception is thrown:</span></span>  
  
    -   <span data-ttu-id="81454-123">起始索引必须大于或等于<xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType>的维度的数组，它想要循环访问，或大于或等于 0 的集合。</span><span class="sxs-lookup"><span data-stu-id="81454-123">The starting index must be greater than or equal to <xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType> for the dimension of the array that you want to iterate, or greater than or equal to 0 for a collection.</span></span>  
  
    -   <span data-ttu-id="81454-124">结束索引不能超过<xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType>想要循环访问，或不能大于或等于数组的维度`Count`的集合属性。</span><span class="sxs-lookup"><span data-stu-id="81454-124">The ending index cannot exceed <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> for the dimension of the array that you want to iterate, or cannot be greater than or equal to the `Count` property of a collection.</span></span>  
  
    -   <span data-ttu-id="81454-125">下面的公式必须是你想要循环访问数组的维度，则返回 true:</span><span class="sxs-lookup"><span data-stu-id="81454-125">The following equation must be true for the dimension of the array that you want to iterate:</span></span>  
  
        ```  
        start_index >= lower_bound And start_index + items_to_iterate – 1 <= upper_bound  
        ```  
  
         <span data-ttu-id="81454-126">一个集合，必须满足以下公式：</span><span class="sxs-lookup"><span data-stu-id="81454-126">For a collection, the following equation must be true:</span></span>  
  
        ```  
        start_index >= 0 And start_index + items_to_iterate <= Count  
        ```  
  
        > [!TIP]
        >  <span data-ttu-id="81454-127">数组或集合的起始索引绝不能是负数。</span><span class="sxs-lookup"><span data-stu-id="81454-127">The starting index of an array or collection can never be a negative number.</span></span>  
  
-   <span data-ttu-id="81454-128">假定数组必须从零开始。</span><span class="sxs-lookup"><span data-stu-id="81454-128">Assuming that an array must be zero-based.</span></span> <span data-ttu-id="81454-129">可以通过创建不从零开始的数组<xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType>方法和可以由 COM 互操作，尽管它们不符合 CLS 規格。</span><span class="sxs-lookup"><span data-stu-id="81454-129">Arrays that are not zero-based can be created by the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType> method and can be returned by COM interop, although they aren't CLS-compliant.</span></span> <span data-ttu-id="81454-130">下面的示例阐释<xref:System.IndexOutOfRangeException>时尝试进行循环访问由创建的非基于零的数组引发<xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="81454-130">The following example illustrates the <xref:System.IndexOutOfRangeException> that is thrown when you try to iterate a non-zero-based array created by the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/nonzero1.cs#1)]
     [!code-vb[System.IndexOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/nonzero1.vb#1)]  
  
     <span data-ttu-id="81454-131">若要更正该错误，如以下示例所示，可以调用<xref:System.Array.GetLowerBound%2A>方法而不是进行假设数组的起始索引。</span><span class="sxs-lookup"><span data-stu-id="81454-131">To correct the error, as the following example does, you can call the <xref:System.Array.GetLowerBound%2A> method instead of making assumptions about the starting index of an array.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/nonzero2.cs#2)]
     [!code-vb[System.IndexOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/nonzero2.vb#2)]  
  
     <span data-ttu-id="81454-132">请注意，当您调用<xref:System.Array.GetLowerBound%2A>方法以获取数组的起始索引还应调用<xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType>方法以获取其结束索引。</span><span class="sxs-lookup"><span data-stu-id="81454-132">Note that when you call the <xref:System.Array.GetLowerBound%2A> method to get the starting index of an array, you should also call the <xref:System.Array.GetUpperBound%28System.Int32%29?displayProperty=nameWithType> method to get its ending index.</span></span>  
  
-   <span data-ttu-id="81454-133">索引和数字数组或集合中该索引处的值，让人困惑。</span><span class="sxs-lookup"><span data-stu-id="81454-133">Confusing an index and the value at that index in a numeric array or collection.</span></span> <span data-ttu-id="81454-134">使用时，通常会出现此问题`foreach`语句 （在 C#) 或`For Each`（在 Visual Basic) 语句。</span><span class="sxs-lookup"><span data-stu-id="81454-134">This issue usually occurs when using the `foreach` statement (in C#) or the `For Each` statement (in Visual Basic).</span></span> <span data-ttu-id="81454-135">以下示例演示了该问题。</span><span class="sxs-lookup"><span data-stu-id="81454-135">The following example illustrates the problem.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/foreach1.cs#7)]
     [!code-vb[System.IndexOutOfRangeException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/foreach1.vb#7)]  
  
     <span data-ttu-id="81454-136">迭代构造返回数组或集合，不是其索引中的每个值。</span><span class="sxs-lookup"><span data-stu-id="81454-136">The iteration construct returns each value in an array or collection, not its index.</span></span> <span data-ttu-id="81454-137">若要消除此异常，请使用此代码。</span><span class="sxs-lookup"><span data-stu-id="81454-137">To eliminate the exception, use this code.</span></span>  
  
     [!code-csharp[System.IndexOutOfRangeException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.indexoutofrangeexception/cs/foreach2.cs#8)]
     [!code-vb[System.IndexOutOfRangeException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.indexoutofrangeexception/vb/foreach2.vb#8)]  
  
-   <span data-ttu-id="81454-138">无效的列名称提供至<xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="81454-138">Providing an invalid column name to the <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="81454-139">违反线程安全性。</span><span class="sxs-lookup"><span data-stu-id="81454-139">Violating thread safety.</span></span> <span data-ttu-id="81454-140">操作，如读取相同<xref:System.IO.StreamReader>对象，写入到同一<xref:System.IO.StreamWriter>对象从多个线程，还是在枚举中的对象<xref:System.Collections.Hashtable>从不同的线程可引发<xref:System.IndexOutOfRangeException>如果该对象不访问线程安全的方式。</span><span class="sxs-lookup"><span data-stu-id="81454-140">Operations such as reading from the same <xref:System.IO.StreamReader> object, writing to the same <xref:System.IO.StreamWriter> object from multiple threads, or enumerating the objects in a <xref:System.Collections.Hashtable> from different threads can throw an <xref:System.IndexOutOfRangeException> if the object isn't accessed in a thread-safe way.</span></span> <span data-ttu-id="81454-141">此异常是通常间歇性的因为它依赖于争用条件。</span><span class="sxs-lookup"><span data-stu-id="81454-141">This exception is typically intermittent because it relies on a race condition.</span></span>  
  
 <span data-ttu-id="81454-142">使用硬编码的索引值来操作一个数组，很可能正在操作的数组的大小是否意外的索引值不正确或无效，或者引发异常。</span><span class="sxs-lookup"><span data-stu-id="81454-142">Using hard-coded index values to manipulate an array is likely to throw an exception if the index value is incorrect or invalid, or if the size of the array being manipulation is unexpected.</span></span> <span data-ttu-id="81454-143">若要防止操作引发<xref:System.IndexOutOfRangeException>异常，您可以执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="81454-143">To prevent an operation from throwing an  <xref:System.IndexOutOfRangeException> exception, you can do the following:</span></span>  
  
-   <span data-ttu-id="81454-144">循环访问数组使用的元素[foreach](https://msdn.microsoft.com/library/ttw7t8t6.aspx)语句 （在 C#) 或[为每个...下一步](https://msdn.microsoft.com/library/5ebk1751.aspx)构造 （在 Visual Basic) 而不是按索引循环访问元素。</span><span class="sxs-lookup"><span data-stu-id="81454-144">Iterate the elements of the array using the [foreach](https://msdn.microsoft.com/library/ttw7t8t6.aspx) statement (in C#) or the [For Each...Next](https://msdn.microsoft.com/library/5ebk1751.aspx) construct (in Visual Basic)  instead of iterating elements by index.</span></span>  
  
-   <span data-ttu-id="81454-145">通过从返回的索引开始的索引循环访问的元素<xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType>方法，并返回索引的情况直到<xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="81454-145">Iterate the elements by index starting with the index returned by the <xref:System.Array.GetLowerBound%2A?displayProperty=nameWithType> method and ending with the index returned by the <xref:System.Array.GetUpperBound%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="81454-146">如果您要分配给另一个数组中的元素，请确保目标数组具有与源数组至少尽可能多的元素通过比较其<xref:System.Array.Length%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="81454-146">If you are assigning elements in one array to another, ensure that  the target array has at least as many elements as the source array by comparing their <xref:System.Array.Length%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="81454-147">有关实例的初始属性值的列表<xref:System.IndexOutOfRangeException>，请参阅<xref:System.IndexOutOfRangeException>构造函数。</span><span class="sxs-lookup"><span data-stu-id="81454-147">For a list of initial property values for an instance of <xref:System.IndexOutOfRangeException>, see the <xref:System.IndexOutOfRangeException> constructors.</span></span>  
  
 <span data-ttu-id="81454-148">以下的中间语言 (IL) 指令引发<xref:System.IndexOutOfRangeException>:</span><span class="sxs-lookup"><span data-stu-id="81454-148">The following intermediate language (IL) instructions throw <xref:System.IndexOutOfRangeException>:</span></span>  
  
-   <span data-ttu-id="81454-149">ldelem。\<类型 ></span><span class="sxs-lookup"><span data-stu-id="81454-149">ldelem.\<type></span></span>  
  
-   <span data-ttu-id="81454-150">ldelema</span><span class="sxs-lookup"><span data-stu-id="81454-150">ldelema</span></span>  
  
-   <span data-ttu-id="81454-151">stelem.\<type></span><span class="sxs-lookup"><span data-stu-id="81454-151">stelem.\<type></span></span>  
  
 <span data-ttu-id="81454-152"><xref:System.IndexOutOfRangeException> 使用 HRESULT COR_E_INDEXOUTOFRANGE，其值 0x80131508。</span><span class="sxs-lookup"><span data-stu-id="81454-152"><xref:System.IndexOutOfRangeException> uses the HRESULT COR_E_INDEXOUTOFRANGE, which has the value 0x80131508.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md">
      <span data-ttu-id="81454-153">在 .NET 中处理和引发异常</span>
      <span class="sxs-lookup">
        <span data-stu-id="81454-153">Handling and throwing exceptions in .NET</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="81454-154">初始化 <see cref="T:System.IndexOutOfRangeException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81454-154">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="81454-155">初始化 <see cref="T:System.IndexOutOfRangeException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81454-155">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81454-156">此构造函数初始化<xref:System.Exception.Message%2A>为系统提供的描述错误，例如"的数组索引超出了范围。"的消息的新实例的属性</span><span class="sxs-lookup"><span data-stu-id="81454-156">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "An array index is out of range."</span></span> <span data-ttu-id="81454-157">此消息将当前系统区域性考虑在内。</span><span class="sxs-lookup"><span data-stu-id="81454-157">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="81454-158">下表显示 <xref:System.IndexOutOfRangeException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="81454-158">The following table shows the initial property values for an instance of <xref:System.IndexOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="81454-159">Property</span><span class="sxs-lookup"><span data-stu-id="81454-159">Property</span></span>|<span data-ttu-id="81454-160">“值”</span><span class="sxs-lookup"><span data-stu-id="81454-160">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="81454-161">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="81454-161">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="81454-162">本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="81454-162">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new IndexOutOfRangeException : string -&gt; IndexOutOfRangeException" Usage="new System.IndexOutOfRangeException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="81454-163">描述错误的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81454-163">The message that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81454-164">用指定的错误消息初始化 <see cref="T:System.IndexOutOfRangeException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81454-164">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81454-165">此构造函数初始化<xref:System.Exception.Message%2A?displayProperty=nameWithType>属性的新的异常使用`message`参数。</span><span class="sxs-lookup"><span data-stu-id="81454-165">This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=nameWithType> property of the new exception using the `message` parameter.</span></span> <span data-ttu-id="81454-166">`message` 的内容设计为易于理解。</span><span class="sxs-lookup"><span data-stu-id="81454-166">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="81454-167">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="81454-167">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="81454-168">下表显示 <xref:System.IndexOutOfRangeException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="81454-168">The following table shows the initial property values for an instance of <xref:System.IndexOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="81454-169">Property</span><span class="sxs-lookup"><span data-stu-id="81454-169">Property</span></span>|<span data-ttu-id="81454-170">“值”</span><span class="sxs-lookup"><span data-stu-id="81454-170">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="81454-171">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="81454-171">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="81454-172">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="81454-172">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexOutOfRangeException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IndexOutOfRangeException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new IndexOutOfRangeException : string * Exception -&gt; IndexOutOfRangeException" Usage="new System.IndexOutOfRangeException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="81454-173">解释异常原因的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81454-173">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="81454-174">导致当前异常的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81454-174">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="81454-175">如果 <paramref name="innerException" /> 参数不是 null 引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 <see langword="catch" /> 块中引发当前异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81454-175">If the <paramref name="innerException" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81454-176">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.IndexOutOfRangeException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81454-176">Initializes a new instance of the <see cref="T:System.IndexOutOfRangeException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81454-177">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="81454-177">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="81454-178">`InnerException` 属性返回传递到构造函数中的相同值，或者如果 `Nothing` 属性不向构造函数提供内部异常值，则为空引用（在 Visual Basic 中为 `InnerException`）。</span><span class="sxs-lookup"><span data-stu-id="81454-178">The `InnerException` property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the `InnerException` property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="81454-179">下表显示 <xref:System.IndexOutOfRangeException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="81454-179">The following table shows the initial property values for an instance of <xref:System.IndexOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="81454-180">Property</span><span class="sxs-lookup"><span data-stu-id="81454-180">Property</span></span>|<span data-ttu-id="81454-181">“值”</span><span class="sxs-lookup"><span data-stu-id="81454-181">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="81454-182">内部异常引用。</span><span class="sxs-lookup"><span data-stu-id="81454-182">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="81454-183">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="81454-183">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>