<Type Name="LocalDataStoreSlot" FullName="System.LocalDataStoreSlot">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62e95731f3daf201a4fa15d552b9195eba494808" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39853413" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LocalDataStoreSlot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LocalDataStoreSlot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.LocalDataStoreSlot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalDataStoreSlot" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalDataStoreSlot sealed" />
  <TypeSignature Language="F#" Value="type LocalDataStoreSlot = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>封装内存槽以存储本地数据。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 提供了使用线程本地存储 (TLS) 的两种方式： 线程相对静态字段和数据槽。  
  
-   线程相对静态字段`static`字段 (`Shared`在 Visual Basic 中的字段)，标有<xref:System.ThreadStaticAttribute>属性。 他们提供更好的性能优于数据槽，并启用编译时类型检查。  
  
-   数据槽是较慢且更加难于使用比线程相对静态字段。 此外，数据存储类型为<xref:System.Object>，因此必须将它转换为正确的类型然后再使用它。 但是，当没有足够的信息，在编译时分配的静态字段时可以使用数据槽。  
  
 有关使用 TLS 的详细信息，请参阅[线程本地存储： 线程相对静态字段和数据槽](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)。  
  
 同样，.NET Framework 提供了两种机制使用本地存储上下文： 上下文相对静态字段和数据槽。 上下文相关的静态字段是静态字段标有<xref:System.ContextStaticAttribute>属性。 使用这两种机制之间权衡是类似于使用线程相对静态字段和数据槽之间的权衡。  
  
 <xref:System.LocalDataStoreSlot>结构可用作本地存储内存机制，线程和上下文可用于分别存储线程特定和特定于上下文的数据。 在创建时，公共语言运行时分配将多个数据存储阵列分区到每个进程。 线程或上下文调用的线程或上下文对象过期后，重复使用各种函数分配数据存储区中的数据槽、 存储和检索槽中的数据值以及释放的数据槽。  
  
 是每个线程或上下文; 唯一的数据槽线程或上下文对象之间未共享它们的值。 可以分配数据槽，按名称或索引号。  
  
 有关将本地数据存储的详细信息，请参阅<xref:System.Threading.Thread>或<xref:System.Runtime.Remoting.Contexts.Context>。 <xref:System.LocalDataStoreSlot>如与方法一起使用类<xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=nameWithType>， <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=nameWithType>， <xref:System.Threading.Thread.GetData%2A?displayProperty=nameWithType>，和<xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=nameWithType>; 它不具有任何你需要使用其自己的方法。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
  </Docs>
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LocalDataStoreSlot ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.LocalDataStoreSlot.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!LocalDataStoreSlot ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="localDataStoreSlot.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确保垃圾回收器回收 <see cref="T:System.LocalDataStoreSlot" /> 对象时释放资源并执行其他清理操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 垃圾回收器调用<xref:System.LocalDataStoreSlot.Finalize%2A>何时可以完成而当前对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
  </Members>
</Type>