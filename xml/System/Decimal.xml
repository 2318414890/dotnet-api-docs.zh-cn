<Type Name="Decimal" FullName="System.Decimal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="017e7c67a6186b55de5b233464dbe000cac3ec76" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52386078" /></Metadata><TypeSignature Language="C#" Value="public struct Decimal : IComparable, IComparable&lt;decimal&gt;, IConvertible, IEquatable&lt;decimal&gt;, IFormattable, System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Decimal extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Decimal&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.Decimal&gt;, class System.IFormattable, class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Decimal" />
  <TypeSignature Language="VB.NET" Value="Public Structure Decimal&#xA;Implements IComparable, IComparable(Of Decimal), IConvertible, IDeserializationCallback, IEquatable(Of Decimal), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Decimal : IComparable, IComparable&lt;System::Decimal&gt;, IConvertible, IEquatable&lt;System::Decimal&gt;, IFormattable, System::Runtime::Serialization::IDeserializationCallback" />
  <TypeSignature Language="F#" Value="type decimal = struct&#xA;    interface IFormattable&#xA;    interface IConvertible&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7ad78-101">表示十进制浮点数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-101">Represents a decimal floating-point number.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-102"><xref:System.Decimal>值类型表示十进制数字范围从-79228162514264337593543950335 到 + 79228162514264337593543950335。</span><span class="sxs-lookup"><span data-stu-id="7ad78-102">The <xref:System.Decimal> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335.</span></span> <span data-ttu-id="7ad78-103">默认值`Decimal`为 0。</span><span class="sxs-lookup"><span data-stu-id="7ad78-103">The default value of a `Decimal` is 0.</span></span> <span data-ttu-id="7ad78-104"><xref:System.Decimal>值类型是适用于需要大量的有效整数和小数位数和无舍入误差的财务计算。</span><span class="sxs-lookup"><span data-stu-id="7ad78-104">The <xref:System.Decimal> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors.</span></span> <span data-ttu-id="7ad78-105"><xref:System.Decimal>类型并不能排除需要舍入。</span><span class="sxs-lookup"><span data-stu-id="7ad78-105">The <xref:System.Decimal> type does not eliminate the need for rounding.</span></span> <span data-ttu-id="7ad78-106">相反，它最大限度地减少了因舍入而导致的错误。</span><span class="sxs-lookup"><span data-stu-id="7ad78-106">Rather, it minimizes errors due to rounding.</span></span> <span data-ttu-id="7ad78-107">例如，下面的代码生成而不是 1 0.9999999999999999999999999999 的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-107">For example, the following code produces a result of 0.9999999999999999999999999999 instead of 1.</span></span>  
  
 [!code-cpp[System.Decimal.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal1.cpp#1)]
 [!code-csharp[System.Decimal.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#1)]
 [!code-vb[System.Decimal.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#1)]  
  
 <span data-ttu-id="7ad78-108">当部门和乘法的结果传递给<xref:System.Math.Round%2A>方法，结果不会有损失精度，如以下代码所示。</span><span class="sxs-lookup"><span data-stu-id="7ad78-108">When the result of the division and multiplication is passed to the <xref:System.Math.Round%2A> method, the result suffers no loss of precision, as the following code shows.</span></span>  
  
 [!code-cpp[System.Decimal.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal2.cpp#2)]
 [!code-csharp[System.Decimal.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#2)]
 [!code-vb[System.Decimal.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#2)]  
  
 <span data-ttu-id="7ad78-109">十进制数字是包含一个符号的浮点值，其中每个数字的值介于 0 到 9 的数字值和指示浮动小数点分隔的整数和小数部分的位置的缩放系数数字值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-109">A decimal number is a floating-point value that consists of a sign, a numeric value where each digit in the value ranges from 0 to 9, and a scaling factor that indicates the position of a floating decimal point that separates the integral and fractional parts of the numeric value.</span></span>  
  
 <span data-ttu-id="7ad78-110">二进制表示形式<xref:System.Decimal>1 位符号、 96 位整数和用作除数的 96 位整数，并指定它的哪些部分是小数部分的缩放系数的值组成。</span><span class="sxs-lookup"><span data-stu-id="7ad78-110">The binary representation of a <xref:System.Decimal> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="7ad78-111">比例因子是隐式数字 10，范围从 0 到 28 的指数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-111">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span> <span data-ttu-id="7ad78-112">因此，二进制表示形式<xref:System.Decimal>值在窗体 ((-2<sup>96</sup>为 2<sup>96</sup>) / 10<sup>(0 到 28)</sup>)，其中的 (2<sup>96</sup>为-1)等同于<xref:System.Decimal.MinValue>，并 2<sup>96</sup>-1 等同于<xref:System.Decimal.MaxValue>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-112">Therefore, the binary representation of a <xref:System.Decimal> value  the form, ((-2<sup>96</sup> to 2<sup>96</sup>) / 10<sup>(0 to 28)</sup>), where -(2<sup>96</sup>-1) is equal to <xref:System.Decimal.MinValue>, and 2<sup>96</sup>-1 is equal to <xref:System.Decimal.MaxValue>.</span></span> <span data-ttu-id="7ad78-113">有关更多信息的二进制表示形式<xref:System.Decimal>值和示例，请参阅<xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29>构造函数和<xref:System.Decimal.GetBits%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-113">For more information about the binary representation of <xref:System.Decimal> values and an example, see the <xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29> constructor and the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 <span data-ttu-id="7ad78-114">比例因子还保留在任何尾随零<xref:System.Decimal>数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-114">The scaling factor  also preserves any trailing zeros in a <xref:System.Decimal> number.</span></span> <span data-ttu-id="7ad78-115">尾随零不会影响值<xref:System.Decimal>以算术或比较运算数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-115">Trailing zeros do not affect the value of a <xref:System.Decimal> number in arithmetic or comparison operations.</span></span> <span data-ttu-id="7ad78-116">但是，尾随零可能会透露通过<xref:System.Decimal.ToString%2A>方法，如果应用正确的格式字符串。</span><span class="sxs-lookup"><span data-stu-id="7ad78-116">However, trailing zeros might be revealed by the <xref:System.Decimal.ToString%2A> method if an appropriate format string is applied.</span></span>  
  
## <a name="conversion-considerations"></a><span data-ttu-id="7ad78-117">有关转换的注意事项</span><span class="sxs-lookup"><span data-stu-id="7ad78-117">Conversion Considerations</span></span>  
 <span data-ttu-id="7ad78-118">此类型提供了将转换的方法<xref:System.Decimal>值与<xref:System.SByte>， <xref:System.Int16>， <xref:System.Int32>， <xref:System.Int64>， <xref:System.Byte>， <xref:System.UInt16>， <xref:System.UInt32>，和<xref:System.UInt64>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-118">This type provides methods that convert <xref:System.Decimal> values to and from <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> values.</span></span> <span data-ttu-id="7ad78-119">从到这些整型转换<xref:System.Decimal>扩大转换，永远不会丢失信息或引发异常。</span><span class="sxs-lookup"><span data-stu-id="7ad78-119">Conversions from these integral types to <xref:System.Decimal> are widening conversions that never lose information or throw exceptions.</span></span>  
  
 <span data-ttu-id="7ad78-120">从转换<xref:System.Decimal>到任何整型类型收缩转换的舍入<xref:System.Decimal>到最接近的整数值接近零的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-120">Conversions from <xref:System.Decimal> to any of the integral types are narrowing conversions that round the <xref:System.Decimal> value to the nearest integer value toward zero.</span></span> <span data-ttu-id="7ad78-121">某些语言中的，如 C# 中，还支持的转换<xref:System.Decimal>值到<xref:System.Char>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-121">Some languages, such as C#, also support the conversion of <xref:System.Decimal> values to <xref:System.Char> values.</span></span> <span data-ttu-id="7ad78-122">如果不能在目标类型中表示这些转换的结果<xref:System.OverflowException>引发异常。</span><span class="sxs-lookup"><span data-stu-id="7ad78-122">If the result of these conversions cannot be represented in the destination type, an <xref:System.OverflowException> exception is thrown.</span></span>  
  
 <span data-ttu-id="7ad78-123"><xref:System.Decimal>类型还提供了将转换的方法<xref:System.Decimal>值到和从<xref:System.Single>和<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-123">The <xref:System.Decimal> type also provides methods that convert <xref:System.Decimal> values to and from <xref:System.Single> and <xref:System.Double> values.</span></span> <span data-ttu-id="7ad78-124">从转换<xref:System.Decimal>到<xref:System.Single>或<xref:System.Double>收缩转换可能会丢失精度，但不是有关信息的量值的转换后的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-124">Conversions from <xref:System.Decimal> to <xref:System.Single> or <xref:System.Double> are narrowing conversions that might lose precision but not information about the magnitude of the converted value.</span></span> <span data-ttu-id="7ad78-125">转换不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="7ad78-125">The conversion does not throw an exception.</span></span>  
  
 <span data-ttu-id="7ad78-126">从转换<xref:System.Single>或<xref:System.Double>到<xref:System.Decimal>引发<xref:System.OverflowException>异常，如果转换的结果不能表示为<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-126">Conversions from <xref:System.Single> or <xref:System.Double> to <xref:System.Decimal> throw an <xref:System.OverflowException> exception if the result of the conversion cannot be represented as a <xref:System.Decimal>.</span></span>  
  
## <a name="performing-operations-on-decimal-values"></a><span data-ttu-id="7ad78-127">对十进制值执行操作</span><span class="sxs-lookup"><span data-stu-id="7ad78-127">Performing Operations on Decimal Values</span></span>  
 <span data-ttu-id="7ad78-128"><xref:System.Decimal>类型支持标准的数学运算，例如加法、 减法、 除法、 乘法和一元求反。</span><span class="sxs-lookup"><span data-stu-id="7ad78-128">The <xref:System.Decimal> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation.</span></span> <span data-ttu-id="7ad78-129">此外可以直接使用的二进制表示形式<xref:System.Decimal>值通过调用<xref:System.Decimal.GetBits%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-129">You can also work directly with the binary representation of a <xref:System.Decimal> value by calling the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 <span data-ttu-id="7ad78-130">比较两个<xref:System.Decimal>值，可以使用标准数值比较运算符，也可以调用<xref:System.Decimal.CompareTo%2A>或<xref:System.Decimal.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-130">To compare two <xref:System.Decimal> values, you can use the standard numeric comparison operators, or you can call the <xref:System.Decimal.CompareTo%2A> or <xref:System.Decimal.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="7ad78-131">您还可以调用的成员<xref:System.Math>类来执行各种数值操作，包括如何确定两个最大或最小值的某个数字的绝对值<xref:System.Decimal>值，获取数字的符号和舍入一个数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-131">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, determining the maximum or minimum value of two <xref:System.Decimal> values, getting the sign of a number, and rounding a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-132">以下代码示例演示了 <xref:System.Decimal> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-132">The following code example demonstrates the use of <xref:System.Decimal>.</span></span>  
  
 [!code-cpp[Decimal Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#1)]
 [!code-csharp[Decimal Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#1)]
 [!code-vb[Decimal Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="7ad78-133">此类型所有成员都是线程安全。</span><span class="sxs-lookup"><span data-stu-id="7ad78-133">All members of this type are thread safe.</span></span> <span data-ttu-id="7ad78-134">看起来要修改实例状态的成员实际上返回使用新值进行初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="7ad78-134">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="7ad78-135">作为使用任何其他类型，读取和写入对共享变量包含此类型的实例必须受到使用锁来确保线程安全性。</span><span class="sxs-lookup"><span data-stu-id="7ad78-135">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.Int16" />
    <altmember cref="T:System.Int32" />
    <altmember cref="T:System.Int64" />
    <altmember cref="T:System.Byte" />
    <altmember cref="T:System.UInt16" />
    <altmember cref="T:System.UInt32" />
    <altmember cref="T:System.UInt64" />
    <altmember cref="T:System.Single" />
    <altmember cref="T:System.Double" />
    <altmember cref="T:System.Char" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ad78-136">初始化 <see cref="T:System.Decimal" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="7ad78-136">Initializes a new instance of <see cref="T:System.Decimal" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(double value);" />
      <MemberSignature Language="F#" Value="new decimal : double -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-137">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-137">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="7ad78-138">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的双精度浮点数的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-138">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified double-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-139">此构造函数将舍入`value`到使用舍入为最接近的 15 个有效位。</span><span class="sxs-lookup"><span data-stu-id="7ad78-139">This constructor rounds `value` to 15 significant digits using rounding to nearest.</span></span> <span data-ttu-id="7ad78-140">这是即使数已超过 15 个数字并较低的有效位均为零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-140">This is done even if the number has more than 15 digits and the less significant digits are zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-141">下面的代码示例创建的多个`Decimal`数字使用初始化的构造函数重载`Decimal`结构，<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-141">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Reals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctordo.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Reals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctordo.cs#2)]
 [!code-vb[System.Decimal.Ctor.Reals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctordo.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-142"><paramref name="value" /> 大于 <see cref="F:System.Decimal.MaxValue" /> 或小于 <see cref="F:System.Decimal.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-142"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
<span data-ttu-id="7ad78-143">或</span><span class="sxs-lookup"><span data-stu-id="7ad78-143">-or-</span></span> 
 <span data-ttu-id="7ad78-144"><paramref name="value" /> 为 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-144"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(int value);" />
      <MemberSignature Language="F#" Value="new decimal : int -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-145">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-145">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="7ad78-146">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的 32 位有符号整数的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-146">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit signed integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-147">下面的代码示例创建的多个`Decimal`数字使用初始化的构造函数重载`Decimal`结构，<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-147">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctori.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Ints#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctori.cs#1)]
 [!code-vb[System.Decimal.Ctor.Ints#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctori.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int[] bits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32[] bits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bits As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(cli::array &lt;int&gt; ^ bits);" />
      <MemberSignature Language="F#" Value="new decimal : int[] -&gt; decimal" Usage="new System.decimal bits" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bits" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="bits"><span data-ttu-id="7ad78-148">包含十进制值表示形式的 32 位有符号整数的数组。</span><span class="sxs-lookup"><span data-stu-id="7ad78-148">An array of 32-bit signed integers containing a representation of a decimal value.</span></span></param>
        <summary><span data-ttu-id="7ad78-149">将 <see cref="T:System.Decimal" /> 的新实例初始化为以二进制表示的、包含在指定数组中的十进制值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-149">Initializes a new instance of <see cref="T:System.Decimal" /> to a decimal value represented in binary and contained in a specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-150">二进制表示形式<xref:System.Decimal>1 位符号、 96 位整数和用于分隔整数，并指定它的哪些部分是小数部分的缩放系数的数字组成。</span><span class="sxs-lookup"><span data-stu-id="7ad78-150">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="7ad78-151">比例因子是隐式数字 10，范围从 0 到 28 的指数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-151">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span>  
  
 <span data-ttu-id="7ad78-152">`bits` 是 32 位有符号整数的四个元素长数组。</span><span class="sxs-lookup"><span data-stu-id="7ad78-152">`bits` is a four-element long array of 32-bit signed integers.</span></span>  
  
 <span data-ttu-id="7ad78-153">`bits` [0] `bits` [1] 和`bits`[2] 包含 96 位整数号的低、 中和高 32 位。</span><span class="sxs-lookup"><span data-stu-id="7ad78-153">`bits` [0], `bits` [1], and `bits` [2] contain the low, middle, and high 32 bits of the 96-bit integer number.</span></span>  
  
 <span data-ttu-id="7ad78-154">`bits` [3] 包含的缩放比例和登录，并由以下部分组成：</span><span class="sxs-lookup"><span data-stu-id="7ad78-154">`bits` [3] contains the scale factor and sign, and consists of following parts:</span></span>  
  
 <span data-ttu-id="7ad78-155">位 0 到 15，较低的字，未使用，必须为零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-155">Bits 0 to 15, the lower word, are unused and must be zero.</span></span>  
  
 <span data-ttu-id="7ad78-156">16 到 23 位必须包含一个介于 0 到 28，之间的指数表示 10 的强大功能将整数值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-156">Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</span></span>  
  
 <span data-ttu-id="7ad78-157">24 到 30 位未使用，必须为零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-157">Bits 24 to 30 are unused and must be zero.</span></span>  
  
 <span data-ttu-id="7ad78-158">第 31 位包含登录;0 的含义正类和 1 表示负数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-158">Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.</span></span>  
  
 <span data-ttu-id="7ad78-159">数字值可能具有多个可能二进制表示形式;所有都同样有效和数值上相等。</span><span class="sxs-lookup"><span data-stu-id="7ad78-159">A numeric value might have several possible binary representations; all are equally valid and numerically equivalent.</span></span> <span data-ttu-id="7ad78-160">请注意，位表示形式区分正负零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-160">Note that the bit representation differentiates between negative and positive zero.</span></span> <span data-ttu-id="7ad78-161">这些值被视为相等的所有操作中。</span><span class="sxs-lookup"><span data-stu-id="7ad78-161">These values are treated as being equal in all operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-162">下面的代码示例创建的多个`Decimal`数字使用初始化的构造函数重载`Decimal`结构具有四个数组<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-162">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an array of four <xref:System.Int32> values.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Arrays#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriarr.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Arrays#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriarr.cs#1)]
 [!code-vb[System.Decimal.Ctor.Arrays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriarr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ad78-163"><paramref name="bits" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-163"><paramref name="bits" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ad78-164"><paramref name="bits" /> 的长度不为 4。</span><span class="sxs-lookup"><span data-stu-id="7ad78-164">The length of the <paramref name="bits" /> is not 4.</span></span>  
  
<span data-ttu-id="7ad78-165">或</span><span class="sxs-lookup"><span data-stu-id="7ad78-165">-or-</span></span> 
<span data-ttu-id="7ad78-166"><paramref name="bits" /> 中的十进制值的表示形式无效。</span><span class="sxs-lookup"><span data-stu-id="7ad78-166">The representation of the decimal value in <paramref name="bits" /> is not valid.</span></span></exception>
        <altmember cref="M:System.Decimal.GetBits(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(long value);" />
      <MemberSignature Language="F#" Value="new decimal : int64 -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-167">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-167">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="7ad78-168">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的 64 位有符号整数的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-168">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit signed integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-169">下面的代码示例创建的多个`Decimal`数字使用初始化的构造函数重载`Decimal`结构，<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-169">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int64> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorl.cpp#3)]
 [!code-csharp[System.Decimal.Ctor.Ints#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorl.cs#3)]
 [!code-vb[System.Decimal.Ctor.Ints#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorl.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(float value);" />
      <MemberSignature Language="F#" Value="new decimal : single -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-170">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-170">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="7ad78-171">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的单精度浮点数的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-171">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified single-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-172">此构造函数将舍入`value`到 7 使用舍入为最接近的有效数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-172">This constructor rounds `value` to 7 significant digits using rounding to nearest.</span></span> <span data-ttu-id="7ad78-173">即使数字的位数超过 7 和较低的有效位均为零，也是如此。</span><span class="sxs-lookup"><span data-stu-id="7ad78-173">This is done even if the number has more than 7 digits and the less significant digits are zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-174">下面的代码示例创建的多个`Decimal`数字使用初始化的构造函数重载`Decimal`结构，<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-174">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Single> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Reals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctors.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Reals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctors.cs#1)]
 [!code-vb[System.Decimal.Ctor.Reals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctors.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-175"><paramref name="value" /> 大于 <see cref="F:System.Decimal.MaxValue" /> 或小于 <see cref="F:System.Decimal.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-175"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
<span data-ttu-id="7ad78-176">或</span><span class="sxs-lookup"><span data-stu-id="7ad78-176">-or-</span></span> 
 <span data-ttu-id="7ad78-177"><paramref name="value" /> 为 <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.PositiveInfinity" /> 或 <see cref="F:System.Single.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-177"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="new decimal : uint32 -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-178">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-178">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="7ad78-179">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的 32 位无符号整数的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-179">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit unsigned integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-180">下面的代码示例创建的多个`Decimal`数字使用初始化的构造函数重载`Decimal`结构，<xref:System.UInt32>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-180">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt32> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorui.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Ints#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorui.cs#2)]
 [!code-vb[System.Decimal.Ctor.Ints#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorui.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="new decimal : uint64 -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-181">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-181">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="7ad78-182">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的 64 位无符号整数的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-182">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit unsigned integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-183">下面的代码示例创建的多个`Decimal`数字使用初始化的构造函数重载`Decimal`结构，<xref:System.UInt64>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-183">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt64> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorul.cpp#4)]
 [!code-csharp[System.Decimal.Ctor.Ints#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorul.cs#4)]
 [!code-vb[System.Decimal.Ctor.Ints#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorul.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int lo, int mid, int hi, bool isNegative, byte scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 lo, int32 mid, int32 hi, bool isNegative, unsigned int8 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (lo As Integer, mid As Integer, hi As Integer, isNegative As Boolean, scale As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(int lo, int mid, int hi, bool isNegative, System::Byte scale);" />
      <MemberSignature Language="F#" Value="new decimal : int * int * int * bool * byte -&gt; decimal" Usage="new System.decimal (lo, mid, hi, isNegative, scale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lo" Type="System.Int32" />
        <Parameter Name="mid" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
        <Parameter Name="isNegative" Type="System.Boolean" />
        <Parameter Name="scale" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="lo"><span data-ttu-id="7ad78-184">96 位整数的低 32 位。</span><span class="sxs-lookup"><span data-stu-id="7ad78-184">The low 32 bits of a 96-bit integer.</span></span></param>
        <param name="mid"><span data-ttu-id="7ad78-185">96 位整数的中间 32 位。</span><span class="sxs-lookup"><span data-stu-id="7ad78-185">The middle 32 bits of a 96-bit integer.</span></span></param>
        <param name="hi"><span data-ttu-id="7ad78-186">96 位整数的高 32 位。</span><span class="sxs-lookup"><span data-stu-id="7ad78-186">The high 32 bits of a 96-bit integer.</span></span></param>
        <param name="isNegative"><span data-ttu-id="7ad78-187">若要指示负数，则为 <see langword="true" />；若要指示正数，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-187"><see langword="true" /> to indicate a negative number; <see langword="false" /> to indicate a positive number.</span></span></param>
        <param name="scale"><span data-ttu-id="7ad78-188">10 的指数（0 到 28 之间）。</span><span class="sxs-lookup"><span data-stu-id="7ad78-188">A power of 10 ranging from 0 to 28.</span></span></param>
        <summary><span data-ttu-id="7ad78-189">用指定实例构成部分的参数来初始化 <see cref="T:System.Decimal" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="7ad78-189">Initializes a new instance of <see cref="T:System.Decimal" /> from parameters specifying the instance's constituent parts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-190">二进制表示形式<xref:System.Decimal>1 位符号、 96 位整数和用于分隔整数，并指定它的哪些部分是小数部分的缩放系数的数字组成。</span><span class="sxs-lookup"><span data-stu-id="7ad78-190">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="7ad78-191">比例因子是隐式数字 10 范围从 0 到 28 的指数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-191">The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-192">下面的代码示例创建的多个`Decimal`数字使用初始化的构造函数重载`Decimal`结构具有三个<xref:System.Int32>值的单词，<xref:System.Boolean>登录，和一个<xref:System.Byte>缩放比例。</span><span class="sxs-lookup"><span data-stu-id="7ad78-192">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with three <xref:System.Int32> value words, a <xref:System.Boolean> sign, and a <xref:System.Byte> scale factor.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Arrays#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriiibby.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Arrays#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriiibby.cs#2)]
 [!code-vb[System.Decimal.Ctor.Arrays#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriiibby.vb#2)]  
  
 <span data-ttu-id="7ad78-193">下面的示例使用<xref:System.Decimal.GetBits%2A>方法来检索数组的组件的各部分。</span><span class="sxs-lookup"><span data-stu-id="7ad78-193">The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array.</span></span> <span data-ttu-id="7ad78-194">然后，它使用此数组中调用<xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29>构造函数实例化一个新<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-194">It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]
 [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ad78-195"><paramref name="scale" /> 大于 28。</span><span class="sxs-lookup"><span data-stu-id="7ad78-195"><paramref name="scale" /> is greater than 28.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static decimal Add (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Add(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Add(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Add : decimal * decimal -&gt; decimal" Usage="System.decimal.Add (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-196">要相加的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-196">The first value to add.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-197">要相加的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-197">The second value to add.</span></span></param>
        <summary><span data-ttu-id="7ad78-198">将两个指定的 <see cref="T:System.Decimal" /> 值相加。</span><span class="sxs-lookup"><span data-stu-id="7ad78-198">Adds two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7ad78-199"><paramref name="d1" /> 与 <paramref name="d2" /> 的和。</span><span class="sxs-lookup"><span data-stu-id="7ad78-199">The sum of <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-200">下面的代码示例演示如何使用`Add`:</span><span class="sxs-lookup"><span data-stu-id="7ad78-200">The following code sample illustrates the use of `Add` :</span></span>  
  
 [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]
 [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]
 [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-201"><paramref name="d1" /> 与 <paramref name="d2" /> 的和小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-201">The sum of <paramref name="d1" /> and <paramref name="d2" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Ceiling : decimal -&gt; decimal" Usage="System.decimal.Ceiling d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-202">十进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-202">A decimal number.</span></span></param>
        <summary><span data-ttu-id="7ad78-203">返回大于或等于指定的十进制数的最小整数值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-203">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="7ad78-204">大于或等于 <paramref name="d" /> 参数的最小整数值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-204">The smallest integral value that is greater than or equal to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="7ad78-205">请注意，此方法返回 <see cref="T:System.Decimal" />，而不是整数类型。</span><span class="sxs-lookup"><span data-stu-id="7ad78-205">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-206">此方法的行为遵循 IEEE 标准 754，第 4 节。</span><span class="sxs-lookup"><span data-stu-id="7ad78-206">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="7ad78-207">这种舍入有时称为向正无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="7ad78-207">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="7ad78-208">换而言之，如果`d`是正数，是否存在任何小数部分导致`d`要舍入为下一步的最大整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-208">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="7ad78-209">如果`d`为负，则舍入运算会导致任何小数部分`d`被放弃。</span><span class="sxs-lookup"><span data-stu-id="7ad78-209">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="7ad78-210">此方法的操作不同于<xref:System.Decimal.Floor%2A>方法支持向负无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="7ad78-210">The operation of this method differs from the <xref:System.Decimal.Floor%2A> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-211">下面的示例阐释<xref:System.Decimal.Ceiling%2A>方法并将其与进行比较<xref:System.Decimal.Floor%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-211">The following example illustrates the <xref:System.Decimal.Ceiling%2A> method and contrasts it with the <xref:System.Decimal.Floor%2A> method.</span></span>  
  
 [!code-csharp[System.Decimal.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs#1)]
 [!code-vb[System.Decimal.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (d1 As Decimal, d2 As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Compare : decimal * decimal -&gt; int" Usage="System.decimal.Compare (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-212">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-212">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-213">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-213">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7ad78-214">比较两个指定的 <see cref="T:System.Decimal" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-214">Compares two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7ad78-215">有符号数字，指示 <paramref name="d1" /> 和 <paramref name="d2" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-215">A signed number indicating the relative values of <paramref name="d1" /> and <paramref name="d2" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="7ad78-216">返回值</span><span class="sxs-lookup"><span data-stu-id="7ad78-216">Return value</span></span> 
 </term><description> <span data-ttu-id="7ad78-217">含义</span><span class="sxs-lookup"><span data-stu-id="7ad78-217">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="7ad78-218">小于零</span><span class="sxs-lookup"><span data-stu-id="7ad78-218">Less than zero</span></span> 
 </term><description><span data-ttu-id="7ad78-219"><paramref name="d1" /> 小于 <paramref name="d2" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-219"><paramref name="d1" /> is less than <paramref name="d2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="7ad78-220">零</span><span class="sxs-lookup"><span data-stu-id="7ad78-220">Zero</span></span> 
 </term><description><span data-ttu-id="7ad78-221"><paramref name="d1" /> 与 <paramref name="d2" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="7ad78-221"><paramref name="d1" /> and <paramref name="d2" /> are equal.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="7ad78-222">大于零</span><span class="sxs-lookup"><span data-stu-id="7ad78-222">Greater than zero</span></span> 
 </term><description><span data-ttu-id="7ad78-223"><paramref name="d1" /> 大于 <paramref name="d2" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-223"><paramref name="d1" /> is greater than <paramref name="d2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-224">下面的示例比较多个<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-224">The following example compares several <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-225">请注意，尽管对执行减法运算的两个值相等的第一个比较指示`value2`变量。</span><span class="sxs-lookup"><span data-stu-id="7ad78-225">Note that the first comparison indicates that the two values are equal despite the subtraction operation performed on the `value2` variable.</span></span> <span data-ttu-id="7ad78-226">这是因为<xref:System.Decimal>类型具有 29 位精度，而这两个值之间的差异可以检测到仅与 30 位精度。</span><span class="sxs-lookup"><span data-stu-id="7ad78-226">This is because the <xref:System.Decimal> type has 29 digits of precision, whereas a difference between these two values can be detected only with 30 digits of precision.</span></span>  
  
 [!code-csharp[System.Decimal.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Compare/cs/Compare1.cs#1)]
 [!code-vb[System.Decimal.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Compare/vb/Compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ad78-227">将此实例与指定的对象或 <see cref="T:System.Decimal" /> 进行比较，并返回二者相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="7ad78-227">Compares this instance to a specified object or <see cref="T:System.Decimal" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.CompareTo(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : decimal -&gt; int&#xA;override this.CompareTo : decimal -&gt; int" Usage="decimal.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-228">与该实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-228">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="7ad78-229">将此实例与指定的 <see cref="T:System.Decimal" /> 对象进行比较并返回一个对二者的相对值的比较。</span><span class="sxs-lookup"><span data-stu-id="7ad78-229">Compares this instance to a specified <see cref="T:System.Decimal" /> object and returns a comparison of their relative values.</span></span></summary>
        <returns><span data-ttu-id="7ad78-230">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-230">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="7ad78-231">返回值</span><span class="sxs-lookup"><span data-stu-id="7ad78-231">Return value</span></span> 
 </term><description> <span data-ttu-id="7ad78-232">含义</span><span class="sxs-lookup"><span data-stu-id="7ad78-232">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="7ad78-233">小于零</span><span class="sxs-lookup"><span data-stu-id="7ad78-233">Less than zero</span></span> 
 </term><description> <span data-ttu-id="7ad78-234">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-234">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="7ad78-235">零</span><span class="sxs-lookup"><span data-stu-id="7ad78-235">Zero</span></span> 
 </term><description> <span data-ttu-id="7ad78-236">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-236">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="7ad78-237">大于零</span><span class="sxs-lookup"><span data-stu-id="7ad78-237">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="7ad78-238">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-238">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-239">此方法实现<xref:System.IComparable%601?displayProperty=nameWithType>接口，并且执行略微优于<xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType>方法因为它不具有要转换`value`参数的对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-239">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="7ad78-240">具体取决于您的编程语言，有可能对代码<xref:System.Decimal.CompareTo%2A>方法的参数类型包含的位数少于 （是更窄） 比实例类型。</span><span class="sxs-lookup"><span data-stu-id="7ad78-240">Depending on your programming language, it might be possible to code a <xref:System.Decimal.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="7ad78-241">这可能是因为某些编程语言执行表示具有任意数量的位的实例作为类型参数的隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-241">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="7ad78-242">例如，假设实例类型是<xref:System.Int32>且参数类型为<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-242">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="7ad78-243">Microsoft C# 编译器将生成表示形式的参数的说明<xref:System.Int32>对象，然后生成<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>方法的值进行比较<xref:System.Int32>实例和<xref:System.Int32>参数表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-243">The Microsoft C# compiler generates instructions to represent the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="7ad78-244">请查阅您的编程语言的文档以确定其编译器是否对数值类型执行隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-244">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-245">下面的代码示例演示了泛型和非泛型版本的<xref:System.Decimal.CompareTo%2A>多个值和引用类型的方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-245">The following code example demonstrates generic and nongeneric versions of the <xref:System.Decimal.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="decimal.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-246">要与此实例进行比较的对象，或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-246">The object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="7ad78-247">将此实例与指定对象进行比较并返回一个对二者的相对值的比较。</span><span class="sxs-lookup"><span data-stu-id="7ad78-247">Compares this instance to a specified object and returns a comparison of their relative values.</span></span></summary>
        <returns><span data-ttu-id="7ad78-248">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-248">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="7ad78-249">返回值</span><span class="sxs-lookup"><span data-stu-id="7ad78-249">Return value</span></span> 
 </term><description> <span data-ttu-id="7ad78-250">含义</span><span class="sxs-lookup"><span data-stu-id="7ad78-250">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="7ad78-251">小于零</span><span class="sxs-lookup"><span data-stu-id="7ad78-251">Less than zero</span></span> 
 </term><description> <span data-ttu-id="7ad78-252">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-252">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="7ad78-253">零</span><span class="sxs-lookup"><span data-stu-id="7ad78-253">Zero</span></span> 
 </term><description> <span data-ttu-id="7ad78-254">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-254">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="7ad78-255">大于零</span><span class="sxs-lookup"><span data-stu-id="7ad78-255">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="7ad78-256">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-256">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="7ad78-257">或</span><span class="sxs-lookup"><span data-stu-id="7ad78-257">-or-</span></span> 
 <span data-ttu-id="7ad78-258"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-258"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-259">任何实例<xref:System.Decimal>，而不考虑其值被视为大于`null`。</span><span class="sxs-lookup"><span data-stu-id="7ad78-259">Any instance of <xref:System.Decimal>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="7ad78-260">参数`value`必须是`null`的实例或<xref:System.Decimal>; 否则为将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7ad78-260">Parameter `value` must be `null` or an instance of <xref:System.Decimal>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-261">下面的代码示例比较多个`Decimal`和其他对象的引用`Decimal`值使用`CompareTo`方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-261">The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `CompareTo` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ad78-262"><paramref name="value" /> 不是 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-262"><paramref name="value" /> is not a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static decimal Divide (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Divide(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Divide(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Divide : decimal * decimal -&gt; decimal" Usage="System.decimal.Divide (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-263">被除数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-263">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-264">除数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-264">The divisor.</span></span></param>
        <summary><span data-ttu-id="7ad78-265">将两个指定的 <see cref="T:System.Decimal" /> 值相除。</span><span class="sxs-lookup"><span data-stu-id="7ad78-265">Divides two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7ad78-266"><paramref name="d1" /> 除以 <paramref name="d2" /> 的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-266">The result of dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-267">下面的示例调用<xref:System.Decimal.Divide%2A>方法以一系列值除以 22.1。</span><span class="sxs-lookup"><span data-stu-id="7ad78-267">The following example calls the <xref:System.Decimal.Divide%2A> method to divide a range of values by 22.1.</span></span>  
  
 [!code-csharp[System.Decimal.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Decimal.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="7ad78-268"><paramref name="d2" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-268"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-269">返回值（即：商）小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-269">The return value (that is, the quotient) is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ad78-270">返回一个值，该值指示 <see cref="T:System.Decimal" /> 的两个实例是否表示同一个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-270">Returns a value indicating whether two instances of <see cref="T:System.Decimal" /> represent the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Decimal value);" />
      <MemberSignature Language="F#" Value="override this.Equals : decimal -&gt; bool" Usage="decimal.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-271">要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-271">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="7ad78-272">返回一个值，该值指示此实例和指定的 <see cref="T:System.Decimal" /> 对象是否表示相同的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-272">Returns a value indicating whether this instance and a specified <see cref="T:System.Decimal" /> object represent the same value.</span></span></summary>
        <returns><span data-ttu-id="7ad78-273">如果 <see langword="true" /> 与此实例相等，则为 <paramref name="value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-273"><see langword="true" /> if <paramref name="value" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-274">此方法实现<xref:System.IEquatable%601?displayProperty=nameWithType>接口，并且执行略微优于<xref:System.Decimal.Equals%2A>因为它不具有要转换`value`参数的对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-274">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Decimal.Equals%2A> because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="7ad78-275">如果`value`包含的位数少于 （是更窄） 实例类型中，某些编程语言执行参数的值转换具有更多位数的值的隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-275">If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="7ad78-276">例如，假设实例类型是<xref:System.Int32>且参数类型为<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-276">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="7ad78-277">Microsoft C# 编译器将生成表示形式的参数值的说明<xref:System.Int32>对象，然后生成<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>方法来比较<xref:System.Int32>实例和参数的表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-277">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the <xref:System.Int32> instance and parameter representation.</span></span>  
  
 <span data-ttu-id="7ad78-278">请查阅您的编程语言的文档以确定其编译器是否对数值类型执行隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-278">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="7ad78-279">编译器重载解析行为的两个明显的差异可能会考虑<see cref="M:System.Decimal.Equals(System.Object)" />方法重载。</span><span class="sxs-lookup"><span data-stu-id="7ad78-279">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Decimal.Equals(System.Object)" /> method overloads.</span></span> <span data-ttu-id="7ad78-280">如果之间的隐式转换<paramref name="obj" />自变量和一个<see cref="T:System.Decimal" />定义和自变量类型不是<see cref="T:System.Object" />，编译器可能会执行隐式转换和调用<see cref="M:System.Decimal.Equals(System.Decimal)" />方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-280">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Decimal" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method.</span></span> <span data-ttu-id="7ad78-281">否则，调用方法<see cref="M:System.Decimal.Equals(System.Object)" />方法，它始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.Decimal" />值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-281">Otherwise, they call the <see cref="M:System.Decimal.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Decimal" /> value.</span></span> <span data-ttu-id="7ad78-282">下面的示例说明了两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="7ad78-282">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="7ad78-283">在所有基元整型类型的情况下程序包括签名和无符号类型，第一个比较将返回<see langword="true" />因为编译器会自动执行扩大转换和调用<see cref="M:System.Decimal.Equals(System.Decimal)" />方法，而第二个比较返回<see langword="false" />因为编译器将调用<see cref="M:System.Decimal.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-283">In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Decimal.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="7ad78-284">[！ 代码 csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)] [！ 代码 vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="7ad78-284">[!code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="Overload:System.Decimal.CompareTo" />
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="decimal.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-285">与该实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-285">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="7ad78-286">返回一个值，该值指示此实例和指定的 <see cref="T:System.Object" /> 是否表示相同的类型和值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-286">Returns a value indicating whether this instance and a specified <see cref="T:System.Object" /> represent the same type and value.</span></span></summary>
        <returns><span data-ttu-id="7ad78-287">如果 <paramref name="value" /> 是一个 <see cref="T:System.Decimal" /> 且与此实例相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-287"><see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.Decimal" /> and equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-288">下面的代码示例比较多个`Decimal`和其他对象的引用`Decimal`值使用`Equals`方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-288">The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `Equals` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="7ad78-289">编译器重载解析行为的两个明显的差异可能会考虑<see cref="M:System.Decimal.Equals(System.Object)" />方法重载。</span><span class="sxs-lookup"><span data-stu-id="7ad78-289">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Decimal.Equals(System.Object)" /> method overloads.</span></span> <span data-ttu-id="7ad78-290">如果之间的隐式转换<paramref name="obj" />自变量和一个<see cref="T:System.Decimal" />定义和自变量类型不是<see cref="T:System.Object" />，编译器可能会执行隐式转换和调用<see cref="M:System.Decimal.Equals(System.Decimal)" />方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-290">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Decimal" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method.</span></span> <span data-ttu-id="7ad78-291">否则，调用方法<see cref="M:System.Decimal.Equals(System.Object)" />方法，它始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.Decimal" />值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-291">Otherwise, they call the <see cref="M:System.Decimal.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Decimal" /> value.</span></span> <span data-ttu-id="7ad78-292">下面的示例说明了两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="7ad78-292">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="7ad78-293">在所有基元整型类型的情况下程序包括签名和无符号类型，第一个比较将返回<see langword="true" />因为编译器会自动执行扩大转换和调用<see cref="M:System.Decimal.Equals(System.Decimal)" />方法，而第二个比较返回<see langword="false" />因为编译器将调用<see cref="M:System.Decimal.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-293">In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Decimal.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="7ad78-294">[！ 代码 csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)] [！ 代码 vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="7ad78-294">[!code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Equals : decimal * decimal -&gt; bool" Usage="System.decimal.Equals (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-295">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-295">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-296">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-296">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7ad78-297">返回一个值，该值指示 <see cref="T:System.Decimal" /> 的两个指定实例是否表示同一个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-297">Returns a value indicating whether two specified instances of <see cref="T:System.Decimal" /> represent the same value.</span></span></summary>
        <returns><span data-ttu-id="7ad78-298">如果 <paramref name="d1" /> 和 <paramref name="d2" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-298"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-299">下面的代码示例比较多个`Decimal`值为引用`Decimal`值使用静态`Equals`方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-299">The following code example compares several `Decimal` values to a reference `Decimal` value using the static `Equals` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/comp_equal.cpp#2)]
 [!code-csharp[System.Decimal.Compare_Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/comp_equal.cs#2)]
 [!code-vb[System.Decimal.Compare_Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/comp_equal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Floor : decimal -&gt; decimal" Usage="System.decimal.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-300">要舍入的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-300">The value to round.</span></span></param>
        <summary><span data-ttu-id="7ad78-301">将指定的 <see cref="T:System.Decimal" /> 数字向负无穷方向舍入为最接近的整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-301">Rounds a specified <see cref="T:System.Decimal" /> number to the closest integer toward negative infinity.</span></span></summary>
        <returns><span data-ttu-id="7ad78-302">如果 <paramref name="d" /> 有小数部分，则为负无穷方向上小于 <paramref name="d" /> 的下一个整 <see cref="T:System.Decimal" /> 数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-302">If <paramref name="d" /> has a fractional part, the next whole <see cref="T:System.Decimal" /> number toward negative infinity that is less than <paramref name="d" />.</span></span>  
  
<span data-ttu-id="7ad78-303">或</span><span class="sxs-lookup"><span data-stu-id="7ad78-303">-or-</span></span> 
<span data-ttu-id="7ad78-304">如果 <paramref name="d" /> 没有小数部分，则 <paramref name="d" /> 原样返回。</span><span class="sxs-lookup"><span data-stu-id="7ad78-304">If <paramref name="d" /> doesn't have a fractional part, <paramref name="d" /> is returned unchanged.</span></span> <span data-ttu-id="7ad78-305">请注意，该方法将返回 <see cref="T:System.Decimal" /> 类型的整数值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-305">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-306">此方法的行为遵循 IEEE 标准 754，第 4 部分。</span><span class="sxs-lookup"><span data-stu-id="7ad78-306">The behavior of this method follows IEEE Standard 754, Section 4.</span></span> <span data-ttu-id="7ad78-307">这种舍入有时称为向负无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="7ad78-307">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="7ad78-308">换而言之，如果`d`为正，任何小数部分被截断。</span><span class="sxs-lookup"><span data-stu-id="7ad78-308">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="7ad78-309">如果`d`是负数，任何小数部分的存在会导致它被舍入到较小的整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-309">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="7ad78-310">此方法的操作不同于<xref:System.Decimal.Ceiling%2A>方法支持向正无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="7ad78-310">The operation of this method differs from the <xref:System.Decimal.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-311">下面的示例阐释<xref:System.Decimal.Floor%2A>方法并将其与进行比较<xref:System.Decimal.Ceiling%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-311">The following example illustrates the <xref:System.Decimal.Floor%2A> method and contrasts it with the <xref:System.Decimal.Ceiling%2A> method.</span></span>  
  
 [!code-csharp[System.Decimal.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs#1)]
 [!code-vb[System.Decimal.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
        <altmember cref="M:System.Decimal.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="FromOACurrency">
      <MemberSignature Language="C#" Value="public static decimal FromOACurrency (long cy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal FromOACurrency(int64 cy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.FromOACurrency(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromOACurrency (cy As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal FromOACurrency(long cy);" />
      <MemberSignature Language="F#" Value="static member FromOACurrency : int64 -&gt; decimal" Usage="System.decimal.FromOACurrency cy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cy" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="cy"><span data-ttu-id="7ad78-312">一个 OLE 自动化货币值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-312">An OLE Automation Currency value.</span></span></param>
        <summary><span data-ttu-id="7ad78-313">将指定的 64 位有符号整数（它包含 OLE 自动化货币值）转换为等效的 <see cref="T:System.Decimal" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-313">Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <see cref="T:System.Decimal" /> value.</span></span></summary>
        <returns><span data-ttu-id="7ad78-314">包含 <paramref name="cy" /> 的等效数的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-314">A <see cref="T:System.Decimal" /> that contains the equivalent of <paramref name="cy" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-315">下面的代码示例使用`FromOACurrency`方法将转换<xref:System.Int64>包含为等效的 OLE 自动化货币值的字段`Decimal`数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-315">The following code example uses the `FromOACurrency` method to convert <xref:System.Int64> fields that contain OLE Automation Currency values to the equivalent `Decimal` numbers.</span></span>  
  
 [!code-cpp[System.Decimal.OACurrency#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/fromoacurrency.cpp#2)]
 [!code-csharp[System.Decimal.OACurrency#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/fromoacurrency.cs#2)]
 [!code-vb[System.Decimal.OACurrency#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/fromoacurrency.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.ToOACurrency(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="GetBits">
      <MemberSignature Language="C#" Value="public static int[] GetBits (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] GetBits(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetBits(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBits (d As Decimal) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ GetBits(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member GetBits : decimal -&gt; int[]" Usage="System.decimal.GetBits d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-316">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-316">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-317">将 <see cref="T:System.Decimal" /> 的指定实例的值转换为其等效的二进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-317">Converts the value of a specified instance of <see cref="T:System.Decimal" /> to its equivalent binary representation.</span></span></summary>
        <returns><span data-ttu-id="7ad78-318">包含 <paramref name="d" /> 二进制表示形式、由四个元素组成的 32 位有符号整数数组。</span><span class="sxs-lookup"><span data-stu-id="7ad78-318">A 32-bit signed integer array with four elements that contain the binary representation of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-319">二进制表示形式<xref:System.Decimal>1 位符号、 96 位整数和用于分隔整数，并指定它的哪些部分是小数部分的缩放系数的数字组成。</span><span class="sxs-lookup"><span data-stu-id="7ad78-319">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="7ad78-320">比例因子是隐式数字 10，范围从 0 到 28 的指数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-320">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span>  
  
 <span data-ttu-id="7ad78-321">返回值为 32 位有符号整数的一个四个元素的数组。</span><span class="sxs-lookup"><span data-stu-id="7ad78-321">The return value is a four-element array of 32-bit signed integers.</span></span>  
  
 <span data-ttu-id="7ad78-322">第一，第二，并返回数组的第三个元素包含 96 位整数号的低、 中和高 32 位。</span><span class="sxs-lookup"><span data-stu-id="7ad78-322">The first, second, and third elements of the returned array contain the low, middle, and high 32 bits of the 96-bit integer number.</span></span>  
  
 <span data-ttu-id="7ad78-323">返回数组的第四个元素包含的缩放比例和登录。</span><span class="sxs-lookup"><span data-stu-id="7ad78-323">The fourth element of the returned array contains the scale factor and sign.</span></span> <span data-ttu-id="7ad78-324">它包含以下几个部分：</span><span class="sxs-lookup"><span data-stu-id="7ad78-324">It consists of the following parts:</span></span>  
  
 <span data-ttu-id="7ad78-325">位 0 到 15，较低的字，未使用，必须为零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-325">Bits 0 to 15, the lower word, are unused and must be zero.</span></span>  
  
 <span data-ttu-id="7ad78-326">16 到 23 位必须包含一个介于 0 到 28，之间的指数表示 10 的强大功能将整数值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-326">Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</span></span>  
  
 <span data-ttu-id="7ad78-327">24 到 30 位未使用，必须为零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-327">Bits 24 to 30 are unused and must be zero.</span></span>  
  
 <span data-ttu-id="7ad78-328">第 31 位包含符号： 0 表示正数，而 1 表示负数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-328">Bit 31 contains the sign: 0 mean positive, and 1 means negative.</span></span>  
  
 <span data-ttu-id="7ad78-329">请注意，位表示形式区分正负零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-329">Note that the bit representation differentiates between negative and positive zero.</span></span> <span data-ttu-id="7ad78-330">这些值被视为相等的所有操作中。</span><span class="sxs-lookup"><span data-stu-id="7ad78-330">These values are treated as being equal in all operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-331">下面的示例使用`GetBits`方法将多个`Decimal`为其等效的二进制表示形式的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-331">The following example uses the `GetBits` method to convert several `Decimal` values to their equivalent binary representations.</span></span> <span data-ttu-id="7ad78-332">它然后显示十进制值和元素的十六进制值的数组中返回的<xref:System.Decimal.GetBits%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-332">It then displays the decimal values and the hexadecimal value of the elements in the array returned by the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 [!code-cpp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/getbits.cpp#2)]
 [!code-csharp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/getbits.cs#2)]
 [!code-vb[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/getbits.vb#2)]  
  
 <span data-ttu-id="7ad78-333">下面的示例使用<xref:System.Decimal.GetBits%2A>方法来检索数组的组件的各部分。</span><span class="sxs-lookup"><span data-stu-id="7ad78-333">The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array.</span></span> <span data-ttu-id="7ad78-334">然后，它使用此数组中调用<xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29>构造函数实例化一个新<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-334">It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]
 [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Decimal.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="decimal.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ad78-335">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="7ad78-335">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="7ad78-336">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="7ad78-336">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="decimal.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ad78-337">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-337">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-338">枚举常数 <see cref="F:System.TypeCode.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-338">The enumerated constant <see cref="F:System.TypeCode.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-339">下面的代码示例使用`GetTypeCode`方法返回的类型代码`Decimal`值类型。</span><span class="sxs-lookup"><span data-stu-id="7ad78-339">The following code example uses the `GetTypeCode` method to return the type code for `Decimal` value type.</span></span>  
  
 [!code-cpp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/gettypecode.cpp#3)]
 [!code-csharp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/gettypecode.cs#3)]
 [!code-vb[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/gettypecode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly decimal MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : decimal" Usage="System.decimal.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ad78-340">表示 <see cref="T:System.Decimal" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-340">Represents the largest possible value of <see cref="T:System.Decimal" />.</span></span> <span data-ttu-id="7ad78-341">该字段是常数且为只读。</span><span class="sxs-lookup"><span data-stu-id="7ad78-341">This field is constant and read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-342">此常量的值为-79228162514264337593543950335 到 +。</span><span class="sxs-lookup"><span data-stu-id="7ad78-342">The value of this constant is positive 79,228,162,514,264,337,593,543,950,335.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-343">下面的代码示例演示如何使用`MaxValue`:</span><span class="sxs-lookup"><span data-stu-id="7ad78-343">The following code sample illustrates the use of `MaxValue` :</span></span>  
  
 [!code-cpp[Decimal Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#2)]
 [!code-csharp[Decimal Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#2)]
 [!code-vb[Decimal Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinusOne">
      <MemberSignature Language="C#" Value="public static readonly decimal MinusOne;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MinusOne" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MinusOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinusOne As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MinusOne;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinusOne : decimal" Usage="System.decimal.MinusOne" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ad78-344">表示数字负一 (-1)。</span><span class="sxs-lookup"><span data-stu-id="7ad78-344">Represents the number negative one (-1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-345">下面的代码示例演示如何使用`MinusOne`字段。</span><span class="sxs-lookup"><span data-stu-id="7ad78-345">The following code example illustrates the use of the `MinusOne` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly decimal MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : decimal" Usage="System.decimal.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ad78-346">表示 <see cref="T:System.Decimal" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-346">Represents the smallest possible value of <see cref="T:System.Decimal" />.</span></span> <span data-ttu-id="7ad78-347">该字段是常数且为只读。</span><span class="sxs-lookup"><span data-stu-id="7ad78-347">This field is constant and read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-348">此常量的值为负 79228162514264337593543950335。</span><span class="sxs-lookup"><span data-stu-id="7ad78-348">The value of this constant is negative 79,228,162,514,264,337,593,543,950,335.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-349">下面的代码示例演示如何使用`MinValue`字段。</span><span class="sxs-lookup"><span data-stu-id="7ad78-349">The following code example illustrates the use of the `MinValue` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static decimal Multiply (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Multiply(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Multiply(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Multiply : decimal * decimal -&gt; decimal" Usage="System.decimal.Multiply (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-350">被乘数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-350">The multiplicand.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-351">乘数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-351">The multiplier.</span></span></param>
        <summary><span data-ttu-id="7ad78-352">两个指定的 <see cref="T:System.Decimal" /> 值相乘。</span><span class="sxs-lookup"><span data-stu-id="7ad78-352">Multiplies two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7ad78-353"><paramref name="d1" /> 与 <paramref name="d2" /> 相乘的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-353">The result of multiplying <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-354">下面的代码示例创建的若干个对`Decimal`值，并计算其产品与`Multiply`方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-354">The following code example creates several pairs of `Decimal` values and calculates their products with the `Multiply` method.</span></span>  
  
 [!code-cpp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CPP/mul_div_rem.cpp#1)]
 [!code-csharp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CS/mul_div_rem.cs#1)]
 [!code-vb[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/VB/mul_div_rem.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-355">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-355">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static decimal Negate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Negate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Negate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Negate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Negate : decimal -&gt; decimal" Usage="System.decimal.Negate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-356">要求反的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-356">The value to negate.</span></span></param>
        <summary><span data-ttu-id="7ad78-357">返回指定的 <see cref="T:System.Decimal" /> 值乘以 -1 的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-357">Returns the result of multiplying the specified <see cref="T:System.Decimal" /> value by negative one.</span></span></summary>
        <returns><span data-ttu-id="7ad78-358">具有 <paramref name="d" /> 的值，但符号相反的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-358">A decimal number with the value of <paramref name="d" />, but the opposite sign.</span></span>  
  
<span data-ttu-id="7ad78-359">或</span><span class="sxs-lookup"><span data-stu-id="7ad78-359">-or-</span></span> 
<span data-ttu-id="7ad78-360">如果 <paramref name="d" /> 为零，则为零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-360">Zero, if <paramref name="d" /> is zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-361">下面的代码示例使用`Negate`方法，以便更改多个登录`Decimal`值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-361">The following code example uses the `Negate` method to change the sign of several `Decimal` values.</span></span>  
  
 [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]
 [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]
 [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static readonly decimal One;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal One" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly One As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal One;" />
      <MemberSignature Language="F#" Value=" staticval mutable One : decimal" Usage="System.decimal.One" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ad78-362">表示数字一 (1)。</span><span class="sxs-lookup"><span data-stu-id="7ad78-362">Represents the number one (1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-363">下面的代码示例演示如何使用`One`字段。</span><span class="sxs-lookup"><span data-stu-id="7ad78-363">The following code example illustrates the use of the `One` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static decimal operator + (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Addition(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator +(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : decimal * decimal -&gt; decimal" Usage="d1 + d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-364">要相加的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-364">The first value to add.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-365">要相加的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-365">The second value to add.</span></span></param>
        <summary><span data-ttu-id="7ad78-366">将两个指定的 <see cref="T:System.Decimal" /> 值相加。</span><span class="sxs-lookup"><span data-stu-id="7ad78-366">Adds two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7ad78-367"><paramref name="d1" /> 与 <paramref name="d2" /> 相加的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-367">The result of adding <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-368"><xref:System.Decimal.op_Addition%2A>方法定义的加法运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-368">The <xref:System.Decimal.op_Addition%2A> method defines the operation of the addition operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-369">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-369">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/addition1.cs#3)]
 [!code-vb[System.Decimal.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/addition1.vb#3)]  
  
 <span data-ttu-id="7ad78-370">如果您使用的语言不支持自定义运算符，调用<xref:System.Decimal.Add%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7ad78-370">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Add%2A> method instead.</span></span>  
  
 <span data-ttu-id="7ad78-371">此运算符的等效方法是 <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ad78-371">The equivalent method for this operator is <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-372">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-372">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static decimal operator -- (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Decrement(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Decrement(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator --(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member op_Decrement : decimal -&gt; decimal" Usage="System.decimal.op_Decrement d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-373">要递减的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-373">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="7ad78-374"><see cref="T:System.Decimal" /> 操作数减 1。</span><span class="sxs-lookup"><span data-stu-id="7ad78-374">Decrements the <see cref="T:System.Decimal" /> operand by one.</span></span></summary>
        <returns><span data-ttu-id="7ad78-375"><paramref name="d" /> 减 1 所得的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-375">The value of <paramref name="d" /> decremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-376"><xref:System.Decimal.op_Decrement%2A>方法定义的减量运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-376">The <xref:System.Decimal.op_Decrement%2A> method defines the operation of the decrement operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-377">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-377">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement1.cs#4)]  
  
 <span data-ttu-id="7ad78-378">某些语言缺少增量运算符 （如 Visual Basic 中) 可以调用<xref:System.Decimal.op_Decrement%2A>方法直接，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7ad78-378">Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Decrement%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement1.vb#5)]  
  
 <span data-ttu-id="7ad78-379">如果你的语言不支持自定义运算符，调用<xref:System.Decimal.Subtract%2A>方法相反，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7ad78-379">If your language does not support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead, as the following example shows.</span></span>  
  
 [!code-csharp[System.Decimal.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement2.cs#6)]
 [!code-vb[System.Decimal.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-380">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-380">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static decimal operator / (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Division(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Division(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator /(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( / ) : decimal * decimal -&gt; decimal" Usage="d1 / d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-381">被除数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-381">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-382">除数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-382">The divisor.</span></span></param>
        <summary><span data-ttu-id="7ad78-383">将两个指定的 <see cref="T:System.Decimal" /> 值相除。</span><span class="sxs-lookup"><span data-stu-id="7ad78-383">Divides two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7ad78-384"><paramref name="d1" /> 除以 <paramref name="d2" /> 的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-384">The result of dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-385"><xref:System.Decimal.op_Division%2A>方法定义的除法运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-385">The <xref:System.Decimal.op_Division%2A> method defines the operation of the division operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-386">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-386">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/division1.cs#7)]
 [!code-vb[System.Decimal.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/division1.vb#7)]  
  
 <span data-ttu-id="7ad78-387">如果您使用的语言不支持自定义运算符，调用<xref:System.Decimal.Divide%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7ad78-387">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Divide%2A> method instead.</span></span>  
  
 <span data-ttu-id="7ad78-388">此运算符的等效方法是 <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ad78-388">The equivalent method for this operator is <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="7ad78-389"><paramref name="d2" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-389"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-390">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-390">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : decimal * decimal -&gt; bool" Usage="d1 = d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-391">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-391">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-392">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-392">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7ad78-393">返回一个值，该值指示两个 <see cref="T:System.Decimal" /> 值是否相等。</span><span class="sxs-lookup"><span data-stu-id="7ad78-393">Returns a value that indicates whether two <see cref="T:System.Decimal" /> values are equal.</span></span></summary>
        <returns><span data-ttu-id="7ad78-394">如果 <paramref name="d1" /> 和 <paramref name="d2" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-394"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-395"><xref:System.Decimal.op_Equality%2A>方法定义的相等运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-395">The <xref:System.Decimal.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-396">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-396">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/equality1.cs#1)]
 [!code-vb[System.Decimal.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/equality1.vb#1)]  
  
 <span data-ttu-id="7ad78-397">如果您使用的语言不支持自定义运算符，调用<xref:System.Decimal.Equals%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7ad78-397">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Equals%2A> method instead.</span></span>  
  
 <span data-ttu-id="7ad78-398">此运算符的等效方法是 <xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ad78-398">The equivalent method for this operator is <xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ad78-399">定义 <see cref="T:System.Decimal" /> 对象与其他类型之间的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-399">Defines an explicit conversion between a <see cref="T:System.Decimal" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; byte" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-400">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-400">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-401">定义从 <see cref="T:System.Decimal" /> 到 8 位无符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-401">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to an 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="7ad78-402">8 位无符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-402">An 8-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-403">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-403">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Byte>.</span></span> <span data-ttu-id="7ad78-404">此类的显式转换的语法是依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-404">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7ad78-405">该示例阐释了不同的返回值显式转换时<xref:System.Decimal>值设为<xref:System.Byte>使用 C#、 c + + 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-405">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Byte> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="7ad78-406">若要执行的转换的与语言无关的转换，可以调用<xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-406">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples 
 <span data-ttu-id="7ad78-407">以下示例将转换<xref:System.Decimal>数字转换<xref:System.Byte>值使用显式<xref:System.Decimal>到<xref:System.Byte>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-407">The following example converts <xref:System.Decimal> numbers to <xref:System.Byte> values by using the explicit <xref:System.Decimal> to <xref:System.Byte> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctos_byte.cpp#4)] 
 [!code-csharp[System.Decimal.ConvTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctos_byte.cs#4)] 
 [!code-vb[System.Decimal.ConvTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctos_byte.vb#4)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-408"><paramref name="value" /> 小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-408"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator char (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname char op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Char" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator char(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; char" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-409">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-409">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-410">定义从 Unicode 字符到 <see cref="T:System.Decimal" /> 的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-410">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a Unicode character.</span></span></summary>
        <returns><span data-ttu-id="7ad78-411">表示转换后的 <see cref="T:System.Decimal" /> 的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-411">A Unicode character that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-412">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.Char>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-412">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Char>.</span></span> <span data-ttu-id="7ad78-413">此类的显式转换的语法是依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果，或可能不支持转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-413">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results, or might not support the conversion at all.</span></span> <span data-ttu-id="7ad78-414">例如，Visual Basic 和 c + + 编译器不支持显式<xref:System.Decimal>到<xref:System.Char>转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-414">For example, the Visual Basic and C++ compilers do not support an explicit <xref:System.Decimal> to a <xref:System.Char> conversion.</span></span>
 

## Examples 
 <span data-ttu-id="7ad78-415">以下示例将转换<xref:System.Decimal>数字转换<xref:System.Char>值 （Unicode 字符） 通过使用显式<xref:System.Decimal>到<xref:System.Char>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-415">The following example converts <xref:System.Decimal> numbers to <xref:System.Char> values (Unicode characters) by using the explicit <xref:System.Decimal> to <xref:System.Char> conversion operator.</span></span>

 [!code-csharp[System.Decimal.ConvTo#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctochar.cs#6)]
 [!code-vb[System.Decimal.ConvTo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctochar.vb#6)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-416"><paramref name="value" /> 小于 <see cref="F:System.Char.MinValue" /> 或大于 <see cref="F:System.Char.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-416"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; double" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-417">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-417">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-418">定义从 <see cref="T:System.Decimal" /> 到双精度浮点数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-418">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="7ad78-419">双精度浮点数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-419">A double-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-420">此操作可能导致丢失精度，因为一个双精度浮点数具有有效位数少于<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-420">This operation can result in a loss of precision, because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>
 
 <span data-ttu-id="7ad78-421">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-421">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Double>.</span></span> <span data-ttu-id="7ad78-422">此类的显式转换的语法是依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-422">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7ad78-423">该示例阐释了不同的返回值显式转换时<xref:System.Decimal>值设为<xref:System.Double>使用 C#、 c + + 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-423">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Double> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="7ad78-424">若要执行的转换的与语言无关的转换，可以调用<xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-424">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="7ad78-425">以下示例将转换<xref:System.Decimal>数字转换<xref:System.Double>值使用显式<xref:System.Decimal>到<xref:System.Double>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-425">The following example converts <xref:System.Decimal> numbers to <xref:System.Double> values by using the explicit <xref:System.Decimal> to <xref:System.Double> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctosgl_dbl.cpp#5)] 
 [!code-csharp[System.Decimal.ConvTo#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ConvTo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctosgl_dbl.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; int16" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-426">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-426">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-427">定义从 <see cref="T:System.Decimal" /> 到 16 位有符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-427">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7ad78-428">16 位有符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-428">A 16-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="7ad78-429">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.Int16>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-429">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int16>.</span></span> <span data-ttu-id="7ad78-430">此类的显式转换的语法是依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-430">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7ad78-431">该示例阐释了不同的返回值显式转换时<xref:System.Decimal>值设为<xref:System.Int16>使用 C#、 Visual Basic 和 c + + 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-431">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int16> value by using C#, Visual Basic, and C++.</span></span> <span data-ttu-id="7ad78-432">若要执行的转换的与语言无关的转换，可以调用<xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-432">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="7ad78-433">以下示例将转换<xref:System.Decimal>数字转换<xref:System.Int16>值使用显式<xref:System.Decimal>到<xref:System.Int16>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-433">The following example converts <xref:System.Decimal> numbers to <xref:System.Int16> values by using the explicit <xref:System.Decimal> to <xref:System.Int16> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int16.cpp#3)] 
 [!code-csharp[System.Decimal.ConvTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int16.cs#3)] 
 [!code-vb[System.Decimal.ConvTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int16.vb#3)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-434"><paramref name="value" /> 小于 <see cref="F:System.Int16.MinValue" /> 或大于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-434"><paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; int" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-435">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-435">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-436">定义从 <see cref="T:System.Decimal" /> 到 32 位有符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-436">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7ad78-437">32 位有符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-437">A 32-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-438">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-438">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int32>.</span></span> <span data-ttu-id="7ad78-439">此类的显式转换的语法是依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-439">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7ad78-440">该示例阐释了不同的返回值显式转换时<xref:System.Decimal>值设为<xref:System.Int32>使用 C#、 c + + 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-440">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int32> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="7ad78-441">若要执行的转换的与语言无关的转换，可以调用<xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-441">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="7ad78-442">以下示例将转换<xref:System.Decimal>数字转换<xref:System.Int32>值使用显式<xref:System.Decimal>到<xref:System.Int32>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-442">The following example converts <xref:System.Decimal> numbers to <xref:System.Int32> values by using the explicit <xref:System.Decimal> to <xref:System.Int32> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int32.cs#2)] 
 [!code-vb[System.Decimal.ConvTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int32.vb#2)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-443"><paramref name="value" /> 小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-443"><paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; int64" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-444">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-444">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-445">定义从 <see cref="T:System.Decimal" /> 到 64 位有符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-445">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7ad78-446">64 位有符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-446">A 64-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-447">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.Int64>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-447">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int64>.</span></span> <span data-ttu-id="7ad78-448">此类的显式转换的语法是依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-448">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7ad78-449">该示例阐释了不同的返回值显式转换时<xref:System.Decimal>值设为<xref:System.Int64>使用 C# 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-449">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int64> value by using C# and Visual Basic.</span></span> <span data-ttu-id="7ad78-450">若要执行的转换的与语言无关的转换，可以调用<xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-450">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 
## Examples
 <span data-ttu-id="7ad78-451">以下示例将转换<xref:System.Decimal>数字转换<xref:System.Int64>值使用显式<xref:System.Decimal>到<xref:System.Int64>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-451">The following example converts <xref:System.Decimal> numbers to <xref:System.Int64> values by using the explicit <xref:System.Decimal> to <xref:System.Int64> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int64.cs#1)] 
 [!code-vb[System.Decimal.ConvTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int64.vb#1)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-452"><paramref name="value" /> 小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-452"><paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; sbyte" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-453">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-453">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-454">定义从 <see cref="T:System.Decimal" /> 到 8 位有符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-454">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to an 8-bit signed integer.</span></span>  
  
<span data-ttu-id="7ad78-455">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7ad78-455">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7ad78-456">8 位有符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-456">An 8-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-457">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.SByte>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-457">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.SByte>.</span></span> <span data-ttu-id="7ad78-458">此类的显式转换的语法是依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-458">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7ad78-459">该示例阐释了不同的返回值显式转换时<xref:System.Decimal>值设为<xref:System.Byte>和<xref:System.SByte>使用 C# 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-459">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Byte> and an <xref:System.SByte> value by using C# and Visual Basic.</span></span> <span data-ttu-id="7ad78-460">若要执行的转换的与语言无关的转换，可以调用<xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType>方法或<xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-460">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType> method or the <xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>   


## Examples 
 <span data-ttu-id="7ad78-461">以下示例将转换<xref:System.Decimal>数字转换<xref:System.SByte>值使用显式<xref:System.Decimal>到<xref:System.SByte>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-461">The following example converts <xref:System.Decimal> numbers to <xref:System.SByte> values by using the explicit <xref:System.Decimal> to <xref:System.SByte> conversion operator.</span></span>

 [!code-cpp[System.Decimal.Operators.Explicit#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cpp/tosbyte.cpp#1)] 
 [!code-csharp[System.Decimal.Operators.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cs/tosbyte.cs#1)]
 [!code-vb[System.Decimal.Operators.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators.explicit/vb/tosbyte.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-462"><paramref name="value" /> 小于 <see cref="F:System.SByte.MinValue" /> 或大于 <see cref="F:System.SByte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-462"><paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altCompliant cref="M:System.Decimal.ToInt16(System.Decimal)" />
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; single" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-463">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-463">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-464">定义从 <see cref="T:System.Decimal" /> 到单精度浮点数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-464">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="7ad78-465">单精度浮点数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-465">A single-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-466">此操作可能导致丢失精度，因为单精度浮点数具有有效位数少于<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-466">This operation can result in a loss of precision, because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>

 <span data-ttu-id="7ad78-467">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.Single>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-467">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Single>.</span></span> <span data-ttu-id="7ad78-468">此类的显式转换的语法是依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-468">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7ad78-469">该示例阐释了不同的返回值显式转换时<xref:System.Decimal>值设为<xref:System.Single>使用 C# 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-469">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Single> value by using C# and Visual Basic.</span></span> <span data-ttu-id="7ad78-470">若要执行的转换的与语言无关的转换，可以调用<xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-470">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="7ad78-471">以下示例将转换<xref:System.Decimal>数字转换<xref:System.Single>值使用显式<xref:System.Decimal>到<xref:System.Single>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-471">The following example converts <xref:System.Decimal> numbers to <xref:System.Single> values by using the explicit <xref:System.Decimal> to <xref:System.Single> conversion operator.</span></span>

 [!code-cpp[System.Decimal.Operators.Explicit#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cpp/tosingle1.cpp#2)] 
 [!code-csharp[System.Decimal.Operators.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cs/tosingle1.cs#2)]
 [!code-vb[System.Decimal.Operators.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators.explicit/vb/tosingle1.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; uint16" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-472">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-472">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-473">定义从 <see cref="T:System.Decimal" /> 到 16 位无符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-473">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 16-bit unsigned integer.</span></span>  
  
<span data-ttu-id="7ad78-474">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7ad78-474">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7ad78-475">16 位无符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-475">A 16-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-476">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.UInt16>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-476">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt16>.</span></span> <span data-ttu-id="7ad78-477">此类的显式转换的语法是依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-477">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7ad78-478">该示例阐释了不同的返回值显式转换时<xref:System.Decimal>值设为<xref:System.UInt16>使用 C# 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-478">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt16> value by using C# and Visual Basic.</span></span> <span data-ttu-id="7ad78-479">若要执行的转换的与语言无关的转换，可以调用<xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-479">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="7ad78-480">以下示例将转换<xref:System.Decimal>数字转换<xref:System.UInt16>值使用显式<xref:System.Decimal>到<xref:System.UInt16>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-480">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt16> values by using the explicit <xref:System.Decimal> to <xref:System.UInt16> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int16.cpp#3)] 
 [!code-csharp[System.Decimal.ConvTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int16.cs#3)]
 [!code-vb[System.Decimal.ConvTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int16.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-481"><paramref name="value" /> 小于 <see cref="F:System.UInt16.MinValue" /> 或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-481"><paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; uint32" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-482">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-482">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-483">定义从 <see cref="T:System.Decimal" /> 到 32 位无符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-483">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 32-bit unsigned integer.</span></span>  
  
<span data-ttu-id="7ad78-484">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7ad78-484">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7ad78-485">32 位无符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-485">A 32-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-486">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.UInt32>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-486">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt32>.</span></span> <span data-ttu-id="7ad78-487">此类的显式转换的语法是依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-487">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7ad78-488">该示例阐释了不同的返回值显式转换时<xref:System.Decimal>值设为<xref:System.UInt32>使用 C# 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-488">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt32> value by using C# and Visual Basic.</span></span> <span data-ttu-id="7ad78-489">若要执行的转换的与语言无关的转换，可以调用<xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-489">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>


## Examples
 <span data-ttu-id="7ad78-490">以下示例将转换<xref:System.Decimal>数字转换<xref:System.UInt32>值使用显式<xref:System.Decimal>到<xref:System.UInt32>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-490">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt32> values by using the explicit <xref:System.Decimal> to <xref:System.UInt32> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int32.cs#2)]
 [!code-vb[System.Decimal.ConvTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int32.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-491"><paramref name="value" /> 小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-491"><paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altCompliant cref="M:System.Decimal.ToInt64(System.Decimal)" />
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; uint64" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-492">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-492">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-493">定义从 <see cref="T:System.Decimal" /> 到 64 位无符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-493">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 64-bit unsigned integer.</span></span>  
  
<span data-ttu-id="7ad78-494">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7ad78-494">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7ad78-495">64 位无符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-495">A 64-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-496">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.UInt64>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-496">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt64>.</span></span> <span data-ttu-id="7ad78-497">此类的显式转换的语法是依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-497">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7ad78-498">该示例阐释了不同的返回值显式转换时<xref:System.Decimal>值设为<xref:System.UInt64>使用 C# 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-498">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt64> value by using C# and Visual Basic.</span></span> <span data-ttu-id="7ad78-499">若要执行的转换的与语言无关的转换，可以调用<xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-499">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>


## Examples 
 <span data-ttu-id="7ad78-500">以下示例将转换<xref:System.Decimal>数字转换<xref:System.UInt64>值使用显式<xref:System.Decimal>到<xref:System.UInt64>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-500">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt64> values by using the explicit <xref:System.Decimal> to <xref:System.UInt64> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int64.cs#1)]
 [!code-vb[System.Decimal.ConvTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int64.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-501"><paramref name="value" /> 为负数或大于 <see cref="F:System.UInt64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-501"><paramref name="value" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Double)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(double value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : double -&gt; decimal" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-502">要转换的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-502">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-503">定义从双精度浮点数到 <see cref="T:System.Decimal" /> 的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-503">Defines an explicit conversion of a double-precision floating-point number to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-504">已转换的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-504">The converted double-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  

 <span data-ttu-id="7ad78-505">以下示例将转换<xref:System.Double>值复制到<xref:System.Decimal>通过使用数字<xref:System.Double>到<xref:System.Decimal>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-505">The following example converts <xref:System.Double> values to <xref:System.Decimal> numbers by using the <xref:System.Double> to <xref:System.Decimal> conversion operator.</span></span> <span data-ttu-id="7ad78-506">此转换要求在 Visual Basic 中的 op_Explicit 运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-506">This conversion requires the op_Explicit operator in Visual Basic.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromdouble.cpp#2)]
 [!code-csharp[System.Decimal.ConvFrom.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromdouble.cs#2)]
 [!code-vb[System.Decimal.ConvFrom.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromdouble.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-507"><paramref name="value" /> 大于 <see cref="F:System.Decimal.MaxValue" /> 或小于 <see cref="F:System.Decimal.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-507"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
<span data-ttu-id="7ad78-508">或</span><span class="sxs-lookup"><span data-stu-id="7ad78-508">-or-</span></span> 
 <span data-ttu-id="7ad78-509"><paramref name="value" /> 为 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-509"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Single)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Single) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(float value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : single -&gt; decimal" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-510">要转换的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-510">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-511">定义从单精度浮点数到 <see cref="T:System.Decimal" /> 的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-511">Defines an explicit conversion of a single-precision floating-point number to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-512">已转换的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-512">The converted single-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-513">以下示例将转换<xref:System.Single>值复制到<xref:System.Decimal>通过使用数字<xref:System.Single>到<xref:System.Decimal>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-513">The following example converts <xref:System.Single> values to <xref:System.Decimal> numbers by using the <xref:System.Single> to <xref:System.Decimal> conversion operator.</span></span> <span data-ttu-id="7ad78-514">此转换要求在 Visual Basic 中的 op_Explicit 运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-514">This conversion requires the op_Explicit operator in Visual Basic.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromsingle.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromsingle.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromsingle.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-515"><paramref name="value" /> 大于 <see cref="F:System.Decimal.MaxValue" /> 或小于 <see cref="F:System.Decimal.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-515"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
<span data-ttu-id="7ad78-516">或</span><span class="sxs-lookup"><span data-stu-id="7ad78-516">-or-</span></span> 
 <span data-ttu-id="7ad78-517"><paramref name="value" /> 为 <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.PositiveInfinity" /> 或 <see cref="F:System.Single.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-517"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : decimal * decimal -&gt; bool" Usage="d1 &gt; d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-518">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-518">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-519">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-519">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7ad78-520">返回一个值，该值指示指定的 <see cref="T:System.Decimal" /> 是否大于另一个指定的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-520">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-521">如果 <see langword="true" /> 大于 <paramref name="d1" />，则为 <paramref name="d2" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-521"><see langword="true" /> if <paramref name="d1" /> is greater than <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-522"><xref:System.Decimal.op_GreaterThan%2A>方法定义的大于运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-522">The <xref:System.Decimal.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-523">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-523">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthan1.cs#8)]
 [!code-vb[System.Decimal.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan1.vb#8)]  
  
 <span data-ttu-id="7ad78-524">不支持自定义的运算符的语言可以调用<xref:System.Decimal.Compare%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7ad78-524">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="7ad78-525">他们可能还能够调用<xref:System.Decimal.op_GreaterThan%2A>方法直接，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7ad78-525">They may also be able to call the <xref:System.Decimal.op_GreaterThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan2.vb#9)]  
  
 <span data-ttu-id="7ad78-526">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ad78-526">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : decimal * decimal -&gt; bool" Usage="d1 &gt;= d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-527">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-527">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-528">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-528">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7ad78-529">返回一个值，该值指示指定的 <see cref="T:System.Decimal" /> 是否大于等于另一个指定的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-529">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than or equal to another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-530">如果 <paramref name="d1" /> 大于等于 <paramref name="d2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-530"><see langword="true" /> if <paramref name="d1" /> is greater than or equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-531"><xref:System.Decimal.op_GreaterThanOrEqual%2A>方法定义为大于或等于运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-531">The <xref:System.Decimal.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-532">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-532">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthanorequal1.cs#10)]
 [!code-vb[System.Decimal.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal1.vb#10)]  
  
 <span data-ttu-id="7ad78-533">不支持自定义的运算符的语言可以调用<xref:System.Decimal.Compare%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7ad78-533">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="7ad78-534">他们可能还能够调用<xref:System.Decimal.op_GreaterThanOrEqual%2A>方法直接，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7ad78-534">They may also be able to call the <xref:System.Decimal.op_GreaterThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal2.vb#11)]  
  
 <span data-ttu-id="7ad78-535">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ad78-535">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ad78-536">定义从类型值到 <see cref="T:System.Decimal" /> 值的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-536">Defines an implicit conversion of the value of a type to a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-537">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C#) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-537">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7ad78-538">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7ad78-538">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-539">要转换的 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-539">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-540">定义从 8 位无符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-540">Defines an implicit conversion of an 8-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-541">已转换的 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-541">The converted 8-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-542">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C#) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-542">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7ad78-543">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7ad78-543">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7ad78-544">以下示例将转换<xref:System.Byte>值到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-544">The following example converts <xref:System.Byte> values to <xref:System.Decimal> numbers.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfrombyte.cpp#4)]
 [!code-csharp[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfrombyte.cs#4)]
 [!code-vb[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfrombyte.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Char)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Char) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(char value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : char -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-545">要转换的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-545">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-546">定义从 Unicode 字符到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-546">Defines an implicit conversion of a Unicode character to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-547">转换后的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-547">The converted Unicode character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-548">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C#) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-548">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7ad78-549">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7ad78-549">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7ad78-550">以下示例将转换<xref:System.Char>值 （Unicode 字符） 到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-550">The following example converts <xref:System.Char> values (Unicode characters) to <xref:System.Decimal> numbers.</span></span> <span data-ttu-id="7ad78-551">此转换要求 op_Implicit 运算符在 Visual Basic 中，但不是在C#和 c + +。</span><span class="sxs-lookup"><span data-stu-id="7ad78-551">This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromchar.cpp#1)]
 [!code-csharp[System.Decimal.ConvFrom.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromchar.cs#1)]
 [!code-vb[System.Decimal.ConvFrom.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromchar.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(short value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int16 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-552">要转换的 16 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-552">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-553">定义从 16 位有符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-553">Defines an implicit conversion of a 16-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-554">转换后的 16 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-554">The converted 16-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-555">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C#) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-555">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7ad78-556">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7ad78-556">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7ad78-557">以下示例将转换<xref:System.Int16>值到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-557">The following example converts <xref:System.Int16> values to <xref:System.Decimal> numbers.</span></span> <span data-ttu-id="7ad78-558">此转换要求 op_Implicit 运算符在 Visual Basic 中，但不是在C#和 c + +。</span><span class="sxs-lookup"><span data-stu-id="7ad78-558">This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint16.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint16.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint16.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(int value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-559">要转换的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-559">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-560">定义从 32 位有符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-560">Defines an implicit conversion of a 32-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-561">转换后的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-561">The converted 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-562">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C#) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-562">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7ad78-563">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7ad78-563">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7ad78-564">以下示例将转换<xref:System.Int32>值到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-564">The following example converts <xref:System.Int32> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint32.cpp#2)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint32.cs#2)]
 [!code-vb[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint32.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(long value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int64 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-565">要转换的 64 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-565">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-566">定义从 64 位有符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-566">Defines an implicit conversion of a 64-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-567">转换后的 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-567">The converted 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-568">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C#) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-568">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7ad78-569">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7ad78-569">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7ad78-570">以下示例将转换<xref:System.Int64>值到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-570">The following example converts <xref:System.Int64> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint64.cpp#1)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint64.cs#1)]
 [!code-vb[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint64.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : sbyte -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-571">要转换的 8 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-571">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-572">定义从 8 位有符号整数到 <see cref="T:System.Decimal" /> 值的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-572">Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Decimal" />.</span></span>  
  
<span data-ttu-id="7ad78-573">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7ad78-573">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7ad78-574">转换后的 8 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-574">The converted 8-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-575">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C#) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-575">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7ad78-576">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7ad78-576">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7ad78-577">以下示例将转换<xref:System.SByte>值到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-577">The following example converts <xref:System.SByte> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromsbyte.cpp#4)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromsbyte.cs#4)]
 [!code-vb[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromsbyte.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint16 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-578">要转换的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-578">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-579">定义从 16 位无符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-579">Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
<span data-ttu-id="7ad78-580">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7ad78-580">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7ad78-581">已转换的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-581">The converted 16-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-582">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C#) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-582">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7ad78-583">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7ad78-583">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7ad78-584">以下示例将转换<xref:System.UInt16>值到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-584">The following example converts <xref:System.UInt16> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint16.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint16.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint16.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint32 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-585">要转换的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-585">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-586">定义从 32 位无符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-586">Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
<span data-ttu-id="7ad78-587">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7ad78-587">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7ad78-588">已转换的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-588">The converted 32-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-589">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C#) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-589">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7ad78-590">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7ad78-590">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7ad78-591">以下示例将转换<xref:System.UInt32>值到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-591">The following example converts <xref:System.UInt32> values to <xref:System.Decimal> numbers.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint32.cs#2)] 
 [!code-vb[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint32.vb#2)]   

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint64 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-592">要转换的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-592">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-593">定义从 64 位无符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-593">Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
<span data-ttu-id="7ad78-594">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7ad78-594">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7ad78-595">已转换的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-595">The converted 64-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-596">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C#) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-596">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7ad78-597">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7ad78-597">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7ad78-598">以下示例将转换<xref:System.UInt64>值复制到<xref:System.Decimal>通过使用数字<xref:System.UInt64>到<xref:System.Decimal>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-598">The following example converts <xref:System.UInt64> values to <xref:System.Decimal> numbers by using the <xref:System.UInt64> to <xref:System.Decimal> conversion operator.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint64.cs#1)] 
 [!code-vb[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint64.vb#1)]   

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static decimal operator ++ (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Increment(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Increment(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator ++(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member op_Increment : decimal -&gt; decimal" Usage="System.decimal.op_Increment d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-599">要递增的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-599">The value to increment.</span></span></param>
        <summary><span data-ttu-id="7ad78-600">将 <see cref="T:System.Decimal" /> 操作数增加 1。</span><span class="sxs-lookup"><span data-stu-id="7ad78-600">Increments the <see cref="T:System.Decimal" /> operand by 1.</span></span></summary>
        <returns><span data-ttu-id="7ad78-601"><paramref name="d" /> 增加 1 后的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-601">The value of <paramref name="d" /> incremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-602"><xref:System.Decimal.op_Increment%2A>方法定义的增量运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-602">The <xref:System.Decimal.op_Increment%2A> method defines the operation of the increment operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-603">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-603">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment1.cs#12)]  
  
 <span data-ttu-id="7ad78-604">某些语言缺少增量运算符 （如 Visual Basic 中) 可以调用<xref:System.Decimal.op_Increment%2A>方法直接，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7ad78-604">Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Increment%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment1.vb#13)]  
  
 <span data-ttu-id="7ad78-605">如果你的语言不支持自定义运算符，调用<xref:System.Decimal.Add%2A>方法相反，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7ad78-605">If your language does not support custom operators, call the <xref:System.Decimal.Add%2A> method instead, as the following example shows.</span></span>  
  
 [!code-csharp[System.Decimal.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment2.cs#14)]
 [!code-vb[System.Decimal.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment2.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-606">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-606">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : decimal * decimal -&gt; bool" Usage="System.decimal.op_Inequality (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-607">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-607">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-608">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-608">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7ad78-609">返回一个值，该值指示两个 <see cref="T:System.Decimal" /> 对象是否具有不同的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-609">Returns a value that indicates whether two <see cref="T:System.Decimal" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="7ad78-610">如果 <paramref name="d1" /> 和 <paramref name="d2" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-610"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-611"><xref:System.Decimal.op_Inequality%2A>方法定义为不等运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-611">The <xref:System.Decimal.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-612">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-612">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/inequality1.cs#2)]
 [!code-vb[System.Decimal.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/inequality1.vb#2)]  
  
 <span data-ttu-id="7ad78-613">如果您使用的语言不支持自定义运算符，可以使用以下方法之一测试不相等：</span><span class="sxs-lookup"><span data-stu-id="7ad78-613">If the language you're using doesn't support custom operators, you can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="7ad78-614">调用<xref:System.Decimal.Compare%2A>方法，指示两个之间的关系<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-614">Calling the <xref:System.Decimal.Compare%2A> method, which indicates the relationship between two <xref:System.Decimal> values.</span></span>  
  
-   <span data-ttu-id="7ad78-615">调用<xref:System.Decimal.Equals%2A>方法，并反转其值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-615">Calling the <xref:System.Decimal.Equals%2A> method and reversing its value.</span></span>  
  
 <span data-ttu-id="7ad78-616">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ad78-616">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : decimal * decimal -&gt; bool" Usage="d1 &lt; d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-617">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-617">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-618">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-618">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7ad78-619">返回一个值，该值指示指定的 <see cref="T:System.Decimal" /> 是否小于另一个指定的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-619">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-620">如果 <paramref name="d1" /> 小于 <paramref name="d2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-620"><see langword="true" /> if <paramref name="d1" /> is less than <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-621"><xref:System.Decimal.op_LessThan%2A>方法定义的小于运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-621">The <xref:System.Decimal.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-622">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-622">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthan1.cs#15)]
 [!code-vb[System.Decimal.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan1.vb#15)]  
  
 <span data-ttu-id="7ad78-623">不支持自定义的运算符的语言可以调用<xref:System.Decimal.Compare%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7ad78-623">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="7ad78-624">他们可能还能够调用<xref:System.Decimal.op_LessThan%2A>方法直接，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7ad78-624">They may also be able to call the <xref:System.Decimal.op_LessThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan2.vb#16)]  
  
 <span data-ttu-id="7ad78-625">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ad78-625">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : decimal * decimal -&gt; bool" Usage="d1 &lt;= d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-626">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-626">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-627">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-627">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7ad78-628">返回一个值，该值指示指定的 <see cref="T:System.Decimal" /> 是小于还是等于另一个指定的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-628">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than or equal to another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-629">如果 <paramref name="d1" /> 小于等于 <paramref name="d2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-629"><see langword="true" /> if <paramref name="d1" /> is less than or equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-630"><xref:System.Decimal.op_LessThanOrEqual%2A>方法定义的无操作比或相等运算符<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-630">The <xref:System.Decimal.op_LessThanOrEqual%2A> method defines the operation of the less than or equal operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-631">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-631">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthanorequal1.cs#17)]
 [!code-vb[System.Decimal.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal1.vb#17)]  
  
 <span data-ttu-id="7ad78-632">不支持自定义的运算符的语言可以调用<xref:System.Decimal.Compare%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7ad78-632">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="7ad78-633">他们可能还能够调用<xref:System.Decimal.op_LessThanOrEqual%2A>方法直接，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7ad78-633">They may also be able to call the <xref:System.Decimal.op_LessThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal2.vb#18)]  
  
 <span data-ttu-id="7ad78-634">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ad78-634">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static decimal operator % (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Modulus(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator %(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( % ) : decimal * decimal -&gt; decimal" Usage="d1 % d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-635">被除数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-635">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-636">除数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-636">The divisor.</span></span></param>
        <summary><span data-ttu-id="7ad78-637">返回两个指定 <see cref="T:System.Decimal" /> 值相除所得的余数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-637">Returns the remainder resulting from dividing two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7ad78-638">该余数是由 <paramref name="d1" /> 除以 <paramref name="d2" /> 所得。</span><span class="sxs-lookup"><span data-stu-id="7ad78-638">The remainder resulting from dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-639"><xref:System.Decimal.op_Modulus%2A>运算符可定义返回两个指定相除所得的余数的余数运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-639">The <xref:System.Decimal.op_Modulus%2A> operator defines the remainder operation that returns the remainder resulting from dividing two specified <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-640">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-640">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/modulus1.cs#19)]
 [!code-vb[System.Decimal.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/modulus1.vb#19)]  
  
 <span data-ttu-id="7ad78-641">余数运算返回的值的符号取决于被除数的符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-641">The sign of the value returned by the remainder operation depends on the sign of dividend.</span></span> <span data-ttu-id="7ad78-642">如果被除数为正，其余部分操作将返回出正结果;如果它为负，余数运算返回负数的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-642">If dividend is positive, the remainder operation returns a positive result; if it is negative, the remainder operation returns a negative result.</span></span>  
  
 <span data-ttu-id="7ad78-643">此运算符的等效方法是<xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-643">The equivalent method for this operator is <xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7ad78-644">如果您使用的语言不支持自定义运算符，调用<xref:System.Decimal.Remainder%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7ad78-644">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Remainder%2A> method instead.</span></span>  
         ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="7ad78-645"><paramref name="d2" /> 为 <see langword="zero" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-645"><paramref name="d2" /> is <see langword="zero" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-646">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-646">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Remainder(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static decimal operator * (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Multiply(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator *(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( * ) : decimal * decimal -&gt; decimal" Usage="d1 * d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-647">要相乘的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-647">The first value to multiply.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-648">要相乘的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-648">The second value to multiply.</span></span></param>
        <summary><span data-ttu-id="7ad78-649">两个指定的 <see cref="T:System.Decimal" /> 值相乘。</span><span class="sxs-lookup"><span data-stu-id="7ad78-649">Multiplies two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7ad78-650"><paramref name="d1" /> 与 <paramref name="d2" /> 相乘的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-650">The result of multiplying <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-651"><xref:System.Decimal.op_Multiply%2A>方法定义的乘法运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-651">The <xref:System.Decimal.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-652">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-652">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/multiply1.cs#20)]
 [!code-vb[System.Decimal.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/multiply1.vb#20)]  
  
 <span data-ttu-id="7ad78-653">如果您使用的语言不支持自定义运算符，调用<xref:System.Decimal.Multiply%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7ad78-653">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Multiply%2A> method instead.</span></span>  
  
 <span data-ttu-id="7ad78-654">此运算符的等效方法是 <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ad78-654">The equivalent method for this operator is <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-655">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-655">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static decimal operator - (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Subtraction(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator -(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : decimal * decimal -&gt; decimal" Usage="d1 - d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-656">被减数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-656">The minuend.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-657">减数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-657">The subtrahend.</span></span></param>
        <summary><span data-ttu-id="7ad78-658">将两个指定的 <see cref="T:System.Decimal" /> 值相减。</span><span class="sxs-lookup"><span data-stu-id="7ad78-658">Subtracts two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7ad78-659"><paramref name="d2" /> 减 <paramref name="d1" /> 所得的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-659">The result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-660"><xref:System.Decimal.op_Subtraction%2A>方法定义的减法运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-660">The <xref:System.Decimal.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-661">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-661">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/subtraction1.cs#21)]
 [!code-vb[System.Decimal.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/subtraction1.vb#21)]  
  
 <span data-ttu-id="7ad78-662">如果您使用的语言不支持自定义运算符，调用<xref:System.Decimal.Subtract%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7ad78-662">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead.</span></span>  
  
 <span data-ttu-id="7ad78-663">此运算符的等效方法是 <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ad78-663">The equivalent method for this operator is <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-664">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-664">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static decimal operator - (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_UnaryNegation(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_UnaryNegation(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator -(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : decimal -&gt; decimal" Usage="- d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-665">要求反的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-665">The value to negate.</span></span></param>
        <summary><span data-ttu-id="7ad78-666">对指定 <see cref="T:System.Decimal" /> 操作数的值求反。</span><span class="sxs-lookup"><span data-stu-id="7ad78-666">Negates the value of the specified <see cref="T:System.Decimal" /> operand.</span></span></summary>
        <returns><span data-ttu-id="7ad78-667"><paramref name="d" /> 乘以负一 (-1) 的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-667">The result of <paramref name="d" /> multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-668"><xref:System.Decimal.op_UnaryPlus%2A>方法的定义的一元求反运算符 （或相反运算符） 的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-668">The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-669">该操作生成一个值，会导致在 0 （零） 时将其添加到原始编号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-669">The operation produces a value that results in 0 (zero) when it is added to the original number.</span></span> <span data-ttu-id="7ad78-670">不支持自定义的运算符的语言可以调用<xref:System.Decimal.Negate%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7ad78-670">Languages that do not support custom operators can call the <xref:System.Decimal.Negate%2A> method instead.</span></span>  
  
 <span data-ttu-id="7ad78-671">此运算符的等效方法是 <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7ad78-671">The equivalent method for this operator is <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Negate(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static decimal operator + (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_UnaryPlus(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_UnaryPlus(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator +(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : decimal -&gt; decimal" Usage="+ d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-672">要返回的操作数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-672">The operand to return.</span></span></param>
        <summary><span data-ttu-id="7ad78-673">返回 <see cref="T:System.Decimal" /> 操作数的值（操作数符号不变）。</span><span class="sxs-lookup"><span data-stu-id="7ad78-673">Returns the value of the <see cref="T:System.Decimal" /> operand (the sign of the operand is unchanged).</span></span></summary>
        <returns><span data-ttu-id="7ad78-674">操作数 <paramref name="d" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-674">The value of the operand, <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-675"><xref:System.Decimal.op_UnaryPlus%2A>方法定义的一元正运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-675">The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Decimal> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ad78-676">将数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-676">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <altmember cref="Overload:System.Decimal.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; decimal" Usage="System.decimal.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ad78-677">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-677">The string representation of the number to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-678">将数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-678">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="7ad78-679"><paramref name="s" /> 中包含的数字的等效值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-679">The equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-680">参数`s`包含多个窗体：</span><span class="sxs-lookup"><span data-stu-id="7ad78-680">Parameter `s` contains a number of the form:</span></span>  
  
 <span data-ttu-id="7ad78-681">[ws][sign][digits,]digits[.fractional-digits][ws]</span><span class="sxs-lookup"><span data-stu-id="7ad78-681">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="7ad78-682">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="7ad78-682">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="7ad78-683">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="7ad78-683">The following table describes each element.</span></span>  
  
|<span data-ttu-id="7ad78-684">元素</span><span class="sxs-lookup"><span data-stu-id="7ad78-684">Element</span></span>|<span data-ttu-id="7ad78-685">描述</span><span class="sxs-lookup"><span data-stu-id="7ad78-685">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="7ad78-686">*ws*</span><span class="sxs-lookup"><span data-stu-id="7ad78-686">*ws*</span></span>|<span data-ttu-id="7ad78-687">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="7ad78-687">Optional white space.</span></span>|  
|<span data-ttu-id="7ad78-688">*sign*</span><span class="sxs-lookup"><span data-stu-id="7ad78-688">*sign*</span></span>|<span data-ttu-id="7ad78-689">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="7ad78-689">An optional sign.</span></span>|  
|<span data-ttu-id="7ad78-690">*digits*</span><span class="sxs-lookup"><span data-stu-id="7ad78-690">*digits*</span></span>|<span data-ttu-id="7ad78-691">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7ad78-691">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="7ad78-692">*，*</span><span class="sxs-lookup"><span data-stu-id="7ad78-692">*,*</span></span>|<span data-ttu-id="7ad78-693">特定于区域性的千位分隔符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-693">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="7ad78-694">*.*</span><span class="sxs-lookup"><span data-stu-id="7ad78-694">*.*</span></span>|<span data-ttu-id="7ad78-695">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-695">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="7ad78-696">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="7ad78-696">*fractional-digits*</span></span>|<span data-ttu-id="7ad78-697">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7ad78-697">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="7ad78-698">参数`s`使用解释<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-698">Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="7ad78-699">这意味着该空白和千位分隔符允许但不是货币符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-699">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="7ad78-700">若要显式定义的元素 (如货币符号，千位分隔符和空白区域)，可能会包含`s`，可以使用两种<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>或<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-700">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use either the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7ad78-701">参数`s`使用中的格式设置信息分析<xref:System.Globalization.NumberFormatInfo>初始化为当前系统区域性。</span><span class="sxs-lookup"><span data-stu-id="7ad78-701">Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> initialized for the current system culture.</span></span> <span data-ttu-id="7ad78-702">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-702">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="7ad78-703">若要分析使用的格式信息的一些其他区域性的字符串，请使用<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>或<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-703">To parse a string using the formatting information of some other culture, use the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7ad78-704">如有必要，值`s`使用舍入为最接近舍入。</span><span class="sxs-lookup"><span data-stu-id="7ad78-704">If necessary, the value of `s` is rounded using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7ad78-705">一个<xref:System.Decimal>有 29 位精度。</span><span class="sxs-lookup"><span data-stu-id="7ad78-705">A <xref:System.Decimal> has 29 digits of precision.</span></span> <span data-ttu-id="7ad78-706">如果`s`表示具有多个 29 位，但有小数部分和位于范围内的数字<xref:System.Decimal.MaxValue>和<xref:System.Decimal.MinValue>，数字舍入，未被截断，到使用舍入为最接近的 29 位。</span><span class="sxs-lookup"><span data-stu-id="7ad78-706">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7ad78-707">如果在分析操作期间分隔符时遇到的`s`参数，以及适用的货币或十进制数和组分隔符是相同的分析操作假定，分隔符是十进制分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-707">If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="7ad78-708">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-708">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-709">下面的代码示例使用<xref:System.Decimal.Parse%28System.String%29>方法，以便分析的字符串表示形式<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-709">The following code example uses the <xref:System.Decimal.Parse%28System.String%29> method to parse string representations of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#1)]
 [!code-vb[System.Decimal.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ad78-710"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-710"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ad78-711"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="7ad78-711"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-712"><paramref name="s" /> 表示一个小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-712"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="7ad78-713">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="7ad78-713">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; decimal" Usage="System.decimal.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ad78-714">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-714">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="7ad78-715"><see cref="T:System.Globalization.NumberStyles" /> 值的按位组合，指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-715">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="7ad78-716">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Number" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-716">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <summary><span data-ttu-id="7ad78-717">将指定样式的数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-717">Converts the string representation of a number in a specified style to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="7ad78-718"><see cref="T:System.Decimal" /> 数，它与由 <paramref name="s" /> 所指定的 <paramref name="style" /> 中包含的数字等效。</span><span class="sxs-lookup"><span data-stu-id="7ad78-718">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-719">`style`参数定义的样式元素 (例如，千位分隔符，空白区域和货币符号) 中允许`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-719">The `style` parameter defines the style elements (such as thousands separators, white space, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="7ad78-720">它必须是从位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="7ad78-720">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="7ad78-721">以下<xref:System.Globalization.NumberStyles>不支持成员：</span><span class="sxs-lookup"><span data-stu-id="7ad78-721">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="7ad78-722">具体取决于值`style`，则`s`参数可能包含以下元素：</span><span class="sxs-lookup"><span data-stu-id="7ad78-722">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="7ad78-723">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="7ad78-723">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="7ad78-724">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="7ad78-724">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="7ad78-725">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="7ad78-725">The following table describes each element.</span></span>  
  
|<span data-ttu-id="7ad78-726">元素</span><span class="sxs-lookup"><span data-stu-id="7ad78-726">Element</span></span>|<span data-ttu-id="7ad78-727">描述</span><span class="sxs-lookup"><span data-stu-id="7ad78-727">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="7ad78-728">*ws*</span><span class="sxs-lookup"><span data-stu-id="7ad78-728">*ws*</span></span>|<span data-ttu-id="7ad78-729">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="7ad78-729">Optional white space.</span></span> <span data-ttu-id="7ad78-730">空白可以出现在开头`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-730">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="7ad78-731">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-731">A culture-specific currency symbol.</span></span> <span data-ttu-id="7ad78-732">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="7ad78-732">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="7ad78-733">当前区域性的货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-733">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7ad78-734">*sign*</span><span class="sxs-lookup"><span data-stu-id="7ad78-734">*sign*</span></span>|<span data-ttu-id="7ad78-735">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="7ad78-735">An optional sign.</span></span> <span data-ttu-id="7ad78-736">符号可以显示在开头`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-736">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7ad78-737">可以在使用括号`s`指示负值`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-737">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7ad78-738">*digits*</span><span class="sxs-lookup"><span data-stu-id="7ad78-738">*digits*</span></span>|<span data-ttu-id="7ad78-739">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7ad78-739">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="7ad78-740">*，*</span><span class="sxs-lookup"><span data-stu-id="7ad78-740">*,*</span></span>|<span data-ttu-id="7ad78-741">特定于区域性的千位分隔符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-741">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="7ad78-742">当前区域性的千位分隔符可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-742">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7ad78-743">*.*</span><span class="sxs-lookup"><span data-stu-id="7ad78-743">*.*</span></span>|<span data-ttu-id="7ad78-744">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-744">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="7ad78-745">当前区域性的小数点符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-745">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7ad78-746">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="7ad78-746">*fractional-digits*</span></span>|<span data-ttu-id="7ad78-747">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7ad78-747">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="7ad78-748">在中出现的小数位`s`仅当`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-748">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7ad78-749">*e*</span><span class="sxs-lookup"><span data-stu-id="7ad78-749">*e*</span></span>|<span data-ttu-id="7ad78-750">E 或者 E 字符，它指示指数记数法中表示值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-750">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="7ad78-751">`s`参数可以表示指数表示法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-751">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="7ad78-752">中的任何终止 NUL (U + 0000) 字符`s`在分析操作，而不考虑的值，将忽略`style`参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-752">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="7ad78-753">仅为数字的字符串 (对应于<xref:System.Globalization.NumberStyles.None>样式) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="7ad78-753">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully.</span></span> <span data-ttu-id="7ad78-754">剩余<xref:System.Globalization.NumberStyles>成员控件可能但不是要求必须包含在输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-754">The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="7ad78-755">下表指示个别<xref:System.Globalization.NumberStyles>成员影响可能会出现在元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7ad78-755">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="7ad78-756">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="7ad78-756">NumberStyles value</span></span>|<span data-ttu-id="7ad78-757">除数字之外 s 中允许的元素</span><span class="sxs-lookup"><span data-stu-id="7ad78-757">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="7ad78-758">*位数*仅元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-758">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="7ad78-759">*.*</span><span class="sxs-lookup"><span data-stu-id="7ad78-759">The *.*</span></span> <span data-ttu-id="7ad78-760">并*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-760">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="7ad78-761">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-761">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="7ad78-762">此标志在窗体中支持值*位数*E*数字*; 其他标志需要为成功分析元素，例如正数或负数符号和小数点符号的字符串。</span><span class="sxs-lookup"><span data-stu-id="7ad78-762">This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="7ad78-763">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7ad78-763">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="7ad78-764">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7ad78-764">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="7ad78-765">*符号*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7ad78-765">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="7ad78-766">*符号*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7ad78-766">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="7ad78-767">*登录*形式的括号内包含的数字值的元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-767">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="7ad78-768">*，* 元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-768">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="7ad78-769">*$* 元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-769">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="7ad78-770">全部。</span><span class="sxs-lookup"><span data-stu-id="7ad78-770">All.</span></span> <span data-ttu-id="7ad78-771">`s`参数不能表示十六进制数或指数表示法的数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-771">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="7ad78-772">*Ws*元素的开头或末尾`s`，*登录*开头`s`，和 *。*</span><span class="sxs-lookup"><span data-stu-id="7ad78-772">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="7ad78-773">符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-773">symbol.</span></span> <span data-ttu-id="7ad78-774">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-774">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="7ad78-775">`ws`， `sign`， *，*，和 *。*</span><span class="sxs-lookup"><span data-stu-id="7ad78-775">The `ws`, `sign`, *,*, and *.*</span></span> <span data-ttu-id="7ad78-776">元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-776">elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="7ad78-777">所有样式，除非`s`不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-777">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="7ad78-778">`s`使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>对象初始化为当前系统区域性。</span><span class="sxs-lookup"><span data-stu-id="7ad78-778">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="7ad78-779">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-779">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="7ad78-780">一个<xref:System.Decimal>有 29 位精度。</span><span class="sxs-lookup"><span data-stu-id="7ad78-780">A <xref:System.Decimal> has 29 digits of precision.</span></span> <span data-ttu-id="7ad78-781">如果`s`表示具有多个 29 位，但有小数部分和位于范围内的数字<xref:System.Decimal.MaxValue>和<xref:System.Decimal.MinValue>，数字舍入，未被截断，到使用舍入为最接近的 29 位。</span><span class="sxs-lookup"><span data-stu-id="7ad78-781">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7ad78-782">如果分隔符时遇到`s`分析操作期间的参数`styles`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>值，以及适用的货币或十进制数和组分隔符是相同的分析操作假定该分隔符是十进制分隔符，而不是组分隔符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-782">If a separator is encountered in the `s` parameter during a parse operation, `styles` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> values, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="7ad78-783">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-783">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-784">下面的代码示例使用<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29>方法，以便分析的字符串表示形式<xref:System.Decimal>使用 EN-US 区域性值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-784">The following code example uses the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method to parse the string representations of <xref:System.Decimal> values using the en-US culture.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#2)]
 [!code-vb[System.Decimal.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ad78-785"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-785"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ad78-786"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-786"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="7ad78-787">或</span><span class="sxs-lookup"><span data-stu-id="7ad78-787">-or-</span></span> 
 <span data-ttu-id="7ad78-788"><paramref name="style" /> 是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-788"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ad78-789"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="7ad78-789"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-790"><paramref name="s" /> 表示一个小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字</span><span class="sxs-lookup"><span data-stu-id="7ad78-790"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="7ad78-791">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="7ad78-791">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; decimal" Usage="System.decimal.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ad78-792">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-792">The string representation of the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="7ad78-793">一个 <see cref="T:System.IFormatProvider" />，它提供有关 <paramref name="s" /> 的区域性特定分析信息。</span><span class="sxs-lookup"><span data-stu-id="7ad78-793">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific parsing information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="7ad78-794">使用指定的区域性特定格式信息将数字的字符串表示形式转换为其 <see cref="T:System.Decimal" /> 等效项。</span><span class="sxs-lookup"><span data-stu-id="7ad78-794">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="7ad78-795"><see cref="T:System.Decimal" /> 数，它与由 <paramref name="s" /> 所指定的 <paramref name="provider" /> 中包含的数字等效。</span><span class="sxs-lookup"><span data-stu-id="7ad78-795">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-796">此重载<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29>方法通常用于将可以各种方式格式化文本转换<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-796">This overload of the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method is commonly used to convert text that can be formatted in a variety of ways to a <xref:System.Decimal> value.</span></span> <span data-ttu-id="7ad78-797">例如，它可以用于将输入到 HTML 文本中用户的数字值的文本转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-797">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="7ad78-798">`s`参数包含多个窗体：</span><span class="sxs-lookup"><span data-stu-id="7ad78-798">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="7ad78-799">[ws][sign][digits,]digits[.fractional-digits][ws]</span><span class="sxs-lookup"><span data-stu-id="7ad78-799">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="7ad78-800">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="7ad78-800">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="7ad78-801">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="7ad78-801">The following table describes each element.</span></span>  
  
|<span data-ttu-id="7ad78-802">元素</span><span class="sxs-lookup"><span data-stu-id="7ad78-802">Element</span></span>|<span data-ttu-id="7ad78-803">描述</span><span class="sxs-lookup"><span data-stu-id="7ad78-803">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="7ad78-804">*ws*</span><span class="sxs-lookup"><span data-stu-id="7ad78-804">*ws*</span></span>|<span data-ttu-id="7ad78-805">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="7ad78-805">Optional white space.</span></span>|  
|<span data-ttu-id="7ad78-806">*sign*</span><span class="sxs-lookup"><span data-stu-id="7ad78-806">*sign*</span></span>|<span data-ttu-id="7ad78-807">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="7ad78-807">An optional sign.</span></span>|  
|<span data-ttu-id="7ad78-808">*digits*</span><span class="sxs-lookup"><span data-stu-id="7ad78-808">*digits*</span></span>|<span data-ttu-id="7ad78-809">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7ad78-809">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="7ad78-810">*，*</span><span class="sxs-lookup"><span data-stu-id="7ad78-810">*,*</span></span>|<span data-ttu-id="7ad78-811">特定于区域性的千位分隔符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-811">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="7ad78-812">*.*</span><span class="sxs-lookup"><span data-stu-id="7ad78-812">*.*</span></span>|<span data-ttu-id="7ad78-813">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-813">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="7ad78-814">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="7ad78-814">*fractional-digits*</span></span>|<span data-ttu-id="7ad78-815">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7ad78-815">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="7ad78-816">`s`参数被解释使用<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-816">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="7ad78-817">这意味着该空白和千位分隔符允许但不是货币符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-817">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="7ad78-818">若要显式定义的元素 (如货币符号，千位分隔符和空格)，可能会包含`s`，使用<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-818">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7ad78-819">`provider`参数是<xref:System.IFormatProvider>实现，如<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-819">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="7ad78-820">`provider`参数提供在分析中使用的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="7ad78-820">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="7ad78-821">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="7ad78-821">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="7ad78-822">一个<xref:System.Decimal>对象具有 29 位精度。</span><span class="sxs-lookup"><span data-stu-id="7ad78-822">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="7ad78-823">如果`s`表示具有多个 29 位，但有小数部分和位于范围内的数字<xref:System.Decimal.MaxValue>和<xref:System.Decimal.MinValue>，数字舍入，未被截断，到使用舍入为最接近的 29 位。</span><span class="sxs-lookup"><span data-stu-id="7ad78-823">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7ad78-824">如果分隔符时遇到`s`参数在分析操作，以及适用的货币或十进制数和组分隔符是相同的分析操作假定，分隔符是十进制分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-824">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="7ad78-825">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-825">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-826">下面的示例是按钮单击事件处理程序的 Web 窗体。</span><span class="sxs-lookup"><span data-stu-id="7ad78-826">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="7ad78-827">它使用返回的数组<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>属性来确定用户的区域设置。</span><span class="sxs-lookup"><span data-stu-id="7ad78-827">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="7ad78-828">它然后实例化<xref:System.Globalization.CultureInfo>对应于该区域设置的对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-828">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="7ad78-829"><xref:System.Globalization.NumberFormatInfo>所属的对象的<xref:System.Globalization.CultureInfo>对象然后传递给<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29>方法将用户输入转换为<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-829">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[ParseMethod#3](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#3)]
 [!code-vb[ParseMethod#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ad78-830"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-830"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ad78-831"><paramref name="s" /> 的格式不正确</span><span class="sxs-lookup"><span data-stu-id="7ad78-831"><paramref name="s" /> is not of the correct format</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-832"><paramref name="s" /> 表示一个小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字</span><span class="sxs-lookup"><span data-stu-id="7ad78-832"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="7ad78-833">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="7ad78-833">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Number, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Number, Optional provider As IFormatProvider = null) As Decimal" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; decimal" Usage="System.decimal.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; decimal" Usage="System.decimal.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ad78-834">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-834">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="7ad78-835"><see cref="T:System.Globalization.NumberStyles" /> 值的按位组合，指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-835">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="7ad78-836">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Number" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-836">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <param name="provider"><span data-ttu-id="7ad78-837">一个 <see cref="T:System.IFormatProvider" /> 对象，用于提供有关 <paramref name="s" /> 格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="7ad78-837">An <see cref="T:System.IFormatProvider" /> object that supplies culture-specific information about the format of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="7ad78-838">使用指定样式和区域性特定格式将数字的字符串表示形式转换为其 <see cref="T:System.Decimal" /> 等效项。</span><span class="sxs-lookup"><span data-stu-id="7ad78-838">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span></span></summary>
        <returns><span data-ttu-id="7ad78-839"><see cref="T:System.Decimal" /> 数，它与 <paramref name="s" /> 和 <paramref name="style" /> 所指定的 <paramref name="provider" /> 中包含的数字等效。</span><span class="sxs-lookup"><span data-stu-id="7ad78-839">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-840">`style`参数定义的允许的格式`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-840">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="7ad78-841">它必须是从位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="7ad78-841">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="7ad78-842">以下<xref:System.Globalization.NumberStyles>不支持成员：</span><span class="sxs-lookup"><span data-stu-id="7ad78-842">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="7ad78-843">具体取决于值`style`，则`s`参数可能包含以下元素：</span><span class="sxs-lookup"><span data-stu-id="7ad78-843">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="7ad78-844">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="7ad78-844">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="7ad78-845">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="7ad78-845">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="7ad78-846">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="7ad78-846">The following table describes each element.</span></span>  
  
|<span data-ttu-id="7ad78-847">元素</span><span class="sxs-lookup"><span data-stu-id="7ad78-847">Element</span></span>|<span data-ttu-id="7ad78-848">描述</span><span class="sxs-lookup"><span data-stu-id="7ad78-848">Description</span></span>|  
|-------------|-----------------|  
|*$*|<span data-ttu-id="7ad78-849">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-849">A culture-specific currency symbol.</span></span> <span data-ttu-id="7ad78-850">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>的属性<xref:System.Globalization.NumberFormatInfo>返回的对象<xref:System.IFormatProvider.GetFormat%2A>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-850">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="7ad78-851">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-851">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7ad78-852">*ws*</span><span class="sxs-lookup"><span data-stu-id="7ad78-852">*ws*</span></span>|<span data-ttu-id="7ad78-853">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="7ad78-853">Optional white space.</span></span> <span data-ttu-id="7ad78-854">空白可以出现在开头`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-854">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7ad78-855">*sign*</span><span class="sxs-lookup"><span data-stu-id="7ad78-855">*sign*</span></span>|<span data-ttu-id="7ad78-856">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="7ad78-856">An optional sign.</span></span> <span data-ttu-id="7ad78-857">符号可以显示在开头`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-857">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7ad78-858">可以在使用括号`s`指示负值`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-858">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7ad78-859">*digits*</span><span class="sxs-lookup"><span data-stu-id="7ad78-859">*digits*</span></span>|<span data-ttu-id="7ad78-860">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7ad78-860">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="7ad78-861">*，*</span><span class="sxs-lookup"><span data-stu-id="7ad78-861">*,*</span></span>|<span data-ttu-id="7ad78-862">特定于区域性的千位分隔符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-862">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="7ad78-863">千位分隔符的定义的区域性`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-863">The thousands separator of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7ad78-864">*.*</span><span class="sxs-lookup"><span data-stu-id="7ad78-864">*.*</span></span>|<span data-ttu-id="7ad78-865">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-865">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="7ad78-866">由定义的区域性的小数点符号`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-866">The decimal point symbol of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7ad78-867">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="7ad78-867">*fractional-digits*</span></span>|<span data-ttu-id="7ad78-868">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7ad78-868">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="7ad78-869">在中出现的小数位`s`仅当`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-869">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7ad78-870">*e*</span><span class="sxs-lookup"><span data-stu-id="7ad78-870">*e*</span></span>|<span data-ttu-id="7ad78-871">E 或者 E 字符，它指示指数记数法中表示值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-871">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="7ad78-872">`s`参数可以表示指数表示法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-872">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="7ad78-873">中的任何终止 NUL (U + 0000) 字符`s`在分析操作，而不考虑的值，将忽略`style`参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-873">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="7ad78-874">仅为数字的字符串 (对应于<xref:System.Globalization.NumberStyles.None>样式) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="7ad78-874">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully.</span></span> <span data-ttu-id="7ad78-875">剩余<xref:System.Globalization.NumberStyles>成员控件可能但不是要求必须包含在输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-875">The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="7ad78-876">下表指示个别<xref:System.Globalization.NumberStyles>成员影响可能会出现在元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7ad78-876">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="7ad78-877">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="7ad78-877">NumberStyles value</span></span>|<span data-ttu-id="7ad78-878">除数字之外 s 中允许的元素</span><span class="sxs-lookup"><span data-stu-id="7ad78-878">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="7ad78-879">*位数*仅元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-879">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="7ad78-880">*.*</span><span class="sxs-lookup"><span data-stu-id="7ad78-880">The *.*</span></span> <span data-ttu-id="7ad78-881">并*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-881">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="7ad78-882">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-882">The `s` parameter can also use exponential notation.</span></span>  <span data-ttu-id="7ad78-883">此标志在窗体中支持值*位数*E*数字*; 其他标志需要为成功分析元素，例如正数或负数符号和小数点符号的字符串。</span><span class="sxs-lookup"><span data-stu-id="7ad78-883">This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="7ad78-884">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7ad78-884">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="7ad78-885">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7ad78-885">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="7ad78-886">*符号*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7ad78-886">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="7ad78-887">*符号*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7ad78-887">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="7ad78-888">*登录*形式的括号内包含的数字值的元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-888">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="7ad78-889">*，* 元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-889">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="7ad78-890">*$* 元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-890">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="7ad78-891">全部。</span><span class="sxs-lookup"><span data-stu-id="7ad78-891">All.</span></span> <span data-ttu-id="7ad78-892">`s`参数不能表示十六进制数或指数表示法的数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-892">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="7ad78-893">*Ws*元素的开头或末尾`s`，*登录*开头`s`，并 *。* 符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-893">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.* symbol.</span></span> <span data-ttu-id="7ad78-894">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-894">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="7ad78-895">`ws`， `sign`， *，*，和 *。*</span><span class="sxs-lookup"><span data-stu-id="7ad78-895">The `ws`, `sign`, *,*, and *.*</span></span> <span data-ttu-id="7ad78-896">元素。</span><span class="sxs-lookup"><span data-stu-id="7ad78-896">elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="7ad78-897">所有样式，除非`s`不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-897">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="7ad78-898">`provider`参数是<xref:System.IFormatProvider>实现，如<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-898">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="7ad78-899">`provider`参数提供在分析中使用的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="7ad78-899">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="7ad78-900">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="7ad78-900">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="7ad78-901">一个<xref:System.Decimal>对象具有 29 位精度。</span><span class="sxs-lookup"><span data-stu-id="7ad78-901">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="7ad78-902">如果`s`表示具有多个 29 位，但有小数部分和位于范围内的数字<xref:System.Decimal.MaxValue>和<xref:System.Decimal.MinValue>，数字舍入，未被截断，到使用舍入为最接近的 29 位。</span><span class="sxs-lookup"><span data-stu-id="7ad78-902">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7ad78-903">如果分隔符时遇到`s`参数在分析操作，以及适用的货币或十进制数和组分隔符是相同的分析操作假定，分隔符是十进制分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-903">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="7ad78-904">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-904">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-905">下面的示例使用的各种`style`并`provider`参数来分析的字符串表示形式<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-905">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#3)]
 [!code-vb[System.Decimal.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ad78-906"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="7ad78-906"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-907"><paramref name="s" /> 表示一个小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-907"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ad78-908"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-908"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ad78-909"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-909"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="7ad78-910">或</span><span class="sxs-lookup"><span data-stu-id="7ad78-910">-or-</span></span> 
 <span data-ttu-id="7ad78-911"><paramref name="style" /> 是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-911"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="7ad78-912">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="7ad78-912">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public static decimal Remainder (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Remainder(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Remainder(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remainder (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Remainder(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Remainder : decimal * decimal -&gt; decimal" Usage="System.decimal.Remainder (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-913">被除数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-913">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-914">除数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-914">The divisor.</span></span></param>
        <summary><span data-ttu-id="7ad78-915">计算两个 <see cref="T:System.Decimal" /> 值相除后的余数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-915">Computes the remainder after dividing two <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7ad78-916">将 <paramref name="d1" /> 除以 <paramref name="d2" /> 后的余数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-916">The remainder after dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-917">下面的示例使用<xref:System.Decimal.Remainder%2A>方法以计算除法运算的一系列中的其余部分。</span><span class="sxs-lookup"><span data-stu-id="7ad78-917">The following example uses the <xref:System.Decimal.Remainder%2A> method to calculate the remainder in a series of division operations.</span></span>  
  
 [!code-csharp[System.Decimal.Remainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.remainder/cs/remainder.cs#1)]
 [!code-vb[System.Decimal.Remainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.remainder/vb/remainder.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="7ad78-918"><paramref name="d2" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-918"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-919">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-919">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ad78-920">将值舍入到最接近的整数或指定的小数位数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-920">Rounds a value to the nearest integer or specified number of decimal places.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Round : decimal -&gt; decimal" Usage="System.decimal.Round d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-921">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-921">A decimal number to round.</span></span></param>
        <summary><span data-ttu-id="7ad78-922">将小数值舍入到最接近的整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-922">Rounds a decimal value to the nearest integer.</span></span></summary>
        <returns><span data-ttu-id="7ad78-923">最接近 <paramref name="d" /> 参数的整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-923">The integer that is nearest to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="7ad78-924">如果 <paramref name="d" /> 正好处于两个整数中间，其中一个整数为偶数，另一个整数为奇数，则返回偶数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-924">If <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-925">此方法的行为遵循 IEEE 标准 754，第 4 节。</span><span class="sxs-lookup"><span data-stu-id="7ad78-925">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="7ad78-926">这种舍入有时称为*舍入一半甚至*或*银行家的舍入*。</span><span class="sxs-lookup"><span data-stu-id="7ad78-926">This kind of rounding is sometimes called *round half to even* or *banker's rounding*.</span></span> <span data-ttu-id="7ad78-927">它最小化而导致的持续舍入中在单方向上的中点值舍入误差。</span><span class="sxs-lookup"><span data-stu-id="7ad78-927">It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</span></span> <span data-ttu-id="7ad78-928">它相当于调用<xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29>方法替换`mode`自变量的<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-928">It is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-929">下面的示例将一系列<xref:System.Decimal>介于 100 和 102 到最接近的整数值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-929">The following example rounds a range of <xref:System.Decimal> values between 100 and 102 to the nearest integer.</span></span> <span data-ttu-id="7ad78-930">因为该方法使用银行家的舍入，请注意，100.5 舍入为 100 和 101.5 将舍入到 102。</span><span class="sxs-lookup"><span data-stu-id="7ad78-930">Because the method uses banker's rounding, note that 100.5 rounds to 100 and 101.5 rounds to 102.</span></span>  
  
 [!code-csharp[System.Decimal.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round1.cs#1)]
 [!code-vb[System.Decimal.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-931">结果在 <see cref="T:System.Decimal" /> 值范围之外。</span><span class="sxs-lookup"><span data-stu-id="7ad78-931">The result is outside the range of a <see cref="T:System.Decimal" /> value.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int -&gt; decimal" Usage="System.decimal.Round (d, decimals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-932">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-932">A decimal number to round.</span></span></param>
        <param name="decimals"><span data-ttu-id="7ad78-933">指定数字要舍入到的小数位数的值，范围从 0 到 28。</span><span class="sxs-lookup"><span data-stu-id="7ad78-933">A value from 0 to 28 that specifies the number of decimal places to round to.</span></span></param>
        <summary><span data-ttu-id="7ad78-934">将 <see cref="T:System.Decimal" /> 值舍入到指定的小数位数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-934">Rounds a <see cref="T:System.Decimal" /> value to a specified number of decimal places.</span></span></summary>
        <returns><span data-ttu-id="7ad78-935">舍入到 <paramref name="decimals" /> 的小数位数等于 <paramref name="d" /> 的小数位数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-935">The decimal number equivalent to <paramref name="d" /> rounded to <paramref name="decimals" /> number of decimal places.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-936">此方法相当于调用<xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>方法替换`mode`自变量的<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>。当`d`完全中间两个舍入值，结果是最右边的数位中有偶数位的舍入的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-936">This method is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.When `d` is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position.</span></span> <span data-ttu-id="7ad78-937">例如，当舍入为两位小数时，值 2.345 变成 2.34，而值 2.355 变成 2.36。</span><span class="sxs-lookup"><span data-stu-id="7ad78-937">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span></span> <span data-ttu-id="7ad78-938">此过程被称为*向偶舍*，或*银行家的舍入*。</span><span class="sxs-lookup"><span data-stu-id="7ad78-938">This process is known as *rounding toward even*, or *banker's rounding*.</span></span> <span data-ttu-id="7ad78-939">它最小化而导致的持续舍入中在单方向上的中点值舍入误差。</span><span class="sxs-lookup"><span data-stu-id="7ad78-939">It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-940">下面的示例将多个`Decimal`到指定的小数位数使用值`Round`方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-940">The following example rounds several `Decimal` values to a specified number of decimal places using the `Round` method.</span></span>  
  
 [!code-csharp[System.Decimal.Round#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round12.cs#12)]
 [!code-vb[System.Decimal.Round#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round12.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ad78-941"><paramref name="decimals" /> 不是一个介于 0 到 28 的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-941"><paramref name="decimals" /> is not a value from 0 to 28.</span></span></exception>
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
        <altmember cref="M:System.Decimal.Truncate(System.Decimal)" />
        <altmember cref="M:System.Math.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * MidpointRounding -&gt; decimal" Usage="System.decimal.Round (d, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-942">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-942">A decimal number to round.</span></span></param>
        <param name="mode"><span data-ttu-id="7ad78-943">一个值，指定当 <paramref name="d" /> 正好处于另两个数字中间时如何舍入。</span><span class="sxs-lookup"><span data-stu-id="7ad78-943">A value that specifies how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="7ad78-944">将小数值舍入到最接近的整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-944">Rounds a decimal value to the nearest integer.</span></span> <span data-ttu-id="7ad78-945">一个参数，指定当一个值正好处于另两个数中间时如何舍入这个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-945">A parameter specifies how to round the value if it is midway between two other numbers.</span></span></summary>
        <returns><span data-ttu-id="7ad78-946">最接近 <paramref name="d" /> 参数的整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-946">The integer that is nearest to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="7ad78-947">如果 <paramref name="d" /> 位于两个数字的中间，其中一个为偶数，另一个为奇数，则 <paramref name="mode" /> 参数确定返回这两个数字中的哪一个。</span><span class="sxs-lookup"><span data-stu-id="7ad78-947">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-948">在一个中点值后结果中的最高有效位, 的值是两个数字之间准确地说的一半。</span><span class="sxs-lookup"><span data-stu-id="7ad78-948">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="7ad78-949">例如，7.5 是中点值，如果要舍入为整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-949">For example, 7.5 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="7ad78-950">中点值，而无需使用舍入的约定，指定的最接近的值不能轻松识别操作`mode`参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-950">For midpoint values, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument.</span></span> <span data-ttu-id="7ad78-951"><xref:System.Decimal.Round%2A>方法支持两种舍入的约定来处理中点值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-951">The <xref:System.Decimal.Round%2A> method supports two rounding conventions for handling midpoint values.</span></span>  
  
 <span data-ttu-id="7ad78-952">远离零方向舍入。</span><span class="sxs-lookup"><span data-stu-id="7ad78-952">Rounding away from zero.</span></span>  
 <span data-ttu-id="7ad78-953">中点值舍入为下一个编号从零开始。</span><span class="sxs-lookup"><span data-stu-id="7ad78-953">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="7ad78-954">例如，3.5 则舍入为 4，4.5 将舍入到 5，-3.5 舍入到-4，和-4.5 对齐舍入到-5。</span><span class="sxs-lookup"><span data-stu-id="7ad78-954">For example, 3.5 rounds to 4, 4.5 rounds to 5, -3.5 rounds to -4, and -4.5 rounds to -5.</span></span> <span data-ttu-id="7ad78-955">这种形式的舍入由<xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType>枚举成员。</span><span class="sxs-lookup"><span data-stu-id="7ad78-955">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="7ad78-956">远离零方向舍入为最广泛已知的形式的舍入。</span><span class="sxs-lookup"><span data-stu-id="7ad78-956">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="7ad78-957">甚至，舍入或银行家的舍入</span><span class="sxs-lookup"><span data-stu-id="7ad78-957">Rounding to even, or banker's rounding</span></span>  
 <span data-ttu-id="7ad78-958">中点值舍入为最接近的偶数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-958">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="7ad78-959">例如，3.5 和 4.5 舍入为 4，和-3.5 和-4.5 对齐舍入到-4。</span><span class="sxs-lookup"><span data-stu-id="7ad78-959">For example, both 3.5 and 4.5 round to 4, and both -3.5 and -4.5 round to -4.</span></span> <span data-ttu-id="7ad78-960">这种形式的舍入由<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>枚举成员。</span><span class="sxs-lookup"><span data-stu-id="7ad78-960">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="7ad78-961">舍入为最接近是标准形式的舍入在财务和统计操作中使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-961">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="7ad78-962">它符合 IEEE 标准 754，第 4 节。</span><span class="sxs-lookup"><span data-stu-id="7ad78-962">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="7ad78-963">多个舍入操作中使用时，它减少了通过一致地在单方向的中点值舍入导致的舍入错误。</span><span class="sxs-lookup"><span data-stu-id="7ad78-963">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="7ad78-964">在某些情况下，此舍入错误非常显著。</span><span class="sxs-lookup"><span data-stu-id="7ad78-964">In some cases, this rounding error can be significant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-965">下面的示例显示返回的值<xref:System.Math.Round%28System.Decimal%29>方法，<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>方法替换`mode`自变量<xref:System.MidpointRounding.ToEven>，和<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>方法替换`mode`自变量的<xref:System.MidpointRounding.AwayFromZero>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-965">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ad78-966"><paramref name="mode" /> 不是 <see cref="T:System.MidpointRounding" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-966"><paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-967">结果在 <see cref="T:System.Decimal" /> 对象范围之外。</span><span class="sxs-lookup"><span data-stu-id="7ad78-967">The result is outside the range of a <see cref="T:System.Decimal" /> object.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int * MidpointRounding -&gt; decimal" Usage="System.decimal.Round (d, decimals, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-968">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-968">A decimal number to round.</span></span></param>
        <param name="decimals"><span data-ttu-id="7ad78-969">返回值中的有效小数位数（精度）。</span><span class="sxs-lookup"><span data-stu-id="7ad78-969">The number of significant decimal places (precision) in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="7ad78-970">一个值，指定当 <paramref name="d" /> 正好处于另两个数字中间时如何舍入。</span><span class="sxs-lookup"><span data-stu-id="7ad78-970">A value that specifies how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="7ad78-971">将小数值舍入到指定精度。</span><span class="sxs-lookup"><span data-stu-id="7ad78-971">Rounds a decimal value to a specified precision.</span></span> <span data-ttu-id="7ad78-972">一个参数，指定当一个值正好处于另两个数中间时如何舍入这个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-972">A parameter specifies how to round the value if it is midway between two other numbers.</span></span></summary>
        <returns><span data-ttu-id="7ad78-973">最接近 <paramref name="d" /> 参数的数字，其精度等于 <paramref name="decimals" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-973">The number that is nearest to the <paramref name="d" /> parameter with a precision equal to the <paramref name="decimals" /> parameter.</span></span> <span data-ttu-id="7ad78-974">如果 <paramref name="d" /> 位于两个数字的中间，其中一个为偶数，另一个为奇数，则 <paramref name="mode" /> 参数确定返回这两个数字中的哪一个。</span><span class="sxs-lookup"><span data-stu-id="7ad78-974">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned.</span></span> <span data-ttu-id="7ad78-975">如果 <paramref name="d" /> 的精度小于 <paramref name="decimals" />，则原样返回 <paramref name="d" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-975">If the precision of <paramref name="d" /> is less than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-976">`decimals`参数指定的返回值中的有效小数位数数，介于 0 到 28。</span><span class="sxs-lookup"><span data-stu-id="7ad78-976">The `decimals` parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28.</span></span> <span data-ttu-id="7ad78-977">如果`decimals`为零，则返回一个整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-977">If `decimals` is zero, an integer is returned.</span></span>  
  
 <span data-ttu-id="7ad78-978">在一个中点值后结果中的最高有效位, 的值是两个数字之间准确地说的一半。</span><span class="sxs-lookup"><span data-stu-id="7ad78-978">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="7ad78-979">例如，3.47500 是一个中点值，如果要舍入两个小数位，而且 7.500 是一个中点值，如果要舍入为整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-979">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="7ad78-980">在这些情况下，而无需使用舍入的约定，指定的最接近的值不能轻松识别操作`mode`参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-980">In these cases, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument.</span></span> <span data-ttu-id="7ad78-981"><xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>方法支持两种舍入的约定来处理中点值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-981">The <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method supports two rounding conventions for handling midpoint values.</span></span>  
  
 <span data-ttu-id="7ad78-982">远离零方向舍入。</span><span class="sxs-lookup"><span data-stu-id="7ad78-982">Rounding away from zero.</span></span>  
 <span data-ttu-id="7ad78-983">中点值舍入为下一个编号从零开始。</span><span class="sxs-lookup"><span data-stu-id="7ad78-983">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="7ad78-984">例如，3.75 将舍入到 3.8，3.85 将舍入到 3.9，-3.75 舍入到-3.8，和-3.85 舍入到-3.9。</span><span class="sxs-lookup"><span data-stu-id="7ad78-984">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="7ad78-985">这种形式的舍入由<xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType>枚举成员。</span><span class="sxs-lookup"><span data-stu-id="7ad78-985">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="7ad78-986">远离零方向舍入为最广泛已知的形式的舍入。</span><span class="sxs-lookup"><span data-stu-id="7ad78-986">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="7ad78-987">甚至，舍入或银行家的舍入</span><span class="sxs-lookup"><span data-stu-id="7ad78-987">Rounding to even, or banker's rounding</span></span>  
 <span data-ttu-id="7ad78-988">中点值舍入为最接近的偶数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-988">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="7ad78-989">例如，3.75 和 3.85 舍入到 3.8，和-3.75 和-3.85 舍入到-3.8。</span><span class="sxs-lookup"><span data-stu-id="7ad78-989">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="7ad78-990">这种形式的舍入由<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>枚举成员。</span><span class="sxs-lookup"><span data-stu-id="7ad78-990">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="7ad78-991">舍入为最接近是标准形式的舍入在财务和统计操作中使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-991">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="7ad78-992">它符合 IEEE 标准 754，第 4 节。</span><span class="sxs-lookup"><span data-stu-id="7ad78-992">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="7ad78-993">多个舍入操作中使用时，它减少了通过一致地在单方向的中点值舍入导致的舍入错误。</span><span class="sxs-lookup"><span data-stu-id="7ad78-993">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="7ad78-994">在某些情况下，此舍入错误非常显著。</span><span class="sxs-lookup"><span data-stu-id="7ad78-994">In some cases, this rounding error can be significant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-995">下面的示例演示如何使用<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>方法替换<xref:System.MidpointRounding>枚举。</span><span class="sxs-lookup"><span data-stu-id="7ad78-995">The following example demonstrates how to use the <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7ad78-996"><paramref name="decimals" /> 小于 0 或大于 28。</span><span class="sxs-lookup"><span data-stu-id="7ad78-996"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ad78-997"><paramref name="mode" /> 不是 <see cref="T:System.MidpointRounding" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-997"><paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-998">结果在 <see cref="T:System.Decimal" /> 对象范围之外。</span><span class="sxs-lookup"><span data-stu-id="7ad78-998">The result is outside the range of a <see cref="T:System.Decimal" /> object.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static decimal Subtract (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Subtract(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Subtract(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Subtract : decimal * decimal -&gt; decimal" Usage="System.decimal.Subtract (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7ad78-999">被减数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-999">The minuend.</span></span></param>
        <param name="d2"><span data-ttu-id="7ad78-1000">减数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1000">The subtrahend.</span></span></param>
        <summary><span data-ttu-id="7ad78-1001">从一个 <see cref="T:System.Decimal" /> 值中减去指定的另一个值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1001">Subtracts one specified <see cref="T:System.Decimal" /> value from another.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1002"><paramref name="d2" /> 减 <paramref name="d1" /> 所得的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1002">The result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-1003">下面的示例演示如何使用`Subtract`。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1003">The following example illustrates the use of `Subtract`.</span></span>  
  
 [!code-cpp[Decimal Example#4](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#4)]
 [!code-csharp[Decimal Example#4](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#4)]
 [!code-vb[Decimal Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1004">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1004">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1005">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1005">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7ad78-1006">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1006">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1007">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1007"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1008">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1008">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7ad78-1009">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1009">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7ad78-1010">建议的替代项是调用<xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1010">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1011">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1011">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7ad78-1012">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1012">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1013">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1013">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1014">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1014">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7ad78-1015">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1015">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7ad78-1016">建议的替代项是调用<xref:System.Decimal.ToByte%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToByte%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1016">The recommended alternative is to call either the <xref:System.Decimal.ToByte%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1017">生成的整数值小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1017">The resulting integer value is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1018">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1018">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7ad78-1019">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1019">This conversion is not supported.</span></span> <span data-ttu-id="7ad78-1020">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1020">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1021">无。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1021">None.</span></span> <span data-ttu-id="7ad78-1022">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1022">This conversion is not supported.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ad78-1023">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1023">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1024">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1024">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7ad78-1025">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1025">This conversion is not supported.</span></span> <span data-ttu-id="7ad78-1026">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1026">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1027">无。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1027">None.</span></span> <span data-ttu-id="7ad78-1028">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1028">This conversion is not supported.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ad78-1029">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1029">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1030">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1030">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7ad78-1031">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1031">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1032">当前实例的值，未更改。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1032">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1033">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1033">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7ad78-1034">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1034">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1035">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1035">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7ad78-1036">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1036">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1037">当前实例的值，已转换为 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1037">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1038">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1038">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7ad78-1039">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1039">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7ad78-1040">建议的替代项是调用<xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToDouble%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1040">The recommended alternative is to call either the <xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7ad78-1041">因为<xref:System.Double>具有有效位数少于<xref:System.Decimal>，此操作可能会产生舍入误差。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1041">Because a <xref:System.Double> has fewer significant digits than a <xref:System.Decimal>, this operation may produce round-off errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1042">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1042">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7ad78-1043">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1043">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1044">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1044">The value of the current instance, converted to a <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1045">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1045">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7ad78-1046">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1046">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7ad78-1047">建议的替代项是调用<xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToInt16%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1047">The recommended alternative is to call either the <xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7ad78-1048"><xref:System.Decimal>值舍入为最接近的整数值为零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1048">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1049">生成的整数值小于 <see cref="F:System.Int16.MinValue" /> 或大于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1049">The resulting integer value is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1050">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1050">The parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7ad78-1051">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1051">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1052">当前实例的值，已转换为 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1052">The value of the current instance, converted to a <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1053">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1053">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7ad78-1054">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1054">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7ad78-1055">建议的替代项是调用<xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToInt32%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1055">The recommended alternative is to call either the <xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7ad78-1056"><xref:System.Decimal>值舍入为最接近的整数值为零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1056">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1057">生成的整数值小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1057">The resulting integer value is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1058">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1058">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7ad78-1059">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1059">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1060">当前实例的值，已转换为 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1060">The value of the current instance, converted to a <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1061">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1061">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7ad78-1062">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1062">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7ad78-1063">建议的替代项是调用<xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToInt64%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1063">The recommended alternative is to call either the <xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt64%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1064">生成的整数值小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1064">The resulting integer value is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1065">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1065">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7ad78-1066">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1066">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1067">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1067">The value of the current instance, converted to a <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1068">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1068">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7ad78-1069">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1069">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7ad78-1070">建议的替代项是调用<xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToSByte%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1070">The recommended alternative is to call either the <xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToSByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1071">生成的整数值小于 <see cref="F:System.SByte.MinValue" /> 或大于 <see cref="F:System.SByte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1071">The resulting integer value is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1072">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1072">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7ad78-1073">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1073">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1074">当前实例的值，已转换为 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1074">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1075">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1075">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7ad78-1076">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1076">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7ad78-1077">建议的替代项是调用<xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToSingle%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1077">The recommended alternative is to call either the <xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToSingle%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="7ad78-1078">要将此 <see cref="T:System.Decimal" /> 实例的值转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1078">The type to which to convert the value of this <see cref="T:System.Decimal" /> instance.</span></span></param>
        <param name="provider"><span data-ttu-id="7ad78-1079">一个 <see cref="T:System.IFormatProvider" /> 实现，提供有关返回值格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1079">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="7ad78-1080">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1080">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1081">当前实例的值，已转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1081">The value of the current instance, converted to a <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1082">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1082">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7ad78-1083">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1083">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7ad78-1084">建议的替代项是调用`static`(`Shared`在 Visual Basic 中)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1084">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7ad78-1085"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1085"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7ad78-1086">不支持请求的类型转换。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1086">The requested type conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1087">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1087">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7ad78-1088">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1088">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1089">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1089">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1090">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1090">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7ad78-1091">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1091">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7ad78-1092">建议的替代项是调用<xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1092">The recommended alternative is to call either the <xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1093">生成的整数值小于 <see cref="F:System.UInt16.MinValue" /> 或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1093">The resulting integer value is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1094">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1094">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7ad78-1095">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1095">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1096">当前实例的值，已转换为 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1096">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1097">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1097">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7ad78-1098">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1098">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7ad78-1099">建议的替代项是调用<xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1099">The recommended alternative is to call either the <xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7ad78-1100"><xref:System.Decimal>值舍入为最接近的整数值为零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1100">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1101">生成的整数值小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1101">The resulting integer value is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1102">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1102">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7ad78-1103">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1103">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1104">当前实例的值，已转换为 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1104">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1105">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1105">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7ad78-1106">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1106">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7ad78-1107">建议的替代项是调用<xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1107">The recommended alternative is to call either the <xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7ad78-1108"><xref:System.Decimal>值舍入为最接近的整数值为零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1108">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1109">生成的整数值小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1109">The resulting integer value is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="7ad78-1110">启动回调的对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1110">The object that initiated the callback.</span></span> <span data-ttu-id="7ad78-1111">当前未实现该参数的功能。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1111">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="7ad78-1112">在对象的反序列化完成时运行。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1112">Runs when the deserialization of an object has been completed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="7ad78-1113"><see cref="T:System.Decimal" /> 对象包含无效或已损坏的数据。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1113">The <see cref="T:System.Decimal" /> object contains invalid or corrupted data.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToByte : decimal -&gt; byte" Usage="System.decimal.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-1114">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1114">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-1115">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1115">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1116">等效于 <paramref name="value" /> 的 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1116">An 8-bit unsigned integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1117">参数`value`舍入为最接近的整数值接近零，并返回结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1117">Parameter `value` is rounded to the nearest integer value toward zero, and that result is returned.</span></span>  
  
 <span data-ttu-id="7ad78-1118">此外可以将转换<xref:System.Decimal>通过使用一个 8 位无符号整数的值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1118">You can also convert a <xref:System.Decimal> value to an 8-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7ad78-1119">由于执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1119">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1120">下面的示例使用<xref:System.Decimal.ToByte%2A>方法将转换为十进制数字<xref:System.Byte>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1120">The following example uses the <xref:System.Decimal.ToByte%2A> method to convert decimal numbers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tobyte/cs/tobyte_1.cs#1)]
 [!code-vb[System.Decimal.ToByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tobyte/vb/tobyte_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1121"><paramref name="value" /> 小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1121"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToDouble(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (d As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToDouble : decimal -&gt; double" Usage="System.decimal.ToDouble d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-1122">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1122">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-1123">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1123">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1124">与 <paramref name="d" /> 等效的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1124">A double-precision floating-point number equivalent to <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1125">此操作可能会产生舍入误差的双精度浮点数具有比有效位减少由于<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1125">This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>  
  
 <span data-ttu-id="7ad78-1126">此外可以将转换<xref:System.Decimal>到<xref:System.Double>值使用<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1126">You can also convert a <xref:System.Decimal> to a <xref:System.Double> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7ad78-1127">由于转换可以导致精度损失，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1127">Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1128">下面的代码示例转换`Decimal`数字转换<xref:System.Double>值使用`ToDouble`方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1128">The following code example converts `Decimal` numbers to <xref:System.Double> values using `ToDouble` method.</span></span>  
  
 [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]
 [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : decimal -&gt; int16" Usage="System.decimal.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-1129">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1129">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-1130">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 16 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1130">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1131">等效于 <paramref name="value" /> 的 16 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1131">A 16-bit signed integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1132">此外可以将转换<xref:System.Decimal>为使用 16 位整数值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1132">You can also convert a <xref:System.Decimal> value to a 16-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7ad78-1133">由于执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1133">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1134">下面的示例使用<xref:System.Decimal.ToInt16%2A>方法将转换为十进制数字<xref:System.Int16>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1134">The following example uses the <xref:System.Decimal.ToInt16%2A> method to convert decimal numbers to <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint16/cs/toint16_1.cs#1)]
 [!code-vb[System.Decimal.ToInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint16/vb/toint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1135"><paramref name="value" /> 小于 <see cref="F:System.Int16.MinValue" /> 或大于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1135"><paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (d As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : decimal -&gt; int" Usage="System.decimal.ToInt32 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-1136">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1136">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-1137">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1137">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1138">与 <paramref name="d" /> 的值等效的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1138">A 32-bit signed integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1139">返回值是十进制值; 的整数部分小数位数将被截断。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1139">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="7ad78-1140">此外可以将转换<xref:System.Decimal>为使用 32 位整数值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1140">You can also convert a <xref:System.Decimal> value to a 32-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7ad78-1141">由于执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1141">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1142">下面的示例使用<xref:System.Decimal.ToInt32%2A>方法将转换为十进制数字<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1142">The following example uses the <xref:System.Decimal.ToInt32%2A> method to convert decimal numbers to <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint32/cs/toint32_1.cs#1)]
 [!code-vb[System.Decimal.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint32/vb/toint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1143"><paramref name="d" /> 小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1143"><paramref name="d" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (d As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : decimal -&gt; int64" Usage="System.decimal.ToInt64 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-1144">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1144">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-1145">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1145">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1146">与 <paramref name="d" /> 的值等效的 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1146">A 64-bit signed integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1147">返回值是十进制值; 的整数部分小数位数将被截断。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1147">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="7ad78-1148">此外可以将转换<xref:System.Decimal>为使用 64 位整数值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1148">You can also convert a <xref:System.Decimal> value to a 64-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7ad78-1149">由于执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1149">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1150">下面的示例使用<xref:System.Decimal.ToInt64%2A>方法将转换为十进制数字<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1150">The following example uses the <xref:System.Decimal.ToInt64%2A> method to convert decimal numbers to <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint64/cs/toint64_1.cs#1)]
 [!code-vb[System.Decimal.ToInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint64/vb/toint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1151"><paramref name="d" /> 小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1151"><paramref name="d" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToOACurrency">
      <MemberSignature Language="C#" Value="public static long ToOACurrency (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToOACurrency(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToOACurrency(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToOACurrency (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToOACurrency(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToOACurrency : decimal -&gt; int64" Usage="System.decimal.ToOACurrency value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-1152">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1152">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-1153">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 OLE 自动化货币值，该值包含在一个 64 位有符号整数中。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1153">Converts the specified <see cref="T:System.Decimal" /> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1154">包含 <paramref name="value" /> 的 OLE 自动化等效值的 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1154">A 64-bit signed integer that contains the OLE Automation equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-1155">下面的代码示例使用`ToOACurrency`方法将转换`Decimal`为等效的 OLE 自动化货币值中包含的数字<xref:System.Int64>字段。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1155">The following code example uses the `ToOACurrency` method to convert `Decimal` numbers to the equivalent OLE Automation Currency values that are contained in <xref:System.Int64> fields.</span></span>  
  
 [!code-cpp[System.Decimal.OACurrency#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/tooacurrency.cpp#1)]
 [!code-csharp[System.Decimal.OACurrency#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/tooacurrency.cs#1)]
 [!code-vb[System.Decimal.OACurrency#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/tooacurrency.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.FromOACurrency(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToSByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : decimal -&gt; sbyte" Usage="System.decimal.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-1156">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1156">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-1157">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 8 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1157">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1158">等效于 <paramref name="value" /> 的 8 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1158">An 8-bit signed integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1159">此外可以将转换<xref:System.Decimal>使用的 8 位有符号整数的值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1159">You can also convert a <xref:System.Decimal> value to an 8-bit signed integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7ad78-1160">由于执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1160">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1161">下面的示例使用<xref:System.Decimal.ToSByte%2A>方法将转换为十进制数字<xref:System.SByte>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1161">The following example uses the <xref:System.Decimal.ToSByte%2A> method to convert decimal numbers to <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToSByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tosbyte/cs/tosbyte1.cs#1)]
 [!code-vb[System.Decimal.ToSByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tosbyte/vb/tosbyte1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt16(System.Decimal)" />
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1162"><paramref name="value" /> 小于 <see cref="F:System.SByte.MinValue" /> 或大于 <see cref="F:System.SByte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1162"><paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToSingle(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (d As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToSingle : decimal -&gt; single" Usage="System.decimal.ToSingle d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-1163">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1163">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-1164">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1164">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1165">等效于 <paramref name="d" /> 的值的单精度浮点数字。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1165">A single-precision floating-point number equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1166">此操作可能会产生舍入误差的单精度浮点数具有比有效位减少由于<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1166">This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>  
  
 <span data-ttu-id="7ad78-1167">此外可以将转换<xref:System.Decimal>到<xref:System.Single>值使用<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1167">You can also convert a <xref:System.Decimal> to a <xref:System.Single> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7ad78-1168">由于转换可以导致精度损失，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1168">Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1169">下面的代码示例转换`Decimal`数字转换<xref:System.Single>值使用`ToSingle`方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1169">The following code example converts `Decimal` numbers to <xref:System.Single> values using the `ToSingle` method.</span></span>  
  
 [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]
 [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ad78-1170">将此实例的数字值转换为其等效的 <see cref="T:System.String" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1170">Converts the numeric value of this instance to its equivalent <see cref="T:System.String" /> representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="decimal.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ad78-1171">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1171">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1172">表示此实例的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1172">A string that represents the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1173"><xref:System.Decimal.ToString>方法格式<xref:System.Decimal>默认值 （"G"或常规） 中的值的当前区域性的格式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1173">The <xref:System.Decimal.ToString> method formats a <xref:System.Decimal> value in the default ("G", or general) format of the current culture.</span></span> <span data-ttu-id="7ad78-1174">如果你想要指定不同的格式或区域性，使用的其他重载<xref:System.Decimal.ToString%2A>方法，按如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-1174">If you want to specify a different format or culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="7ad78-1175">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1175">To use format</span></span>|<span data-ttu-id="7ad78-1176">区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1176">For culture</span></span>|<span data-ttu-id="7ad78-1177">使用重载</span><span class="sxs-lookup"><span data-stu-id="7ad78-1177">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="7ad78-1178">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1178">Default ("G") format</span></span>|<span data-ttu-id="7ad78-1179">特定区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1179">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="7ad78-1180">特定的格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1180">A specific format</span></span>|<span data-ttu-id="7ad78-1181">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1181">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
|<span data-ttu-id="7ad78-1182">特定的格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1182">A specific format</span></span>|<span data-ttu-id="7ad78-1183">特定区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1183">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="7ad78-1184">.NET Framework 提供了广泛的格式设置支持，其格式设置的以下主题中更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="7ad78-1184">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="7ad78-1185">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)并[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1185">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="7ad78-1186">有关格式设置的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1186">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1187">下面的示例显示<xref:System.Decimal>值使用默认<xref:System.Decimal.ToString>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1187">The following example displays a <xref:System.Decimal> value using the default <xref:System.Decimal.ToString> method.</span></span> <span data-ttu-id="7ad78-1188">它还显示的字符串表示形式<xref:System.Decimal>使用数量的标准格式说明符而导致的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1188">It also displays the string representations of the <xref:System.Decimal> value that result from using a number of standard format specifiers.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#2)]
 [!code-vb[System.Decimal.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#2)]  
  
 <span data-ttu-id="7ad78-1189">下面的示例显示帐户中的金额。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1189">The following example displays the amount of money in an account.</span></span>  
  
 [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]
 [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]
 [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="7ad78-1190">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1190">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="7ad78-1191">标准数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="7ad78-1191">Standard Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="decimal.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7ad78-1192">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1192">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="7ad78-1193">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1193">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1194">此实例的值的字符串表示形式，由 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1194">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1195"><xref:System.Decimal.ToString%28System.IFormatProvider%29>方法格式<xref:System.Decimal>默认值 （"G"或常规） 中的值指定的区域性的格式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1195">The <xref:System.Decimal.ToString%28System.IFormatProvider%29> method formats a <xref:System.Decimal> value in the default ("G", or general) format of a specified culture.</span></span> <span data-ttu-id="7ad78-1196">如果你想要指定不同的格式或当前区域性，使用的其他重载<xref:System.Decimal.ToString%2A>方法，按如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-1196">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="7ad78-1197">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1197">To use format</span></span>|<span data-ttu-id="7ad78-1198">区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1198">For culture</span></span>|<span data-ttu-id="7ad78-1199">使用重载</span><span class="sxs-lookup"><span data-stu-id="7ad78-1199">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="7ad78-1200">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1200">Default ("G") format</span></span>|<span data-ttu-id="7ad78-1201">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1201">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="7ad78-1202">特定的格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1202">A specific format</span></span>|<span data-ttu-id="7ad78-1203">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1203">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
|<span data-ttu-id="7ad78-1204">特定的格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1204">A specific format</span></span>|<span data-ttu-id="7ad78-1205">特定区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1205">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="7ad78-1206">.NET Framework 提供了广泛的格式设置支持，其格式设置的以下主题中更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="7ad78-1206">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="7ad78-1207">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)并[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1207">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="7ad78-1208">有关格式设置的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1208">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="7ad78-1209">`provider`参数是<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法将返回<xref:System.Globalization.NumberFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1209">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="7ad78-1210">通常情况下，`provider`是<xref:System.Globalization.NumberFormatInfo>对象或<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1210">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="7ad78-1211">`provider`参数提供设置格式时使用的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1211">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="7ad78-1212">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1212">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="7ad78-1213">要转换<xref:System.Decimal>为使用指定的区域性和特定的格式字符串，调用其字符串表示形式的值<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1213">To convert a <xref:System.Decimal> value to its string representation using a specified culture and a specific format string, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1214">下面的示例显示的字符串表示形式<xref:System.Decimal>值使用<xref:System.Globalization.CultureInfo>代表多个不同区域的对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1214">The following example displays the string representation of a <xref:System.Decimal> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#3)]
 [!code-vb[System.Decimal.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="7ad78-1215">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1215">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="7ad78-1216">标准数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="7ad78-1216">Standard Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="decimal.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="7ad78-1217">标准或自定义的数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1217">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="7ad78-1218">使用指定的格式，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1218">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1219">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1219">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1220"><xref:System.Decimal.ToString%28System.String%29>方法格式<xref:System.Decimal>使用当前区域性的约定将指定格式的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1220">The <xref:System.Decimal.ToString%28System.String%29> method formats a <xref:System.Decimal> value in a specified format by using the conventions of the current culture.</span></span> <span data-ttu-id="7ad78-1221">如果想要使用默认值 （"G"或常规） 格式或指定不同的区域性，请使用的其他重载<xref:System.Decimal.ToString%2A>方法，按如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-1221">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="7ad78-1222">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1222">To use format</span></span>|<span data-ttu-id="7ad78-1223">区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1223">For culture</span></span>|<span data-ttu-id="7ad78-1224">使用重载</span><span class="sxs-lookup"><span data-stu-id="7ad78-1224">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="7ad78-1225">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1225">Default ("G") format</span></span>|<span data-ttu-id="7ad78-1226">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1226">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="7ad78-1227">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1227">Default ("G") format</span></span>|<span data-ttu-id="7ad78-1228">特定区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1228">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="7ad78-1229">特定的格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1229">A specific format</span></span>|<span data-ttu-id="7ad78-1230">特定区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1230">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="7ad78-1231"><xref:System.Decimal.ToString%2A>方法使用指定的标准或自定义数字格式字符串`format`参数，以将当前实例的值转换成其字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1231">The <xref:System.Decimal.ToString%2A> method uses the standard or custom numeric format string specified by the `format` parameter to convert the value of the current instance into its string representation.</span></span> <span data-ttu-id="7ad78-1232">`format`参数可以是任何有效[标准数字格式说明符](~/docs/standard/base-types/standard-numeric-format-strings.md)除 D、 R、 X，以及的任意组合[自定义数字格式说明符](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1232">The `format` parameter can be any valid [standard numeric format specifier](~/docs/standard/base-types/standard-numeric-format-strings.md) except for D, R, and X, as well as any combination of [custom numeric format specifiers](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="7ad78-1233">如果`format`是`null`或空字符串，此实例的返回值格式与常规的数字格式说明符 (G)。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1233">If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier (G).</span></span>  
  
 <span data-ttu-id="7ad78-1234">.NET Framework 提供了广泛的格式设置支持，其格式设置的以下主题中更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="7ad78-1234">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="7ad78-1235">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)并[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1235">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="7ad78-1236">有关格式设置的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1236">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="7ad78-1237">使用格式化的返回值<xref:System.Globalization.NumberFormatInfo>为当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1237">The return value is formatted by using the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="7ad78-1238">若要将应用指定的区域性的格式设置约定，请调用<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1238">To apply the formatting conventions of a specified culture, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1239">下面的示例显示<xref:System.Decimal>值使用每个受支持的标准数字格式说明符，以及两个自定义数字格式字符串。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1239">The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="7ad78-1240">在将该数字值转换为字符串，该示例使用 EN-US 区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1240">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#4)]
 [!code-vb[System.Decimal.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ad78-1241"><paramref name="format" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1241"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="7ad78-1242">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1242">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="7ad78-1243">标准数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="7ad78-1243">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="7ad78-1244">自定义数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="7ad78-1244">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="7ad78-1245">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="7ad78-1245">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="decimal.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="7ad78-1246">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1246">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="7ad78-1247">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1247">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="7ad78-1248">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1248">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1249">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1249">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1250"><xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>方法格式<xref:System.Double>中指定的区域性的指定格式的值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1250">The <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Double> value in a specified format of a specified culture.</span></span> <span data-ttu-id="7ad78-1251">如果你想要使用默认格式或区域性设置，使用的其他重载<xref:System.Double.ToString%2A>方法，按如下所示：</span><span class="sxs-lookup"><span data-stu-id="7ad78-1251">If you want to use default format or culture settings, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="7ad78-1252">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1252">To use format</span></span>|<span data-ttu-id="7ad78-1253">区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1253">For culture</span></span>|<span data-ttu-id="7ad78-1254">使用重载</span><span class="sxs-lookup"><span data-stu-id="7ad78-1254">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="7ad78-1255">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1255">Default ("G") format</span></span>|<span data-ttu-id="7ad78-1256">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1256">Default (current) culture</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="7ad78-1257">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1257">Default ("G") format</span></span>|<span data-ttu-id="7ad78-1258">特定区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1258">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="7ad78-1259">特定的格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1259">A specific format</span></span>|<span data-ttu-id="7ad78-1260">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="7ad78-1260">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
  
 <span data-ttu-id="7ad78-1261">`format`参数可以是除 D、 R、 和 X，任何有效的标准数字格式说明符以及任何自定义数字格式说明符的组合。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1261">The `format` parameter can be any valid standard numeric format specifier except for D, R, and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="7ad78-1262">如果`format`是`null`或空字符串，此实例的返回值格式与常规的数字格式说明符 ("G")。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1262">If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="7ad78-1263">.NET Framework 提供了广泛的格式设置支持，其格式设置的以下主题中更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="7ad78-1263">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="7ad78-1264">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)并[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1264">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="7ad78-1265">有关格式设置的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1265">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="7ad78-1266">`provider`参数是<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法将返回<xref:System.Globalization.NumberFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1266">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="7ad78-1267">通常情况下，`provider`是<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1267">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="7ad78-1268">`provider`参数提供设置格式时使用的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1268">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="7ad78-1269">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1269">If `provider` is `null`, the thread current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1270">下面的示例显示<xref:System.Decimal>值的多个不同的区域性使用的每个受支持的标准数字格式说明符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1270">The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers for several different cultures.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#5)]
 [!code-vb[System.Decimal.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="7ad78-1271"><paramref name="format" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1271"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="7ad78-1272">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="7ad78-1272">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="7ad78-1273">标准数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="7ad78-1273">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="7ad78-1274">自定义数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="7ad78-1274">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="7ad78-1275">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="7ad78-1275">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : decimal -&gt; uint16" Usage="System.decimal.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7ad78-1276">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1276">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-1277">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1277">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1278">与 <paramref name="value" /> 的值等效的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1278">A 16-bit unsigned integer equivalent to the value of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1279">返回值是十进制值; 的整数部分小数位数将被截断。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1279">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="7ad78-1280">此外可以将转换<xref:System.Decimal>通过使用 16 位无符号整数值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1280">You can also convert a <xref:System.Decimal> value to a 16-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7ad78-1281">由于执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1281">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1282">下面的示例使用<xref:System.Decimal.ToUInt16%2A>方法将转换为十进制数字<xref:System.UInt16>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1282">The following example uses the <xref:System.Decimal.ToUInt16%2A> method to convert decimal numbers to <xref:System.UInt16> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint16/cs/touint16_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint16/vb/touint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt32(System.Decimal)" />
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1283"><paramref name="value" /> 大于 <see cref="F:System.UInt16.MaxValue" /> 或小于 <see cref="F:System.UInt16.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1283"><paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (d As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : decimal -&gt; uint32" Usage="System.decimal.ToUInt32 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-1284">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1284">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-1285">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1285">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1286">与 <paramref name="d" /> 的值等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1286">A 32-bit unsigned integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1287">返回值是十进制值; 的整数部分小数位数将被截断。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1287">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="7ad78-1288">此外可以将转换<xref:System.Decimal>为使用 32 位无符号整数值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1288">You can also convert a <xref:System.Decimal> value to an 32-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7ad78-1289">由于执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1289">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1290">下面的示例使用<xref:System.Decimal.ToUInt32%2A>方法将转换为十进制数字<xref:System.UInt32>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1290">The following example uses the <xref:System.Decimal.ToUInt32%2A> method to convert decimal numbers to <xref:System.UInt32> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint32/cs/touint32_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint32/vb/touint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt64(System.Decimal)" />
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1291"><paramref name="d" /> 为负数或大于 <see cref="F:System.UInt32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1291"><paramref name="d" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (d As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : decimal -&gt; uint64" Usage="System.decimal.ToUInt64 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-1292">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1292">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7ad78-1293">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1293">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1294">与 <paramref name="d" /> 的值等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1294">A 64-bit unsigned integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1295">返回值是十进制值; 的整数部分小数位数将被截断。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1295">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="7ad78-1296">此外可以将转换<xref:System.Decimal>通过使用一个 64 位无符号整数的值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1296">You can also convert a <xref:System.Decimal> value to an 64-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7ad78-1297">由于执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1297">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1298">下面的示例使用<xref:System.Decimal.ToUInt64%2A>方法将转换为十进制数字<xref:System.UInt64>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1298">The following example uses the <xref:System.Decimal.ToUInt64%2A> method to convert decimal numbers to <xref:System.UInt64> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint64/cs/touint64_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint64/vb/touint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7ad78-1299"><paramref name="d" /> 为负数或大于 <see cref="F:System.UInt64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1299"><paramref name="d" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Truncate : decimal -&gt; decimal" Usage="System.decimal.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7ad78-1300">要截断的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1300">The decimal number to truncate.</span></span></param>
        <summary><span data-ttu-id="7ad78-1301">返回指定的 <see cref="T:System.Decimal" /> 的整数位，所有小数位均被放弃。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1301">Returns the integral digits of the specified <see cref="T:System.Decimal" />; any fractional digits are discarded.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1302"><paramref name="d" /> 向零舍入为最接近的整数后的结果。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1302">The result of <paramref name="d" /> rounded toward zero, to the nearest whole number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1303">此方法将舍入`d`向零到最接近的整数，它对应于放弃小数点后的所有位。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1303">This method rounds `d` toward zero, to the nearest whole number, which corresponds to discarding any digits after the decimal point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1304">下面的代码示例使用`Truncate`方法，丢弃的多个小数位`Decimal`值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1304">The following code example uses the `Truncate` method to discard the fractional digits of several `Decimal` values.</span></span>  
  
 [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]
 [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]
 [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="decimal.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ad78-1305">将数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1305">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span> <span data-ttu-id="7ad78-1306">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1306">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.Decimal.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.ReadOnlySpan{System.Char},System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.decimal.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Decimal" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.String,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.decimal.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Decimal" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ad78-1307">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1307">The string representation of the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="7ad78-1308">如果转换成功，此方法返回与 <paramref name="s" /> 中所含数值相当的 <see cref="T:System.Decimal" /> 数；如果转换失败，此方法返回零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1308">When this method returns, contains the <see cref="T:System.Decimal" /> number that is equivalent to the numeric value contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="7ad78-1309">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、不是有效格式的数字，或者表示的数字小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1309">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not a number in a valid format, or represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="7ad78-1310">此参数未经初始化即进行传递；<paramref name="result" /> 中最初提供的任何值都会遭覆盖。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1310">This parameter is passed uininitialized; any value originally supplied in <paramref name="result" /> is overwritten.</span></span></param>
        <summary><span data-ttu-id="7ad78-1311">将数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1311">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span> <span data-ttu-id="7ad78-1312">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1312">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1313">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1313"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1314">此重载不同于<xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType>通过返回一个布尔值，该值指示是否分析操作成功而不是返回的已分析的数字值的方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1314">This overload differs from the <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="7ad78-1315">它消除了需要使用异常处理来测试<xref:System.FormatException>的事件中`s`无效，不能成功分析。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1315">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="7ad78-1316">参数`s`包含多个窗体：</span><span class="sxs-lookup"><span data-stu-id="7ad78-1316">Parameter `s` contains a number of the form:</span></span>  
  
 <span data-ttu-id="7ad78-1317">[ws][sign][digits,]digits[.fractional-digits][ws]</span><span class="sxs-lookup"><span data-stu-id="7ad78-1317">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="7ad78-1318">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1318">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="7ad78-1319">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1319">The following table describes each element.</span></span>  
  
|<span data-ttu-id="7ad78-1320">元素</span><span class="sxs-lookup"><span data-stu-id="7ad78-1320">Element</span></span>|<span data-ttu-id="7ad78-1321">描述</span><span class="sxs-lookup"><span data-stu-id="7ad78-1321">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="7ad78-1322">*ws*</span><span class="sxs-lookup"><span data-stu-id="7ad78-1322">*ws*</span></span>|<span data-ttu-id="7ad78-1323">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1323">Optional white space.</span></span>|  
|<span data-ttu-id="7ad78-1324">*sign*</span><span class="sxs-lookup"><span data-stu-id="7ad78-1324">*sign*</span></span>|<span data-ttu-id="7ad78-1325">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1325">An optional sign.</span></span>|  
|<span data-ttu-id="7ad78-1326">*digits*</span><span class="sxs-lookup"><span data-stu-id="7ad78-1326">*digits*</span></span>|<span data-ttu-id="7ad78-1327">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1327">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="7ad78-1328">*，*</span><span class="sxs-lookup"><span data-stu-id="7ad78-1328">*,*</span></span>|<span data-ttu-id="7ad78-1329">特定于区域性的千位分隔符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1329">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="7ad78-1330">*.*</span><span class="sxs-lookup"><span data-stu-id="7ad78-1330">*.*</span></span>|<span data-ttu-id="7ad78-1331">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1331">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="7ad78-1332">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="7ad78-1332">*fractional-digits*</span></span>|<span data-ttu-id="7ad78-1333">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1333">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="7ad78-1334">参数`s`使用解释<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1334">Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="7ad78-1335">这意味着该空白和千位分隔符允许但不是货币符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1335">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="7ad78-1336">若要显式定义的元素 (如货币符号，千位分隔符和空格)，可能会包含`s`，使用<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType>方法重载。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1336">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="7ad78-1337">参数`s`使用中的格式设置信息分析<xref:System.Globalization.NumberFormatInfo>对象初始化为当前系统区域性。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1337">Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="7ad78-1338">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1338">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="7ad78-1339">将字符串分析使用的格式信息的其他某个指定区域性，请使用<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType>方法重载。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1339">To parse a string using the formatting information of some other specified culture, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="7ad78-1340">如有必要，值`s`使用舍入为最接近舍入。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1340">If necessary, the value of `s` is rounded using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7ad78-1341">一个<xref:System.Decimal>对象具有 29 位精度。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1341">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="7ad78-1342">如果`s`表示具有多个 29 位，但有小数部分和位于范围内的数字<xref:System.Decimal.MaxValue>和<xref:System.Decimal.MinValue>，数字舍入，未被截断，到使用舍入为最接近的 29 位。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1342">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7ad78-1343">如果在分析操作期间分隔符时遇到的`s`参数，以及适用的货币或十进制数和组分隔符是相同的分析操作假定，分隔符是十进制分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1343">If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="7ad78-1344">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1344">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1345">下面的示例使用<xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType>方法将转换为数字值的字符串表示<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1345">The following example uses the <xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType> method to convert the string representations of numeric values to <xref:System.Decimal> values.</span></span> <span data-ttu-id="7ad78-1346">它假定该 EN-US 当前区域性。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1346">It assumes that en-US is the current culture.</span></span>  
  
 [!code-csharp[System.Decimal.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs#1)]
 [!code-vb[System.Decimal.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Decimal.Parse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="7ad78-1347">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="7ad78-1347">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.decimal.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Decimal" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.decimal.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Decimal" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7ad78-1348">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1348">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="7ad78-1349">枚举值的一个按位组合，指示 <paramref name="s" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1349">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="7ad78-1350">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Number" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1350">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <param name="provider"><span data-ttu-id="7ad78-1351">一个对象，它提供有关 <paramref name="s" /> 的区域性特定分析信息。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1351">An object that supplies culture-specific parsing information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="7ad78-1352">如果转换成功，此方法返回与 <paramref name="s" /> 中所含数值相当的 <see cref="T:System.Decimal" /> 数；如果转换失败，此方法返回零。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1352">When this method returns, contains the <see cref="T:System.Decimal" /> number that is equivalent to the numeric value contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="7ad78-1353">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、不是格式符合 <paramref name="style" /> 的数字、表示小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字，表明转换失败。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1353">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not a number in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="7ad78-1354">此参数未经初始化即进行传递；<paramref name="result" /> 中最初提供的任何值都会遭覆盖。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1354">This parameter is passed uininitialized; any value originally supplied in <paramref name="result" /> is overwritten.</span></span></param>
        <summary><span data-ttu-id="7ad78-1355">使用指定样式和区域性特定格式将数字的字符串表示形式转换为其 <see cref="T:System.Decimal" /> 等效项。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1355">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span></span> <span data-ttu-id="7ad78-1356">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1356">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="7ad78-1357">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1357"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ad78-1358">此重载不同于<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>通过返回一个布尔值，该值指示是否分析操作成功而不是返回的已分析的数字值的方法。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1358">This overload differs from the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="7ad78-1359">它消除了需要使用异常处理来测试<xref:System.FormatException>的事件中`s`无效，不能成功分析。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1359">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="7ad78-1360">`style`参数定义的允许的格式`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1360">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="7ad78-1361">它必须是从位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1361">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="7ad78-1362">以下<xref:System.Globalization.NumberStyles>不支持成员：</span><span class="sxs-lookup"><span data-stu-id="7ad78-1362">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>  
  
 <span data-ttu-id="7ad78-1363">具体取决于样式，值`s`参数可能包含以下元素：</span><span class="sxs-lookup"><span data-stu-id="7ad78-1363">Depending on the value of style, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="7ad78-1364">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="7ad78-1364">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="7ad78-1365">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1365">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="7ad78-1366">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1366">The following table describes each element.</span></span>  
  
|<span data-ttu-id="7ad78-1367">元素</span><span class="sxs-lookup"><span data-stu-id="7ad78-1367">Element</span></span>|<span data-ttu-id="7ad78-1368">描述</span><span class="sxs-lookup"><span data-stu-id="7ad78-1368">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="7ad78-1369">*ws*</span><span class="sxs-lookup"><span data-stu-id="7ad78-1369">*ws*</span></span>|<span data-ttu-id="7ad78-1370">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1370">Optional white space.</span></span> <span data-ttu-id="7ad78-1371">空白可以出现在开头`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1371">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7ad78-1372">它可以显示在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1372">It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="7ad78-1373">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1373">A culture-specific currency symbol.</span></span> <span data-ttu-id="7ad78-1374">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>或<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>的属性<xref:System.Globalization.NumberFormatInfo>返回的对象<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1374">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method of the `provider` parameter.</span></span> <span data-ttu-id="7ad78-1375">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1375">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7ad78-1376">*sign*</span><span class="sxs-lookup"><span data-stu-id="7ad78-1376">*sign*</span></span>|<span data-ttu-id="7ad78-1377">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1377">An optional sign.</span></span>|  
|<span data-ttu-id="7ad78-1378">*digits*</span><span class="sxs-lookup"><span data-stu-id="7ad78-1378">*digits*</span></span>|<span data-ttu-id="7ad78-1379">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1379">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="7ad78-1380">*.*</span><span class="sxs-lookup"><span data-stu-id="7ad78-1380">*.*</span></span>|<span data-ttu-id="7ad78-1381">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1381">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="7ad78-1382">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="7ad78-1382">*fractional-digits*</span></span>|<span data-ttu-id="7ad78-1383">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1383">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="7ad78-1384">`style`参数指定所允许的格式`s`参数，可以为一个或多个<xref:System.Globalization.NumberStyles>枚举常量使用位或运算组合在一起。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1384">The `style` parameter specifies the permitted format of the `s` parameter, and can be one or more <xref:System.Globalization.NumberStyles> enumerated constants combined using a bitwise OR operation.</span></span> <span data-ttu-id="7ad78-1385">如果`style`为 null，`s`使用解释<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1385">If `style` is null, `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span>  
  
 <span data-ttu-id="7ad78-1386">`provider`参数是<xref:System.IFormatProvider>如实现<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1386">The `provider` parameter is an <xref:System.IFormatProvider> implementation such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="7ad78-1387">`provider`参数提供在分析中使用的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1387">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="7ad78-1388">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1388">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="7ad78-1389">一个<xref:System.Decimal>对象具有 29 位精度。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1389">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="7ad78-1390">如果`s`表示具有多个 29 位，但有小数部分和位于范围内的数字<xref:System.Decimal.MaxValue>和<xref:System.Decimal.MinValue>，数字舍入，未被截断，到使用舍入为最接近的 29 位。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1390">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7ad78-1391">如果分隔符时遇到`s`参数在分析操作，以及适用的货币或十进制数和组分隔符是相同的分析操作假定，分隔符是十进制分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1391">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="7ad78-1392">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1392">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ad78-1393">下面的示例演示如何将<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29>方法来分析具有特定样式并使用特定区域性的约定格式化的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1393">The following example demonstrates the use of the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29> method to parse the string representation of a number that has a particular style and is formatted using the conventions of a particular culture.</span></span>  
  
 [!code-csharp[System.Decimal.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs#2)]
 [!code-vb[System.Decimal.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7ad78-1394"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1394"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="7ad78-1395">或</span><span class="sxs-lookup"><span data-stu-id="7ad78-1395">-or-</span></span> 
 <span data-ttu-id="7ad78-1396"><paramref name="style" /> 是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1396"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <altmember cref="Overload:System.Decimal.Parse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="7ad78-1397">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="7ad78-1397">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly decimal Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal Zero" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Zero As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal Zero;" />
      <MemberSignature Language="F#" Value=" staticval mutable Zero : decimal" Usage="System.decimal.Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ad78-1398">表示数字零 (0)。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1398">Represents the number zero (0).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ad78-1399">下面的代码示例演示如何使用`Zero`字段。</span><span class="sxs-lookup"><span data-stu-id="7ad78-1399">The following code example illustrates the use of the `Zero` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
  </Members>
</Type>