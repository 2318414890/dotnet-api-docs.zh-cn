<Type Name="Decimal" FullName="System.Decimal">
  <TypeSignature Language="C#" Value="public struct Decimal : IComparable, IComparable&lt;decimal&gt;, IConvertible, IEquatable&lt;decimal&gt;, IFormattable, System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Decimal extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Decimal&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.Decimal&gt;, class System.IFormattable, class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Decimal" />
  <TypeSignature Language="VB.NET" Value="Public Structure Decimal&#xA;Implements IComparable, IComparable(Of Decimal), IConvertible, IDeserializationCallback, IEquatable(Of Decimal), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Decimal : IComparable, IComparable&lt;System::Decimal&gt;, IConvertible, IEquatable&lt;System::Decimal&gt;, IFormattable, System::Runtime::Serialization::IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7b8d9-101">表示十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-101">Represents a decimal number.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-102"><xref:System.Decimal>值类型表示十进制数字范围从 79228162514264337593543950335 到负的 79228162514264337593543950335。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-102">The <xref:System.Decimal> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335.</span></span> <span data-ttu-id="7b8d9-103">默认值`Decimal`为 0。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-103">The default value of a `Decimal` is 0.</span></span> <span data-ttu-id="7b8d9-104"><xref:System.Decimal>值类型不适合于需要大量的有效整数和小数位数和无舍入误差的财务计算。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-104">The <xref:System.Decimal> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors.</span></span> <span data-ttu-id="7b8d9-105"><xref:System.Decimal>类型不会消除舍入的需要。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-105">The <xref:System.Decimal> type does not eliminate the need for rounding.</span></span> <span data-ttu-id="7b8d9-106">相反，它最大程度减少由于舍入导致的错误。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-106">Rather, it minimizes errors due to rounding.</span></span> <span data-ttu-id="7b8d9-107">例如，下面的代码生成而不是 1 0.9999999999999999999999999999 结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-107">For example, the following code produces a result of 0.9999999999999999999999999999 instead of 1.</span></span>  
  
 [!code-cpp[System.Decimal.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal1.cpp#1)]
 [!code-csharp[System.Decimal.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#1)]
 [!code-vb[System.Decimal.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#1)]  
  
 <span data-ttu-id="7b8d9-108">当将除法和乘法的结果传递给<xref:System.Math.Round%2A>方法，结果不会有损失的精度，如以下代码所示。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-108">When the result of the division and multiplication is passed to the <xref:System.Math.Round%2A> method, the result suffers no loss of precision, as the following code shows.</span></span>  
  
 [!code-cpp[System.Decimal.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal2.cpp#2)]
 [!code-csharp[System.Decimal.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#2)]
 [!code-vb[System.Decimal.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#2)]  
  
 <span data-ttu-id="7b8d9-109">十进制数是包含一个符号的浮点值、 其中的值中的每一位范围从 0 到 9 的数字值和一个比例因子，指示用于分隔的整数和小数部分的十进浮动小数点的位置数字值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-109">A decimal number is a floating-point value that consists of a sign, a numeric value where each digit in the value ranges from 0 to 9, and a scaling factor that indicates the position of a floating decimal point that separates the integral and fractional parts of the numeric value.</span></span>  
  
 <span data-ttu-id="7b8d9-110">二进制表示形式<xref:System.Decimal>1 位符号、 96 位整数和比例因子用作拆分 96 位整数，并指定它的哪一部分是小数部分的值组成。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-110">The binary representation of a <xref:System.Decimal> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="7b8d9-111">缩放因子是隐式数字 10，范围从 0 到 28 的指数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-111">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span> <span data-ttu-id="7b8d9-112">因此的二进制表示形式<xref:System.Decimal>值窗体上，((-2<sup>96</sup>为 2<sup>96</sup>) / 10<sup>(0 到 28)</sup>)，其中的 (2<sup>96</sup>-1)等同于<xref:System.Decimal.MinValue>，和第 2<sup>96</sup>-1 等同于<xref:System.Decimal.MaxValue>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-112">Therefore, the binary representation of a <xref:System.Decimal> value  the form, ((-2<sup>96</sup> to 2<sup>96</sup>) / 10<sup>(0 to 28)</sup>), where -(2<sup>96</sup>-1) is equal to <xref:System.Decimal.MinValue>, and 2<sup>96</sup>-1 is equal to <xref:System.Decimal.MaxValue>.</span></span> <span data-ttu-id="7b8d9-113">有关详细信息有关的二进制表示形式<xref:System.Decimal>值和示例，请参阅<xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29>构造函数和<xref:System.Decimal.GetBits%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-113">For more information about the binary representation of <xref:System.Decimal> values and an example, see the <xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29> constructor and the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 <span data-ttu-id="7b8d9-114">比例因子还保留了任何尾随零中<xref:System.Decimal>数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-114">The scaling factor  also preserves any trailing zeros in a <xref:System.Decimal> number.</span></span> <span data-ttu-id="7b8d9-115">尾随零不会影响的值<xref:System.Decimal>数字在算术或比较操作中。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-115">Trailing zeros do not affect the value of a <xref:System.Decimal> number in arithmetic or comparison operations.</span></span> <span data-ttu-id="7b8d9-116">但是，尾随零可能会泄露由<xref:System.Decimal.ToString%2A>方法如果应用了相应的格式字符串。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-116">However, trailing zeros might be revealed by the <xref:System.Decimal.ToString%2A> method if an appropriate format string is applied.</span></span>  
  
## <a name="conversion-considerations"></a><span data-ttu-id="7b8d9-117">有关转换的注意事项</span><span class="sxs-lookup"><span data-stu-id="7b8d9-117">Conversion Considerations</span></span>  
 <span data-ttu-id="7b8d9-118">此类型提供转换的方法<xref:System.Decimal>值来回<xref:System.SByte>， <xref:System.Int16>， <xref:System.Int32>， <xref:System.Int64>， <xref:System.Byte>， <xref:System.UInt16>， <xref:System.UInt32>，和<xref:System.UInt64>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-118">This type provides methods that convert <xref:System.Decimal> values to and from <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> values.</span></span> <span data-ttu-id="7b8d9-119">从这些到整型的转换<xref:System.Decimal>扩大转换，永远不会丢失信息或引发异常。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-119">Conversions from these integral types to <xref:System.Decimal> are widening conversions that never lose information or throw exceptions.</span></span>  
  
 <span data-ttu-id="7b8d9-120">从转换<xref:System.Decimal>到任何整型类型属于收缩转换，舍入<xref:System.Decimal>到最近的接近零的整数值的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-120">Conversions from <xref:System.Decimal> to any of the integral types are narrowing conversions that round the <xref:System.Decimal> value to the nearest integer value toward zero.</span></span> <span data-ttu-id="7b8d9-121">某些语言中的，如 C# 中，还支持的转换<xref:System.Decimal>值复制到<xref:System.Char>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-121">Some languages, such as C#, also support the conversion of <xref:System.Decimal> values to <xref:System.Char> values.</span></span> <span data-ttu-id="7b8d9-122">如果这些转换的结果不能在目标类型中，表示<xref:System.OverflowException>引发异常。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-122">If the result of these conversions cannot be represented in the destination type, an <xref:System.OverflowException> exception is thrown.</span></span>  
  
 <span data-ttu-id="7b8d9-123"><xref:System.Decimal>类型还提供了将转换的方法<xref:System.Decimal>值来回<xref:System.Single>和<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-123">The <xref:System.Decimal> type also provides methods that convert <xref:System.Decimal> values to and from <xref:System.Single> and <xref:System.Double> values.</span></span> <span data-ttu-id="7b8d9-124">从转换<xref:System.Decimal>到<xref:System.Single>或<xref:System.Double>属于收缩转换，可能会丢失精度，但不是有关信息的量值的转换后的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-124">Conversions from <xref:System.Decimal> to <xref:System.Single> or <xref:System.Double> are narrowing conversions that might lose precision but not information about the magnitude of the converted value.</span></span> <span data-ttu-id="7b8d9-125">转换不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-125">The conversion does not throw an exception.</span></span>  
  
 <span data-ttu-id="7b8d9-126">从转换<xref:System.Single>或<xref:System.Double>到<xref:System.Decimal>引发<xref:System.OverflowException>异常如果转换的结果不能表示为<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-126">Conversions from <xref:System.Single> or <xref:System.Double> to <xref:System.Decimal> throw an <xref:System.OverflowException> exception if the result of the conversion cannot be represented as a <xref:System.Decimal>.</span></span>  
  
## <a name="performing-operations-on-decimal-values"></a><span data-ttu-id="7b8d9-127">对十进制值执行操作</span><span class="sxs-lookup"><span data-stu-id="7b8d9-127">Performing Operations on Decimal Values</span></span>  
 <span data-ttu-id="7b8d9-128"><xref:System.Decimal>类型支持标准的数学运算，例如加法、 减法、 除法、 乘法和一元求反。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-128">The <xref:System.Decimal> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation.</span></span> <span data-ttu-id="7b8d9-129">你还可以直接使用的二进制表示形式<xref:System.Decimal>值通过调用<xref:System.Decimal.GetBits%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-129">You can also work directly with the binary representation of a <xref:System.Decimal> value by calling the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 <span data-ttu-id="7b8d9-130">比较两个<xref:System.Decimal>值，你可以使用标准数值比较运算符，也可以调用<xref:System.Decimal.CompareTo%2A>或<xref:System.Decimal.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-130">To compare two <xref:System.Decimal> values, you can use the standard numeric comparison operators, or you can call the <xref:System.Decimal.CompareTo%2A> or <xref:System.Decimal.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="7b8d9-131">你还可以调用的成员<xref:System.Math>类来执行各种数值操作，包括获取绝对值的数值的数字，确定两个最大或最小值<xref:System.Decimal>值，获取数字的符号和舍入一个数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-131">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, determining the maximum or minimum value of two <xref:System.Decimal> values, getting the sign of a number, and rounding a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-132">以下代码示例演示了 <xref:System.Decimal> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-132">The following code example demonstrates the use of <xref:System.Decimal>.</span></span>  
  
 [!code-cpp[Decimal Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#1)]
 [!code-csharp[Decimal Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#1)]
 [!code-vb[Decimal Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="7b8d9-133">此类型的所有成员都是线程安全。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-133">All members of this type are thread safe.</span></span> <span data-ttu-id="7b8d9-134">实际上，看起来要修改实例状态的成员返回使用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-134">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="7b8d9-135">作为与任何其他类型，读取和写入到共享的变量，其中包含此类型的实例必须受使用锁来确保的线程安全性。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-135">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.Int16" />
    <altmember cref="T:System.Int32" />
    <altmember cref="T:System.Int64" />
    <altmember cref="T:System.Byte" />
    <altmember cref="T:System.UInt16" />
    <altmember cref="T:System.UInt32" />
    <altmember cref="T:System.UInt64" />
    <altmember cref="T:System.Single" />
    <altmember cref="T:System.Double" />
    <altmember cref="T:System.Char" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b8d9-136">初始化 <see cref="T:System.Decimal" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-136">Initializes a new instance of <see cref="T:System.Decimal" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(double value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-137">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-137">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="7b8d9-138">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的双精度浮点数的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-138">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified double-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-139">此构造函数将舍入`value`到使用舍入到最接近的 15 个有效位。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-139">This constructor rounds `value` to 15 significant digits using rounding to nearest.</span></span> <span data-ttu-id="7b8d9-140">即使数字的位数多于 15 且较低的有效位是零，也是如此。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-140">This is done even if the number has more than 15 digits and the less significant digits are zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-141">下面的代码示例创建几个`Decimal`数字使用初始化的构造函数重载`Decimal`结构<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-141">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Double> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Reals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctordo.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Reals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctordo.cs#2)]
 [!code-vb[System.Decimal.Ctor.Reals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctordo.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-142"><paramref name="value" /> 大于 <see cref="F:System.Decimal.MaxValue" /> 或小于 <see cref="F:System.Decimal.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-142"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
 <span data-ttu-id="7b8d9-143">或</span><span class="sxs-lookup"><span data-stu-id="7b8d9-143">-or-</span></span>  
  
 <span data-ttu-id="7b8d9-144"><paramref name="value" /> 为 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-144"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(int value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-145">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-145">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="7b8d9-146">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的 32 位有符号整数的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-146">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit signed integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-147">下面的代码示例创建几个`Decimal`数字使用初始化的构造函数重载`Decimal`结构<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-147">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctori.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Ints#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctori.cs#1)]
 [!code-vb[System.Decimal.Ctor.Ints#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctori.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int[] bits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32[] bits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bits As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(cli::array &lt;int&gt; ^ bits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bits" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="bits"><span data-ttu-id="7b8d9-148">包含十进制值表示形式的 32 位有符号整数的数组。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-148">An array of 32-bit signed integers containing a representation of a decimal value.</span></span></param>
        <summary><span data-ttu-id="7b8d9-149">将 <see cref="T:System.Decimal" /> 的新实例初始化为以二进制表示的、包含在指定数组中的十进制值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-149">Initializes a new instance of <see cref="T:System.Decimal" /> to a decimal value represented in binary and contained in a specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-150">二进制表示形式<xref:System.Decimal>1 位符号、 大量 96 位整数和一个比例因子，用于分隔整数并指定它的哪一部分是小数部分的数字组成。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-150">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="7b8d9-151">缩放因子是隐式数字 10，范围从 0 到 28 的指数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-151">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span>  
  
 <span data-ttu-id="7b8d9-152">`bits` 是 32 位有符号整数的四个元素长数组。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-152">`bits` is a four-element long array of 32-bit signed integers.</span></span>  
  
 <span data-ttu-id="7b8d9-153">`bits` [0] `bits` [1] 和`bits`[2] 包含 96 位整数号的低、 中和高 32 位。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-153">`bits` [0], `bits` [1], and `bits` [2] contain the low, middle, and high 32 bits of the 96-bit integer number.</span></span>  
  
 <span data-ttu-id="7b8d9-154">`bits` [3] 包含的缩放比例和的登录，并且以下部分组成：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-154">`bits` [3] contains the scale factor and sign, and consists of following parts:</span></span>  
  
 <span data-ttu-id="7b8d9-155">位 0 到 15 之间，较低的字，未使用，且必须为零。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-155">Bits 0 to 15, the lower word, are unused and must be zero.</span></span>  
  
 <span data-ttu-id="7b8d9-156">16 到 23 位必须包含指示用整数数字除以 10 的能力介于 0 到 28，之间指数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-156">Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</span></span>  
  
 <span data-ttu-id="7b8d9-157">24 到 30 位未使用，必须为零。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-157">Bits 24 to 30 are unused and must be zero.</span></span>  
  
 <span data-ttu-id="7b8d9-158">第 31 位包含登录;0 含义正数、 和 1 表示负数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-158">Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.</span></span>  
  
 <span data-ttu-id="7b8d9-159">数字值可能有几个可能的二进制表示形式;所有都是同样有效，数字等效。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-159">A numeric value might have several possible binary representations; all are equally valid and numerically equivalent.</span></span> <span data-ttu-id="7b8d9-160">请注意，位表示形式区分正负零。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-160">Note that the bit representation differentiates between negative and positive zero.</span></span> <span data-ttu-id="7b8d9-161">这些值被视为相等的所有操作。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-161">These values are treated as being equal in all operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-162">下面的代码示例创建几个`Decimal`数字使用初始化的构造函数重载`Decimal`具有四个数组的结构<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-162">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an array of four <xref:System.Int32> values.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Arrays#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriarr.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Arrays#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriarr.cs#1)]
 [!code-vb[System.Decimal.Ctor.Arrays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriarr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b8d9-163"><paramref name="bits" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-163"><paramref name="bits" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7b8d9-164"><paramref name="bits" /> 的长度不为 4。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-164">The length of the <paramref name="bits" /> is not 4.</span></span>  
  
 <span data-ttu-id="7b8d9-165">或</span><span class="sxs-lookup"><span data-stu-id="7b8d9-165">-or-</span></span>  
  
 <span data-ttu-id="7b8d9-166"><paramref name="bits" /> 中的十进制值的表示形式无效。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-166">The representation of the decimal value in <paramref name="bits" /> is not valid.</span></span></exception>
        <altmember cref="M:System.Decimal.GetBits(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(long value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-167">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-167">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="7b8d9-168">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的 64 位有符号整数的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-168">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit signed integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-169">下面的代码示例创建几个`Decimal`数字使用初始化的构造函数重载`Decimal`结构<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-169">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int64> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorl.cpp#3)]
 [!code-csharp[System.Decimal.Ctor.Ints#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorl.cs#3)]
 [!code-vb[System.Decimal.Ctor.Ints#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorl.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(float value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-170">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-170">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="7b8d9-171">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的单精度浮点数的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-171">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified single-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-172">此构造函数将舍入`value`到 7 个有效位使用舍入到最接近的方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-172">This constructor rounds `value` to 7 significant digits using rounding to nearest.</span></span> <span data-ttu-id="7b8d9-173">即使数字的位数超过 7 且较低的有效位是零，也是如此。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-173">This is done even if the number has more than 7 digits and the less significant digits are zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-174">下面的代码示例创建几个`Decimal`数字使用初始化的构造函数重载`Decimal`结构<xref:System.Single>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-174">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Single> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Reals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctors.cpp#1)]
 [!code-csharp[System.Decimal.Ctor.Reals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctors.cs#1)]
 [!code-vb[System.Decimal.Ctor.Reals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctors.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-175"><paramref name="value" /> 大于 <see cref="F:System.Decimal.MaxValue" /> 或小于 <see cref="F:System.Decimal.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-175"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
 <span data-ttu-id="7b8d9-176">或</span><span class="sxs-lookup"><span data-stu-id="7b8d9-176">-or-</span></span>  
  
 <span data-ttu-id="7b8d9-177"><paramref name="value" /> 为 <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.PositiveInfinity" /> 或 <see cref="F:System.Single.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-177"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(System::UInt32 value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-178">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-178">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="7b8d9-179">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的 32 位无符号整数的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-179">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit unsigned integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-180">下面的代码示例创建几个`Decimal`数字使用初始化的构造函数重载`Decimal`结构<xref:System.UInt32>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-180">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt32> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorui.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Ints#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorui.cs#2)]
 [!code-vb[System.Decimal.Ctor.Ints#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorui.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(System::UInt64 value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-181">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-181">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="7b8d9-182">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的 64 位无符号整数的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-182">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit unsigned integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-183">下面的代码示例创建几个`Decimal`数字使用初始化的构造函数重载`Decimal`结构<xref:System.UInt64>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-183">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt64> value.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Ints#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorul.cpp#4)]
 [!code-csharp[System.Decimal.Ctor.Ints#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorul.cs#4)]
 [!code-vb[System.Decimal.Ctor.Ints#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorul.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int lo, int mid, int hi, bool isNegative, byte scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 lo, int32 mid, int32 hi, bool isNegative, unsigned int8 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (lo As Integer, mid As Integer, hi As Integer, isNegative As Boolean, scale As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(int lo, int mid, int hi, bool isNegative, System::Byte scale);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lo" Type="System.Int32" />
        <Parameter Name="mid" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
        <Parameter Name="isNegative" Type="System.Boolean" />
        <Parameter Name="scale" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="lo"><span data-ttu-id="7b8d9-184">96 位整数的低 32 位。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-184">The low 32 bits of a 96-bit integer.</span></span></param>
        <param name="mid"><span data-ttu-id="7b8d9-185">96 位整数的中间 32 位。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-185">The middle 32 bits of a 96-bit integer.</span></span></param>
        <param name="hi"><span data-ttu-id="7b8d9-186">96 位整数的高 32 位。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-186">The high 32 bits of a 96-bit integer.</span></span></param>
        <param name="isNegative">
          <span data-ttu-id="7b8d9-187">若要指示负数，则为 <see langword="true" />；若要指示正数，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-187"><see langword="true" /> to indicate a negative number; <see langword="false" /> to indicate a positive number.</span></span></param>
        <param name="scale"><span data-ttu-id="7b8d9-188">10 的指数（0 到 28 之间）。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-188">A power of 10 ranging from 0 to 28.</span></span></param>
        <summary><span data-ttu-id="7b8d9-189">用指定实例构成部分的参数来初始化 <see cref="T:System.Decimal" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-189">Initializes a new instance of <see cref="T:System.Decimal" /> from parameters specifying the instance's constituent parts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-190">二进制表示形式<xref:System.Decimal>1 位符号、 大量 96 位整数和一个比例因子，用于分隔整数并指定它的哪一部分是小数部分的数字组成。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-190">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="7b8d9-191">缩放因子是隐式数字 10 范围从 0 到 28 的指数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-191">The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-192">下面的代码示例创建几个`Decimal`数字使用初始化的构造函数重载`Decimal`结构有三个<xref:System.Int32>值的单词，<xref:System.Boolean>的登录，和一个<xref:System.Byte>缩放比例。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-192">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with three <xref:System.Int32> value words, a <xref:System.Boolean> sign, and a <xref:System.Byte> scale factor.</span></span>  
  
 [!code-cpp[System.Decimal.Ctor.Arrays#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriiibby.cpp#2)]
 [!code-csharp[System.Decimal.Ctor.Arrays#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriiibby.cs#2)]
 [!code-vb[System.Decimal.Ctor.Arrays#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriiibby.vb#2)]  
  
 <span data-ttu-id="7b8d9-193">下面的示例使用<xref:System.Decimal.GetBits%2A>方法来检索数组的组成部分。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-193">The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array.</span></span> <span data-ttu-id="7b8d9-194">然后，它使用此数组的调用中<xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29>构造函数实例化一个新<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-194">It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]
 [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7b8d9-195"><paramref name="scale" /> 大于 28。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-195"><paramref name="scale" /> is greater than 28.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static decimal Add (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Add(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Add(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-196">要相加的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-196">The first value to add.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-197">要相加的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-197">The second value to add.</span></span></param>
        <summary><span data-ttu-id="7b8d9-198">将两个指定的 <see cref="T:System.Decimal" /> 值相加。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-198">Adds two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-199"><paramref name="d1" /> 与 <paramref name="d2" /> 的和。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-199">The sum of <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-200">下面的代码示例演示如何使用`Add`:</span><span class="sxs-lookup"><span data-stu-id="7b8d9-200">The following code sample illustrates the use of `Add` :</span></span>  
  
 [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]
 [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]
 [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-201"><paramref name="d1" /> 与 <paramref name="d2" /> 的和小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-201">The sum of <paramref name="d1" /> and <paramref name="d2" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-202">十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-202">A decimal number.</span></span></param>
        <summary><span data-ttu-id="7b8d9-203">返回大于或等于指定的十进制数的最小整数值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-203">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-204">大于或等于 <paramref name="d" /> 参数的最小整数值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-204">The smallest integral value that is greater than or equal to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="7b8d9-205">请注意，此方法返回 <see cref="T:System.Decimal" />，而不是整数类型。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-205">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-206">此方法的行为遵循 IEEE 标准 754，第 4 部分。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-206">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="7b8d9-207">这种舍入有时称为向正无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-207">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="7b8d9-208">换而言之，如果`d`为正，是否存在任何小数部分导致`d`被舍入到下一步的最大整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-208">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="7b8d9-209">如果`d`为负，则舍入运算会导致任何小数部分`d`被丢弃。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-209">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="7b8d9-210">此方法的操作不同于<xref:System.Decimal.Floor%2A>方法，支持向负无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-210">The operation of this method differs from the <xref:System.Decimal.Floor%2A> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-211">下面的示例演示<xref:System.Decimal.Ceiling%2A>方法并将其与进行比较<xref:System.Decimal.Floor%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-211">The following example illustrates the <xref:System.Decimal.Ceiling%2A> method and contrasts it with the <xref:System.Decimal.Floor%2A> method.</span></span>  
  
 [!code-csharp[System.Decimal.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs#1)]
 [!code-vb[System.Decimal.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (d1 As Decimal, d2 As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-212">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-212">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-213">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-213">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7b8d9-214">比较两个指定的 <see cref="T:System.Decimal" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-214">Compares two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-215">有符号数字，指示 <paramref name="d1" /> 和 <paramref name="d2" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-215">A signed number indicating the relative values of <paramref name="d1" /> and <paramref name="d2" />.</span></span>  
  
 <span data-ttu-id="7b8d9-216"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="7b8d9-216"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="7b8d9-217"></term><description> 含义</span><span class="sxs-lookup"><span data-stu-id="7b8d9-217"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="7b8d9-218"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="7b8d9-218"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="7b8d9-219"></term><description><paramref name="d1" /> 小于 <paramref name="d2" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-219"></term><description><paramref name="d1" /> is less than <paramref name="d2" />.</span></span>  
  
 <span data-ttu-id="7b8d9-220"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="7b8d9-220"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="7b8d9-221"></term><description><paramref name="d1" /> 与 <paramref name="d2" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-221"></term><description><paramref name="d1" /> and <paramref name="d2" /> are equal.</span></span>  
  
 <span data-ttu-id="7b8d9-222"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="7b8d9-222"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="7b8d9-223"></term><description><paramref name="d1" /> 大于 <paramref name="d2" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-223"></term><description><paramref name="d1" /> is greater than <paramref name="d2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-224">下面的示例比较多个<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-224">The following example compares several <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-225">请注意，第一个比较该值指示两个值相等尽管上执行的减法运算`value2`变量。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-225">Note that the first comparison indicates that the two values are equal despite the subtraction operation performed on the `value2` variable.</span></span> <span data-ttu-id="7b8d9-226">这是因为<xref:System.Decimal>类型具有 29 位精度，而仅采用 30 位精度，可以检测到这两个值之间差别。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-226">This is because the <xref:System.Decimal> type has 29 digits of precision, whereas a difference between these two values can be detected only with 30 digits of precision.</span></span>  
  
 [!code-csharp[System.Decimal.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Compare/cs/Compare1.cs#1)]
 [!code-vb[System.Decimal.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Compare/vb/Compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b8d9-227">将此实例与指定的对象或 <see cref="T:System.Decimal" /> 进行比较，并返回二者相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-227">Compares this instance to a specified object or <see cref="T:System.Decimal" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.CompareTo(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-228">与该实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-228">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="7b8d9-229">将此实例与指定的 <see cref="T:System.Decimal" /> 对象进行比较并返回一个对二者的相对值的比较。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-229">Compares this instance to a specified <see cref="T:System.Decimal" /> object and returns a comparison of their relative values.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-230">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-230">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="7b8d9-231"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="7b8d9-231"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="7b8d9-232"></term><description> 含义</span><span class="sxs-lookup"><span data-stu-id="7b8d9-232"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="7b8d9-233"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="7b8d9-233"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="7b8d9-234"></term><description> 此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-234"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="7b8d9-235"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="7b8d9-235"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="7b8d9-236"></term><description> 此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-236"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="7b8d9-237"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="7b8d9-237"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="7b8d9-238"></term><description> 此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-238"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-239">此方法实现<xref:System.IComparable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType>方法因为它不具有要转换`value`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-239">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="7b8d9-240">具体取决于您的编程语言，它可能会对代码<xref:System.Decimal.CompareTo%2A>其中的参数类型具有较少的位的方法 （为较窄） 比实例类型。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-240">Depending on your programming language, it might be possible to code a <xref:System.Decimal.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="7b8d9-241">这可能是因为某些编程语言中执行的隐式的扩大转换，它表示具有任意数量的位的实例作为类型参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-241">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="7b8d9-242">例如，假设实例类型是<xref:System.Int32>和参数类型是<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-242">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="7b8d9-243">Microsoft C# 编译器生成的指令来表示形式的参数<xref:System.Int32>对象，然后生成<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>方法来比较的值<xref:System.Int32>实例和<xref:System.Int32>参数表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-243">The Microsoft C# compiler generates instructions to represent the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="7b8d9-244">请查阅你的编程语言的文档，以确定其编译器是否对数值类型执行隐式的扩大转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-244">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-245">下面的代码示例演示泛型和非泛型版本的<xref:System.Decimal.CompareTo%2A>多个值和引用类型的方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-245">The following code example demonstrates generic and nongeneric versions of the <xref:System.Decimal.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-246">要与此实例进行比较的对象，或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-246">The object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="7b8d9-247">将此实例与指定对象进行比较并返回一个对二者的相对值的比较。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-247">Compares this instance to a specified object and returns a comparison of their relative values.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-248">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-248">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="7b8d9-249"><list type="table"><listheader><term> 返回值</span><span class="sxs-lookup"><span data-stu-id="7b8d9-249"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="7b8d9-250"></term><description> 含义</span><span class="sxs-lookup"><span data-stu-id="7b8d9-250"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="7b8d9-251"></description></listheader><item><term> 小于零</span><span class="sxs-lookup"><span data-stu-id="7b8d9-251"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="7b8d9-252"></term><description> 此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-252"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="7b8d9-253"></description></item><item><term> 零</span><span class="sxs-lookup"><span data-stu-id="7b8d9-253"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="7b8d9-254"></term><description> 此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-254"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="7b8d9-255"></description></item><item><term> 大于零</span><span class="sxs-lookup"><span data-stu-id="7b8d9-255"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="7b8d9-256"></term><description> 此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-256"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="7b8d9-257">或</span><span class="sxs-lookup"><span data-stu-id="7b8d9-257">-or-</span></span>  
  
 <span data-ttu-id="7b8d9-258"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-258"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-259">任何实例<xref:System.Decimal>，无论其值被视为大于`null`。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-259">Any instance of <xref:System.Decimal>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="7b8d9-260">参数`value`必须`null`或实例<xref:System.Decimal>; 否则为将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-260">Parameter `value` must be `null` or an instance of <xref:System.Decimal>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-261">下面的代码示例比较多个`Decimal`和为引用其他对象`Decimal`值使用`CompareTo`方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-261">The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `CompareTo` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7b8d9-262"><paramref name="value" /> 不是 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-262"><paramref name="value" /> is not a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static decimal Divide (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Divide(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Divide(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-263">被除数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-263">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-264">除数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-264">The divisor.</span></span></param>
        <summary><span data-ttu-id="7b8d9-265">将两个指定的 <see cref="T:System.Decimal" /> 值相除。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-265">Divides two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-266"><paramref name="d1" /> 除以 <paramref name="d2" /> 的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-266">The result of dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-267">下面的示例调用<xref:System.Decimal.Divide%2A>方法要作为除数 22.1 一系列的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-267">The following example calls the <xref:System.Decimal.Divide%2A> method to divide a range of values by 22.1.</span></span>  
  
 [!code-csharp[System.Decimal.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Decimal.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="7b8d9-268"><paramref name="d2" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-268"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-269">返回值（即：商）小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-269">The return value (that is, the quotient) is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b8d9-270">返回一个值，该值指示 <see cref="T:System.Decimal" /> 的两个实例是否表示同一个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-270">Returns a value indicating whether two instances of <see cref="T:System.Decimal" /> represent the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-271">要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-271">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="7b8d9-272">返回一个值，该值指示此实例和指定的 <see cref="T:System.Decimal" /> 对象是否表示相同的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-272">Returns a value indicating whether this instance and a specified <see cref="T:System.Decimal" /> object represent the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="7b8d9-273">如果 <paramref name="value" /> 等于此实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-273"><see langword="true" /> if <paramref name="value" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-274">此方法实现<xref:System.IEquatable%601?displayProperty=nameWithType>接口，并且执行效果略好于<xref:System.Decimal.Equals%2A>因为它不具有要转换`value`对对象的参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-274">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Decimal.Equals%2A> because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="7b8d9-275">如果`value`位数 （为较窄） 实例类型，某些编程语言执行隐式的扩大转换，以便将参数的值转换为具有更多位数的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-275">If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="7b8d9-276">例如，假设实例类型是<xref:System.Int32>和参数类型是<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-276">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="7b8d9-277">Microsoft C# 编译器生成的指令来表示形式的参数值<xref:System.Int32>对象，然后生成<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>方法来比较<xref:System.Int32>实例和参数的表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-277">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the <xref:System.Int32> instance and parameter representation.</span></span>  
  
 <span data-ttu-id="7b8d9-278">请查阅你的编程语言的文档，以确定其编译器是否对数值类型执行隐式的扩大转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-278">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="7b8d9-279">编译器重载决策可能应对明显的差异的两个行为<see cref="M:System.Decimal.Equals(System.Object)" />方法重载。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-279">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Decimal.Equals(System.Object)" /> method overloads.</span></span> <span data-ttu-id="7b8d9-280">如果之间的隐式转换<paramref name="obj" />自变量和一个<see cref="T:System.Decimal" />定义和自变量并不类型化为<see cref="T:System.Object" />，编译器可能会执行隐式转换和调用<see cref="M:System.Decimal.Equals(System.Decimal)" />方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-280">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Decimal" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method.</span></span> <span data-ttu-id="7b8d9-281">否则，它们调用<see cref="M:System.Decimal.Equals(System.Object)" />方法，始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.Decimal" />值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-281">Otherwise, they call the <see cref="M:System.Decimal.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Decimal" /> value.</span></span> <span data-ttu-id="7b8d9-282">下面的示例阐释了两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-282">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="7b8d9-283">对于所有基元的整数类型，程序包括签名和无符号类型，第一个比较返回<see langword="true" />因为编译器自动执行一个的扩大转换，调用<see cref="M:System.Decimal.Equals(System.Decimal)" />方法，而第二个比较返回<see langword="false" />由于编译器调用<see cref="M:System.Decimal.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-283">In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Decimal.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)]
 [!code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</para>
        </block>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="Overload:System.Decimal.CompareTo" />
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-284">与该实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-284">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="7b8d9-285">返回一个值，该值指示此实例和指定的 <see cref="T:System.Object" /> 是否表示相同的类型和值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-285">Returns a value indicating whether this instance and a specified <see cref="T:System.Object" /> represent the same type and value.</span></span></summary>
        <returns>
          <span data-ttu-id="7b8d9-286">如果 <paramref name="value" /> 是一个 <see cref="T:System.Decimal" /> 且与此实例相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-286"><see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.Decimal" /> and equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-287">下面的代码示例比较多个`Decimal`和为引用其他对象`Decimal`值使用`Equals`方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-287">The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `Equals` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="7b8d9-288">编译器重载决策可能应对明显的差异的两个行为<see cref="M:System.Decimal.Equals(System.Object)" />方法重载。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-288">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Decimal.Equals(System.Object)" /> method overloads.</span></span> <span data-ttu-id="7b8d9-289">如果之间的隐式转换<paramref name="obj" />自变量和一个<see cref="T:System.Decimal" />定义和自变量并不类型化为<see cref="T:System.Object" />，编译器可能会执行隐式转换和调用<see cref="M:System.Decimal.Equals(System.Decimal)" />方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-289">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Decimal" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method.</span></span> <span data-ttu-id="7b8d9-290">否则，它们调用<see cref="M:System.Decimal.Equals(System.Object)" />方法，始终返回<see langword="false" />如果其<paramref name="obj" />参数不是<see cref="T:System.Decimal" />值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-290">Otherwise, they call the <see cref="M:System.Decimal.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Decimal" /> value.</span></span> <span data-ttu-id="7b8d9-291">下面的示例阐释了两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-291">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="7b8d9-292">对于所有基元的整数类型，程序包括签名和无符号类型，第一个比较返回<see langword="true" />因为编译器自动执行一个的扩大转换，调用<see cref="M:System.Decimal.Equals(System.Decimal)" />方法，而第二个比较返回<see langword="false" />由于编译器调用<see cref="M:System.Decimal.Equals(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-292">In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Decimal.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.Decimal.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs#2)]
 [!code-vb[System.Decimal.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb#2)]</para>
        </block>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-293">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-293">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-294">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-294">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7b8d9-295">返回一个值，该值指示 <see cref="T:System.Decimal" /> 的两个指定实例是否表示同一个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-295">Returns a value indicating whether two specified instances of <see cref="T:System.Decimal" /> represent the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="7b8d9-296">如果 <paramref name="d1" /> 和 <paramref name="d2" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-296"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-297">下面的代码示例比较多个`Decimal`为引用的值`Decimal`值使用静态`Equals`方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-297">The following code example compares several `Decimal` values to a reference `Decimal` value using the static `Equals` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/comp_equal.cpp#2)]
 [!code-csharp[System.Decimal.Compare_Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/comp_equal.cs#2)]
 [!code-vb[System.Decimal.Compare_Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/comp_equal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-298">要舍入的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-298">The value to round.</span></span></param>
        <summary><span data-ttu-id="7b8d9-299">将指定的 <see cref="T:System.Decimal" /> 数字向负无穷方向舍入为最接近的整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-299">Rounds a specified <see cref="T:System.Decimal" /> number to the closest integer toward negative infinity.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-300">如果 <paramref name="d" /> 有小数部分，则为负无穷方向上小于 <paramref name="d" /> 的下一个整 <see cref="T:System.Decimal" /> 数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-300">If <paramref name="d" /> has a fractional part, the next whole <see cref="T:System.Decimal" /> number toward negative infinity that is less than <paramref name="d" />.</span></span>  
  
 <span data-ttu-id="7b8d9-301">或</span><span class="sxs-lookup"><span data-stu-id="7b8d9-301">-or-</span></span>  
  
 <span data-ttu-id="7b8d9-302">如果 <paramref name="d" /> 没有小数部分，则 <paramref name="d" /> 原样返回。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-302">If <paramref name="d" /> doesn't have a fractional part, <paramref name="d" /> is returned unchanged.</span></span> <span data-ttu-id="7b8d9-303">请注意，该方法将返回 <see cref="T:System.Decimal" /> 类型的整数值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-303">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-304">此方法的行为遵循 IEEE 标准 754，第 4 部分。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-304">The behavior of this method follows IEEE Standard 754, Section 4.</span></span> <span data-ttu-id="7b8d9-305">这种舍入有时称为向负无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-305">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="7b8d9-306">换而言之，如果`d`为正，任何小数部分将被截断。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-306">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="7b8d9-307">如果`d`为负，则任何小数部分的存在导致它被舍入到较小的整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-307">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="7b8d9-308">此方法的操作不同于<xref:System.Decimal.Ceiling%2A>方法，支持向正无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-308">The operation of this method differs from the <xref:System.Decimal.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-309">下面的示例演示<xref:System.Decimal.Floor%2A>方法并将其与进行比较<xref:System.Decimal.Ceiling%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-309">The following example illustrates the <xref:System.Decimal.Floor%2A> method and contrasts it with the <xref:System.Decimal.Ceiling%2A> method.</span></span>  
  
 [!code-csharp[System.Decimal.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs#1)]
 [!code-vb[System.Decimal.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
        <altmember cref="M:System.Decimal.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="FromOACurrency">
      <MemberSignature Language="C#" Value="public static decimal FromOACurrency (long cy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal FromOACurrency(int64 cy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.FromOACurrency(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromOACurrency (cy As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal FromOACurrency(long cy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cy" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="cy"><span data-ttu-id="7b8d9-310">一个 OLE 自动化货币值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-310">An OLE Automation Currency value.</span></span></param>
        <summary><span data-ttu-id="7b8d9-311">将指定的 64 位有符号整数（它包含 OLE 自动化货币值）转换为等效的 <see cref="T:System.Decimal" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-311">Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <see cref="T:System.Decimal" /> value.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-312">包含 <paramref name="cy" /> 的等效数的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-312">A <see cref="T:System.Decimal" /> that contains the equivalent of <paramref name="cy" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-313">下面的代码示例使用`FromOACurrency`方法将转换<xref:System.Int64>包含为等效的 OLE 自动化货币值的字段`Decimal`数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-313">The following code example uses the `FromOACurrency` method to convert <xref:System.Int64> fields that contain OLE Automation Currency values to the equivalent `Decimal` numbers.</span></span>  
  
 [!code-cpp[System.Decimal.OACurrency#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/fromoacurrency.cpp#2)]
 [!code-csharp[System.Decimal.OACurrency#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/fromoacurrency.cs#2)]
 [!code-vb[System.Decimal.OACurrency#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/fromoacurrency.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.ToOACurrency(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="GetBits">
      <MemberSignature Language="C#" Value="public static int[] GetBits (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] GetBits(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetBits(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBits (d As Decimal) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ GetBits(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-314">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-314">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-315">将 <see cref="T:System.Decimal" /> 的指定实例的值转换为其等效的二进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-315">Converts the value of a specified instance of <see cref="T:System.Decimal" /> to its equivalent binary representation.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-316">包含 <paramref name="d" /> 二进制表示形式、由四个元素组成的 32 位有符号整数数组。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-316">A 32-bit signed integer array with four elements that contain the binary representation of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-317">二进制表示形式<xref:System.Decimal>1 位符号、 大量 96 位整数和一个比例因子，用于分隔整数并指定它的哪一部分是小数部分的数字组成。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-317">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="7b8d9-318">缩放因子是隐式数字 10，范围从 0 到 28 的指数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-318">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span>  
  
 <span data-ttu-id="7b8d9-319">返回值为一个四个元素的数组的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-319">The return value is a four-element array of 32-bit signed integers.</span></span>  
  
 <span data-ttu-id="7b8d9-320">第一，第二，并返回的数组的第三个元素包含 96 位整数号的低、 中和高 32 位。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-320">The first, second, and third elements of the returned array contain the low, middle, and high 32 bits of the 96-bit integer number.</span></span>  
  
 <span data-ttu-id="7b8d9-321">返回数组的第四个元素包含的缩放比例和登录。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-321">The fourth element of the returned array contains the scale factor and sign.</span></span> <span data-ttu-id="7b8d9-322">它由以下部分组成：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-322">It consists of the following parts:</span></span>  
  
 <span data-ttu-id="7b8d9-323">位 0 到 15 之间，较低的字，未使用，且必须为零。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-323">Bits 0 to 15, the lower word, are unused and must be zero.</span></span>  
  
 <span data-ttu-id="7b8d9-324">16 到 23 位必须包含指示用整数数字除以 10 的能力介于 0 到 28，之间指数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-324">Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</span></span>  
  
 <span data-ttu-id="7b8d9-325">24 到 30 位未使用，必须为零。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-325">Bits 24 to 30 are unused and must be zero.</span></span>  
  
 <span data-ttu-id="7b8d9-326">第 31 位包含符号： 0 意味着正，而 1 表示负数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-326">Bit 31 contains the sign: 0 mean positive, and 1 means negative.</span></span>  
  
 <span data-ttu-id="7b8d9-327">请注意，位表示形式区分正负零。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-327">Note that the bit representation differentiates between negative and positive zero.</span></span> <span data-ttu-id="7b8d9-328">这些值被视为相等的所有操作。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-328">These values are treated as being equal in all operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-329">下面的示例使用`GetBits`方法将多个转换`Decimal`为其等效的二进制表示形式的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-329">The following example uses the `GetBits` method to convert several `Decimal` values to their equivalent binary representations.</span></span> <span data-ttu-id="7b8d9-330">它将显示的十进制值和元素的十六进制值中返回的数组<xref:System.Decimal.GetBits%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-330">It then displays the decimal values and the hexadecimal value of the elements in the array returned by the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 [!code-cpp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/getbits.cpp#2)]
 [!code-csharp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/getbits.cs#2)]
 [!code-vb[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/getbits.vb#2)]  
  
 <span data-ttu-id="7b8d9-331">下面的示例使用<xref:System.Decimal.GetBits%2A>方法来检索数组的组成部分。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-331">The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array.</span></span> <span data-ttu-id="7b8d9-332">然后，它使用此数组的调用中<xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29>构造函数实例化一个新<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-332">It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]
 [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Decimal.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7b8d9-333">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-333">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-334">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-334">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7b8d9-335">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-335">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-336">枚举常数 <see cref="F:System.TypeCode.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-336">The enumerated constant <see cref="F:System.TypeCode.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-337">下面的代码示例使用`GetTypeCode`方法返回的类型代码`Decimal`值类型。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-337">The following code example uses the `GetTypeCode` method to return the type code for `Decimal` value type.</span></span>  
  
 [!code-cpp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/gettypecode.cpp#3)]
 [!code-csharp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/gettypecode.cs#3)]
 [!code-vb[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/gettypecode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly decimal MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MaxValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b8d9-338">表示 <see cref="T:System.Decimal" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-338">Represents the largest possible value of <see cref="T:System.Decimal" />.</span></span> <span data-ttu-id="7b8d9-339">该字段是常数且为只读。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-339">This field is constant and read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-340">此常量的值为正 79228162514264337593543950335。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-340">The value of this constant is positive 79,228,162,514,264,337,593,543,950,335.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-341">下面的代码示例演示如何使用`MaxValue`:</span><span class="sxs-lookup"><span data-stu-id="7b8d9-341">The following code sample illustrates the use of `MaxValue` :</span></span>  
  
 [!code-cpp[Decimal Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#2)]
 [!code-csharp[Decimal Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#2)]
 [!code-vb[Decimal Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinusOne">
      <MemberSignature Language="C#" Value="public static readonly decimal MinusOne;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MinusOne" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MinusOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinusOne As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MinusOne;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b8d9-342">表示数字负一 (-1)。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-342">Represents the number negative one (-1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-343">下面的代码示例演示如何使用`MinusOne`字段。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-343">The following code example illustrates the use of the `MinusOne` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly decimal MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MinValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b8d9-344">表示 <see cref="T:System.Decimal" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-344">Represents the smallest possible value of <see cref="T:System.Decimal" />.</span></span> <span data-ttu-id="7b8d9-345">该字段是常数且为只读。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-345">This field is constant and read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-346">此常量的值为负 79228162514264337593543950335。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-346">The value of this constant is negative 79,228,162,514,264,337,593,543,950,335.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-347">下面的代码示例演示如何使用`MinValue`字段。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-347">The following code example illustrates the use of the `MinValue` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static decimal Multiply (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Multiply(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Multiply(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-348">被乘数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-348">The multiplicand.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-349">乘数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-349">The multiplier.</span></span></param>
        <summary><span data-ttu-id="7b8d9-350">两个指定的 <see cref="T:System.Decimal" /> 值相乘。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-350">Multiplies two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-351"><paramref name="d1" /> 与 <paramref name="d2" /> 相乘的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-351">The result of multiplying <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-352">下面的代码示例创建的若干个对`Decimal`值并计算其产品与`Multiply`方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-352">The following code example creates several pairs of `Decimal` values and calculates their products with the `Multiply` method.</span></span>  
  
 [!code-cpp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CPP/mul_div_rem.cpp#1)]
 [!code-csharp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CS/mul_div_rem.cs#1)]
 [!code-vb[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/VB/mul_div_rem.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-353">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-353">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static decimal Negate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Negate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Negate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Negate(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-354">要求反的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-354">The value to negate.</span></span></param>
        <summary><span data-ttu-id="7b8d9-355">返回指定的 <see cref="T:System.Decimal" /> 值乘以 -1 的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-355">Returns the result of multiplying the specified <see cref="T:System.Decimal" /> value by negative one.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-356">具有 <paramref name="d" /> 的值，但符号相反的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-356">A decimal number with the value of <paramref name="d" />, but the opposite sign.</span></span>  
  
 <span data-ttu-id="7b8d9-357">或</span><span class="sxs-lookup"><span data-stu-id="7b8d9-357">-or-</span></span>  
  
 <span data-ttu-id="7b8d9-358">如果 <paramref name="d" /> 为零，则为零。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-358">Zero, if <paramref name="d" /> is zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-359">下面的代码示例使用`Negate`方法可以更改多个登录`Decimal`值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-359">The following code example uses the `Negate` method to change the sign of several `Decimal` values.</span></span>  
  
 [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]
 [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]
 [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static readonly decimal One;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal One" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly One As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal One;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b8d9-360">表示数字一 (1)。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-360">Represents the number one (1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-361">下面的代码示例演示如何使用`One`字段。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-361">The following code example illustrates the use of the `One` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static decimal operator + (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Addition(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator +(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-362">要相加的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-362">The first value to add.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-363">要相加的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-363">The second value to add.</span></span></param>
        <summary><span data-ttu-id="7b8d9-364">将两个指定的 <see cref="T:System.Decimal" /> 值相加。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-364">Adds two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-365"><paramref name="d1" /> 与 <paramref name="d2" /> 相加的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-365">The result of adding <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-366"><xref:System.Decimal.op_Addition%2A>方法定义的操作的加法运算符<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-366">The <xref:System.Decimal.op_Addition%2A> method defines the operation of the addition operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-367">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-367">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/addition1.cs#3)]
 [!code-vb[System.Decimal.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/addition1.vb#3)]  
  
 <span data-ttu-id="7b8d9-368">如果你正在使用的语言不支持自定义运算符，调用<xref:System.Decimal.Add%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-368">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Add%2A> method instead.</span></span>  
  
 <span data-ttu-id="7b8d9-369">此运算符的等效方法是 <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b8d9-369">The equivalent method for this operator is <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-370">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-370">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static decimal operator -- (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Decrement(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Decrement(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator --(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-371">要递减的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-371">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="7b8d9-372"><see cref="T:System.Decimal" /> 操作数减 1。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-372">Decrements the <see cref="T:System.Decimal" /> operand by one.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-373"><paramref name="d" /> 减 1 所得的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-373">The value of <paramref name="d" /> decremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-374"><xref:System.Decimal.op_Decrement%2A>方法定义的递减运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-374">The <xref:System.Decimal.op_Decrement%2A> method defines the operation of the decrement operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-375">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-375">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement1.cs#4)]  
  
 <span data-ttu-id="7b8d9-376">某些语言规则中的缺少递增运算符 （如 Visual Basic 中) 可以调用<xref:System.Decimal.op_Decrement%2A>方法直接，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-376">Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Decrement%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement1.vb#5)]  
  
 <span data-ttu-id="7b8d9-377">如果你的语言不支持自定义运算符，调用<xref:System.Decimal.Subtract%2A>方法相反，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-377">If your language does not support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead, as the following example shows.</span></span>  
  
 [!code-csharp[System.Decimal.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement2.cs#6)]
 [!code-vb[System.Decimal.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-378">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-378">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static decimal operator / (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Division(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Division(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator /(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-379">被除数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-379">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-380">除数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-380">The divisor.</span></span></param>
        <summary><span data-ttu-id="7b8d9-381">将两个指定的 <see cref="T:System.Decimal" /> 值相除。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-381">Divides two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-382"><paramref name="d1" /> 除以 <paramref name="d2" /> 的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-382">The result of dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-383"><xref:System.Decimal.op_Division%2A>方法定义的除法运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-383">The <xref:System.Decimal.op_Division%2A> method defines the operation of the division operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-384">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-384">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/division1.cs#7)]
 [!code-vb[System.Decimal.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/division1.vb#7)]  
  
 <span data-ttu-id="7b8d9-385">如果你正在使用的语言不支持自定义运算符，调用<xref:System.Decimal.Divide%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-385">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Divide%2A> method instead.</span></span>  
  
 <span data-ttu-id="7b8d9-386">此运算符的等效方法是 <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b8d9-386">The equivalent method for this operator is <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="7b8d9-387"><paramref name="d2" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-387"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-388">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-388">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-389">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-389">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-390">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-390">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7b8d9-391">返回一个值，该值指示两个 <see cref="T:System.Decimal" /> 值是否相等。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-391">Returns a value that indicates whether two <see cref="T:System.Decimal" /> values are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="7b8d9-392">如果 <paramref name="d1" /> 和 <paramref name="d2" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-392"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-393"><xref:System.Decimal.op_Equality%2A>方法定义的相等运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-393">The <xref:System.Decimal.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-394">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-394">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/equality1.cs#1)]
 [!code-vb[System.Decimal.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/equality1.vb#1)]  
  
 <span data-ttu-id="7b8d9-395">如果你正在使用的语言不支持自定义运算符，调用<xref:System.Decimal.Equals%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-395">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Equals%2A> method instead.</span></span>  
  
 <span data-ttu-id="7b8d9-396">此运算符的等效方法是 <xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b8d9-396">The equivalent method for this operator is <xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b8d9-397">定义 <see cref="T:System.Decimal" /> 对象与其他类型之间的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-397">Defines an explicit conversion between a <see cref="T:System.Decimal" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-398">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-398">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-399">定义从 <see cref="T:System.Decimal" /> 到 8 位无符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-399">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to an 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-400">8 位无符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-400">An 8-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-401">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-401">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Byte>.</span></span> <span data-ttu-id="7b8d9-402">此类的显式转换的语法不依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-402">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7b8d9-403">该示例阐释了不同的返回值时将显式转换<xref:System.Decimal>值赋给<xref:System.Byte>通过使用 C#、 c + + 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-403">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Byte> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="7b8d9-404">若要执行独立于语言的转换，可以调用<xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-404">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples 
 <span data-ttu-id="7b8d9-405">以下示例将转换<xref:System.Decimal>数字转换<xref:System.Byte>通过使用显式值<xref:System.Decimal>到<xref:System.Byte>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-405">The following example converts <xref:System.Decimal> numbers to <xref:System.Byte> values by using the explicit <xref:System.Decimal> to <xref:System.Byte> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctos_byte.cpp#4)] 
 [!code-csharp[System.Decimal.ConvTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctos_byte.cs#4)] 
 [!code-vb[System.Decimal.ConvTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctos_byte.vb#4)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-406"><paramref name="value" /> 小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-406"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator char (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname char op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Char" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator char(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-407">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-407">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-408">定义从 Unicode 字符到 <see cref="T:System.Decimal" /> 的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-408">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a Unicode character.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-409">表示转换后的 <see cref="T:System.Decimal" /> 的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-409">A Unicode character that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-410">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.Char>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-410">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Char>.</span></span> <span data-ttu-id="7b8d9-411">此类的显式转换的语法不依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果，或可能不支持转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-411">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results, or might not support the conversion at all.</span></span> <span data-ttu-id="7b8d9-412">例如，Visual Basic 和 c + + 编译器不支持显式<xref:System.Decimal>到<xref:System.Char>转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-412">For example, the Visual Basic and C++ compilers do not support an explicit <xref:System.Decimal> to a <xref:System.Char> conversion.</span></span>
 

## Examples 
 <span data-ttu-id="7b8d9-413">以下示例将转换<xref:System.Decimal>数字转换<xref:System.Char>通过使用显式值 （Unicode 字符）<xref:System.Decimal>到<xref:System.Char>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-413">The following example converts <xref:System.Decimal> numbers to <xref:System.Char> values (Unicode characters) by using the explicit <xref:System.Decimal> to <xref:System.Char> conversion operator.</span></span>

 [!code-csharp[System.Decimal.ConvTo#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctochar.cs#6)]
 [!code-vb[System.Decimal.ConvTo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctochar.vb#6)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-414"><paramref name="value" /> 小于 <see cref="F:System.Char.MinValue" /> 或大于 <see cref="F:System.Char.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-414"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-415">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-415">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-416">定义从 <see cref="T:System.Decimal" /> 到双精度浮点数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-416">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-417">双精度浮点数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-417">A double-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-418">此操作可能导致丢失精度，因为一个双精度浮点数具有有效位比<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-418">This operation can result in a loss of precision, because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>
 
 <span data-ttu-id="7b8d9-419">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-419">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Double>.</span></span> <span data-ttu-id="7b8d9-420">此类的显式转换的语法不依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-420">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7b8d9-421">该示例阐释了不同的返回值时将显式转换<xref:System.Decimal>值赋给<xref:System.Double>通过使用 C#、 c + + 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-421">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Double> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="7b8d9-422">若要执行独立于语言的转换，可以调用<xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-422">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="7b8d9-423">以下示例将转换<xref:System.Decimal>数字转换<xref:System.Double>通过使用显式值<xref:System.Decimal>到<xref:System.Double>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-423">The following example converts <xref:System.Decimal> numbers to <xref:System.Double> values by using the explicit <xref:System.Decimal> to <xref:System.Double> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctosgl_dbl.cpp#5)] 
 [!code-csharp[System.Decimal.ConvTo#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ConvTo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctosgl_dbl.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-424">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-424">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-425">定义从 <see cref="T:System.Decimal" /> 到 16 位有符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-425">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-426">16 位有符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-426">A 16-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="7b8d9-427">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.Int16>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-427">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int16>.</span></span> <span data-ttu-id="7b8d9-428">此类的显式转换的语法不依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-428">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7b8d9-429">该示例阐释了不同的返回值时将显式转换<xref:System.Decimal>值赋给<xref:System.Int16>通过使用 C#、 Visual Basic 和 c + + 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-429">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int16> value by using C#, Visual Basic, and C++.</span></span> <span data-ttu-id="7b8d9-430">若要执行独立于语言的转换，可以调用<xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-430">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="7b8d9-431">以下示例将转换<xref:System.Decimal>数字转换<xref:System.Int16>通过使用显式值<xref:System.Decimal>到<xref:System.Int16>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-431">The following example converts <xref:System.Decimal> numbers to <xref:System.Int16> values by using the explicit <xref:System.Decimal> to <xref:System.Int16> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int16.cpp#3)] 
 [!code-csharp[System.Decimal.ConvTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int16.cs#3)] 
 [!code-vb[System.Decimal.ConvTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int16.vb#3)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-432"><paramref name="value" /> 小于 <see cref="F:System.Int16.MinValue" /> 或大于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-432"><paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-433">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-433">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-434">定义从 <see cref="T:System.Decimal" /> 到 32 位有符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-434">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-435">32 位有符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-435">A 32-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-436">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-436">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int32>.</span></span> <span data-ttu-id="7b8d9-437">此类的显式转换的语法不依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-437">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7b8d9-438">该示例阐释了不同的返回值时将显式转换<xref:System.Decimal>值赋给<xref:System.Int32>通过使用 C#、 c + + 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-438">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int32> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="7b8d9-439">若要执行独立于语言的转换，可以调用<xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-439">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="7b8d9-440">以下示例将转换<xref:System.Decimal>数字转换<xref:System.Int32>通过使用显式值<xref:System.Decimal>到<xref:System.Int32>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-440">The following example converts <xref:System.Decimal> numbers to <xref:System.Int32> values by using the explicit <xref:System.Decimal> to <xref:System.Int32> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int32.cs#2)] 
 [!code-vb[System.Decimal.ConvTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int32.vb#2)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-441"><paramref name="value" /> 小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-441"><paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-442">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-442">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-443">定义从 <see cref="T:System.Decimal" /> 到 64 位有符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-443">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-444">64 位有符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-444">A 64-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-445">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.Int64>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-445">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int64>.</span></span> <span data-ttu-id="7b8d9-446">此类的显式转换的语法不依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-446">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7b8d9-447">该示例阐释了不同的返回值时将显式转换<xref:System.Decimal>值赋给<xref:System.Int64>通过使用 C# 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-447">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int64> value by using C# and Visual Basic.</span></span> <span data-ttu-id="7b8d9-448">若要执行独立于语言的转换，可以调用<xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-448">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 
## Examples
 <span data-ttu-id="7b8d9-449">以下示例将转换<xref:System.Decimal>数字转换<xref:System.Int64>通过使用显式值<xref:System.Decimal>到<xref:System.Int64>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-449">The following example converts <xref:System.Decimal> numbers to <xref:System.Int64> values by using the explicit <xref:System.Decimal> to <xref:System.Int64> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int64.cs#1)] 
 [!code-vb[System.Decimal.ConvTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int64.vb#1)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-450"><paramref name="value" /> 小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-450"><paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-451">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-451">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-452">定义从 <see cref="T:System.Decimal" /> 到 8 位有符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-452">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to an 8-bit signed integer.</span></span>  
  
 <span data-ttu-id="7b8d9-453">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-453">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-454">8 位有符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-454">An 8-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-455">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.SByte>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-455">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.SByte>.</span></span> <span data-ttu-id="7b8d9-456">此类的显式转换的语法不依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-456">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7b8d9-457">该示例阐释了不同的返回值时将显式转换<xref:System.Decimal>值赋给<xref:System.Byte>和<xref:System.SByte>通过使用 C# 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-457">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Byte> and an <xref:System.SByte> value by using C# and Visual Basic.</span></span> <span data-ttu-id="7b8d9-458">若要执行独立于语言的转换，可以调用<xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType>方法或<xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-458">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType> method or the <xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>   


## Examples 
 <span data-ttu-id="7b8d9-459">以下示例将转换<xref:System.Decimal>数字转换<xref:System.SByte>通过使用显式值<xref:System.Decimal>到<xref:System.SByte>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-459">The following example converts <xref:System.Decimal> numbers to <xref:System.SByte> values by using the explicit <xref:System.Decimal> to <xref:System.SByte> conversion operator.</span></span>

 [!code-cpp[System.Decimal.Operators.Explicit#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cpp/tosbyte.cpp#1)] 
 [!code-csharp[System.Decimal.Operators.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cs/tosbyte.cs#1)]
 [!code-vb[System.Decimal.Operators.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators.explicit/vb/tosbyte.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-460"><paramref name="value" /> 小于 <see cref="F:System.SByte.MinValue" /> 或大于 <see cref="F:System.SByte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-460"><paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altCompliant cref="M:System.Decimal.ToInt16(System.Decimal)" />
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-461">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-461">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-462">定义从 <see cref="T:System.Decimal" /> 到单精度浮点数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-462">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-463">单精度浮点数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-463">A single-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-464">此操作可能导致丢失精度，因为单精度浮点数具有有效位比<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-464">This operation can result in a loss of precision, because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>

 <span data-ttu-id="7b8d9-465">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.Single>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-465">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Single>.</span></span> <span data-ttu-id="7b8d9-466">此类的显式转换的语法不依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-466">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7b8d9-467">该示例阐释了不同的返回值时将显式转换<xref:System.Decimal>值赋给<xref:System.Single>通过使用 C# 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-467">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Single> value by using C# and Visual Basic.</span></span> <span data-ttu-id="7b8d9-468">若要执行独立于语言的转换，可以调用<xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-468">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="7b8d9-469">以下示例将转换<xref:System.Decimal>数字转换<xref:System.Single>通过使用显式值<xref:System.Decimal>到<xref:System.Single>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-469">The following example converts <xref:System.Decimal> numbers to <xref:System.Single> values by using the explicit <xref:System.Decimal> to <xref:System.Single> conversion operator.</span></span>

 [!code-cpp[System.Decimal.Operators.Explicit#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cpp/tosingle1.cpp#2)] 
 [!code-csharp[System.Decimal.Operators.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cs/tosingle1.cs#2)]
 [!code-vb[System.Decimal.Operators.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators.explicit/vb/tosingle1.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-470">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-470">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-471">定义从 <see cref="T:System.Decimal" /> 到 16 位无符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-471">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 16-bit unsigned integer.</span></span>  
  
 <span data-ttu-id="7b8d9-472">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-472">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-473">16 位无符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-473">A 16-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-474">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.UInt16>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-474">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt16>.</span></span> <span data-ttu-id="7b8d9-475">此类的显式转换的语法不依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-475">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7b8d9-476">该示例阐释了不同的返回值时将显式转换<xref:System.Decimal>值赋给<xref:System.UInt16>通过使用 C# 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-476">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt16> value by using C# and Visual Basic.</span></span> <span data-ttu-id="7b8d9-477">若要执行独立于语言的转换，可以调用<xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-477">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="7b8d9-478">以下示例将转换<xref:System.Decimal>数字转换<xref:System.UInt16>通过使用显式值<xref:System.Decimal>到<xref:System.UInt16>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-478">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt16> values by using the explicit <xref:System.Decimal> to <xref:System.UInt16> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int16.cpp#3)] 
 [!code-csharp[System.Decimal.ConvTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int16.cs#3)]
 [!code-vb[System.Decimal.ConvTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int16.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-479"><paramref name="value" /> 小于 <see cref="F:System.UInt16.MinValue" /> 或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-479"><paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-480">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-480">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-481">定义从 <see cref="T:System.Decimal" /> 到 32 位无符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-481">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 32-bit unsigned integer.</span></span>  
  
 <span data-ttu-id="7b8d9-482">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-482">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-483">32 位无符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-483">A 32-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-484">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.UInt32>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-484">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt32>.</span></span> <span data-ttu-id="7b8d9-485">此类的显式转换的语法不依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-485">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7b8d9-486">该示例阐释了不同的返回值时将显式转换<xref:System.Decimal>值赋给<xref:System.UInt32>通过使用 C# 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-486">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt32> value by using C# and Visual Basic.</span></span> <span data-ttu-id="7b8d9-487">若要执行独立于语言的转换，可以调用<xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-487">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>


## Examples
 <span data-ttu-id="7b8d9-488">以下示例将转换<xref:System.Decimal>数字转换<xref:System.UInt32>通过使用显式值<xref:System.Decimal>到<xref:System.UInt32>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-488">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt32> values by using the explicit <xref:System.Decimal> to <xref:System.UInt32> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int32.cs#2)]
 [!code-vb[System.Decimal.ConvTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int32.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-489"><paramref name="value" /> 小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-489"><paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altCompliant cref="M:System.Decimal.ToInt64(System.Decimal)" />
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-490">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-490">The value to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-491">定义从 <see cref="T:System.Decimal" /> 到 64 位无符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-491">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 64-bit unsigned integer.</span></span>  
  
 <span data-ttu-id="7b8d9-492">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-492">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-493">64 位无符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-493">A 64-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-494">此运算符支持的显式转换<xref:System.Decimal>到<xref:System.UInt64>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-494">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt64>.</span></span> <span data-ttu-id="7b8d9-495">此类的显式转换的语法不依赖于语言和各种语言编译器可以提供不同的实现，并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-495">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="7b8d9-496">该示例阐释了不同的返回值时将显式转换<xref:System.Decimal>值赋给<xref:System.UInt64>通过使用 C# 和 Visual Basic 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-496">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt64> value by using C# and Visual Basic.</span></span> <span data-ttu-id="7b8d9-497">若要执行独立于语言的转换，可以调用<xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType>或<xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-497">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>


## Examples 
 <span data-ttu-id="7b8d9-498">以下示例将转换<xref:System.Decimal>数字转换<xref:System.UInt64>通过使用显式值<xref:System.Decimal>到<xref:System.UInt64>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-498">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt64> values by using the explicit <xref:System.Decimal> to <xref:System.UInt64> conversion operator.</span></span>

 [!code-cpp[System.Decimal.ConvTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int64.cs#1)]
 [!code-vb[System.Decimal.ConvTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int64.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-499"><paramref name="value" /> 为负数或大于 <see cref="F:System.UInt64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-499"><paramref name="value" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Double)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-500">要转换的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-500">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-501">定义从双精度浮点数到 <see cref="T:System.Decimal" /> 的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-501">Defines an explicit conversion of a double-precision floating-point number to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-502">已转换的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-502">The converted double-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  

 <span data-ttu-id="7b8d9-503">以下示例将转换<xref:System.Double>值复制到<xref:System.Decimal>使用数字<xref:System.Double>到<xref:System.Decimal>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-503">The following example converts <xref:System.Double> values to <xref:System.Decimal> numbers by using the <xref:System.Double> to <xref:System.Decimal> conversion operator.</span></span> <span data-ttu-id="7b8d9-504">此转换要求 op_Explicit 运算符在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-504">This conversion requires the op_Explicit operator in Visual Basic.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromdouble.cpp#2)]
 [!code-csharp[System.Decimal.ConvFrom.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromdouble.cs#2)]
 [!code-vb[System.Decimal.ConvFrom.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromdouble.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-505"><paramref name="value" /> 大于 <see cref="F:System.Decimal.MaxValue" /> 或小于 <see cref="F:System.Decimal.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-505"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
 <span data-ttu-id="7b8d9-506">或</span><span class="sxs-lookup"><span data-stu-id="7b8d9-506">-or-</span></span>  
  
 <span data-ttu-id="7b8d9-507"><paramref name="value" /> 为 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-507"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Single)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Single) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-508">要转换的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-508">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-509">定义从单精度浮点数到 <see cref="T:System.Decimal" /> 的显式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-509">Defines an explicit conversion of a single-precision floating-point number to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-510">已转换的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-510">The converted single-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-511">以下示例将转换<xref:System.Single>值复制到<xref:System.Decimal>使用数字<xref:System.Single>到<xref:System.Decimal>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-511">The following example converts <xref:System.Single> values to <xref:System.Decimal> numbers by using the <xref:System.Single> to <xref:System.Decimal> conversion operator.</span></span> <span data-ttu-id="7b8d9-512">此转换要求 op_Explicit 运算符在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-512">This conversion requires the op_Explicit operator in Visual Basic.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromsingle.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromsingle.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromsingle.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-513"><paramref name="value" /> 大于 <see cref="F:System.Decimal.MaxValue" /> 或小于 <see cref="F:System.Decimal.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-513"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
 <span data-ttu-id="7b8d9-514">或</span><span class="sxs-lookup"><span data-stu-id="7b8d9-514">-or-</span></span>  
  
 <span data-ttu-id="7b8d9-515"><paramref name="value" /> 为 <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.PositiveInfinity" /> 或 <see cref="F:System.Single.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-515"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-516">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-516">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-517">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-517">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7b8d9-518">返回一个值，该值指示指定的 <see cref="T:System.Decimal" /> 是否大于另一个指定的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-518">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns>
          <span data-ttu-id="7b8d9-519">如果 <see langword="true" /> 大于 <paramref name="d1" />，则为 <paramref name="d2" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-519"><see langword="true" /> if <paramref name="d1" /> is greater than <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-520"><xref:System.Decimal.op_GreaterThan%2A>方法定义的操作的大于运算符<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-520">The <xref:System.Decimal.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-521">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-521">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthan1.cs#8)]
 [!code-vb[System.Decimal.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan1.vb#8)]  
  
 <span data-ttu-id="7b8d9-522">不支持自定义运算符的语言可以调用<xref:System.Decimal.Compare%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-522">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="7b8d9-523">它们也可能是能够调用<xref:System.Decimal.op_GreaterThan%2A>方法直接，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-523">They may also be able to call the <xref:System.Decimal.op_GreaterThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan2.vb#9)]  
  
 <span data-ttu-id="7b8d9-524">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b8d9-524">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-525">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-525">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-526">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-526">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7b8d9-527">返回一个值，该值指示指定的 <see cref="T:System.Decimal" /> 是否大于等于另一个指定的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-527">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than or equal to another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns>
          <span data-ttu-id="7b8d9-528">如果 <paramref name="d1" /> 大于等于 <paramref name="d2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-528"><see langword="true" /> if <paramref name="d1" /> is greater than or equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-529"><xref:System.Decimal.op_GreaterThanOrEqual%2A>方法定义为大于或等于运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-529">The <xref:System.Decimal.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-530">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-530">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthanorequal1.cs#10)]
 [!code-vb[System.Decimal.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal1.vb#10)]  
  
 <span data-ttu-id="7b8d9-531">不支持自定义运算符的语言可以调用<xref:System.Decimal.Compare%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-531">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="7b8d9-532">它们也可能是能够调用<xref:System.Decimal.op_GreaterThanOrEqual%2A>方法直接，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-532">They may also be able to call the <xref:System.Decimal.op_GreaterThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal2.vb#11)]  
  
 <span data-ttu-id="7b8d9-533">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b8d9-533">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b8d9-534">定义从类型值到 <see cref="T:System.Decimal" /> 值的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-534">Defines an implicit conversion of the value of a type to a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-535">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-535">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7b8d9-536">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-536">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-537">要转换的 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-537">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-538">定义从 8 位无符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-538">Defines an implicit conversion of an 8-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-539">已转换的 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-539">The converted 8-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-540">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-540">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7b8d9-541">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-541">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7b8d9-542">以下示例将转换<xref:System.Byte>值复制到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-542">The following example converts <xref:System.Byte> values to <xref:System.Decimal> numbers.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfrombyte.cpp#4)]
 [!code-csharp[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfrombyte.cs#4)]
 [!code-vb[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfrombyte.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Char)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Char) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-543">要转换的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-543">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-544">定义从 Unicode 字符到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-544">Defines an implicit conversion of a Unicode character to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-545">转换后的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-545">The converted Unicode character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-546">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-546">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7b8d9-547">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-547">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7b8d9-548">以下示例将转换<xref:System.Char>值 （Unicode 字符） 到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-548">The following example converts <xref:System.Char> values (Unicode characters) to <xref:System.Decimal> numbers.</span></span> <span data-ttu-id="7b8d9-549">此转换要求 op_Implicit 运算符在 Visual Basic 中，但不是在 C# 和 c + +。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-549">This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromchar.cpp#1)]
 [!code-csharp[System.Decimal.ConvFrom.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromchar.cs#1)]
 [!code-vb[System.Decimal.ConvFrom.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromchar.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-550">要转换的 16 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-550">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-551">定义从 16 位有符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-551">Defines an implicit conversion of a 16-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-552">转换后的 16 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-552">The converted 16-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-553">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-553">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7b8d9-554">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-554">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7b8d9-555">以下示例将转换<xref:System.Int16>值复制到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-555">The following example converts <xref:System.Int16> values to <xref:System.Decimal> numbers.</span></span> <span data-ttu-id="7b8d9-556">此转换要求 op_Implicit 运算符在 Visual Basic 中，但不是在 C# 和 c + +。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-556">This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint16.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint16.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint16.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-557">要转换的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-557">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-558">定义从 32 位有符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-558">Defines an implicit conversion of a 32-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-559">转换后的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-559">The converted 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-560">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-560">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7b8d9-561">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-561">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7b8d9-562">以下示例将转换<xref:System.Int32>值复制到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-562">The following example converts <xref:System.Int32> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint32.cpp#2)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint32.cs#2)]
 [!code-vb[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint32.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-563">要转换的 64 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-563">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-564">定义从 64 位有符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-564">Defines an implicit conversion of a 64-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-565">转换后的 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-565">The converted 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-566">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-566">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7b8d9-567">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-567">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7b8d9-568">以下示例将转换<xref:System.Int64>值复制到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-568">The following example converts <xref:System.Int64> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint64.cpp#1)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint64.cs#1)]
 [!code-vb[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint64.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-569">要转换的 8 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-569">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-570">定义从 8 位有符号整数到 <see cref="T:System.Decimal" /> 值的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-570">Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Decimal" />.</span></span>  
  
 <span data-ttu-id="7b8d9-571">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-571">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-572">转换后的 8 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-572">The converted 8-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-573">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-573">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7b8d9-574">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-574">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7b8d9-575">以下示例将转换<xref:System.SByte>值复制到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-575">The following example converts <xref:System.SByte> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromsbyte.cpp#4)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromsbyte.cs#4)]
 [!code-vb[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromsbyte.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-576">要转换的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-576">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-577">定义从 16 位无符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-577">Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
 <span data-ttu-id="7b8d9-578">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-578">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-579">已转换的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-579">The converted 16-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-580">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-580">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7b8d9-581">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-581">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7b8d9-582">以下示例将转换<xref:System.UInt16>值复制到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-582">The following example converts <xref:System.UInt16> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint16.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint16.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint16.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-583">要转换的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-583">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-584">定义从 32 位无符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-584">Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
 <span data-ttu-id="7b8d9-585">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-585">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-586">已转换的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-586">The converted 32-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-587">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-587">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7b8d9-588">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-588">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7b8d9-589">以下示例将转换<xref:System.UInt32>值复制到<xref:System.Decimal>数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-589">The following example converts <xref:System.UInt32> values to <xref:System.Decimal> numbers.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint32.cs#2)] 
 [!code-vb[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint32.vb#2)]   

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-590">要转换的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-590">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-591">定义从 64 位无符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-591">Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
 <span data-ttu-id="7b8d9-592">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-592">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-593">已转换的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-593">The converted 64-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-594">重载<xref:System.Decimal.op_Implicit%2A>方法定义的类型，编译器可自动转换从中<xref:System.Decimal>而无需使用显式强制转换运算符 （在 C# 中) 或调用转换函数 （在 Visual Basic 中) 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-594">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="7b8d9-595">它们扩大转换，不会丢失数据，不会引发<xref:System.OverflowException>异常。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-595">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="7b8d9-596">以下示例将转换<xref:System.UInt64>值复制到<xref:System.Decimal>使用数字<xref:System.UInt64>到<xref:System.Decimal>转换运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-596">The following example converts <xref:System.UInt64> values to <xref:System.Decimal> numbers by using the <xref:System.UInt64> to <xref:System.Decimal> conversion operator.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint64.cs#1)] 
 [!code-vb[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint64.vb#1)]   

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static decimal operator ++ (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Increment(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Increment(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator ++(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-597">要递增的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-597">The value to increment.</span></span></param>
        <summary><span data-ttu-id="7b8d9-598">将 <see cref="T:System.Decimal" /> 操作数增加 1。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-598">Increments the <see cref="T:System.Decimal" /> operand by 1.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-599"><paramref name="d" /> 增加 1 后的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-599">The value of <paramref name="d" /> incremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-600"><xref:System.Decimal.op_Increment%2A>方法定义的操作的递增运算符<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-600">The <xref:System.Decimal.op_Increment%2A> method defines the operation of the increment operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-601">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-601">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment1.cs#12)]  
  
 <span data-ttu-id="7b8d9-602">某些语言规则中的缺少递增运算符 （如 Visual Basic 中) 可以调用<xref:System.Decimal.op_Increment%2A>方法直接，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-602">Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Increment%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment1.vb#13)]  
  
 <span data-ttu-id="7b8d9-603">如果你的语言不支持自定义运算符，调用<xref:System.Decimal.Add%2A>方法相反，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-603">If your language does not support custom operators, call the <xref:System.Decimal.Add%2A> method instead, as the following example shows.</span></span>  
  
 [!code-csharp[System.Decimal.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment2.cs#14)]
 [!code-vb[System.Decimal.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment2.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-604">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-604">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-605">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-605">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-606">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-606">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7b8d9-607">返回一个值，该值指示两个 <see cref="T:System.Decimal" /> 对象是否具有不同的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-607">Returns a value that indicates whether two <see cref="T:System.Decimal" /> objects have different values.</span></span></summary>
        <returns>
          <span data-ttu-id="7b8d9-608">如果 <paramref name="d1" /> 和 <paramref name="d2" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-608"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-609"><xref:System.Decimal.op_Inequality%2A>方法定义的不相等运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-609">The <xref:System.Decimal.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-610">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-610">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/inequality1.cs#2)]
 [!code-vb[System.Decimal.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/inequality1.vb#2)]  
  
 <span data-ttu-id="7b8d9-611">如果你正在使用的语言不支持自定义运算符，你可以使用以下方法之一测试不相等：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-611">If the language you're using doesn't support custom operators, you can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="7b8d9-612">调用<xref:System.Decimal.Compare%2A>方法，指示两个之间的关系<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-612">Calling the <xref:System.Decimal.Compare%2A> method, which indicates the relationship between two <xref:System.Decimal> values.</span></span>  
  
-   <span data-ttu-id="7b8d9-613">调用<xref:System.Decimal.Equals%2A>方法并反转其值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-613">Calling the <xref:System.Decimal.Equals%2A> method and reversing its value.</span></span>  
  
 <span data-ttu-id="7b8d9-614">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b8d9-614">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-615">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-615">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-616">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-616">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7b8d9-617">返回一个值，该值指示指定的 <see cref="T:System.Decimal" /> 是否小于另一个指定的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-617">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns>
          <span data-ttu-id="7b8d9-618">如果 <paramref name="d1" /> 小于 <paramref name="d2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-618"><see langword="true" /> if <paramref name="d1" /> is less than <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-619"><xref:System.Decimal.op_LessThan%2A>方法定义的操作的小于运算符<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-619">The <xref:System.Decimal.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-620">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-620">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthan1.cs#15)]
 [!code-vb[System.Decimal.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan1.vb#15)]  
  
 <span data-ttu-id="7b8d9-621">不支持自定义运算符的语言可以调用<xref:System.Decimal.Compare%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-621">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="7b8d9-622">它们也可能是能够调用<xref:System.Decimal.op_LessThan%2A>方法直接，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-622">They may also be able to call the <xref:System.Decimal.op_LessThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan2.vb#16)]  
  
 <span data-ttu-id="7b8d9-623">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b8d9-623">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-624">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-624">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-625">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-625">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="7b8d9-626">返回一个值，该值指示指定的 <see cref="T:System.Decimal" /> 是小于还是等于另一个指定的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-626">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than or equal to another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns>
          <span data-ttu-id="7b8d9-627">如果 <paramref name="d1" /> 小于等于 <paramref name="d2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-627"><see langword="true" /> if <paramref name="d1" /> is less than or equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-628"><xref:System.Decimal.op_LessThanOrEqual%2A>方法定义的运算越少比或相等运算符<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-628">The <xref:System.Decimal.op_LessThanOrEqual%2A> method defines the operation of the less than or equal operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-629">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-629">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthanorequal1.cs#17)]
 [!code-vb[System.Decimal.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal1.vb#17)]  
  
 <span data-ttu-id="7b8d9-630">不支持自定义运算符的语言可以调用<xref:System.Decimal.Compare%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-630">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="7b8d9-631">它们也可能是能够调用<xref:System.Decimal.op_LessThanOrEqual%2A>方法直接，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-631">They may also be able to call the <xref:System.Decimal.op_LessThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal2.vb#18)]  
  
 <span data-ttu-id="7b8d9-632">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b8d9-632">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static decimal operator % (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Modulus(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator %(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-633">被除数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-633">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-634">除数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-634">The divisor.</span></span></param>
        <summary><span data-ttu-id="7b8d9-635">返回两个指定 <see cref="T:System.Decimal" /> 值相除所得的余数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-635">Returns the remainder resulting from dividing two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-636">该余数是由 <paramref name="d1" /> 除以 <paramref name="d2" /> 所得。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-636">The remainder resulting from dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-637"><xref:System.Decimal.op_Modulus%2A>运算符定义返回两个指定相除所得的余数的余数运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-637">The <xref:System.Decimal.op_Modulus%2A> operator defines the remainder operation that returns the remainder resulting from dividing two specified <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-638">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-638">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/modulus1.cs#19)]
 [!code-vb[System.Decimal.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/modulus1.vb#19)]  
  
 <span data-ttu-id="7b8d9-639">余数运算返回的值的符号取决于除数的符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-639">The sign of the value returned by the remainder operation depends on the sign of dividend.</span></span> <span data-ttu-id="7b8d9-640">如果被除数为正，余数运算返回正结果;如果它为负，余数运算返回负数的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-640">If dividend is positive, the remainder operation returns a positive result; if it is negative, the remainder operation returns a negative result.</span></span>  
  
 <span data-ttu-id="7b8d9-641">此运算符的等效方法是<xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-641">The equivalent method for this operator is <xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7b8d9-642">如果你正在使用的语言不支持自定义运算符，调用<xref:System.Decimal.Remainder%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-642">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Remainder%2A> method instead.</span></span>  
         ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="7b8d9-643"><paramref name="d2" /> 为 <see langword="zero" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-643"><paramref name="d2" /> is <see langword="zero" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-644">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-644">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Remainder(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static decimal operator * (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Multiply(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator *(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-645">要相乘的第一个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-645">The first value to multiply.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-646">要相乘的第二个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-646">The second value to multiply.</span></span></param>
        <summary><span data-ttu-id="7b8d9-647">两个指定的 <see cref="T:System.Decimal" /> 值相乘。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-647">Multiplies two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-648"><paramref name="d1" /> 与 <paramref name="d2" /> 相乘的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-648">The result of multiplying <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-649"><xref:System.Decimal.op_Multiply%2A>方法定义的乘法运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-649">The <xref:System.Decimal.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-650">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-650">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/multiply1.cs#20)]
 [!code-vb[System.Decimal.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/multiply1.vb#20)]  
  
 <span data-ttu-id="7b8d9-651">如果你正在使用的语言不支持自定义运算符，调用<xref:System.Decimal.Multiply%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-651">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Multiply%2A> method instead.</span></span>  
  
 <span data-ttu-id="7b8d9-652">此运算符的等效方法是 <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b8d9-652">The equivalent method for this operator is <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-653">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-653">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static decimal operator - (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Subtraction(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator -(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-654">被减数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-654">The minuend.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-655">减数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-655">The subtrahend.</span></span></param>
        <summary><span data-ttu-id="7b8d9-656">将两个指定的 <see cref="T:System.Decimal" /> 值相减。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-656">Subtracts two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-657"><paramref name="d2" /> 减 <paramref name="d1" /> 所得的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-657">The result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-658"><xref:System.Decimal.op_Subtraction%2A>方法定义的减法运算符，用于操作<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-658">The <xref:System.Decimal.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-659">它使代码如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-659">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/subtraction1.cs#21)]
 [!code-vb[System.Decimal.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/subtraction1.vb#21)]  
  
 <span data-ttu-id="7b8d9-660">如果你正在使用的语言不支持自定义运算符，调用<xref:System.Decimal.Subtract%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-660">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead.</span></span>  
  
 <span data-ttu-id="7b8d9-661">此运算符的等效方法是 <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b8d9-661">The equivalent method for this operator is <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-662">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-662">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static decimal operator - (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_UnaryNegation(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_UnaryNegation(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator -(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-663">要求反的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-663">The value to negate.</span></span></param>
        <summary><span data-ttu-id="7b8d9-664">对指定 <see cref="T:System.Decimal" /> 操作数的值求反。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-664">Negates the value of the specified <see cref="T:System.Decimal" /> operand.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-665"><paramref name="d" /> 乘以负一 (-1) 的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-665">The result of <paramref name="d" /> multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-666"><xref:System.Decimal.op_UnaryPlus%2A>方法定义的一元求反运算符 （或加法逆元运算符） 操作<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-666">The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-667">操作会生成一个值，当将其添加到原始编号产生 0 （零）。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-667">The operation produces a value that results in 0 (zero) when it is added to the original number.</span></span> <span data-ttu-id="7b8d9-668">不支持自定义运算符的语言可以调用<xref:System.Decimal.Negate%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-668">Languages that do not support custom operators can call the <xref:System.Decimal.Negate%2A> method instead.</span></span>  
  
 <span data-ttu-id="7b8d9-669">此运算符的等效方法是 <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b8d9-669">The equivalent method for this operator is <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Negate(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static decimal operator + (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_UnaryPlus(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_UnaryPlus(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator +(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-670">要返回的操作数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-670">The operand to return.</span></span></param>
        <summary><span data-ttu-id="7b8d9-671">返回 <see cref="T:System.Decimal" /> 操作数的值（操作数符号不变）。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-671">Returns the value of the <see cref="T:System.Decimal" /> operand (the sign of the operand is unchanged).</span></span></summary>
        <returns><span data-ttu-id="7b8d9-672">操作数 <paramref name="d" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-672">The value of the operand, <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-673"><xref:System.Decimal.op_UnaryPlus%2A>方法定义的一元正运算符的运算<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-673">The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Decimal> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b8d9-674">将数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-674">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <altmember cref="Overload:System.Decimal.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7b8d9-675">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-675">The string representation of the number to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-676">将数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-676">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-677"><paramref name="s" /> 中包含的数字的等效值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-677">The equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-678">参数`s`包含大量的窗体：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-678">Parameter `s` contains a number of the form:</span></span>  
  
 <span data-ttu-id="7b8d9-679">[ws][sign][digits,]digits[.fractional-digits][ws]</span><span class="sxs-lookup"><span data-stu-id="7b8d9-679">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="7b8d9-680">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-680">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="7b8d9-681">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-681">The following table describes each element.</span></span>  
  
|<span data-ttu-id="7b8d9-682">元素</span><span class="sxs-lookup"><span data-stu-id="7b8d9-682">Element</span></span>|<span data-ttu-id="7b8d9-683">描述</span><span class="sxs-lookup"><span data-stu-id="7b8d9-683">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="7b8d9-684">*ws*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-684">*ws*</span></span>|<span data-ttu-id="7b8d9-685">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-685">Optional white space.</span></span>|  
|<span data-ttu-id="7b8d9-686">*sign*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-686">*sign*</span></span>|<span data-ttu-id="7b8d9-687">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-687">An optional sign.</span></span>|  
|<span data-ttu-id="7b8d9-688">*digits*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-688">*digits*</span></span>|<span data-ttu-id="7b8d9-689">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-689">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="7b8d9-690">*，*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-690">*,*</span></span>|<span data-ttu-id="7b8d9-691">特定于区域性的千位分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-691">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="7b8d9-692">*.*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-692">*.*</span></span>|<span data-ttu-id="7b8d9-693">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-693">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="7b8d9-694">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-694">*fractional-digits*</span></span>|<span data-ttu-id="7b8d9-695">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-695">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="7b8d9-696">参数`s`使用解释<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-696">Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="7b8d9-697">这意味着该空白和千位分隔符可以但不是货币符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-697">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="7b8d9-698">显式定义的元素 (如货币符号、 千位分隔符和空白) 的可出现在`s`，可以使用两种<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>或<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-698">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use either the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7b8d9-699">参数`s`分析使用中的格式设置信息<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-699">Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> initialized for the current system culture.</span></span> <span data-ttu-id="7b8d9-700">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-700">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="7b8d9-701">若要分析使用的格式信息的一些其他区域性的字符串，请使用<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>或<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-701">To parse a string using the formatting information of some other culture, use the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7b8d9-702">如有必要的值`s`使用舍入到最接近舍入。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-702">If necessary, the value of `s` is rounded using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7b8d9-703">A<xref:System.Decimal>有 29 位精度。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-703">A <xref:System.Decimal> has 29 digits of precision.</span></span> <span data-ttu-id="7b8d9-704">如果`s`表示的数字，有多个 29 个数字，但具有小数部分，可以在范围内<xref:System.Decimal.MaxValue>和<xref:System.Decimal.MinValue>，数字舍入，不会被截断，到使用舍入到最接近的 29 位。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-704">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7b8d9-705">如果在分析操作过程中遇到分隔符`s`参数，以及适用的货币或十进制数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-705">If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="7b8d9-706">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-706">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-707">下面的代码示例使用<xref:System.Decimal.Parse%28System.String%29>方法，以便分析的字符串表示形式之间实现<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-707">The following code example uses the <xref:System.Decimal.Parse%28System.String%29> method to parse string representations of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#1)]
 [!code-vb[System.Decimal.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b8d9-708"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-708"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="7b8d9-709"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-709"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-710"><paramref name="s" /> 表示小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-710"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7b8d9-711">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-711">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="7b8d9-712"><see cref="T:System.Globalization.NumberStyles" /> 值的按位组合，指示可出现在 <c>s</c> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-712">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="7b8d9-713">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Number" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-713">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <summary><span data-ttu-id="7b8d9-714">将指定样式的数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-714">Converts the string representation of a number in a specified style to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-715"><see cref="T:System.Decimal" /> 数，它与由 <paramref name="s" /> 所指定的 <paramref name="style" /> 中包含的数字等效。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-715">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-716">`style`参数定义的样式元素 (如千位分隔符，空白区域和货币符号)，可以用在`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-716">The `style` parameter defines the style elements (such as thousands separators, white space, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="7b8d9-717">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-717">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="7b8d9-718">以下<xref:System.Globalization.NumberStyles>不支持成员：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-718">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="7b8d9-719">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-719">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="7b8d9-720">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="7b8d9-720">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="7b8d9-721">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-721">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="7b8d9-722">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-722">The following table describes each element.</span></span>  
  
|<span data-ttu-id="7b8d9-723">元素</span><span class="sxs-lookup"><span data-stu-id="7b8d9-723">Element</span></span>|<span data-ttu-id="7b8d9-724">描述</span><span class="sxs-lookup"><span data-stu-id="7b8d9-724">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="7b8d9-725">*ws*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-725">*ws*</span></span>|<span data-ttu-id="7b8d9-726">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-726">Optional white space.</span></span> <span data-ttu-id="7b8d9-727">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-727">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="7b8d9-728">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-728">A culture-specific currency symbol.</span></span> <span data-ttu-id="7b8d9-729">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>当前区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-729">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="7b8d9-730">当前区域性的货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-730">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7b8d9-731">*sign*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-731">*sign*</span></span>|<span data-ttu-id="7b8d9-732">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-732">An optional sign.</span></span> <span data-ttu-id="7b8d9-733">符号可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-733">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7b8d9-734">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-734">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7b8d9-735">*digits*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-735">*digits*</span></span>|<span data-ttu-id="7b8d9-736">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-736">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="7b8d9-737">*，*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-737">*,*</span></span>|<span data-ttu-id="7b8d9-738">特定于区域性的千位分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-738">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="7b8d9-739">当前区域性的千位分隔符可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-739">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7b8d9-740">*.*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-740">*.*</span></span>|<span data-ttu-id="7b8d9-741">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-741">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="7b8d9-742">当前区域性的小数点符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-742">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7b8d9-743">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-743">*fractional-digits*</span></span>|<span data-ttu-id="7b8d9-744">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-744">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="7b8d9-745">小数位数可以出现在`s`才`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-745">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7b8d9-746">*e*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-746">*e*</span></span>|<span data-ttu-id="7b8d9-747">E 或者 E 字符，它指示的值用在指数记数法表示。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-747">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="7b8d9-748">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-748">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
  
 <span data-ttu-id="7b8d9-749">仅为数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None>样式) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-749">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully.</span></span> <span data-ttu-id="7b8d9-750">剩余<xref:System.Globalization.NumberStyles>成员控件可能但不是需要输入字符串中存在的元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-750">The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="7b8d9-751">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-751">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="7b8d9-752">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="7b8d9-752">NumberStyles value</span></span>|<span data-ttu-id="7b8d9-753">除数字之外的 s 中允许的元素</span><span class="sxs-lookup"><span data-stu-id="7b8d9-753">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="7b8d9-754">*数字*仅元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-754">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="7b8d9-755">*.*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-755">The *.*</span></span> <span data-ttu-id="7b8d9-756">和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-756">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="7b8d9-757">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-757">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="7b8d9-758">此标志在窗体支持值*数字*E*数字*; 其他标志需要为成功分析元素如正负符号和小数点符号的字符串。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-758">This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="7b8d9-759">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-759">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="7b8d9-760">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-760">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="7b8d9-761">*登录*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-761">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="7b8d9-762">*登录*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-762">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="7b8d9-763">*登录*在括号内包含的数字值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-763">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="7b8d9-764">*，*元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-764">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="7b8d9-765">* $ *元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-765">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="7b8d9-766">全部。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-766">All.</span></span> <span data-ttu-id="7b8d9-767">`s`参数不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-767">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="7b8d9-768">*Ws*元素的开头或末尾`s`，*登录*开头`s`，和*。*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-768">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="7b8d9-769">符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-769">symbol.</span></span> <span data-ttu-id="7b8d9-770">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-770">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="7b8d9-771">`ws`， `sign`， *，*，和*。*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-771">The `ws`, `sign`, *,*, and *.*</span></span> <span data-ttu-id="7b8d9-772">元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-772">elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="7b8d9-773">所有样式，除`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-773">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="7b8d9-774">`s`使用中的格式设置信息分析参数<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-774">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="7b8d9-775">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-775">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="7b8d9-776">A<xref:System.Decimal>有 29 位精度。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-776">A <xref:System.Decimal> has 29 digits of precision.</span></span> <span data-ttu-id="7b8d9-777">如果`s`表示的数字，有多个 29 个数字，但具有小数部分，可以在范围内<xref:System.Decimal.MaxValue>和<xref:System.Decimal.MinValue>，数字舍入，不会被截断，到使用舍入到最接近的 29 位。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-777">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7b8d9-778">如果在遇到分隔符`s`分析操作期间的参数`styles`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>和<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>值，以及适用的货币或十进制数和组分隔符是相同的分析操作假定该分隔符是小数分隔符，而不是组分隔符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-778">If a separator is encountered in the `s` parameter during a parse operation, `styles` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> values, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="7b8d9-779">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-779">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-780">下面的代码示例使用<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29>方法，以便分析的字符串表示形式<xref:System.Decimal>值使用 EN-US 区域性。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-780">The following code example uses the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method to parse the string representations of <xref:System.Decimal> values using the en-US culture.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#2)]
 [!code-vb[System.Decimal.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b8d9-781"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-781"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7b8d9-782"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-782"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="7b8d9-783">或</span><span class="sxs-lookup"><span data-stu-id="7b8d9-783">-or-</span></span>  
  
 <span data-ttu-id="7b8d9-784"><paramref name="style" /> 为 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-784"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="7b8d9-785"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-785"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-786"><paramref name="s" /> 表示小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字</span><span class="sxs-lookup"><span data-stu-id="7b8d9-786"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7b8d9-787">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-787">The string representation of the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="7b8d9-788">一个 <see cref="T:System.IFormatProvider" />，它提供有关 <c>s</c> 的区域性特定分析信息。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-788">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific parsing information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="7b8d9-789">使用指定的区域性特定格式信息将数字的字符串表示形式转换为其 <see cref="T:System.Decimal" /> 等效项。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-789">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-790"><see cref="T:System.Decimal" /> 数，它与由 <paramref name="s" /> 所指定的 <paramref name="provider" /> 中包含的数字等效。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-790">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-791">此重载<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29>方法通常用于将可在多个方面与格式设置的文本转换<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-791">This overload of the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method is commonly used to convert text that can be formatted in a variety of ways to a <xref:System.Decimal> value.</span></span> <span data-ttu-id="7b8d9-792">例如，它可以用于将转换到 HTML 文本框中为数值用户输入的文本。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-792">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="7b8d9-793">`s`参数包含一个数字的窗体：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-793">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="7b8d9-794">[ws][sign][digits,]digits[.fractional-digits][ws]</span><span class="sxs-lookup"><span data-stu-id="7b8d9-794">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="7b8d9-795">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-795">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="7b8d9-796">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-796">The following table describes each element.</span></span>  
  
|<span data-ttu-id="7b8d9-797">元素</span><span class="sxs-lookup"><span data-stu-id="7b8d9-797">Element</span></span>|<span data-ttu-id="7b8d9-798">描述</span><span class="sxs-lookup"><span data-stu-id="7b8d9-798">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="7b8d9-799">*ws*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-799">*ws*</span></span>|<span data-ttu-id="7b8d9-800">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-800">Optional white space.</span></span>|  
|<span data-ttu-id="7b8d9-801">*sign*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-801">*sign*</span></span>|<span data-ttu-id="7b8d9-802">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-802">An optional sign.</span></span>|  
|<span data-ttu-id="7b8d9-803">*digits*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-803">*digits*</span></span>|<span data-ttu-id="7b8d9-804">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-804">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="7b8d9-805">*，*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-805">*,*</span></span>|<span data-ttu-id="7b8d9-806">特定于区域性的千位分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-806">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="7b8d9-807">*.*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-807">*.*</span></span>|<span data-ttu-id="7b8d9-808">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-808">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="7b8d9-809">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-809">*fractional-digits*</span></span>|<span data-ttu-id="7b8d9-810">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-810">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="7b8d9-811">`s`参数被解释使用<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-811">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="7b8d9-812">这意味着该空白和千位分隔符可以但不是货币符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-812">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="7b8d9-813">若要显式定义的元素 (如货币符号、 千位分隔符和空白区域)，可出现在`s`，使用<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-813">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7b8d9-814">`provider`参数是<xref:System.IFormatProvider>实现，如<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-814">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="7b8d9-815">`provider`参数提供区域性特定信息在分析中使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-815">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="7b8d9-816">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-816">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="7b8d9-817">A<xref:System.Decimal>对象有 29 位精度。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-817">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="7b8d9-818">如果`s`表示的数字，有多个 29 个数字，但具有小数部分，可以在范围内<xref:System.Decimal.MaxValue>和<xref:System.Decimal.MinValue>，数字舍入，不会被截断，到使用舍入到最接近的 29 位。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-818">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7b8d9-819">如果在遇到分隔符`s`期间执行分析操作，并适用的货币或小数位的参数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-819">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="7b8d9-820">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-820">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-821">下面的示例是按钮单击事件处理程序的 Web 窗体。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-821">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="7b8d9-822">它使用返回的数组<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>属性来确定用户的区域设置。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-822">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="7b8d9-823">它然后实例化<xref:System.Globalization.CultureInfo>对应于该区域设置的对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-823">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="7b8d9-824"><xref:System.Globalization.NumberFormatInfo>对象所属的<xref:System.Globalization.CultureInfo>对象随后会传递给<xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29>方法将用户输入转换为<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-824">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[ParseMethod#3](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#3)]
 [!code-vb[ParseMethod#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b8d9-825"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-825"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="7b8d9-826"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-826"><paramref name="s" /> is not of the correct format</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-827"><paramref name="s" /> 表示小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字</span><span class="sxs-lookup"><span data-stu-id="7b8d9-827"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Decimal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7b8d9-828">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-828">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="7b8d9-829"><see cref="T:System.Globalization.NumberStyles" /> 值的按位组合，指示可出现在 <c>s</c> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-829">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="7b8d9-830">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Number" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-830">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <param name="provider"><span data-ttu-id="7b8d9-831">一个 <see cref="T:System.IFormatProvider" /> 对象，提供有关 <c>s</c> 的格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-831">An <see cref="T:System.IFormatProvider" /> object that supplies culture-specific information about the format of <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="7b8d9-832">使用指定样式和区域性特定格式将数字的字符串表示形式转换为其 <see cref="T:System.Decimal" /> 等效项。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-832">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-833"><see cref="T:System.Decimal" /> 数，它与 <paramref name="s" /> 和 <paramref name="style" /> 所指定的 <paramref name="provider" /> 中包含的数字等效。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-833">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-834">`style`参数定义的允许的格式`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-834">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="7b8d9-835">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-835">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="7b8d9-836">以下<xref:System.Globalization.NumberStyles>不支持成员：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-836">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="7b8d9-837">根据值`style`、`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-837">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="7b8d9-838">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="7b8d9-838">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="7b8d9-839">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-839">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="7b8d9-840">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-840">The following table describes each element.</span></span>  
  
|<span data-ttu-id="7b8d9-841">元素</span><span class="sxs-lookup"><span data-stu-id="7b8d9-841">Element</span></span>|<span data-ttu-id="7b8d9-842">描述</span><span class="sxs-lookup"><span data-stu-id="7b8d9-842">Description</span></span>|  
|-------------|-----------------|  
|*$*|<span data-ttu-id="7b8d9-843">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-843">A culture-specific currency symbol.</span></span> <span data-ttu-id="7b8d9-844">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A>和<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>属性<xref:System.Globalization.NumberFormatInfo>返回对象<xref:System.IFormatProvider.GetFormat%2A>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-844">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="7b8d9-845">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-845">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7b8d9-846">*ws*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-846">*ws*</span></span>|<span data-ttu-id="7b8d9-847">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-847">Optional white space.</span></span> <span data-ttu-id="7b8d9-848">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-848">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7b8d9-849">*sign*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-849">*sign*</span></span>|<span data-ttu-id="7b8d9-850">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-850">An optional sign.</span></span> <span data-ttu-id="7b8d9-851">符号可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>标志，它可以出现在末尾`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-851">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7b8d9-852">可以在使用括号`s`以指示负值，如果`style`包括<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-852">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7b8d9-853">*digits*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-853">*digits*</span></span>|<span data-ttu-id="7b8d9-854">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-854">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="7b8d9-855">*，*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-855">*,*</span></span>|<span data-ttu-id="7b8d9-856">特定于区域性的千位分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-856">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="7b8d9-857">千位分隔符的所定义的区域性`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-857">The thousands separator of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7b8d9-858">*.*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-858">*.*</span></span>|<span data-ttu-id="7b8d9-859">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-859">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="7b8d9-860">通过定义的区域性的小数点符号`provider`可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-860">The decimal point symbol of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7b8d9-861">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-861">*fractional-digits*</span></span>|<span data-ttu-id="7b8d9-862">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-862">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="7b8d9-863">小数位数可以出现在`s`才`style`包括<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-863">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7b8d9-864">*e*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-864">*e*</span></span>|<span data-ttu-id="7b8d9-865">E 或者 E 字符，它指示的值用在指数记数法表示。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-865">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="7b8d9-866">`s`参数可以表示指数记数法的数字，如果`style`包括<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-866">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
  
 <span data-ttu-id="7b8d9-867">仅为数字的字符串 (它对应于<xref:System.Globalization.NumberStyles.None>样式) 总是可以分析成功。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-867">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully.</span></span> <span data-ttu-id="7b8d9-868">剩余<xref:System.Globalization.NumberStyles>成员控件可能但不是需要输入字符串中存在的元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-868">The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="7b8d9-869">下表指示个别<xref:System.Globalization.NumberStyles>成员影响中可能存在的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-869">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="7b8d9-870">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="7b8d9-870">NumberStyles value</span></span>|<span data-ttu-id="7b8d9-871">除数字之外的 s 中允许的元素</span><span class="sxs-lookup"><span data-stu-id="7b8d9-871">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="7b8d9-872">*数字*仅元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-872">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="7b8d9-873">*.*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-873">The *.*</span></span> <span data-ttu-id="7b8d9-874">和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-874">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="7b8d9-875">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-875">The `s` parameter can also use exponential notation.</span></span>  <span data-ttu-id="7b8d9-876">此标志在窗体支持值*数字*E*数字*; 其他标志需要为成功分析元素如正负符号和小数点符号的字符串。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-876">This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="7b8d9-877">*Ws*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-877">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="7b8d9-878">*Ws*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-878">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="7b8d9-879">*登录*开头的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-879">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="7b8d9-880">*登录*结尾的元素`s`。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-880">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="7b8d9-881">*登录*在括号内包含的数字值的窗体中的元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-881">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="7b8d9-882">*，*元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-882">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="7b8d9-883">* $ *元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-883">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="7b8d9-884">全部。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-884">All.</span></span> <span data-ttu-id="7b8d9-885">`s`参数不能表示十六进制数或指数记数法的数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-885">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="7b8d9-886">*Ws*元素的开头或末尾`s`，*登录*开头`s`，和*。*符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-886">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.* symbol.</span></span> <span data-ttu-id="7b8d9-887">`s`参数还可以使用指数记数法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-887">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="7b8d9-888">`ws`， `sign`， *，*，和*。*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-888">The `ws`, `sign`, *,*, and *.*</span></span> <span data-ttu-id="7b8d9-889">元素。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-889">elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="7b8d9-890">所有样式，除`s`无法表示十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-890">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="7b8d9-891">`provider`参数是<xref:System.IFormatProvider>实现，如<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-891">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="7b8d9-892">`provider`参数提供区域性特定信息在分析中使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-892">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="7b8d9-893">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-893">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="7b8d9-894">A<xref:System.Decimal>对象有 29 位精度。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-894">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="7b8d9-895">如果`s`表示的数字，有多个 29 个数字，但具有小数部分，可以在范围内<xref:System.Decimal.MaxValue>和<xref:System.Decimal.MinValue>，数字舍入，不会被截断，到使用舍入到最接近的 29 位。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-895">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7b8d9-896">如果在遇到分隔符`s`期间执行分析操作，并适用的货币或小数位的参数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-896">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="7b8d9-897">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-897">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-898">下面的示例使用的各种`style`和`provider`参数来分析的字符串表示形式<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-898">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Decimal.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#3)]
 [!code-vb[System.Decimal.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="7b8d9-899"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-899"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-900"><paramref name="s" /> 表示小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-900"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b8d9-901"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-901"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7b8d9-902"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-902"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="7b8d9-903">或</span><span class="sxs-lookup"><span data-stu-id="7b8d9-903">-or-</span></span>  
  
 <span data-ttu-id="7b8d9-904"><paramref name="style" /> 为 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-904"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public static decimal Remainder (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Remainder(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Remainder(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remainder (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Remainder(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-905">被除数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-905">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-906">除数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-906">The divisor.</span></span></param>
        <summary><span data-ttu-id="7b8d9-907">计算两个 <see cref="T:System.Decimal" /> 值相除后的余数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-907">Computes the remainder after dividing two <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-908">将 <paramref name="d1" /> 除以 <paramref name="d2" /> 后的余数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-908">The remainder after dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-909">下面的示例使用<xref:System.Decimal.Remainder%2A>方法以计算在一系列除法运算的余数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-909">The following example uses the <xref:System.Decimal.Remainder%2A> method to calculate the remainder in a series of division operations.</span></span>  
  
 [!code-csharp[System.Decimal.Remainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.remainder/cs/remainder.cs#1)]
 [!code-vb[System.Decimal.Remainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.remainder/vb/remainder.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="7b8d9-910"><paramref name="d2" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-910"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-911">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-911">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b8d9-912">将值舍入到最接近的整数或指定的小数位数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-912">Rounds a value to the nearest integer or specified number of decimal places.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-913">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-913">A decimal number to round.</span></span></param>
        <summary><span data-ttu-id="7b8d9-914">将小数值舍入到最接近的整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-914">Rounds a decimal value to the nearest integer.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-915">最接近 <paramref name="d" /> 参数的整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-915">The integer that is nearest to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="7b8d9-916">如果 <paramref name="d" /> 正好处于两个整数中间，其中一个整数为偶数，另一个整数为奇数，则返回偶数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-916">If <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-917">此方法的行为遵循 IEEE 标准 754，第 4 部分。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-917">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="7b8d9-918">这种舍入有时称为*舍入一半甚至*或*银行家舍入法*。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-918">This kind of rounding is sometimes called *round half to even* or *banker's rounding*.</span></span> <span data-ttu-id="7b8d9-919">它最小化而导致的持续舍入中在单方向上的中点值舍入误差。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-919">It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</span></span> <span data-ttu-id="7b8d9-920">它等效于调用<xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29>方法替换`mode`参数<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-920">It is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-921">下面的示例将舍入的一系列<xref:System.Decimal>介于 100 和 102 到最接近的整数的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-921">The following example rounds a range of <xref:System.Decimal> values between 100 and 102 to the nearest integer.</span></span> <span data-ttu-id="7b8d9-922">由于该方法使用银行家舍入，请注意 100.5 到 100 和 101.5 舍入到 102 将舍入。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-922">Because the method uses banker's rounding, note that 100.5 rounds to 100 and 101.5 rounds to 102.</span></span>  
  
 [!code-csharp[System.Decimal.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round1.cs#1)]
 [!code-vb[System.Decimal.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-923">结果在 <see cref="T:System.Decimal" /> 值范围之外。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-923">The result is outside the range of a <see cref="T:System.Decimal" /> value.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-924">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-924">A decimal number to round.</span></span></param>
        <param name="decimals"><span data-ttu-id="7b8d9-925">指定数字要舍入到的小数位数的值，范围从 0 到 28。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-925">A value from 0 to 28 that specifies the number of decimal places to round to.</span></span></param>
        <summary><span data-ttu-id="7b8d9-926">将 <see cref="T:System.Decimal" /> 值舍入到指定的小数位数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-926">Rounds a <see cref="T:System.Decimal" /> value to a specified number of decimal places.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-927">舍入到 <paramref name="decimals" /> 的小数位数等于 <paramref name="d" /> 的小数位数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-927">The decimal number equivalent to <paramref name="d" /> rounded to <paramref name="decimals" /> number of decimal places.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-928">此方法等效于调用<xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>方法替换`mode`参数<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>。当`d`为完全偶数两个舍入的值，结果是最右边小数位中有偶数位的舍入的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-928">This method is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.When `d` is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position.</span></span> <span data-ttu-id="7b8d9-929">例如，当舍入为两位小数时，值 2.345 变成 2.34，而值 2.355 变成 2.36。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-929">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span></span> <span data-ttu-id="7b8d9-930">此过程被称为*向偶舍*，或*银行家舍入法*。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-930">This process is known as *rounding toward even*, or *banker's rounding*.</span></span> <span data-ttu-id="7b8d9-931">它最小化而导致的持续舍入中在单方向上的中点值舍入误差。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-931">It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-932">下面的示例将多个舍入`Decimal`限于指定数目的使用的小数位数的值`Round`方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-932">The following example rounds several `Decimal` values to a specified number of decimal places using the `Round` method.</span></span>  
  
 [!code-csharp[System.Decimal.Round#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round12.cs#12)]
 [!code-vb[System.Decimal.Round#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round12.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7b8d9-933"><paramref name="decimals" /> 不是 0 到 28 之间的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-933"><paramref name="decimals" /> is not a value from 0 to 28.</span></span></exception>
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
        <altmember cref="M:System.Decimal.Truncate(System.Decimal)" />
        <altmember cref="M:System.Math.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-934">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-934">A decimal number to round.</span></span></param>
        <param name="mode"><span data-ttu-id="7b8d9-935">一个值，指定当 <c>d</c> 正好处于另两个数字中间时如何舍入。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-935">A value that specifies how to round <c>d</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="7b8d9-936">将小数值舍入到最接近的整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-936">Rounds a decimal value to the nearest integer.</span></span> <span data-ttu-id="7b8d9-937">一个参数，指定当一个值正好处于另两个数中间时如何舍入这个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-937">A parameter specifies how to round the value if it is midway between two other numbers.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-938">最接近 <paramref name="d" /> 参数的整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-938">The integer that is nearest to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="7b8d9-939">如果 <paramref name="d" /> 位于两个数字的中间，其中一个为偶数，另一个为奇数，则 <paramref name="mode" /> 参数确定返回这两个数字中的哪一个。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-939">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-940">在点值，结果中的最低有效位数后的值是两个数字之间精确的一半。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-940">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="7b8d9-941">例如，7.5 是点值，如果它是要舍入为整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-941">For example, 7.5 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="7b8d9-942">对于点值，而无需使用舍入的约定，由指定最接近的值无法轻松地标识操作`mode`自变量。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-942">For midpoint values, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument.</span></span> <span data-ttu-id="7b8d9-943"><xref:System.Decimal.Round%2A>方法支持两个舍入约定用于处理中点值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-943">The <xref:System.Decimal.Round%2A> method supports two rounding conventions for handling midpoint values.</span></span>  
  
 <span data-ttu-id="7b8d9-944">从零开始的舍入。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-944">Rounding away from zero.</span></span>  
 <span data-ttu-id="7b8d9-945">中点值舍入为从零开始的下一个编号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-945">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="7b8d9-946">例如，3.5 则舍入为 4，5 到 4.5 轮次，-3.5 舍入到-4，和-4.5 对齐舍入到-5。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-946">For example, 3.5 rounds to 4, 4.5 rounds to 5, -3.5 rounds to -4, and -4.5 rounds to -5.</span></span> <span data-ttu-id="7b8d9-947">这种形式的舍入由<xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType>枚举成员。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-947">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="7b8d9-948">向远离零舍入是舍入最广为人知的窗体。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-948">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="7b8d9-949">舍入甚至，或银行家舍入</span><span class="sxs-lookup"><span data-stu-id="7b8d9-949">Rounding to even, or banker's rounding</span></span>  
 <span data-ttu-id="7b8d9-950">中点值舍入为最接近的偶数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-950">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="7b8d9-951">例如，3.5 和 4.5 舍入为 4，和-3.5 和-4.5 对齐舍入到-4。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-951">For example, both 3.5 and 4.5 round to 4, and both -3.5 and -4.5 round to -4.</span></span> <span data-ttu-id="7b8d9-952">这种形式的舍入由<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>枚举成员。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-952">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="7b8d9-953">舍入到最接近是舍入财务和统计操作中使用的标准形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-953">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="7b8d9-954">它符合 IEEE 标准 754，第 4 部分。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-954">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="7b8d9-955">多个舍入操作中使用时，它减少了引起持续舍入的一个方向的中点值则舍入误差。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-955">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="7b8d9-956">在某些情况下，此舍入误差非常显著。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-956">In some cases, this rounding error can be significant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-957">下面的示例显示返回的值<xref:System.Math.Round%28System.Decimal%29>方法，<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>方法替换`mode`参数<xref:System.MidpointRounding.ToEven>，和<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>方法替换`mode`参数<xref:System.MidpointRounding.AwayFromZero>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-957">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7b8d9-958"><paramref name="mode" /> 不是 <see cref="T:System.MidpointRounding" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-958"><paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-959">结果超出了 <see cref="T:System.Decimal" /> 对象的范围。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-959">The result is outside the range of a <see cref="T:System.Decimal" /> object.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-960">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-960">A decimal number to round.</span></span></param>
        <param name="decimals"><span data-ttu-id="7b8d9-961">返回值中的有效小数位数（精度）。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-961">The number of significant decimal places (precision) in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="7b8d9-962">一个值，指定当 <c>d</c> 正好处于另两个数字中间时如何舍入。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-962">A value that specifies how to round <c>d</c> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="7b8d9-963">将小数值舍入到指定精度。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-963">Rounds a decimal value to a specified precision.</span></span> <span data-ttu-id="7b8d9-964">一个参数，指定当一个值正好处于另两个数中间时如何舍入这个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-964">A parameter specifies how to round the value if it is midway between two other numbers.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-965">最接近 <paramref name="d" /> 参数的数字，其精度等于 <paramref name="decimals" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-965">The number that is nearest to the <paramref name="d" /> parameter with a precision equal to the <paramref name="decimals" /> parameter.</span></span> <span data-ttu-id="7b8d9-966">如果 <paramref name="d" /> 位于两个数字的中间，其中一个为偶数，另一个为奇数，则 <paramref name="mode" /> 参数确定返回这两个数字中的哪一个。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-966">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned.</span></span> <span data-ttu-id="7b8d9-967">如果 <paramref name="d" /> 的精度小于 <paramref name="decimals" />，则原样返回 <paramref name="d" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-967">If the precision of <paramref name="d" /> is less than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-968">`decimals`参数返回的值中指定的数有效小数位数和范围从 0 到 28。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-968">The `decimals` parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28.</span></span> <span data-ttu-id="7b8d9-969">如果`decimals`为零，则返回整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-969">If `decimals` is zero, an integer is returned.</span></span>  
  
 <span data-ttu-id="7b8d9-970">在点值，结果中的最低有效位数后的值是两个数字之间精确的一半。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-970">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="7b8d9-971">例如，3.47500 是如果它是由一个点值舍入两个小数位，而且 7.500 为点值是要舍入为整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-971">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="7b8d9-972">在这些情况下，而无需使用舍入的约定，由指定最接近的值不能轻松地标识操作`mode`自变量。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-972">In these cases, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument.</span></span> <span data-ttu-id="7b8d9-973"><xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>方法支持两个舍入约定用于处理中点值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-973">The <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method supports two rounding conventions for handling midpoint values.</span></span>  
  
 <span data-ttu-id="7b8d9-974">从零开始的舍入。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-974">Rounding away from zero.</span></span>  
 <span data-ttu-id="7b8d9-975">中点值舍入为从零开始的下一个编号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-975">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="7b8d9-976">例如，3.75 舍入到 3.8，3.85 舍入到 3.9，-3.75 舍入到-3.8，和-3.85 舍入到-3.9。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-976">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="7b8d9-977">这种形式的舍入由<xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType>枚举成员。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-977">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="7b8d9-978">向远离零舍入是舍入最广为人知的窗体。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-978">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="7b8d9-979">舍入甚至，或银行家舍入</span><span class="sxs-lookup"><span data-stu-id="7b8d9-979">Rounding to even, or banker's rounding</span></span>  
 <span data-ttu-id="7b8d9-980">中点值舍入为最接近的偶数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-980">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="7b8d9-981">例如，3.75 和 3.85 舍入到 3.8，和-3.75 和-3.85 舍入到-3.8。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-981">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="7b8d9-982">这种形式的舍入由<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>枚举成员。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-982">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="7b8d9-983">舍入到最接近是舍入财务和统计操作中使用的标准形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-983">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="7b8d9-984">它符合 IEEE 标准 754，第 4 部分。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-984">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="7b8d9-985">多个舍入操作中使用时，它减少了引起持续舍入的一个方向的中点值则舍入误差。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-985">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="7b8d9-986">在某些情况下，此舍入误差非常显著。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-986">In some cases, this rounding error can be significant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-987">下面的示例演示如何使用<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>方法替换<xref:System.MidpointRounding>枚举。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-987">The following example demonstrates how to use the <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7b8d9-988"><paramref name="decimals" /> 小于 0 或大于 28。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-988"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7b8d9-989"><paramref name="mode" /> 不是 <see cref="T:System.MidpointRounding" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-989"><paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-990">结果超出了 <see cref="T:System.Decimal" /> 对象的范围。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-990">The result is outside the range of a <see cref="T:System.Decimal" /> object.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static decimal Subtract (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Subtract(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Subtract(System::Decimal d1, System::Decimal d2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="7b8d9-991">被减数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-991">The minuend.</span></span></param>
        <param name="d2"><span data-ttu-id="7b8d9-992">减数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-992">The subtrahend.</span></span></param>
        <summary><span data-ttu-id="7b8d9-993">从一个 <see cref="T:System.Decimal" /> 值中减去指定的另一个值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-993">Subtracts one specified <see cref="T:System.Decimal" /> value from another.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-994"><paramref name="d2" /> 减 <paramref name="d1" /> 所得的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-994">The result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-995">下面的示例演示如何使用`Subtract`。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-995">The following example illustrates the use of `Subtract`.</span></span>  
  
 [!code-cpp[Decimal Example#4](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#4)]
 [!code-csharp[Decimal Example#4](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#4)]
 [!code-vb[Decimal Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-996">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-996">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-997">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-997">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7b8d9-998">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-998">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="7b8d9-999">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-999"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1000">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1000">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7b8d9-1001">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1001">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7b8d9-1002">建议的替代项是调用<xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1002">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-1003">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1003">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1004">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1004">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1005">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1005">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1006">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1006">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7b8d9-1007">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1007">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7b8d9-1008">建议的替代项是调用<xref:System.Decimal.ToByte%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToByte%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1008">The recommended alternative is to call either the <xref:System.Decimal.ToByte%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-1009">所得到的整数值小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1009">The resulting integer value is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-1010">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1010">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1011">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1011">This conversion is not supported.</span></span> <span data-ttu-id="7b8d9-1012">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1012">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1013">无。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1013">None.</span></span> <span data-ttu-id="7b8d9-1014">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1014">This conversion is not supported.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7b8d9-1015">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1015">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-1016">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1016">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1017">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1017">This conversion is not supported.</span></span> <span data-ttu-id="7b8d9-1018">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1018">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1019">无。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1019">None.</span></span> <span data-ttu-id="7b8d9-1020">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1020">This conversion is not supported.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7b8d9-1021">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1021">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-1022">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1022">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1023">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1023">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1024">当前实例的值，未更改。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1024">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1025">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1025">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7b8d9-1026">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1026">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-1027">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1027">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1028">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1028">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1029">当前实例的值，已转换为 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1029">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1030">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1030">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7b8d9-1031">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1031">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7b8d9-1032">建议的替代项是调用<xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToDouble%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1032">The recommended alternative is to call either the <xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7b8d9-1033">因为<xref:System.Double>具有有效位比<xref:System.Decimal>，此操作可能会产生舍入误差。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1033">Because a <xref:System.Double> has fewer significant digits than a <xref:System.Decimal>, this operation may produce round-off errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-1034">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1034">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1035">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1035">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1036">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1036">The value of the current instance, converted to a <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1037">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1037">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7b8d9-1038">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1038">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7b8d9-1039">建议的替代项是调用<xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToInt16%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1039">The recommended alternative is to call either the <xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7b8d9-1040"><xref:System.Decimal>值舍入为最接近的整数值为零。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1040">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-1041">所得到的整数值小于 <see cref="F:System.Int16.MinValue" /> 或大于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1041">The resulting integer value is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-1042">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1042">The parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1043">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1043">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1044">当前实例的值，已转换为 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1044">The value of the current instance, converted to a <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1045">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1045">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7b8d9-1046">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1046">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7b8d9-1047">建议的替代项是调用<xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToInt32%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1047">The recommended alternative is to call either the <xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7b8d9-1048"><xref:System.Decimal>值舍入为最接近的整数值为零。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1048">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-1049">所得到的整数值小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1049">The resulting integer value is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-1050">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1050">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1051">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1051">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1052">当前实例的值，已转换为 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1052">The value of the current instance, converted to a <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1053">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1053">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7b8d9-1054">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1054">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7b8d9-1055">建议的替代项是调用<xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToInt64%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1055">The recommended alternative is to call either the <xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt64%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-1056">所得到的整数值小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1056">The resulting integer value is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-1057">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1057">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1058">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1058">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1059">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1059">The value of the current instance, converted to a <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1060">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1060">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7b8d9-1061">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1061">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7b8d9-1062">建议的替代项是调用<xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToSByte%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1062">The recommended alternative is to call either the <xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToSByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-1063">所得到的整数值小于 <see cref="F:System.SByte.MinValue" /> 或大于 <see cref="F:System.SByte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1063">The resulting integer value is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-1064">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1064">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1065">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1065">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1066">当前实例的值，已转换为 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1066">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1067">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1067">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7b8d9-1068">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1068">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7b8d9-1069">建议的替代项是调用<xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToSingle%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1069">The recommended alternative is to call either the <xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToSingle%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="7b8d9-1070">要将此 <see cref="T:System.Decimal" /> 实例的值转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1070">The type to which to convert the value of this <see cref="T:System.Decimal" /> instance.</span></span></param>
        <param name="provider"><span data-ttu-id="7b8d9-1071">一个 <see cref="T:System.IFormatProvider" /> 实现，提供有关返回值格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1071">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1072">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1072">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1073">当前实例的值，已转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1073">The value of the current instance, converted to a <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1074">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1074">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7b8d9-1075">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1075">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7b8d9-1076">建议的替代项是调用`static`(`Shared`在 Visual Basic 中)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1076">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b8d9-1077"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1077"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7b8d9-1078">不支持请求的类型转换。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1078">The requested type conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-1079">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1079">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1080">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1080">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1081">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1081">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1082">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1082">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7b8d9-1083">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1083">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7b8d9-1084">建议的替代项是调用<xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1084">The recommended alternative is to call either the <xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-1085">所得到的整数值小于 <see cref="F:System.UInt16.MinValue" /> 或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1085">The resulting integer value is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-1086">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1086">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1087">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1087">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1088">当前实例的值，已转换为 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1088">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1089">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1089">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7b8d9-1090">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1090">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7b8d9-1091">建议的替代项是调用<xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1091">The recommended alternative is to call either the <xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7b8d9-1092"><xref:System.Decimal>值舍入为最接近的整数值为零。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1092">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-1093">所得到的整数值小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1093">The resulting integer value is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-1094">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1094">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1095">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1095">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1096">当前实例的值，已转换为 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1096">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1097">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1097">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7b8d9-1098">它只能在 <xref:System.Decimal> 实例强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1098">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="7b8d9-1099">建议的替代项是调用<xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType>方法或<xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1099">The recommended alternative is to call either the <xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7b8d9-1100"><xref:System.Decimal>值舍入为最接近的整数值为零。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1100">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="7b8d9-1101">所得到的整数值小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1101">The resulting integer value is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="7b8d9-1102">启动回调的对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1102">The object that initiated the callback.</span></span> <span data-ttu-id="7b8d9-1103">当前未实现该参数的功能。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1103">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1104">在对象的反序列化完成时运行。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1104">Runs when the deserialization of an object has been completed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="7b8d9-1105"><see cref="T:System.Decimal" /> 对象包含无效数据或损坏的数据。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1105">The <see cref="T:System.Decimal" /> object contains invalid or corrupted data.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-1106">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1106">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1107">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1107">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1108">等效于 <paramref name="value" /> 的 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1108">An 8-bit unsigned integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1109">参数`value`舍入为最近的接近零，整数值并返回结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1109">Parameter `value` is rounded to the nearest integer value toward zero, and that result is returned.</span></span>  
  
 <span data-ttu-id="7b8d9-1110">你还可以将转换<xref:System.Decimal>通过为 8 位无符号整数的值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1110">You can also convert a <xref:System.Decimal> value to an 8-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7b8d9-1111">由于该运算符执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1111">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1112">下面的示例使用<xref:System.Decimal.ToByte%2A>方法将转换为十进制数字<xref:System.Byte>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1112">The following example uses the <xref:System.Decimal.ToByte%2A> method to convert decimal numbers to <xref:System.Byte> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tobyte/cs/tobyte_1.cs#1)]
 [!code-vb[System.Decimal.ToByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tobyte/vb/tobyte_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-1113"><paramref name="value" /> 小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1113"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToDouble(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (d As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-1114">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1114">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1115">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1115">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1116">与 <paramref name="d" /> 等效的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1116">A double-precision floating-point number equivalent to <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1117">此操作可能会产生舍入误差的双精度浮点数具有较少的有效位数多于由于<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1117">This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>  
  
 <span data-ttu-id="7b8d9-1118">你还可以将转换<xref:System.Decimal>到<xref:System.Double>值使用<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1118">You can also convert a <xref:System.Decimal> to a <xref:System.Double> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7b8d9-1119">由于转换可以导致精度损失，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1119">Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1120">下面的代码示例将`Decimal`数字转换<xref:System.Double>值使用`ToDouble`方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1120">The following code example converts `Decimal` numbers to <xref:System.Double> values using `ToDouble` method.</span></span>  
  
 [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]
 [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-1121">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1121">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1122">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 16 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1122">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1123">等效于 <paramref name="value" /> 的 16 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1123">A 16-bit signed integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1124">你还可以将转换<xref:System.Decimal>为通过使用 16 位整数的值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1124">You can also convert a <xref:System.Decimal> value to a 16-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7b8d9-1125">由于该运算符执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1125">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1126">下面的示例使用<xref:System.Decimal.ToInt16%2A>方法将转换为十进制数字<xref:System.Int16>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1126">The following example uses the <xref:System.Decimal.ToInt16%2A> method to convert decimal numbers to <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint16/cs/toint16_1.cs#1)]
 [!code-vb[System.Decimal.ToInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint16/vb/toint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-1127"><paramref name="value" /> 小于 <see cref="F:System.Int16.MinValue" /> 或大于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1127"><paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (d As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-1128">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1128">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1129">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1129">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1130">与 <paramref name="d" /> 的值等效的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1130">A 32-bit signed integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1131">返回值的十进制值; 的整数部分小数位数将被截断。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1131">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="7b8d9-1132">你还可以将转换<xref:System.Decimal>为通过使用 32 位整数的值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1132">You can also convert a <xref:System.Decimal> value to a 32-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7b8d9-1133">由于该运算符执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1133">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1134">下面的示例使用<xref:System.Decimal.ToInt32%2A>方法将转换为十进制数字<xref:System.Int32>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1134">The following example uses the <xref:System.Decimal.ToInt32%2A> method to convert decimal numbers to <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint32/cs/toint32_1.cs#1)]
 [!code-vb[System.Decimal.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint32/vb/toint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-1135"><paramref name="d" /> 小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1135"><paramref name="d" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (d As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-1136">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1136">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1137">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1137">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1138">与 <paramref name="d" /> 的值等效的 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1138">A 64-bit signed integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1139">返回值的十进制值; 的整数部分小数位数将被截断。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1139">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="7b8d9-1140">你还可以将转换<xref:System.Decimal>为通过使用 64 位整数的值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1140">You can also convert a <xref:System.Decimal> value to a 64-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7b8d9-1141">由于该运算符执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1141">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1142">下面的示例使用<xref:System.Decimal.ToInt64%2A>方法将转换为十进制数字<xref:System.Int64>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1142">The following example uses the <xref:System.Decimal.ToInt64%2A> method to convert decimal numbers to <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint64/cs/toint64_1.cs#1)]
 [!code-vb[System.Decimal.ToInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint64/vb/toint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-1143"><paramref name="d" /> 小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1143"><paramref name="d" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToOACurrency">
      <MemberSignature Language="C#" Value="public static long ToOACurrency (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToOACurrency(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToOACurrency(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToOACurrency (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToOACurrency(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-1144">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1144">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1145">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 OLE 自动化货币值，该值包含在一个 64 位有符号整数中。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1145">Converts the specified <see cref="T:System.Decimal" /> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1146">包含 <paramref name="value" /> 的 OLE 自动化等效值的 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1146">A 64-bit signed integer that contains the OLE Automation equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-1147">下面的代码示例使用`ToOACurrency`方法将转换`Decimal`为等效的 OLE 自动化货币值中包含的数字<xref:System.Int64>字段。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1147">The following code example uses the `ToOACurrency` method to convert `Decimal` numbers to the equivalent OLE Automation Currency values that are contained in <xref:System.Int64> fields.</span></span>  
  
 [!code-cpp[System.Decimal.OACurrency#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/tooacurrency.cpp#1)]
 [!code-csharp[System.Decimal.OACurrency#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/tooacurrency.cs#1)]
 [!code-vb[System.Decimal.OACurrency#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/tooacurrency.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.FromOACurrency(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToSByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-1148">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1148">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1149">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 8 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1149">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1150">等效于 <paramref name="value" /> 的 8 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1150">An 8-bit signed integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1151">你还可以将转换<xref:System.Decimal>通过为 8 位有符号整数的值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1151">You can also convert a <xref:System.Decimal> value to an 8-bit signed integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7b8d9-1152">由于该运算符执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1152">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1153">下面的示例使用<xref:System.Decimal.ToSByte%2A>方法将转换为十进制数字<xref:System.SByte>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1153">The following example uses the <xref:System.Decimal.ToSByte%2A> method to convert decimal numbers to <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToSByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tosbyte/cs/tosbyte1.cs#1)]
 [!code-vb[System.Decimal.ToSByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tosbyte/vb/tosbyte1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt16(System.Decimal)" />
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-1154"><paramref name="value" /> 小于 <see cref="F:System.SByte.MinValue" /> 或大于 <see cref="F:System.SByte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1154"><paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToSingle(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (d As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-1155">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1155">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1156">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1156">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1157">等效于 <paramref name="d" /> 的值的单精度浮点数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1157">A single-precision floating-point number equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1158">此操作可能会产生舍入误差的单精度浮点数具有较少的有效位数多于由于<xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1158">This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>  
  
 <span data-ttu-id="7b8d9-1159">你还可以将转换<xref:System.Decimal>到<xref:System.Single>值使用<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1159">You can also convert a <xref:System.Decimal> to a <xref:System.Single> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7b8d9-1160">由于转换可以导致精度损失，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1160">Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1161">下面的代码示例将`Decimal`数字转换<xref:System.Single>值使用`ToSingle`方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1161">The following code example converts `Decimal` numbers to <xref:System.Single> values using the `ToSingle` method.</span></span>  
  
 [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]
 [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b8d9-1162">将此实例的数字值转换为其等效的 <see cref="T:System.String" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1162">Converts the numeric value of this instance to its equivalent <see cref="T:System.String" /> representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7b8d9-1163">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1163">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1164">表示此实例的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1164">A string that represents the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1165"><xref:System.Decimal.ToString>方法格式<xref:System.Decimal>默认值 （"G"或常规） 中的值的当前区域性的格式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1165">The <xref:System.Decimal.ToString> method formats a <xref:System.Decimal> value in the default ("G", or general) format of the current culture.</span></span> <span data-ttu-id="7b8d9-1166">如果你想要指定其他文件格式或区域性，使用的其他重载<xref:System.Decimal.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1166">If you want to specify a different format or culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="7b8d9-1167">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1167">To use format</span></span>|<span data-ttu-id="7b8d9-1168">区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1168">For culture</span></span>|<span data-ttu-id="7b8d9-1169">使用的重载</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1169">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="7b8d9-1170">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1170">Default ("G") format</span></span>|<span data-ttu-id="7b8d9-1171">特定区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1171">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="7b8d9-1172">特定的格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1172">A specific format</span></span>|<span data-ttu-id="7b8d9-1173">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1173">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
|<span data-ttu-id="7b8d9-1174">特定的格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1174">A specific format</span></span>|<span data-ttu-id="7b8d9-1175">特定区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1175">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="7b8d9-1176">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1176">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="7b8d9-1177">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1177">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="7b8d9-1178">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1178">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1179">下面的示例显示<xref:System.Decimal>值使用默认<xref:System.Decimal.ToString>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1179">The following example displays a <xref:System.Decimal> value using the default <xref:System.Decimal.ToString> method.</span></span> <span data-ttu-id="7b8d9-1180">它还显示的字符串表示形式<xref:System.Decimal>值使用大量的标准格式说明符而导致的。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1180">It also displays the string representations of the <xref:System.Decimal> value that result from using a number of standard format specifiers.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#2)]
 [!code-vb[System.Decimal.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#2)]  
  
 <span data-ttu-id="7b8d9-1181">下面的示例显示帐户中的钱的总额。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1181">The following example displays the amount of money in an account.</span></span>  
  
 [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]
 [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]
 [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="7b8d9-1182">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1182">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1183">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1183">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1184">此实例的值的字符串表示形式，由 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1184">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1185"><xref:System.Decimal.ToString%28System.IFormatProvider%29>方法格式<xref:System.Decimal>默认值 （"G"或常规） 中的值指定区域性的格式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1185">The <xref:System.Decimal.ToString%28System.IFormatProvider%29> method formats a <xref:System.Decimal> value in the default ("G", or general) format of a specified culture.</span></span> <span data-ttu-id="7b8d9-1186">如果你想要指定不同的格式或当前区域性，使用的其他重载<xref:System.Decimal.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1186">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="7b8d9-1187">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1187">To use format</span></span>|<span data-ttu-id="7b8d9-1188">区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1188">For culture</span></span>|<span data-ttu-id="7b8d9-1189">使用的重载</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1189">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="7b8d9-1190">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1190">Default ("G") format</span></span>|<span data-ttu-id="7b8d9-1191">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1191">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="7b8d9-1192">特定的格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1192">A specific format</span></span>|<span data-ttu-id="7b8d9-1193">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1193">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
|<span data-ttu-id="7b8d9-1194">特定的格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1194">A specific format</span></span>|<span data-ttu-id="7b8d9-1195">特定区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1195">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="7b8d9-1196">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1196">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="7b8d9-1197">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1197">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="7b8d9-1198">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1198">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="7b8d9-1199">`provider`参数是<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法返回<xref:System.Globalization.NumberFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1199">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="7b8d9-1200">通常情况下，`provider`是<xref:System.Globalization.NumberFormatInfo>对象或<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1200">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="7b8d9-1201">`provider`参数提供区域性特定信息设置格式时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1201">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="7b8d9-1202">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1202">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="7b8d9-1203">要转换<xref:System.Decimal>为使用指定的区域性和一个特定的格式字符串，调用其字符串表示形式的值<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1203">To convert a <xref:System.Decimal> value to its string representation using a specified culture and a specific format string, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1204">下面的示例显示的字符串表示形式<xref:System.Decimal>值使用<xref:System.Globalization.CultureInfo>表示几种不同区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1204">The following example displays the string representation of a <xref:System.Decimal> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#3)]
 [!code-vb[System.Decimal.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="7b8d9-1205">标准或自定义的数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1205">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1206">使用指定的格式，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1206">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1207">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1207">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1208"><xref:System.Decimal.ToString%28System.String%29>方法格式<xref:System.Decimal>通过使用当前区域性的约定指定的格式的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1208">The <xref:System.Decimal.ToString%28System.String%29> method formats a <xref:System.Decimal> value in a specified format by using the conventions of the current culture.</span></span> <span data-ttu-id="7b8d9-1209">如果你想要使用默认值 （"G"或常规） 格式或指定不同的区域性，请使用其他重载的<xref:System.Decimal.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1209">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="7b8d9-1210">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1210">To use format</span></span>|<span data-ttu-id="7b8d9-1211">区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1211">For culture</span></span>|<span data-ttu-id="7b8d9-1212">使用的重载</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1212">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="7b8d9-1213">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1213">Default ("G") format</span></span>|<span data-ttu-id="7b8d9-1214">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1214">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="7b8d9-1215">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1215">Default ("G") format</span></span>|<span data-ttu-id="7b8d9-1216">特定区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1216">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="7b8d9-1217">特定的格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1217">A specific format</span></span>|<span data-ttu-id="7b8d9-1218">特定区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1218">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="7b8d9-1219"><xref:System.Decimal.ToString%2A>方法使用指定的标准或自定义数字格式字符串`format`参数将当前实例的值转换为其字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1219">The <xref:System.Decimal.ToString%2A> method uses the standard or custom numeric format string specified by the `format` parameter to convert the value of the current instance into its string representation.</span></span> <span data-ttu-id="7b8d9-1220">`format`参数可以是任何有效[标准数字格式说明符](~/docs/standard/base-types/standard-numeric-format-strings.md)除外 D、 R，X，以及的任意组合[自定义数字格式说明符](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1220">The `format` parameter can be any valid [standard numeric format specifier](~/docs/standard/base-types/standard-numeric-format-strings.md) except for D, R, and X, as well as any combination of [custom numeric format specifiers](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="7b8d9-1221">如果`format`是`null`或空字符串，此实例的返回值格式与常规的数字格式说明符 (G)。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1221">If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier (G).</span></span>  
  
 <span data-ttu-id="7b8d9-1222">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1222">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="7b8d9-1223">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1223">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="7b8d9-1224">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1224">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="7b8d9-1225">返回值的格式使用<xref:System.Globalization.NumberFormatInfo>为当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1225">The return value is formatted by using the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="7b8d9-1226">若要将应用指定的区域性的格式设置约定，请调用<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1226">To apply the formatting conventions of a specified culture, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1227">下面的示例显示<xref:System.Decimal>值使用每个支持标准数字格式说明符，以及两个自定义数字格式字符串。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1227">The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="7b8d9-1228">在将数字的值转换为字符串，该示例使用 EN-US 区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1228">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#4)]
 [!code-vb[System.Decimal.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="7b8d9-1229"><paramref name="format" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1229"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="7b8d9-1230">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1230">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="7b8d9-1231">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1231">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1232">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1232">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1233">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1233">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1234"><xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29>方法格式<xref:System.Double>采用指定区域性的指定格式的值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1234">The <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Double> value in a specified format of a specified culture.</span></span> <span data-ttu-id="7b8d9-1235">如果你想要使用默认格式或区域性设置，使用的其他重载<xref:System.Double.ToString%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1235">If you want to use default format or culture settings, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="7b8d9-1236">若要使用格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1236">To use format</span></span>|<span data-ttu-id="7b8d9-1237">区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1237">For culture</span></span>|<span data-ttu-id="7b8d9-1238">使用的重载</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1238">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="7b8d9-1239">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1239">Default ("G") format</span></span>|<span data-ttu-id="7b8d9-1240">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1240">Default (current) culture</span></span>|<xref:System.Double.ToString>|  
|<span data-ttu-id="7b8d9-1241">默认值 ("G") 格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1241">Default ("G") format</span></span>|<span data-ttu-id="7b8d9-1242">特定区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1242">A specific culture</span></span>|<xref:System.Double.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="7b8d9-1243">特定的格式</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1243">A specific format</span></span>|<span data-ttu-id="7b8d9-1244">默认值 （当前） 区域性</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1244">Default (current) culture</span></span>|<xref:System.Double.ToString%28System.String%29>|  
  
 <span data-ttu-id="7b8d9-1245">`format`参数可以是任何有效的标准数字格式说明符除外 D、 R 和 X，以及自定义数字格式说明符的任意组合。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1245">The `format` parameter can be any valid standard numeric format specifier except for D, R, and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="7b8d9-1246">如果`format`是`null`或空字符串，此实例的返回值格式与常规的数字格式说明符 ("G")。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1246">If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="7b8d9-1247">.NET Framework 提供了广泛的格式设置支持，以下的格式设置主题中的更详细地介绍：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1247">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="7b8d9-1248">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1248">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="7b8d9-1249">有关格式设置的详细信息，请参阅[格式化类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1249">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="7b8d9-1250">`provider`参数是<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法返回<xref:System.Globalization.NumberFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1250">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="7b8d9-1251">通常情况下，`provider`是<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1251">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="7b8d9-1252">`provider`参数提供区域性特定信息设置格式时使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1252">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="7b8d9-1253">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1253">If `provider` is `null`, the thread current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1254">下面的示例显示<xref:System.Decimal>值的每个支持标准数字格式说明符用于多个不同的区域性。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1254">The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers for several different cultures.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#5)]
 [!code-vb[System.Decimal.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="7b8d9-1255"><paramref name="format" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1255"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b8d9-1256">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1256">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1257">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1257">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1258">与 <paramref name="value" /> 的值等效的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1258">A 16-bit unsigned integer equivalent to the value of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1259">返回值的十进制值; 的整数部分小数位数将被截断。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1259">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="7b8d9-1260">你还可以将转换<xref:System.Decimal>为通过使用 16 位无符号整数的值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1260">You can also convert a <xref:System.Decimal> value to a 16-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7b8d9-1261">由于该运算符执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1261">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1262">下面的示例使用<xref:System.Decimal.ToUInt16%2A>方法将转换为十进制数字<xref:System.UInt16>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1262">The following example uses the <xref:System.Decimal.ToUInt16%2A> method to convert decimal numbers to <xref:System.UInt16> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint16/cs/touint16_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint16/vb/touint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt32(System.Decimal)" />
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-1263"><paramref name="value" /> 大于 <see cref="F:System.UInt16.MaxValue" /> 或小于 <see cref="F:System.UInt16.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1263"><paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (d As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-1264">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1264">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1265">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1265">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1266">与 <paramref name="d" /> 的值等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1266">A 32-bit unsigned integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1267">返回值的十进制值; 的整数部分小数位数将被截断。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1267">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="7b8d9-1268">你还可以将转换<xref:System.Decimal>通过为 32 位无符号整数的值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1268">You can also convert a <xref:System.Decimal> value to an 32-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7b8d9-1269">由于该运算符执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1269">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1270">下面的示例使用<xref:System.Decimal.ToUInt32%2A>方法将转换为十进制数字<xref:System.UInt32>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1270">The following example uses the <xref:System.Decimal.ToUInt32%2A> method to convert decimal numbers to <xref:System.UInt32> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint32/cs/touint32_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint32/vb/touint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt64(System.Decimal)" />
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-1271"><paramref name="d" /> 为负数或大于 <see cref="F:System.UInt32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1271"><paramref name="d" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (d As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-1272">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1272">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1273">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1273">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1274">与 <paramref name="d" /> 的值等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1274">A 64-bit unsigned integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1275">返回值的十进制值; 的整数部分小数位数将被截断。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1275">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="7b8d9-1276">你还可以将转换<xref:System.Decimal>为通过使用 64 位无符号整数的值<xref:System.Decimal.op_Explicit%2A>赋值运算符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1276">You can also convert a <xref:System.Decimal> value to an 64-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="7b8d9-1277">由于该运算符执行收缩转换，必须使用强制转换运算符在 C# 或 Visual Basic 中的转换函数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1277">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1278">下面的示例使用<xref:System.Decimal.ToUInt64%2A>方法将转换为十进制数字<xref:System.UInt64>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1278">The following example uses the <xref:System.Decimal.ToUInt64%2A> method to convert decimal numbers to <xref:System.UInt64> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint64/cs/touint64_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint64/vb/touint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="7b8d9-1279"><paramref name="d" /> 为负数或大于 <see cref="F:System.UInt64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1279"><paramref name="d" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="7b8d9-1280">要截断的十进制数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1280">The decimal number to truncate.</span></span></param>
        <summary><span data-ttu-id="7b8d9-1281">返回指定的 <see cref="T:System.Decimal" /> 的整数位，所有小数位均被放弃。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1281">Returns the integral digits of the specified <see cref="T:System.Decimal" />; any fractional digits are discarded.</span></span></summary>
        <returns><span data-ttu-id="7b8d9-1282"><paramref name="d" /> 向零舍入为最接近的整数后的结果。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1282">The result of <paramref name="d" /> rounded toward zero, to the nearest whole number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1283">此方法将舍入`d`接近零，为最接近的整数，它对应于放弃在小数点之后的所有位。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1283">This method rounds `d` toward zero, to the nearest whole number, which corresponds to discarding any digits after the decimal point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1284">下面的代码示例使用`Truncate`方法，丢弃了多个将小数位数`Decimal`值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1284">The following code example uses the `Truncate` method to discard the fractional digits of several `Decimal` values.</span></span>  
  
 [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]
 [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]
 [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b8d9-1285">将数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1285">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span> <span data-ttu-id="7b8d9-1286">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1286">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.Decimal.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.ReadOnlySpan{System.Char},System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.String,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7b8d9-1287">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1287">The string representation of the number to convert.</span></span></param>
        <param name="result">To be added.</param>
        <summary><span data-ttu-id="7b8d9-1288">将数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1288">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span> <span data-ttu-id="7b8d9-1289">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1289">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="7b8d9-1290">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1290"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1291">此重载区别<xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType>通过返回一个布尔值，该值指示是否分析操作成功，而不是返回的已分析的数字值的方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1291">This overload differs from the <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="7b8d9-1292">不必使用异常处理来测试是否<xref:System.FormatException>的事件中`s`无效，无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1292">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="7b8d9-1293">参数`s`包含大量的窗体：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1293">Parameter `s` contains a number of the form:</span></span>  
  
 <span data-ttu-id="7b8d9-1294">[ws][sign][digits,]digits[.fractional-digits][ws]</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1294">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="7b8d9-1295">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1295">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="7b8d9-1296">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1296">The following table describes each element.</span></span>  
  
|<span data-ttu-id="7b8d9-1297">元素</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1297">Element</span></span>|<span data-ttu-id="7b8d9-1298">描述</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1298">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="7b8d9-1299">*ws*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1299">*ws*</span></span>|<span data-ttu-id="7b8d9-1300">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1300">Optional white space.</span></span>|  
|<span data-ttu-id="7b8d9-1301">*sign*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1301">*sign*</span></span>|<span data-ttu-id="7b8d9-1302">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1302">An optional sign.</span></span>|  
|<span data-ttu-id="7b8d9-1303">*digits*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1303">*digits*</span></span>|<span data-ttu-id="7b8d9-1304">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1304">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="7b8d9-1305">*，*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1305">*,*</span></span>|<span data-ttu-id="7b8d9-1306">特定于区域性的千位分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1306">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="7b8d9-1307">*.*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1307">*.*</span></span>|<span data-ttu-id="7b8d9-1308">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1308">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="7b8d9-1309">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1309">*fractional-digits*</span></span>|<span data-ttu-id="7b8d9-1310">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1310">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="7b8d9-1311">参数`s`使用解释<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1311">Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="7b8d9-1312">这意味着该空白和千位分隔符可以但不是货币符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1312">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="7b8d9-1313">若要显式定义的元素 (如货币符号、 千位分隔符和空白区域)，可出现在`s`，使用<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType>方法重载。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1313">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="7b8d9-1314">参数`s`分析使用中的格式设置信息<xref:System.Globalization.NumberFormatInfo>初始化针对当前系统区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1314">Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="7b8d9-1315">有关详情，请参阅<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1315">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="7b8d9-1316">为分析字符串使用的格式信息的一些其他指定区域性，请使用<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType>方法重载。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1316">To parse a string using the formatting information of some other specified culture, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="7b8d9-1317">如有必要的值`s`使用舍入到最接近舍入。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1317">If necessary, the value of `s` is rounded using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7b8d9-1318">A<xref:System.Decimal>对象有 29 位精度。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1318">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="7b8d9-1319">如果`s`表示的数字，有多个 29 个数字，但具有小数部分，可以在范围内<xref:System.Decimal.MaxValue>和<xref:System.Decimal.MinValue>，数字舍入，不会被截断，到使用舍入到最接近的 29 位。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1319">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7b8d9-1320">如果在分析操作过程中遇到分隔符`s`参数，以及适用的货币或十进制数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1320">If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="7b8d9-1321">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1321">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1322">下面的示例使用<xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType>方法将转换的字符串表示形式个数值赋给<xref:System.Decimal>值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1322">The following example uses the <xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType> method to convert the string representations of numeric values to <xref:System.Decimal> values.</span></span> <span data-ttu-id="7b8d9-1323">它假设该 EN-US 当前区域性。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1323">It assumes that en-US is the current culture.</span></span>  
  
 [!code-csharp[System.Decimal.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs#1)]
 [!code-vb[System.Decimal.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Decimal.Parse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Decimal&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7b8d9-1324">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1324">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="7b8d9-1325">枚举值的按位组合，指示 <c>s</c> 允许使用的格式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1325">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span></span> <span data-ttu-id="7b8d9-1326">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Number" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1326">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <param name="provider"><span data-ttu-id="7b8d9-1327">一个对象，提供有关 <c>s</c> 的区域性特定分析信息。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1327">An object that supplies culture-specific parsing information about <c>s</c>.</span></span></param>
        <param name="result">To be added.</param>
        <summary><span data-ttu-id="7b8d9-1328">使用指定样式和区域性特定格式将数字的字符串表示形式转换为其 <see cref="T:System.Decimal" /> 等效项。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1328">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span></span> <span data-ttu-id="7b8d9-1329">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1329">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="7b8d9-1330">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1330"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b8d9-1331">此重载区别<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>通过返回一个布尔值，该值指示是否分析操作成功，而不是返回的已分析的数字值的方法。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1331">This overload differs from the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="7b8d9-1332">不必使用异常处理来测试是否<xref:System.FormatException>的事件中`s`无效，无法成功分析。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1332">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="7b8d9-1333">`style`参数定义的允许的格式`s`分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1333">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="7b8d9-1334">它必须是中的位标志的组合<xref:System.Globalization.NumberStyles>枚举。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1334">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="7b8d9-1335">以下<xref:System.Globalization.NumberStyles>不支持成员：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1335">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>  
  
 <span data-ttu-id="7b8d9-1336">根据样式的值`s`参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1336">Depending on the value of style, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="7b8d9-1337">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1337">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="7b8d9-1338">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1338">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="7b8d9-1339">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1339">The following table describes each element.</span></span>  
  
|<span data-ttu-id="7b8d9-1340">元素</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1340">Element</span></span>|<span data-ttu-id="7b8d9-1341">描述</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1341">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="7b8d9-1342">*ws*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1342">*ws*</span></span>|<span data-ttu-id="7b8d9-1343">可选的空白区域。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1343">Optional white space.</span></span> <span data-ttu-id="7b8d9-1344">空格可以出现的开始处`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1344">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7b8d9-1345">它可以在末尾显示`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1345">It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="7b8d9-1346">特定于区域性的货币符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1346">A culture-specific currency symbol.</span></span> <span data-ttu-id="7b8d9-1347">在字符串中的位置由<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>或<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>属性<xref:System.Globalization.NumberFormatInfo>返回对象<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法`provider`参数。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1347">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method of the `provider` parameter.</span></span> <span data-ttu-id="7b8d9-1348">货币符号可以出现在`s`如果`style`包括<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1348">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="7b8d9-1349">*sign*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1349">*sign*</span></span>|<span data-ttu-id="7b8d9-1350">一个可选符号后。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1350">An optional sign.</span></span>|  
|<span data-ttu-id="7b8d9-1351">*digits*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1351">*digits*</span></span>|<span data-ttu-id="7b8d9-1352">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1352">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="7b8d9-1353">*.*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1353">*.*</span></span>|<span data-ttu-id="7b8d9-1354">特定于区域性的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1354">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="7b8d9-1355">*fractional-digits*</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1355">*fractional-digits*</span></span>|<span data-ttu-id="7b8d9-1356">范围从 0 到 9 的数字的序列。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1356">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="7b8d9-1357">`style`参数指定所允许的格式`s`参数，并且一个或多个可以<xref:System.Globalization.NumberStyles>枚举常量使用按位或运算组合在一起。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1357">The `style` parameter specifies the permitted format of the `s` parameter, and can be one or more <xref:System.Globalization.NumberStyles> enumerated constants combined using a bitwise OR operation.</span></span> <span data-ttu-id="7b8d9-1358">如果`style`为 null，`s`使用解释<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>样式。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1358">If `style` is null, `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span>  
  
 <span data-ttu-id="7b8d9-1359">`provider`参数是<xref:System.IFormatProvider>如实现<xref:System.Globalization.NumberFormatInfo>或<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1359">The `provider` parameter is an <xref:System.IFormatProvider> implementation such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="7b8d9-1360">`provider`参数提供区域性特定信息在分析中使用。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1360">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="7b8d9-1361">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1361">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="7b8d9-1362">A<xref:System.Decimal>对象有 29 位精度。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1362">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="7b8d9-1363">如果`s`表示的数字，有多个 29 个数字，但具有小数部分，可以在范围内<xref:System.Decimal.MaxValue>和<xref:System.Decimal.MinValue>，数字舍入，不会被截断，到使用舍入到最接近的 29 位。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1363">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="7b8d9-1364">如果在遇到分隔符`s`期间执行分析操作，并适用的货币或小数位的参数和组分隔符相同，则分析操作假定该分隔符是小数分隔符，而不是一组分隔符。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1364">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="7b8d9-1365">有关分隔符的详细信息，请参阅<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>， <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>，和<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1365">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b8d9-1366">下面的示例演示了利用<xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29>方法，以便分析的字符串表示形式具有特定样式和格式都是使用特定区域性的约定的数字。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1366">The following example demonstrates the use of the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29> method to parse the string representation of a number that has a particular style and is formatted using the conventions of a particular culture.</span></span>  
  
 [!code-csharp[System.Decimal.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs#2)]
 [!code-vb[System.Decimal.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7b8d9-1367"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1367"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="7b8d9-1368">或</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1368">-or-</span></span>  
  
 <span data-ttu-id="7b8d9-1369"><paramref name="style" /> 为 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1369"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <altmember cref="Overload:System.Decimal.Parse" />
        <altmember cref="M:System.Decimal.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly decimal Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal Zero" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Zero As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal Zero;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b8d9-1370">表示数字零 (0)。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1370">Represents the number zero (0).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b8d9-1371">下面的代码示例演示如何使用`Zero`字段。</span><span class="sxs-lookup"><span data-stu-id="7b8d9-1371">The following code example illustrates the use of the `Zero` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
  </Members>
</Type>