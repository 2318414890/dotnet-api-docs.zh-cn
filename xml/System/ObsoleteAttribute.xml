<Type Name="ObsoleteAttribute" FullName="System.ObsoleteAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c8fb124c7f235939290b119b673f9e3f2c2b0640" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36429241" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObsoleteAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ObsoleteAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ObsoleteAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObsoleteAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObsoleteAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ObsoleteAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>标记不再使用的程序元素。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ObsoleteAttribute> 是适用于除程序集、 模块、 参数和返回值的所有程序元素。 将标记为过时的元素，则通知元素将的用户在将来删除产品的版本。  
  
 <xref:System.ObsoleteAttribute>类包括两个属性：  
  
-   <xref:System.ObsoleteAttribute.Message%2A>。 分配给字符串<xref:System.ObsoleteAttribute.Message%2A>在代码中使用的属性目标时，编译器将发出属性。 字符串应注意的属性目标已过时，如果可能，提供一些解决方法或以编程方式的替代项。  
  
-   <xref:System.ObsoleteAttribute.IsError%2A>。 这是一个布尔值，该值指示编译器是否使用<xref:System.ObsoleteAttribute>属性会导致其发生错误 (<xref:System.ObsoleteAttribute.IsError%2A>是`true`) 或警告 (<xref:System.ObsoleteAttribute.IsError%2A>是`false`)。  
  
 有关使用属性的详细信息，请参阅[属性](~/docs/standard/attributes/index.md)。  
  
## <a name="includewin8appnamelongincludeswin8-appname-long-mdmd-apps"></a>[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] 应用程序  
 当你创建 Windows 元数据数据库 （.winmd 文件），<xref:System.ObsoleteAttribute>将导出为<xref:System.ObsoleteAttribute>属性和[Windows.Foundation.Metadata.DeprecatedAttribute](http://msdn.microsoft.com/library/windows/apps/windows.foundation.metadata.deprecatedattribute.aspx)属性是否仅<xref:System.ObsoleteAttribute>是在源代码中存在。 <xref:System.ObsoleteAttribute>转换为`DeprecatedAttribute`，如下所示：  
  
-   如果`message`和`error`自变量都存在，`message`分配给`DeprecatedAttribute``message`自变量。 一个错误值`true`映射到[DeprecationType.Remove](http://msdn.microsoft.com/library/windows/apps/windows.foundation.metadata.deprecationtype.aspx)，和`error`值`false`映射到[DeprecationType.Deprecate](http://msdn.microsoft.com/library/windows/apps/windows.foundation.metadata.deprecationtype.aspx)。  
  
-   如果`message`中未提供自变量<xref:System.ObsoleteAttribute>，在其默认值`DeprecatedAttribute`是"*element_name*已弃用"，其中*element_name*是目标的名称向其应用该属性的程序元素。  
  
-   如果`error`参数中不存在<xref:System.ObsoleteAttribute>，在其默认值`DeprecatedAttribute`是[DeprecationType.Deprecate](http://msdn.microsoft.com/library/windows/apps/windows.foundation.metadata.deprecationtype.aspx)。  
  
> [!IMPORTANT]
>  直接应用[Windows.Foundation.Metadata.DeprecatedAttribute](http://msdn.microsoft.com/library/windows/apps/windows.foundation.metadata.deprecatedattribute.aspx)不建议属性设置为托管代码，因为自动发生此导出。  
  
   
  
## Examples  
 下面的示例定义一个类，包含一个属性和方法标记有<xref:System.ObsoleteAttribute>属性。 访问的值`OldProperty`在代码中的属性生成编译器警告，但调用`CallOldMethod`方法生成一个编译器错误。 该示例还显示当你尝试将源代码编译会产生的输出。  
  
 [!code-csharp[ObsoleteAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObsoleteAttribute/CS/obsoleteattributeex1.cs#1)]
 [!code-vb[ObsoleteAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObsoleteAttribute/vb/obsoleteattributeex1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.ObsoleteAttribute" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObsoleteAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ObsoleteAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObsoleteAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用默认属性初始化 <see cref="T:System.ObsoleteAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表显示 <xref:System.ObsoleteAttribute> 的实例的初始属性值。  
  
|Property|“值”|  
|--------------|-----------|  
|<xref:System.ObsoleteAttribute.IsError%2A>|`false`|  
|<xref:System.ObsoleteAttribute.Message%2A>|`null`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObsoleteAttribute (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ObsoleteAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObsoleteAttribute(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new ObsoleteAttribute : string -&gt; ObsoleteAttribute" Usage="new System.ObsoleteAttribute message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">描述可选的变通方法的文本字符串。</param>
        <summary>使用指定的变通方法消息初始化 <see cref="T:System.ObsoleteAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表显示 <xref:System.ObsoleteAttribute> 的实例的初始属性值。  
  
|Property|“值”|  
|--------------|-----------|  
|<xref:System.ObsoleteAttribute.IsError%2A>|`false`。|  
|<xref:System.ObsoleteAttribute.Message%2A>|解决方法消息中。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObsoleteAttribute (string message, bool error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, bool error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ObsoleteAttribute.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, error As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObsoleteAttribute(System::String ^ message, bool error);" />
      <MemberSignature Language="F#" Value="new ObsoleteAttribute : string * bool -&gt; ObsoleteAttribute" Usage="new System.ObsoleteAttribute (message, error)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="error" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="message">描述可选的变通方法的文本字符串。</param>
        <param name="error">如果使用过时的元素生成编译器错误，则为 <see langword="true" />；如果生成编译器警告，则为 <see langword="false" />。</param>
        <summary>使用变通方法消息和布尔值初始化 <see cref="T:System.ObsoleteAttribute" /> 类的新实例，该布尔值指示是否将使用已过时的元素视为错误。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表显示 <xref:System.ObsoleteAttribute> 的实例的初始属性值。  
  
|Property|“值”|  
|--------------|-----------|  
|<xref:System.ObsoleteAttribute.IsError%2A>|`error` 值。|  
|<xref:System.ObsoleteAttribute.Message%2A>|`message` 值。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public bool IsError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsError" />
      <MemberSignature Language="DocId" Value="P:System.ObsoleteAttribute.IsError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsError : bool" Usage="System.ObsoleteAttribute.IsError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示编译器是否将使用已过时的程序元素视为错误的布尔值。</summary>
        <value>如果将使用已过时的元素视为错误，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例定义一个类，包含两个成员标记为过时。 首先，名为的属性`OldProperty`，如果调用会产生编译器警告。 第二个、 一个名为方法`CallOldMethod`，产生编译器错误。 示例使用反射来获取其相关信息<xref:System.ObsoleteAttribute>特性应用于成员的类型和显示的值，其<xref:System.ObsoleteAttribute.Message%2A>和<xref:System.ObsoleteAttribute.IsError%2A>属性。  
  
 [!code-csharp[System.ObsoleteAttribute.Message#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.obsoleteattribute.message/cs/obsoleteattribute_message.cs#1)]
 [!code-vb[System.ObsoleteAttribute.Message#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.obsoleteattribute.message/vb/obsoleteattribute_message.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.ObsoleteAttribute.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.ObsoleteAttribute.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取变通方法消息，包括对可选程序元素的说明。</summary>
        <value>变通方法文本字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例定义一个类，包含两个成员标记为过时。 首先，名为的属性`OldProperty`，如果调用会产生编译器警告。 第二个、 一个名为方法`CallOldMethod`，产生编译器错误。 示例使用反射来获取其相关信息<xref:System.ObsoleteAttribute>特性应用于成员的类型和显示的值，其<xref:System.ObsoleteAttribute.Message%2A>和<xref:System.ObsoleteAttribute.IsError%2A>属性。  
  
 [!code-csharp[System.ObsoleteAttribute.Message#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.obsoleteattribute.message/cs/obsoleteattribute_message.cs#1)]
 [!code-vb[System.ObsoleteAttribute.Message#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.obsoleteattribute.message/vb/obsoleteattribute_message.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>