<Type Name="IObservable&lt;T&gt;" FullName="System.IObservable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="273ff4990891b6ccd268f3e0d66f89a6f1fa9839" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36430246" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IObservable&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObservable`1&lt;+ T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObservable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObservable(Of Out T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObservable" />
  <TypeSignature Language="F#" Value="type IObservable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="ddab7-101">提供通知信息的对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ddab7-101">The object that provides notification information.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="ddab7-102">定义基于推送的通知的提供程序。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ddab7-102">Defines a provider for push-based notification.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddab7-103"><xref:System.IObserver%601>和<xref:System.IObservable%601>接口提供一种基于推送的通知，也称为观察者设计模式的通用的机制。</span><span class="sxs-lookup"><span data-stu-id="ddab7-103">The <xref:System.IObserver%601> and <xref:System.IObservable%601> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</span></span> <span data-ttu-id="ddab7-104"><xref:System.IObservable%601>接口表示发送通知 （该提供程序;） 的类<xref:System.IObserver%601>接口表示接收它们 （观察者） 的类。</span><span class="sxs-lookup"><span data-stu-id="ddab7-104">The <xref:System.IObservable%601> interface represents the class that sends notifications (the provider); the <xref:System.IObserver%601> interface represents the class that receives them (the observer).</span></span> <span data-ttu-id="ddab7-105">`T` 表示提供通知信息的类。</span><span class="sxs-lookup"><span data-stu-id="ddab7-105">`T` represents the class that provides the notification information.</span></span> <span data-ttu-id="ddab7-106">在某些基于推送的通知中，<xref:System.IObserver%601>实现和`T`可以表示同一类型。</span><span class="sxs-lookup"><span data-stu-id="ddab7-106">In some push-based notifications, the <xref:System.IObserver%601> implementation and `T` can represent the same type.</span></span>  
  
 <span data-ttu-id="ddab7-107">提供程序必须实现单个方法<xref:System.IObservable%601.Subscribe%2A>，指示观察者想要接收基于推送的通知。</span><span class="sxs-lookup"><span data-stu-id="ddab7-107">The provider must implement a single method, <xref:System.IObservable%601.Subscribe%2A>, that indicates that an observer wants to receive push-based notifications.</span></span> <span data-ttu-id="ddab7-108">该方法的调用方传递观察程序的实例。</span><span class="sxs-lookup"><span data-stu-id="ddab7-108">Callers to the method pass an instance of the observer.</span></span> <span data-ttu-id="ddab7-109">该方法将返回<xref:System.IDisposable>实现，它使观察者的任意时间之前提供程序已停止向他们发送取消通知。</span><span class="sxs-lookup"><span data-stu-id="ddab7-109">The method returns an <xref:System.IDisposable> implementation that enables observers to cancel notifications at any time before the provider has stopped sending them.</span></span>  
  
 <span data-ttu-id="ddab7-110">在任何给定时间，给定的提供程序可能具有零行、 一行或多个观察程序。</span><span class="sxs-lookup"><span data-stu-id="ddab7-110">At any given time, a given provider may have zero, one, or multiple observers.</span></span> <span data-ttu-id="ddab7-111">提供程序负责存储对观察程序的引用，并确保它们有效发送通知之前。</span><span class="sxs-lookup"><span data-stu-id="ddab7-111">The provider is responsible for storing references to observers and ensuring that they are valid before it sends notifications.</span></span> <span data-ttu-id="ddab7-112"><xref:System.IObservable%601>接口不会不做出任何假设的数量的观察者或发送通知的顺序。</span><span class="sxs-lookup"><span data-stu-id="ddab7-112">The <xref:System.IObservable%601> interface does not make any assumptions about the number of observers or the order in which notifications are sent.</span></span>  
  
 <span data-ttu-id="ddab7-113">提供程序通过调用向观察者发送通知的以下三种<xref:System.IObserver%601>方法：</span><span class="sxs-lookup"><span data-stu-id="ddab7-113">The provider sends the following three kinds of notifications to the observer by calling <xref:System.IObserver%601> methods:</span></span>  
  
-   <span data-ttu-id="ddab7-114">当前数据。</span><span class="sxs-lookup"><span data-stu-id="ddab7-114">The current data.</span></span> <span data-ttu-id="ddab7-115">提供程序可以调用<xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType>方法将传递观察者`T`对象具有当前数据、 已更改的数据或新数据。</span><span class="sxs-lookup"><span data-stu-id="ddab7-115">The provider can call the <xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType> method to pass the observer a `T` object that has current data, changed data, or fresh data.</span></span>  
  
-   <span data-ttu-id="ddab7-116">错误条件。</span><span class="sxs-lookup"><span data-stu-id="ddab7-116">An error condition.</span></span> <span data-ttu-id="ddab7-117">提供程序可以调用<xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType>方法以通知的观察程序的某些错误条件。</span><span class="sxs-lookup"><span data-stu-id="ddab7-117">The provider can call the <xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType> method to notify the observer that some error condition has occurred.</span></span>  
  
-   <span data-ttu-id="ddab7-118">没有更多的数据。</span><span class="sxs-lookup"><span data-stu-id="ddab7-118">No further data.</span></span> <span data-ttu-id="ddab7-119">提供程序可以调用<xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType>方法以通知观察者它已完成发送通知。</span><span class="sxs-lookup"><span data-stu-id="ddab7-119">The provider can call the <xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType> method to notify the observer that it has finished sending notifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddab7-120">下面的示例说明了观察者设计模式。</span><span class="sxs-lookup"><span data-stu-id="ddab7-120">The following example illustrates the observer design pattern.</span></span> <span data-ttu-id="ddab7-121">它定义`Location`类，该类包含纬度和经度信息。</span><span class="sxs-lookup"><span data-stu-id="ddab7-121">It defines a `Location` class that contains latitude and longitude information.</span></span>  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 <span data-ttu-id="ddab7-122">`LocationTracker`类提供了<xref:System.IObservable%601>实现。</span><span class="sxs-lookup"><span data-stu-id="ddab7-122">The `LocationTracker` class provides the <xref:System.IObservable%601> implementation.</span></span> <span data-ttu-id="ddab7-123">其`TrackLocation`方法传递一个可以为 null`Location`对象，其中包含纬度和经度数据。</span><span class="sxs-lookup"><span data-stu-id="ddab7-123">Its `TrackLocation` method is passed a nullable `Location` object that contains the latitude and longitude data.</span></span> <span data-ttu-id="ddab7-124">如果`Location`的值不是`null`，则`TrackLocation`方法调用<xref:System.IObserver%601.OnNext%2A>的每个观察程序的方法。</span><span class="sxs-lookup"><span data-stu-id="ddab7-124">If the `Location` value is not `null`, the `TrackLocation` method calls the <xref:System.IObserver%601.OnNext%2A> method of each observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 <span data-ttu-id="ddab7-125">如果`Location`值是`null`，则`TrackLocation`方法实例化`LocationUnknownException`对象，在下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="ddab7-125">If the `Location` value is `null`, the `TrackLocation` method instantiates a `LocationUnknownException` object, which is shown in the following example.</span></span> <span data-ttu-id="ddab7-126">然后，它调用每个观察程序<xref:System.IObserver%601.OnError%2A>方法并将其传递`LocationUnknownException`对象。</span><span class="sxs-lookup"><span data-stu-id="ddab7-126">It then calls each observer's <xref:System.IObserver%601.OnError%2A> method and passes it the `LocationUnknownException` object.</span></span> <span data-ttu-id="ddab7-127">请注意，`LocationUnknownException`派生自<xref:System.Exception>，但不会添加任何新成员。</span><span class="sxs-lookup"><span data-stu-id="ddab7-127">Note that `LocationUnknownException` derives from <xref:System.Exception>, but does not add any new members.</span></span>  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 <span data-ttu-id="ddab7-128">观察程序注册以接收来自通知`TrackLocation`对象通过调用其<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType>方法，将观察者对象的引用分配给私有泛型<xref:System.Collections.Generic.List%601>对象。</span><span class="sxs-lookup"><span data-stu-id="ddab7-128">Observers register to receive notifications from a `TrackLocation` object by calling its <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method, which assigns a reference to the observer object to a private generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="ddab7-129">该方法返回`Unsubscriber`对象，它是<xref:System.IDisposable>实现，它使观察者来停止接收通知。</span><span class="sxs-lookup"><span data-stu-id="ddab7-129">The method returns an `Unsubscriber` object, which is an <xref:System.IDisposable> implementation that enables observers to stop receiving notifications.</span></span> <span data-ttu-id="ddab7-130">`LocationTracker`类还包括`EndTransmission`方法。</span><span class="sxs-lookup"><span data-stu-id="ddab7-130">The `LocationTracker` class also includes an `EndTransmission` method.</span></span> <span data-ttu-id="ddab7-131">当没有更多位置数据可用时，该方法会调用每个观察程序<xref:System.IObserver%601.OnCompleted%2A>方法，然后再清除观察者的内部列表。</span><span class="sxs-lookup"><span data-stu-id="ddab7-131">When no further location data is available, the method calls each observer's <xref:System.IObserver%601.OnCompleted%2A> method and then clears the internal list of observers.</span></span>  
  
 <span data-ttu-id="ddab7-132">在此示例中，`LocationReporter`类提供了<xref:System.IObserver%601>实现。</span><span class="sxs-lookup"><span data-stu-id="ddab7-132">In this example, the `LocationReporter` class provides the <xref:System.IObserver%601> implementation.</span></span> <span data-ttu-id="ddab7-133">它向控制台显示有关当前的位置的信息。</span><span class="sxs-lookup"><span data-stu-id="ddab7-133">It displays information about the current location to the console.</span></span> <span data-ttu-id="ddab7-134">其构造函数包括`name`参数，以使`LocationReporter`实例在其字符串输出中标识自身。</span><span class="sxs-lookup"><span data-stu-id="ddab7-134">Its constructor includes a `name` parameter, which enables the `LocationReporter` instance to identify itself in its string output.</span></span> <span data-ttu-id="ddab7-135">它还包括`Subscribe`方法，它包装到提供程序的调用<xref:System.IObservable%601.Subscribe%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ddab7-135">It also includes a `Subscribe` method, which wraps a call to the provider's <xref:System.IObservable%601.Subscribe%2A> method.</span></span> <span data-ttu-id="ddab7-136">这允许方法将返回的分配<xref:System.IDisposable>私有变量的引用。</span><span class="sxs-lookup"><span data-stu-id="ddab7-136">This allows the method to assign the returned <xref:System.IDisposable> reference to a private variable.</span></span> <span data-ttu-id="ddab7-137">`LocationReporter`类还包括`Unsubscribe`方法，调用<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>返回的对象方法<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ddab7-137">The `LocationReporter` class also includes an `Unsubscribe` method, which calls the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method of the object that is returned by the <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ddab7-138">下面的代码定义`LocationReporter`类。</span><span class="sxs-lookup"><span data-stu-id="ddab7-138">The following code defines the `LocationReporter` class.</span></span>  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 <span data-ttu-id="ddab7-139">提供程序和观察者，然后实例化下面的代码。</span><span class="sxs-lookup"><span data-stu-id="ddab7-139">The following code then instantiates the provider and the observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObserver`1" />
  </Docs>
  <Members>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public IDisposable Subscribe (IObserver&lt;out T&gt; observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Subscribe(class System.IObserver`1&lt;!T&gt; observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Subscribe (observer As IObserver(Of Out T)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Subscribe(IObserver&lt;T&gt; ^ observer);" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : IObserver&lt;'T&gt; -&gt; IDisposable" Usage="iObservable.Subscribe observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="System.IObserver&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="observer">
          <span data-ttu-id="ddab7-140">将接收通知的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddab7-140">The object that is to receive notifications.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddab7-141">通知提供程序观察程序将接收通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddab7-141">Notifies the provider that an observer is to receive notifications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ddab7-142">对接口的引用，它允许观察程序在提供程序完成发送通知前停止接收通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddab7-142">A reference to an interface that allows observers to stop receiving notifications before the provider has finished sending them.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddab7-143"><xref:System.IObservable%601.Subscribe%2A>必须调用方法来注册基于推送的通知的观察者。</span><span class="sxs-lookup"><span data-stu-id="ddab7-143">The <xref:System.IObservable%601.Subscribe%2A> method must be called to register an observer for push-based notifications.</span></span> <span data-ttu-id="ddab7-144">典型实现<xref:System.IObservable%601.Subscribe%2A>方法执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="ddab7-144">A typical implementation of the <xref:System.IObservable%601.Subscribe%2A> method does the following:</span></span>  
  
-   <span data-ttu-id="ddab7-145">将对观察程序的引用存储在集合对象，如<xref:System.Collections.Generic.List%601>对象。</span><span class="sxs-lookup"><span data-stu-id="ddab7-145">It stores a reference to the observer in a collection object, such as a <xref:System.Collections.Generic.List%601> object.</span></span>  
  
-   <span data-ttu-id="ddab7-146">它返回到引用<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="ddab7-146">It returns a reference to an <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="ddab7-147">这使观察者取消订阅 (即，停止接收通知) 之前的提供程序已完成发送通知和名为订阅服务器的<xref:System.IObserver%601.OnCompleted%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ddab7-147">This enables observers to unsubscribe (that is, to stop receiving notifications) before the provider has finished sending them and called the subscriber's <xref:System.IObserver%601.OnCompleted%2A> method.</span></span>  
  
 <span data-ttu-id="ddab7-148">在任何给定时间的特定实例<xref:System.IObservable%601>实现都负责处理所有订阅和通知所有订阅服务器。</span><span class="sxs-lookup"><span data-stu-id="ddab7-148">At any given time, a particular instance of an <xref:System.IObservable%601> implementation is responsible for handling all subscriptions and notifying all subscribers.</span></span> <span data-ttu-id="ddab7-149">除非特定的文档<xref:System.IObservable%601>实现指示，否则，观察者应做任何假设<xref:System.IObservable%601>实现，如多个观察程序将接收通知的顺序。</span><span class="sxs-lookup"><span data-stu-id="ddab7-149">Unless the documentation for a particular <xref:System.IObservable%601> implementation indicates otherwise, observers should make no assumptions about the <xref:System.IObservable%601> implementation, such as the order of notifications that multiple observers will receive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddab7-150">下面的示例演示<xref:System.IObservable%601.Subscribe%2A>报告纬度和经度信息的应用程序的方法。</span><span class="sxs-lookup"><span data-stu-id="ddab7-150">The following example illustrates the <xref:System.IObservable%601.Subscribe%2A> method for an application that reports latitude and longitude information.</span></span> <span data-ttu-id="ddab7-151">它定义<xref:System.Collections.Generic.IList%601>存储所有观察程序的引用的集合对象。</span><span class="sxs-lookup"><span data-stu-id="ddab7-151">It defines an <xref:System.Collections.Generic.IList%601> collection object that stores references to all observers.</span></span> <span data-ttu-id="ddab7-152">它还会返回一个名为的私有类`Unsubscriber`实现<xref:System.IDisposable>接口，并可使订阅服务器停止接收事件通知。</span><span class="sxs-lookup"><span data-stu-id="ddab7-152">It also returns a private class named `Unsubscriber` that implements the <xref:System.IDisposable> interface and enables subscribers to stop receiving event notifications.</span></span>  <span data-ttu-id="ddab7-153">请参阅示例部分<xref:System.IObservable%601>有关完整示例的主题。</span><span class="sxs-lookup"><span data-stu-id="ddab7-153">See the Example section of the <xref:System.IObservable%601> topic for the complete example.</span></span>  
  
 [!code-csharp[System.IObserver.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#13)]
 [!code-vb[System.IObserver.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IObserver`1" />
      </Docs>
    </Member>
  </Members>
</Type>