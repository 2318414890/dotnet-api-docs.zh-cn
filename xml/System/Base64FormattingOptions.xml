<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Base64FormattingOptions.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bf1895ccae5afd78294487563647fd47661be95b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf1895ccae5afd78294487563647fd47661be95b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Base64FormattingOptions">
          <source>Specifies whether relevant <ph id="ph1">&lt;see cref="Overload:System.Convert.ToBase64CharArray" /&gt;</ph> and <ph id="ph2">&lt;see cref="Overload:System.Convert.ToBase64String" /&gt;</ph> methods insert line breaks in their output.</source>
          <target state="translated">指定相关的 <ph id="ph1">&lt;see cref="Overload:System.Convert.ToBase64CharArray" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="Overload:System.Convert.ToBase64String" /&gt;</ph> 方法是否在其输出中插入分行符。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The <ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToBase64String%2A?displayProperty=nameWithType&gt;</ph> methods convert the value of an array of 8-bit unsigned integers to an equivalent string representation that consists of base 64 digits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Convert.ToBase64String%2A?displayProperty=nameWithType&gt;</ph>方法将 8 位无符号整数数组的值转换为基的 64 位数字组成的等效字符串表示形式。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The string representation can contain one or more line breaks, where a line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</source>
          <target state="translated">字符串表示可以包含一个或多个分行符，一个分行符指一个回车符返回字符 (U + 000d) 后跟换行符字符 (U + 000A)。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>Because line breaks are considered whitespace characters in a base-64 encoding, they are ignored when converting a base-64 encoded string back to a byte array.</source>
          <target state="translated">由于换行符处换行被视为以 base 64 编码的空白字符，因此将转换的 base-64 编码字符串返回到字节数组时，将忽略它们。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The line breaks are simply convenient when displaying the encoded string to a control or a device such as a console window.</source>
          <target state="translated">为控件或的设备如控制台窗口中显示编码的字符串时，将只需非常方便分行符。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The None and InsertLineBreaks values are mutually exclusive.</source>
          <target state="translated">无和 InsertLineBreaks 值互斥。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>Therefore, although the <ph id="ph1">&lt;xref:System.Base64FormattingOptions.None?displayProperty=nameWithType&gt;</ph> enumeration is marked with the <ph id="ph2">&lt;xref:System.FlagsAttribute&gt;</ph> attribute, it makes no sense to perform a bitwise combination of these two values.</source>
          <target state="translated">因此，尽管<ph id="ph1">&lt;xref:System.Base64FormattingOptions.None?displayProperty=nameWithType&gt;</ph>枚举将标有<ph id="ph2">&lt;xref:System.FlagsAttribute&gt;</ph>属性，它没有意义执行这两个值的按位组合。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType&gt;</ph> with a InsertLineBreaks argument to insert line breaks in the string that is produced by encoding a 100-element byte array.</source>
          <target state="translated">下面的示例调用<ph id="ph1">&lt;xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType&gt;</ph>InsertLineBreaks 与要插入行自变量将在生成的编码 100 元素字节数组的字符串中中断。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Base64FormattingOptions">
          <source>As the output from the example shows, the <ph id="ph1">&lt;xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType&gt;</ph> succeeds in restoring the original byte array; the line break characters are ignored during the conversion.</source>
          <target state="translated">如示例所示，输出<ph id="ph1">&lt;xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType&gt;</ph>成功还原原始的字节数组中; 在行中断符将忽略此转换过程。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Base64FormattingOptions.InsertLineBreaks">
          <source>Inserts line breaks after every 76 characters in the string representation.</source>
          <target state="translated">在字符串表示形式中每隔 76 个字符插入换行符。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Base64FormattingOptions.None">
          <source>Does not insert line breaks after every 76 characters in the string representation.</source>
          <target state="translated">不在字符串表示形式中每隔 76 个字符插入换行符。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>