<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NotSupportedException.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58efb79e649d8ac96df50ccdc12c788e3be082c83.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8efb79e649d8ac96df50ccdc12c788e3be082c83</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.NotSupportedException">
          <source>The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.</source>
          <target state="translated">当调用的方法不受支持时，或者当尝试读取、搜索或写入不支持所调用功能的流时引发的异常。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> indicates that no implementation exists for an invoked method or property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 指示为调用的方法或属性存在没有实现。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> uses the HRESULT COR_E_NOTSUPPORTED, which has the value 0x80131515.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 使用 HRESULT COR_E_NOTSUPPORTED，其值 0x80131515。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.NotSupportedException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">有关的实例的初始属性值的列表<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>，请参阅<ph id="ph2">&lt;xref:System.NotSupportedException.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>Throwing a NotSupportedException exception</source>
          <target state="translated">引发 NotSupportedException 异常</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You might consider throwing a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception in the following cases:</source>
          <target state="translated">你可以考虑引发<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>在以下情况下的异常：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You are implementing a general-purpose interface, and number of the methods have no meaningful implementation.</source>
          <target state="translated">要实现通用接口，并且许多方法具有没有有意义的实现。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For example, if you are creating a date and time type that implements the <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> interface, you would throw a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> exception for most of the conversions.</source>
          <target state="translated">例如，如果要创建的日期和时间类型该实现<ph id="ph1">&lt;xref:System.IConvertible&gt;</ph>接口，将引发<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>大部分转换异常。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You've inherited from an abstract class that requires that you override a number of methods.</source>
          <target state="translated">一个抽象类，需要重写多种方法从继承。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>However, you're only prepared to provide an implementation for a subset of these.</source>
          <target state="translated">但是，您仅准备提供这些子集的实现。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For the methods that you decide not to implement, you can choose to throw a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">对于不想实现的方法，你可选择引发<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You are defining a general-purpose type with a state that enables operations conditionally.</source>
          <target state="translated">你定义的有条件地启用操作的状态的通用类型。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For example, your type can be either read-only or read-write.</source>
          <target state="translated">例如，你的类型可以是只读的也读写。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>In that case:</source>
          <target state="translated">在这种情况下：</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>If the object is read-only, attempting to assign values to the properties of an instance or call methods that modify instance state should throw  a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception.</source>
          <target state="translated">如果对象是只读的尝试将值分配到的属性的修改实例状态的实例或调用的方法应引发<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>异常。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You should implement a property that returns a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value that indicates whether particular functionality is available.</source>
          <target state="translated">应实现一个属性，返回<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>值，该值指示特定的功能是否可用。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For example, for a type that can be either read-only or read-write, you could implement a <ph id="ph1">`IsReadOnly`</ph> property that indicates whether the set of read-write methods are available or unavailable.</source>
          <target state="translated">例如，可以是只读或读写的类型，你可以实现<ph id="ph1">`IsReadOnly`</ph>属性，该值指示是否可用或不可用的读写方法集。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>Handling a NotSupportedException exception</source>
          <target state="translated">处理 NotSupportedException 异常</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception indicates that a method has no implementation and that you should not call it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>异常指示的方法具有没有实现，并且，你应不调用它。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You should not handle the exception.</source>
          <target state="translated">不应处理的异常。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>Instead, what you should do depends on the cause of the exception:  whether an implementation is completely absent , or the member invocation is inconsistent with the purpose of an object (such as a call to the <ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A?displayProperty=nameWithType&gt;</ph> method on a read-only <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> object .</source>
          <target state="translated">相反，你应执行的操作取决于异常的原因： 是否实现为完全不存在，或该成员的调用不一致目的在于对象 (如调用<ph id="ph1">&lt;xref:System.IO.FileStream.Read%2A?displayProperty=nameWithType&gt;</ph>方法上的只读<ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>对象.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source><bpt id="p1">**</bpt>An implementation has not been provided because the operation cannot be performed in a meaningful way.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>尚未提供实现，由于不能以有意义的方式执行该操作。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>This is a common exception when you are calling methods on an object that provides implementations for the methods of an abstract base class, or that implements a general-purpose interface, and the method has no meaningful implementation.</source>
          <target state="translated">将在提供的抽象基类或该实现方法的实现的通用接口的对象上调用方法时，这是常见的异常和此方法不具有任何有意义的实现。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For example, the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface, which means that it must include a method to convert every primitive type to every other primitive type.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Convert&gt;</ph>类实现<ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>接口，这意味着它必须包括将每个基元类型转换为每个其他基元类型的方法。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>Many of those conversions, however, are not possible.</source>
          <target state="translated">许多这些转换，但是，不可能。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>As a result, a call to the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType&gt;</ph> method, for instance, throws a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> exception because there is no possible conversion between a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> and a <ph id="ph4">&lt;xref:System.Boolean&gt;</ph> value</source>
          <target state="translated">因此，调用<ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType&gt;</ph>方法，例如，将引发<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>异常因为之间没有可能转换<ph id="ph3">&lt;xref:System.DateTime&gt;</ph>和<ph id="ph4">&lt;xref:System.Boolean&gt;</ph>值</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>To eliminate the exception, you should eliminate the method call.</source>
          <target state="translated">若要消除此异常，应消除方法调用。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source><bpt id="p1">**</bpt>The method call is not supported given the state of the object.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>方法调用不支持给定对象的状态。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You are attempting to invoke a member whose functionality is unavailable because of the object's state.</source>
          <target state="translated">你尝试调用其功能将不可用的因为对象的状态的成员。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You can eliminate the exception in one of three ways:</source>
          <target state="translated">你可以消除三种方式之一中的异常：</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You know the state of the object in advance, but you've invoked an unsupported method or property.</source>
          <target state="translated">提前知道对象的状态，但已调用了不受支持的方法或属性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>In this case, the member invocation is an error, and you can eliminate it.</source>
          <target state="translated">在这种情况下，该成员的调用是一个错误，并可以消除它。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You know the state of the object in advance (usually because your code has instantiated it), but the object is mis-configured.</source>
          <target state="translated">（通常是因为你的代码具有其进行实例化） 事先知道对象的状态，但该对象是配置错误。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The following example illustrates this issue.</source>
          <target state="translated">下面的示例阐释了此问题。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>It creates a read-only <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object  and then attempts to write to it.</source>
          <target state="translated">它将创建一个只读的<ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>对象，然后尝试对其进行写入。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You can eliminate the exception by ensuring that the instantiated object supports the functionality you intend.</source>
          <target state="translated">你可以消除实例化的对象支持的功能，你想通过确保异常。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The following example addresses the problem of the read-only <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object by providing the correct arguments to the <ph id="ph2">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">下面的示例解决了问题，只读的<ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>对象提供到正确的自变量<ph id="ph2">&lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%29?displayProperty=nameWithType&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You don't know the state of the object in advance, and the object doesn't support a particular operation.</source>
          <target state="translated">你不知道对象的状态，请提前和对象不支持某一特定操作。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>In most cases, the object should include a property or method that indicates whether it supports a particular set of operations.</source>
          <target state="translated">在大多数情况下，该对象应包括的属性或方法，该值指示它是否支持一组特定的操作。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You can eliminate the exception by checking the value of the object and invoking the member only if appropriate.</source>
          <target state="translated">你可以通过检查对象的值和调用该成员，仅当相应消除异常。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The following example defines a <ph id="ph1">`DetectEncoding`</ph> method that throws a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> exception when it attempts to read from the beginning of a stream that does not support read access.</source>
          <target state="translated">下面的示例定义<ph id="ph1">`DetectEncoding`</ph>引发方法<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>它尝试从不支持读取访问流的开始位置读取时出现异常。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>You can eliminate the exception by examining the value of the <ph id="ph1">&lt;xref:System.IO.FileStream.CanRead%2A?displayProperty=nameWithType&gt;</ph> property  and exiting the method if the stream is read-only.</source>
          <target state="translated">你可以通过检查的值来消除异常<ph id="ph1">&lt;xref:System.IO.FileStream.CanRead%2A?displayProperty=nameWithType&gt;</ph>属性和退出方法，如果流是只读的。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>Related exception types</source>
          <target state="translated">相关的异常类型</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception is closely related to two other exception types;</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>与其他两个异常类型; 密切相关异常</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>This exception is thrown when a method could be implemented but is not, either because the member will be implemented in  a later version, the member is not available on  a particular platform, or the member belongs to an abstract class and a derived class must provide an implementation.</source>
          <target state="translated">当一种方法无法实现，但不是，引发此异常因为将在更高版本中实现成员、 成员不可用在特定平台上，或成员属于一个抽象类和派生的类必须提供即时消息plementation。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>This exception is thrown in scenarios in which it is generally sometimes possible for the object to perform the requested operation, and the object state determines whether the operation can be performed.</source>
          <target state="translated">在方案中，它通常有时可能是为该对象来执行请求的操作，将引发此异常和对象状态确定是否可以执行该操作。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>.NET Compact Framework notes</source>
          <target state="translated">.NET compact Framework 说明</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>When working with the <ph id="ph1">[!INCLUDE[Compact](~/includes/compact-md.md)]</ph> and using P/Invoke on a native function, this exception may be thrown if:</source>
          <target state="translated">当使用 <ph id="ph1">[!INCLUDE[Compact](~/includes/compact-md.md)]</ph> 并对本机函数使用 P/Invoke 时，如果出现以下情况，则会引发此异常：</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The declaration in managed code is incorrect.</source>
          <target state="translated">托管代码中的声明不正确。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The <ph id="ph1">[!INCLUDE[Compact](~/includes/compact-md.md)]</ph> does not support what you are trying to do.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[Compact](~/includes/compact-md.md)]</ph> 不支持尝试执行的操作。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>The DLL names are mangled on export.</source>
          <target state="translated">DLL 名称在导出时难以分辨。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>If a <ph id="ph1">&lt;xref:System.NotSupportedException.%23ctor%2A&gt;</ph> exception is thrown, check:</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.NotSupportedException.%23ctor%2A&gt;</ph>引发异常，请检查：</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For any violations of the <ph id="ph1">[!INCLUDE[Compact](~/includes/compact-md.md)]</ph> P/Invoke restrictions.</source>
          <target state="translated">任何违反 <ph id="ph1">[!INCLUDE[Compact](~/includes/compact-md.md)]</ph> P/Invoke 限制的行为。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>For any arguments that require pre-allocated memory.</source>
          <target state="translated">任何需要预分配内存的参数。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>If these exist, you should pass a reference to an existing variable.</source>
          <target state="translated">如果存在这种情况，应传递对现有变量的引用。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>That the names of the exported functions are correct.</source>
          <target state="translated">导出的函数的名称正确。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>This can be verified with <bpt id="p1">[</bpt>DumpBin.exe<ept id="p1">](https://msdn.microsoft.com/library/c1h23y6c.aspx)</ept>.</source>
          <target state="translated">这可以使用验证<bpt id="p1">[</bpt>DumpBin.exe<ept id="p1">](https://msdn.microsoft.com/library/c1h23y6c.aspx)</ept>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.NotSupportedException">
          <source>That you are not attempting to pass too many arguments.</source>
          <target state="translated">您没有尝试传递过多的参数。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="T:System.NotSupportedException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> class, setting the <ph id="ph2">&lt;see cref="P:System.Exception.Message" /&gt;</ph> property of the new instance to a system-supplied message that describes the error.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> 类的新实例，将新实例的 <ph id="ph2">&lt;see cref="P:System.Exception.Message" /&gt;</ph> 属性设置为系统提供的描述错误的消息。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">此消息将当前系统区域性考虑在内。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">下表显示 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 的实例的初始属性值。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">本地化的错误消息字符串。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that describes the error.</source>
          <target state="translated">描述该错误的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>The content of <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> is intended to be understood by humans.</source>
          <target state="translated">消息的内容被设计为人可理解的形式<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">用指定的错误消息初始化 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">下表显示 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 的实例的初始属性值。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">错误消息字符串。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">承载序列化对象数据的对象。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">关于来源和目标的上下文信息</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">用序列化数据初始化 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">此构造函数在反序列化过程中调用，以便重建通过流传输的异常对象。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>XML 和 SOAP 序列化<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">解释异常原因的错误消息。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">导致当前异常的异常。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not a null reference, the current exception is raised in a <ph id="ph1">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 参数不为空引用，则在处理内部异常的 <ph id="ph1">&lt;see langword="catch" /&gt;</ph> 块中引发当前异常。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">因前一个异常而直接引发的异常应在 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 属性中包含对前一个异常的引用。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 属性返回的值与传递到构造函数中的值相同；或者，如果 <ph id="ph2">`null`</ph> 属性没有向构造函数提供内部异常值，则为 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">下表显示 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 的实例的初始属性值。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">“值”</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">内部异常引用。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">错误消息字符串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>