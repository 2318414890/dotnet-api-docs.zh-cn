<Type Name="MissingFieldException" FullName="System.MissingFieldException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b952d104f8382fd8ac02ef2b14fcb52d58d74872" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MissingFieldException : MissingMemberException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit MissingFieldException extends System.MissingMemberException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.MissingFieldException" />
  <TypeSignature Language="VB.NET" Value="Public Class MissingFieldException&#xA;Inherits MissingMemberException" />
  <TypeSignature Language="C++ CLI" Value="public ref class MissingFieldException : MissingMemberException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MissingMemberException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4a113-101">尝试动态访问不存在的字段时引发的异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a113-101">The exception that is thrown when there is an attempt to dynamically access a field that does not exist.</span>
      </span>
      <span data-ttu-id="4a113-102">如果类库中的某个字段已被移除或重命名，请重新编译引用该库的所有程序集。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a113-102">If a field in a class library has been removed or renamed, recompile any assemblies that reference that library.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a113-103">通常，如果代码尝试访问不存在的类成员，则生成编译错误。</span><span class="sxs-lookup"><span data-stu-id="4a113-103">Normally a compilation error is generated if code attempts to access a nonexistent member of a class.</span></span> <span data-ttu-id="4a113-104"><xref:System.MissingFieldException> 旨在处理其中尝试动态访问未通过其强名称引用程序集的已重命名或删除字段的情况。</span><span class="sxs-lookup"><span data-stu-id="4a113-104"><xref:System.MissingFieldException> is designed to handle cases where an attempt is made to dynamically access a renamed or deleted field of an assembly that is not referenced by its strong name.</span></span> <span data-ttu-id="4a113-105"><xref:System.MissingFieldException>依赖的程序集中的代码尝试访问已修改的程序集中不存在的字段时引发。</span><span class="sxs-lookup"><span data-stu-id="4a113-105">The <xref:System.MissingFieldException> is thrown when code in a dependent assembly attempts to access a missing field in an assembly that was modified.</span></span>  
  
 <span data-ttu-id="4a113-106"><xref:System.MissingFieldException> 使用 HRESULT COR_E_MISSINGFIELD，具有 0x80131511 的值。</span><span class="sxs-lookup"><span data-stu-id="4a113-106"><xref:System.MissingFieldException> uses the HRESULT COR_E_MISSINGFIELD, that has the value 0x80131511.</span></span>  
  
 <span data-ttu-id="4a113-107">有关的实例的初始属性值的列表<xref:System.MissingFieldException>，请参阅<xref:System.MissingFieldException.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="4a113-107">For a list of initial property values for an instance of <xref:System.MissingFieldException>, see the <xref:System.MissingFieldException.%23ctor%2A> constructors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a113-108">此示例演示如果你尝试使用反射来调用程序不存在的方法，将会发生什么情况和访问不存在的字段。</span><span class="sxs-lookup"><span data-stu-id="4a113-108">This example shows what happens if you attempt to use reflection to call a method that does not exist and access a field that does not exist.</span></span> <span data-ttu-id="4a113-109">通过捕获，应用程序恢复<xref:System.MissingMethodException>， <xref:System.MissingFieldException>，和<xref:System.MissingMemberException>。</span><span class="sxs-lookup"><span data-stu-id="4a113-109">The application recovers by catching the <xref:System.MissingMethodException>, <xref:System.MissingFieldException>, and <xref:System.MissingMemberException>.</span></span>  
  
 [!code-cpp[MissingMethodException#1](~/samples/snippets/cpp/VS_Snippets_CLR/MissingMethodException/cpp/MissingMethodException.cpp#1)]
 [!code-csharp[MissingMethodException#1](~/samples/snippets/csharp/VS_Snippets_CLR/MissingMethodException/CS/MissingMethodException.cs#1)]
 [!code-vb[MissingMethodException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MissingMethodException/vb/missingmethodexception.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a113-110">初始化 <see cref="T:System.MissingFieldException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-110">Initializes a new instance of the <see cref="T:System.MissingFieldException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MissingFieldException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MissingFieldException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MissingFieldException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a113-111">初始化 <see cref="T:System.MissingFieldException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-111">Initializes a new instance of the <see cref="T:System.MissingFieldException" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a113-112">此构造函数初始化<xref:System.MissingFieldException.Message%2A>属性的新实例为系统提供的消息的描述错误，如"试图访问不存在的字段。"</span><span class="sxs-lookup"><span data-stu-id="4a113-112">This constructor initializes <xref:System.MissingFieldException.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Attempted to access a non-existing field."</span></span> <span data-ttu-id="4a113-113">此消息将当前系统区域性考虑在内。</span><span class="sxs-lookup"><span data-stu-id="4a113-113">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="4a113-114">下表显示 <xref:System.MissingFieldException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="4a113-114">The following table shows the initial property values for an instance of <xref:System.MissingFieldException>.</span></span>  
  
|<span data-ttu-id="4a113-115">Property</span><span class="sxs-lookup"><span data-stu-id="4a113-115">Property</span></span>|<span data-ttu-id="4a113-116">“值”</span><span class="sxs-lookup"><span data-stu-id="4a113-116">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="4a113-117">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="4a113-117">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.MissingFieldException.Message%2A>|<span data-ttu-id="4a113-118">本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="4a113-118">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MissingFieldException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MissingFieldException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MissingFieldException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="4a113-119">描述该错误的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-119">A <see cref="T:System.String" /> that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a113-120">用指定的错误消息初始化 <see cref="T:System.MissingFieldException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-120">Initializes a new instance of the <see cref="T:System.MissingFieldException" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a113-121">内容`message`应是可以理解的用户。</span><span class="sxs-lookup"><span data-stu-id="4a113-121">The content of `message` should be understandable to the user.</span></span> <span data-ttu-id="4a113-122">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="4a113-122">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="4a113-123">下表显示 <xref:System.MissingFieldException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="4a113-123">The following table shows the initial property values for an instance of <xref:System.MissingFieldException>.</span></span>  
  
|<span data-ttu-id="4a113-124">Property</span><span class="sxs-lookup"><span data-stu-id="4a113-124">Property</span></span>|<span data-ttu-id="4a113-125">“值”</span><span class="sxs-lookup"><span data-stu-id="4a113-125">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="4a113-126">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="4a113-126">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.MissingFieldException.Message%2A>|<span data-ttu-id="4a113-127">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="4a113-127">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MissingFieldException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MissingFieldException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MissingFieldException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="4a113-128">承载序列化对象数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-128">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4a113-129">关于来源和目标的上下文信息</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-129">The contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a113-130">用序列化数据初始化 <see cref="T:System.MissingFieldException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-130">Initializes a new instance of the <see cref="T:System.MissingFieldException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a113-131">此构造函数在反序列化过程中调用，以便重建通过流传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="4a113-131">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="4a113-132">有关详细信息，请参阅[XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="4a113-132">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MissingFieldException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MissingFieldException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MissingFieldException(System::String ^ message, Exception ^ inner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="4a113-133">解释异常原因的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-133">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="4a113-134">导致当前异常的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-134">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="4a113-135">如果 <c>inner</c> 参数不是空引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 <see langword="catch" /> 块中引发当前异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-135">If the <c>inner</c> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a113-136">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.MissingFieldException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-136">Initializes a new instance of the <see cref="T:System.MissingFieldException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a113-137">因前一个异常而直接引发的异常可以在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="4a113-137">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="4a113-138"><xref:System.Exception.InnerException%2A> 属性返回传递到构造函数中的相同值，或者如果 `Nothing` 属性不向构造函数提供内部异常值，则为空引用（在 Visual Basic 中为 <xref:System.Exception.InnerException%2A>）。</span><span class="sxs-lookup"><span data-stu-id="4a113-138">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="4a113-139">下表显示 <xref:System.MissingFieldException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="4a113-139">The following table shows the initial property values for an instance of <xref:System.MissingFieldException>.</span></span>  
  
|<span data-ttu-id="4a113-140">Property</span><span class="sxs-lookup"><span data-stu-id="4a113-140">Property</span></span>|<span data-ttu-id="4a113-141">“值”</span><span class="sxs-lookup"><span data-stu-id="4a113-141">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="4a113-142">内部异常引用。</span><span class="sxs-lookup"><span data-stu-id="4a113-142">The inner exception reference.</span></span>|  
|<xref:System.MissingFieldException.Message%2A>|<span data-ttu-id="4a113-143">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="4a113-143">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MissingFieldException (string className, string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string className, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MissingFieldException.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (className As String, fieldName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MissingFieldException(System::String ^ className, System::String ^ fieldName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="className">
          <span data-ttu-id="4a113-144">试图访问不存在的字段时所用的类名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-144">The name of the class in which access to a nonexistent field was attempted.</span>
          </span>
        </param>
        <param name="fieldName">
          <span data-ttu-id="4a113-145">无法访问的字段名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-145">The name of the field that cannot be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a113-146">使用指定的类名称和字段名称初始化 <see cref="T:System.MissingFieldException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-146">Initializes a new instance of the <see cref="T:System.MissingFieldException" /> class with the specified class name and field name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.MissingFieldException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a113-147">获取显示缺少字段的签名、类名和字段名的文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-147">Gets the text string showing the signature of the missing field, the class name, and the field name.</span>
          </span>
          <span data-ttu-id="4a113-148">此属性是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-148">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a113-149">错误消息字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a113-149">The error message string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a113-150">如果在对象构造时未指定类名称，则返回从基类继承的默认文本字符串。</span><span class="sxs-lookup"><span data-stu-id="4a113-150">If the class name is not specified when the object is constructed, the default text string inherited from the base class is returned.</span></span> <span data-ttu-id="4a113-151">此属性将替代<xref:System.MissingMemberException.Message%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a113-151">This property overrides <xref:System.MissingMemberException.Message%2A>.</span></span> <span data-ttu-id="4a113-152">应本地化的错误消息。</span><span class="sxs-lookup"><span data-stu-id="4a113-152">The error message should be localized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a113-153">下面的示例演示<xref:System.MissingFieldException.Message%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4a113-153">The following example demonstrates the <xref:System.MissingFieldException.Message%2A> property.</span></span> <span data-ttu-id="4a113-154">此代码示例摘自更大的示例为提供<xref:System.MissingFieldException>类。</span><span class="sxs-lookup"><span data-stu-id="4a113-154">This code example is part of a larger example provided for the <xref:System.MissingFieldException> class.</span></span>  
  
 [!code-cpp[MissingMethodException#3](~/samples/snippets/cpp/VS_Snippets_CLR/MissingMethodException/cpp/MissingMethodException.cpp#3)]
 [!code-csharp[MissingMethodException#3](~/samples/snippets/csharp/VS_Snippets_CLR/MissingMethodException/CS/MissingMethodException.cs#3)]
 [!code-vb[MissingMethodException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/MissingMethodException/vb/missingmethodexception.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>