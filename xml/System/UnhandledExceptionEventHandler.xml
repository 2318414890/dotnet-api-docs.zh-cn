<Type Name="UnhandledExceptionEventHandler" FullName="System.UnhandledExceptionEventHandler">
  <TypeSignature Language="C#" Value="public delegate void UnhandledExceptionEventHandler(object sender, UnhandledExceptionEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed UnhandledExceptionEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.UnhandledExceptionEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub UnhandledExceptionEventHandler(sender As Object, e As UnhandledExceptionEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void UnhandledExceptionEventHandler(System::Object ^ sender, UnhandledExceptionEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.UnhandledExceptionEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="2a337-101">未处理的异常事件的源。</span><span class="sxs-lookup"><span data-stu-id="2a337-101">The source of the unhandled exception event.</span></span></param>
    <param name="e"><span data-ttu-id="2a337-102">包含事件数据的 <c>UnhandledExceptionEventArgs</c>。</span><span class="sxs-lookup"><span data-stu-id="2a337-102">An <c>UnhandledExceptionEventArgs</c> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="2a337-103">表示将处理事件的方法，该事件由应用程序域不处理的异常引发。</span><span class="sxs-lookup"><span data-stu-id="2a337-103">Represents the method that will handle the event raised by an exception that is not handled by the application domain.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a337-104"><xref:System.UnhandledExceptionEventHandler>只能由系统执行该应用程序创建的默认应用程序域指定。</span><span class="sxs-lookup"><span data-stu-id="2a337-104">An <xref:System.UnhandledExceptionEventHandler> can only be specified for the default application domain that is created by the system to execute an application.</span></span> <span data-ttu-id="2a337-105">指定<xref:System.UnhandledExceptionEventHandler>为<xref:System.AppDomain>创建的应用程序不起作用。</span><span class="sxs-lookup"><span data-stu-id="2a337-105">Specifying an <xref:System.UnhandledExceptionEventHandler> for an <xref:System.AppDomain> created by an application has no effect.</span></span>  
  
 <span data-ttu-id="2a337-106">创建 <xref:System.UnhandledExceptionEventHandler> 委托时，需要标识将要处理该事件的方法。</span><span class="sxs-lookup"><span data-stu-id="2a337-106">When you create an <xref:System.UnhandledExceptionEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="2a337-107">若要将事件处理程序与事件相关联，添加到事件的委托的一个实例。</span><span class="sxs-lookup"><span data-stu-id="2a337-107">To associate the event handler with your event, add an instance of the delegate to the event.</span></span> <span data-ttu-id="2a337-108">除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="2a337-108">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="2a337-109">有关事件处理程序委托的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="2a337-109">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.UnhandledExceptionEventArgs" />
    <altmember cref="T:System.EventHandler" />
  </Docs>
</Type>