<Type Name="HashAlgorithmName" FullName="System.Security.Cryptography.HashAlgorithmName">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eae25f528c596b2f36ff0e51e0a0eb284d2bee93" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30498771" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct HashAlgorithmName : IEquatable&lt;System.Security.Cryptography.HashAlgorithmName&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HashAlgorithmName extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Security.Cryptography.HashAlgorithmName&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HashAlgorithmName" />
  <TypeSignature Language="VB.NET" Value="Public Structure HashAlgorithmName&#xA;Implements IEquatable(Of HashAlgorithmName)" />
  <TypeSignature Language="C++ CLI" Value="public value class HashAlgorithmName : IEquatable&lt;System::Security::Cryptography::HashAlgorithmName&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Security.Cryptography.HashAlgorithmName&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="4c1b1-101">指定加密哈希算法的名称。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c1b1-101">Specifies the name of a cryptographic hash algorithm.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c1b1-102"><xref:System.Security.Cryptography.HashAlgorithmName>结构包含一些返回预定义的哈希算法名称的静态属性，以及<xref:System.Security.Cryptography.HashAlgorithmName.Name%2A>可以表示为强类型字符串的自定义的哈希算法名称的属性。</span><span class="sxs-lookup"><span data-stu-id="4c1b1-102">The <xref:System.Security.Cryptography.HashAlgorithmName> structure includes some static properties that return predefined hash algorithm names, as well as a <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property that can represent a custom hash algorithm name as a strongly-typed string.</span></span> <span data-ttu-id="4c1b1-103">哈希算法名称是区分大小写。</span><span class="sxs-lookup"><span data-stu-id="4c1b1-103">Hash algorithm names are case-sensitive.</span></span>  
  
 <span data-ttu-id="4c1b1-104">使用 Microsoft 的 CNG （加密的下一代） API 实现的非对称算法解释基础字符串值作为[CNG 算法标识符](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx)。</span><span class="sxs-lookup"><span data-stu-id="4c1b1-104">Asymmetric algorithms implemented using Microsoft's CNG (Cryptographic Next Generation) API interpret the underlying string value as a [CNG algorithm identifier](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx).</span></span>  
  
 <span data-ttu-id="4c1b1-105">使用其他技术实现的非对称算法：</span><span class="sxs-lookup"><span data-stu-id="4c1b1-105">Asymmetric algorithms implemented using other technologies:</span></span>  
  
-   <span data-ttu-id="4c1b1-106">必须至少识别"MD5"、"SHA1"、"SHA256"、"SHA384"和"SHA512"。</span><span class="sxs-lookup"><span data-stu-id="4c1b1-106">Must recognize at least "MD5", "SHA1", "SHA256", "SHA384", and "SHA512".</span></span>  
  
-   <span data-ttu-id="4c1b1-107">应认识到其他它们支持任何其他哈希算法的 CNG 标识符。</span><span class="sxs-lookup"><span data-stu-id="4c1b1-107">Should recognize additional CNG identifiers for any additional hash algorithms that they support.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HashAlgorithmName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HashAlgorithmName(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4c1b1-108">自定义的哈希算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-108">The custom hash algorithm name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c1b1-109">初始化具有自定义名称的 <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> 结构的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-109">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> structure with a custom name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c1b1-110">构造函数上执行任何验证`name`。</span><span class="sxs-lookup"><span data-stu-id="4c1b1-110">The constructor performs no validation on `name`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c1b1-111">返回一个值，该值指示两个 <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> 值是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-111">Returns a value that indicates whether two <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> values are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="4c1b1-112">要与当前实例进行比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-112">The object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c1b1-113">返回一个指示当前实例是否与指定对象相等的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-113">Returns a value that indicates whether the current instance and a specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c1b1-114">如果 <paramref name="obj" /> 是 <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> 对象且它的 <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> 属性等于当前实例的属性，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-114">
              <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> object and its <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property is equal to that of the current instance.</span>
          </span>
          <span data-ttu-id="4c1b1-115">比较是有序的且区分大小写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-115">The comparison is ordinal and case-sensitive.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Security.Cryptography.HashAlgorithmName other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Security.Cryptography.HashAlgorithmName other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Security::Cryptography::HashAlgorithmName other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="4c1b1-116">要与当前实例进行比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-116">The object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c1b1-117">返回一个值，该值指示两个 <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> 实例是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-117">Returns a value that indicates whether two <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> instances are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c1b1-118">如果 <paramref name="other" /> 的 <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> 属性等于当前实例的属性，则为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-118">
              <see langword="true" /> if the <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="other" /> is equal to that of the current instance.</span>
          </span>
          <span data-ttu-id="4c1b1-119">比较是有序的且区分大小写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-119">The comparison is ordinal and case-sensitive.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c1b1-120">返回当前实例的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-120">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c1b1-121">为当前实例的哈希代码；如果未向 <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> 构造函数硅酮任何 <paramref name="name" /> 值，则为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-121">The hash code for the current instance, or 0 if no <paramref name="name" /> value was supplied to the <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> constructor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MD5">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName MD5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName MD5" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.MD5" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MD5 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName MD5 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c1b1-122">获取表示“MD5”的哈希算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-122">Gets a hash algorithm name that represents "MD5".</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c1b1-123">表示“MD5”的哈希算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-123">A hash algorithm name that represents "MD5".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c1b1-124">获取算法名称的基础字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-124">Gets the underlying string representation of the algorithm name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c1b1-125">为算法名称的字符串表示形式；如果无可用的哈希算法，则为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-125">The string representation of the algorithm name, or <see langword="null" /> or <see cref="F:System.String.Empty" /> if no hash algorithm is available.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Security.Cryptography.HashAlgorithmName left, System.Security.Cryptography.HashAlgorithmName right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Security.Cryptography.HashAlgorithmName left, valuetype System.Security.Cryptography.HashAlgorithmName right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As HashAlgorithmName, right As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Security::Cryptography::HashAlgorithmName left, System::Security::Cryptography::HashAlgorithmName right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="right" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4c1b1-126">要比较的第一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-126">The first object to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4c1b1-127">要比较的第二个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-127">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c1b1-128">确定两个指定的 <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> 对象是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-128">Determines whether two specified <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c1b1-129">如果 <paramref name="left" /> 和 <paramref name="right" /> 具有相同的 <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-129">
              <see langword="true" /> if both <paramref name="left" /> and <paramref name="right" /> have the same <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c1b1-130"><xref:System.Security.Cryptography.HashAlgorithmName.op_Equality%2A>方法定义的相等运算符的运算<xref:System.Security.Cryptography.HashAlgorithmName>值。</span><span class="sxs-lookup"><span data-stu-id="4c1b1-130">The <xref:System.Security.Cryptography.HashAlgorithmName.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Security.Cryptography.HashAlgorithmName left, System.Security.Cryptography.HashAlgorithmName right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Security.Cryptography.HashAlgorithmName left, valuetype System.Security.Cryptography.HashAlgorithmName right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As HashAlgorithmName, right As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Security::Cryptography::HashAlgorithmName left, System::Security::Cryptography::HashAlgorithmName right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="right" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="4c1b1-131">要比较的第一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-131">The first object to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="4c1b1-132">要比较的第二个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-132">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c1b1-133">确定两个指定的 <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> 对象是否不相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-133">Determines whether two specified <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c1b1-134">如果 <paramref name="left" /> 和 <paramref name="right" /> 均不具有同一 <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-134">
              <see langword="true" /> if both <paramref name="left" /> and <paramref name="right" /> do not have the same <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c1b1-135"><xref:System.Security.Cryptography.HashAlgorithmName.op_Inequality%2A>方法定义的不相等运算符的运算<xref:System.Security.Cryptography.HashAlgorithmName>值。</span><span class="sxs-lookup"><span data-stu-id="4c1b1-135">The <xref:System.Security.Cryptography.HashAlgorithmName.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA1">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName SHA1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName SHA1" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.SHA1" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SHA1 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName SHA1 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c1b1-136">获取表示“SHA1”的哈希算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-136">Gets a hash algorithm name that represents "SHA1".</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c1b1-137">表示“SHA1”的哈希算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-137">A hash algorithm name that represents "SHA1".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA256">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName SHA256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName SHA256" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.SHA256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SHA256 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName SHA256 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c1b1-138">获取表示“SHA256”的哈希算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-138">Gets a hash algorithm name that represents "SHA256".</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c1b1-139">表示“SHA256”的哈希算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-139">A hash algorithm name that represents "SHA256".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA384">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName SHA384 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName SHA384" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.SHA384" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SHA384 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName SHA384 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c1b1-140">获取表示“SHA384”的哈希算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-140">Gets a hash algorithm name that represents "SHA384".</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c1b1-141">表示“SHA384”的哈希算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-141">A hash algorithm name that represents "SHA384".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA512">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName SHA512 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName SHA512" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.SHA512" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SHA512 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName SHA512 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c1b1-142">获取表示“SHA512”的哈希算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-142">Gets a hash algorithm name that represents "SHA512".</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c1b1-143">表示“SHA512”的哈希算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-143">A hash algorithm name that represents "SHA512".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c1b1-144">返回当前 <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> 实例的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-144">Returns the string representation of the current <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c1b1-145">当前 <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> 实例的字符串表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c1b1-145">The string representation of the current <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c1b1-146"><xref:System.Security.Cryptography.HashAlgorithmName.ToString%2A>方法返回<xref:System.Security.Cryptography.HashAlgorithmName.Name%2A>属性，如果已分配。</span><span class="sxs-lookup"><span data-stu-id="4c1b1-146">The <xref:System.Security.Cryptography.HashAlgorithmName.ToString%2A> method returns the <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property, if it has been assigned.</span></span> <span data-ttu-id="4c1b1-147">否则，它将返回 <xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4c1b1-147">Otherwise, it returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>