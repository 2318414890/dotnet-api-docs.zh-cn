<Type Name="ECDsaCng" FullName="System.Security.Cryptography.ECDsaCng">
  <TypeSignature Language="C#" Value="public sealed class ECDsaCng : System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ECDsaCng extends System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDsaCng" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ECDsaCng&#xA;Inherits ECDsa" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDsaCng sealed : System::Security::Cryptography::ECDsa" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.ECDsa</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d68ef-101">提供椭圆曲线数字签名算法 (ECDSA) 的下一代加密技术 (CNG) 实现。</span><span class="sxs-lookup"><span data-stu-id="d68ef-101">Provides a Cryptography Next Generation (CNG) implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-102">此类派生自<xref:System.Security.Cryptography.ECDsa>抽象基类。</span><span class="sxs-lookup"><span data-stu-id="d68ef-102">This class derives from the <xref:System.Security.Cryptography.ECDsa> abstract base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d68ef-103">下面的示例演示如何使用<xref:System.Security.Cryptography.ECDsaCng>类来签署一条消息以及如何使用该签名来验证消息未被更改。</span><span class="sxs-lookup"><span data-stu-id="d68ef-103">The following example shows how to use the <xref:System.Security.Cryptography.ECDsaCng> class to sign a message and how to use the signature to verify that the message has not been altered.</span></span>  
  
 [!code-csharp[ECDsaCng#1](~/samples/snippets/csharp/VS_Snippets_CLR/ecdsacng/cs/program.cs#1)]
 [!code-vb[ECDsaCng#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ecdsacng/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d68ef-104">初始化 <see cref="T:System.Security.Cryptography.ECDsaCng" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d68ef-104">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d68ef-105">使用随机的密钥对初始化 <see cref="T:System.Security.Cryptography.ECDsaCng" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d68ef-105">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class with a random key pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-106">随机密钥对具有 521 位的公钥长度。</span><span class="sxs-lookup"><span data-stu-id="d68ef-106">The random key pair has a public key length of 521 bits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d68ef-107">此系统不支持下一代加密技术 (CNG) 类。</span><span class="sxs-lookup"><span data-stu-id="d68ef-107">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(int keySize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize"><span data-ttu-id="d68ef-108">密钥大小。</span><span class="sxs-lookup"><span data-stu-id="d68ef-108">The size of the key.</span></span> <span data-ttu-id="d68ef-109">有效密钥大小是 256、384 和 521 位。</span><span class="sxs-lookup"><span data-stu-id="d68ef-109">Valid key sizes are 256, 384, and 521 bits.</span></span></param>
        <summary><span data-ttu-id="d68ef-110">使用指定密钥大小，通过随机密钥对来初始化 <see cref="T:System.Security.Cryptography.ECDsaCng" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d68ef-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class with a random key pair, using the specified key size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-111">随机密钥对将具有所定义的公共密钥长度`keySize`参数。</span><span class="sxs-lookup"><span data-stu-id="d68ef-111">The random key pair will have the public key length defined by the `keySize` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d68ef-112">此系统不支持下一代加密技术 (CNG) 类。</span><span class="sxs-lookup"><span data-stu-id="d68ef-112">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="d68ef-113"><paramref name="keySize" /> 指定了无效的长度。</span><span class="sxs-lookup"><span data-stu-id="d68ef-113"><paramref name="keySize" /> specifies an invalid length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (System.Security.Cryptography.CngKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CngKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As CngKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(System::Security::Cryptography::CngKey ^ key);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d68ef-114">一个密钥，它将用作当前对象所执行的加密操作的输入。</span><span class="sxs-lookup"><span data-stu-id="d68ef-114">The key that will be used as input to the cryptographic operations performed by the current object.</span></span></param>
        <summary><span data-ttu-id="d68ef-115">使用指定的 <see cref="T:System.Security.Cryptography.CngKey" /> 对象初始化 <see cref="T:System.Security.Cryptography.ECDsaCng" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d68ef-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class by using the specified <see cref="T:System.Security.Cryptography.CngKey" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d68ef-116"><paramref name="key" /> 不指定椭圆曲线数字签名算法 (ECDSA) 组。</span><span class="sxs-lookup"><span data-stu-id="d68ef-116"><paramref name="key" /> does not specify an Elliptic Curve Digital Signature Algorithm (ECDSA) group.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d68ef-117"><paramref name="key" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-117"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d68ef-118">此系统不支持下一代加密技术 (CNG) 类。</span><span class="sxs-lookup"><span data-stu-id="d68ef-118">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(System::Security::Cryptography::ECCurve curve);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="d68ef-119">用于生成公钥/私钥对的曲线。</span><span class="sxs-lookup"><span data-stu-id="d68ef-119">The curve used to generate the public/private key pair.</span></span></param>
        <summary><span data-ttu-id="d68ef-120">初始化 <see cref="T:System.Security.Cryptography.ECDsaCng" /> 类的新实例，该类的公钥/私钥对通过指定曲线生成。</span><span class="sxs-lookup"><span data-stu-id="d68ef-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class whose public/private key pair is generated over the specified curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-121">`curve` 必须验证 (即，它必须返回`true`) 时传递给<xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType>方法，并且必须已命名或显式质数。</span><span class="sxs-lookup"><span data-stu-id="d68ef-121">`curve` must validate (that is, it must return `true`) when passed to the <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> method and must be either a named or explicit prime.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="d68ef-122"><paramref name="curve" /> 不进行验证。</span><span class="sxs-lookup"><span data-stu-id="d68ef-122"><paramref name="curve" /> does not validate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportExplicitParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportExplicitParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportExplicitParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportExplicitParameters(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="d68ef-123">若要包含专用参数，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-123"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d68ef-124">将椭圆曲线加密 (ECC) 对象使用的密钥和显式曲线参数导出到 <see cref="T:System.Security.Cryptography.ECParameters" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d68ef-124">Exports the key and explicit curve parameters used by the Elliptic curve cryptography (ECC) object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span></summary>
        <returns><span data-ttu-id="d68ef-125">ECC 对象使用的密钥和显式曲线参数。</span><span class="sxs-lookup"><span data-stu-id="d68ef-125">The key and explicit curve parameters used by the ECC object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68ef-126">获取曲线值时发生错误。</span><span class="sxs-lookup"><span data-stu-id="d68ef-126">An error occurred while obtaining the curve values.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d68ef-127">此平台不支持显式导出。</span><span class="sxs-lookup"><span data-stu-id="d68ef-127">Explicit export is not supported by this platform.</span></span> <span data-ttu-id="d68ef-128">必须使用 Windows 10 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="d68ef-128">Windows 10 or higher is required.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportParameters(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="d68ef-129">若要包含专用参数，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-129"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d68ef-130">将椭圆曲线加密 (ECC) 对象使用的密钥导出到 <see cref="T:System.Security.Cryptography.ECParameters" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="d68ef-130">Exports the key used by the Elliptic curve cryptography (ECC) object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span> <span data-ttu-id="d68ef-131">如果密钥作为已命名曲线创建，<see cref="F:System.Security.Cryptography.ECParameters.Curve" /> 字段包含已命名的曲线参数，否则将包含显式参数。</span><span class="sxs-lookup"><span data-stu-id="d68ef-131">If the key was created as a named curve, the <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> field contains named curve parameters; otherwise, it contains explicit parameters.</span></span></summary>
        <returns><span data-ttu-id="d68ef-132">ECC 对象使用的密钥和已命名曲线参数。</span><span class="sxs-lookup"><span data-stu-id="d68ef-132">The key and named curve parameters used by the ECC object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68ef-133">获取曲线值时发生错误。</span><span class="sxs-lookup"><span data-stu-id="d68ef-133">An error occurred while obtaining the curve values.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d68ef-134">反序列化 XML 字符串中的密钥信息。</span><span class="sxs-lookup"><span data-stu-id="d68ef-134">Deserializes the key information from an XML string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public override void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXmlString(System::String ^ xmlString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlString"><span data-ttu-id="d68ef-135">要反序列化的基于 XML 的密钥信息。</span><span class="sxs-lookup"><span data-stu-id="d68ef-135">The XML-based key information to be deserialized.</span></span></param>
        <summary><span data-ttu-id="d68ef-136">未实现此方法。</span><span class="sxs-lookup"><span data-stu-id="d68ef-136">This method is not implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-137">若要反序列化的 XML 密钥，使用<xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29>重载。</span><span class="sxs-lookup"><span data-stu-id="d68ef-137">To deserialize an XML key, use the <xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d68ef-138">未重写此实例的方法。</span><span class="sxs-lookup"><span data-stu-id="d68ef-138">This method was not overridden for this instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public void FromXmlString (string xml, System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromXmlString(string xml, valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXmlString (xml As String, format As ECKeyXmlFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromXmlString(System::String ^ xml, System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="d68ef-139">要反序列化的基于 XML 的密钥信息。</span><span class="sxs-lookup"><span data-stu-id="d68ef-139">The XML-based key information to be deserialized.</span></span></param>
        <param name="format"><span data-ttu-id="d68ef-140">枚举值之一，它指定 XML 字符串的格式。</span><span class="sxs-lookup"><span data-stu-id="d68ef-140">One of the enumeration values that specifies the format of the XML string.</span></span> <span data-ttu-id="d68ef-141">当前接受的唯一格式为 <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-141">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></param>
        <summary><span data-ttu-id="d68ef-142">使用指定的格式反序列化 XML 字符串中的密钥信息。</span><span class="sxs-lookup"><span data-stu-id="d68ef-142">Deserializes the key information from an XML string by using the specified format.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d68ef-143"><paramref name="xml" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-143"><paramref name="xml" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d68ef-144"><paramref name="format" /> 指定的格式无效。</span><span class="sxs-lookup"><span data-stu-id="d68ef-144"><paramref name="format" /> specifies an invalid format.</span></span> <span data-ttu-id="d68ef-145">唯一接受的值为 <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-145">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68ef-146">所有其他错误。</span><span class="sxs-lookup"><span data-stu-id="d68ef-146">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey(System::Security::Cryptography::ECCurve curve);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="d68ef-147">用于生成密钥的曲线。</span><span class="sxs-lookup"><span data-stu-id="d68ef-147">The curve to use to generate the key.</span></span></param>
        <summary><span data-ttu-id="d68ef-148">生成用于 ECDsaCng 算法的密钥。</span><span class="sxs-lookup"><span data-stu-id="d68ef-148">Generates a key to use for the ECDsaCng algorithm.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="d68ef-149"><paramref name="curve" /> 不进行验证。</span><span class="sxs-lookup"><span data-stu-id="d68ef-149"><paramref name="curve" /> does not validate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngAlgorithm ^ HashAlgorithm { System::Security::Cryptography::CngAlgorithm ^ get(); void set(System::Security::Cryptography::CngAlgorithm ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68ef-150">获取或设置签名和验证数据时要使用的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="d68ef-150">Gets or sets the hash algorithm to use when signing and verifying data.</span></span></summary>
        <value><span data-ttu-id="d68ef-151">一个指定哈希算法的对象。</span><span class="sxs-lookup"><span data-stu-id="d68ef-151">An object that specifies the hash algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-152">此属性接受以下算法： <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>， <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>， <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>， <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>，和<xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>。</span><span class="sxs-lookup"><span data-stu-id="d68ef-152">This property accepts the following algorithms: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>, and <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</span></span>  
  
 <span data-ttu-id="d68ef-153">此外可以使用其他自定义的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="d68ef-153">Other custom hash algorithms may also be used.</span></span>  
  
 <span data-ttu-id="d68ef-154">默认算法是<xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>。</span><span class="sxs-lookup"><span data-stu-id="d68ef-154">The default algorithm is <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span></span>  
  
 <span data-ttu-id="d68ef-155">如果在签名或验证已哈希处理的数据，则不会使用此属性。</span><span class="sxs-lookup"><span data-stu-id="d68ef-155">This property is not used if you are signing or verifying data that is already hashed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d68ef-156">该值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-156">The value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.ECParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.ECParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As ECParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::ECParameters parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="d68ef-157">曲线的参数。</span><span class="sxs-lookup"><span data-stu-id="d68ef-157">The curve parameters.</span></span></param>
        <summary><span data-ttu-id="d68ef-158">通过创建为参数结构创建新的 <see cref="T:System.Security.Cryptography.CngKey" />，来替换当前实例使用的现有密钥。</span><span class="sxs-lookup"><span data-stu-id="d68ef-158">Replaces the existing key that the current instance is working with by creating a new <see cref="T:System.Security.Cryptography.CngKey" /> for the parameters structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-159">如果`parameters`只包含<xref:System.Security.Cryptography.ECParameters.Q>，但只导入的公共密钥。</span><span class="sxs-lookup"><span data-stu-id="d68ef-159">If `parameters` contains only <xref:System.Security.Cryptography.ECParameters.Q>, only a public key is imported.</span></span> <span data-ttu-id="d68ef-160">如果`parameters`还包含<xref:System.Security.Cryptography.ECParameters.D>，导入完整密钥对。</span><span class="sxs-lookup"><span data-stu-id="d68ef-160">If `parameters` also contains <xref:System.Security.Cryptography.ECParameters.D>, a full key pair is imported.</span></span> <span data-ttu-id="d68ef-161"><xref:System.Security.Cryptography.ECParameters.Curve>字段指定的曲线以导入的类型。</span><span class="sxs-lookup"><span data-stu-id="d68ef-161">The <xref:System.Security.Cryptography.ECParameters.Curve> field specifies the type of the curve to import.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="d68ef-162"><paramref name="parameters" /> 不包含有效的值。</span><span class="sxs-lookup"><span data-stu-id="d68ef-162"><paramref name="parameters" /> does not contain valid values.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d68ef-163"><paramref name="parameters" /> 引用无法导入的一条曲线。</span><span class="sxs-lookup"><span data-stu-id="d68ef-163"><paramref name="parameters" /> references a curve that cannot be imported.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="d68ef-164"><paramref name="parameters" /> 引用此平台不支持的一条曲线。</span><span class="sxs-lookup"><span data-stu-id="d68ef-164"><paramref name="parameters" /> references a curve that is not supported by this platform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngKey ^ Key { System::Security::Cryptography::CngKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68ef-165">获取或设置对数据进行签名或验证时要使用的键。</span><span class="sxs-lookup"><span data-stu-id="d68ef-165">Gets or sets the key to use when signing and verifying data.</span></span></summary>
        <value><span data-ttu-id="d68ef-166">指定键的对象。</span><span class="sxs-lookup"><span data-stu-id="d68ef-166">An object that specifies the key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d68ef-167">生成一个签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-167">Generates a signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="d68ef-168">要签名的消息数据。</span><span class="sxs-lookup"><span data-stu-id="d68ef-168">The message data to be signed.</span></span></param>
        <summary><span data-ttu-id="d68ef-169">生成指定数据的签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-169">Generates a signature for the specified data.</span></span></summary>
        <returns><span data-ttu-id="d68ef-170">指定数据的数字签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-170">A digital signature for the specified data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-171">此方法由哈希输入的数据使用生成指定的数据的签名<xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>属性，，然后对结果进行签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-171">This method generates a signature for the specified data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 <span data-ttu-id="d68ef-172"><xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>标志是必需的如果由不随机生成的下一代加密技术 (CNG) 密钥<xref:System.Security.Cryptography.ECDsaCng>对象。</span><span class="sxs-lookup"><span data-stu-id="d68ef-172">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d68ef-173"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-173"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68ef-174">与该实例关联的密钥信息没有私钥。</span><span class="sxs-lookup"><span data-stu-id="d68ef-174">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="d68ef-175">表示对数据进行签名的权限。</span><span class="sxs-lookup"><span data-stu-id="d68ef-175">for permission to sign data.</span></span> <span data-ttu-id="d68ef-176">要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-176">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="d68ef-177">关联的枚举： <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="d68ef-177">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (System.IO.Stream data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(class System.IO.Stream data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Stream) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="d68ef-178">要签名的数据流。</span><span class="sxs-lookup"><span data-stu-id="d68ef-178">The data stream to be signed.</span></span></param>
        <summary><span data-ttu-id="d68ef-179">通过读取数据流的末尾内容生成指定数据流的签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-179">Generates a signature for the specified data stream, reading to the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="d68ef-180">指定的数据流的数字签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-180">A digital signature for the specified data stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-181">此方法由哈希输入的数据使用将生成为指定的数据的流的签名<xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>属性，，然后对结果进行签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-181">This method generates a signature for the specified data stream by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 <span data-ttu-id="d68ef-182"><xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>标志是必需的如果由不随机生成的下一代加密技术 (CNG) 密钥<xref:System.Security.Cryptography.ECDsaCng>对象。</span><span class="sxs-lookup"><span data-stu-id="d68ef-182">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d68ef-183"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-183"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68ef-184">与该实例关联的密钥信息没有私钥。</span><span class="sxs-lookup"><span data-stu-id="d68ef-184">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="d68ef-185">表示对数据进行签名的权限。</span><span class="sxs-lookup"><span data-stu-id="d68ef-185">for permission to sign data.</span></span> <span data-ttu-id="d68ef-186">要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-186">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="d68ef-187">关联的枚举： <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="d68ef-187">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] data, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] data, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="d68ef-188">要签名的消息数据。</span><span class="sxs-lookup"><span data-stu-id="d68ef-188">The message data to be signed.</span></span></param>
        <param name="offset"><span data-ttu-id="d68ef-189">字符串中开始签名的位置。</span><span class="sxs-lookup"><span data-stu-id="d68ef-189">The location in the string at which to start signing.</span></span></param>
        <param name="count"><span data-ttu-id="d68ef-190">将要签名的 <c>offset</c> 后的字符串长度（以字符为单位）。</span><span class="sxs-lookup"><span data-stu-id="d68ef-190">The length of the string, in characters, following <c>offset</c> that will be signed.</span></span></param>
        <summary><span data-ttu-id="d68ef-191">从指定的偏移量开始生成指定长度的数据的数字签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-191">Generates a digital signature for the specified length of data, beginning at the specified offset.</span></span></summary>
        <returns><span data-ttu-id="d68ef-192">指定长度的数据的数字签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-192">A digital signature for the specified length of data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-193">此方法由哈希输入的数据使用生成指定的数据的签名<xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>属性，，然后对结果进行签名</span><span class="sxs-lookup"><span data-stu-id="d68ef-193">This method generates a signature for the specified data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result</span></span>  
  
 <span data-ttu-id="d68ef-194"><xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>标志是必需的如果由不随机生成的下一代加密技术 (CNG) 密钥<xref:System.Security.Cryptography.ECDsaCng>对象。</span><span class="sxs-lookup"><span data-stu-id="d68ef-194">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d68ef-195"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-195"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d68ef-196"><paramref name="count" /> 或 <paramref name="offset" /> 导致读取超出数据字符串范围。</span><span class="sxs-lookup"><span data-stu-id="d68ef-196"><paramref name="count" /> or <paramref name="offset" /> caused reading outside the bounds of the data string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68ef-197">与该实例关联的密钥信息没有私钥。</span><span class="sxs-lookup"><span data-stu-id="d68ef-197">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="d68ef-198">表示对数据进行签名的权限。</span><span class="sxs-lookup"><span data-stu-id="d68ef-198">for permission to sign data.</span></span> <span data-ttu-id="d68ef-199">要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-199">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="d68ef-200">关联的枚举： <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="d68ef-200">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public override byte[] SignHash (byte[] hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignHash(unsigned int8[] hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignHash (hash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ hash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="d68ef-201">待签名数据的哈希值。</span><span class="sxs-lookup"><span data-stu-id="d68ef-201">The hash value of the data to be signed.</span></span></param>
        <summary><span data-ttu-id="d68ef-202">为指定哈希值生成签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-202">Generates a signature for the specified hash value.</span></span></summary>
        <returns><span data-ttu-id="d68ef-203">指定哈希值的数字签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-203">A digital signature for the specified hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-204"><xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>标志是必需的如果由不随机生成的下一代加密技术 (CNG) 密钥<xref:System.Security.Cryptography.ECDsaCng>对象。</span><span class="sxs-lookup"><span data-stu-id="d68ef-204">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d68ef-205"><paramref name="hash" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-205"><paramref name="hash" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68ef-206">与该实例关联的密钥信息没有私钥。</span><span class="sxs-lookup"><span data-stu-id="d68ef-206">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="d68ef-207">表示对数据进行签名的权限。</span><span class="sxs-lookup"><span data-stu-id="d68ef-207">for permission to sign data.</span></span> <span data-ttu-id="d68ef-208">要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-208">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="d68ef-209">关联的枚举： <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="d68ef-209">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d68ef-210">将密钥信息序列化为 XML 字符串。</span><span class="sxs-lookup"><span data-stu-id="d68ef-210">Serializes the key information to an XML string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public override string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="d68ef-211">若要包含专用参数，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-211"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d68ef-212">未实现此方法。</span><span class="sxs-lookup"><span data-stu-id="d68ef-212">This method is not implemented.</span></span></summary>
        <returns><span data-ttu-id="d68ef-213">不适用。</span><span class="sxs-lookup"><span data-stu-id="d68ef-213">Not applicable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-214">若要将当前的密钥转换为 XML 表示形式，使用<xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29>重载。</span><span class="sxs-lookup"><span data-stu-id="d68ef-214">To convert the current key to an XML representation, use the <xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d68ef-215">未实现此方法。</span><span class="sxs-lookup"><span data-stu-id="d68ef-215">This method is not implemented.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public string ToXmlString (System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXmlString(valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXmlString (format As ECKeyXmlFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXmlString(System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="d68ef-216">枚举值之一，它指定 XML 字符串的格式。</span><span class="sxs-lookup"><span data-stu-id="d68ef-216">One of the enumeration values that specifies the format of the XML string.</span></span> <span data-ttu-id="d68ef-217">当前接受的唯一格式为 <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-217">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></param>
        <summary><span data-ttu-id="d68ef-218">使用指定的格式将密钥信息序列化为 XML 字符串。</span><span class="sxs-lookup"><span data-stu-id="d68ef-218">Serializes the key information to an XML string by using the specified format.</span></span></summary>
        <returns><span data-ttu-id="d68ef-219">一个包含密钥信息的字符串对象，已根据所需的格式将其序列化为 XML 字符串。</span><span class="sxs-lookup"><span data-stu-id="d68ef-219">A string object that contains the key information, serialized to an XML string according to the requested format.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d68ef-220"><paramref name="format" /> 指定的格式无效。</span><span class="sxs-lookup"><span data-stu-id="d68ef-220"><paramref name="format" /> specifies an invalid format.</span></span> <span data-ttu-id="d68ef-221">唯一接受的值为 <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-221">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68ef-222">所有其他错误。</span><span class="sxs-lookup"><span data-stu-id="d68ef-222">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d68ef-223">验证数字签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-223">Verifies a digital signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] data, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] data, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Byte(), signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="d68ef-224">已签名的数据。</span><span class="sxs-lookup"><span data-stu-id="d68ef-224">The data that was signed.</span></span></param>
        <param name="signature"><span data-ttu-id="d68ef-225">要验证的签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-225">The signature to be verified.</span></span></param>
        <summary><span data-ttu-id="d68ef-226">验证指定的数据的数字签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-226">Verifies the digital signature of the specified data.</span></span></summary>
        <returns>
          <span data-ttu-id="d68ef-227">如果签名有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-227"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-228">此方法将生成由哈希输入的数据使用给定的数据的签名<xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>属性，，然后对结果进行签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-228">This method generates a signature for the given data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d68ef-229"><paramref name="data" /> 或 <paramref name="signature" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-229"><paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (System.IO.Stream data, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(class System.IO.Stream data, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Stream, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(System::IO::Stream ^ data, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="d68ef-230">已签名的数据流。</span><span class="sxs-lookup"><span data-stu-id="d68ef-230">The data stream that was signed.</span></span></param>
        <param name="signature"><span data-ttu-id="d68ef-231">要验证的签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-231">The signature to be verified.</span></span></param>
        <summary><span data-ttu-id="d68ef-232">通过读取数据流的末尾内容验证指定数据流的数字签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-232">Verifies the digital signature of the specified data stream, reading to the end of the stream.</span></span></summary>
        <returns>
          <span data-ttu-id="d68ef-233">如果签名有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-233"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-234">此方法进行哈希处理的输入的数据使用<xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>之前验证的属性。</span><span class="sxs-lookup"><span data-stu-id="d68ef-234">This method hashes the input data by using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property before verification.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d68ef-235"><paramref name="data" /> 或 <paramref name="signature" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-235"><paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] data, int offset, int count, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] data, int32 offset, int32 count, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Byte(), offset As Integer, count As Integer, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="d68ef-236">已签名的数据。</span><span class="sxs-lookup"><span data-stu-id="d68ef-236">The data that was signed.</span></span></param>
        <param name="offset"><span data-ttu-id="d68ef-237">数据中已签名数据开始的位置。</span><span class="sxs-lookup"><span data-stu-id="d68ef-237">The location in the data at which the signed data begins.</span></span></param>
        <param name="count"><span data-ttu-id="d68ef-238">将要签名的 <c>offset</c> 后的数据长度（以字符为单位）。</span><span class="sxs-lookup"><span data-stu-id="d68ef-238">The length of the data, in characters, following <c>offset</c> that will be signed.</span></span></param>
        <param name="signature"><span data-ttu-id="d68ef-239">要验证的签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-239">The signature to be verified.</span></span></param>
        <summary><span data-ttu-id="d68ef-240">从指定的偏移量开始验证指定长度的数据的签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-240">Verifies a signature for the specified length of data, beginning at the specified offset.</span></span></summary>
        <returns>
          <span data-ttu-id="d68ef-241">如果签名有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-241"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68ef-242">此方法进行哈希处理的输入的数据使用<xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>之前验证的属性。</span><span class="sxs-lookup"><span data-stu-id="d68ef-242">This method hashes the input data by using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property before verification.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d68ef-243"><paramref name="offset" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="d68ef-243"><paramref name="offset" /> or <paramref name="count" /> is less then zero.</span></span>  
  
 <span data-ttu-id="d68ef-244">或</span><span class="sxs-lookup"><span data-stu-id="d68ef-244">-or-</span></span>  
  
 <span data-ttu-id="d68ef-245"><paramref name="offset" /> 或 <paramref name="count" /> 大于在 <paramref name="data" /> 参数中传递的字节数组的长度。</span><span class="sxs-lookup"><span data-stu-id="d68ef-245"><paramref name="offset" /> or <paramref name="count" /> is larger than the length of the byte array passed in the <paramref name="data" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d68ef-246"><paramref name="data" /> 或 <paramref name="signature" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-246"><paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public override bool VerifyHash (byte[] hash, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyHash(unsigned int8[] hash, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyHash (hash As Byte(), signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyHash(cli::array &lt;System::Byte&gt; ^ hash, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="d68ef-247">待验证的数据的哈希值。</span><span class="sxs-lookup"><span data-stu-id="d68ef-247">The hash value of the data to be verified.</span></span></param>
        <param name="signature"><span data-ttu-id="d68ef-248">要结合哈希值验证的数据的数字签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-248">The digital signature of the data to be verified against the hash value.</span></span></param>
        <summary><span data-ttu-id="d68ef-249">针对指定的哈希值验证指定的数字签名。</span><span class="sxs-lookup"><span data-stu-id="d68ef-249">Verifies the specified digital signature against a specified hash value.</span></span></summary>
        <returns>
          <span data-ttu-id="d68ef-250">如果签名有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-250"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d68ef-251"><paramref name="hash" /> 或 <paramref name="signature" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d68ef-251"><paramref name="hash" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>