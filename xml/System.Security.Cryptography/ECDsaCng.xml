<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ECDsaCng.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59146c1f35bf2f9d913e01e050bac7d26770cc7f4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9146c1f35bf2f9d913e01e050bac7d26770cc7f4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Provides a Cryptography Next Generation (CNG) implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA).</source>
          <target state="translated">提供椭圆曲线数字签名算法 (ECDSA) 的下一代加密技术 (CNG) 实现。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>This class derives from the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsa&gt;</ph> abstract base class.</source>
          <target state="translated">此类派生自<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsa&gt;</ph>抽象基类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> class to sign a message and how to use the signature to verify that the message has not been altered.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph>类来签署一条消息以及如何使用该签名来验证消息未被更改。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class with a random key pair.</source>
          <target state="translated">使用随机的密钥对初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.#ctor">
          <source>The random key pair has a public key length of 521 bits.</source>
          <target state="translated">随机密钥对具有 521 位的公钥长度。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">此系统不支持下一代加密技术 (CNG) 类。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>The size of the key.</source>
          <target state="translated">密钥大小。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>Valid key sizes are 256, 384, and 521 bits.</source>
          <target state="translated">有效密钥大小是 256、384 和 521 位。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class with a random key pair, using the specified key size.</source>
          <target state="translated">使用指定密钥大小，通过随机密钥对来初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>The random key pair will have the public key length defined by the <ph id="ph1">`keySize`</ph> parameter.</source>
          <target state="translated">随机密钥对将具有所定义的公共密钥长度<ph id="ph1">`keySize`</ph>参数。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">此系统不支持下一代加密技术 (CNG) 类。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> specifies an invalid length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> 指定了无效的长度。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>The key that will be used as input to the cryptographic operations performed by the current object.</source>
          <target state="translated">一个密钥，它将用作当前对象所执行的加密操作的输入。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class by using the specified <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> object.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> 对象初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not specify an Elliptic Curve Digital Signature Algorithm (ECDSA) group.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 不指定椭圆曲线数字签名算法 (ECDSA) 组。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">此系统不支持下一代加密技术 (CNG) 类。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source>The curve used to generate the public/private key pair.</source>
          <target state="translated">用于生成公钥/私钥对的曲线。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class whose public/private key pair is generated over the specified curve.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> 类的新实例，该类的公钥/私钥对通过指定曲线生成。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">`curve`</ph> must validate (that is, it must return <ph id="ph2">`true`</ph>) when passed to the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> method and must be either a named or explicit prime.</source>
          <target state="translated"><ph id="ph1">`curve`</ph> 必须验证 (即，它必须返回<ph id="ph2">`true`</ph>) 时传递给<ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph>方法，并且必须已命名或显式质数。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> 不进行验证。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要包含专用参数，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>Exports the key and explicit curve parameters used by the Elliptic curve cryptography (ECC) object into an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> object.</source>
          <target state="translated">将椭圆曲线加密 (ECC) 对象使用的密钥和显式曲线参数导出到 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>The key and explicit curve parameters used by the ECC object.</source>
          <target state="translated">ECC 对象使用的密钥和显式曲线参数。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>An error occurred while obtaining the curve values.</source>
          <target state="translated">获取曲线值时发生错误。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>Explicit export is not supported by this platform.</source>
          <target state="translated">此平台不支持显式导出。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>Windows 10 or higher is required.</source>
          <target state="translated">必须使用 Windows 10 或更高版本。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要包含专用参数，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source>Exports the key used by the Elliptic curve cryptography (ECC) object into an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> object.</source>
          <target state="translated">将椭圆曲线加密 (ECC) 对象使用的密钥导出到 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source>If the key was created as a named curve, the <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECParameters.Curve" /&gt;</ph> field contains named curve parameters; otherwise, it contains explicit parameters.</source>
          <target state="translated">如果密钥作为已命名曲线创建，<ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECParameters.Curve" /&gt;</ph> 字段包含已命名的曲线参数，否则将包含显式参数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source>The key and named curve parameters used by the ECC object.</source>
          <target state="translated">ECC 对象使用的密钥和已命名曲线参数。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source>An error occurred while obtaining the curve values.</source>
          <target state="translated">获取曲线值时发生错误。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Deserializes the key information from an XML string.</source>
          <target state="translated">反序列化 XML 字符串中的密钥信息。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)">
          <source>The XML-based key information to be deserialized.</source>
          <target state="translated">要反序列化的基于 XML 的密钥信息。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)">
          <source>This method is not implemented.</source>
          <target state="translated">未实现此方法。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)">
          <source>To deserialize an XML key, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> overload instead.</source>
          <target state="translated">若要反序列化的 XML 密钥，使用<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph>重载。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)">
          <source>This method was not overridden for this instance.</source>
          <target state="translated">未重写此实例的方法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The XML-based key information to be deserialized.</source>
          <target state="translated">要反序列化的基于 XML 的密钥信息。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>One of the enumeration values that specifies the format of the XML string.</source>
          <target state="translated">枚举值之一，它指定 XML 字符串的格式。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only currently accepted format is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">当前接受的唯一格式为 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>Deserializes the key information from an XML string by using the specified format.</source>
          <target state="translated">使用指定的格式反序列化 XML 字符串中的密钥信息。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> specifies an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 指定的格式无效。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only accepted value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">唯一接受的值为 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>All other errors.</source>
          <target state="translated">所有其他错误。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>The curve to use to generate the key.</source>
          <target state="translated">用于生成密钥的曲线。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>Generates a key to use for the ECDsaCng algorithm.</source>
          <target state="translated">生成用于 ECDsaCng 算法的密钥。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> 不进行验证。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>Gets or sets the hash algorithm to use when signing and verifying data.</source>
          <target state="translated">获取或设置签名和验证数据时要使用的哈希算法。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>An object that specifies the hash algorithm.</source>
          <target state="translated">一个指定哈希算法的对象。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>This property accepts the following algorithms: <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.MD5%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A&gt;</ph>.</source>
          <target state="translated">此属性接受以下算法： <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.MD5%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A&gt;</ph>，和<ph id="ph5">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>Other custom hash algorithms may also be used.</source>
          <target state="translated">此外可以使用其他自定义的哈希算法。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>The default algorithm is <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>.</source>
          <target state="translated">默认算法是<ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>This property is not used if you are signing or verifying data that is already hashed.</source>
          <target state="translated">如果在签名或验证已哈希处理的数据，则不会使用此属性。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>The value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">该值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The curve parameters.</source>
          <target state="translated">曲线的参数。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>Replaces the existing key that the current instance is working with by creating a new <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> for the parameters structure.</source>
          <target state="translated">通过创建为参数结构创建新的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph>，来替换当前实例使用的现有密钥。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>If <ph id="ph1">`parameters`</ph> contains only <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Q&gt;</ph>, only a public key is imported.</source>
          <target state="translated">如果<ph id="ph1">`parameters`</ph>只包含<ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Q&gt;</ph>，但只导入的公共密钥。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>If <ph id="ph1">`parameters`</ph> also contains <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.D&gt;</ph>, a full key pair is imported.</source>
          <target state="translated">如果<ph id="ph1">`parameters`</ph>还包含<ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.D&gt;</ph>，导入完整密钥对。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph> field specifies the type of the curve to import.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph>字段指定的曲线以导入的类型。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> does not contain valid values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> 不包含有效的值。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> references a curve that cannot be imported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> 引用无法导入的一条曲线。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> references a curve that is not supported by this platform.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> 引用此平台不支持的一条曲线。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDsaCng.Key">
          <source>Gets or sets the key to use when signing and verifying data.</source>
          <target state="translated">获取或设置对数据进行签名或验证时要使用的键。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.Key">
          <source>An object that specifies the key.</source>
          <target state="translated">指定键的对象。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Generates a signature.</source>
          <target state="translated">生成一个签名。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>The message data to be signed.</source>
          <target state="translated">要签名的消息数据。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>Generates a signature for the specified data.</source>
          <target state="translated">生成指定数据的签名。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>A digital signature for the specified data.</source>
          <target state="translated">指定数据的数字签名。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>This method generates a signature for the specified data by hashing the input data using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property, and then signing the result.</source>
          <target state="translated">此方法由哈希输入的数据使用生成指定的数据的签名<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph>属性，，然后对结果进行签名。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph>标志是必需的如果由不随机生成的下一代加密技术 (CNG) 密钥<ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>The key information that is associated with the instance does not have a private key.</source>
          <target state="translated">与该实例关联的密钥信息没有私钥。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>for permission to sign data.</source>
          <target state="translated">表示对数据进行签名的权限。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>The data stream to be signed.</source>
          <target state="translated">要签名的数据流。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>Generates a signature for the specified data stream, reading to the end of the stream.</source>
          <target state="translated">通过读取数据流的末尾内容生成指定数据流的签名。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>A digital signature for the specified data stream.</source>
          <target state="translated">指定的数据流的数字签名。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>This method generates a signature for the specified data stream by hashing the input data using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property, and then signing the result.</source>
          <target state="translated">此方法由哈希输入的数据使用将生成为指定的数据的流的签名<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph>属性，，然后对结果进行签名。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph>标志是必需的如果由不随机生成的下一代加密技术 (CNG) 密钥<ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>The key information that is associated with the instance does not have a private key.</source>
          <target state="translated">与该实例关联的密钥信息没有私钥。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>for permission to sign data.</source>
          <target state="translated">表示对数据进行签名的权限。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The message data to be signed.</source>
          <target state="translated">要签名的消息数据。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The location in the string at which to start signing.</source>
          <target state="translated">字符串中开始签名的位置。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The length of the string, in characters, following <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> that will be signed.</source>
          <target state="translated">将要签名的 <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> 后的字符串长度（以字符为单位）。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>Generates a digital signature for the specified length of data, beginning at the specified offset.</source>
          <target state="translated">从指定的偏移量开始生成指定长度的数据的数字签名。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>A digital signature for the specified length of data.</source>
          <target state="translated">指定长度的数据的数字签名。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>This method generates a signature for the specified data by hashing the input data using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property, and then signing the result</source>
          <target state="translated">此方法由哈希输入的数据使用生成指定的数据的签名<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph>属性，，然后对结果进行签名</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph>标志是必需的如果由不随机生成的下一代加密技术 (CNG) 密钥<ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> or <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> caused reading outside the bounds of the data string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> 导致读取超出数据字符串范围。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The key information that is associated with the instance does not have a private key.</source>
          <target state="translated">与该实例关联的密钥信息没有私钥。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>for permission to sign data.</source>
          <target state="translated">表示对数据进行签名的权限。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>The hash value of the data to be signed.</source>
          <target state="translated">待签名数据的哈希值。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>Generates a signature for the specified hash value.</source>
          <target state="translated">为指定哈希值生成签名。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>A digital signature for the specified hash value.</source>
          <target state="translated">指定哈希值的数字签名。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph>标志是必需的如果由不随机生成的下一代加密技术 (CNG) 密钥<ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>The key information that is associated with the instance does not have a private key.</source>
          <target state="translated">与该实例关联的密钥信息没有私钥。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>for permission to sign data.</source>
          <target state="translated">表示对数据进行签名的权限。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Serializes the key information to an XML string.</source>
          <target state="translated">将密钥信息序列化为 XML 字符串。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要包含专用参数，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source>This method is not implemented.</source>
          <target state="translated">未实现此方法。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source>Not applicable.</source>
          <target state="translated">不适用。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source>To convert the current key to an XML representation, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> overload instead.</source>
          <target state="translated">若要将当前的密钥转换为 XML 表示形式，使用<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph>重载。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source>This method is not implemented.</source>
          <target state="translated">未实现此方法。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>One of the enumeration values that specifies the format of the XML string.</source>
          <target state="translated">枚举值之一，它指定 XML 字符串的格式。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only currently accepted format is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">当前接受的唯一格式为 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>Serializes the key information to an XML string by using the specified format.</source>
          <target state="translated">使用指定的格式将密钥信息序列化为 XML 字符串。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>A string object that contains the key information, serialized to an XML string according to the requested format.</source>
          <target state="translated">一个包含密钥信息的字符串对象，已根据所需的格式将其序列化为 XML 字符串。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> specifies an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 指定的格式无效。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only accepted value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">唯一接受的值为 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>All other errors.</source>
          <target state="translated">所有其他错误。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Verifies a digital signature.</source>
          <target state="translated">验证数字签名。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source>The data that was signed.</source>
          <target state="translated">已签名的数据。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source>The signature to be verified.</source>
          <target state="translated">要验证的签名。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source>Verifies the digital signature of the specified data.</source>
          <target state="translated">验证指定的数据的数字签名。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果签名有效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source>This method generates a signature for the given data by hashing the input data using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property, and then signing the result.</source>
          <target state="translated">此方法将生成由哈希输入的数据使用给定的数据的签名<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph>属性，，然后对结果进行签名。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> or <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source>The data stream that was signed.</source>
          <target state="translated">已签名的数据流。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source>The signature to be verified.</source>
          <target state="translated">要验证的签名。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source>Verifies the digital signature of the specified data stream, reading to the end of the stream.</source>
          <target state="translated">通过读取数据流的末尾内容验证指定数据流的数字签名。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果签名有效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source>This method hashes the input data by using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property before verification.</source>
          <target state="translated">此方法进行哈希处理的输入的数据使用<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph>之前验证的属性。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> or <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>The data that was signed.</source>
          <target state="translated">已签名的数据。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>The location in the data at which the signed data begins.</source>
          <target state="translated">数据中已签名数据开始的位置。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>The length of the data, in characters, following <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> that will be signed.</source>
          <target state="translated">将要签名的 <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> 后的数据长度（以字符为单位）。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>The signature to be verified.</source>
          <target state="translated">要验证的签名。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>Verifies a signature for the specified length of data, beginning at the specified offset.</source>
          <target state="translated">从指定的偏移量开始验证指定长度的数据的签名。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果签名有效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>This method hashes the input data by using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property before verification.</source>
          <target state="translated">此方法进行哈希处理的输入的数据使用<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph>之前验证的属性。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less then zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the length of the byte array passed in the <ph id="ph3">&lt;paramref name="data" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 大于在 <ph id="ph3">&lt;paramref name="data" /&gt;</ph> 参数中传递的字节数组的长度。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> or <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source>The hash value of the data to be verified.</source>
          <target state="translated">待验证的数据的哈希值。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source>The digital signature of the data to be verified against the hash value.</source>
          <target state="translated">要结合哈希值验证的数据的数字签名。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source>Verifies the specified digital signature against a specified hash value.</source>
          <target state="translated">针对指定的哈希值验证指定的数字签名。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果签名有效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> or <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>