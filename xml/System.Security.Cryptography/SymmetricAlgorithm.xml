<Type Name="SymmetricAlgorithm" FullName="System.Security.Cryptography.SymmetricAlgorithm">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80b60325f1253f13249f34a30a62ce97fb05ea60" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48725362" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SymmetricAlgorithm : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SymmetricAlgorithm extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SymmetricAlgorithm&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymmetricAlgorithm abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type SymmetricAlgorithm = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1e70c-101">表示所有对称算法的实现都必须从中继承的抽象基类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1e70c-101">Represents the abstract base class from which all implementations of symmetric algorithms must inherit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-102">派生的类<xref:System.Security.Cryptography.SymmetricAlgorithm>类使用称为密码块链 (CBC) 的链接模式需要一个密钥 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) 和初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) 对数据执行加密转换。</span><span class="sxs-lookup"><span data-stu-id="1e70c-102">The classes that derive from the <xref:System.Security.Cryptography.SymmetricAlgorithm> class use a chaining mode called cipher block chaining (CBC), which requires a key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and an initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to perform cryptographic transformations on data.</span></span>  <span data-ttu-id="1e70c-103">使用其中一个加密的数据进行解密<xref:System.Security.Cryptography.SymmetricAlgorithm>类，必须设置<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>属性和<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>为已加密所用的相同值的属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-103">To decrypt data that was encrypted using one of the <xref:System.Security.Cryptography.SymmetricAlgorithm> classes, you must set the <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property to the same values that were used for encryption.</span></span>  <span data-ttu-id="1e70c-104">为对称算法非常有用，密钥必须仅发送方和接收方所知。</span><span class="sxs-lookup"><span data-stu-id="1e70c-104">For a symmetric algorithm to be useful, the secret key must be known only to the sender and the receiver.</span></span>  
  
 <span data-ttu-id="1e70c-105"><xref:System.Security.Cryptography.RijndaelManaged><xref:System.Security.Cryptography.DESCryptoServiceProvider>， <xref:System.Security.Cryptography.RC2CryptoServiceProvider>，和<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider>是对称算法的实现。</span><span class="sxs-lookup"><span data-stu-id="1e70c-105"><xref:System.Security.Cryptography.RijndaelManaged>, <xref:System.Security.Cryptography.DESCryptoServiceProvider>, <xref:System.Security.Cryptography.RC2CryptoServiceProvider>, and <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> are implementations of symmetric algorithms.</span></span>  
  
 <span data-ttu-id="1e70c-106">请注意，当使用派生类，它是不足够，从安全角度看，只需使用对象完成强制垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="1e70c-106">Note that when using derived classes, it is not enough, from a security perspective, to simply force a garbage collection after you have finished using the object.</span></span> <span data-ttu-id="1e70c-107">必须显式调用<xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A>中进行发布之前的对象的任何敏感数据清零的对象上的方法。</span><span class="sxs-lookup"><span data-stu-id="1e70c-107">You must explicitly call the <xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A> method on the object to zero out any sensitive data within the object before it is released.</span></span> <span data-ttu-id="1e70c-108">请注意，垃圾回收不会收集的对象的内容不为零，但只需将标记为可用于重新分配内存。</span><span class="sxs-lookup"><span data-stu-id="1e70c-108">Note that garbage collection does not zero out the contents of collected objects but simply marks the memory as available for reallocation.</span></span> <span data-ttu-id="1e70c-109">因此垃圾回收对象中包含的数据仍可能存在内存堆中分配的内存中。</span><span class="sxs-lookup"><span data-stu-id="1e70c-109">Thus the data contained within a garbage collected object may still be present in the memory heap in unallocated memory.</span></span> <span data-ttu-id="1e70c-110">对于加密对象，此数据可能包含敏感信息，如关键数据或纯文本块。</span><span class="sxs-lookup"><span data-stu-id="1e70c-110">In the case of cryptographic objects, this data could contain sensitive information such as key data or a block of plain text.</span></span>  
  
 <span data-ttu-id="1e70c-111">.NET Framework 中保留敏感的数据实现的所有加密类`Clear`方法。</span><span class="sxs-lookup"><span data-stu-id="1e70c-111">All cryptographic classes in the .NET Framework that hold sensitive data implement a `Clear` method.</span></span> <span data-ttu-id="1e70c-112">调用时，`Clear`方法用零覆盖在对象中的所有敏感数据，然后释放该对象，以便它可以安全地进行垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="1e70c-112">When called, the `Clear` method overwrites all sensitive data within the object with zeros and then releases the object so that it can be safely garbage collected.</span></span> <span data-ttu-id="1e70c-113">当归零对象并将其发布时，然后应调用`Dispose`方法替换`disposing`参数设置为`True`释放所有托管和非托管资源与对象相关联。</span><span class="sxs-lookup"><span data-stu-id="1e70c-113">When the object has been zeroed and released, you should then call the `Dispose` method with the `disposing` parameter set to `True` to dispose of all managed and unmanaged resources associated with the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e70c-114">下面的代码示例使用<xref:System.Security.Cryptography.RijndaelManaged>具有指定的类<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>属性和初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) 来加密指定的文件`inName`，并加密的结果输出到指定文件`outName`.</span><span class="sxs-lookup"><span data-stu-id="1e70c-114">The following code example uses the <xref:System.Security.Cryptography.RijndaelManaged> class with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`, and outputs the encrypted result to the file specified by `outName`.</span></span> <span data-ttu-id="1e70c-115">`desKey`和`desIV`方法的参数是 8 字节数组。</span><span class="sxs-lookup"><span data-stu-id="1e70c-115">The `desKey` and `desIV` parameters to the method are 8-byte arrays.</span></span> <span data-ttu-id="1e70c-116">您必须安装为运行此示例中的高度加密包。</span><span class="sxs-lookup"><span data-stu-id="1e70c-116">You must have the high encryption pack installed to run this example.</span></span>  
  
 [!code-cpp[Classic CryptoStream Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic CryptoStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CryptoStream Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic CryptoStream Example/CS/source.cs#1)]
 [!code-vb[Classic CryptoStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic CryptoStream Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="1e70c-117">继承自<see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />类，必须重写以下成员： <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])" />， <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])" />， <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV" />，和<see cref="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey" />。</span>
        <span class="sxs-lookup">
          <span data-stu-id="1e70c-117">When you inherit from the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class, you must override the following members: <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])" />, <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])" />, <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV" />, and <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey" />.</span>
        </span>
      </para>
    </block>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
      <span data-ttu-id="1e70c-118">加密服务</span>
      <span class="sxs-lookup">
        <span data-stu-id="1e70c-118">Cryptographic Services</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SymmetricAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SymmetricAlgorithm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-119">初始化 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-119">Initializes a new instance of the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-120">无法创建抽象类的实例。</span><span class="sxs-lookup"><span data-stu-id="1e70c-120">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="1e70c-121">应用程序代码将创建派生类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1e70c-121">Application code creates a new instance of a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="1e70c-122">从对称算法派生的类的实现无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-122">The implementation of the class derived from the symmetric algorithm is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-123">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-123">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public virtual int BlockSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int BlockSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int with get, set" Usage="System.Security.Cryptography.SymmetricAlgorithm.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-124">获取或设置加密操作的块大小（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-124">Gets or sets the block size, in bits, of the cryptographic operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e70c-125">块大小（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-125">The block size, in bits.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-126">块大小是可以加密或解密在一个操作中的数据的基本单位。</span><span class="sxs-lookup"><span data-stu-id="1e70c-126">The block size is the basic unit of data that can be encrypted or decrypted in one operation.</span></span> <span data-ttu-id="1e70c-127">消息长度超过的块大小被当作连续块;消息长度小于的块大小必须填充具有额外的位来访问的块的大小。</span><span class="sxs-lookup"><span data-stu-id="1e70c-127">Messages longer than the block size are handled as successive blocks; messages shorter than the block size must be padded with extra bits to reach the size of a block.</span></span> <span data-ttu-id="1e70c-128">有效的块大小取决于使用的对称算法。</span><span class="sxs-lookup"><span data-stu-id="1e70c-128">Valid block sizes are determined by the symmetric algorithm used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="1e70c-129">块大小无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-129">The block size is invalid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-130">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-130">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="protected int BlockSizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected BlockSizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int BlockSizeValue;" />
      <MemberSignature Language="F#" Value="val mutable BlockSizeValue : int" Usage="System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-131">表示加密操作的块大小（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-131">Represents the block size, in bits, of the cryptographic operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-132">块大小是可以加密或解密在一个操作中的数据的基本单位。</span><span class="sxs-lookup"><span data-stu-id="1e70c-132">The block size is the basic unit of data that can be encrypted or decrypted in one operation.</span></span> <span data-ttu-id="1e70c-133">消息长度超过的块大小被当作连续块;消息长度小于的块大小必须填充具有额外的位来访问的块的大小。</span><span class="sxs-lookup"><span data-stu-id="1e70c-133">Messages longer than the block size are handled as successive blocks; messages shorter than the block size must be padded with extra bits to reach the size of a block.</span></span> <span data-ttu-id="1e70c-134">有效的块大小取决于使用的对称算法。</span><span class="sxs-lookup"><span data-stu-id="1e70c-134">Valid block sizes are determined by the symmetric algorithm used.</span></span>  
  
 <span data-ttu-id="1e70c-135">通过访问此字段<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-135">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-136">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-136">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="symmetricAlgorithm.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-137">释放 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 类使用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-137">Releases all resources used by the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-138">请注意，当使用派生类，它是不足够，从安全角度看，只需使用对象完成强制垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="1e70c-138">Note that when using derived classes, it is not enough, from a security perspective, to simply force a garbage collection after you have finished using the object.</span></span> <span data-ttu-id="1e70c-139">必须显式调用<xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A>中进行发布之前的对象的任何敏感数据清零的对象上的方法。</span><span class="sxs-lookup"><span data-stu-id="1e70c-139">You must explicitly call the <xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A> method on the object to zero out any sensitive data within the object before it is released.</span></span> <span data-ttu-id="1e70c-140">请注意，垃圾回收不会收集的对象的内容不为零，但只需将标记为可用于重新分配内存。</span><span class="sxs-lookup"><span data-stu-id="1e70c-140">Note that garbage collection does not zero out the contents of collected objects but simply marks the memory as available for reallocation.</span></span> <span data-ttu-id="1e70c-141">因此垃圾回收对象中包含的数据仍可能存在内存堆中分配的内存中。</span><span class="sxs-lookup"><span data-stu-id="1e70c-141">Thus the data contained within a garbage collected object may still be present in the memory heap in unallocated memory.</span></span> <span data-ttu-id="1e70c-142">对于加密对象，此数据可能包含敏感信息，如关键数据或纯文本块。</span><span class="sxs-lookup"><span data-stu-id="1e70c-142">In the case of cryptographic objects, this data could contain sensitive information such as key data or a block of plain text.</span></span>  
  
 <span data-ttu-id="1e70c-143">.NET Framework 中保留敏感的数据实现的所有加密类`Clear`方法。</span><span class="sxs-lookup"><span data-stu-id="1e70c-143">All cryptographic classes in the .NET Framework that hold sensitive data implement a `Clear` method.</span></span> <span data-ttu-id="1e70c-144">调用时，`Clear`方法用零覆盖在对象中的所有敏感数据，然后释放该对象，以便它可以安全地进行垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="1e70c-144">When called, the `Clear` method overwrites all sensitive data within the object with zeros and then releases the object so that it can be safely garbage collected.</span></span> <span data-ttu-id="1e70c-145">当归零对象并将其发布时，然后应调用`Dispose`方法替换`disposing`参数设置为`True`释放所有托管和非托管资源与对象相关联。</span><span class="sxs-lookup"><span data-stu-id="1e70c-145">When the object has been zeroed and released, you should then call the `Dispose` method with the `disposing` parameter set to `True` to dispose of all managed and unmanaged resources associated with the object.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-146">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-146">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-147">创建用于执行对称算法的加密对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-147">Creates a cryptographic object used to perform the symmetric algorithm.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.SymmetricAlgorithm Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.SymmetricAlgorithm Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As SymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::SymmetricAlgorithm ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="System.Security.Cryptography.SymmetricAlgorithm.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-148">创建用于执行对称算法的默认加密对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-148">Creates a default cryptographic object used to perform the symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e70c-149">用于执行对称算法的默认加密对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-149">A default cryptographic object used to perform the symmetric algorithm.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e70c-150">下面的代码示例使用<xref:System.Security.Cryptography.RijndaelManaged>具有指定的类<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>属性和初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) 来加密指定的文件`inName`，并加密的结果输出到指定文件`outName`.</span><span class="sxs-lookup"><span data-stu-id="1e70c-150">The following code example uses the <xref:System.Security.Cryptography.RijndaelManaged> class with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`, and outputs the encrypted result to the file specified by `outName`.</span></span> <span data-ttu-id="1e70c-151">`desKey`和`desIV`方法的参数是 8 字节数组。</span><span class="sxs-lookup"><span data-stu-id="1e70c-151">The `desKey` and `desIV` parameters to the method are 8-byte arrays.</span></span> <span data-ttu-id="1e70c-152">您必须安装为运行此示例中的高度加密包。</span><span class="sxs-lookup"><span data-stu-id="1e70c-152">You must have the high encryption pack installed to run this example.</span></span>  
  
 [!code-cpp[Classic CryptoStream Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic CryptoStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CryptoStream Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic CryptoStream Example/CS/source.cs#1)]
 [!code-vb[Classic CryptoStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic CryptoStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-153">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-153">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.SymmetricAlgorithm Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.SymmetricAlgorithm Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As SymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::SymmetricAlgorithm ^ Create(System::String ^ algName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="System.Security.Cryptography.SymmetricAlgorithm.Create algName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName">
          <span data-ttu-id="1e70c-154">要使用的<see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 类的特定实现的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-154">The name of the specific implementation of the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e70c-155">创建用于执行对称算法的指定加密对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-155">Creates the specified cryptographic object used to perform the symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e70c-156">一个加密对象，用于执行对称算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-156">A cryptographic object used to perform the symmetric algorithm.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-157">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-157">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDecryptor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-158">创建对称解密器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-158">Creates a symmetric decryptor object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.ICryptoTransform CreateDecryptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDecryptor () As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor();" />
      <MemberSignature Language="F#" Value="abstract member CreateDecryptor : unit -&gt; System.Security.Cryptography.ICryptoTransform&#xA;override this.CreateDecryptor : unit -&gt; System.Security.Cryptography.ICryptoTransform" Usage="symmetricAlgorithm.CreateDecryptor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-159">用当前的 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> 属性和初始化向量 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) 创建对称解密器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-159">Creates a symmetric decryptor object with the current <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e70c-160">对称解密器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-160">A symmetric decryptor object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-161">此方法会解密已加密的邮件使用创建<xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A>重载具有相同的签名。</span><span class="sxs-lookup"><span data-stu-id="1e70c-161">This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A> overload with the same signature.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-162">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-162">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateDecryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="abstract member CreateDecryptor : byte[] * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="symmetricAlgorithm.CreateDecryptor (rgbKey, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">
          <span data-ttu-id="1e70c-163">用于对称算法的密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-163">The secret key to use for the symmetric algorithm.</span>
          </span>
        </param>
        <param name="rgbIV">
          <span data-ttu-id="1e70c-164">用于对称算法的初始化向量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-164">The initialization vector to use for the symmetric algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e70c-165">当在派生类中重写时，用指定的 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> 属性和初始化向量 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) 创建对称解密器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-165">When overridden in a derived class, creates a symmetric decryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e70c-166">对称解密器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-166">A symmetric decryptor object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-167">此方法会解密已加密的邮件使用创建<xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A>重载使用相同的参数。</span><span class="sxs-lookup"><span data-stu-id="1e70c-167">This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A> overload with the same parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-168">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-168">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEncryptor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-169">创建对称加密器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-169">Creates a symmetric encryptor object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.ICryptoTransform CreateEncryptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEncryptor () As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor();" />
      <MemberSignature Language="F#" Value="abstract member CreateEncryptor : unit -&gt; System.Security.Cryptography.ICryptoTransform&#xA;override this.CreateEncryptor : unit -&gt; System.Security.Cryptography.ICryptoTransform" Usage="symmetricAlgorithm.CreateEncryptor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-170">用当前的 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> 属性和初始化向量 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) 创建对称加密器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-170">Creates a symmetric encryptor object with the current <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e70c-171">对称加密器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-171">A symmetric encryptor object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-172">如果当前<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>属性是`null`，则<xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A>调用方法来创建一个新随机<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>。</span><span class="sxs-lookup"><span data-stu-id="1e70c-172">If the current <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property is `null`, the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> method is called to create a new random <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>.</span></span> <span data-ttu-id="1e70c-173">如果当前<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>属性是`null`，则<xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A>调用方法来创建一个新随机<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>。</span><span class="sxs-lookup"><span data-stu-id="1e70c-173">If the current <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property is `null`, the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> method is called to create a new random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>.</span></span>  
  
 <span data-ttu-id="1e70c-174">使用<xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A>重载具有相同的签名进行解密此方法的结果。</span><span class="sxs-lookup"><span data-stu-id="1e70c-174">Use the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A> overload with the same signature to decrypt the result of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e70c-175">下面的示例对使用返回的转换对象的字符串进行加密<xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e70c-175">The following example encrypts a string using the transform object returned from the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A> method.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.SymmetricAlgorithm#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm/cpp/encryptor.cpp#1)]
 [!code-csharp[System.Security.Cryptography.SymmetricAlgorithm#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm/cs/encryptor.cs#1)]
 [!code-vb[System.Security.Cryptography.SymmetricAlgorithm#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm/vb/encryptor.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-176">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-176">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateEncryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="abstract member CreateEncryptor : byte[] * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="symmetricAlgorithm.CreateEncryptor (rgbKey, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">
          <span data-ttu-id="1e70c-177">用于对称算法的密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-177">The secret key to use for the symmetric algorithm.</span>
          </span>
        </param>
        <param name="rgbIV">
          <span data-ttu-id="1e70c-178">用于对称算法的初始化向量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-178">The initialization vector to use for the symmetric algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e70c-179">当在派生类中重写时，用指定的 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> 属性和初始化向量 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) 创建对称加密器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-179">When overridden in a derived class, creates a symmetric encryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e70c-180">对称加密器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-180">A symmetric encryptor object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-181">使用<xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A>重载具有相同的参数来解密此方法的结果。</span><span class="sxs-lookup"><span data-stu-id="1e70c-181">Use the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-182">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-182">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-183">释放由 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 类的当前实例占用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-183">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="symmetricAlgorithm.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-184">释放由 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 类的当前实例占用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-184">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-185">在完成使用 `Dispose` 后，应调用 <xref:System.Security.Cryptography.SymmetricAlgorithm>。</span><span class="sxs-lookup"><span data-stu-id="1e70c-185">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.SymmetricAlgorithm>.</span></span> <span data-ttu-id="1e70c-186">`Dispose` 方法使 <xref:System.Security.Cryptography.SymmetricAlgorithm> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="1e70c-186">The `Dispose` method leaves the <xref:System.Security.Cryptography.SymmetricAlgorithm> in an unusable state.</span></span> <span data-ttu-id="1e70c-187">在调用`Dispose`，必须释放对所有引用<xref:System.Security.Cryptography.SymmetricAlgorithm>这样垃圾回收器才能收回内存的<xref:System.Security.Cryptography.SymmetricAlgorithm>占用。</span><span class="sxs-lookup"><span data-stu-id="1e70c-187">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.SymmetricAlgorithm> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.SymmetricAlgorithm> was occupying.</span></span>  
  
 <span data-ttu-id="1e70c-188">有关详细信息，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="1e70c-188">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e70c-189">每次释放对 `Dispose` 的最后一个引用前，均应调用 <xref:System.Security.Cryptography.SymmetricAlgorithm>。</span><span class="sxs-lookup"><span data-stu-id="1e70c-189">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.SymmetricAlgorithm>.</span></span> <span data-ttu-id="1e70c-190">否则，在垃圾回收器调用 <xref:System.Security.Cryptography.SymmetricAlgorithm> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="1e70c-190">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.SymmetricAlgorithm> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="symmetricAlgorithm.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1e70c-191">
            <see langword="true" /> 表示释放托管资源和非托管资源；<see langword="false" /> 表示仅释放非托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-191">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e70c-192">释放由 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-192">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-193">调用此方法由公共`Dispose()`方法和`Finalize`方法。</span><span class="sxs-lookup"><span data-stu-id="1e70c-193">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="1e70c-194">`Dispose()` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="1e70c-194">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="1e70c-195">`Finalize` 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="1e70c-195">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="1e70c-196">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Security.Cryptography.SymmetricAlgorithm> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="1e70c-196">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.SymmetricAlgorithm> references.</span></span> <span data-ttu-id="1e70c-197">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="1e70c-197">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1e70c-198">
              <see langword="Dispose" /> 可以由其他对象多次调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e70c-198">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="1e70c-199">重写时<see langword="Dispose(Boolean)" />，请小心不要引用在早期调用之前释放对象<see langword="Dispose" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e70c-199">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="1e70c-200">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e70c-200">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="1e70c-201">有关详细信息<see langword="Dispose" />并<see langword="Finalize" />，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1e70c-201">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-202">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-202">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FeedbackSize">
      <MemberSignature Language="C#" Value="public virtual int FeedbackSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FeedbackSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FeedbackSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FeedbackSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FeedbackSize : int with get, set" Usage="System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-203">获取或设置加密操作的反馈大小（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-203">Gets or sets the feedback size, in bits, of the cryptographic operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e70c-204">反馈大小（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-204">The feedback size in bits.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-205">反馈大小确定反馈给连续加密或解密操作的数据量。</span><span class="sxs-lookup"><span data-stu-id="1e70c-205">The feedback size determines the amount of data that is fed back to successive encryption or decryption operations.</span></span> <span data-ttu-id="1e70c-206">反馈大小不能大于块大小。</span><span class="sxs-lookup"><span data-stu-id="1e70c-206">The feedback size cannot be greater than the block size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="1e70c-207">反馈大小大于块大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-207">The feedback size is larger than the block size.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-208">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-208">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FeedbackSizeValue">
      <MemberSignature Language="C#" Value="protected int FeedbackSizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 FeedbackSizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected FeedbackSizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int FeedbackSizeValue;" />
      <MemberSignature Language="F#" Value="val mutable FeedbackSizeValue : int" Usage="System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-209">表示加密操作的反馈大小（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-209">Represents the feedback size, in bits, of the cryptographic operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-210">反馈大小确定反馈给连续加密或解密操作的数据量。</span><span class="sxs-lookup"><span data-stu-id="1e70c-210">The feedback size determines the amount of data that is fed back to successive encryption or decryption operations.</span></span> <span data-ttu-id="1e70c-211">反馈大小不能大于块大小。</span><span class="sxs-lookup"><span data-stu-id="1e70c-211">The feedback size cannot be greater than the block size.</span></span>  
  
 <span data-ttu-id="1e70c-212">通过访问此字段<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-212">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-213">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-213">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymmetricAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymmetricAlgorithm ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="symmetricAlgorithm.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateIV">
      <MemberSignature Language="C#" Value="public abstract void GenerateIV ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateIV() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub GenerateIV ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void GenerateIV();" />
      <MemberSignature Language="F#" Value="abstract member GenerateIV : unit -&gt; unit" Usage="symmetricAlgorithm.GenerateIV " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-214">当在派生类中重写时，生成用于该算法的随机初始化向量 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-214">When overridden in a derived class, generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) to use for the algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-215">一般情况下，没有理由才能使用此方法，因为`CreateEncryptor()`或`CreateEncryptor(null, null)`自动生成初始化向量和密钥。</span><span class="sxs-lookup"><span data-stu-id="1e70c-215">In general, there is no reason to use this method, because `CreateEncryptor()` or `CreateEncryptor(null, null)` automatically generates both an initialization vector and a key.</span></span> <span data-ttu-id="1e70c-216">但是，你可能想要使用<xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A>方法以重新使用具有不同的初始化向量的对称算法实例。</span><span class="sxs-lookup"><span data-stu-id="1e70c-216">However, you may want to use the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> method to reuse a symmetric algorithm instance with a different initialization vector.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-217">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-217">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public abstract void GenerateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub GenerateKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void GenerateKey();" />
      <MemberSignature Language="F#" Value="abstract member GenerateKey : unit -&gt; unit" Usage="symmetricAlgorithm.GenerateKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-218">当在派生类中重写时，生成用于该算法的随机密钥 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-218">When overridden in a derived class, generates a random key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) to use for the algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-219">一般情况下，没有理由才能使用此方法，因为`CreateEncryptor()`或`CreateEncryptor(null, null)`自动生成初始化向量和密钥。</span><span class="sxs-lookup"><span data-stu-id="1e70c-219">In general, there is no reason to use this method, because `CreateEncryptor()` or `CreateEncryptor(null, null)` automatically generates both an initialization vector and a key.</span></span> <span data-ttu-id="1e70c-220">但是，你可能想要使用<xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A>方法以使用不同的密钥重新使用对称算法的实例。</span><span class="sxs-lookup"><span data-stu-id="1e70c-220">However, you may want to use the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> method to reuse a symmetric algorithm instance with a different key.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-221">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-221">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IV">
      <MemberSignature Language="C#" Value="public virtual byte[] IV { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] IV" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IV As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ IV { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IV : byte[] with get, set" Usage="System.Security.Cryptography.SymmetricAlgorithm.IV" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-222">获取或设置对称算法的初始化向量 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-222">Gets or sets the initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) for the symmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e70c-223">初始化向量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-223">The initialization vector.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-224"><xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>属性自动设置为新的随机值，只要创建的其中一个新实例，就<xref:System.Security.Cryptography.SymmetricAlgorithm>类或当您手动调用<xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1e70c-224">The <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property is automatically set to a new random value whenever you create a new instance of one of the <xref:System.Security.Cryptography.SymmetricAlgorithm> classes or when you manually call the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> method.</span></span>  <span data-ttu-id="1e70c-225">大小<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>属性必须与相同<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A>属性除以 8。</span><span class="sxs-lookup"><span data-stu-id="1e70c-225">The size of the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property must be the same as the <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A> property divided by 8.</span></span>  
  
 <span data-ttu-id="1e70c-226">派生的类<xref:System.Security.Cryptography.SymmetricAlgorithm>类使用称为密码块链 (CBC) 的链接模式需要一个密钥和初始化向量对数据执行加密转换。</span><span class="sxs-lookup"><span data-stu-id="1e70c-226">The classes that derive from the <xref:System.Security.Cryptography.SymmetricAlgorithm> class use a chaining mode called cipher block chaining (CBC), which requires a key and an initialization vector to perform cryptographic transformations on data.</span></span>  <span data-ttu-id="1e70c-227">使用其中一个加密的数据进行解密<xref:System.Security.Cryptography.SymmetricAlgorithm>类，必须设置<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>属性和<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>为已加密所用的相同值的属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-227">To decrypt data that was encrypted using one of the <xref:System.Security.Cryptography.SymmetricAlgorithm> classes, you must set the <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property to the same values that were used for encryption.</span></span>  
  
 <span data-ttu-id="1e70c-228">对于给定的密钥*k*，不使用初始化向量的简单块密码将到相同的密码文本的输出块加密的纯文本相同的输入的块。</span><span class="sxs-lookup"><span data-stu-id="1e70c-228">For a given secret key *k*, a simple block cipher that does not use an initialization vector will encrypt the same input block of plain text into the same output block of cipher text.</span></span> <span data-ttu-id="1e70c-229">如果纯文本流中存在重复的块，将你的密码文本流中具有重复的块。</span><span class="sxs-lookup"><span data-stu-id="1e70c-229">If you have duplicate blocks within your plain text stream, you will have duplicate blocks within your cipher text stream.</span></span> <span data-ttu-id="1e70c-230">如果未经授权的用户知道的纯文本块结构有关的任何信息，它们可用于该信息会解密已知的密码文本块，可能是恢复你的密钥。</span><span class="sxs-lookup"><span data-stu-id="1e70c-230">If unauthorized users know anything about the structure of a block of your plain text, they can use that information to decipher the known cipher text block and possibly recover your key.</span></span> <span data-ttu-id="1e70c-231">若要克服此问题，加密过程的下一个块混合来自上一个块的信息。</span><span class="sxs-lookup"><span data-stu-id="1e70c-231">To combat this problem, information from the previous block is mixed into the process of encrypting the next block.</span></span> <span data-ttu-id="1e70c-232">因此，两个相同的纯文本块的输出是不同的。</span><span class="sxs-lookup"><span data-stu-id="1e70c-232">Thus, the output of two identical plain text blocks is different.</span></span> <span data-ttu-id="1e70c-233">由于此技术使用上一个块来加密下一个块，需要初始化向量来加密数据的第一个块。</span><span class="sxs-lookup"><span data-stu-id="1e70c-233">Because this technique uses the previous block to encrypt the next block, an initialization vector is needed to encrypt the first block of data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e70c-234">试图将初始化向量设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-234">An attempt was made to set the initialization vector to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="1e70c-235">试图将初始化向量设置为无效大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-235">An attempt was made to set the initialization vector to an invalid size.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-236">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-236">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IVValue">
      <MemberSignature Language="C#" Value="protected byte[] IVValue;" />
      <MemberSignature Language="ILAsm" Value=".field family unsigned int8[] IVValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.IVValue" />
      <MemberSignature Language="VB.NET" Value="Protected IVValue As Byte() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Byte&gt; ^ IVValue;" />
      <MemberSignature Language="F#" Value="val mutable IVValue : byte[]" Usage="System.Security.Cryptography.SymmetricAlgorithm.IVValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-237">表示对称算法的初始化向量 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-237">Represents the initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) for the symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-238">通过访问此字段<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-238">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-239">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-239">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public virtual byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.SymmetricAlgorithm.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-240">获取或设置对称算法的密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-240">Gets or sets the secret key for the symmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e70c-241">用于对称算法的密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-241">The secret key to use for the symmetric algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-242">对于加密和解密都使用机密密钥。</span><span class="sxs-lookup"><span data-stu-id="1e70c-242">The secret key is used both for encryption and for decryption.</span></span> <span data-ttu-id="1e70c-243">若要成功对称算法，为机密密钥必须仅发送方和接收方所知。</span><span class="sxs-lookup"><span data-stu-id="1e70c-243">For a symmetric algorithm to be successful, the secret key must be known only to the sender and the receiver.</span></span> <span data-ttu-id="1e70c-244">有效密钥大小指定的特定对称算法实现和中列出<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-244">The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 <span data-ttu-id="1e70c-245">如果此属性为`null`时使用它，<xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A>调用方法来创建新的随机值。</span><span class="sxs-lookup"><span data-stu-id="1e70c-245">If this property is `null` when it is used, the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> method is called to create a new random value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1e70c-246">试图将密钥设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-246">An attempt was made to set the key to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="1e70c-247">密钥大小无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-247">The key size is invalid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-248">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-248">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public virtual int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int with get, set" Usage="System.Security.Cryptography.SymmetricAlgorithm.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-249">获取或设置对称算法所用密钥的大小（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-249">Gets or sets the size, in bits, of the secret key used by the symmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e70c-250">对称算法所用密钥的大小（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-250">The size, in bits, of the secret key used by the symmetric algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-251">有效密钥大小指定的特定对称算法实现和中列出<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-251">The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="1e70c-252">密钥大小无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-252">The key size is not valid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-253">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-253">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="KeySizeValue">
      <MemberSignature Language="C#" Value="protected int KeySizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 KeySizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected KeySizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int KeySizeValue;" />
      <MemberSignature Language="F#" Value="val mutable KeySizeValue : int" Usage="System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-254">表示对称算法使用的密钥的大小（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-254">Represents the size, in bits, of the secret key used by the symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-255">有效密钥大小指定的特定对称算法实现和中列出<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-255">The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 <span data-ttu-id="1e70c-256">通过访问此字段<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-256">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.KeySize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-257">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-257">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="protected byte[] KeyValue;" />
      <MemberSignature Language="ILAsm" Value=".field family unsigned int8[] KeyValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.KeyValue" />
      <MemberSignature Language="VB.NET" Value="Protected KeyValue As Byte() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Byte&gt; ^ KeyValue;" />
      <MemberSignature Language="F#" Value="val mutable KeyValue : byte[]" Usage="System.Security.Cryptography.SymmetricAlgorithm.KeyValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-258">表示对称算法的密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-258">Represents the secret key for the symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-259">对于加密和解密都使用机密密钥。</span><span class="sxs-lookup"><span data-stu-id="1e70c-259">The secret key is used both for encryption and for decryption.</span></span> <span data-ttu-id="1e70c-260">若要成功对称算法，为机密密钥必须仅发送方和接收方所知。</span><span class="sxs-lookup"><span data-stu-id="1e70c-260">For a symmetric algorithm to be successful, the secret key must be known only to the sender and the receiver.</span></span> <span data-ttu-id="1e70c-261">有效密钥大小指定的特定对称算法实现和中列出<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-261">The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 <span data-ttu-id="1e70c-262">通过访问此字段<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-262">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-263">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-263">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LegalBlockSizes">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.KeySizes[] LegalBlockSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalBlockSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LegalBlockSizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalBlockSizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalBlockSizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-264">获取对称算法支持的块大小（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-264">Gets the block sizes, in bits, that are supported by the symmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e70c-265">一个数组，包含此算法支持的块大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-265">An array that contains the block sizes supported by the algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-266">对称算法支持仅与此数组中的条目匹配的块大小。</span><span class="sxs-lookup"><span data-stu-id="1e70c-266">The symmetric algorithm supports only block sizes that match an entry in this array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e70c-267">下面的示例显示的值<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A>对称算法。</span><span class="sxs-lookup"><span data-stu-id="1e70c-267">The following example shows the value of <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A> for the symmetric algorithms.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm.blocksize/cs/program.cs#1)]
 [!code-vb[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm.blocksize/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-268">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-268">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LegalBlockSizesValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.KeySizes[] LegalBlockSizesValue;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.KeySizes[] LegalBlockSizesValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue" />
      <MemberSignature Language="VB.NET" Value="Protected LegalBlockSizesValue As KeySizes() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalBlockSizesValue;" />
      <MemberSignature Language="F#" Value="val mutable LegalBlockSizesValue : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-269">指定对称算法支持的块大小（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-269">Specifies the block sizes, in bits, that are supported by the symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-270">对称算法支持仅与此数组中的条目匹配的块大小。</span><span class="sxs-lookup"><span data-stu-id="1e70c-270">The symmetric algorithm supports only block sizes that match an entry in this array.</span></span>  
  
 <span data-ttu-id="1e70c-271">通过访问此字段<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-271">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-272">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-272">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-273">获取对称算法支持的密钥大小（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-273">Gets the key sizes, in bits, that are supported by the symmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e70c-274">一个数组，包含此算法支持的密钥大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-274">An array that contains the key sizes supported by the algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-275">对称算法支持仅与此数组中的条目匹配的密钥大小。</span><span class="sxs-lookup"><span data-stu-id="1e70c-275">The symmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e70c-276">下面的示例显示的值<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>对称算法。</span><span class="sxs-lookup"><span data-stu-id="1e70c-276">The following example shows the value of <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> for the symmetric algorithms.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm.blocksize/cs/program.cs#1)]
 [!code-vb[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm.blocksize/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-277">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-277">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizesValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.KeySizes[] LegalKeySizesValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue" />
      <MemberSignature Language="VB.NET" Value="Protected LegalKeySizesValue As KeySizes() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizesValue;" />
      <MemberSignature Language="F#" Value="val mutable LegalKeySizesValue : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-278">指定对称算法支持的密钥大小（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-278">Specifies the key sizes, in bits, that are supported by the symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-279">对称算法支持仅与此数组中的条目匹配的密钥大小。</span><span class="sxs-lookup"><span data-stu-id="1e70c-279">The symmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
 <span data-ttu-id="1e70c-280">通过访问此字段<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-280">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-281">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-281">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.CipherMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CipherMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Mode As CipherMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::CipherMode Mode { System::Security::Cryptography::CipherMode get(); void set(System::Security::Cryptography::CipherMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Security.Cryptography.CipherMode with get, set" Usage="System.Security.Cryptography.SymmetricAlgorithm.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-282">获取或设置对称算法的运算模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-282">Gets or sets the mode for operation of the symmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e70c-283">对称算法的运算模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-283">The mode for operation of the symmetric algorithm.</span>
          </span>
          <span data-ttu-id="1e70c-284">默认值为 <see cref="F:System.Security.Cryptography.CipherMode.CBC" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-284">The default is <see cref="F:System.Security.Cryptography.CipherMode.CBC" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-285">请参阅<xref:System.Security.Cryptography.CipherMode>枚举为特定模式的描述。</span><span class="sxs-lookup"><span data-stu-id="1e70c-285">See <xref:System.Security.Cryptography.CipherMode> enumeration for a description of specific modes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="1e70c-286">该密码模式不是 <see cref="T:System.Security.Cryptography.CipherMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-286">The cipher mode is not one of the <see cref="T:System.Security.Cryptography.CipherMode" /> values.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-287">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-287">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ModeValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.CipherMode ModeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype System.Security.Cryptography.CipherMode ModeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.ModeValue" />
      <MemberSignature Language="VB.NET" Value="Protected ModeValue As CipherMode " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Security::Cryptography::CipherMode ModeValue;" />
      <MemberSignature Language="F#" Value="val mutable ModeValue : System.Security.Cryptography.CipherMode" Usage="System.Security.Cryptography.SymmetricAlgorithm.ModeValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-288">表示对称算法中使用的密码模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-288">Represents the cipher mode used in the symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-289">请参阅<xref:System.Security.Cryptography.CipherMode>枚举为特定模式的描述。</span><span class="sxs-lookup"><span data-stu-id="1e70c-289">See <xref:System.Security.Cryptography.CipherMode> enumeration for a description of specific modes.</span></span>  
  
 <span data-ttu-id="1e70c-290">通过访问此字段<xref:System.Security.Cryptography.SymmetricAlgorithm.Mode%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-290">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-291">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-291">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Security.Cryptography.PaddingMode with get, set" Usage="System.Security.Cryptography.SymmetricAlgorithm.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-292">获取或设置对称算法中使用的填充模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-292">Gets or sets the padding mode used in the symmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1e70c-293">对称算法中使用的填充模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-293">The padding mode used in the symmetric algorithm.</span>
          </span>
          <span data-ttu-id="1e70c-294">默认值为 <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-294">The default is <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-295">大多数纯文本消息执行操作包含的完全填充块的字节数。</span><span class="sxs-lookup"><span data-stu-id="1e70c-295">Most plain text messages do not consist of a number of bytes that completely fill blocks.</span></span> <span data-ttu-id="1e70c-296">通常情况下，没有足够的字节数来填充的最后一个块。</span><span class="sxs-lookup"><span data-stu-id="1e70c-296">Often, there are not enough bytes to fill the last block.</span></span> <span data-ttu-id="1e70c-297">在此情况下，填充字符串添加到文本。</span><span class="sxs-lookup"><span data-stu-id="1e70c-297">When this happens, a padding string is added to the text.</span></span> <span data-ttu-id="1e70c-298">例如，如果块长度为 64 位和最后一个块只包含 40 位，将添加的填充的 24 位。</span><span class="sxs-lookup"><span data-stu-id="1e70c-298">For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</span></span> <span data-ttu-id="1e70c-299">请参阅<xref:System.Security.Cryptography.PaddingMode>枚举为特定模式的描述。</span><span class="sxs-lookup"><span data-stu-id="1e70c-299">See the <xref:System.Security.Cryptography.PaddingMode> enumeration for a description of specific modes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="1e70c-300">该填充模式不是 <see cref="T:System.Security.Cryptography.PaddingMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-300">The padding mode is not one of the <see cref="T:System.Security.Cryptography.PaddingMode" /> values.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-301">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-301">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="PaddingValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.PaddingMode PaddingValue;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype System.Security.Cryptography.PaddingMode PaddingValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.PaddingValue" />
      <MemberSignature Language="VB.NET" Value="Protected PaddingValue As PaddingMode " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Security::Cryptography::PaddingMode PaddingValue;" />
      <MemberSignature Language="F#" Value="val mutable PaddingValue : System.Security.Cryptography.PaddingMode" Usage="System.Security.Cryptography.SymmetricAlgorithm.PaddingValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1e70c-302">表示对称算法中使用的填充模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-302">Represents the padding mode used in the symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e70c-303">大多数纯文本消息执行操作包含的完全填充块的字节数。</span><span class="sxs-lookup"><span data-stu-id="1e70c-303">Most plain text messages do not consist of a number of bytes that completely fill blocks.</span></span> <span data-ttu-id="1e70c-304">通常情况下，没有足够的字节数来填充的最后一个块。</span><span class="sxs-lookup"><span data-stu-id="1e70c-304">Often, there are not enough bytes to fill the last block.</span></span> <span data-ttu-id="1e70c-305">在此情况下，填充字符串添加到文本。</span><span class="sxs-lookup"><span data-stu-id="1e70c-305">When this happens, a padding string is added to the text.</span></span> <span data-ttu-id="1e70c-306">例如，如果块长度为 64 位和最后一个块只包含 40 位，将添加的填充的 24 位。</span><span class="sxs-lookup"><span data-stu-id="1e70c-306">For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</span></span> <span data-ttu-id="1e70c-307">请参阅<xref:System.Security.Cryptography.PaddingMode>枚举为特定模式的描述。</span><span class="sxs-lookup"><span data-stu-id="1e70c-307">See the <xref:System.Security.Cryptography.PaddingMode> enumeration for a description of specific modes.</span></span>  
  
 <span data-ttu-id="1e70c-308">通过访问此字段<xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1e70c-308">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-309">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-309">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidKeySize">
      <MemberSignature Language="C#" Value="public bool ValidKeySize (int bitLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidKeySize(int32 bitLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidKeySize (bitLength As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidKeySize(int bitLength);" />
      <MemberSignature Language="F#" Value="member this.ValidKeySize : int -&gt; bool" Usage="symmetricAlgorithm.ValidKeySize bitLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bitLength">
          <span data-ttu-id="1e70c-310">用于检查有效密钥大小的长度（以位为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-310">The length, in bits, to check for a valid key size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1e70c-311">确定指定的密钥大小对当前算法是否有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-311">Determines whether the specified key size is valid for the current algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1e70c-312">如果指定的密钥大小对当前算法有效，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-312">
              <see langword="true" /> if the specified key size is valid for the current algorithm; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">
          <span data-ttu-id="1e70c-313">加密服务</span>
          <span class="sxs-lookup">
            <span data-stu-id="1e70c-313">Cryptographic Services</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>