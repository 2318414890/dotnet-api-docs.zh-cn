<Type Name="MACTripleDES" FullName="System.Security.Cryptography.MACTripleDES">
  <TypeSignature Language="C#" Value="public class MACTripleDES : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MACTripleDES extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.MACTripleDES" />
  <TypeSignature Language="VB.NET" Value="Public Class MACTripleDES&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class MACTripleDES : System::Security::Cryptography::KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="85a10-101">使用 <see cref="T:System.Security.Cryptography.TripleDES" /> 计算输入数据 <see cref="T:System.Security.Cryptography.CryptoStream" /> 的消息验证代码 (MAC)。</span><span class="sxs-lookup"><span data-stu-id="85a10-101">Computes a Message Authentication Code (MAC) using <see cref="T:System.Security.Cryptography.TripleDES" /> for the input data <see cref="T:System.Security.Cryptography.CryptoStream" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85a10-102">MAC 可以用于确定是否通过不安全通道发送的消息已被篡改，前提是发送方和接收方共享机密密钥。</span><span class="sxs-lookup"><span data-stu-id="85a10-102">A MAC can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="85a10-103">发件人计算 MAC 的原始数据，并将同时为一条消息发送。</span><span class="sxs-lookup"><span data-stu-id="85a10-103">The sender computes the MAC for the original data, and sends both as a single message.</span></span> <span data-ttu-id="85a10-104">接收方重新计算 MAC 收到的消息，并检查计算所得的 MAC 与传输的 MAC 相匹配</span><span class="sxs-lookup"><span data-stu-id="85a10-104">The receiver recomputes the MAC on the received message, and checks that the computed MAC matches the transmitted MAC.</span></span>  
  
 <span data-ttu-id="85a10-105">任何更改，对数据或 MAC 导致不匹配，因为更改消息和重新生成正确的 MAC 需要的机密密钥</span><span class="sxs-lookup"><span data-stu-id="85a10-105">Any change to the data or the MAC results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct MAC.</span></span> <span data-ttu-id="85a10-106">因此，如果代码匹配，消息进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="85a10-106">Therefore, if the codes match, the message is authenticated.</span></span>  
  
 <span data-ttu-id="85a10-107"><xref:System.Security.Cryptography.MACTripleDES> 使用为 16 个或 24 字节长时间，并生成一个哈希序列，其中 8 个字节长的密钥。</span><span class="sxs-lookup"><span data-stu-id="85a10-107"><xref:System.Security.Cryptography.MACTripleDES> uses a key that is 16 or 24 bytes long, and produces a hash sequence that is 8 bytes long.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85a10-108">下面的示例创建名为的文件的 MAC `input.txt`，位于包含可执行文件的示例的文件夹中。</span><span class="sxs-lookup"><span data-stu-id="85a10-108">The following example creates a MAC for a file named `input.txt`, which is located in the folder that contains the example executable.</span></span> <span data-ttu-id="85a10-109">MAC 和原始文本写入到名为的文件`encrypted.hsh`相同的文件夹中。</span><span class="sxs-lookup"><span data-stu-id="85a10-109">The MAC and the original text are written to a file named `encrypted.hsh` in the same folder.</span></span> <span data-ttu-id="85a10-110">然后读取已签名的文件，同时该文件的文本部分计算 MAC 并将其相比 MAC 所包含的文本。</span><span class="sxs-lookup"><span data-stu-id="85a10-110">The signed file is then read, and the MAC is calculated for the text portion of the file and compared to the MAC that is included with the text.</span></span>  
  
 [!code-csharp[MAC3DES#1](~/samples/snippets/csharp/VS_Snippets_CLR/MAC3DES/CS/program.cs#1)]
 [!code-vb[MAC3DES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MAC3DES/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="85a10-111">初始化 <see cref="T:System.Security.Cryptography.MACTripleDES" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="85a10-111">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85a10-112">初始化 <see cref="T:System.Security.Cryptography.MACTripleDES" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="85a10-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85a10-113">此构造函数使用的默认实现<xref:System.Security.Cryptography.TripleDES>。</span><span class="sxs-lookup"><span data-stu-id="85a10-113">This constructor uses the default implementation of <xref:System.Security.Cryptography.TripleDES>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rgbKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="85a10-114"><see cref="T:System.Security.Cryptography.MACTripleDES" /> 加密的机密密钥。</span><span class="sxs-lookup"><span data-stu-id="85a10-114">The secret key for <see cref="T:System.Security.Cryptography.MACTripleDES" /> encryption.</span></span></param>
        <summary><span data-ttu-id="85a10-115">使用指定的密钥数据初始化 <see cref="T:System.Security.Cryptography.MACTripleDES" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="85a10-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class with the specified key data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85a10-116">此构造函数使用的默认实现<xref:System.Security.Cryptography.TripleDES>。</span><span class="sxs-lookup"><span data-stu-id="85a10-116">This constructor uses the default implementation of <xref:System.Security.Cryptography.TripleDES>.</span></span> <span data-ttu-id="85a10-117">`rgbKey`参数必须是 16 个或 24 字节的长度。</span><span class="sxs-lookup"><span data-stu-id="85a10-117">The `rgbKey` parameter must be 16 or 24 bytes in length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85a10-118">有关如何使用此构造函数的示例，请参阅<xref:System.Security.Cryptography.MACTripleDES>类。</span><span class="sxs-lookup"><span data-stu-id="85a10-118">For an example of how to use this constructor, see the <xref:System.Security.Cryptography.MACTripleDES> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85a10-119"><paramref name="rgbKey" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85a10-119">The <paramref name="rgbKey" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES (string strTripleDES, byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strTripleDES, unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strTripleDES As String, rgbKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES(System::String ^ strTripleDES, cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strTripleDES" Type="System.String" />
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="strTripleDES"><span data-ttu-id="85a10-120">要使用的 <see cref="T:System.Security.Cryptography.TripleDES" /> 实现的名称。</span><span class="sxs-lookup"><span data-stu-id="85a10-120">The name of the <see cref="T:System.Security.Cryptography.TripleDES" /> implementation to use.</span></span></param>
        <param name="rgbKey"><span data-ttu-id="85a10-121"><see cref="T:System.Security.Cryptography.MACTripleDES" /> 加密的机密密钥。</span><span class="sxs-lookup"><span data-stu-id="85a10-121">The secret key for <see cref="T:System.Security.Cryptography.MACTripleDES" /> encryption.</span></span></param>
        <summary><span data-ttu-id="85a10-122">使用 <see cref="T:System.Security.Cryptography.MACTripleDES" /> 的指定实现，用指定的密钥数据初始化 <see cref="T:System.Security.Cryptography.TripleDES" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="85a10-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class with the specified key data and using the specified implementation of <see cref="T:System.Security.Cryptography.TripleDES" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85a10-123">`strTripleDES`参数是友好名称的<xref:System.Security.Cryptography.TripleDES>实现类型。</span><span class="sxs-lookup"><span data-stu-id="85a10-123">The `strTripleDES` parameter is the friendly name of the <xref:System.Security.Cryptography.TripleDES> implementation type.</span></span> <span data-ttu-id="85a10-124">默认实现为 System.Security.Cryptography.TripleDES。</span><span class="sxs-lookup"><span data-stu-id="85a10-124">The default implementation is System.Security.Cryptography.TripleDES.</span></span>  
  
 <span data-ttu-id="85a10-125">`rgbKey`参数必须是 16 个或 24 字节的长度。</span><span class="sxs-lookup"><span data-stu-id="85a10-125">The `rgbKey` parameter must be 16 or 24 bytes in length.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85a10-126"><paramref name="rgbKey" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85a10-126">The <paramref name="rgbKey" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="85a10-127"><paramref name="strTripleDES" /> 参数不是 <see cref="T:System.Security.Cryptography.TripleDES" /> 实现的有效名称。</span><span class="sxs-lookup"><span data-stu-id="85a10-127">The <paramref name="strTripleDES" /> parameter is not a valid name of a <see cref="T:System.Security.Cryptography.TripleDES" /> implementation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="85a10-128">如果该方法是从 <see cref="M:System.IDisposable.Dispose" /> 实现调用的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="85a10-128"><see langword="true" /> if the method is called from an <see cref="M:System.IDisposable.Dispose" /> implementation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="85a10-129">释放 <see cref="T:System.Security.Cryptography.MACTripleDES" /> 实例使用的资源。</span><span class="sxs-lookup"><span data-stu-id="85a10-129">Releases the resources used by the <see cref="T:System.Security.Cryptography.MACTripleDES" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85a10-130">此方法称为由公共`Dispose()`方法和`Finalize`方法。</span><span class="sxs-lookup"><span data-stu-id="85a10-130">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="85a10-131">`Dispose()` 调用受保护`Dispose(Boolean)`方法释放参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="85a10-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="85a10-132">`Finalize` 将释放设置为 `Dispose`，调用 `false`。</span><span class="sxs-lookup"><span data-stu-id="85a10-132">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>  
  
 <span data-ttu-id="85a10-133">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Security.Cryptography.MACTripleDES> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="85a10-133">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.MACTripleDES> references.</span></span> <span data-ttu-id="85a10-134">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="85a10-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="85a10-135"><see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="85a10-135"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="85a10-136">在重写<see langword="Dispose(Boolean)" />，请注意不要引用在以前调用之前释放对象<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="85a10-136">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="85a10-137">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="85a10-137">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="85a10-138">有关详细信息<see langword="Dispose" />和<see langword="Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)。</span><span class="sxs-lookup"><span data-stu-id="85a10-138">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgbData, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgbData, int32 ibStart, int32 cbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgbData As Byte(), ibStart As Integer, cbSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgbData, int ibStart, int cbSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgbData"><span data-ttu-id="85a10-139">输入数据。</span><span class="sxs-lookup"><span data-stu-id="85a10-139">The input data.</span></span></param>
        <param name="ibStart"><span data-ttu-id="85a10-140">字节数组中的偏移量，从该位置开始使用数据。</span><span class="sxs-lookup"><span data-stu-id="85a10-140">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="cbSize"><span data-ttu-id="85a10-141">数组中用作数据的字节数。</span><span class="sxs-lookup"><span data-stu-id="85a10-141">The number of bytes in the array to use as data.</span></span></param>
        <summary><span data-ttu-id="85a10-142">将写入对象的数据路由到 <see cref="T:System.Security.Cryptography.TripleDES" /> 加密器以计算消息验证代码 (MAC)。</span><span class="sxs-lookup"><span data-stu-id="85a10-142">Routes data written to the object into the <see cref="T:System.Security.Cryptography.TripleDES" /> encryptor for computing the Message Authentication Code (MAC).</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85a10-143">在所有数据写入对象后返回计算所得的消息验证代码 (MAC)。</span><span class="sxs-lookup"><span data-stu-id="85a10-143">Returns the computed Message Authentication Code (MAC) after all data is written to the object.</span></span></summary>
        <returns><span data-ttu-id="85a10-144">计算所得的 MAC。</span><span class="sxs-lookup"><span data-stu-id="85a10-144">The computed MAC.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85a10-145">只有在所有数据都写入，并且不能之后写入更多的数据后，你可以读取此值。</span><span class="sxs-lookup"><span data-stu-id="85a10-145">You can read this value only after all data is written, and you cannot write more data afterward.</span></span> <span data-ttu-id="85a10-146">创建的新实例<xref:System.Security.Cryptography.MACTripleDES>每个单独段的数据来计算该数据 MAC。</span><span class="sxs-lookup"><span data-stu-id="85a10-146">Create a new instance of <xref:System.Security.Cryptography.MACTripleDES> for each separate segment of data to compute the MAC for that data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85a10-147">初始化 <see cref="T:System.Security.Cryptography.MACTripleDES" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="85a10-147">Initializes an instance of <see cref="T:System.Security.Cryptography.MACTripleDES" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85a10-148">此方法调用默认构造函数的类。</span><span class="sxs-lookup"><span data-stu-id="85a10-148">This method calls the default constructor for the class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.MACTripleDES.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85a10-149">获取或设置哈希算法中使用的填充模式。</span><span class="sxs-lookup"><span data-stu-id="85a10-149">Gets or sets the padding mode used in the hashing algorithm.</span></span></summary>
        <value><span data-ttu-id="85a10-150">哈希算法中使用的填充模式。</span><span class="sxs-lookup"><span data-stu-id="85a10-150">The padding mode used in the hashing algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85a10-151">大多数纯文本消息不会包含完全填充块的字节数。</span><span class="sxs-lookup"><span data-stu-id="85a10-151">Most plain text messages do not consist of a number of bytes that completely fill blocks.</span></span> <span data-ttu-id="85a10-152">通常情况下，没有足够的字节数，以填充的最后一个块。</span><span class="sxs-lookup"><span data-stu-id="85a10-152">Often, there are not enough bytes to fill the last block.</span></span> <span data-ttu-id="85a10-153">在此情况下，一个填充字符串添加到文本。</span><span class="sxs-lookup"><span data-stu-id="85a10-153">When this happens, a padding string is added to the text.</span></span> <span data-ttu-id="85a10-154">例如，如果块长度为 64 位，并且最后一个块只包含 40 位，将添加的填充的 24 位。</span><span class="sxs-lookup"><span data-stu-id="85a10-154">For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</span></span> <span data-ttu-id="85a10-155">请参阅<xref:System.Security.Cryptography.PaddingMode>有关特定模式的说明。</span><span class="sxs-lookup"><span data-stu-id="85a10-155">See <xref:System.Security.Cryptography.PaddingMode> for a description of specific modes.</span></span>  
  
 <span data-ttu-id="85a10-156">通过访问此字段<xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="85a10-156">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="85a10-157">无法设置属性，因为填充模式无效。</span><span class="sxs-lookup"><span data-stu-id="85a10-157">The property cannot be set because the padding mode is invalid.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>