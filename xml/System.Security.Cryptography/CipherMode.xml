<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CipherMode.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57c70ff3bf1a311578eeb87faf3ca052f53d7933f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c70ff3bf1a311578eeb87faf3ca052f53d7933f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.CipherMode">
          <source>Specifies the block cipher mode to use for encryption.</source>
          <target state="translated">指定要用于加密的块密码模式。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Block cipher algorithms encrypt data in block units, rather than a single byte at a time.</source>
          <target state="translated">块密码算法加密数据以块为单位，而不是一次一个单字节。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>The most common block size is 8 bytes.</source>
          <target state="translated">最常见的块大小是 8 个字节。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Because each block is heavily processed, block ciphers provide a higher level of security than stream ciphers.</source>
          <target state="translated">由于严密处理每个块，块密码提供比流密码更高级别的安全性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>However, block cipher algorithms tend to execute more slowly than stream ciphers.</source>
          <target state="translated">但是，块密码算法执行起来通常比流密码更慢。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Block ciphers use the same encryption algorithm for each block.</source>
          <target state="translated">块密码的每个块使用相同的加密算法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Because of this, a block of plain text will always return the same cipher text when encrypted with the same key and algorithm.</source>
          <target state="translated">因此，纯文本块将始终返回相同的密码文本时使用相同的密钥和算法加密。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Because this behavior can be used to crack a cipher, cipher modes are introduced that modify the encryption process based on feedback from earlier block encryptions.</source>
          <target state="translated">因为此行为可以用于解密密码，引入了修改加密过程基于来自以前的块加密反馈密码模式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>The resulting encryption provides a higher level of security than a simple block encryption.</source>
          <target state="translated">生成加密提供了比简单块加密更高级别的安全性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>The Cipher Block Chaining (<ph id="ph1">&lt;see langword="CBC" /&gt;</ph>) mode introduces feedback.</source>
          <target state="translated">密码块链 (<ph id="ph1">&lt;see langword="CBC" /&gt;</ph>) 模式引入了反馈。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>Before each plain text block is encrypted, it is combined with the cipher text of the previous block by a bitwise exclusive OR operation.</source>
          <target state="translated">每个纯文本块在加密前，通过按位“异或”操作与前一个块的密码文本结合。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>This ensures that even if the plain text contains many identical blocks, they will each encrypt to a different cipher text block.</source>
          <target state="translated">这样确保了即使纯文本包含许多相同的块，这些块中的每一个也会加密为不同的密码文本块。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>The initialization vector is combined with the first plain text block by a bitwise exclusive OR operation before the block is encrypted.</source>
          <target state="translated">在加密块之前，初始化向量通过按位“异或”操作与第一个纯文本块结合。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>If a single bit of the cipher text block is mangled, the corresponding plain text block will also be mangled.</source>
          <target state="translated">如果密码文本块中有一个位出错，相应的纯文本块也将出错。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>In addition, a bit in the subsequent block, in the same position as the original mangled bit, will be mangled.</source>
          <target state="translated">此外，后面的块中与原出错位的位置相同的位也将出错。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>The Cipher Feedback (<ph id="ph1">&lt;see langword="CFB" /&gt;</ph>) mode processes small increments of plain text into cipher text, instead of processing an entire block at a time.</source>
          <target state="translated">密码反馈 (<ph id="ph1">&lt;see langword="CFB" /&gt;</ph>) 模式将少量递增的纯文本处理成密码文本，而不是一次处理整个块。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>This mode uses a shift register that is one block in length and is divided into sections.</source>
          <target state="translated">该模式使用在长度上为一个块且被分为几部分的移位寄存器。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>For example, if the block size is 8 bytes, with one byte processed at a time, the shift register is divided into eight sections.</source>
          <target state="translated">例如，如果块大小为 8 个字节，并且每次处理一个字节，则移位寄存器被分为 8 个部分。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>If a bit in the cipher text is mangled, one plain text bit is mangled and the shift register is corrupted.</source>
          <target state="translated">如果密码文本中有一个位出错，则一个纯文本位出错，并且移位寄存器损坏。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>This results in the next several plain text increments being mangled until the bad bit is shifted out of the shift register.</source>
          <target state="translated">这将导致接下来若干次递增的纯文本出错，直到出错位从移位寄存器中移出为止。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>The default feedback size can vary by algorithm, but is typically either 8 bits or the number of bits of the block size.</source>
          <target state="translated">默认反馈大小可以根据算法而变，但通常是 8 位或块大小的位数。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>You can alter the number of feedback bits by using the <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /&gt;</ph> property.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /&gt;</ph> 属性，可以改变反馈位数。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>Algorithms that support CFB use this property to set the feedback.</source>
          <target state="translated">支持 CFB 的算法使用此属性来设置反馈。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CTS">
          <source>The Cipher Text Stealing (<ph id="ph1">&lt;see langword="CTS" /&gt;</ph>) mode handles any length of plain text and produces cipher text whose length matches the plain text length.</source>
          <target state="translated">密码文本窃用 (<ph id="ph1">&lt;see langword="CTS" /&gt;</ph>) 模式处理任何长度的纯文本并产生长度与纯文本长度匹配的密码文本。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CTS">
          <source>This mode behaves like the <ph id="ph1">&lt;see langword="CBC" /&gt;</ph> mode for all but the last two blocks of the plain text.</source>
          <target state="translated">除了最后两个纯文本块外，对于所有其他块，此模式与 <ph id="ph1">&lt;see langword="CBC" /&gt;</ph> 模式的行为相同。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>The Electronic Codebook (<ph id="ph1">&lt;see langword="ECB" /&gt;</ph>) mode encrypts each block individually.</source>
          <target state="translated">电子密码本 (<ph id="ph1">&lt;see langword="ECB" /&gt;</ph>) 模式分别加密每个块。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>Any blocks of plain text that are identical and in the same message, or that are in a different message encrypted with the same key, will be transformed into identical cipher text blocks.</source>
          <target state="translated">任何纯文本块只要相同并且在同一消息中，或者在用相同的密钥加密的不同消息中，都将被转换成同样的密码文本块。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>:  This mode is not recommended because it opens the door for multiple security exploits.</source>
          <target state="translated"><bpt id="p1">**</bpt>重要事项<ept id="p1">**</ept>：不建议使用此模式，因为它存在多个安全隐患。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>If the plain text to be encrypted contains substantial repetition, it is feasible for the cipher text to be broken one block at a time.</source>
          <target state="translated">如果要加密的纯文本包含大量重复的块，则逐块破解密码文本是可行的。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>It is also possible to use block analysis to determine the encryption key.</source>
          <target state="translated">另外，还可以使用块分析来确定加密密钥。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>Also, an active adversary can substitute and exchange individual blocks without detection, which allows blocks to be saved and inserted into the stream at other points without detection.</source>
          <target state="translated">此外，随时准备攻击的对手可能会在您没有察觉的情况下替代和交换个别的块，这能让块在不为您所知的情况下保存并插入流中的其他位置。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.OFB">
          <source>The Output Feedback (<ph id="ph1">&lt;see langword="OFB" /&gt;</ph>) mode processes small increments of plain text into cipher text instead of processing an entire block at a time.</source>
          <target state="translated">输出反馈 (<ph id="ph1">&lt;see langword="OFB" /&gt;</ph>) 模式将少量递增的纯文本处理成密码文本，而不是一次处理整个块。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.OFB">
          <source>This mode is similar to <ph id="ph1">&lt;see langword="CFB" /&gt;</ph>; the only difference between the two modes is the way that the shift register is filled.</source>
          <target state="translated">此模式与 <ph id="ph1">&lt;see langword="CFB" /&gt;</ph> 相似；这两种模式的唯一差别是移位寄存器的填充方式不同。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.OFB">
          <source>If a bit in the cipher text is mangled, the corresponding bit of plain text will be mangled.</source>
          <target state="translated">如果密码文本中有一个位出错，纯文本中相应的位也将出错。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.OFB">
          <source>However, if there are extra or missing bits from the cipher text, the plain text will be mangled from that point on.</source>
          <target state="translated">但是，如果密码文本中有多余或者缺少的位，则那个位之后的纯文本都将出错。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>