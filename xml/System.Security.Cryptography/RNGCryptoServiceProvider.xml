<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RNGCryptoServiceProvider.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50d90389deb17e5813ec2616890e986e3a707ddfa.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d90389deb17e5813ec2616890e986e3a707ddfa</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>Implements a cryptographic Random Number Generator (RNG) using the implementation provided by the cryptographic service provider (CSP).</source>
          <target state="translated">使用加密服务提供程序 (CSP) 提供的实现来实现加密随机数生成器 (RNG)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">此类型实现<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">在使用完类型后，您应直接或间接释放类型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">若要直接释放类型，调用其<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>中的方法<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>块。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要间接释放类型，请使用 <ph id="ph1">`using`</ph>（在 C# 中）或 <ph id="ph2">`Using`</ph>（在 Visual Basic 中）等语言构造。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>接口主题。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>The following code example shows how to create a random number with the <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph> class.</source>
          <target state="translated">下面的代码示例演示如何创建使用一个随机数字<ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>This type is thread safe.</source>
          <target state="translated">此类型是线程安全的。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor">
          <source>The following code example shows how to create a random number with the <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph> class.</source>
          <target state="translated">下面的代码示例演示如何创建使用一个随机数字<ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])">
          <source>A byte array.</source>
          <target state="translated">字节数组。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])">
          <source>This value is ignored.</source>
          <target state="translated">忽略此值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])">
          <source>This method does not directly initialize the <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph> class.</source>
          <target state="translated">此方法不会直接初始化<ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])">
          <source>Calling this method is equivalent to calling the <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider.%23ctor%28System.Security.Cryptography.CspParameters%29?title=RNGCryptoServiceProvider(CspParameters)&gt;</ph> constructor and passing <ph id="ph2">`null`</ph>.</source>
          <target state="translated">调用此方法等效于调用<ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider.%23ctor%28System.Security.Cryptography.CspParameters%29?title=RNGCryptoServiceProvider(CspParameters)&gt;</ph>构造函数并传递<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>The parameters to pass to the cryptographic service provider (CSP).</source>
          <target state="translated">传递给加密服务提供程序 (CSP) 的参数。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> class with the specified parameters.</source>
          <target state="translated">使用指定的参数初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)">
          <source>The string input.</source>
          <target state="translated">字符串输入。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)">
          <source>This parameter is ignored.</source>
          <target state="translated">忽略此参数。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)">
          <source>This method does not directly initialize the <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph> class.</source>
          <target state="translated">此方法不会直接初始化<ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)">
          <source>Calling this method is equivalent to calling the <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider.%23ctor%28System.Security.Cryptography.CspParameters%29?title=RNGCryptoServiceProvider(CspParameters)&gt;</ph> constructor and passing <ph id="ph2">`null`</ph>.</source>
          <target state="translated">调用此方法等效于调用<ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider.%23ctor%28System.Security.Cryptography.CspParameters%29?title=RNGCryptoServiceProvider(CspParameters)&gt;</ph>构造函数并传递<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
          <source>The array to fill with a cryptographically strong sequence of random values.</source>
          <target state="translated">用经过加密的强随机值序列填充的数组。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
          <source>Fills an array of bytes with a cryptographically strong sequence of random values.</source>
          <target state="translated">用经过加密的强随机值序列填充字节数组。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
          <source>The length of the byte array determines how many cryptographically strong random bytes are produced.</source>
          <target state="translated">字节数组的长度确定生成加密型强随机字节数。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
          <source>This method is thread safe.</source>
          <target state="translated">此方法是线程安全的。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
          <source>The following code example shows how to create a random number with the <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph> class.</source>
          <target state="translated">下面的代码示例演示如何创建使用一个随机数字<ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">无法获取加密服务提供程序 (CSP)。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
          <source>The array to fill with a cryptographically strong sequence of random nonzero values.</source>
          <target state="translated">用经过加密的强随机非零值序列填充的数组。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
          <source>Fills an array of bytes with a cryptographically strong sequence of random nonzero values.</source>
          <target state="translated">用经过加密的强随机非零值序列填充字节数组。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
          <source>The length of the byte array determines how many cryptographically strong random nonzero bytes are produced.</source>
          <target state="translated">字节数组的长度确定生成多少加密型强随机非零字节。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
          <source>The following code example creates a random sequence of 100 nonzero bytes and stores it in <ph id="ph1">`random`</ph>.</source>
          <target state="translated">下面的代码示例创建 100 个非零字节的随机序列，并将其存储在<ph id="ph1">`random`</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">无法获取加密服务提供程序 (CSP)。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>