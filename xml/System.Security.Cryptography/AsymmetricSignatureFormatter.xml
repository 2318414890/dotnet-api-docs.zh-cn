<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AsymmetricSignatureFormatter.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac508f432d0d7d83a06871cd853e46b51618f302ef2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08f432d0d7d83a06871cd853e46b51618f302ef2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.AsymmetricSignatureFormatter">
          <source>Represents the base class from which all implementations of asymmetric signature formatters derive.</source>
          <target state="translated">表示从中继承非对称算法的所有实现的基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.AsymmetricSignatureFormatter">
          <source>Asymmetric signature formatters create digital signatures that are verified using implementations of <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter&gt;</ph>.</source>
          <target state="translated">非对称签名格式化程序创建的数字签名来验证使用的实现<ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.#ctor">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricSignatureFormatter" /&gt;</ph>.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricSignatureFormatter" /&gt;</ph> 的新实例。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.#ctor">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">无法创建抽象类的实例。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.#ctor">
          <source>Application code will create a new instance of a derived class.</source>
          <target state="translated">应用程序代码将创建派生类的新实例。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.#ctor">
          <source>Use implementations of <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm%2A&gt;</ph> to set the key and hash algorithm before calling an implementation of <ph id="ph3">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A&gt;</ph>.</source>
          <target state="translated">使用的实现<ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm%2A&gt;</ph>之前调用的实现设置的密钥和哈希算法<ph id="ph3">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.AsymmetricSignatureFormatter">
          <source>Creates the signature.</source>
          <target state="translated">创建签名。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Byte[])">
          <source>The data to be signed.</source>
          <target state="translated">要签名的数据。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Byte[])">
          <source>When overridden in a derived class, creates the signature for the specified data.</source>
          <target state="translated">在派生类中重写时，获取指定数据的签名。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Byte[])">
          <source>The digital signature for the <ph id="ph1">&lt;paramref name="rgbHash" /&gt;</ph> parameter.</source>
          <target state="translated">参数 <ph id="ph1">&lt;paramref name="rgbHash" /&gt;</ph> 的数字签名。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Byte[])">
          <source>You must specify a key and a hash algorithm before calling this method.</source>
          <target state="translated">调用此方法之前，必须指定一个键和哈希算法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)">
          <source>The hash algorithm to use to create the signature.</source>
          <target state="translated">要用于创建签名的哈希算法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)">
          <source>Creates the signature from the specified hash value.</source>
          <target state="translated">使用指定哈希值创建签名。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)">
          <source>The signature for the specified hash value.</source>
          <target state="translated">指定哈希值的签名。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)">
          <source>This method sets the hash algorithm to be used, then returns the signature of the input hash algorithm value.</source>
          <target state="translated">此方法设置的哈希算法要使用，然后返回输入的哈希算法值的签名。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)">
          <source>The <ph id="ph1">&lt;paramref name="hash" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm(System.String)">
          <source>The name of the hash algorithm to use for creating the signature.</source>
          <target state="translated">用于创建签名的哈希算法的名称。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm(System.String)">
          <source>When overridden in a derived class, sets the hash algorithm to use for creating the signature.</source>
          <target state="translated">当在派生类中重写时，设置要用于创建签名的哈希算法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm(System.String)">
          <source>You must set a hash algorithm before calling an implementation of <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A&gt;</ph>.</source>
          <target state="translated">调用的实现之前，必须设置哈希算法<ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)">
          <source>The instance of the implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /&gt;</ph> to use to create the signature.</source>
          <target state="translated">用于创建签名的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /&gt;</ph> 实现的实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)">
          <source>When overridden in a derived class, sets the asymmetric algorithm to use to create the signature.</source>
          <target state="translated">当在派生类中重写时，设置要用于创建签名的非对称算法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)">
          <source>You must set a key before calling an implementation of <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A&gt;</ph>.</source>
          <target state="translated">调用的实现之前，必须设置密钥<ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>