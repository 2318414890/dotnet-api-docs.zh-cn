<Type Name="CspParameters" FullName="System.Security.Cryptography.CspParameters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="194959e186681334e4be3e60dc374ee5df965523" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39935419" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CspParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CspParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CspParameters" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CspParameters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CspParameters sealed" />
  <TypeSignature Language="F#" Value="type CspParameters = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f02bc-101">包含一些参数，这些参数传递到指定加密计算的加密服务提供程序 (CSP)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f02bc-101">Contains parameters that are passed to the cryptographic service provider (CSP) that performs cryptographic computations.</span>
      </span>
      <span data-ttu-id="f02bc-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f02bc-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02bc-103"><xref:System.Security.Cryptography.CspParameters>类用于表示可以将它们传递给托管的加密类在内部使用 Microsoft 加密服务提供商 (Csp) 从非托管的 Microsoft 加密 API (CAPI) 的参数。</span><span class="sxs-lookup"><span data-stu-id="f02bc-103">The <xref:System.Security.Cryptography.CspParameters> class represents parameters that you can pass to managed cryptography classes that internally use Microsoft Cryptographic Service Providers (CSPs) from the unmanaged Microsoft Cryptography API (CAPI).</span></span> <span data-ttu-id="f02bc-104">具有名称以"CryptoServiceProvider"结尾的类是托管的代码包装相应的 CSP。</span><span class="sxs-lookup"><span data-stu-id="f02bc-104">Classes with names ending in "CryptoServiceProvider" are managed code wrappers for the corresponding CSP.</span></span>  
  
 <span data-ttu-id="f02bc-105">使用<xref:System.Security.Cryptography.CspParameters>类来执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="f02bc-105">Use the <xref:System.Security.Cryptography.CspParameters> class to do the following:</span></span>  
  
-   <span data-ttu-id="f02bc-106">通过将传递到的提供程序类型指定特定的 CSP<xref:System.Security.Cryptography.CspParameters.ProviderType>或<xref:System.Security.Cryptography.CspParameters.ProviderName>属性。</span><span class="sxs-lookup"><span data-stu-id="f02bc-106">Specify a particular CSP by passing the provider type to the <xref:System.Security.Cryptography.CspParameters.ProviderType> or <xref:System.Security.Cryptography.CspParameters.ProviderName> property.</span></span>  <span data-ttu-id="f02bc-107">此外可以指定使用的构造函数重载的 CSP。</span><span class="sxs-lookup"><span data-stu-id="f02bc-107">You can also specify a CSP using an overload of the constructor.</span></span>  
  
-   <span data-ttu-id="f02bc-108">创建可用于存储加密密钥的密钥容器。</span><span class="sxs-lookup"><span data-stu-id="f02bc-108">Create a key container where you can store cryptographic keys.</span></span>  <span data-ttu-id="f02bc-109">密钥容器提供最安全的方式来持久保存加密密钥并将其从恶意第三方保密。</span><span class="sxs-lookup"><span data-stu-id="f02bc-109">Key containers provide the most secure way to persist cryptographic keys and keep them secret from malicious third parties.</span></span>  <span data-ttu-id="f02bc-110">有关创建密钥容器的详细信息，请参阅[如何： 在密钥容器中存储非对称密钥](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)。</span><span class="sxs-lookup"><span data-stu-id="f02bc-110">For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).</span></span>  
  
-   <span data-ttu-id="f02bc-111">指定是创建非对称签名密钥还是非对称交换密钥使用<xref:System.Security.Cryptography.CspParameters.KeyNumber>属性。</span><span class="sxs-lookup"><span data-stu-id="f02bc-111">Specify whether to create an asymmetric signature key or an asymmetric exchange key using the <xref:System.Security.Cryptography.CspParameters.KeyNumber> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f02bc-112">下面的代码示例创建一个密钥容器使用<xref:System.Security.Cryptography.CspParameters>类，并将密钥保存在容器中。</span><span class="sxs-lookup"><span data-stu-id="f02bc-112">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 <span data-ttu-id="f02bc-113">下面的代码示例使用<xref:System.Security.Cryptography.CspParameters>类，以选择智能卡加密服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="f02bc-113">The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.</span></span>  <span data-ttu-id="f02bc-114">然后，再对进行签名并验证使用智能卡数据。</span><span class="sxs-lookup"><span data-stu-id="f02bc-114">It then signs and verifies data using the smart card.</span></span>  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f02bc-115">初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f02bc-116">初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02bc-117">这种形式的<xref:System.Security.Cryptography.CspParameters.%23ctor%2A>初始化<xref:System.Security.Cryptography.CspParameters.ProviderType>字段的值为`24`，它指定 PROV_RSA_AES 提供程序。</span><span class="sxs-lookup"><span data-stu-id="f02bc-117">This form of <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> initializes the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to a value of `24`, which specifies the PROV_RSA_AES provider.</span></span>  <span data-ttu-id="f02bc-118">此默认提供程序是与兼容<xref:System.Security.Cryptography.Aes>算法。</span><span class="sxs-lookup"><span data-stu-id="f02bc-118">This default provider is compatible with the <xref:System.Security.Cryptography.Aes> algorithm.</span></span>  
  
 <span data-ttu-id="f02bc-119">有关其他提供程序类型的信息，请参阅<xref:System.Security.Cryptography.CspParameters.ProviderType>字段。</span><span class="sxs-lookup"><span data-stu-id="f02bc-119">For information about other provider types, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f02bc-120">下面的代码示例创建一个密钥容器使用<xref:System.Security.Cryptography.CspParameters>类，并将密钥保存在容器中。</span><span class="sxs-lookup"><span data-stu-id="f02bc-120">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters dwTypeIn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">
          <span data-ttu-id="f02bc-121">指定要创建的提供程序类型的提供程序类型代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-121">A provider type code that specifies the kind of provider to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f02bc-122">使用指定的提供程序类型代码初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02bc-123">使用<xref:System.Security.Cryptography.CspParameters.%23ctor%2A>构造函数通过将数字的值传递指定的提供程序类型表示该提供程序。</span><span class="sxs-lookup"><span data-stu-id="f02bc-123">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type by passing a numeric value that represents that provider.</span></span>  <span data-ttu-id="f02bc-124">WinCrypt.h 头文件中定义的数值表示默认提供程序类型：</span><span class="sxs-lookup"><span data-stu-id="f02bc-124">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="f02bc-125">指定提供程序与兼容<xref:System.Security.Cryptography.RSA>算法，传递的值`1`到`dwTypeIn`参数。</span><span class="sxs-lookup"><span data-stu-id="f02bc-125">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="f02bc-126">指定提供程序与兼容<xref:System.Security.Cryptography.DSA>算法，传递的值`13`到`dwTypeIn`参数。</span><span class="sxs-lookup"><span data-stu-id="f02bc-126">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="f02bc-127">有关其他提供程序类型的值的信息，请参阅<xref:System.Security.Cryptography.CspParameters.ProviderType>字段。</span><span class="sxs-lookup"><span data-stu-id="f02bc-127">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="f02bc-128">有关默认提供程序类型及其行为的详细信息，请参阅 MSDN 库中的 Microsoft 加密 API (CAPI) 文档。</span><span class="sxs-lookup"><span data-stu-id="f02bc-128">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f02bc-129">下面的代码示例创建一个密钥容器使用<xref:System.Security.Cryptography.CspParameters>类，并将密钥保存在容器中。</span><span class="sxs-lookup"><span data-stu-id="f02bc-129">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (dwTypeIn, strProviderNameIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">
          <span data-ttu-id="f02bc-130">指定要创建的提供程序类型的提供程序类型代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-130">A provider type code that specifies the kind of provider to create.</span>
          </span>
        </param>
        <param name="strProviderNameIn">
          <span data-ttu-id="f02bc-131">提供程序名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-131">A provider name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f02bc-132">使用指定的提供程序类型代码和名称初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code and name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02bc-133">使用<xref:System.Security.Cryptography.CspParameters.%23ctor%2A>构造函数，以指定提供程序类型和名称。</span><span class="sxs-lookup"><span data-stu-id="f02bc-133">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type and name.</span></span>  
  
 <span data-ttu-id="f02bc-134">通过传递表示所需的提供程序类型的数字值指定的提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="f02bc-134">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="f02bc-135">WinCrypt.h 头文件中定义的数值表示默认提供程序类型：</span><span class="sxs-lookup"><span data-stu-id="f02bc-135">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="f02bc-136">指定提供程序与兼容<xref:System.Security.Cryptography.RSA>算法，传递的值`1`到`dwTypeIn`参数。</span><span class="sxs-lookup"><span data-stu-id="f02bc-136">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="f02bc-137">指定提供程序与兼容<xref:System.Security.Cryptography.DSA>算法，传递的值`13`到`dwTypeIn`参数。</span><span class="sxs-lookup"><span data-stu-id="f02bc-137">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="f02bc-138">有关其他提供程序类型的值的信息，请参阅<xref:System.Security.Cryptography.CspParameters.ProviderType>字段。</span><span class="sxs-lookup"><span data-stu-id="f02bc-138">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="f02bc-139">有关默认提供程序类型及其行为的详细信息，请参阅 MSDN 库中的 Microsoft 加密 API (CAPI) 文档。</span><span class="sxs-lookup"><span data-stu-id="f02bc-139">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f02bc-140">下面的代码示例使用<xref:System.Security.Cryptography.CspParameters>类，以选择智能卡加密服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="f02bc-140">The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.</span></span>  <span data-ttu-id="f02bc-141">然后，再对进行签名并验证使用智能卡数据。</span><span class="sxs-lookup"><span data-stu-id="f02bc-141">It then signs and verifies data using the smart card.</span></span>  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn, string strContainerNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn, string strContainerNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String, strContainerNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn, System::String ^ strContainerNameIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (dwTypeIn, strProviderNameIn, strContainerNameIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
        <Parameter Name="strContainerNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">
          <span data-ttu-id="f02bc-142">指定要创建的提供程序类型的提供程序类型代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-142">The provider type code that specifies the kind of provider to create.</span>
          </span>
        </param>
        <param name="strProviderNameIn">
          <span data-ttu-id="f02bc-143">提供程序名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-143">A provider name.</span>
          </span>
        </param>
        <param name="strContainerNameIn">
          <span data-ttu-id="f02bc-144">容器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-144">A container name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f02bc-145">使用指定的提供程序类型代码和名称以及指定的容器名称初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-145">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code and name, and the specified container name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02bc-146">使用<xref:System.Security.Cryptography.CspParameters.%23ctor%2A>构造函数指定的提供程序类型、 提供程序名称和容器名称。</span><span class="sxs-lookup"><span data-stu-id="f02bc-146">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type, a provider name, and a container name.</span></span>  
  
 <span data-ttu-id="f02bc-147">容器名称可用于检索该容器内的键。</span><span class="sxs-lookup"><span data-stu-id="f02bc-147">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="f02bc-148">通过传递表示所需的提供程序类型的数字值指定的提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="f02bc-148">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="f02bc-149">WinCrypt.h 头文件中定义的数值表示默认提供程序类型：</span><span class="sxs-lookup"><span data-stu-id="f02bc-149">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="f02bc-150">指定提供程序与兼容<xref:System.Security.Cryptography.RSA>算法，传递的值`1`到`dwTypeIn`参数。</span><span class="sxs-lookup"><span data-stu-id="f02bc-150">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="f02bc-151">指定提供程序与兼容<xref:System.Security.Cryptography.DSA>算法，传递的值`13`到`dwTypeIn`参数。</span><span class="sxs-lookup"><span data-stu-id="f02bc-151">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="f02bc-152">有关其他提供程序类型的值的信息，请参阅<xref:System.Security.Cryptography.CspParameters.ProviderType>字段。</span><span class="sxs-lookup"><span data-stu-id="f02bc-152">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="f02bc-153">有关默认提供程序类型及其行为的详细信息，请参阅 MSDN 库中的 Microsoft 加密 API (CAPI) 文档。</span><span class="sxs-lookup"><span data-stu-id="f02bc-153">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, native int parentWindowHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string * System.Security.AccessControl.CryptoKeySecurity * nativeint -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (providerType, providerName, keyContainerName, cryptoKeySecurity, parentWindowHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="keyContainerName" Type="System.String" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
        <Parameter Name="parentWindowHandle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="providerType">
          <span data-ttu-id="f02bc-154">指定要创建的提供程序类型的提供程序类型代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-154">The provider type code that specifies the kind of provider to create.</span>
          </span>
        </param>
        <param name="providerName">
          <span data-ttu-id="f02bc-155">提供程序名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-155">A provider name.</span>
          </span>
        </param>
        <param name="keyContainerName">
          <span data-ttu-id="f02bc-156">容器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-156">A container name.</span>
          </span>
        </param>
        <param name="cryptoKeySecurity">
          <span data-ttu-id="f02bc-157">表示容器的访问权限及审核规则的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-157">An object that represents access rights and audit rules for the container.</span>
          </span>
        </param>
        <param name="parentWindowHandle">
          <span data-ttu-id="f02bc-158">智能卡密码对话框的父级窗口的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-158">A handle to the parent window for a smart card password dialog.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f02bc-159">使用提供程序类型、提供程序名称、容器名称、访问信息以及非托管智能卡密码对话框的句柄初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-159">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class using a provider type, a provider name, a container name, access information, and a handle to an unmanaged smart card password dialog.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02bc-160">容器名称可用于检索该容器内的键。</span><span class="sxs-lookup"><span data-stu-id="f02bc-160">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="f02bc-161">通过传递表示所需的提供程序类型的数字值指定的提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="f02bc-161">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="f02bc-162">WinCrypt.h 头文件中定义的数值表示默认提供程序类型：</span><span class="sxs-lookup"><span data-stu-id="f02bc-162">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="f02bc-163">指定提供程序与兼容<xref:System.Security.Cryptography.RSA>算法，传递的值`1`到`dwTypeIn`参数。</span><span class="sxs-lookup"><span data-stu-id="f02bc-163">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="f02bc-164">指定提供程序与兼容<xref:System.Security.Cryptography.DSA>算法，传递的值`13`到`dwTypeIn`参数。</span><span class="sxs-lookup"><span data-stu-id="f02bc-164">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="f02bc-165">有关其他提供程序类型的值的信息，请参阅<xref:System.Security.Cryptography.CspParameters.ProviderType>字段。</span><span class="sxs-lookup"><span data-stu-id="f02bc-165">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="f02bc-166">有关默认提供程序类型及其行为的详细信息，请参阅 MSDN 库中的 Microsoft 加密 API (CAPI) 文档。</span><span class="sxs-lookup"><span data-stu-id="f02bc-166">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, class System.Security.SecureString keyPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, System::Security::SecureString ^ keyPassword);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string * System.Security.AccessControl.CryptoKeySecurity * System.Security.SecureString -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (providerType, providerName, keyContainerName, cryptoKeySecurity, keyPassword)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="keyContainerName" Type="System.String" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
        <Parameter Name="keyPassword" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="providerType">
          <span data-ttu-id="f02bc-167">指定要创建的提供程序类型的提供程序类型代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-167">The provider type code that specifies the kind of provider to create.</span>
          </span>
        </param>
        <param name="providerName">
          <span data-ttu-id="f02bc-168">提供程序名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-168">A provider name.</span>
          </span>
        </param>
        <param name="keyContainerName">
          <span data-ttu-id="f02bc-169">容器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-169">A container name.</span>
          </span>
        </param>
        <param name="cryptoKeySecurity">
          <span data-ttu-id="f02bc-170">表示容器的访问权限及审核规则的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-170">An object that represents access rights and audit rules for a container.</span>
          </span>
        </param>
        <param name="keyPassword">
          <span data-ttu-id="f02bc-171">与智能卡密钥相关的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-171">A password associated with a smart card key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f02bc-172">使用提供程序类型、提供程序名称、容器名称、访问信息以及与智能卡密钥相关的密码初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-172">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class using a provider type, a provider name, a container name, access information, and a password associated with a smart card key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02bc-173">容器名称可用于检索该容器内的键。</span><span class="sxs-lookup"><span data-stu-id="f02bc-173">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="f02bc-174">通过传递表示所需的提供程序类型的数字值指定的提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="f02bc-174">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="f02bc-175">WinCrypt.h 头文件中定义的数值表示默认提供程序类型：</span><span class="sxs-lookup"><span data-stu-id="f02bc-175">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="f02bc-176">指定提供程序与兼容<xref:System.Security.Cryptography.RSA>算法，传递的值`1`到`dwTypeIn`参数。</span><span class="sxs-lookup"><span data-stu-id="f02bc-176">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="f02bc-177">指定提供程序与兼容<xref:System.Security.Cryptography.DSA>算法，传递的值`13`到`dwTypeIn`参数。</span><span class="sxs-lookup"><span data-stu-id="f02bc-177">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="f02bc-178">有关其他提供程序类型的值的信息，请参阅<xref:System.Security.Cryptography.CspParameters.ProviderType>字段。</span><span class="sxs-lookup"><span data-stu-id="f02bc-178">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="f02bc-179">有关默认提供程序类型及其行为的详细信息，请参阅 MSDN 库中的 Microsoft 加密 API (CAPI) 文档。</span><span class="sxs-lookup"><span data-stu-id="f02bc-179">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptoKeySecurity">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property CryptoKeySecurity As CryptoKeySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::CryptoKeySecurity ^ CryptoKeySecurity { System::Security::AccessControl::CryptoKeySecurity ^ get(); void set(System::Security::AccessControl::CryptoKeySecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CryptoKeySecurity : System.Security.AccessControl.CryptoKeySecurity with get, set" Usage="System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.CryptoKeySecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f02bc-180">获取或设置表示容器访问权限及审核规则的 <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-180">Gets or sets a <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f02bc-181">表示容器访问权限及审核规则的 <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-181">A <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02bc-182">使用<xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A>属性来指定<xref:System.Security.AccessControl.CryptoKeySecurity>对象，用于管理创建的自定义访问控制列表 (DACL) 和系统访问控制列表 (SACL) 容器。</span><span class="sxs-lookup"><span data-stu-id="f02bc-182">Use the <xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A> property to specify a <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspProviderFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CspProviderFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As CspProviderFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspProviderFlags Flags { System::Security::Cryptography::CspProviderFlags get(); void set(System::Security::Cryptography::CspProviderFlags value); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Security.Cryptography.CspProviderFlags with get, set" Usage="System.Security.Cryptography.CspParameters.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspProviderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f02bc-183">表示修改加密服务提供程序 (CSP) 的行为的 <see cref="T:System.Security.Cryptography.CspParameters" /> 的标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-183">Represents the flags for <see cref="T:System.Security.Cryptography.CspParameters" /> that modify the behavior of the cryptographic service provider (CSP).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f02bc-184">枚举值或枚举值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-184">An enumeration value, or a bitwise combination of enumeration values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f02bc-185">值不是有效的枚举值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-185">Value is not a valid enumeration value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="KeyContainerName">
      <MemberSignature Language="C#" Value="public string KeyContainerName;" />
      <MemberSignature Language="ILAsm" Value=".field public string KeyContainerName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public KeyContainerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ KeyContainerName;" />
      <MemberSignature Language="F#" Value="val mutable KeyContainerName : string" Usage="System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f02bc-186">表示 <see cref="T:System.Security.Cryptography.CspParameters" /> 的密钥容器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-186">Represents the key container name for <see cref="T:System.Security.Cryptography.CspParameters" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02bc-187">使用<xref:System.Security.Cryptography.CspParameters.KeyContainerName>字段来指定密钥容器的名称。</span><span class="sxs-lookup"><span data-stu-id="f02bc-187">Use the <xref:System.Security.Cryptography.CspParameters.KeyContainerName> field to specify a name for your key container.</span></span>  <span data-ttu-id="f02bc-188">容器名称可用于检索该容器中保存的密钥。</span><span class="sxs-lookup"><span data-stu-id="f02bc-188">You can use the container name to retrieve the persisted key within that container.</span></span>  
  
 <span data-ttu-id="f02bc-189">有关创建密钥容器的详细信息，请参阅[如何： 在密钥容器中存储非对称密钥](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)。</span><span class="sxs-lookup"><span data-stu-id="f02bc-189">For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f02bc-190">下面的代码示例创建一个密钥容器使用<xref:System.Security.Cryptography.CspParameters>类，并将密钥保存在容器中。</span><span class="sxs-lookup"><span data-stu-id="f02bc-190">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyNumber">
      <MemberSignature Language="C#" Value="public int KeyNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 KeyNumber" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberSignature Language="VB.NET" Value="Public KeyNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int KeyNumber;" />
      <MemberSignature Language="F#" Value="val mutable KeyNumber : int" Usage="System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f02bc-191">指定非对称密钥是作为签名密钥还是交换密钥创建。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-191">Specifies whether an asymmetric key is created as a signature key or an exchange key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02bc-192"><xref:System.Security.Cryptography.CspParameters.KeyNumber>字段初始化<xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A>属性在初始化时<xref:System.Security.Cryptography.CspKeyContainerInfo>对象<xref:System.Security.Cryptography.CspParameters>对象。</span><span class="sxs-lookup"><span data-stu-id="f02bc-192">The <xref:System.Security.Cryptography.CspParameters.KeyNumber> field initializes the <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> property when you initialize a <xref:System.Security.Cryptography.CspKeyContainerInfo> object with a <xref:System.Security.Cryptography.CspParameters> object.</span></span>  
  
 <span data-ttu-id="f02bc-193">交换密钥是用于加密会话密钥，以便它们可以安全地存储以及与其他用户交换的非对称密钥对。</span><span class="sxs-lookup"><span data-stu-id="f02bc-193">An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="f02bc-194">可以使用<xref:System.Security.Cryptography.KeyNumber.Exchange>值 (`1`) 来指定交换密钥。</span><span class="sxs-lookup"><span data-stu-id="f02bc-194">You can use the <xref:System.Security.Cryptography.KeyNumber.Exchange> value (`1`) to specify an exchange key.</span></span>  <span data-ttu-id="f02bc-195">此值对应于`AT_KEYEXCHANGE`使用非托管在 Microsoft 加密 API (CAPI) 的值。</span><span class="sxs-lookup"><span data-stu-id="f02bc-195">This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 <span data-ttu-id="f02bc-196">签名密钥是对称密钥对，用于验证数字签名的消息或文件。</span><span class="sxs-lookup"><span data-stu-id="f02bc-196">A signature key is an asymmetric key pair used for authenticating digitally signed messages or files.</span></span>  <span data-ttu-id="f02bc-197">可以使用<xref:System.Security.Cryptography.KeyNumber.Signature>值 (`2`) 指定的签名密钥。</span><span class="sxs-lookup"><span data-stu-id="f02bc-197">You can use the <xref:System.Security.Cryptography.KeyNumber.Signature> value (`2`) to specify a signature key.</span></span>  <span data-ttu-id="f02bc-198">此值对应于`AT_SIGNATURE`CAPI 中使用的值。</span><span class="sxs-lookup"><span data-stu-id="f02bc-198">This value corresponds to the `AT_SIGNATURE` value used in CAPI.</span></span>  
  
 <span data-ttu-id="f02bc-199">默认情况下，<xref:System.Security.Cryptography.CspParameters.KeyNumber>字段指定交换密钥。</span><span class="sxs-lookup"><span data-stu-id="f02bc-199">By default, the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field specifies an exchange key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f02bc-200">下面的代码示例演示如何使用<xref:System.Security.Cryptography.KeyNumber>枚举来指定的键类型<xref:System.Security.Cryptography.RSACryptoServiceProvider>对象。</span><span class="sxs-lookup"><span data-stu-id="f02bc-200">The following code example demonstrates how to use the <xref:System.Security.Cryptography.KeyNumber> enumeration to specify a key type for an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.</span></span>  
  
 [!code-cpp[Cryptography.KeyNumber#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.KeyNumber/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.KeyNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.KeyNumber/CS/sample.cs#1)]
 [!code-vb[Cryptography.KeyNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.KeyNumber/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPassword">
      <MemberSignature Language="C#" Value="public System.Security.SecureString KeyPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString KeyPassword" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPassword As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ KeyPassword { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyPassword : System.Security.SecureString with get, set" Usage="System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f02bc-201">获取或设置与智能卡密钥相关的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-201">Gets or sets a password associated with a smart card key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f02bc-202">与智能卡密钥相关的密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-202">A password associated with a smart card key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02bc-203">使用<xref:System.Security.Cryptography.CspParameters.KeyPassword%2A>属性以提供智能卡密钥的密码。</span><span class="sxs-lookup"><span data-stu-id="f02bc-203">Use the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property to supply a password for a smart card key.</span></span>  <span data-ttu-id="f02bc-204">当指定使用此属性的密码时，不会向用户显示密码对话框。</span><span class="sxs-lookup"><span data-stu-id="f02bc-204">When you specify a password using this property, a password dialog box will not be presented to the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentWindowHandle">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindowHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindowHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindowHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ParentWindowHandle : nativeint with get, set" Usage="System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f02bc-205">获取或设置智能卡密码对话框的非托管父级窗口的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-205">Gets or sets a handle to the unmanaged parent window for a smart card password dialog box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f02bc-206">智能卡密码对话框的父级窗口的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-206">A handle to the parent window for a smart card password dialog box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02bc-207">使用<xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A>属性来指定智能卡密码对话框中的非托管的父级窗口的句柄。</span><span class="sxs-lookup"><span data-stu-id="f02bc-207">Use the <xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A> property to specify a handle to the unmanaged parent window for a smart card password dialog box.</span></span>  <span data-ttu-id="f02bc-208">当指定使用此属性的句柄时，将向用户显示一个智能卡密码对话框。</span><span class="sxs-lookup"><span data-stu-id="f02bc-208">When you specify a handle using this property, a smart card password dialog box will be presented to the user.</span></span>  
  
 <span data-ttu-id="f02bc-209">使用显式指定密码： 显示智能卡密码对话框中，可以避免<xref:System.Security.Cryptography.CspParameters.KeyPassword%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f02bc-209">You can avoid presenting a smart card password dialog box by explicitly specifying a password by using the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberSignature Language="F#" Value="val mutable ProviderName : string" Usage="System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f02bc-210">表示 <see cref="T:System.Security.Cryptography.CspParameters" /> 的提供程序名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-210">Represents the provider name for <see cref="T:System.Security.Cryptography.CspParameters" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02bc-211">上的提供程序名称，请参阅 MSDN 库的详细信息中的 Microsoft 加密 API (CAPI) 文档。</span><span class="sxs-lookup"><span data-stu-id="f02bc-211">See the Microsoft Cryptography API (CAPI) documentation in the MSDN library for details on provider names.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public int ProviderType;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ProviderType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ProviderType As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int ProviderType;" />
      <MemberSignature Language="F#" Value="val mutable ProviderType : int" Usage="System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f02bc-212">表示 <see cref="T:System.Security.Cryptography.CspParameters" /> 的提供程序类型代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02bc-212">Represents the provider type code for <see cref="T:System.Security.Cryptography.CspParameters" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02bc-213">使用<xref:System.Security.Cryptography.CspParameters.ProviderType>字段来通过传递一个数字值，表示该提供程序指定的提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="f02bc-213">Use the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to specify a provider type by passing a numeric value that represents that provider.</span></span>  <span data-ttu-id="f02bc-214">WinCrypt.h 头文件中定义的数值表示默认提供程序类型：</span><span class="sxs-lookup"><span data-stu-id="f02bc-214">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="f02bc-215">指定提供程序与兼容<xref:System.Security.Cryptography.RSA>类中，传递的值`1`。</span><span class="sxs-lookup"><span data-stu-id="f02bc-215">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> class, pass a value of `1`.</span></span>  
  
-   <span data-ttu-id="f02bc-216">指定提供程序与兼容<xref:System.Security.Cryptography.DSA>类中，传递的值`13`。</span><span class="sxs-lookup"><span data-stu-id="f02bc-216">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> class, pass a value of `13`.</span></span>  
  
 <span data-ttu-id="f02bc-217">下表列出了提供程序类型和 WinCrypt.h 头文件中定义其对应的数字值。</span><span class="sxs-lookup"><span data-stu-id="f02bc-217">The following table lists the provider types and their corresponding numeric values defined in the WinCrypt.h header file.</span></span>  
  
|<span data-ttu-id="f02bc-218">提供程序类型</span><span class="sxs-lookup"><span data-stu-id="f02bc-218">Provider Type</span></span>|<span data-ttu-id="f02bc-219">数字值</span><span class="sxs-lookup"><span data-stu-id="f02bc-219">Numeric Value</span></span>|  
|-------------------|-------------------|  
|`PROV_RSA_FULL`|<span data-ttu-id="f02bc-220">1</span><span class="sxs-lookup"><span data-stu-id="f02bc-220">1</span></span>|  
|`PROV_RSA_SIG`|<span data-ttu-id="f02bc-221">2</span><span class="sxs-lookup"><span data-stu-id="f02bc-221">2</span></span>|  
|`PROV_DSS`|<span data-ttu-id="f02bc-222">3</span><span class="sxs-lookup"><span data-stu-id="f02bc-222">3</span></span>|  
|`PROV_FORTEZZA`|<span data-ttu-id="f02bc-223">4</span><span class="sxs-lookup"><span data-stu-id="f02bc-223">4</span></span>|  
|`PROV_MS_EXCHANGE`|<span data-ttu-id="f02bc-224">5</span><span class="sxs-lookup"><span data-stu-id="f02bc-224">5</span></span>|  
|`PROV_SSL`|<span data-ttu-id="f02bc-225">6</span><span class="sxs-lookup"><span data-stu-id="f02bc-225">6</span></span>|  
|`PROV_RSA_SCHANNEL`|<span data-ttu-id="f02bc-226">12</span><span class="sxs-lookup"><span data-stu-id="f02bc-226">12</span></span>|  
|`PROV_DSS_DH`|<span data-ttu-id="f02bc-227">13</span><span class="sxs-lookup"><span data-stu-id="f02bc-227">13</span></span>|  
|`PROV_EC_ECDSA_SIG`|<span data-ttu-id="f02bc-228">14</span><span class="sxs-lookup"><span data-stu-id="f02bc-228">14</span></span>|  
|`PROV_EC_ECNRA_SIG`|<span data-ttu-id="f02bc-229">15</span><span class="sxs-lookup"><span data-stu-id="f02bc-229">15</span></span>|  
|`PROV_EC_ECDSA_FULL`|<span data-ttu-id="f02bc-230">16</span><span class="sxs-lookup"><span data-stu-id="f02bc-230">16</span></span>|  
|`PROV_EC_ECNRA_FULL`|<span data-ttu-id="f02bc-231">17</span><span class="sxs-lookup"><span data-stu-id="f02bc-231">17</span></span>|  
|`PROV_DH_SCHANNEL`|<span data-ttu-id="f02bc-232">18</span><span class="sxs-lookup"><span data-stu-id="f02bc-232">18</span></span>|  
|`PROV_SPYRUS_LYNKS`|<span data-ttu-id="f02bc-233">20</span><span class="sxs-lookup"><span data-stu-id="f02bc-233">20</span></span>|  
|`PROV_RNG`|<span data-ttu-id="f02bc-234">21</span><span class="sxs-lookup"><span data-stu-id="f02bc-234">21</span></span>|  
|`PROV_INTEL_SEC`|<span data-ttu-id="f02bc-235">22</span><span class="sxs-lookup"><span data-stu-id="f02bc-235">22</span></span>|  
|`PROV_REPLACE_OWF`|<span data-ttu-id="f02bc-236">23</span><span class="sxs-lookup"><span data-stu-id="f02bc-236">23</span></span>|  
|`PROV_RSA_AES`|<span data-ttu-id="f02bc-237">24</span><span class="sxs-lookup"><span data-stu-id="f02bc-237">24</span></span>|  
  
 <span data-ttu-id="f02bc-238">有关默认提供程序类型及其行为的详细信息，请参阅 MSDN 库中的 Microsoft 加密 API (CAPI) 文档。</span><span class="sxs-lookup"><span data-stu-id="f02bc-238">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>