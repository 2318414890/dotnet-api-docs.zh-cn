<Type Name="DSA" FullName="System.Security.Cryptography.DSA">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa2d75a67cbab168ff851d97b572fa86aff25dd4" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52251228" /></Metadata><TypeSignature Language="C#" Value="public abstract class DSA : System.Security.Cryptography.AsymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DSA extends System.Security.Cryptography.AsymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DSA" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DSA&#xA;Inherits AsymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class DSA abstract : System::Security::Cryptography::AsymmetricAlgorithm" />
  <TypeSignature Language="F#" Value="type DSA = class&#xA;    inherit AsymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.AsymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c3eab-101">表示数字签名算法（<see cref="T:System.Security.Cryptography.DSA" />）的所有实现都必须从中继承的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="c3eab-101">Represents the abstract base class from which all implementations of the Digital Signature Algorithm (<see cref="T:System.Security.Cryptography.DSA" />) must inherit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eab-102">可以使用<xref:System.Security.Cryptography.DSA>类和派生的类创建的数字签名来帮助保护数据的完整性。</span><span class="sxs-lookup"><span data-stu-id="c3eab-102">You can use the <xref:System.Security.Cryptography.DSA> class and derived classes to create digital signatures that help protect the integrity of your data.</span></span>  <span data-ttu-id="c3eab-103"><xref:System.Security.Cryptography.DSACryptoServiceProvider>提供此类的实现。</span><span class="sxs-lookup"><span data-stu-id="c3eab-103">The <xref:System.Security.Cryptography.DSACryptoServiceProvider> provides an implementation of this class.</span></span>  
  
 <span data-ttu-id="c3eab-104">若要使用的公钥系统消息进行数字签名，发件人首先将哈希函数应用于该消息以创建消息摘要。</span><span class="sxs-lookup"><span data-stu-id="c3eab-104">To use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</span></span> <span data-ttu-id="c3eab-105">发送方然后使用发件人的私钥来创建发件人的个人签名加密消息摘要。</span><span class="sxs-lookup"><span data-stu-id="c3eab-105">The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</span></span> <span data-ttu-id="c3eab-106">在收到消息和签名，接收方解密签名，使用发件人的公钥进行恢复的消息摘要，并使用发件人使用的同一个哈希算法对消息进行哈希处理。</span><span class="sxs-lookup"><span data-stu-id="c3eab-106">Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</span></span> <span data-ttu-id="c3eab-107">如果接收方计算完全匹配的消息摘要从发送方收到的消息摘要，接收方可以假定该消息在传输过程中未被更改。</span><span class="sxs-lookup"><span data-stu-id="c3eab-107">If the message digest that the receiver computes exactly matches the message digest received from the sender, the receiver can assume that the message was not altered while in transit.</span></span> <span data-ttu-id="c3eab-108">请注意，可以通过任何人，验证签名，这是因为发件人的公钥众所周知。</span><span class="sxs-lookup"><span data-stu-id="c3eab-108">Note that a signature can be verified by anyone, because the sender's public key is common knowledge.</span></span>  
  
 <span data-ttu-id="c3eab-109">提供较新的非对称算法。</span><span class="sxs-lookup"><span data-stu-id="c3eab-109">Newer asymmetric algorithms are available.</span></span> <span data-ttu-id="c3eab-110">请考虑使用<xref:System.Security.Cryptography.RSA>类，<xref:System.Security.Cryptography.ECDsa>类，或<xref:System.Security.Cryptography.ECDiffieHellman>类而不是<xref:System.Security.Cryptography.DSA>类。</span><span class="sxs-lookup"><span data-stu-id="c3eab-110">Consider using the <xref:System.Security.Cryptography.RSA> class, the <xref:System.Security.Cryptography.ECDsa> class, or the <xref:System.Security.Cryptography.ECDiffieHellman> class instead of the <xref:System.Security.Cryptography.DSA> class.</span></span> <span data-ttu-id="c3eab-111">使用<xref:System.Security.Cryptography.DSA>仅为与旧版应用程序和数据兼容。</span><span class="sxs-lookup"><span data-stu-id="c3eab-111">Use <xref:System.Security.Cryptography.DSA> only for compatibility with legacy applications and data.</span></span>  
  
 <span data-ttu-id="c3eab-112">此算法支持密钥长度 1024 位至 512 位增量为 64 位。</span><span class="sxs-lookup"><span data-stu-id="c3eab-112">This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="c3eab-113">加密服务</span><span class="sxs-lookup"><span data-stu-id="c3eab-113">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DSA ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DSA();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3eab-114">初始化 <see cref="T:System.Security.Cryptography.DSA" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c3eab-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSA" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3eab-115">创建用于执行非对称算法的加密对象。</span><span class="sxs-lookup"><span data-stu-id="c3eab-115">Creates a cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DSA Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DSA Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As DSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DSA ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.DSA" Usage="System.Security.Cryptography.DSA.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSA</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3eab-116">创建用于执行不对称算法的默认加密对象。</span><span class="sxs-lookup"><span data-stu-id="c3eab-116">Creates the default cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="c3eab-117">一个加密对象，用于执行不对称算法。</span><span class="sxs-lookup"><span data-stu-id="c3eab-117">A cryptographic object used to perform the asymmetric algorithm.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="c3eab-118">加密服务</span><span class="sxs-lookup"><span data-stu-id="c3eab-118">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DSA Create (int keySizeInBits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DSA Create(int32 keySizeInBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.Create(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (keySizeInBits As Integer) As DSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DSA ^ Create(int keySizeInBits);" />
      <MemberSignature Language="F#" Value="static member Create : int -&gt; System.Security.Cryptography.DSA" Usage="System.Security.Cryptography.DSA.Create keySizeInBits" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSA</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits"><span data-ttu-id="c3eab-119">密钥大小（以位为单位）。</span><span class="sxs-lookup"><span data-stu-id="c3eab-119">The key size, in bits.</span></span></param>
        <summary><span data-ttu-id="c3eab-120">创建具有指定密钥大小的新临时 DSA 密钥。</span><span class="sxs-lookup"><span data-stu-id="c3eab-120">Creates a new ephemeral DSA key with the specified key size.</span></span></summary>
        <returns><span data-ttu-id="c3eab-121">具有指定密钥大小的新临时 DSA 密钥。</span><span class="sxs-lookup"><span data-stu-id="c3eab-121">A new ephemeral DSA key with the specified key size.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c3eab-122"><paramref name="keySizeInBits" /> 与 <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" /> 不同。</span><span class="sxs-lookup"><span data-stu-id="c3eab-122"><paramref name="keySizeInBits" /> is different than <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DSA Create (System.Security.Cryptography.DSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DSA Create(valuetype System.Security.Cryptography.DSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.Create(System.Security.Cryptography.DSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (parameters As DSAParameters) As DSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DSA ^ Create(System::Security::Cryptography::DSAParameters parameters);" />
      <MemberSignature Language="F#" Value="static member Create : System.Security.Cryptography.DSAParameters -&gt; System.Security.Cryptography.DSA" Usage="System.Security.Cryptography.DSA.Create parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSA</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="c3eab-123"><see cref="T:System.Security.Cryptography.DSA" /> 算法的参数。</span><span class="sxs-lookup"><span data-stu-id="c3eab-123">The parameters for the <see cref="T:System.Security.Cryptography.DSA" /> algorithm.</span></span></param>
        <summary><span data-ttu-id="c3eab-124">创建具有指定 DSA 密钥参数的新临时 DSA 密钥。</span><span class="sxs-lookup"><span data-stu-id="c3eab-124">Creates a new ephemeral DSA key with the specified DSA key parameters.</span></span></summary>
        <returns><span data-ttu-id="c3eab-125">新的临时 DSA 密钥。</span><span class="sxs-lookup"><span data-stu-id="c3eab-125">A new ephemeral DSA key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DSA Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DSA Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As DSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DSA ^ Create(System::String ^ algName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.DSA" Usage="System.Security.Cryptography.DSA.Create algName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSA</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="c3eab-126">要使用的 <see cref="T:System.Security.Cryptography.DSA" /> 的特定实现的名称。</span><span class="sxs-lookup"><span data-stu-id="c3eab-126">The name of the specific implementation of <see cref="T:System.Security.Cryptography.DSA" /> to use.</span></span></param>
        <summary><span data-ttu-id="c3eab-127">创建用于执行不对称算法的指定加密对象。</span><span class="sxs-lookup"><span data-stu-id="c3eab-127">Creates the specified cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="c3eab-128">一个加密对象，用于执行不对称算法。</span><span class="sxs-lookup"><span data-stu-id="c3eab-128">A cryptographic object used to perform the asymmetric algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3eab-129">有关<xref:System.Security.Cryptography.DSA>，使用 System.Security.Cryptography.DSA 的名称。</span><span class="sxs-lookup"><span data-stu-id="c3eab-129">For <xref:System.Security.Cryptography.DSA>, use the name System.Security.Cryptography.DSA.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="c3eab-130">加密服务</span><span class="sxs-lookup"><span data-stu-id="c3eab-130">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateSignature">
      <MemberSignature Language="C#" Value="public abstract byte[] CreateSignature (byte[] rgbHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] CreateSignature(unsigned int8[] rgbHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.CreateSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateSignature (rgbHash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ CreateSignature(cli::array &lt;System::Byte&gt; ^ rgbHash);" />
      <MemberSignature Language="F#" Value="abstract member CreateSignature : byte[] -&gt; byte[]" Usage="dSA.CreateSignature rgbHash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="c3eab-131">要签名的数据。</span><span class="sxs-lookup"><span data-stu-id="c3eab-131">The data to be signed.</span></span></param>
        <summary><span data-ttu-id="c3eab-132">当在派生类中重写时，创建指定数据的 <see cref="T:System.Security.Cryptography.DSA" /> 签名。</span><span class="sxs-lookup"><span data-stu-id="c3eab-132">When overridden in a derived class, creates the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span></span></summary>
        <returns><span data-ttu-id="c3eab-133">指定数据的数字签名。</span><span class="sxs-lookup"><span data-stu-id="c3eab-133">The digital signature for the specified data.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="c3eab-134">加密服务</span><span class="sxs-lookup"><span data-stu-id="c3eab-134">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.DSAParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Security.Cryptography.DSAParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ExportParameters (includePrivateParameters As Boolean) As DSAParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::DSAParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="abstract member ExportParameters : bool -&gt; System.Security.Cryptography.DSAParameters" Usage="dSA.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSAParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="c3eab-135">若要包含专用参数，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-135"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c3eab-136">当在派生类中重写时，导出 <see cref="T:System.Security.Cryptography.DSAParameters" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-136">When overridden in a derived class, exports the <see cref="T:System.Security.Cryptography.DSAParameters" />.</span></span></summary>
        <returns><span data-ttu-id="c3eab-137"><see cref="T:System.Security.Cryptography.DSA" /> 的参数。</span><span class="sxs-lookup"><span data-stu-id="c3eab-137">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="c3eab-138">加密服务</span><span class="sxs-lookup"><span data-stu-id="c3eab-138">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public override void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXmlString(System::String ^ xmlString);" />
      <MemberSignature Language="F#" Value="override this.FromXmlString : string -&gt; unit" Usage="dSA.FromXmlString xmlString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlString"><span data-ttu-id="c3eab-139">用于重新构造 <see cref="T:System.Security.Cryptography.DSA" /> 对象的 XML 字符串。</span><span class="sxs-lookup"><span data-stu-id="c3eab-139">The XML string to use to reconstruct the <see cref="T:System.Security.Cryptography.DSA" /> object.</span></span></param>
        <summary><span data-ttu-id="c3eab-140">通过 XML 字符串重新构造 <see cref="T:System.Security.Cryptography.DSA" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c3eab-140">Reconstructs a <see cref="T:System.Security.Cryptography.DSA" /> object from an XML string.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eab-141"><paramref name="xmlString" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-141">The <paramref name="xmlString" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c3eab-142"><paramref name="xmlString" /> 参数的格式无效。</span><span class="sxs-lookup"><span data-stu-id="c3eab-142">The format of the <paramref name="xmlString" /> parameter is not valid.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="c3eab-143">加密服务</span><span class="sxs-lookup"><span data-stu-id="c3eab-143">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="HashData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3eab-144">计算二进制数据的哈希值。</span><span class="sxs-lookup"><span data-stu-id="c3eab-144">Computes the hash value of binary data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected virtual byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member HashData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]&#xA;override this.HashData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSA.HashData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="c3eab-145">要进行哈希处理的二进制流。</span><span class="sxs-lookup"><span data-stu-id="c3eab-145">The binary stream to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="c3eab-146">要用于对数据进行哈希处理的算法。</span><span class="sxs-lookup"><span data-stu-id="c3eab-146">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="c3eab-147">在派生类中被重写时，使用指定的哈希算法计算指定的二进制流的哈希值。</span><span class="sxs-lookup"><span data-stu-id="c3eab-147">When overridden in a derived class, computes the hash value of a specified binary stream by using a specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="c3eab-148">经过哈希处理的数据。</span><span class="sxs-lookup"><span data-stu-id="c3eab-148">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c3eab-149">派生方法必须重写此方法。</span><span class="sxs-lookup"><span data-stu-id="c3eab-149">A derived class must override this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected virtual byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member HashData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]&#xA;override this.HashData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSA.HashData (data, offset, count, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="c3eab-150">要进行哈希处理的数据。</span><span class="sxs-lookup"><span data-stu-id="c3eab-150">The data to be hashed.</span></span></param>
        <param name="offset"><span data-ttu-id="c3eab-151"><paramref name="data" /> 中要进行哈希处理的第一个字节的索引。</span><span class="sxs-lookup"><span data-stu-id="c3eab-151">The index of the first byte in <paramref name="data" /> that is to be hashed.</span></span></param>
        <param name="count"><span data-ttu-id="c3eab-152">要进行哈希处理的字节数。</span><span class="sxs-lookup"><span data-stu-id="c3eab-152">The number of bytes to hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="c3eab-153">要用于对数据进行哈希处理的算法。</span><span class="sxs-lookup"><span data-stu-id="c3eab-153">The algorithm to use to hash the data.</span></span></param>
        <summary><span data-ttu-id="c3eab-154">在派生类中被重写时，使用指定的哈希算法计算字节数组指定部分的哈希值。</span><span class="sxs-lookup"><span data-stu-id="c3eab-154">When overridden in a derived class, computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.</span></span></summary>
        <returns><span data-ttu-id="c3eab-155">经过哈希处理的数据。</span><span class="sxs-lookup"><span data-stu-id="c3eab-155">The hashed data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c3eab-156">派生方法必须重写此方法。</span><span class="sxs-lookup"><span data-stu-id="c3eab-156">A derived class must override this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public abstract void ImportParameters (System.Security.Cryptography.DSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportParameters(valuetype System.Security.Cryptography.DSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.ImportParameters(System.Security.Cryptography.DSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ImportParameters (parameters As DSAParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ImportParameters(System::Security::Cryptography::DSAParameters parameters);" />
      <MemberSignature Language="F#" Value="abstract member ImportParameters : System.Security.Cryptography.DSAParameters -&gt; unit" Usage="dSA.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="c3eab-157"><see cref="T:System.Security.Cryptography.DSA" /> 的参数。</span><span class="sxs-lookup"><span data-stu-id="c3eab-157">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span></span></param>
        <summary><span data-ttu-id="c3eab-158">当在派生类中重写时，导入指定的 <see cref="T:System.Security.Cryptography.DSAParameters" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-158">When overridden in a derived class, imports the specified <see cref="T:System.Security.Cryptography.DSAParameters" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="c3eab-159">加密服务</span><span class="sxs-lookup"><span data-stu-id="c3eab-159">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3eab-160">计算指定数据的哈希值，并对其进行签名。</span><span class="sxs-lookup"><span data-stu-id="c3eab-160">Computes the hash value of the specified data and signs it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Byte(), hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="member this.SignData : byte[] * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSA.SignData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="c3eab-161">要为其计算哈希的输入数据。</span><span class="sxs-lookup"><span data-stu-id="c3eab-161">The input data for which to compute the hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="c3eab-162">要用于创建哈希值的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="c3eab-162">The hash algorithm to use to create the hash value.</span></span></param>
        <summary><span data-ttu-id="c3eab-163">使用指定的哈希算法计算指定字节数组的哈希值，并对生成的哈希值进行签名。</span><span class="sxs-lookup"><span data-stu-id="c3eab-163">Computes the hash value of the specified byte array using the specified hash algorithm and signs the resulting hash value.</span></span></summary>
        <returns><span data-ttu-id="c3eab-164">指定数据的 DSA 签名。</span><span class="sxs-lookup"><span data-stu-id="c3eab-164">The DSA signature for the specified data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eab-165"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-165"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eab-166"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="c3eab-166"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="c3eab-167">为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-167">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public virtual byte[] SignData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SignData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member SignData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]&#xA;override this.SignData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSA.SignData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="c3eab-168">要为其计算哈希的输入流。</span><span class="sxs-lookup"><span data-stu-id="c3eab-168">The input stream for which to compute the hash.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="c3eab-169">要用于创建哈希值的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="c3eab-169">The hash algorithm to use to create the hash value.</span></span></param>
        <summary><span data-ttu-id="c3eab-170">使用指定的哈希算法计算指定流的哈希值，并对生成的哈希值进行签名。</span><span class="sxs-lookup"><span data-stu-id="c3eab-170">Computes the hash value of the specified stream using the specified hash algorithm and signs the resulting hash value.</span></span></summary>
        <returns><span data-ttu-id="c3eab-171">指定数据的 DSA 签名。</span><span class="sxs-lookup"><span data-stu-id="c3eab-171">The DSA signature for the specified data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eab-172"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-172"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eab-173"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="c3eab-173"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="c3eab-174">为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-174">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public virtual byte[] SignData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SignData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member SignData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]&#xA;override this.SignData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSA.SignData (data, offset, count, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="c3eab-175">要为其计算哈希的输入数据。</span><span class="sxs-lookup"><span data-stu-id="c3eab-175">The input data for which to compute the hash.</span></span></param>
        <param name="offset"><span data-ttu-id="c3eab-176">数组中自其开始使用数据的偏移量。</span><span class="sxs-lookup"><span data-stu-id="c3eab-176">The offset into the array at which to begin using data.</span></span></param>
        <param name="count"><span data-ttu-id="c3eab-177">数组中用作数据的字节数。</span><span class="sxs-lookup"><span data-stu-id="c3eab-177">The number of bytes in the array to use as data.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="c3eab-178">要用于创建哈希值的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="c3eab-178">The hash algorithm to use to create the hash value.</span></span></param>
        <summary><span data-ttu-id="c3eab-179">使用指定的哈希算法计算指定字节数组的一个部分的哈希值，并对生成的哈希值进行签名。</span><span class="sxs-lookup"><span data-stu-id="c3eab-179">Computes the hash value of a portion of the specified byte array using the specified hash algorithm and signs the resulting hash value.</span></span></summary>
        <returns><span data-ttu-id="c3eab-180">指定数据的 DSA 签名。</span><span class="sxs-lookup"><span data-stu-id="c3eab-180">The DSA signature for the specified data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eab-181"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-181"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eab-182"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="c3eab-182"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="c3eab-183">为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-183">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c3eab-184"><paramref name="offset" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c3eab-184"><paramref name="offset" /> is less than zero.</span></span>  
  
<span data-ttu-id="c3eab-185">或</span><span class="sxs-lookup"><span data-stu-id="c3eab-185">-or-</span></span> 
 <span data-ttu-id="c3eab-186"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c3eab-186"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="c3eab-187">或</span><span class="sxs-lookup"><span data-stu-id="c3eab-187">-or-</span></span> 
 <span data-ttu-id="c3eab-188"><paramref name="offset" /> + <paramref name="count" /> – 1 会导致超出 <paramref name="data" /> 上限的索引。</span><span class="sxs-lookup"><span data-stu-id="c3eab-188"><paramref name="offset" /> + <paramref name="count" /> – 1 results in an index that is beyond the upper bound of <paramref name="data" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public override string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ToXmlString : bool -&gt; string" Usage="dSA.ToXmlString includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters"><span data-ttu-id="c3eab-189">若要包含专用参数，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-189"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c3eab-190">创建并返回当前 <see cref="T:System.Security.Cryptography.DSA" /> 对象的 XML 字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="c3eab-190">Creates and returns an XML string representation of the current <see cref="T:System.Security.Cryptography.DSA" /> object.</span></span></summary>
        <returns><span data-ttu-id="c3eab-191">当前 <see cref="T:System.Security.Cryptography.DSA" /> 对象的 XML 字符串编码。</span><span class="sxs-lookup"><span data-stu-id="c3eab-191">An XML string encoding of the current <see cref="T:System.Security.Cryptography.DSA" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="c3eab-192">加密服务</span><span class="sxs-lookup"><span data-stu-id="c3eab-192">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryCreateSignature">
      <MemberSignature Language="C#" Value="public virtual bool TryCreateSignature (ReadOnlySpan&lt;byte&gt; hash, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateSignature(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; hash, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.TryCreateSignature(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryCreateSignature (hash As ReadOnlySpan(Of Byte), destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryCreateSignature(ReadOnlySpan&lt;System::Byte&gt; hash, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TryCreateSignature : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; *  -&gt; bool&#xA;override this.TryCreateSignature : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; *  -&gt; bool" Usage="dSA.TryCreateSignature (hash, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hash">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryHashData">
      <MemberSignature Language="C#" Value="protected virtual bool TryHashData (ReadOnlySpan&lt;byte&gt; data, Span&lt;byte&gt; destination, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryHashData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; data, valuetype System.Span`1&lt;unsigned int8&gt; destination, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.TryHashData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryHashData (data As ReadOnlySpan(Of Byte), destination As Span(Of Byte), hashAlgorithm As HashAlgorithmName, ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TryHashData(ReadOnlySpan&lt;System::Byte&gt; data, Span&lt;System::Byte&gt; destination, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TryHashData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName *  -&gt; bool&#xA;override this.TryHashData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName *  -&gt; bool" Usage="dSA.TryHashData (data, destination, hashAlgorithm, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrySignData">
      <MemberSignature Language="C#" Value="public virtual bool TrySignData (ReadOnlySpan&lt;byte&gt; data, Span&lt;byte&gt; destination, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TrySignData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; data, valuetype System.Span`1&lt;unsigned int8&gt; destination, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.TrySignData(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TrySignData (data As ReadOnlySpan(Of Byte), destination As Span(Of Byte), hashAlgorithm As HashAlgorithmName, ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TrySignData(ReadOnlySpan&lt;System::Byte&gt; data, Span&lt;System::Byte&gt; destination, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="abstract member TrySignData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName *  -&gt; bool&#xA;override this.TrySignData : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName *  -&gt; bool" Usage="dSA.TrySignData (data, destination, hashAlgorithm, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3eab-193">验证数字签名有效。</span><span class="sxs-lookup"><span data-stu-id="c3eab-193">Verifies that a digital signature is valid.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] data, unsigned int8[] signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Byte(), signature As Byte(), hashAlgorithm As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, cli::array &lt;System::Byte&gt; ^ signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="member this.VerifyData : byte[] * byte[] * System.Security.Cryptography.HashAlgorithmName -&gt; bool" Usage="dSA.VerifyData (data, signature, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="c3eab-194">已签名的数据。</span><span class="sxs-lookup"><span data-stu-id="c3eab-194">The signed data.</span></span></param>
        <param name="signature"><span data-ttu-id="c3eab-195">要验证的签名数据。</span><span class="sxs-lookup"><span data-stu-id="c3eab-195">The signature data to be verified.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="c3eab-196">要用于创建数据哈希值的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="c3eab-196">The hash algorithm used to create the hash value of the data.</span></span></param>
        <summary><span data-ttu-id="c3eab-197">通过使用指定的哈希算法计算指定数据的哈希值，并将其与提供的签名进行比较，验证数字签名是否有效。</span><span class="sxs-lookup"><span data-stu-id="c3eab-197">Verifies that a digital signature is valid by calculating the hash value of the specified data using the specified hash algorithm and comparing it to the provided signature.</span></span></summary>
        <returns><span data-ttu-id="c3eab-198">如果数字签名有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-198"><see langword="true" /> if the digital signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eab-199"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-199"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c3eab-200">或</span><span class="sxs-lookup"><span data-stu-id="c3eab-200">-or-</span></span> 
 <span data-ttu-id="c3eab-201"><paramref name="signature" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-201"><paramref name="signature" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eab-202"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="c3eab-202"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="c3eab-203">为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-203">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public virtual bool VerifyData (System.IO.Stream data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyData(class System.IO.Stream data, unsigned int8[] signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyData (data As Stream, signature As Byte(), hashAlgorithm As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyData(System::IO::Stream ^ data, cli::array &lt;System::Byte&gt; ^ signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member VerifyData : System.IO.Stream * byte[] * System.Security.Cryptography.HashAlgorithmName -&gt; bool&#xA;override this.VerifyData : System.IO.Stream * byte[] * System.Security.Cryptography.HashAlgorithmName -&gt; bool" Usage="dSA.VerifyData (data, signature, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="c3eab-204">已签名的数据。</span><span class="sxs-lookup"><span data-stu-id="c3eab-204">The signed data.</span></span></param>
        <param name="signature"><span data-ttu-id="c3eab-205">要验证的签名数据。</span><span class="sxs-lookup"><span data-stu-id="c3eab-205">The signature data to be verified.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="c3eab-206">要用于创建数据哈希值的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="c3eab-206">The hash algorithm used to create the hash value of the data.</span></span></param>
        <summary><span data-ttu-id="c3eab-207">通过使用指定的哈希算法计算指定流的哈希值，并将其与提供的签名进行比较，验证数字签名是否有效。</span><span class="sxs-lookup"><span data-stu-id="c3eab-207">Verifies that a digital signature is valid by calculating the hash value of the specified stream using the specified hash algorithm and comparing it to the provided signature.</span></span></summary>
        <returns><span data-ttu-id="c3eab-208">如果数字签名有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-208"><see langword="true" /> if the digital signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eab-209"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-209"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c3eab-210">或</span><span class="sxs-lookup"><span data-stu-id="c3eab-210">-or-</span></span> 
 <span data-ttu-id="c3eab-211"><paramref name="signature" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-211"><paramref name="signature" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eab-212"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="c3eab-212"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="c3eab-213">为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-213">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public virtual bool VerifyData (ReadOnlySpan&lt;byte&gt; data, ReadOnlySpan&lt;byte&gt; signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; data, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifyData(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyData (data As ReadOnlySpan(Of Byte), signature As ReadOnlySpan(Of Byte), hashAlgorithm As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyData(ReadOnlySpan&lt;System::Byte&gt; data, ReadOnlySpan&lt;System::Byte&gt; signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member VerifyData : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName -&gt; bool&#xA;override this.VerifyData : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.HashAlgorithmName -&gt; bool" Usage="dSA.VerifyData (data, signature, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="signature" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="signature">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public virtual bool VerifyData (byte[] data, int offset, int count, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyData(unsigned int8[] data, int32 offset, int32 count, unsigned int8[] signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyData (data As Byte(), offset As Integer, count As Integer, signature As Byte(), hashAlgorithm As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, cli::array &lt;System::Byte&gt; ^ signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="abstract member VerifyData : byte[] * int * int * byte[] * System.Security.Cryptography.HashAlgorithmName -&gt; bool&#xA;override this.VerifyData : byte[] * int * int * byte[] * System.Security.Cryptography.HashAlgorithmName -&gt; bool" Usage="dSA.VerifyData (data, offset, count, signature, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="c3eab-214">已签名的数据。</span><span class="sxs-lookup"><span data-stu-id="c3eab-214">The signed data.</span></span></param>
        <param name="offset"><span data-ttu-id="c3eab-215">开始计算哈希的起始索引。</span><span class="sxs-lookup"><span data-stu-id="c3eab-215">The starting index at which to compute the hash.</span></span></param>
        <param name="count"><span data-ttu-id="c3eab-216">要进行哈希处理的字节数。</span><span class="sxs-lookup"><span data-stu-id="c3eab-216">The number of bytes to hash.</span></span></param>
        <param name="signature"><span data-ttu-id="c3eab-217">要验证的签名数据。</span><span class="sxs-lookup"><span data-stu-id="c3eab-217">The signature data to be verified.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="c3eab-218">要用于创建数据哈希值的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="c3eab-218">The hash algorithm used to create the hash value of the data.</span></span></param>
        <summary><span data-ttu-id="c3eab-219">通过使用指定的哈希算法计算字节数组一个部分中数据的哈希值，并将其与提供的签名进行比较，验证数字签名是否有效。</span><span class="sxs-lookup"><span data-stu-id="c3eab-219">Verifies that a digital signature is valid by calculating the hash value of the data in a portion of a byte array using the specified hash algorithm and comparing it to the provided signature.</span></span></summary>
        <returns><span data-ttu-id="c3eab-220">如果数字签名有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-220"><see langword="true" /> if the digital signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c3eab-221"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-221"><paramref name="data" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c3eab-222">或</span><span class="sxs-lookup"><span data-stu-id="c3eab-222">-or-</span></span> 
 <span data-ttu-id="c3eab-223"><paramref name="signature" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-223"><paramref name="signature" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c3eab-224"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="c3eab-224"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="c3eab-225">为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-225">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c3eab-226"><paramref name="offset" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c3eab-226"><paramref name="offset" /> is less than zero.</span></span>  
  
<span data-ttu-id="c3eab-227">或</span><span class="sxs-lookup"><span data-stu-id="c3eab-227">-or-</span></span> 
 <span data-ttu-id="c3eab-228"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="c3eab-228"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="c3eab-229">或</span><span class="sxs-lookup"><span data-stu-id="c3eab-229">-or-</span></span> 
 <span data-ttu-id="c3eab-230"><paramref name="offset" /> + <paramref name="count" /> – 1 会导致超出 <paramref name="data" /> 上限的索引。</span><span class="sxs-lookup"><span data-stu-id="c3eab-230"><paramref name="offset" /> + <paramref name="count" /> – 1 results in an index that is beyond the upper bound of <paramref name="data" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public abstract bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifySignature(unsigned int8[] rgbHash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifySignature(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function VerifySignature (rgbHash As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool VerifySignature(cli::array &lt;System::Byte&gt; ^ rgbHash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberSignature Language="F#" Value="abstract member VerifySignature : byte[] * byte[] -&gt; bool" Usage="dSA.VerifySignature (rgbHash, rgbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="c3eab-231">用 <paramref name="rgbSignature" /> 签名的数据的哈希值。</span><span class="sxs-lookup"><span data-stu-id="c3eab-231">The hash of the data signed with <paramref name="rgbSignature" />.</span></span></param>
        <param name="rgbSignature"><span data-ttu-id="c3eab-232">要为 <c>rgbData</c> 验证的签名。</span><span class="sxs-lookup"><span data-stu-id="c3eab-232">The signature to be verified for <c>rgbData</c>.</span></span></param>
        <summary><span data-ttu-id="c3eab-233">当在派生类中重写时，验证指定数据的 <see cref="T:System.Security.Cryptography.DSA" /> 签名。</span><span class="sxs-lookup"><span data-stu-id="c3eab-233">When overridden in a derived class, verifies the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span></span></summary>
        <returns><span data-ttu-id="c3eab-234">如果 <paramref name="rgbSignature" /> 与使用指定的哈希算法和密钥在 <paramref name="rgbHash" /> 上计算出的签名匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3eab-234"><see langword="true" /> if <paramref name="rgbSignature" /> matches the signature computed using the specified hash algorithm and key on <paramref name="rgbHash" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="c3eab-235">加密服务</span><span class="sxs-lookup"><span data-stu-id="c3eab-235">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public virtual bool VerifySignature (ReadOnlySpan&lt;byte&gt; hash, ReadOnlySpan&lt;byte&gt; signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifySignature(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; hash, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSA.VerifySignature(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifySignature (hash As ReadOnlySpan(Of Byte), signature As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifySignature(ReadOnlySpan&lt;System::Byte&gt; hash, ReadOnlySpan&lt;System::Byte&gt; signature);" />
      <MemberSignature Language="F#" Value="abstract member VerifySignature : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; bool&#xA;override this.VerifySignature : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="dSA.VerifySignature (hash, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="signature" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="hash">To be added.</param>
        <param name="signature">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>