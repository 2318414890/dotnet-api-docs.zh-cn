<Type Name="TripleDES" FullName="System.Security.Cryptography.TripleDES">
  <TypeSignature Language="C#" Value="public abstract class TripleDES : System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TripleDES extends System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.TripleDES" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TripleDES&#xA;Inherits SymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class TripleDES abstract : System::Security::Cryptography::SymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.SymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6f69f-101">表示三重数据加密标准算法的基类，<see cref="T:System.Security.Cryptography.TripleDES" /> 的所有实现都必须从此基类派生。</span><span class="sxs-lookup"><span data-stu-id="6f69f-101">Represents the base class for Triple Data Encryption Standard algorithms from which all <see cref="T:System.Security.Cryptography.TripleDES" /> implementations must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f69f-102"><xref:System.Security.Cryptography.TripleDES> 使用的三个后续迭代<xref:System.Security.Cryptography.DES>算法。</span><span class="sxs-lookup"><span data-stu-id="6f69f-102"><xref:System.Security.Cryptography.TripleDES> uses three successive iterations of the <xref:System.Security.Cryptography.DES> algorithm.</span></span> <span data-ttu-id="6f69f-103">它可以使用两个或三个 56 位密钥。</span><span class="sxs-lookup"><span data-stu-id="6f69f-103">It can use either two or three 56-bit keys.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f69f-104">较新的对称加密算法，高级加密标准 (AES)，是可用的。</span><span class="sxs-lookup"><span data-stu-id="6f69f-104">A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.</span></span> <span data-ttu-id="6f69f-105">请考虑使用<xref:System.Security.Cryptography.Aes>类和派生的类而不是<xref:System.Security.Cryptography.TripleDES>类。</span><span class="sxs-lookup"><span data-stu-id="6f69f-105">Consider using the <xref:System.Security.Cryptography.Aes> class and its derived classes instead of the <xref:System.Security.Cryptography.TripleDES> class.</span></span> <span data-ttu-id="6f69f-106">使用<xref:System.Security.Cryptography.TripleDES>仅为与旧的应用程序和数据的兼容性。</span><span class="sxs-lookup"><span data-stu-id="6f69f-106">Use <xref:System.Security.Cryptography.TripleDES> only for compatibility with legacy applications and data.</span></span>  
  
 <span data-ttu-id="6f69f-107">此算法支持密钥长度为 128 位至 192 位增量为 64 位。</span><span class="sxs-lookup"><span data-stu-id="6f69f-107">This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f69f-108">下面的代码示例方法使用<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider>与指定的键 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) 和初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) 来加密由指定的文件`inName`。</span><span class="sxs-lookup"><span data-stu-id="6f69f-108">The following code example method uses <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`.</span></span> <span data-ttu-id="6f69f-109">它然后输出到指定的文件的加密的结果`outName`。</span><span class="sxs-lookup"><span data-stu-id="6f69f-109">It then outputs the encrypted result to the file specified by `outName`.</span></span>  
  
 [!code-cpp[Classic TripleDESCryptoServiceProvider Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TripleDESCryptoServiceProvider Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TripleDESCryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TripleDESCryptoServiceProvider Example/CS/source.cs#1)]
 [!code-vb[Classic TripleDESCryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TripleDESCryptoServiceProvider Example/VB/source.vb#1)]  
  
 <span data-ttu-id="6f69f-110">解密可以处理方式相同;使用<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A>而不是<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A>。</span><span class="sxs-lookup"><span data-stu-id="6f69f-110">Decryption can be handled in the same way; use <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A>.</span></span> <span data-ttu-id="6f69f-111">相同的密钥 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) 和初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) 用于加密该文件必须使用对其进行解密。</span><span class="sxs-lookup"><span data-stu-id="6f69f-111">The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Cryptography.Aes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TripleDES ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TripleDES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6f69f-112">初始化 <see cref="T:System.Security.Cryptography.TripleDES" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6f69f-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.TripleDES" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f69f-113">无法创建抽象类的实例。</span><span class="sxs-lookup"><span data-stu-id="6f69f-113">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="6f69f-114">应用程序代码将创建派生类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6f69f-114">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="6f69f-115">此方法初始化的受保护的字段<xref:System.Security.Cryptography.SymmetricAlgorithm>下表中列出的类为默认值。</span><span class="sxs-lookup"><span data-stu-id="6f69f-115">This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values listed in the following table.</span></span>  
  
|<span data-ttu-id="6f69f-116">字段</span><span class="sxs-lookup"><span data-stu-id="6f69f-116">Field</span></span>|<span data-ttu-id="6f69f-117">默认值</span><span class="sxs-lookup"><span data-stu-id="6f69f-117">Default Value</span></span>|  
|-----------|-------------------|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|<span data-ttu-id="6f69f-118">192</span><span class="sxs-lookup"><span data-stu-id="6f69f-118">192</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|<span data-ttu-id="6f69f-119">64</span><span class="sxs-lookup"><span data-stu-id="6f69f-119">64</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|<span data-ttu-id="6f69f-120">64</span><span class="sxs-lookup"><span data-stu-id="6f69f-120">64</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6f69f-121">创建加密对象的实例以执行 <see cref="T:System.Security.Cryptography.TripleDES" /> 算法。</span><span class="sxs-lookup"><span data-stu-id="6f69f-121">Creates an instance of a cryptographic object to perform the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.TripleDES Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.TripleDES Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As TripleDES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::TripleDES ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.TripleDES</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6f69f-122">创建加密对象的实例以执行 <see cref="T:System.Security.Cryptography.TripleDES" /> 算法。</span><span class="sxs-lookup"><span data-stu-id="6f69f-122">Creates an instance of a cryptographic object to perform the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></summary>
        <returns><span data-ttu-id="6f69f-123">加密对象的实例。</span><span class="sxs-lookup"><span data-stu-id="6f69f-123">An instance of a cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f69f-124">创建 <xref:System.Security.Cryptography.TripleDES> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6f69f-124">Creates a new instance of the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f69f-125">下面的代码示例演示如何创建和使用<xref:System.Security.Cryptography.TripleDES>对象来加密和解密文件中的数据。</span><span class="sxs-lookup"><span data-stu-id="6f69f-125">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Create.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Create.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.3DES.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DES.Create.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.3DES.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Create.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="6f69f-126">下面的代码示例演示如何创建和使用<xref:System.Security.Cryptography.TripleDES>对象在内存中的数据进行加密和解密。</span><span class="sxs-lookup"><span data-stu-id="6f69f-126">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Create.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Create.Memory/CPP/memoryexample.cpp#1)]
 [!code-vb[Cryptography.3DES.Create.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Create.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.TripleDES Create (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.TripleDES Create(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (str As String) As TripleDES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::TripleDES ^ Create(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.TripleDES</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="6f69f-127">要使用的 <see cref="T:System.Security.Cryptography.TripleDES" /> 的特定实现的名称。</span><span class="sxs-lookup"><span data-stu-id="6f69f-127">The name of the specific implementation of <see cref="T:System.Security.Cryptography.TripleDES" /> to use.</span></span></param>
        <summary><span data-ttu-id="6f69f-128">创建加密对象的实例以执行 <see cref="T:System.Security.Cryptography.TripleDES" /> 算法的指定实现。</span><span class="sxs-lookup"><span data-stu-id="6f69f-128">Creates an instance of a cryptographic object to perform the specified implementation of the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></summary>
        <returns><span data-ttu-id="6f69f-129">加密对象的实例。</span><span class="sxs-lookup"><span data-stu-id="6f69f-129">An instance of a cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6f69f-130">下面的代码示例演示如何创建和使用<xref:System.Security.Cryptography.TripleDES>对象来加密和解密文件中的数据。</span><span class="sxs-lookup"><span data-stu-id="6f69f-130">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Createstring.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Createstring.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.3DES.Createstring.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DES.Createstring.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.3DES.Createstring.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Createstring.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="6f69f-131">下面的代码示例演示如何创建和使用<xref:System.Security.Cryptography.TripleDES>对象在内存中的数据进行加密和解密。</span><span class="sxs-lookup"><span data-stu-id="6f69f-131">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Createstring.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Createstring.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.3DES.Createstring.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DES.Createstring.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.3DES.Createstring.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Createstring.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWeakKey">
      <MemberSignature Language="C#" Value="public static bool IsWeakKey (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWeakKey(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWeakKey (rgbKey As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWeakKey(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="6f69f-132">要进行漏洞测试的密钥。</span><span class="sxs-lookup"><span data-stu-id="6f69f-132">The secret key to test for weakness.</span></span></param>
        <summary><span data-ttu-id="6f69f-133">确定指定的密钥是否为弱密钥。</span><span class="sxs-lookup"><span data-stu-id="6f69f-133">Determines whether the specified key is weak.</span></span></summary>
        <returns>
          <span data-ttu-id="6f69f-134">如果密钥为弱密钥，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6f69f-134"><see langword="true" /> if the key is weak; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f69f-135">共享密钥的安全性是导致容易被破解的密码的密钥。</span><span class="sxs-lookup"><span data-stu-id="6f69f-135">Weak keys are keys that result in ciphers that are easy to break.</span></span> <span data-ttu-id="6f69f-136">如果文本用弱密钥加密的且具有相同的弱密钥重新加密产生的密码返回原始文本。</span><span class="sxs-lookup"><span data-stu-id="6f69f-136">If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text.</span></span> <span data-ttu-id="6f69f-137">在 128 位模式下，如果第一个 64 位最后的 64 位，相同的密钥是弱。</span><span class="sxs-lookup"><span data-stu-id="6f69f-137">In 128-bit mode, if the first 64 bits are the same as the last 64 bits, the key is weak.</span></span> <span data-ttu-id="6f69f-138">在 192 位模式下，如果第一个 64 位与第二个 64 位相同或的第二个 64 位都是最后一个 64 位，相同的关键是弱。</span><span class="sxs-lookup"><span data-stu-id="6f69f-138">In 192-bit mode, if the first 64 bits are the same as the second 64 bits or if the second 64 bits are the same as the last 64 bits, the key is weak.</span></span>  
  
 <span data-ttu-id="6f69f-139">尝试设置弱密钥将导致<xref:System.Security.Cryptography.CryptographicException>。</span><span class="sxs-lookup"><span data-stu-id="6f69f-139">Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>.</span></span> <span data-ttu-id="6f69f-140">当<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey%2A>称为若要创建一个随机密钥，弱密钥将永远不会返回。</span><span class="sxs-lookup"><span data-stu-id="6f69f-140">When <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="6f69f-141"><paramref name="rgbKey" /> 参数的大小无效。</span><span class="sxs-lookup"><span data-stu-id="6f69f-141">The size of the <paramref name="rgbKey" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDES.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f69f-142">获取或设置 <see cref="T:System.Security.Cryptography.TripleDES" /> 算法的密钥。</span><span class="sxs-lookup"><span data-stu-id="6f69f-142">Gets or sets the secret key for the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></summary>
        <value><span data-ttu-id="6f69f-143"><see cref="T:System.Security.Cryptography.TripleDES" /> 算法的密钥。</span><span class="sxs-lookup"><span data-stu-id="6f69f-143">The secret key for the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f69f-144">此算法支持密钥长度为 128 位至 192 位增量为 64 位。</span><span class="sxs-lookup"><span data-stu-id="6f69f-144">This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f69f-145">尝试将密钥设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f69f-145">An attempt was made to set the key to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="6f69f-146">尝试设置的密钥长度无效。</span><span class="sxs-lookup"><span data-stu-id="6f69f-146">An attempt was made to set a key whose length is invalid.</span></span>  
  
 <span data-ttu-id="6f69f-147">或</span><span class="sxs-lookup"><span data-stu-id="6f69f-147">-or-</span></span>  
  
 <span data-ttu-id="6f69f-148">尝试设置弱密钥（请参阅 <see cref="M:System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])" />）。</span><span class="sxs-lookup"><span data-stu-id="6f69f-148">An attempt was made to set a weak key (see <see cref="M:System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LegalBlockSizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalBlockSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalBlockSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDES.LegalBlockSizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalBlockSizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalBlockSizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDES.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>