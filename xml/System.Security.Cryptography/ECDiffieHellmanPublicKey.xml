<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ECDiffieHellmanPublicKey.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a4a4d0d7e9a94322c4b00761af42fa1f913015db.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4a4d0d7e9a94322c4b00761af42fa1f913015db</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanPublicKey">
          <source>Provides an abstract base class from which all <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /&gt;</ph> implementations must inherit.</source>
          <target state="translated">提供所有 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /&gt;</ph> 实现必须从中继承的抽象基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source>A byte array that represents an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> object.</source>
          <target state="translated">表示 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> 对象的字节数组。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source>This constructor is called by classes that derive from the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph> class.</source>
          <target state="translated">此构造函数调用由派生自的类<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey&gt;</ph> class is the only currently supported implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey&gt;</ph>类是仅当前支持的实现。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="keyBlob" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyBlob" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanPublicKey">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> class.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> 类使用的资源。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> class.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> 类的当前实例所使用的所有资源。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph>.</source>
          <target state="translated">在完成使用 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph> 后，应调用 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph> 方法使 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> was occupying.</source>
          <target state="translated">在调用<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph>，必须释放对所有引用<ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph>以便垃圾回收器才能回收的内存，<ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph>占用。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> class and optionally releases the managed resources.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> 类使用的非托管资源，并可以选择释放托管资源。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>This method executes in two distinct scenarios:</source>
          <target state="translated">此方法执行以下两种不同情况：</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>If <ph id="ph1">`disposing`</ph> equals <ph id="ph2">`true`</ph>, the method has been called directly or indirectly by a user's code.</source>
          <target state="translated">如果<ph id="ph1">`disposing`</ph>等于<ph id="ph2">`true`</ph>，该方法已直接或间接由调用用户代码。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>Managed and unmanaged resources can be disposed.</source>
          <target state="translated">管理并可以释放非托管的资源。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>If <ph id="ph1">`disposing`</ph> equals <ph id="ph2">`false`</ph>, the method has been called by the runtime from inside the finalizer, and you should not reference managed resources.</source>
          <target state="translated">如果<ph id="ph1">`disposing`</ph>等于<ph id="ph2">`false`</ph>、 已由运行时从终结器，内部调用方法和不应该引用托管的资源。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>Only unmanaged resources can be disposed.</source>
          <target state="translated">可以释放仅非托管的资源。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>If you need to provide cleanup code for managed and unmanaged resources that an object created, you should override this method.</source>
          <target state="translated">如果你需要为创建的对象的托管和非托管资源提供了清理代码，应重写此方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 调用<ph id="ph2">`Dispose`</ph>与<ph id="ph3">`disposing`</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph> references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数为 true 时，此方法释放由任何托管对象持有的全部资源此<ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph>引用。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用每个引用对象的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以由其他对象多次调用。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>请注意不要引用已释放的以前调用中的对象<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关如何实现详细信息<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportExplicitParameters">
          <source>When overridden in a derived class, exports the explicit <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> for an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object.</source>
          <target state="translated">在派生类中替代时，导出 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> 对象的显式 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportExplicitParameters">
          <source>An object that represents the point on the curve for this key, using the explicit curve format.</source>
          <target state="translated">表示此项在曲线上的点的对象（使用显式曲线格式）。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportExplicitParameters">
          <source>A derived class must override this method.</source>
          <target state="translated">派生方法必须重写此方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportParameters">
          <source>When overridden in a derived class, exports the named or explicit <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> for an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object.</source>
          <target state="translated">在派生类中替代时，导出 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> 对象的已命名或显式 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportParameters">
          <source>An object that represents the point on the curve for this key.</source>
          <target state="translated">表示此项在曲线上的点的对象。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportParameters">
          <source>A derived class must override this method.</source>
          <target state="translated">派生方法必须重写此方法。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray">
          <source>Serializes the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> key BLOB to a byte array.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> 密钥 BLOB 序列化为字节数组。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray">
          <source>A byte array that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.</source>
          <target state="translated">一个字节数组，包含已序列化的椭圆曲线 Diffie-Hellman (ECDH) 公钥。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString">
          <source>Serializes the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> public key to an XML string.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> 公钥序列化为 XML 字符串。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString">
          <source>An XML string that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.</source>
          <target state="translated">一个 XML 字符串，该字符串包含已序列化的椭圆曲线 Diffie-Hellman (ECDH) 公钥。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>