<Type Name="RijndaelManagedTransform" FullName="System.Security.Cryptography.RijndaelManagedTransform">
  <TypeSignature Language="C#" Value="public sealed class RijndaelManagedTransform : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RijndaelManagedTransform extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RijndaelManagedTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RijndaelManagedTransform&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class RijndaelManagedTransform sealed : System::Security::Cryptography::ICryptoTransform" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="69e20-101">使用 Rijndael 算法执行数据的加密转换。</span><span class="sxs-lookup"><span data-stu-id="69e20-101">Performs a cryptographic transformation of data using the Rijndael algorithm.</span></span> <span data-ttu-id="69e20-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="69e20-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="69e20-103">不建议使用此类。</span><span class="sxs-lookup"><span data-stu-id="69e20-103">Using this class is not recommended.</span></span> <span data-ttu-id="69e20-104">更好的做法是使用<xref:System.Security.Cryptography.RijndaelManaged>与<xref:System.Security.Cryptography.CryptoStream>对象。</span><span class="sxs-lookup"><span data-stu-id="69e20-104">A better practice is to use <xref:System.Security.Cryptography.RijndaelManaged> with a <xref:System.Security.Cryptography.CryptoStream> object.</span></span> <span data-ttu-id="69e20-105"><xref:System.Security.Cryptography.CryptoStream>对象处理通过使用时可能发生的填充问题<xref:System.Security.Cryptography.RijndaelManagedTransform>直接。</span><span class="sxs-lookup"><span data-stu-id="69e20-105">The <xref:System.Security.Cryptography.CryptoStream> object handles the padding issues that can occur when using <xref:System.Security.Cryptography.RijndaelManagedTransform> directly.</span></span> <span data-ttu-id="69e20-106">有关示例，请参阅<xref:System.Security.Cryptography.RijndaelManaged>类。</span><span class="sxs-lookup"><span data-stu-id="69e20-106">For an example, see the <xref:System.Security.Cryptography.RijndaelManaged> class.</span></span>  
  
 <span data-ttu-id="69e20-107">同时<xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A>和<xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A>方法返回的实例<xref:System.Security.Cryptography.RijndaelManagedTransform>初始化与当前的密钥信息的类<xref:System.Security.Cryptography.RijndaelManaged>对象。</span><span class="sxs-lookup"><span data-stu-id="69e20-107">Both the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> and <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> methods return an instance of the <xref:System.Security.Cryptography.RijndaelManagedTransform> class that is initialized with the key information of the current <xref:System.Security.Cryptography.RijndaelManaged> object.</span></span>  <span data-ttu-id="69e20-108">若要加密或解密数据，使用 Rijndael 算法，将传递<xref:System.Security.Cryptography.RijndaelManagedTransform>返回到这些方法的对象<xref:System.Security.Cryptography.CryptoStream>对象。</span><span class="sxs-lookup"><span data-stu-id="69e20-108">To encrypt or decrypt data using the Rijndael algorithm, pass the <xref:System.Security.Cryptography.RijndaelManagedTransform> object returned by these methods to a <xref:System.Security.Cryptography.CryptoStream> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="public int BlockSizeValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockSizeValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSizeValue { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69e20-109">获取块大小。</span><span class="sxs-lookup"><span data-stu-id="69e20-109">Gets the block size.</span></span></summary>
        <value><span data-ttu-id="69e20-110">数据块的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="69e20-110">The size of the data blocks in bytes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanReuseTransform { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69e20-111">获取一个值，该值指示是否可重复使用当前转换。</span><span class="sxs-lookup"><span data-stu-id="69e20-111">Gets a value indicating whether the current transform can be reused.</span></span></summary>
        <value><span data-ttu-id="69e20-112">总是为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="69e20-112">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69e20-113">获取一个值，该值指示是否可以转换多个块。</span><span class="sxs-lookup"><span data-stu-id="69e20-113">Gets a value indicating whether multiple blocks can be transformed.</span></span></summary>
        <value>
          <span data-ttu-id="69e20-114">如果可以转换多个块，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="69e20-114"><see langword="true" /> if multiple blocks can be transformed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69e20-115">释放 <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /> 类使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="69e20-115">Releases all resources used by the <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e20-116">此方法是对的简单调用<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="69e20-116">This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="69e20-117">调用`Dispose`允许使用的资源<xref:System.Security.Cryptography.RijndaelManagedTransform>可以重新分配用于其他目的。</span><span class="sxs-lookup"><span data-stu-id="69e20-117">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.RijndaelManagedTransform> to be reallocated for other purposes.</span></span> <span data-ttu-id="69e20-118">有关详细信息`Dispose`，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)。</span><span class="sxs-lookup"><span data-stu-id="69e20-118">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69e20-119">释放 <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /> 类的当前实例所使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="69e20-119">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e20-120">在完成使用 `Dispose` 后，应调用 <xref:System.Security.Cryptography.RijndaelManagedTransform>。</span><span class="sxs-lookup"><span data-stu-id="69e20-120">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.RijndaelManagedTransform>.</span></span> <span data-ttu-id="69e20-121">`Dispose` 方法使 <xref:System.Security.Cryptography.RijndaelManagedTransform> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="69e20-121">The `Dispose` method leaves the <xref:System.Security.Cryptography.RijndaelManagedTransform> in an unusable state.</span></span> <span data-ttu-id="69e20-122">在调用`Dispose`，必须释放对所有引用<xref:System.Security.Cryptography.RijndaelManagedTransform>以便垃圾回收器才能回收的内存，<xref:System.Security.Cryptography.RijndaelManagedTransform>占用。</span><span class="sxs-lookup"><span data-stu-id="69e20-122">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.RijndaelManagedTransform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.RijndaelManagedTransform> was occupying.</span></span>  
  
 <span data-ttu-id="69e20-123">有关详细信息，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="69e20-123">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69e20-124">每次释放对 `Dispose` 的最后一个引用前，均应调用 <xref:System.Security.Cryptography.RijndaelManagedTransform>。</span><span class="sxs-lookup"><span data-stu-id="69e20-124">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.RijndaelManagedTransform>.</span></span> <span data-ttu-id="69e20-125">否则，在垃圾回收器调用 <xref:System.Security.Cryptography.RijndaelManagedTransform> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="69e20-125">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.RijndaelManagedTransform> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69e20-126">获取输入块大小。</span><span class="sxs-lookup"><span data-stu-id="69e20-126">Gets the input block size.</span></span></summary>
        <value><span data-ttu-id="69e20-127">输入数据块的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="69e20-127">The size of the input data blocks in bytes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69e20-128">获取输出块大小。</span><span class="sxs-lookup"><span data-stu-id="69e20-128">Gets the output block size.</span></span></summary>
        <value><span data-ttu-id="69e20-129">输出数据块的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="69e20-129">The size of the output data blocks in bytes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69e20-130">重置 <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /> 的内部状态，这样就可将它再次用来进行其他加密或解密。</span><span class="sxs-lookup"><span data-stu-id="69e20-130">Resets the internal state of <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /> so it can be used again to do a different encryption or decryption.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e20-131"><xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A>在调用时自动调用方法<xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A>。</span><span class="sxs-lookup"><span data-stu-id="69e20-131">The <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method is called automatically when you call <xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A>.</span></span> <span data-ttu-id="69e20-132"><xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A>时，例如，加密的输入的数据是否垃圾回收，且无法进行解密，不会调用方法。</span><span class="sxs-lookup"><span data-stu-id="69e20-132">The <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method is not called when, for example, the encrypted input data is garbage and cannot be decrypted.</span></span> <span data-ttu-id="69e20-133">在这种情况下，将引发异常和<xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A>不调用。</span><span class="sxs-lookup"><span data-stu-id="69e20-133">In this case, an exception is thrown and <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> is not called.</span></span> <span data-ttu-id="69e20-134">你可以选择手动调用<xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A>在此情况下的方法。</span><span class="sxs-lookup"><span data-stu-id="69e20-134">You can choose to manually call the <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method in this case.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="69e20-135">对其执行操作的输入。</span><span class="sxs-lookup"><span data-stu-id="69e20-135">The input to perform the operation on.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="69e20-136">输入字节数组中的偏移量，从该位置开始使用数据。</span><span class="sxs-lookup"><span data-stu-id="69e20-136">The offset into the input byte array to begin using data from.</span></span></param>
        <param name="inputCount"><span data-ttu-id="69e20-137">输入字节数组中用作数据的字节数。</span><span class="sxs-lookup"><span data-stu-id="69e20-137">The number of bytes in the input byte array to use as data.</span></span></param>
        <param name="outputBuffer"><span data-ttu-id="69e20-138">要向其写入数据的输出。</span><span class="sxs-lookup"><span data-stu-id="69e20-138">The output to write the data to.</span></span></param>
        <param name="outputOffset"><span data-ttu-id="69e20-139">输出字节数组中的偏移量，从该位置开始写入数据。</span><span class="sxs-lookup"><span data-stu-id="69e20-139">The offset into the output byte array to begin writing data from.</span></span></param>
        <summary><span data-ttu-id="69e20-140">计算输入字节数组的指定区域的转换，并将所得到的转换复制到输出字节数组的指定区域。</span><span class="sxs-lookup"><span data-stu-id="69e20-140">Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.</span></span></summary>
        <returns><span data-ttu-id="69e20-141">写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="69e20-141">The number of bytes written.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="69e20-142"><paramref name="inputBuffer" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69e20-142">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="69e20-143">或</span><span class="sxs-lookup"><span data-stu-id="69e20-143">-or-</span></span>  
  
 <span data-ttu-id="69e20-144"><paramref name="outputBuffer" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69e20-144">The <paramref name="outputBuffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="69e20-145">输入缓冲区的长度小于输入偏移量和输入计数之和。</span><span class="sxs-lookup"><span data-stu-id="69e20-145">The length of the input buffer is less than the sum of the input offset and the input count.</span></span>  
  
 <span data-ttu-id="69e20-146">或</span><span class="sxs-lookup"><span data-stu-id="69e20-146">-or-</span></span>  
  
 <span data-ttu-id="69e20-147"><paramref name="inputCount" /> 参数的值小于或等于 0。</span><span class="sxs-lookup"><span data-stu-id="69e20-147">The value of the <paramref name="inputCount" /> parameter is less than or equal to 0.</span></span>  
  
 <span data-ttu-id="69e20-148">或</span><span class="sxs-lookup"><span data-stu-id="69e20-148">-or-</span></span>  
  
 <span data-ttu-id="69e20-149"><paramref name="inputCount" /> 参数的值大于 <paramref name="inputBuffer" /> 参数的长度。</span><span class="sxs-lookup"><span data-stu-id="69e20-149">The value of the <paramref name="inputCount" /> parameter is greater than the length of the <paramref name="inputBuffer" /> parameter.</span></span>  
  
 <span data-ttu-id="69e20-150">或</span><span class="sxs-lookup"><span data-stu-id="69e20-150">-or-</span></span>  
  
 <span data-ttu-id="69e20-151"><paramref name="inputCount" /> 参数的长度无法按输入块大小均匀设计。</span><span class="sxs-lookup"><span data-stu-id="69e20-151">The length of the <paramref name="inputCount" /> parameter is not evenly devisable by input block size.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="69e20-152"><paramref name="inputOffset" /> 参数的值为负。</span><span class="sxs-lookup"><span data-stu-id="69e20-152">The value of the <paramref name="inputOffset" /> parameter is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="69e20-153">对其执行操作的输入。</span><span class="sxs-lookup"><span data-stu-id="69e20-153">The input to perform the operation on.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="69e20-154">字节数组中的偏移量，从该位置开始使用数据。</span><span class="sxs-lookup"><span data-stu-id="69e20-154">The offset into the byte array to begin using data from.</span></span></param>
        <param name="inputCount"><span data-ttu-id="69e20-155">字节数组中用作数据的字节数。</span><span class="sxs-lookup"><span data-stu-id="69e20-155">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="69e20-156">计算指定字节数组的指定区域的转换。</span><span class="sxs-lookup"><span data-stu-id="69e20-156">Computes the transformation for the specified region of the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="69e20-157">计算所得的转换。</span><span class="sxs-lookup"><span data-stu-id="69e20-157">The computed transformation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="69e20-158"><paramref name="inputBuffer" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69e20-158">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="69e20-159"><paramref name="inputCount" /> 参数的值小于 0。</span><span class="sxs-lookup"><span data-stu-id="69e20-159">The value of the <paramref name="inputCount" /> parameter is less than 0.</span></span>  
  
 <span data-ttu-id="69e20-160">或</span><span class="sxs-lookup"><span data-stu-id="69e20-160">-or-</span></span>  
  
 <span data-ttu-id="69e20-161"><paramref name="inputCount" /> 参数的值大于 <paramref name="inputBuffer" /> 参数的长度。</span><span class="sxs-lookup"><span data-stu-id="69e20-161">The value of the <paramref name="inputCount" /> parameter is grater than the length of <paramref name="inputBuffer" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="69e20-162"><paramref name="inputOffset" /> 参数的值为负。</span><span class="sxs-lookup"><span data-stu-id="69e20-162">The value of the <paramref name="inputOffset" /> parameter is negative.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="69e20-163"><paramref name="inputCount" /> 参数的长度无法按输入块大小均匀设计。</span><span class="sxs-lookup"><span data-stu-id="69e20-163">The length of the <paramref name="inputCount" /> parameter is not evenly devisable by input block size.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>