<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HashAlgorithm.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52b9b76797e6d798773a44e829bec18e894d93a53.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b9b76797e6d798773a44e829bec18e894d93a53</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Represents the base class from which all implementations of cryptographic hash algorithms must derive.</source>
          <target state="translated">表示所有加密哈希算法实现均必须从中派生的基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Hash functions are fundamental to modern cryptography.</source>
          <target state="translated">哈希函数是现代加密的基础。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>These functions map binary strings of an arbitrary length to small binary strings of a fixed length, known as hash values.</source>
          <target state="translated">这些函数将任意长度的二进制字符串映射到名为哈希值的固定长度的小型二进制字符串。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value.</source>
          <target state="translated">加密哈希函数具有它为无法以计算方式找到哈希处理为相同的值的两个不同的输入的属性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Hash functions are commonly used with digital signatures and for data integrity.</source>
          <target state="translated">哈希函数通常用于使用数字签名以及用于数据完整性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>The hash is used as a unique value of fixed size representing a large amount of data.</source>
          <target state="translated">哈希用作表示大量的数据的固定大小的唯一值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Hashes of two sets of data should match if the corresponding data also matches.</source>
          <target state="translated">如果还将相应的数据匹配，则应与匹配的两个数据集的哈希值。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Small changes to the data result in large unpredictable changes in the hash.</source>
          <target state="translated">中大型不可预测的哈希变化的数据结果的小改动。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>The following code example computes the <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</ph> hash for an array.</source>
          <target state="translated">下面的代码示例计算<ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</ph>数组的哈希。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>This example assumes that there is a predefined byte array <ph id="ph1">`dataArray[]`</ph>.</source>
          <target state="translated">此示例假定是预定义的字节数组<ph id="ph1">`dataArray[]`</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</ph> is a derived class of <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</ph> 是的派生的类<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> class, you must override the following members:  <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> and <ph id="ph3">&lt;see cref="M:System.Security.Cryptography.HashAlgorithm.HashFinal" /&gt;</ph>.</source>
          <target state="translated">继承自<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph>类，你必须重写以下成员：<ph id="ph2">&lt;see cref="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" /&gt;</ph>和<ph id="ph3">&lt;see cref="M:System.Security.Cryptography.HashAlgorithm.HashFinal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.#ctor">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">无法创建抽象类的实例。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.#ctor">
          <source>Application code creates a new instance of a derived class.</source>
          <target state="translated">应用程序代码创建派生类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform">
          <source>Gets a value indicating whether the current transform can be reused.</source>
          <target state="translated">获取一个值，该值指示是否可重复使用当前转换。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">总是为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks">
          <source>When overridden in a derived class, gets a value indicating whether multiple blocks can be transformed.</source>
          <target state="translated">当在派生类中重写时，获取一个值，该值指示是否可以转换多个块。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if multiple blocks can be transformed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果可以转换多个块，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则，为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Clear">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> class.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> 类使用的所有资源。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Clear">
          <source>This method is a simple call to the <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">此方法是对的简单调用<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Clear">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> class to be reallocated for other purposes.</source>
          <target state="translated">调用<ph id="ph1">`Dispose`</ph>允许使用的资源<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>类可以重新分配用于其他目的。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Clear">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">`Dispose`</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Computes the hash value for the input data.</source>
          <target state="translated">计算输入数据的哈希值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <source>The input to compute the hash code for.</source>
          <target state="translated">要计算其哈希代码的输入。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <source>Computes the hash value for the specified byte array.</source>
          <target state="translated">计算指定字节数组的哈希值。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <source>The computed hash code.</source>
          <target state="translated">计算所得的哈希代码。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <source>The following example computes the <ph id="ph1">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> hash value of a string and returns the hash as a 32-character, hexadecimal-formatted string.</source>
          <target state="translated">下面的示例计算<ph id="ph1">&lt;xref:System.Security.Cryptography.MD5&gt;</ph>字符串的哈希值并返回该哈希作为 32 个字符的十六进制格式的字符串。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <source>The hash string created by this code example is compatible with any MD5 hash function (on any platform) that creates a 32-character, hexadecimal-formatted hash string.</source>
          <target state="translated">此代码示例通过创建哈希字符串适用于任何 MD5 哈希函数 （在任何平台） 上创建 32 个字符的十六进制格式哈希字符串。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <source>The object has already been disposed.</source>
          <target state="translated">对象已被释放。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <source>The input to compute the hash code for.</source>
          <target state="translated">要计算其哈希代码的输入。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <source>Computes the hash value for the specified <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated">计算指定 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 对象的哈希值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <source>The computed hash code.</source>
          <target state="translated">计算所得的哈希代码。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <source>The following example calculates the <ph id="ph1">&lt;xref:System.Security.Cryptography.RIPEMD160&gt;</ph> hash for all files in a directory.</source>
          <target state="translated">下面的示例计算<ph id="ph1">&lt;xref:System.Security.Cryptography.RIPEMD160&gt;</ph>目录中的所有文件的哈希。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <source>The object has already been disposed.</source>
          <target state="translated">对象已被释放。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>The input to compute the hash code for.</source>
          <target state="translated">要计算其哈希代码的输入。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">字节数组中的偏移量，从该位置开始使用数据。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the array to use as data.</source>
          <target state="translated">数组中用作数据的字节数。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>Computes the hash value for the specified region of the specified byte array.</source>
          <target state="translated">计算指定字节数组的指定区域的哈希值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>The computed hash code.</source>
          <target state="translated">计算所得的哈希代码。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 为无效值。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> length is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 长度无效。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 超出范围。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">此参数需要非负数。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <source>The object has already been disposed.</source>
          <target state="translated">对象已被释放。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Creates an instance of an implementation of a hash algorithm.</source>
          <target state="translated">创建哈希算法实现的实例。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create">
          <source>Creates an instance of the default implementation of a hash algorithm.</source>
          <target state="translated">创建哈希算法的默认实现的实例。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph> instance, unless the default settings have been changed using the .</source>
          <target state="translated">一个新的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph> 实例，除非已使用更改默认设置。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Create">
          <source>By default, this overload uses the <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</ph> implementation of a hash algorithm.</source>
          <target state="translated">默认情况下，此重载使用<ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</ph>哈希算法的实现。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Create">
          <source>If you want to specify a different implementation, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29&gt;</ph> overload, which lets you specify an algorithm name, instead.</source>
          <target state="translated">如果你想要指定不同的实现，使用<ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29&gt;</ph>重载，它可让你改为指定算法名称。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Create">
          <source>The cryptography configuration system defines the default implementation of <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>.</source>
          <target state="translated">加密配置系统定义的默认实现<ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source>The hash algorithm implementation to use.</source>
          <target state="translated">要使用的哈希算法的实现。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source>The following table shows the valid values for the <bpt id="p1">&lt;c&gt;</bpt>hashName<ept id="p1">&lt;/c&gt;</ept> parameter and the algorithms they map to.</source>
          <target state="translated">下表显示 <bpt id="p1">&lt;c&gt;</bpt>hashName<ept id="p1">&lt;/c&gt;</ept> 参数的有效值以及它们映射到的算法。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Parameter value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph>参数值</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Implements</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>实现</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> SHA</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph>SHA</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA1</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph>SHA1</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.SHA1</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph>System.Security.Cryptography.SHA1</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.HashAlgorithm</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph>System.Security.Cryptography.HashAlgorithm</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> MD5</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph>MD5</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.MD5</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph>System.Security.Cryptography.MD5</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA256</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph>SHA256</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA256Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA-256</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA256Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph>SHA-256</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA256Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.SHA256</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA256Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph>System.Security.Cryptography.SHA256</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA256Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA384</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA256Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph>SHA384</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA-384</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph>SHA-384</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.SHA384</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph>System.Security.Cryptography.SHA384</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA512</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph>SHA512</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA512Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> SHA-512</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA512Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph>SHA-512</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA512Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph> System.Security.Cryptography.SHA512</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><bpt id="p1">&lt;description&gt;</bpt><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.SHA512Managed" /&gt;</ph><ept id="p1">&lt;/description&gt;</ept><ph id="ph3">&lt;/item&gt;</ph><ph id="ph4">&lt;item&gt;</ph><ph id="ph5">&lt;term&gt;</ph>System.Security.Cryptography.SHA512</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source>Creates an instance of the specified implementation of a hash algorithm.</source>
          <target state="translated">创建哈希算法的指定实现的实例。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
          <source>A new instance of the specified hash algorithm, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="hashName" /&gt;</ph> is not a valid hash algorithm.</source>
          <target state="translated">指定哈希算法的新实例，如果 <ph id="ph2">&lt;paramref name="hashName" /&gt;</ph> 不是有效哈希算法，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.HashAlgorithm">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> class.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> 类的当前实例所使用的所有资源。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> class.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> 类的当前实例所使用的所有资源。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>.</source>
          <target state="translated">在完成使用 <ph id="ph1">`Dispose`</ph> 后，应调用 <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 方法使 <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> was occupying.</source>
          <target state="translated">在调用<ph id="ph1">`Dispose`</ph>，必须释放对所有引用<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>以便垃圾回收器才能回收的内存，<ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>占用。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>.</source>
          <target state="translated">每次释放对 <ph id="ph1">`Dispose`</ph> 的最后一个引用前，均应调用 <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否则，在垃圾回收器调用 <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> 对象的 <ph id="ph2">`Finalize`</ph> 方法之前，该对象正在使用的资源不会被释放。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> 占用的非托管资源，还可以另外再释放托管资源。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">`Finalize`</ph>方法。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> 调用<ph id="ph2">`Dispose`</ph>与<ph id="ph3">`disposing`</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> references.</source>
          <target state="translated">当 <ph id="ph1">`disposing`</ph> 参数为 <ph id="ph2">`true`</ph> 时，此方法释放该 <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> 引用的、由任何托管对象持有的全部资源。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用每个引用对象的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以由其他对象多次调用。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，请注意不要引用在以前调用之前释放对象<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关如何实现详细信息<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <source>Gets the value of the computed hash code.</source>
          <target state="translated">获取计算所得的哈希代码的值。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <source>The current value of the computed hash code.</source>
          <target state="translated">计算所得的哈希代码的当前值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> property is a byte array; the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</ph> property is a value that represent bits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph>属性是字节数组;<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</ph>属性是一个值，表示 bits。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <source>Therefore, the number of elements in <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> is one-eighth the size of <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</ph>.</source>
          <target state="translated">因此中的元素数<ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph>是大小的八分之一<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <source><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.HashAlgorithm.HashValue" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.HashAlgorithm.HashValue" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <source>The object has already been disposed.</source>
          <target state="translated">对象已被释放。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>The input to compute the hash code for.</source>
          <target state="translated">要计算其哈希代码的输入。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">字节数组中的偏移量，从该位置开始使用数据。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">字节数组中用作数据的字节数。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, routes data written to the object into the hash algorithm for computing the hash.</source>
          <target state="translated">当在派生类中重写时，将写入对象的数据路由到哈希算法以计算哈希值。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>This method is not called by application code.</source>
          <target state="translated">由应用程序代码不调用此方法。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>This abstract method performs the hash computation.</source>
          <target state="translated">此抽象方法执行哈希计算。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>Every write to the cryptographic stream object passes the data through this method.</source>
          <target state="translated">每次写入到加密流对象传递数据，通过此方法。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.</source>
          <target state="translated">对于每个数据块，此方法更新哈希对象的状态，以便在数据流的末尾，则返回正确的哈希值。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.HashFinal">
          <source>When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</source>
          <target state="translated">当在派生类中重写时，在加密流对象处理完最后的数据后完成哈希计算。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.HashFinal">
          <source>The computed hash code.</source>
          <target state="translated">计算所得的哈希代码。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.HashFinal">
          <source>This method finalizes any partial computation and returns the correct hash value for the data stream.</source>
          <target state="translated">此方法完成任何部分计算并返回数据流的正确哈希值。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.HashSize">
          <source>Gets the size, in bits, of the computed hash code.</source>
          <target state="translated">获取计算所得的哈希代码的大小（以位为单位）。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.HashSize">
          <source>The size, in bits, of the computed hash code.</source>
          <target state="translated">计算所得的哈希代码的大小（以位为单位）。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
          <source>Represents the size, in bits, of the computed hash code.</source>
          <target state="translated">表示计算所得的哈希代码的大小（以位为单位）。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
          <source>The hash algorithm specifies the size of the hash code.</source>
          <target state="translated">哈希算法指定的哈希代码的大小。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
          <source>For example, <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> uses a hash size of 160 bits.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph>使用 160 位的哈希大小。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
          <source>This field is accessed through the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</ph> property.</source>
          <target state="translated">通过访问此字段<ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.HashAlgorithm.HashValue">
          <source>Represents the value of the computed hash code.</source>
          <target state="translated">表示计算所得的哈希代码的值。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.HashAlgorithm.HashValue">
          <source>This field is accessed through the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> property.</source>
          <target state="translated">通过访问此字段<ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <source>Initializes an implementation of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> 类的实现。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize">
          <source>When overridden in a derived class, gets the input block size.</source>
          <target state="translated">当在派生类中重写时，获取输入块的大小。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize">
          <source>The input block size.</source>
          <target state="translated">输入块的大小。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize">
          <source>Unless overridden, this property returns the value 1.</source>
          <target state="translated">除非重写，此属性将返回值 1。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize">
          <source>When overridden in a derived class, gets the output block size.</source>
          <target state="translated">当在派生类中重写时，获取输出块的大小。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize">
          <source>The output block size.</source>
          <target state="translated">输出块的大小。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize">
          <source>Unless overridden, this property returns the value 1.</source>
          <target state="translated">除非重写，此属性将返回值 1。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.HashAlgorithm.State">
          <source>Represents the state of the hash computation.</source>
          <target state="translated">表示哈希计算的状态。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.HashAlgorithm.State">
          <source>This field is used to prevent users from changing the key of a keyed hash algorithm during a hash operation.</source>
          <target state="translated">此字段用于阻止用户在哈希操作过程中更改的加密哈希算法的密钥。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.HashAlgorithm.State">
          <source>When a key change is legitimate, the value of this field is zero both before and after a hash operation.</source>
          <target state="translated">密钥更改合法时，此字段的值将为零之前和之后的哈希操作。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.HashAlgorithm.State">
          <source>When a key change is not legitimate, the value of this field is nonzero.</source>
          <target state="translated">当密钥的更改不是合法的时则此字段的值不为零。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The input to compute the hash code for.</source>
          <target state="translated">要计算其哈希代码的输入。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the input byte array from which to begin using data.</source>
          <target state="translated">输入字节数组中的偏移量，从该位置开始使用数据。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes in the input byte array to use as data.</source>
          <target state="translated">输入字节数组中用作数据的字节数。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>A copy of the part of the input array used to compute the hash code.</source>
          <target state="translated">用于计算哈希代码的部分输入数组的副本。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the output byte array from which to begin writing data.</source>
          <target state="translated">输入字节数组中的偏移量，从该位置开始使用数据。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Computes the hash value for the specified region of the input byte array and copies the specified region of the input byte array to the specified region of the output byte array.</source>
          <target state="translated">计算输入字节数组指定区域的哈希值，并将输入字节数组指定区域复制到输出字节数组的指定区域。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes written.</source>
          <target state="translated">写入的字节数。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> method before calling the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> method.</source>
          <target state="translated">必须调用<ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph>方法之前调用<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>You must call both methods before you retrieve the final hash value.</source>
          <target state="translated">检索最后一个哈希值之前，必须调用这两种方法。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To retrieve the final hash value after calling the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> method, get the byte array contained within the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> property.</source>
          <target state="translated">若要在调用后检索最后一个哈希值<ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph>方法，获取字节数组中包含<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> method with different input and output arrays results in an <ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph>.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph>与不同的输入和输出数组的方法会导致<ph id="ph2">&lt;xref:System.IO.IOException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following code examples use the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> method to hash a string.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph>方法替换<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph>方法进行哈希字符串。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> uses an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> 使用了无效值。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> has an invalid length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> 具有无效的长度。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> 超出范围。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">此参数需要非负数。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The object has already been disposed.</source>
          <target state="translated">对象已被释放。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The input to compute the hash code for.</source>
          <target state="translated">要计算其哈希代码的输入。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">字节数组中的偏移量，从该位置开始使用数据。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">字节数组中用作数据的字节数。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>Computes the hash value for the specified region of the specified byte array.</source>
          <target state="translated">计算指定字节数组的指定区域的哈希值。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>An array that is a copy of the part of the input that is hashed.</source>
          <target state="translated">一个数组，该数组是输入中计算了哈希值的部分的副本。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> method after calling the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> method but before you retrieve the final hash value.</source>
          <target state="translated">必须调用<ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph>方法之后调用<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph>方法，但在检索最后一个哈希值之前。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>Note that the return value of this method is not the hash value, but only a copy of the hashed part of the input data.</source>
          <target state="translated">请注意，此方法的返回值不是哈希值，但仅输入数据经过哈希处理部分的副本。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>To retrieve the final hashed value after calling the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> method, get the byte array contained in the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph> property.</source>
          <target state="translated">若要检索最后一个哈希值后调用<ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph>方法、 字节数组中包含的 get<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The following code examples use the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph> method to hash a string.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</ph>方法替换<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</ph>方法进行哈希字符串。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> uses an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> 使用了无效值。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> has an invalid offset length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> 具有无效偏移量长度。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> 超出范围。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">此参数需要非负数。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The object has already been disposed.</source>
          <target state="translated">对象已被释放。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>