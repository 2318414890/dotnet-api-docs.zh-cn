<Type Name="CngAlgorithm" FullName="System.Security.Cryptography.CngAlgorithm">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bfe581a38b169c1fccc71f162f83107cc1d37a49" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CngAlgorithm : IEquatable&lt;System.Security.Cryptography.CngAlgorithm&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CngAlgorithm extends System.Object implements class System.IEquatable`1&lt;class System.Security.Cryptography.CngAlgorithm&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CngAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CngAlgorithm&#xA;Implements IEquatable(Of CngAlgorithm)" />
  <TypeSignature Language="C++ CLI" Value="public ref class CngAlgorithm sealed : IEquatable&lt;System::Security::Cryptography::CngAlgorithm ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Security.Cryptography.CngAlgorithm&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="36534-101">封装加密算法的名称。</span>
      <span class="sxs-lookup">
        <span data-stu-id="36534-101">Encapsulates the name of an encryption algorithm.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36534-102"><xref:System.Security.Cryptography.CngAlgorithm>类是一个实用工具类。</span><span class="sxs-lookup"><span data-stu-id="36534-102">The <xref:System.Security.Cryptography.CngAlgorithm> class is a utility class.</span></span> <span data-ttu-id="36534-103">它包含的静态属性、 比较方法和私有、 内部维护，算法名称字符串。</span><span class="sxs-lookup"><span data-stu-id="36534-103">It consists of static properties, comparison methods, and a private, internally maintained, algorithm name string.</span></span>  
  
 <span data-ttu-id="36534-104">静态属性返回<xref:System.Security.Cryptography.CngAlgorithm>对象。</span><span class="sxs-lookup"><span data-stu-id="36534-104">The static properties return <xref:System.Security.Cryptography.CngAlgorithm> objects.</span></span> <span data-ttu-id="36534-105">每个对象的内部字符串初始化为静态属性的名称对应的算法名称。</span><span class="sxs-lookup"><span data-stu-id="36534-105">Each object's internal string is initialized to the algorithm name that corresponds to the name of the static property.</span></span>  
  
 <span data-ttu-id="36534-106">此类还可用于创建未涵盖的静态属性的算法类型的对象。</span><span class="sxs-lookup"><span data-stu-id="36534-106">You can also use this class to create objects for algorithm types that are not covered by the static properties.</span></span>  
  
 <span data-ttu-id="36534-107">多个下一代加密技术 (CNG) 类 (如<xref:System.Security.Cryptography.CngKey>) 接受<xref:System.Security.Cryptography.CngAlgorithm>对象通过`algorithm`参数。</span><span class="sxs-lookup"><span data-stu-id="36534-107">Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) accept <xref:System.Security.Cryptography.CngAlgorithm> objects through an `algorithm` parameter.</span></span> <span data-ttu-id="36534-108">当类接收<xref:System.Security.Cryptography.CngAlgorithm>对象，它通过调用对象的检索嵌入的算法名称<xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36534-108">When the class receives the <xref:System.Security.Cryptography.CngAlgorithm> object, it retrieves the embedded algorithm name by calling the object's <xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A> property.</span></span>  
  
 <span data-ttu-id="36534-109">因此，<xref:System.Security.Cryptography.CngAlgorithm>用作的已知算法的枚举。</span><span class="sxs-lookup"><span data-stu-id="36534-109">Therefore, <xref:System.Security.Cryptography.CngAlgorithm> serves as an enumeration of well-known algorithms.</span></span> <span data-ttu-id="36534-110">它允许你使用强类型化的值而不是字符串中指定的已知的算法。</span><span class="sxs-lookup"><span data-stu-id="36534-110">It lets you specify a well-known algorithm by using a strongly typed value instead of a string.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CngAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (algorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CngAlgorithm(System::String ^ algorithm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="36534-111">要初始化的算法的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-111">The name of the algorithm to initialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36534-112">初始化 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CngAlgorithm" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36534-113">实例<xref:System.Security.Cryptography.CngAlgorithm>类内部维持相关由指定的算法名称`algorithm`参数。</span><span class="sxs-lookup"><span data-stu-id="36534-113">Instances of the <xref:System.Security.Cryptography.CngAlgorithm> class internally maintain the algorithm name that is specified by the `algorithm` parameter.</span></span>  
  
 <span data-ttu-id="36534-114">此构造函数的主要用途是提供用于创建的方法<xref:System.Security.Cryptography.CngAlgorithm>不表示的静态属性的算法类型的对象<xref:System.Security.Cryptography.CngAlgorithm>类。</span><span class="sxs-lookup"><span data-stu-id="36534-114">The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithm> objects for algorithm types that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithm> class.</span></span> <span data-ttu-id="36534-115">此功能允许将来[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]版本、 service pack 和第三方开发人员能够添加新算法，可以访问当前可用的算法一样。</span><span class="sxs-lookup"><span data-stu-id="36534-115">This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithms, which can be accessed just like the algorithms that are currently available.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="36534-116">
            <paramref name="algorithm" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-116">The <paramref name="algorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="36534-117">
            <paramref name="algorithm" /> 参数的长度为 0（零）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-117">The <paramref name="algorithm" /> parameter length is 0 (zero).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Algorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Algorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Algorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-118">获取当前 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象指定的算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-118">Gets the algorithm name that the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object specifies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-119">嵌入的算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-119">The embedded algorithm name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellman">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDiffieHellman { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDiffieHellman" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellman" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellman As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDiffieHellman { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-120">获取一个 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象，此对象指定椭圆曲线 Diffie-Hellman (ECDH) 密钥交换算法，此算法的曲线通过密钥属性描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-120">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm whose curve is described via a key property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-121">一个对象，此对象指定 ECDH 密钥交换算法，此算法的曲线通过密钥属性进行描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-121">An object that specifies an ECDH key exchange algorithm whose curve is described via a key property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellmanP256">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP256" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellmanP256 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDiffieHellmanP256 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-122">获取一个 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象，它指定使用 P-256 曲线的椭圆曲线 Diffie-Hellman (ECDH) 密钥交换算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-122">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-256 curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-123">一个指定使用 P-256 曲线的 ECDH 算法的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-123">An object that specifies an ECDH algorithm that uses the P-256 curve.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellmanP384">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP384 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP384" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellmanP384 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDiffieHellmanP384 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-124">获取一个 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象，它指定使用 P-384 曲线的椭圆曲线 Diffie-Hellman (ECDH) 密钥交换算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-124">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-384 curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-125">一个指定使用 P-384 曲线的 ECDH 算法的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-125">An object that specifies an ECDH algorithm that uses the P-384 curve.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellmanP521">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP521 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP521" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellmanP521 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDiffieHellmanP521 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-126">获取一个 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象，它指定使用 P-521 曲线的椭圆曲线 Diffie-Hellman (ECDH) 密钥交换算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-126">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-521 curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-127">一个指定使用 P-521 曲线的 ECDH 算法的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-127">An object that specifies an ECDH algorithm that uses the P-521 curve.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsa As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDsa { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-128">获取一个 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象，该对象指定椭圆曲线数字签名算法 (ECDSA)，此算法的曲线通过密钥属性描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-128">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) whose curve is described via a key property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-129">一个对象，此对象指定 ECDSA 的曲线通过密钥属性进行描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-129">An object that specifies an ECDSA whose curve is described via a key property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsaP256">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDsaP256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDsaP256" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDsaP256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsaP256 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDsaP256 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-130">获取一个 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象，它指定使用 P-256 曲线的椭圆曲线数字签名算法 (ECDSA)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-130">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-256 curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-131">一个指定使用 P-256 曲线的 ECDSA 算法的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-131">An object that specifies an ECDSA algorithm that uses the P-256 curve.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsaP384">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDsaP384 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDsaP384" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDsaP384" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsaP384 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDsaP384 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-132">获取一个 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象，它指定使用 P-384 曲线的椭圆曲线数字签名算法 (ECDSA)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-132">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-384 curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-133">一个指定使用 P-384 曲线的 ECDSA 算法的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-133">An object that specifies an ECDSA algorithm that uses the P-384 curve.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsaP521">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm ECDsaP521 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm ECDsaP521" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.ECDsaP521" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsaP521 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ ECDsaP521 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-134">获取一个新的 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象，它指定使用 P-521 曲线的椭圆曲线数字签名算法 (ECDSA)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-134">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-521 curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-135">一个指定使用 P-521 曲线的 ECDSA 算法的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-135">An object that specifies an ECDSA algorithm that uses the P-521 curve.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36534-136">比较两个 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-136">Compares two <see cref="T:System.Security.Cryptography.CngAlgorithm" /> objects.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="36534-137">要与当前的 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象进行比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-137">An object to be compared to the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36534-138">将指定的对象与当前的 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象进行比较。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-138">Compares the specified object to the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36534-139">如果 <paramref name="obj" /> 参数是一个指定与当前对象相同算法的 <see cref="T:System.Security.Cryptography.CngAlgorithm" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-139">
              <see langword="true" /> if the <paramref name="obj" /> parameter is a <see cref="T:System.Security.Cryptography.CngAlgorithm" /> that specifies the same algorithm as the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Security.Cryptography.CngAlgorithm other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Security.Cryptography.CngAlgorithm other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CngAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Security::Cryptography::CngAlgorithm ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Cryptography.CngAlgorithm" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="36534-140">要与当前的 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象进行比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-140">An object to be compared to the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36534-141">将指定的 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象与当前的 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象进行比较。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-141">Compares the specified <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object to the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36534-142">如果 <paramref name="other" /> 参数指定的算法与当前对象的算法相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-142">
              <see langword="true" /> if the <paramref name="other" /> parameter specifies the same algorithm as the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36534-143">为当前 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象中嵌入的算法名称生成一个哈希值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-143">Generates a hash value for the algorithm name that is embedded in the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36534-144">嵌入的算法名称的哈希值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-144">The hash value of the embedded algorithm name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MD5">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm MD5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm MD5" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.MD5" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MD5 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ MD5 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-145">获取一个新的 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象，它指定消息摘要 5 (MD5) 哈希算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-145">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Message Digest 5 (MD5) hash algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-146">一个指定 MD5 算法的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-146">An object that specifies the MD5 algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Security.Cryptography.CngAlgorithm left, class System.Security.Cryptography.CngAlgorithm right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CngAlgorithm, right As CngAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Security::Cryptography::CngAlgorithm ^ left, System::Security::Cryptography::CngAlgorithm ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithm" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithm" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="36534-147">一个指定算法名称的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-147">An object that specifies an algorithm name.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="36534-148">要与 <c>left</c> 参数标识的对象进行比较的另一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-148">A second object, to be compared to the object that is identified by the <c>left</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36534-149">确定两个 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象是否指定了相同的算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-149">Determines whether two <see cref="T:System.Security.Cryptography.CngAlgorithm" /> objects specify the same algorithm name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36534-150">如果两个对象指定了相同的算法名称，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-150">
              <see langword="true" /> if the two objects specify the same algorithm name; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Security.Cryptography.CngAlgorithm left, class System.Security.Cryptography.CngAlgorithm right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CngAlgorithm, right As CngAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Security::Cryptography::CngAlgorithm ^ left, System::Security::Cryptography::CngAlgorithm ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithm" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithm" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="36534-151">一个指定算法名称的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-151">An object that specifies an algorithm name.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="36534-152">要与 <c>left</c> 参数标识的对象进行比较的另一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-152">A second object, to be compared to the object that is identified by the <c>left</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36534-153">确定两个 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象是否未指定相同的算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-153">Determines whether two <see cref="T:System.Security.Cryptography.CngAlgorithm" /> objects do not specify the same algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36534-154">如果两个对象未指定相同的算法，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-154">
              <see langword="true" /> if the two objects do not specify the same algorithm name; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Rsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Rsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Rsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Rsa As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Rsa { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-155">获取一个新的 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象，它指定 RSA 哈希算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-155">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the RSA hash algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-156">一个指定 RSA 算法的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-156">An object that specifies the RSA algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sha1">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Sha1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Sha1" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Sha1" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Sha1 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Sha1 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-157">获取一个新的 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象，它指定安全哈希算法 1 (SHA-1) 算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-157">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Secure Hash Algorithm 1 (SHA-1) algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-158">一个指定 SHA-1 算法的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-158">An object that specifies the SHA-1 algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sha256">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Sha256" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Sha256 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Sha256 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-159">获取一个新的 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象，它指定安全哈希算法 256 (SHA-256) 算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-159">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Secure Hash Algorithm 256 (SHA-256) algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-160">一个指定 SHA-256 算法的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-160">An object that specifies the SHA-256 algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sha384">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Sha384 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Sha384" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Sha384" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Sha384 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Sha384 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-161">获取一个新的 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象，它指定安全哈希算法 384 (SHA-384) 算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-161">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Secure Hash Algorithm 384 (SHA-384) algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-162">一个指定 SHA-384 算法的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-162">An object that specifies the SHA-384 algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sha512">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithm Sha512 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithm Sha512" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithm.Sha512" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Sha512 As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithm ^ Sha512 { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36534-163">获取一个新的 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象，它指定安全哈希算法 512 (SHA-512) 算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-163">Gets a new <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object that specifies the Secure Hash Algorithm 512 (SHA-512) algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36534-164">一个指定 SHA-512 算法的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-164">An object that specifies the SHA-512 algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithm.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36534-165">获取当前 <see cref="T:System.Security.Cryptography.CngAlgorithm" /> 对象指定的算法的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-165">Gets the name of the algorithm that the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object specifies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36534-166">嵌入的算法名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="36534-166">The embedded algorithm name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>