<Type Name="DES" FullName="System.Security.Cryptography.DES">
  <TypeSignature Language="C#" Value="public abstract class DES : System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DES extends System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DES" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DES&#xA;Inherits SymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class DES abstract : System::Security::Cryptography::SymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.SymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2b96e-101">表示数据加密标准 (DES) 算法的基类，所有 <see cref="T:System.Security.Cryptography.DES" /> 实现都必须从此基类派生。</span><span class="sxs-lookup"><span data-stu-id="2b96e-101">Represents the base class for the Data Encryption Standard (DES) algorithm from which all <see cref="T:System.Security.Cryptography.DES" /> implementations must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b96e-102">此算法支持密钥长度为 64 位。</span><span class="sxs-lookup"><span data-stu-id="2b96e-102">This algorithm supports a key length of 64 bits.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="2b96e-103">较新的非对称加密算法，高级加密标准 (AES)，是可用的。</span><span class="sxs-lookup"><span data-stu-id="2b96e-103">A newer asymmetric encryption algorithm, Advanced Encryption Standard (AES), is available.</span></span> <span data-ttu-id="2b96e-104">请考虑使用<xref:System.Security.Cryptography.Aes>类而不是<xref:System.Security.Cryptography.DES>类。</span><span class="sxs-lookup"><span data-stu-id="2b96e-104">Consider using the <xref:System.Security.Cryptography.Aes> class instead of the <xref:System.Security.Cryptography.DES> class.</span></span> <span data-ttu-id="2b96e-105">使用<xref:System.Security.Cryptography.DES>仅为与旧的应用程序和数据的兼容性。</span><span class="sxs-lookup"><span data-stu-id="2b96e-105">Use <xref:System.Security.Cryptography.DES> only for compatibility with legacy applications and data.</span></span>
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DES ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b96e-106">初始化 <see cref="T:System.Security.Cryptography.DES" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2b96e-106">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DES" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b96e-107">无法创建抽象类的实例。</span><span class="sxs-lookup"><span data-stu-id="2b96e-107">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="2b96e-108">应用程序代码将创建派生类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2b96e-108">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="2b96e-109">此方法初始化的受保护的字段<xref:System.Security.Cryptography.SymmetricAlgorithm>为下表中显示的默认值的类。</span><span class="sxs-lookup"><span data-stu-id="2b96e-109">This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values shown in the following table.</span></span>  
  
|<span data-ttu-id="2b96e-110">字段</span><span class="sxs-lookup"><span data-stu-id="2b96e-110">Field</span></span>|<span data-ttu-id="2b96e-111">默认值</span><span class="sxs-lookup"><span data-stu-id="2b96e-111">Default Value</span></span>|  
|-----------|-------------------|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|<span data-ttu-id="2b96e-112">64</span><span class="sxs-lookup"><span data-stu-id="2b96e-112">64</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|<span data-ttu-id="2b96e-113">64</span><span class="sxs-lookup"><span data-stu-id="2b96e-113">64</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|<span data-ttu-id="2b96e-114">64</span><span class="sxs-lookup"><span data-stu-id="2b96e-114">64</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b96e-115">创建加密对象的实例以执行数据加密标准 (<see cref="T:System.Security.Cryptography.DES" />) 算法。</span><span class="sxs-lookup"><span data-stu-id="2b96e-115">Creates an instance of a cryptographic object to perform the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DES Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DES Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As DES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DES ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DES</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b96e-116">创建加密对象的实例以执行数据加密标准 (<see cref="T:System.Security.Cryptography.DES" />) 算法。</span><span class="sxs-lookup"><span data-stu-id="2b96e-116">Creates an instance of a cryptographic object to perform the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
        <returns><span data-ttu-id="2b96e-117">一个加密对象。</span><span class="sxs-lookup"><span data-stu-id="2b96e-117">A cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b96e-118">创建的实例<xref:System.Security.Cryptography.DES>可以用于加密和解密数据的对象。</span><span class="sxs-lookup"><span data-stu-id="2b96e-118">Creates an instance of the <xref:System.Security.Cryptography.DES> object that can be used for encrypting and decrypting data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b96e-119">下面的代码示例演示如何创建和使用<xref:System.Security.Cryptography.DES>对象来加密和解密文件中的数据。</span><span class="sxs-lookup"><span data-stu-id="2b96e-119">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.DES.Create.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Create.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Create.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.DES.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Create.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="2b96e-120">下面的代码示例演示如何创建和使用<xref:System.Security.Cryptography.DES>对象在内存中的数据进行加密和解密。</span><span class="sxs-lookup"><span data-stu-id="2b96e-120">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.DES.Create.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Create.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Create.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Create.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.DES.Create.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Create.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DES Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DES Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As DES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DES ^ Create(System::String ^ algName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DES</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="2b96e-121">要使用的 <see cref="T:System.Security.Cryptography.DES" /> 的特定实现的名称。</span><span class="sxs-lookup"><span data-stu-id="2b96e-121">The name of the specific implementation of <see cref="T:System.Security.Cryptography.DES" /> to use.</span></span></param>
        <summary><span data-ttu-id="2b96e-122">创建加密对象的实例以执行数据加密标准 (<see cref="T:System.Security.Cryptography.DES" />) 算法的指定实现。</span><span class="sxs-lookup"><span data-stu-id="2b96e-122">Creates an instance of a cryptographic object to perform the specified implementation of the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
        <returns><span data-ttu-id="2b96e-123">一个加密对象。</span><span class="sxs-lookup"><span data-stu-id="2b96e-123">A cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b96e-124">下面的代码示例演示如何创建和使用<xref:System.Security.Cryptography.DES>对象来加密和解密文件中的数据。</span><span class="sxs-lookup"><span data-stu-id="2b96e-124">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.DES.Createstring.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Createstring.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Createstring.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Createstring.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.DES.Createstring.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Createstring.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="2b96e-125">下面的代码示例演示如何创建和使用<xref:System.Security.Cryptography.DES>对象在内存中的数据进行加密和解密。</span><span class="sxs-lookup"><span data-stu-id="2b96e-125">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSemiWeakKey">
      <MemberSignature Language="C#" Value="public static bool IsSemiWeakKey (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSemiWeakKey(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSemiWeakKey (rgbKey As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSemiWeakKey(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="2b96e-126">要进行半弱漏洞测试的密钥。</span><span class="sxs-lookup"><span data-stu-id="2b96e-126">The secret key to test for semi-weakness.</span></span></param>
        <summary><span data-ttu-id="2b96e-127">确定指定的密钥是否为半弱密钥。</span><span class="sxs-lookup"><span data-stu-id="2b96e-127">Determines whether the specified key is semi-weak.</span></span></summary>
        <returns>
          <span data-ttu-id="2b96e-128">如果该密钥为半弱密钥，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b96e-128"><see langword="true" /> if the key is semi-weak; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b96e-129">半弱密钥是导致容易被破解的密码的密钥对。</span><span class="sxs-lookup"><span data-stu-id="2b96e-129">Semi-weak keys are pairs of keys that result in ciphers that are easy to break.</span></span> <span data-ttu-id="2b96e-130">如果文本用半弱密钥加密，加密产生的密码与该半弱密钥的合作伙伴返回原始文本。</span><span class="sxs-lookup"><span data-stu-id="2b96e-130">If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text.</span></span> <span data-ttu-id="2b96e-131">有六个已知半弱密钥对数据加密标准 (<xref:System.Security.Cryptography.DES>) 算法; 此方法检查这些半弱密钥。</span><span class="sxs-lookup"><span data-stu-id="2b96e-131">There are six known semi-weak key pairs for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those semi-weak keys.</span></span>  
  
 <span data-ttu-id="2b96e-132">尝试设置半弱密钥将导致<xref:System.Security.Cryptography.CryptographicException>。</span><span class="sxs-lookup"><span data-stu-id="2b96e-132">Attempting to set a semi-weak key results in a <xref:System.Security.Cryptography.CryptographicException>.</span></span> <span data-ttu-id="2b96e-133">当<xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A>调用创建一个随机密钥，永远不会返回密钥为半弱。</span><span class="sxs-lookup"><span data-stu-id="2b96e-133">When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a semi-weak key will never be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2b96e-134"><paramref name="rgbKey" /> 参数的大小无效。</span><span class="sxs-lookup"><span data-stu-id="2b96e-134">The size of the <paramref name="rgbKey" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsWeakKey">
      <MemberSignature Language="C#" Value="public static bool IsWeakKey (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWeakKey(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWeakKey (rgbKey As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWeakKey(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="2b96e-135">要进行漏洞测试的密钥。</span><span class="sxs-lookup"><span data-stu-id="2b96e-135">The secret key to test for weakness.</span></span></param>
        <summary><span data-ttu-id="2b96e-136">确定指定的密钥是否为弱密钥。</span><span class="sxs-lookup"><span data-stu-id="2b96e-136">Determines whether the specified key is weak.</span></span></summary>
        <returns>
          <span data-ttu-id="2b96e-137">如果密钥为弱密钥，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b96e-137"><see langword="true" /> if the key is weak; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b96e-138">共享密钥的安全性是导致容易被破解的密码的密钥。</span><span class="sxs-lookup"><span data-stu-id="2b96e-138">Weak keys are keys that result in ciphers that are easy to break.</span></span> <span data-ttu-id="2b96e-139">如果文本用弱密钥加密的且具有相同的弱密钥重新加密产生的密码返回原始文本。</span><span class="sxs-lookup"><span data-stu-id="2b96e-139">If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text.</span></span> <span data-ttu-id="2b96e-140">有四个已知的弱密钥，为数据加密标准 (<xref:System.Security.Cryptography.DES>) 算法; 此方法检查这些弱密钥。</span><span class="sxs-lookup"><span data-stu-id="2b96e-140">There are four known weak keys for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those weak keys.</span></span>  
  
 <span data-ttu-id="2b96e-141">尝试设置弱密钥将导致<xref:System.Security.Cryptography.CryptographicException>。</span><span class="sxs-lookup"><span data-stu-id="2b96e-141">Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>.</span></span> <span data-ttu-id="2b96e-142">当<xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A>称为若要创建一个随机密钥，弱密钥将永远不会返回。</span><span class="sxs-lookup"><span data-stu-id="2b96e-142">When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2b96e-143"><paramref name="rgbKey" /> 参数的大小无效。</span><span class="sxs-lookup"><span data-stu-id="2b96e-143">The size of the <paramref name="rgbKey" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DES.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b96e-144">获取或设置数据加密标准 (<see cref="T:System.Security.Cryptography.DES" />) 算法的机密密钥。</span><span class="sxs-lookup"><span data-stu-id="2b96e-144">Gets or sets the secret key for the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
        <value><span data-ttu-id="2b96e-145"><see cref="T:System.Security.Cryptography.DES" /> 算法的密钥。</span><span class="sxs-lookup"><span data-stu-id="2b96e-145">The secret key for the <see cref="T:System.Security.Cryptography.DES" /> algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b96e-146">如果此属性为`null`时使用它，<xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A>调用创建一个新的随机值。</span><span class="sxs-lookup"><span data-stu-id="2b96e-146">If this property is `null` when it is used, <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> is called to create a new random value.</span></span>  
  
 <span data-ttu-id="2b96e-147">密钥的长度必须等于<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>。</span><span class="sxs-lookup"><span data-stu-id="2b96e-147">The length of the key must be equal to <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>.</span></span>  
  
 <span data-ttu-id="2b96e-148">此算法支持密钥长度为 64 位。</span><span class="sxs-lookup"><span data-stu-id="2b96e-148">This algorithm supports a key length of 64 bits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b96e-149">尝试将密钥设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2b96e-149">An attempt was made to set the key to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b96e-150">尝试设置长度不等于 <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" /> 的密钥。</span><span class="sxs-lookup"><span data-stu-id="2b96e-150">An attempt was made to set a key whose length is not equal to <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2b96e-151">尝试设置弱密钥（请参见 <see cref="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" />）或半弱密钥（请参见 <see cref="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" />）。</span><span class="sxs-lookup"><span data-stu-id="2b96e-151">An attempt was made to set a weak key (see <see cref="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" />) or a semi-weak key (see <see cref="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" />).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>