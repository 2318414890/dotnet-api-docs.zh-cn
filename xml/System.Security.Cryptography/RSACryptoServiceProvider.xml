<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RSACryptoServiceProvider.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bfe362923836f8d655205816ab48c0277ab4a988.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bfe362923836f8d655205816ab48c0277ab4a988</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Performs asymmetric encryption and decryption using the implementation of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm provided by the cryptographic service provider (CSP).</source>
          <target state="translated">使用加密服务提供程序 (CSP) 提供的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 算法的实现执行非对称加密和解密。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>This is the default implementation of <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph>.</source>
          <target state="translated">这是默认实现<ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> supports key sizes from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>增量为 8 位支持 384 位至 16384 位的密钥大小，如果你有了 Microsoft Enhanced Cryptographic Provider 安装。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>It supports key sizes from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.</source>
          <target state="translated">如果已安装了 Microsoft Base Cryptographic Provider，它会在增量为 8 位支持 384 位至 512 位的密钥大小。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Valid key sizes are dependent on the cryptographic service provider (CSP) that is used by the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> instance.</source>
          <target state="translated">有效密钥大小是依赖于由加密服务提供程序 (CSP)<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Windows CSPs enable keys sizes of 384 to 16384 bits for Windows versions prior to <ph id="ph1">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>, and key sizes of 512 to 16384 bits for <ph id="ph2">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>.</source>
          <target state="translated">Windows Csp 启用密钥大小为以前的 Windows 版本的 384 到 16384 位<ph id="ph1">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>，和密钥大小为 512 到 16384 位<ph id="ph2">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>For more information, see <bpt id="p1">[</bpt>CryptGenKey<ept id="p1">](http://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx)</ept> function in the Windows documentation.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>CryptGenKey<ept id="p1">](http://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx)</ept> Windows 文档中的函数。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Interoperation with the Microsoft Cryptographic API (CAPI)</source>
          <target state="translated">与 Microsoft 加密 API (CAPI) 的互操作</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Unlike the RSA implementation in unmanaged CAPI, the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class reverses the order of an encrypted array of bytes after encryption and before decryption.</source>
          <target state="translated">与非托管 CAPI 中的 RSA 实现不同<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>类加密的字节数组的顺序反转之后加密, 和解密之前。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>By default, data encrypted by the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class cannot be decrypted by the CAPI <ph id="ph2">`CryptDecrypt`</ph> function and data encrypted by the CAPI <ph id="ph3">`CryptEncrypt`</ph> method cannot be decrypted by the <ph id="ph4">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class.</source>
          <target state="translated">默认情况下，数据加密通过<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>类不能解密由 CAPI<ph id="ph2">`CryptDecrypt`</ph>函数和数据加密由 CAPI<ph id="ph3">`CryptEncrypt`</ph>方法无法解密<ph id="ph4">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>If you do not compensate for the reverse ordering when interoperating between APIs, the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class throws a <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph>.</source>
          <target state="translated">如果你无法执行补偿的反向排序时 Api 之间进行互操作<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>类将引发<ph id="ph2">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>To interoperate with CAPI, you must manually reverse the order of encrypted bytes before the encrypted data interoperates with another API.</source>
          <target state="translated">与进行互操作 CAPI，必须手动撤消加密的字节的顺序之前加密的数据与另一个 API 互操作。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>You can easily reverse the order of a managed byte array by calling the <ph id="ph1">&lt;xref:System.Array.Reverse%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">你可以轻松地反转托管的字节数组的顺序，通过调用<ph id="ph1">&lt;xref:System.Array.Reverse%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class to encrypt a string into an array of bytes and then decrypt the bytes back into a string.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>类转换为字节数组加密字符串，然后将这些字节解密回字符串。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>The following code example exports the key information created using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> into an <ph id="ph2">&lt;xref:System.Security.Cryptography.RSAParameters&gt;</ph> object.</source>
          <target state="translated">下面的代码示例将导出的密钥信息创建使用<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>到<ph id="ph2">&lt;xref:System.Security.Cryptography.RSAParameters&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> class using the default key.</source>
          <target state="translated">使用默认密钥初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
          <source>If no default key is found, a new key is created.</source>
          <target state="translated">如果不找到任何默认密钥，则创建新密钥。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</source>
          <target state="translated">此构造函数创建<ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph>密钥对，用于加密会话密钥，以便它们可以安全地存储以及与其他用户交换。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
          <source>The generated key corresponds to a key generated using the <ph id="ph1">`AT_KEYEXCHANGE`</ph> value used in the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated">生成的密钥对应于生成使用的密钥<ph id="ph1">`AT_KEYEXCHANGE`</ph>使用非托管在 Microsoft 加密 API (CAPI) 的值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class to encrypt a string into an array of bytes and then decrypt the bytes back into a string.</source>
          <target state="translated">下面的代码示例使用<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>类转换为字节数组加密字符串，然后将这些字节解密回字符串。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">无法获取加密服务提供程序 (CSP)。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
          <source>The size of the key to use in bits.</source>
          <target state="translated">要使用的密钥的大小（以位为单位）。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> class with the specified key size.</source>
          <target state="translated">使用指定的密钥大小初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
          <source>If no default key is found, a new key is created.</source>
          <target state="translated">如果不找到任何默认密钥，则创建新密钥。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
          <source>This constructor creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</source>
          <target state="translated">此构造函数创建<ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph>密钥对，用于加密会话密钥，以便它们可以安全地存储以及与其他用户交换。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
          <source>The generated key corresponds to a key generated using the <ph id="ph1">`AT_KEYEXCHANGE`</ph> value used in the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated">生成的密钥对应于生成使用的密钥<ph id="ph1">`AT_KEYEXCHANGE`</ph>使用非托管在 Microsoft 加密 API (CAPI) 的值。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>, generates a new key, and stores it in a key container.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>，将生成新密钥，并将它存储在密钥容器。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">无法获取加密服务提供程序 (CSP)。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>The parameters to be passed to the cryptographic service provider (CSP).</source>
          <target state="translated">要传递给加密服务提供程序 (CSP) 的参数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> class with the specified parameters.</source>
          <target state="translated">使用指定的参数初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>This constructor creates or reuses a key container specified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.CspParameters.KeyContainerName&gt;</ph> field of the <ph id="ph2">`parameters`</ph> parameter.</source>
          <target state="translated">此构造函数创建或重新使用使用指定的密钥容器<ph id="ph1">&lt;xref:System.Security.Cryptography.CspParameters.KeyContainerName&gt;</ph>字段<ph id="ph2">`parameters`</ph>参数。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>By default, this constructor creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</source>
          <target state="translated">默认情况下，此构造函数创建<ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph>密钥对，用于加密会话密钥，以便它们可以安全地存储以及与其他用户交换。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>The generated key corresponds to a key generated using the <ph id="ph1">`AT_KEYEXCHANGE`</ph> value used in the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated">生成的密钥对应于生成使用的密钥<ph id="ph1">`AT_KEYEXCHANGE`</ph>使用非托管在 Microsoft 加密 API (CAPI) 的值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>You can create a <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> key pair suitable for authenticating (digitally signed) messages or files by setting the <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters.KeyNumber&gt;</ph> field of the <ph id="ph3">`parameters`</ph> parameter to the <ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> value.</source>
          <target state="translated">你可以创建<ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph>密钥对适用于进行身份验证 （进行数字签名） 的消息或文件设置<ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters.KeyNumber&gt;</ph>字段<ph id="ph3">`parameters`</ph>参数<ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>This type of key corresponds to the <ph id="ph1">`AT_SIGNATURE`</ph> value used in CAPI.</source>
          <target state="translated">这种类型的键对应于<ph id="ph1">`AT_SIGNATURE`</ph>CAPI 中使用的值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>If you create an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object with the <ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> value specified and then create another <ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object with the <ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> value specified, both keys will be placed in a single container if both objects specify the same key container name.</source>
          <target state="translated">如果你创建<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>对象<ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph>值指定，然后创建另一个<ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>对象<ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph>指定值，这两个键将放置在单个容器中，如果这两个对象指定相同的密钥容器名称.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>To create a key that is compatible with stong-name signing using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class, you must create a <ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> key pair.</source>
          <target state="translated">若要创建一个密钥，强名称签名使用与兼容<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>类，你必须创建<ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph>密钥对。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object, generates a new key, and stores it in a key container.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>对象，将生成新密钥，并将其存储在密钥容器。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>The CSP cannot be acquired.</source>
          <target state="translated">无法获取 CSP。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The size of the key to use in bits.</source>
          <target state="translated">要使用的密钥的大小（以位为单位）。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The parameters to be passed to the cryptographic service provider (CSP).</source>
          <target state="translated">要传递给加密服务提供程序 (CSP) 的参数。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> class with the specified key size and parameters.</source>
          <target state="translated">使用指定的密钥大小和参数初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>This constructor creates or reuses a key container specified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.CspParameters.KeyContainerName&gt;</ph> field of the <ph id="ph2">`parameters`</ph> parameter.</source>
          <target state="translated">此构造函数创建或重新使用使用指定的密钥容器<ph id="ph1">&lt;xref:System.Security.Cryptography.CspParameters.KeyContainerName&gt;</ph>字段<ph id="ph2">`parameters`</ph>参数。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>By default, this constructor creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</source>
          <target state="translated">默认情况下，此构造函数创建<ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph>密钥对，用于加密会话密钥，以便它们可以安全地存储以及与其他用户交换。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The generated key corresponds to a key generated using the <ph id="ph1">`AT_KEYEXCHANGE`</ph> value used in the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated">生成的密钥对应于生成使用的密钥<ph id="ph1">`AT_KEYEXCHANGE`</ph>使用非托管在 Microsoft 加密 API (CAPI) 的值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>You can create a <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> key pair suitable for authenticating (digitally signed) messages or files by setting the <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters.KeyNumber&gt;</ph> field of the <ph id="ph3">`parameters`</ph> parameter to the <ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> value.</source>
          <target state="translated">你可以创建<ph id="ph1">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph>密钥对适用于进行身份验证 （进行数字签名） 的消息或文件设置<ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters.KeyNumber&gt;</ph>字段<ph id="ph3">`parameters`</ph>参数<ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>This type of key corresponds to the <ph id="ph1">`AT_SIGNATURE`</ph> value used in CAPI.</source>
          <target state="translated">这种类型的键对应于<ph id="ph1">`AT_SIGNATURE`</ph>CAPI 中使用的值。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>If you create an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object with the <ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph> value specified and then create another <ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object with the <ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> value specified, both keys will be placed in a single container if both objects specify the same key container name.</source>
          <target state="translated">如果你创建<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>对象<ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Exchange&gt;</ph>值指定，然后创建另一个<ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>对象<ph id="ph4">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph>指定值，这两个键将放置在单个容器中，如果这两个对象指定相同的密钥容器名称.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>To create a key that is compatible with stong-name signing using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class, you must create a <ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph> key pair.</source>
          <target state="translated">若要创建一个密钥，强名称签名使用与兼容<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>类，你必须创建<ph id="ph2">&lt;xref:System.Security.Cryptography.KeyNumber.Signature&gt;</ph>密钥对。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>, generates a new key, and stores it in a key container.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>，将生成新密钥，并将它存储在密钥容器。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The CSP cannot be acquired.</source>
          <target state="translated">无法获取 CSP。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The key cannot be created.</source>
          <target state="translated">无法创建密钥。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> object that describes additional information about a cryptographic key pair.</source>
          <target state="translated">获取描述有关加密密钥对的附加信息的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> object that describes additional information about a cryptographic key pair.</source>
          <target state="translated">描述有关加密密钥对的附加信息的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> property to retrieve additional information about a cryptographic key pair.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph>属性来检索加密的密钥对的附加信息。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>The returned <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> object describes whether the key is exportable, and specifies the key container name, information about the provider, and other information.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph>对象描述密钥是否可导出，并指定密钥容器名称、 有关提供程序，信息和其他信息。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>In cases where a random key is generated, a key container will not be created until you call a method that uses the key.</source>
          <target state="translated">直到你调用的方法，将使用的密钥，不将在其中生成一个随机密钥的情况下，创建的密钥容器。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>Some properties of the <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> property will throw a <ph id="ph3">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph> if a key container has not been created.</source>
          <target state="translated">某些属性<ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph>返回对象<ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph>属性将引发<ph id="ph3">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph>如果尚未创建的密钥容器。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>To make sure that a key container has been created, call a method such as <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A&gt;</ph>, and so on, before you call the <ph id="ph5">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> property.</source>
          <target state="translated">若要确保已创建的密钥容器，调用方法如<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A&gt;</ph>，依此类推，在调用之前<ph id="ph5">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> property.</source>
          <target state="translated">下面的代码示例演示如何调用<ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Decrypts data that was previously encrypted.</source>
          <target state="translated">对以前加密的数据进行解密。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The data to be decrypted.</source>
          <target state="translated">要解密的数据。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to perform direct <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> decryption using OAEP padding (only available on a computer running Microsoft Windows XP or later); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph> to use PKCS#1 v1.5 padding.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则使用 OAEP 填充（仅可用于运行 Microsoft Windows XP 及更高版本的计算机）执行直接 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 解密；否则，如果为 <ph id="ph3">&lt;see langword="false" /&gt;</ph> 则使用 PKCS#1 v1.5 填充。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>Decrypts data with the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 算法加密数据。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The decrypted data, which is the original plain text before encryption.</source>
          <target state="translated">已解密的数据，它是加密前的原始纯文本。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A&gt;</ph> to encrypt data for decryption with this method.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A&gt;</ph>用此方法进行解密的数据进行加密。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The following code example encrypts and decrypts data.</source>
          <target state="translated">下面的代码示例进行加密和解密数据。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> class; however, the <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph> class may be preferable in large data operations.</source>
          <target state="translated">此示例使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>类; 但是，<ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>类可能在大型数据操作中更好。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The encrypted value can be saved as an <ph id="ph1">`nvarchar`</ph> data type in Microsoft SQL Server 2005.</source>
          <target state="translated">加密的值可另存为<ph id="ph1">`nvarchar`</ph>Microsoft SQL Server 2005 中的数据类型。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">无法获取加密服务提供程序 (CSP)。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="fOAEP" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the length of the <ph id="ph3">&lt;paramref name="rgb" /&gt;</ph> parameter is greater than <ph id="ph4">&lt;see cref="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" /&gt;</ph>.</source>
          <target state="translated">参数 <ph id="ph1">&lt;paramref name="fOAEP" /&gt;</ph> 的值为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，并且 <ph id="ph3">&lt;paramref name="rgb" /&gt;</ph> 参数的长度大于 <ph id="ph4">&lt;see cref="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="fOAEP" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and OAEP is not supported.</source>
          <target state="translated">参数 <ph id="ph1">&lt;paramref name="fOAEP" /&gt;</ph> 的值为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，并且不支持 OAEP。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>The key does not match the encrypted data.</source>
          <target state="translated">此密钥与解密数据不匹配。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>However, the exception wording may not be accurate.</source>
          <target state="translated">但是，异常用词可能不准确。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>For example, it may say <bpt id="p1">&lt;c&gt;</bpt>Not enough storage is available to process this command<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">例如，可能显示 <bpt id="p1">&lt;c&gt;</bpt>Not enough storage is available to process this command<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>for permission to decrypt.</source>
          <target state="translated">若要解密的权限。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The data to decrypt.</source>
          <target state="translated">要解密的数据。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The padding.</source>
          <target state="translated">填充。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>Decrypts data that was previously encrypted with the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm by using the specified padding.</source>
          <target state="translated">使用指定填充对以前通过 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 算法加密的数据进行解密。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The decrypted data.</source>
          <target state="translated">已解密的数据。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source><ph id="ph1">`padding`</ph> must be either <ph id="ph2">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`padding`</ph> 必须为<ph id="ph2">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType&gt;</ph>或<ph id="ph3">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The padding mode is not supported.</source>
          <target state="translated">不支持该填充模式。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])">
          <source>The data to be decrypted.</source>
          <target state="translated">要解密的数据。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])">
          <source>This method is not supported in the current version.</source>
          <target state="translated">当前版本不支持此方法。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])">
          <source>The decrypted data, which is the original plain text before encryption.</source>
          <target state="translated">已解密的数据，它是加密前的原始纯文本。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])">
          <source>This method is not supported in the current version.</source>
          <target state="translated">当前版本不支持此方法。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Encrypts data with the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 算法加密数据。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The data to be encrypted.</source>
          <target state="translated">要加密的数据。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to perform direct <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> encryption using OAEP padding (only available on a computer running Windows XP or later); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph> to use PKCS#1 v1.5 padding.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则使用 OAEP 填充（仅可用于运行 Windows XP 及更高版本的计算机）执行直接 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 加密；否则，如果为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>，则使用 PKCS#1 v1.5 填充。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Encrypts data with the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 算法加密数据。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The encrypted data.</source>
          <target state="translated">已加密的数据。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The following table describes the padding supported by different versions of Microsoft Windows and the maximum length of <ph id="ph1">`rgb`</ph> allowed by the different combinations of operating systems and padding.</source>
          <target state="translated">下表描述了支持的不同版本的 Microsoft Windows 和的最大长度的填充<ph id="ph1">`rgb`</ph>允许的操作系统和填充的不同组合。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Padding</source>
          <target state="translated">填充</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Operating System Supported</source>
          <target state="translated">支持的操作系统</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Maximum Length of rgb Parameter</source>
          <target state="translated">Rgb 参数的最大长度</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>OAEP padding (PKCS#1 v2)</source>
          <target state="translated">OAEP 填充 (PKCS #1 v2)</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Windows XP or later.</source>
          <target state="translated">Windows XP 或更高版本。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Modulus size -2 -2*hLen, where hLen is the size of the hash.</source>
          <target state="translated">取模大小-2-2 * hLen，hLen 所在的哈希值的大小。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Direct Encryption (PKCS#1 v1.5)</source>
          <target state="translated">直接加密 (PKCS #1 v1.5)</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Microsoft Windows 2000 or later with the high encryption pack installed.</source>
          <target state="translated">Microsoft Windows 2000 或更高版本且安装了高加密包。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Modulus size - 11.</source>
          <target state="translated">取模大小-11。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>(11 bytes is the minimum padding possible.)</source>
          <target state="translated">（11 个字节是填充可能的最小。）</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Direct Encryption and OAEP padding not supported</source>
          <target state="translated">指示不支持的加密和 OAEP 填充</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Microsoft Windows 98, Windows Millennium Edition, or Windows 2000 or later without the high encryption pack installed.</source>
          <target state="translated">Microsoft Windows 98、 Windows Millennium Edition 或 Windows 2000 或更高版本，而无需安装了高加密包。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The maximum size allowed for a symmetric key.</source>
          <target state="translated">对于对称密钥允许的最大大小。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A&gt;</ph> to decrypt the results of this method.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A&gt;</ph>来解密此方法的结果。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The following code example initializes an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object to the value of a public key (sent by another party), generates a session key using the <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> algorithm, and then encrypts the session key using the <ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object.</source>
          <target state="translated">下面的代码示例初始化<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>对象到的值 （由另一方发送） 的一个公钥，生成会话密钥 using<ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph>算法，然后使用对加密会话密钥使用<ph id="ph3">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>Using this scheme, the session key could be sent back to the owner of the private RSA key and the two parties could use the session key to exchange encrypted data.</source>
          <target state="translated">使用此方案，会话密钥无法发送回的 RSA 私钥的所有者和两个参与方无法使用会话密钥交换加密的数据。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">无法获取加密服务提供程序 (CSP)。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The length of the <ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> parameter is greater than the maximum allowed length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> 参数的长度大于允许的最大长度。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="fOAEP" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and OAEP padding is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fOAEP" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，但不支持 OAEP 填充。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The data to encrypt.</source>
          <target state="translated">要加密的数据。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The padding.</source>
          <target state="translated">填充。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>Encrypts data with the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm using the specified padding.</source>
          <target state="translated">使用指定的填充，借助 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 算法，对数据加密。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The encrypted data.</source>
          <target state="translated">已加密的数据。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source><ph id="ph1">`padding`</ph> must be either <ph id="ph2">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`padding`</ph> 必须为<ph id="ph2">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType&gt;</ph>或<ph id="ph3">&lt;xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The padding mode is not supported.</source>
          <target state="translated">不支持该填充模式。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])">
          <source>The data to be encrypted.</source>
          <target state="translated">要加密的数据。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])">
          <source>This method is not supported in the current version.</source>
          <target state="translated">当前版本不支持此方法。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])">
          <source>The encrypted data.</source>
          <target state="translated">已加密的数据。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])">
          <source>This method is not supported in the current version.</source>
          <target state="translated">当前版本不支持此方法。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the private key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若包括私钥，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>Exports a blob containing the key information associated with an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> object.</source>
          <target state="translated">导出包含与 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> 对象关联的密钥信息的 blob。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>A byte array containing the key information associated with an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> object.</source>
          <target state="translated">包含与 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> 对象关联的密钥信息的字节数组。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob%2A&gt;</ph> method returns a blob containing key information that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob%2A&gt;</ph>方法返回包含非托管与 Microsoft 加密 API (CAPI) 兼容的密钥信息的 blob。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>for permission to access a key container when exporting a private key.</source>
          <target state="translated">有关导出私钥时访问的密钥容器的权限。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要包含专用参数，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>Exports the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSAParameters" /&gt;</ph>.</source>
          <target state="translated">导出 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSAParameters" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>The parameters for <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 的参数。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>The following code example exports the key information created using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> into an <ph id="ph2">&lt;xref:System.Security.Cryptography.RSAParameters&gt;</ph> object.</source>
          <target state="translated">下面的代码示例将导出的密钥信息创建使用<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>到<ph id="ph2">&lt;xref:System.Security.Cryptography.RSAParameters&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>The key cannot be exported.</source>
          <target state="translated">密钥无法导出。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>for permission to export a key.</source>
          <target state="translated">若要导出密钥的权限。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>A byte array that represents an RSA key blob.</source>
          <target state="translated">表示 RSA 密钥 blob 的字节数组。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>Imports a blob that represents RSA key information.</source>
          <target state="translated">导入表示 RSA 密钥信息的 blob。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob%2A&gt;</ph> method initializes the key data of an <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object using a blob that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob%2A&gt;</ph>方法初始化的密钥数据<ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>对象使用非托管与 Microsoft 加密 API (CAPI) 兼容的 blob。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>for permission to access a key container when importing a key.</source>
          <target state="translated">导入密钥时访问的密钥容器的权限。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>The parameters for <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 的参数。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>Imports the specified <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSAParameters" /&gt;</ph>.</source>
          <target state="translated">导入指定的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSAParameters" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>The following code example imports key information created from an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSAParameters&gt;</ph> object into an <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object.</source>
          <target state="translated">下面的代码示例从创建的密钥信息导入<ph id="ph1">&lt;xref:System.Security.Cryptography.RSAParameters&gt;</ph>对象插入<ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">无法获取加密服务提供程序 (CSP)。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>The <ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> parameter has missing fields.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> 参数具有丢失字段。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>for permission to import a key.</source>
          <target state="translated">若要导入密钥的权限。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm">
          <source>Gets the name of the key exchange algorithm available with this implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 的这一实现中可用的密钥交换算法的名称。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm">
          <source>The name of the key exchange algorithm if it exists; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果存在密钥交换算法，则为密钥交换算法的名称；否则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm">
          <source>This property indicates the name of the algorithm, not of the type.</source>
          <target state="translated">此属性指示的算法，而不是类型的名称。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm">
          <source>For example, RSA-PKCS1-KeyEx is a key exchange algorithm name.</source>
          <target state="translated">例如，RSA PKCS1 KeyEx 是密钥交换算法名称。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>Gets the size of the current key.</source>
          <target state="translated">获取当前密钥的大小。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>The size of the key in bits.</source>
          <target state="translated">密钥的大小（以位为单位）。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> supports key sizes from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>增量为 8 位支持 384 位至 16384 位的密钥大小，如果你有了 Microsoft Enhanced Cryptographic Provider 安装。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>It supports key sizes from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.</source>
          <target state="translated">如果已安装了 Microsoft Base Cryptographic Provider，它会在增量为 8 位支持 384 位至 512 位的密钥大小。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>Valid key sizes are dependent on the cryptographic service provider (CSP) that is used by the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> instance.</source>
          <target state="translated">有效密钥大小是依赖于由加密服务提供程序 (CSP)<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>Windows CSPs enable key sizes of 384 to 16384 bits for Windows versions prior to <ph id="ph1">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>, and key sizes of 512 to 16384 bits for <ph id="ph2">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>.</source>
          <target state="translated">为以前的 Windows 版本的 384 到 16384 位的 Windows Csp 启用密钥大小<ph id="ph1">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>，和密钥大小为 512 到 16384 位<ph id="ph2">[!INCLUDE[win81](~/includes/win81-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>For more information, see <bpt id="p1">[</bpt>CryptGenKey<ept id="p1">](http://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx)</ept> function in the Windows documentation.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>CryptGenKey<ept id="p1">](http://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx)</ept> Windows 文档中的函数。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class does not allow you to change key sizes using the <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>类不允许你更改使用的密钥大小<ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>Any value written to this property will fail to update the property without error.</source>
          <target state="translated">写入到此属性的任何值将无法更新属性时没有错误。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
          <source>To change the key size, use one of the constructor overloads.</source>
          <target state="translated">若要更改密钥的大小，使用构造函数重载之一。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>Gets or sets a value indicating whether the key should be persisted in the cryptographic service provider (CSP).</source>
          <target state="translated">获取或设置一个值，该值指示是否应在加密服务提供程序 (CSP) 中保留此密钥。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key should be persisted in the CSP; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果应在 CSP 中保留此密钥，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>Use this property to persist a key in a key container.</source>
          <target state="translated">此属性用于将保存在密钥容器的密钥。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A&gt;</ph> property is automatically set to <ph id="ph2">`true`</ph> when you specify a key container name in the <ph id="ph3">&lt;xref:System.Security.Cryptography.CspParameters.KeyContainerName&gt;</ph> field of a <ph id="ph4">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object and use it to initialize an <ph id="ph5">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object by calling one of the constructors with a <ph id="ph6">`parameters`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A&gt;</ph>属性自动设置为<ph id="ph2">`true`</ph>时指定密钥容器名称中的<ph id="ph3">&lt;xref:System.Security.Cryptography.CspParameters.KeyContainerName&gt;</ph>字段<ph id="ph4">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph>对象，并使用它来初始化<ph id="ph5">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>对象通过调用带构造函数之一<ph id="ph6">`parameters`</ph>参数。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A&gt;</ph> property has no effect if the <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object is created with a <ph id="ph3">`null`</ph> key container name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A&gt;</ph>属性不起作用如果<ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>对象创建与<ph id="ph3">`null`</ph>密钥容器名称。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object and persists the key to a key container.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>对象，并将密钥保存到密钥容器。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>for permission to delete a key.</source>
          <target state="translated">若要删除某一项的权限。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>for permission to create a key.</source>
          <target state="translated">若要创建密钥的权限。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> object contains only a public key.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> 对象是否仅包含公钥。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> object contains only a public key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /&gt;</ph> 对象仅包含公钥，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class can be initialized either with a public key only or with both a public and private key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>类可以是初始化或者使用唯一的公共密钥或同时使用公钥和私钥。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly%2A&gt;</ph> property to determine whether the current instance contains only a public key or both a public and private key.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly%2A&gt;</ph>属性来确定当前实例是否包含只是公钥或公钥和私钥密钥。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm">
          <source>Gets the name of the signature algorithm available with this implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 的这一实现中可用的签名算法的名称。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm">
          <source>The name of the signature algorithm.</source>
          <target state="translated">签名算法的名称。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm">
          <source>This property is used in XML digital signature classes to indicate the algorithm URI.</source>
          <target state="translated">此属性在 XML 数字签名类中使用，以指示 URI 的算法。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm">
          <source>In this implementation, this property always returns <ph id="ph1">http://www.w3.org/2000/09/xmldsig#rsa-sha1</ph>.</source>
          <target state="translated">在此实现中，该属性始终返回 <ph id="ph1">http://www.w3.org/2000/09/xmldsig#rsa-sha1</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Computes the hash value of the specified data and signs it.</source>
          <target state="translated">计算指定数据的哈希值，并对其进行签名。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>The input data for which to compute the hash.</source>
          <target state="translated">要为其计算哈希的输入数据。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">要用于创建哈希值的哈希算法。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>Computes the hash value of the specified byte array using the specified hash algorithm, and signs the resulting hash value.</source>
          <target state="translated">使用指定的哈希算法计算指定字节数组的哈希值，并对生成的哈希值进行签名。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> signature for the specified data.</source>
          <target state="translated">指定数据的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 签名。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>This method creates a digital signature that is verified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A&gt;</ph> method.</source>
          <target state="translated">此方法创建使用进行验证的数字签名<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>The <ph id="ph1">`halg`</ph> parameter can accept a <ph id="ph2">&lt;xref:System.String&gt;</ph>, a <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>, or a <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`halg`</ph>参数可以接受<ph id="ph2">&lt;xref:System.String&gt;</ph>、 <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>，或<ph id="ph4">&lt;xref:System.Type&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>The following code example signs and verifies data.</source>
          <target state="translated">下面的代码示例签名和验证数据。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="halg" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is not a valid type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="halg" /&gt;</ph> 参数不是有效的类型。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>The input data for which to compute the hash.</source>
          <target state="translated">要为其计算哈希的输入数据。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">要用于创建哈希值的哈希算法。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>Computes the hash value of the specified input stream using the specified hash algorithm, and signs the resulting hash value.</source>
          <target state="translated">使用指定的哈希算法计算指定输入流的哈希值，并对生成的哈希值进行签名。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> signature for the specified data.</source>
          <target state="translated">指定数据的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 签名。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">`halg`</ph> parameter can accept a <ph id="ph2">&lt;xref:System.String&gt;</ph>, a <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>, or a <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`halg`</ph>参数可以接受<ph id="ph2">&lt;xref:System.String&gt;</ph>、 <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>，或<ph id="ph4">&lt;xref:System.Type&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>The following code example signs and verifies data.</source>
          <target state="translated">下面的代码示例签名和验证数据。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="halg" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is not a valid type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="halg" /&gt;</ph> 参数不是有效的类型。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The input data for which to compute the hash.</source>
          <target state="translated">要为其计算哈希的输入数据。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The offset into the array from which to begin using data.</source>
          <target state="translated">数组中的偏移量，从该位置开始使用数据。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The number of bytes in the array to use as data.</source>
          <target state="translated">数组中用作数据的字节数。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">要用于创建哈希值的哈希算法。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>Computes the hash value of a subset of the specified byte array using the specified hash algorithm, and signs the resulting hash value.</source>
          <target state="translated">使用指定的哈希算法计算指定字节数组子集的哈希值，并对生成的哈希值进行签名。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> signature for the specified data.</source>
          <target state="translated">指定数据的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 签名。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>This method creates a digital signature that is verified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A&gt;</ph> method.</source>
          <target state="translated">此方法创建使用进行验证的数字签名<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The <ph id="ph1">`halg`</ph> parameter can accept a <ph id="ph2">&lt;xref:System.String&gt;</ph>, a <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>, or a <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`halg`</ph>参数可以接受<ph id="ph2">&lt;xref:System.String&gt;</ph>、 <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>，或<ph id="ph4">&lt;xref:System.Type&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The string value can be one of the following:</source>
          <target state="translated">字符串值可以是以下项之一：</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The object identifier (OID) friendly name of the hash algorithm to use, either a name registered in the crypto config file or one in the Crypto API OID table.</source>
          <target state="translated">对象标识符 (OID) 友好名称的要使用的哈希算法，在加密配置文件或一个加密 API OID 表中注册的名称。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The OID value.</source>
          <target state="translated">OID 值。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The OID must be one recognized by the Crypto API.</source>
          <target state="translated">OID 必须是识别的加密 API 之一。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>For example, you could use SignData(new byte[5], "1.3.14.3.2.26") or SignData(new byte[5], "sha1"), or SignData(new byte[5], "SHA1").</source>
          <target state="translated">例如，你可以使用 SignData （新字节 [5]，"1.3.14.3.2.26"） 或 SignData （新字节 [5]，"sha1"） 或 SignData （新字节 [5]，"SHA1"）。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The following code example signs and verifies data.</source>
          <target state="translated">下面的代码示例签名和验证数据。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="halg" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is not a valid type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="halg" /&gt;</ph> 参数不是有效的类型。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Computes the signature for the specified hash value by encrypting it with the private key.</source>
          <target state="translated">计算指定的哈希值的签名，方法是将其与私钥一起加密。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The hash value of the data to be signed.</source>
          <target state="translated">待签名数据的哈希值。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The hash algorithm identifier (OID) used to create the hash value of the data.</source>
          <target state="translated">用于创建数据哈希值的哈希算法标识符 (OID)。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>Computes the signature for the specified hash value by encrypting it with the private key.</source>
          <target state="translated">计算指定的哈希值的签名，方法是将其与私钥一起加密。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> signature for the specified hash value.</source>
          <target state="translated">指定哈希值的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 签名。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>This method creates a digital signature that is verified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A&gt;</ph> method.</source>
          <target state="translated">此方法创建使用进行验证的数字签名<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The valid hash algorithms are <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Cryptography.MD5&gt;</ph>.</source>
          <target state="translated">有效的哈希算法是<ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph>和<ph id="ph2">&lt;xref:System.Security.Cryptography.MD5&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The algorithm identifier can be derived from the hash name by using the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A&gt;</ph> method.</source>
          <target state="translated">算法标识符可以通过使用派生自的哈希名称<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The following code example encrypts some data, creates a hash of the encrypted data, and then signs hash with a digital signature.</source>
          <target state="translated">下面的代码示例对某些数据进行加密、 创建加密的数据的哈希，然后签名与数字签名的哈希。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The <ph id="ph1">&lt;paramref name="rgbHash" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rgbHash" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">无法获取加密服务提供程序 (CSP)。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>There is no private key.</source>
          <target state="translated">不存在私钥。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>for permission to sign a file using the key.</source>
          <target state="translated">表示对使用密钥文件进行签名的权限。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash value of the data to be signed.</source>
          <target state="translated">待签名数据的哈希值。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash algorithm name used to create the hash value of the data.</source>
          <target state="translated">要用于创建数据哈希值的哈希算法名称。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The padding.</source>
          <target state="translated">填充。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>Computes the signature for the specified hash value by encrypting it with the private key using the specified padding.</source>
          <target state="translated">计算指定的哈希值的签名，方法是使用指定填充将其与私钥一起加密。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> signature for the specified hash value.</source>
          <target state="translated">指定哈希值的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 签名。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> does not equal <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> 不等于 <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
          <source>Gets or sets a value indicating whether the key should be persisted in the computer's key store instead of the user profile store.</source>
          <target state="translated">获取或设置一个值，该值指示是否应在计算机的密钥存储而不是用户配置文件存储中保留密钥。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key should be persisted in the computer key store; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果应在计算机密钥存储中保留密钥，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
          <source>Setting this property to <ph id="ph1">`true`</ph> is equivalent to passing the <ph id="ph2">&lt;xref:System.Security.Cryptography.CspProviderFlags.UseMachineKeyStore&gt;</ph> flag to a <ph id="ph3">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object.</source>
          <target state="translated">此属性设置为<ph id="ph1">`true`</ph>等效于传递<ph id="ph2">&lt;xref:System.Security.Cryptography.CspProviderFlags.UseMachineKeyStore&gt;</ph>标志切换为<ph id="ph3">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> property applies to all code in the current application domain, whereas the <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object applies only to classes that explicitly reference it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph>属性应用于当前的应用程序域中中的所有代码，而<ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph>对象仅适用于显式引用它的类。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
          <source>These settings are useful when impersonating or running under an account whose user profile is not loaded.</source>
          <target state="translated">这些设置可模拟或未加载其用户配置文件的帐户下运行时。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
          <source>Setting <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> affects the key store location only if <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> is initialized with no parameters.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph>影响密钥存储区位置才<ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>初始化不带任何参数。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> object and sets the static <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> property to use the machine key store instead of the user profile key store.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>对象并设置静态<ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph>属性，以使用计算机密钥存储而不是用户配置文件的密钥存储。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Verifies that a digital signature is valid.</source>
          <target state="translated">验证数字签名有效。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The data that was signed.</source>
          <target state="translated">已签名的数据。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The name of the hash algorithm used to create the hash value of the data.</source>
          <target state="translated">用于创建数据哈希值的哈希算法的名称。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The signature data to be verified.</source>
          <target state="translated">要验证的签名数据。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the hash value of the provided data.</source>
          <target state="translated">通过使用提供的公钥计算签名中的哈希值，然后将其与提供的数据的哈希值进行比较，从而验证数字签名是否有效。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果签名有效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>This method verifies the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> digital signature produced by the <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A&gt;</ph> method.</source>
          <target state="translated">此方法验证<ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph>数字签名由<ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The signature is verified by obtaining the hash value from the signature using the public key it was signed with, and comparing that value to the hash value of the provided data.</source>
          <target state="translated">通过从它签名时使用，使用的公钥的签名中获取的哈希值验证的签名并将该值与提供的数据的哈希值进行比较。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The <ph id="ph1">`halg`</ph> parameter can accept a <ph id="ph2">&lt;xref:System.String&gt;</ph>, a <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>, or a <ph id="ph4">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`halg`</ph>参数可以接受<ph id="ph2">&lt;xref:System.String&gt;</ph>、 <ph id="ph3">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>，或<ph id="ph4">&lt;xref:System.Type&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A&gt;</ph> method to verify a signature.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A&gt;</ph>方法来验证签名。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A&gt;</ph> method.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="halg" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="halg" /&gt;</ph> parameter is not a valid type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="halg" /&gt;</ph> 参数不是有效的类型。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSACryptoServiceProvider">
          <source>Verifies that a digital signature is valid.</source>
          <target state="translated">验证数字签名有效。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The hash value of the signed data.</source>
          <target state="translated">签名数据中的哈希值。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The hash algorithm identifier (OID) used to create the hash value of the data.</source>
          <target state="translated">用于创建数据哈希值的哈希算法标识符 (OID)。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The signature data to be verified.</source>
          <target state="translated">要验证的签名数据。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the provided hash value.</source>
          <target state="translated">通过使用提供的公钥计算签名中的哈希值，然后将其与提供的哈希值进行比较来验证数字签名是否有效。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果签名有效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>This method verifies the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> digital signature produced by the <ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A&gt;</ph> method.</source>
          <target state="translated">此方法验证<ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph>数字签名由<ph id="ph2">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The signature is verified by obtaining the hash value from the signature using the public key it was signed with, and comparing that value to the hash value of the provided data.</source>
          <target state="translated">通过从它签名时使用，使用的公钥的签名中获取的哈希值验证的签名并将该值与提供的数据的哈希值进行比较。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The valid hash algorithms are <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Cryptography.MD5&gt;</ph>.</source>
          <target state="translated">有效的哈希算法是<ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph>和<ph id="ph2">&lt;xref:System.Security.Cryptography.MD5&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The algorithm identifier can be derived from the hash name by using the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A&gt;</ph> method.</source>
          <target state="translated">算法标识符可以通过使用派生自的哈希名称<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A&gt;</ph> method to verify a signature.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A&gt;</ph>方法来验证签名。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A&gt;</ph> method.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="rgbHash" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rgbHash" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="rgbSignature" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rgbSignature" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">无法获取加密服务提供程序 (CSP)。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The signature cannot be verified.</source>
          <target state="translated">无法验证签名。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash value of the signed data.</source>
          <target state="translated">签名数据中的哈希值。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The signature data to be verified.</source>
          <target state="translated">要验证的签名数据。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash algorithm name used to create the hash value.</source>
          <target state="translated">用于创建哈希值的哈希算法。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The padding.</source>
          <target state="translated">填充。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>Verifies that a digital signature is valid by determining the hash value in the signature using the specified hashing algorithm and padding, and comparing it to the provided hash value.</source>
          <target state="translated">通过使用指定的哈希算法和填充模式确定签名中的哈希值，并将其与所提供的哈希值进行比较，以此验证数字签名是否有效。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果签名有效，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> does not equal <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> 不等于 <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>