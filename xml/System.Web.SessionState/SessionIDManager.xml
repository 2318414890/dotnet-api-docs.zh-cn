<Type Name="SessionIDManager" FullName="System.Web.SessionState.SessionIDManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="177162867ed7abc4eb54b7a8045bc10d76439cec" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37542629" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionIDManager : System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionIDManager extends System.Object implements class System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionIDManager" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionIDManager&#xA;Implements ISessionIDManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionIDManager : System::Web::SessionState::ISessionIDManager" />
  <TypeSignature Language="F#" Value="type SessionIDManager = class&#xA;    interface ISessionIDManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.SessionState.ISessionIDManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Manages unique identifiers for ASP.NET session state.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionIDManager>类是一个 HTTP 模块，管理用于 ASP.NET 会话状态的唯一会话标识符。 ASP.NET 会话的唯一标识符是<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>属性，可以从访问<xref:System.Web.HttpContext.Session%2A>属性与当前<xref:System.Web.HttpContext>或<xref:System.Web.UI.Page>。 ASP.NET 会话标识符是随机生成的编号，编码为 24 个字符字符串从小写字符组成到 z 和 0 到 5 的数字。  
  
 默认情况下，<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值发送包含 ASP.NET 应用程序的每个请求的 cookie 中。 包含的 cookie 的名称<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值默认情况下是 ASP.NET_SessionId。 您可以通过设置配置不同的 cookie 名称`cookieName`的属性[sessionState 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)到所需的 cookie 名称。  
  
 如果你想要禁用使用 ASP.NET 应用程序中的 cookie 并仍进行的会话状态使用，您可以配置你的应用程序通过设置 URL 而不是一个 cookie 中存储的会话标识符`cookieless`属性的`sessionState`元素`true`你的应用程序的 Web.config 文件中。 有关更多信息，请参见 <xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A> 属性。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>可以使用你自己的自定义会话标识符替换 ASP.NET 会话标识符，通过创建继承的类<see cref="T:System.Web.SessionState.SessionIDManager" />重写<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />和<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />具有自己的自定义实现的方法。有关重写的示例<see cref="T:System.Web.SessionState.SessionIDManager" />类并实现这些方法，请参见为提供的示例<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />方法。您可以替换整个<see cref="T:System.Web.SessionState.SessionIDManager" />通过创建实现的类的自定义的会话 ID 管理器与<see cref="T:System.Web.SessionState.ISessionIDManager" />接口。如果自定义的会话 ID 管理器支持无 cookie 会话标识符，您需要实现用于发送和检索 URL，如 ISAPI 筛选器中的会话标识符的解决方案。有关创建自定义的会话 ID 管理器的详细信息，请参阅<see cref="T:System.Web.SessionState.ISessionIDManager" />。</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionIDManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionIDManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates an instance of the <see cref="T:System.Web.SessionState.SessionIDManager" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数不是应用程序代码中调用。  
  
 ASP.NET 将调用此构造函数可创建的实例<xref:System.Web.SessionState.SessionIDManager>类。 后调用的构造函数，ASP.NET 将调用<xref:System.Web.SessionState.SessionIDManager.Initialize%2A>方法来初始化新<xref:System.Web.SessionState.SessionIDManager>对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSessionID">
      <MemberSignature Language="C#" Value="public virtual string CreateSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionID : System.Web.HttpContext -&gt; string&#xA;override this.CreateSessionID : System.Web.HttpContext -&gt; string" Usage="sessionIDManager.CreateSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <summary>Creates a unique session identifier for the session.</summary>
        <returns>A unique session identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不是应用程序代码中调用。  
  
 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法返回的是随机生成的编号，编码为 24 个字符字符串从小写字符组成的唯一会话标识符到 z 和 0 到 5 的数字。  
  
   
  
## Examples  
 下面的代码示例显示了继承的类<xref:System.Web.SessionState.SessionIDManager>类，并重写<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>并<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法，提供并验证方法<xref:System.Guid>作为<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>。  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/GuidSessionIDModule.cs#7)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/GuidSessionIDModule.vb#7)]  
  
 若要使用此示例中演示的自定义类，可配置的 sessionIDManagerType 属性[sessionState 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)元素，如下面的示例中所示。  
  
```  
<sessionState  
  Mode="InProc"  
  stateConnectionString="tcp=127.0.0.1:42424"  
  stateNetworkTimeout="10"  
  sqlConnectionString="data source=127.0.0.1;Integrated Security=SSPI"  
  sqlCommandTimeout="30"  
  customProvider=""  
  cookieless="false"  
  regenerateExpiredSessionId="false"  
  timeout="20"  
  sessionIDManagerType="Your.ID.Manager.Type,  
    CustomAssemblyNameInBinFolder"  
/>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>你可以提供要创建继承的类的 ASP.NET 会话状态由自定义会话标识符<see cref="T:System.Web.SessionState.SessionIDManager" />重写<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />和<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />具有自己的自定义实现的方法。如果你的自定义会话 ID 不满足强制执行的默认实现的字符约束<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />方法，应重写<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />方法以提供自定义会话标识符的验证。在这种情况下，<see cref="T:System.Web.SessionState.SessionIDManager" />类可确保你的自定义会话标识符是 URL 的 HTTP 响应中编码和解码从 HTTP 请求使用的 URL<see cref="M:System.Web.SessionState.SessionIDManager.Encode(System.String)" />和<see cref="M:System.Web.SessionState.SessionIDManager.Decode(System.String)" />方法，分别。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public virtual string Decode (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Decode(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Decode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Decode (id As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Decode(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Decode : string -&gt; string&#xA;override this.Decode : string -&gt; string" Usage="sessionIDManager.Decode id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The session identifier to decode.</param>
        <summary>Decodes a URL-encoded session identifier obtained from a cookie or the URL.</summary>
        <returns>The decoded session identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不是应用程序代码中调用。  
  
 此方法在内部使用<xref:System.Web.SessionState.SessionIDManager>类进行解码自定义<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>创建的类继承的值<xref:System.Web.SessionState.SessionIDManager>类并重写<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>和<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法。 若要确保自定义的会话标识符值的保真度检索来自 HTTP 请求通过<xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>方法，<xref:System.Web.SessionState.SessionIDManager>解码的自定义值使用<xref:System.Web.HttpUtility.UrlDecode%2A>方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>有关继承的类的示例<see cref="T:System.Web.SessionState.SessionIDManager" />类，并重写<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />并<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />方法，请参阅为提供的示例<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />方法。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual string Encode (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Encode(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Encode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Encode (id As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Encode(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Encode : string -&gt; string&#xA;override this.Encode : string -&gt; string" Usage="sessionIDManager.Encode id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The session identifier to encode.</param>
        <summary>Encodes the session identifier for saving to either a cookie or the URL.</summary>
        <returns>The encoded session identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不是应用程序代码中调用。  
  
 此方法在内部使用<xref:System.Web.SessionState.SessionIDManager>类进行编码自定义<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>创建的类继承的值<xref:System.Web.SessionState.SessionIDManager>类并重写<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>和<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法。 若要确保存储在通过 HTTP 响应中的自定义的会话标识符值的保真度<xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>方法，<xref:System.Web.SessionState.SessionIDManager>进行编码的自定义值使用<xref:System.Web.HttpUtility.UrlEncode%2A>方法。  
  
 有关继承的类的示例<xref:System.Web.SessionState.SessionIDManager>类，并重写<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>并<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法，请参阅<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSessionID">
      <MemberSignature Language="C#" Value="public string GetSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetSessionID : System.Web.HttpContext -&gt; string&#xA;override this.GetSessionID : System.Web.HttpContext -&gt; string" Usage="sessionIDManager.GetSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <summary>Gets the session-identifier value from the current Web request.</summary>
        <returns>The current <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不是应用程序代码中调用。  
  
 <xref:System.Web.SessionState.SessionStateModule>调用<xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>方法期间<xref:System.Web.HttpApplication.AcquireRequestState>事件，以检索<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>从当前<xref:System.Web.HttpRequest>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The length of the session-identifier value retrieved from the HTTP request exceeds the <see cref="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="sessionIDManager.Initialize " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.Initialize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initializes the <see cref="T:System.Web.SessionState.SessionIDManager" /> object with information from configuration files.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionIDManager.Initialize%2A>方法将从会话配置数据读入[sessionState 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)的配置文件的配置元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InitializeRequest(class System.Web.HttpContext context, bool suppressAutoDetectRedirect, [out] bool&amp; supportSessionIDReissue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InitializeRequest (context As HttpContext, suppressAutoDetectRedirect As Boolean, ByRef supportSessionIDReissue As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool InitializeRequest(System::Web::HttpContext ^ context, bool suppressAutoDetectRedirect, [Runtime::InteropServices::Out] bool % supportSessionIDReissue);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext * bool *  -&gt; bool&#xA;override this.InitializeRequest : System.Web.HttpContext * bool *  -&gt; bool" Usage="sessionIDManager.InitializeRequest (context, suppressAutoDetectRedirect, supportSessionIDReissue)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="suppressAutoDetectRedirect" Type="System.Boolean" />
        <Parameter Name="supportSessionIDReissue" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:System.Web.HttpContext" /> object that contains information about the current request.</param>
        <param name="suppressAutoDetectRedirect">
          <see langword="true" /> to redirect to determine cookie support; otherwise, <see langword="false" /> to suppress automatic redirection to determine cookie support.</param>
        <param name="supportSessionIDReissue">When this method returns, contains a Boolean that indicates whether the <see cref="T:System.Web.SessionState.SessionIDManager" /> object supports issuing new session IDs when the original ID is out of date. This parameter is passed uninitialized.</param>
        <summary>Performs per-request initialization of the <see cref="T:System.Web.SessionState.SessionIDManager" /> object.</summary>
        <returns>
          <see langword="true" /> to indicate the <see cref="T:System.Web.SessionState.SessionIDManager" /> object has done a redirect to determine cookie support; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当`cookieless`的属性`sessionState`元素设置为`AutoDetect`，则<xref:System.Web.SessionState.SessionIDManager>对象将重定向到相同的路径以确定连接的浏览器是否支持 cookie。 如果`suppressAutoDetectRedirect`参数是`false`，则服务器将执行这种重定向。  
  
 `supportSessionIDReissue`将返回参数`false`如果请求使用 cookie 的会话标识。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSessionID">
      <MemberSignature Language="C#" Value="public void RemoveSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSessionID (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSessionID : System.Web.HttpContext -&gt; unit&#xA;override this.RemoveSessionID : System.Web.HttpContext -&gt; unit" Usage="sessionIDManager.RemoveSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <summary>Deletes the session-identifier cookie from the HTTP response.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不是应用程序代码中调用。  
  
 <xref:System.Web.SessionState.SessionStateModule>调用<xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A>方法期间<xref:System.Web.HttpApplication.ReleaseRequestState>事件，以删除中的会话标识符<xref:System.Web.HttpResponse.Cookies%2A>的集合<xref:System.Web.HttpResponse>如果新的会话已创建但未使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveSessionID">
      <MemberSignature Language="C#" Value="public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveSessionID(class System.Web.HttpContext context, string id, [out] bool&amp; redirected, [out] bool&amp; cookieAdded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSessionID (context As HttpContext, id As String, ByRef redirected As Boolean, ByRef cookieAdded As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveSessionID(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % redirected, [Runtime::InteropServices::Out] bool % cookieAdded);" />
      <MemberSignature Language="F#" Value="abstract member SaveSessionID : System.Web.HttpContext * string *  *  -&gt; unit&#xA;override this.SaveSessionID : System.Web.HttpContext * string *  *  -&gt; unit" Usage="sessionIDManager.SaveSessionID (context, id, redirected, cookieAdded)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="redirected" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="cookieAdded" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <param name="id">The session identifier.</param>
        <param name="redirected">When this method returns, contains a Boolean value that is <see langword="true" /> if the response is redirected to the current URL with the session identifier added to the URL; otherwise, <see langword="false" />.</param>
        <param name="cookieAdded">When this method returns, contains a Boolean value that is <see langword="true" /> if a cookie has been added to the HTTP response; otherwise, <see langword="false" />.</param>
        <summary>Saves a newly created session identifier to the HTTP response.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不是应用程序代码中调用。  
  
 <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>调用方法<xref:System.Web.SessionState.SessionStateModule>期间对象<xref:System.Web.HttpApplication.AcquireRequestState>事件。 <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>方法会将 URL （当使用无 cookie 会话状态） 中或在不过期的会话 cookie 中存储的会话标识符。  
  
 默认情况下<xref:System.Web.SessionState.SessionIDManager>放置一个不过期的会话 cookie 的唯一会话标识符并设置`cookieAdded`参数`true`。  
  
 无 cookie 会话状态<xref:System.Web.SessionState.SessionIDManager>对象插入到当前 URL 的唯一会话标识符，将浏览器重定向到新的 URL，包括会话标识符，然后设置`redirected`参数`true`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The response has already been sent.  -or-  The session ID passed to this method failed validation.</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionIDMaxLength">
      <MemberSignature Language="C#" Value="public static int SessionIDMaxLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 SessionIDMaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SessionIDMaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int SessionIDMaxLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionIDMaxLength : int" Usage="System.Web.SessionState.SessionIDManager.SessionIDMaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum length of a valid session identifier.</summary>
        <value>有效的会话标识符的最大长度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 会话标识符的最大长度为 80 个字符。  
  
 而创建的会话标识符<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法为 24 个字符长，允许的会话标识符的最大长度<xref:System.Web.SessionState.SessionIDManager>类为 80 个字符。 这一点尤其重要，如果实现一个自定义<xref:System.Web.SessionState.SessionIDManager>。 <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>方法，检索从当前会话标识符值<xref:System.Web.HttpRequest>，可确保值不能超过<xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength%2A>值和会话标识符是一个包含仅小写字符的 24 个字符字符串到 z 和数字 0 到 5 通过调用<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法。 如果实现一个自定义<xref:System.Web.SessionState.SessionIDManager>继承的类<xref:System.Web.SessionState.SessionIDManager>类，并重写<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法，但不是<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法，你的自定义的会话标识符值必须满足更高版本的约束。 有关重写的示例<xref:System.Web.SessionState.SessionIDManager>类并实现这些方法，请参见为提供的示例<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual bool Validate (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Validate(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Validate(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Validate : string -&gt; bool&#xA;override this.Validate : string -&gt; bool" Usage="sessionIDManager.Validate id" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.Validate(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The session identifier to validate.</param>
        <summary>Gets a value indicating whether a session identifier is valid.</summary>
        <returns>
          <see langword="true" /> if the session identifier is valid; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不是应用程序代码中调用。  
  
 <xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法验证所提供`id`是 24 个字符的字符串从小写字符组成到 z 和数字 0 到 5 并且的最大长度的会话 ID 不超过 80 个字符。  
  
 <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>方法调用<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法时检索从 HTTP 请求，以确保提供的会话标识符的格式正确的会话标识符。  
  
   
  
## Examples  
 下面的代码示例显示了继承的类<xref:System.Web.SessionState.SessionIDManager>类，并重写<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>并<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法，提供并验证方法<xref:System.Guid>作为<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>。  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/GuidSessionIDModule.cs#7)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/GuidSessionIDModule.vb#7)]  
  
 若要使用此示例中演示的自定义类，将为`SessionID`Web.config 文件中具有自定义类，如下面的示例中所示的 HTTP 模块。  
  
```  
<httpModules>  
  <remove name="SessionID" />  
  <add name="SessionID"  
       type="Samples.AspNet.Session.GuidSessionIDManager" />  
</httpModules>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>你可以提供要创建继承的类的 ASP.NET 会话状态由自定义会话标识符<see cref="T:System.Web.SessionState.SessionIDManager" />重写<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />和<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />与自定义实现的方法。甚至当你创建的自定义会话标识符，会话 ID 是限制为 80 个字符由<see cref="T:System.Web.SessionState.SessionIDManager" />类。</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>