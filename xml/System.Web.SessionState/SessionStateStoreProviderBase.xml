<Type Name="SessionStateStoreProviderBase" FullName="System.Web.SessionState.SessionStateStoreProviderBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb76d941854b8efa56af7434c73ffd2d4e7d6500" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550961" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SessionStateStoreProviderBase extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateStoreProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SessionStateStoreProviderBase&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateStoreProviderBase abstract : System::Configuration::Provider::ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定义数据存储区的会话状态提供程序所需的成员。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 会话状态读取和写入 from 和 to 数据存储区中使用会话状态的会话数据存储提供程序。 会话状态存储提供程序是继承的类<xref:System.Web.SessionState.SessionStateStoreProviderBase>抽象类，并重写其成员实现特定于数据存储。 会话状态存储提供程序由<xref:System.Web.SessionState.SessionStateModule>期间 ASP.NET 页与存储的数据存储进行通信的处理和检索的会话变量和等的超时值的相关的会话信息的类。  
  
 每个单独存储每个 ASP.NET 应用程序中的会话数据<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>属性。 ASP.NET 应用程序不共享会话数据。  
  
 你可以指定自定义<xref:System.Web.SessionState.SessionStateStoreProviderBase>通过设置 ASP.NET 应用程序的实现`mode`属性`sessionState`到的配置元素<xref:System.Web.SessionState.SessionStateMode.Custom>和`customProvider`属性的自定义提供程序，名称为本主题的示例所示。  
  
## <a name="locking-session-store-data"></a>锁定会话存储数据  
 由于 ASP.NET 应用程序是多线程，以支持对并发请求的响应，所以有可能并发请求可能会尝试访问相同的会话信息。 请考虑在所有框架集的多个帧访问同一个应用程序的位置的方案。 可以同时在不同线程在 Web 服务器上执行个框架集中每个帧的独立请求。 如果每个帧源的 ASP.NET 页访问会话状态变量，则会有多个线程同时访问的会话存储。  
  
 若要避免数据冲突，在会话存储和意外的会话状态行为<xref:System.Web.SessionState.SessionStateModule>和<xref:System.Web.SessionState.SessionStateStoreProviderBase>类包含了特定会话的持续时间以独占方式锁定会话存储项的锁定功能ASP.NET 页的执行。 请注意，即使<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性标记为`ReadOnly`，在同一应用程序的其他 ASP.NET 页可能能够将写入到的会话存储中，以便从应用商店的数据可能仍最终等待只读会话的请求锁定数据释放。  
  
 对会话存储数据请求，对的调用中的开头设置锁定<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法。 完成请求后，在调用期间释放锁<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>方法。  
  
 如果<xref:System.Web.SessionState.SessionStateModule>对象在调用过程中遇到锁定的会话数据<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>或<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>方法，它将重新请求的会话数据隔半秒直到释放锁或的时间，会话数据已被锁定超过的值<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>属性。 如果超出超时执行时间，则<xref:System.Web.SessionState.SessionStateModule>对象将调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法以释放会话存储数据并在该时间请求会话存储数据。  
  
 因为锁定会话存储数据可能会被释放通过调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法对的调用之前在单独线程上<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>当前响应的方法，无法尝试设置和发布具有的会话状态存储数据已发布并由另一个会话修改。 若要避免此情况下，<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>和<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法返回的锁定标识符。 此锁标识符必须包含每个请求以修改锁定的会话存储数据。 会话存储仅当数据存储区中的锁定标识符匹配由提供的锁定标识符时修改数据<xref:System.Web.SessionState.SessionStateModule>。  
  
## <a name="deleting-expired-session-store-data"></a>删除过期的会话存储数据  
 当<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>针对特定会话调用方法，该会话的数据将删除从数据存储区使用<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>方法; 否则，数据将保留在服务器今后的请求的会话数据存储区为会话。 这就需要通过<xref:System.Web.SessionState.SessionStateStoreProviderBase>实现中删除过期的会话数据。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 下面的代码示例演示的 ASP.NET 应用程序配置为使用自定义会话状态存储提供程序的 Web.config 文件。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="OdbcSessionServices" connectionString="DSN=SessionState;" />  
  </connectionStrings>  
  
  <system.web>  
    <sessionState   
      mode="Custom"  
      customProvider="OdbcSessionProvider">  
      <providers>  
        <add name="OdbcSessionProvider"  
             type="Samples.AspNet.Session.OdbcSessionStateStore"  
             connectionStringName="OdbcSessionServices" />  
      </providers>  
    </sessionState>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionStateStoreProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionStateStoreProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不需要实现继承的类的构造函数<xref:System.Web.SessionState.SessionStateStoreProviderBase>抽象类。 值初始化<xref:System.Web.SessionState.SessionStateStoreProviderBase>实现传递给<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>方法实现。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNewStoreData">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData CreateNewStoreData(class System.Web.HttpContext context, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateNewStoreData (context As HttpContext, timeout As Integer) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ CreateNewStoreData(System::Web::HttpContext ^ context, int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="timeout">新 <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> 的会话状态 <see cref="T:System.Web.SessionState.SessionStateStoreData" /> 值。</param>
        <summary>创建要用于当前请求的新 <see cref="T:System.Web.SessionState.SessionStateStoreData" /> 对象。</summary>
        <returns>当前请求的新 <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>ASP.NET 页中，请求的开始处方法期间<xref:System.Web.HttpApplication.AcquireRequestState>事件。 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>如果调用方法：  
  
-   传入的请求具有没有会话 ID，或  
  
-   传入的请求具有一个会话 ID，但在数据存储中找不到该会话。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>方法创建一个新<xref:System.Web.SessionState.SessionStateStoreData>具有一个空对象<xref:System.Web.SessionState.ISessionStateItemCollection>对象，<xref:System.Web.HttpStaticObjectsCollection>集合，并且指定`timeout`值。 <xref:System.Web.HttpStaticObjectsCollection>可以使用检索的 ASP.NET 应用程序的集合<xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>方法。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUninitializedItem">
      <MemberSignature Language="C#" Value="public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateUninitializedItem(class System.Web.HttpContext context, string id, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateUninitializedItem (context As HttpContext, id As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateUninitializedItem(System::Web::HttpContext ^ context, System::String ^ id, int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">当前请求的 <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</param>
        <param name="timeout">当前请求的会话 <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" />。</param>
        <summary>将新的会话状态项添加到数据存储区中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>方法用于会话时`cookieless`和`regenerateExpiredSessionId`属性都是`true`。 具有`regenerateExpiredSessionId attribute`设置为`true`导致<xref:System.Web.SessionState.SessionStateModule>要生成一个新对象<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值时过期<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>遇到值。  
  
 生成一个新的过程<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值需要将浏览器重定向到包含新生成的 URL<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值。 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>在包含过期的初始请求过程中调用方法<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值。 后<xref:System.Web.SessionState.SessionStateModule>对象获取一个新<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值来替换过期的值时，它调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>方法将未初始化的项添加到会话状态数据存储。 然后，将浏览器重定向到包含新生成的 URL<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值。 会话数据存储区中未初始化的项是否存在可确保包括新生成的重定向的请求<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值不导致了错误的请求的过期的会话，而，相反，视为新的会话。  
  
 会话数据存储区中的未经初始化即的项是与新生成相关联<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值和只包含默认值，包括过期日期和时间，以及一个值，对应于`actionFlags`参数<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>和<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法。 会话状态存储区中未初始化的条目应包含`actionFlags`值等于<xref:System.Web.SessionState.SessionStateActions.InitializeItem>枚举值。 此值传递给<xref:System.Web.SessionState.SessionStateModule>对象<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>和<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法，并通知<xref:System.Web.SessionState.SessionStateModule>当前会话是新但的对象未初始化的会话。 <xref:System.Web.SessionState.SessionStateModule>对象然后会初始化该新会话，并引发`Session_OnStart`事件。  
  
 有关无 cookie 会话的详细信息，请参阅<xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>属性。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放由 <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> 实现使用的所有资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=nameWithType>方法调用时<xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=nameWithType>方法执行在应用程序域关闭。 继承的类<xref:System.Web.SessionState.SessionStateStoreProviderBase>类可以使用此方法以释放不再使用中的任何资源。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public abstract void EndRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndRequest(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>在请求结束时由 <see cref="T:System.Web.SessionState.SessionStateModule" /> 对象调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A>ASP.NET 页中，请求的末尾处方法期间<xref:System.Web.HttpApplication.EndRequest>事件。 你可以使用<xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A>方法来执行任何所需的会话状态存储提供程序的每个请求清理。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItem(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItem (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItem(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan&amp;" RefType="out" />
        <Parameter Name="lockId" Type="System.Object&amp;" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">当前请求的 <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</param>
        <param name="locked">当此方法返回时，如果请求的会话项在会话数据存储区被锁定，请包含一个设置为 <see langword="true" /> 的布尔值；否则请包含一个设置为 <see langword="false" /> 的布尔值。</param>
        <param name="lockAge">当此方法返回时，请包含一个设置为会话数据存储区中的项锁定时间的 <see cref="T:System.TimeSpan" /> 对象。</param>
        <param name="lockId">当此方法返回时，请包含一个设置为当前请求的锁定标识符的对象。 有关锁定标识符的详细信息，请参见 <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> 类摘要中的“锁定会话存储区数据”。</param>
        <param name="actions">当此方法返回时，请包含 <see cref="T:System.Web.SessionState.SessionStateActions" /> 值之一，指示当前会话是否为未初始化的无 Cookie 会话。</param>
        <summary>从会话数据存储区中返回只读会话状态数据。</summary>
        <returns>使用会话数据存储区中的会话值和信息填充的 <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>开头的请求，方法期间<xref:System.Web.HttpApplication.AcquireRequestState>事件，当<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性设置为`ReadOnly`。 如果<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性设置为`true`、<xref:System.Web.SessionState.SessionStateModule>对象改为调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>方法返回<xref:System.Web.SessionState.SessionStateStoreData>对象填充数据存储区中的会话信息和更新会话数据的过期日期。 如果在数据存储中，未不找到任何会话项数据<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>方法设置`locked``out`参数`false`并返回`null`。 这将导致<xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>方法在数据存储区中创建一个新会话项。  
  
 如果会话项在数据存储区中找到数据，但数据被锁定，<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>方法设置`locked``out`参数`true`，设置`lockAge``out`为当前日期和时间减去的日期的参数和锁定此项目时的时间 （其中从存储中检索数据），设置`lockId``out`参数的锁定标识符从数据存储区，并返回检索`null`。 这将导致<xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>后半秒时间间隔，以尝试检索会话项信息的方法。  
  
 如果值的`lockAge``out`参数设置为超过<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>值，则<xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法以清除在会话项数据，然后调用锁定<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>再次方法。  
  
 `actionFlags`使用参数时同时`cookieless`和`regenerateExpiredSessionId`属性都设置为`true`。 `actionFlags`值设置为<xref:System.Web.SessionState.SessionStateActions.InitializeItem>指示会话数据存储区中的项是需要初始化的新会话。 通过调用创建会话数据存储区中的未经初始化即的项<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>方法。 如果会话数据存储区中的项不是未初始化的项，`actionFlags`参数将设置为零。  
  
 支持无 cookie 会话的自定义会话状态存储实施者应设置`actionFlags``out`从当前项的会话数据存储区返回的值的参数。 如果`actionFlags`请求的会话存储的参数值项等于<xref:System.Web.SessionState.SessionStateActions.InitializeItem>枚举值，则<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>方法应将值设置为零后设置数据存储区中`actionFlags``out`参数。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemExclusive">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItemExclusive(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemExclusive (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan&amp;" RefType="out" />
        <Parameter Name="lockId" Type="System.Object&amp;" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">当前请求的 <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</param>
        <param name="locked">当此方法返回时，如果成功获得锁定，请包含一个设置为 <see langword="true" /> 的布尔值；否则请包含一个设置为 <see langword="false" /> 的布尔值。</param>
        <param name="lockAge">当此方法返回时，请包含一个设置为会话数据存储区中的项锁定时间的 <see cref="T:System.TimeSpan" /> 对象。</param>
        <param name="lockId">当此方法返回时，请包含一个设置为当前请求的锁定标识符的对象。 有关锁定标识符的详细信息，请参见 <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> 类摘要中的“锁定会话存储区数据”。</param>
        <param name="actions">当此方法返回时，请包含 <see cref="T:System.Web.SessionState.SessionStateActions" /> 值之一，指示当前会话是否为未初始化的无 Cookie 会话。</param>
        <summary>从会话数据存储区中返回只读会话状态数据。</summary>
        <returns>使用会话数据存储区中的会话值和信息填充的 <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>开头的请求，方法期间<xref:System.Web.HttpApplication.AcquireRequestState>事件，当<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性设置为`true`，这是默认设置。 如果<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性设置为`ReadOnly`、<xref:System.Web.SessionState.SessionStateModule>对象改为调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>方法。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法返回<xref:System.Web.SessionState.SessionStateStoreData>填充从数据存储的会话信息的对象更新所存储的数据的过期日期和请求的持续时间内锁定数据存储的会话项数据。 如果在数据存储中，未不找到任何会话项数据<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法设置`locked``out`参数`false`并返回`null`。 这将导致<xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>方法在数据存储区中创建一个新会话项。 如果会话项在数据存储区中找到数据，但数据被锁定，<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法设置`locked``out`参数`true`，设置`lockAge``out`为当前日期和时间减去的日期的参数和锁定此项目时的时间 （其中从存储中检索数据），设置`lockId``out`参数的锁定标识符从数据存储区，并返回检索`null`。 这将导致<xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>后尝试检索会话项信息并获取数据的锁的半秒间隔的方法。 如果值的`lockAge``out`参数设置为超出<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>值，则<xref:System.Web.SessionState.SessionStateModule>调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法以清除在会话项数据，然后调用锁定<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>再次方法。  
  
 `actionFlags`使用参数时`cookieless`和`regenerateExpiredSessionId`属性都设置为`true`。 `actionFlags`值设置为<xref:System.Web.SessionState.SessionStateActions.InitializeItem>指示会话数据存储区中的项是需要初始化的新会话。 通过调用创建会话数据存储区中的未经初始化即的项<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>方法。 如果会话数据存储区中的项不是未初始化的项，`actionFlags`参数将设置为零。  
  
 支持无 cookie 会话的自定义会话状态存储实施者应设置`actionFlags``out`从当前项的会话数据存储区返回的值的参数。 如果`actionFlags`请求的会话存储的参数值项等于<xref:System.Web.SessionState.SessionStateActions.InitializeItem>枚举值，则<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法应将值设置为零后设置数据存储区中`actionFlags``out`参数。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public abstract void InitializeRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InitializeRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InitializeRequest(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>由 <see cref="T:System.Web.SessionState.SessionStateModule" /> 对象调用，以便进行每次请求初始化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A>方法，然后才能调用任何其他<xref:System.Web.SessionState.SessionStateStoreProviderBase>方法。 你可以使用<xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A>方法来执行任何所需的会话状态存储提供程序的每个请求的初始化。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseItemExclusive(class System.Web.HttpContext context, string id, object lockId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReleaseItemExclusive (context As HttpContext, id As String, lockId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">当前请求的会话标识符。</param>
        <param name="lockId">当前请求的锁定标识符。</param>
        <summary>释放对会话数据存储区中项的锁定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法来更新的到期日期并释放会话数据存储区中的项上的锁。 它在结束时调用的请求期间<xref:System.Web.HttpApplication.ReleaseRequestState>事件，如果会话值未更改。 如果会话值进行了修改，<xref:System.Web.SessionState.SessionStateModule>对象改为调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>方法。  
  
 <xref:System.Web.SessionState.SessionStateModule>对象还将调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法超过会话数据存储区中的项上的锁时<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>值。 有关锁定的详细信息和有关的锁定标识符的详细信息，请参阅"锁定会话存储数据"中<xref:System.Web.SessionState.SessionStateStoreProviderBase>类概述。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法仅从一项中的当前应用程序与匹配提供的会话的会话数据存储中删除锁`id`和`lockId`值。 如果`lockId`与数据存储中的一个不匹配<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法不执行任何操作。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem(class System.Web.HttpContext context, string id, object lockId, class System.Web.SessionState.SessionStateStoreData item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveItem (context As HttpContext, id As String, lockId As Object, item As SessionStateStoreData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveItem(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId, System::Web::SessionState::SessionStateStoreData ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">当前请求的会话标识符。</param>
        <param name="lockId">当前请求的锁定标识符。</param>
        <param name="item">表示将从数据存储区中删除的项的 <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</param>
        <summary>删除会话数据存储区中的项数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>方法末尾的请求期间<xref:System.Web.HttpApplication.ReleaseRequestState>事件，若要从会话数据存储区删除会话选项的数据，如果<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>调用方法。 匹配提供的会话的当前应用程序仅会话数据`id`和`lockId`删除值。 有关锁定的详细信息和有关的锁定标识符的详细信息，请参阅"锁定会话存储数据"中<xref:System.Web.SessionState.SessionStateStoreProviderBase>类概述。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetItemTimeout">
      <MemberSignature Language="C#" Value="public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetItemTimeout(class System.Web.HttpContext context, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetItemTimeout (context As HttpContext, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetItemTimeout(System::Web::HttpContext ^ context, System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">当前请求的会话标识符。</param>
        <summary>更新会话数据存储区中的项的到期日期和时间。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A>方法来更新到当前日期和时间加上该会话的到期日期和会话时间<xref:System.Web.SessionState.HttpSessionState.Timeout%2A>值时任一：  
  
-   <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性是`true`，或  
  
-   请求未引发<xref:System.Web.HttpApplication.AcquireRequestState>和<xref:System.Web.HttpApplication.ReleaseRequestState>由于出错的事件。  
  
 如果请求 ASP.NET 页和<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性设置为`false`、<xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A>仍调用方法以更新的到期日期和时间的会话数据存储区中的数据。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAndReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAndReleaseItemExclusive(class System.Web.HttpContext context, string id, class System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetAndReleaseItemExclusive (context As HttpContext, id As String, item As SessionStateStoreData, lockId As Object, newItem As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetAndReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Web::SessionState::SessionStateStoreData ^ item, System::Object ^ lockId, bool newItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="newItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">当前请求的会话标识符。</param>
        <param name="item">包含要存储的当前会话值的 <see cref="T:System.Web.SessionState.SessionStateStoreData" /> 对象。</param>
        <param name="lockId">当前请求的锁定标识符。</param>
        <param name="newItem">
          如果为 <see langword="true" />，则将会话项标识为新项；如果为 <see langword="false" />，则将会话项标识为现有的项。</param>
        <summary>使用当前请求中的值更新会话状态数据存储区中的会话项信息，并清除对数据的锁定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>方法末尾的请求期间<xref:System.Web.HttpApplication.ReleaseRequestState>事件，将当前会话项信息插入到数据存储或使用当前值，更新数据存储区中的现有会话项信息若要更新的到期时间，该项目，并释放对数据的锁定。 匹配提供的会话的当前应用程序仅会话数据`id`和`lockId`更新值。 锁定的详细信息，请参阅"锁定会话存储区数据"中<xref:System.Web.SessionState.SessionStateStoreProviderBase>类概述。  
  
 如果当前请求的会话值不进行了修改，<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>不调用方法。 相反，<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>调用方法。  
  
 如果<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>已调用方法，<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>不调用方法。 相反，<xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>方法来从数据源删除会话项数据。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemExpireCallback">
      <MemberSignature Language="C#" Value="public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetItemExpireCallback(class System.Web.SessionState.SessionStateItemExpireCallback expireCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SetItemExpireCallback (expireCallback As SessionStateItemExpireCallback) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SetItemExpireCallback(System::Web::SessionState::SessionStateItemExpireCallback ^ expireCallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expireCallback" Type="System.Web.SessionState.SessionStateItemExpireCallback" />
      </Parameters>
      <Docs>
        <param name="expireCallback">对 Global.asax 文件中定义的 <see langword="Session_OnEnd" /> 事件的 <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> 委托。</param>
        <summary>设置对 Global.asax 文件中定义的 <see langword="Session_OnEnd" /> 事件的 <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> 委托的引用。</summary>
        <returns>
          如果会话状态存储提供程序支持调用 <see langword="true" /> 事件，则为 <see langword="Session_OnEnd" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A>方法来确定在初始化模块时是否调用`Session_OnEnd`支持事件<xref:System.Web.SessionState.SessionStateStoreProviderBase>实现并将关联<xref:System.Web.SessionState.SessionStateItemExpireCallback>委托以及`Session_OnEnd`事件。  
  
 自定义会话状态存储提供程序实施者应使用<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A>方法，以通知<xref:System.Web.SessionState.SessionStateModule>对象是否调用`Session_OnEnd`支持事件并将本地引用设置为<xref:System.Web.SessionState.SessionStateItemExpireCallback>由提供的委托`expireCallback`参数。 自定义实现必须确定何时本地<xref:System.Web.SessionState.SessionStateItemExpireCallback>将调用委托。 例如，无法在调用过程中调用该委托<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>方法，它放弃会话时调用。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>