<Type Name="SessionStateStoreProviderBase" FullName="System.Web.SessionState.SessionStateStoreProviderBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1841436a6479c0b1c33c26794c28ee86cb78e78f" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51936010" /></Metadata><TypeSignature Language="C#" Value="public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SessionStateStoreProviderBase extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateStoreProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SessionStateStoreProviderBase&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateStoreProviderBase abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SessionStateStoreProviderBase = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定义数据存储区的会话状态提供程序所需的成员。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 会话状态读取和写入会话数据从 / 向数据存储区使用会话状态存储提供程序。 会话状态存储提供程序是继承的类<xref:System.Web.SessionState.SessionStateStoreProviderBase>抽象类，并重写其成员实现特定于数据存储。 会话状态存储提供程序由调用<xref:System.Web.SessionState.SessionStateModule>类在 ASP.NET 页面与存储的数据存储进行通信的处理和检索会话变量和相关的会话信息，例如超时值的过程。  
  
 每个 ASP.NET 应用程序中的会话数据为每个单独存储<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>属性。 ASP.NET 应用程序不共享会话数据。  
  
 可以指定自定义<xref:System.Web.SessionState.SessionStateStoreProviderBase>通过设置为 ASP.NET 应用程序的实现`mode`的属性`sessionState`到的配置元素<xref:System.Web.SessionState.SessionStateMode.Custom>和`customProvider`作为属性的自定义提供程序名称本主题的示例中所示。  
  
## <a name="locking-session-store-data"></a>锁定会话存储数据  
 由于 ASP.NET 应用程序是多线程来支持对并发请求的响应，就可以并发请求可能会尝试访问相同的会话信息。 假设所有框架集的多个框架访问同一个应用程序的位置。 可以同时在不同的线程上的 Web 服务器上执行框架集中每个帧的独立请求。 如果每个帧源的 ASP.NET 页面访问会话状态变量，您可以具有多个线程并发访问会话存储区。  
  
 若要避免在会话存储区和意外的会话状态行为的数据冲突<xref:System.Web.SessionState.SessionStateModule>和<xref:System.Web.SessionState.SessionStateStoreProviderBase>类包括为特定的会话的持续时间以独占方式锁定会话存储项的锁定功能ASP.NET 页执行。 请注意，即使<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性标记为`ReadOnly`，同一应用程序中的其他 ASP.NET 页可能能够写入会话存储区，因此对于只读会话存储中的数据仍可能最终会等待的请求锁定数据释放。  
  
 对会话存储区中调用的请求的开始处的数据设置锁定<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法。 完成请求后，在调用释放锁<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>方法。  
  
 如果<xref:System.Web.SessionState.SessionStateModule>对象在调用过程中遇到锁定的会话数据<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>或<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>方法，它将重新请求的会话数据隔半秒之前释放锁或的时间，会话数据已被锁定的值超出了<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>属性。 如果超出执行超时值，则<xref:System.Web.SessionState.SessionStateModule>对象将调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法以释放会话存储数据，在该时间请求会话存储数据。  
  
 因为锁定会话存储的数据可能会通过调用释放<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法之前调用单独的线程上<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>当前响应的方法，可能会尝试设置和发布具有会话状态存储数据已发布并由另一个会话进行了修改。 若要避免这种情况下，<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>和<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法返回的锁定标识符。 此锁标识符必须包含每个请求以修改锁定的会话存储的数据。 会话存储区修改数据时，仅当数据存储区中的锁定标识符匹配所提供的锁定标识符<xref:System.Web.SessionState.SessionStateModule>。  
  
## <a name="deleting-expired-session-store-data"></a>删除过期的会话存储数据  
 当<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>方法调用特定会话，则该会话中删除数据从数据存储区使用<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>方法; 否则为，数据将保留在将来的服务器请求的会话数据存储区中的会话。 这就需要通过<xref:System.Web.SessionState.SessionStateStoreProviderBase>实现中删除过期的会话数据。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 下面的代码示例显示了配置为使用自定义会话状态存储提供程序的 ASP.NET 应用程序的 Web.config 文件。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="OdbcSessionServices" connectionString="DSN=SessionState;" />  
  </connectionStrings>  
  
  <system.web>  
    <sessionState   
      mode="Custom"  
      customProvider="OdbcSessionProvider">  
      <providers>  
        <add name="OdbcSessionProvider"  
             type="Samples.AspNet.Session.OdbcSessionStateStore"  
             connectionStringName="OdbcSessionServices" />  
      </providers>  
    </sessionState>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionStateStoreProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionStateStoreProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不需要实现继承的类的构造函数<xref:System.Web.SessionState.SessionStateStoreProviderBase>抽象类。 值初始化<xref:System.Web.SessionState.SessionStateStoreProviderBase>实现传递到<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>方法的实现。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="CreateNewStoreData">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData CreateNewStoreData(class System.Web.HttpContext context, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateNewStoreData (context As HttpContext, timeout As Integer) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ CreateNewStoreData(System::Web::HttpContext ^ context, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewStoreData : System.Web.HttpContext * int -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.CreateNewStoreData (context, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="timeout">新 <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> 的会话状态 <see cref="T:System.Web.SessionState.SessionStateStoreData" /> 值。</param>
        <summary>创建要用于当前请求的新 <see cref="T:System.Web.SessionState.SessionStateStoreData" /> 对象。</summary>
        <returns>当前请求的新 <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>方法请求的开始处的 ASP.NET 页中，在<xref:System.Web.HttpApplication.AcquireRequestState>事件。 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>如果调用方法：  
  
-   传入请求有任何会话 ID，或  
  
-   传入请求的会话 ID 为，但在数据存储区中找不到该会话。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>方法创建一个新<xref:System.Web.SessionState.SessionStateStoreData>具有一个空对象<xref:System.Web.SessionState.ISessionStateItemCollection>对象，<xref:System.Web.HttpStaticObjectsCollection>集合，并指定`timeout`值。 <xref:System.Web.HttpStaticObjectsCollection>可以使用检索的 ASP.NET 应用程序收集<xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>方法。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUninitializedItem">
      <MemberSignature Language="C#" Value="public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateUninitializedItem(class System.Web.HttpContext context, string id, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateUninitializedItem (context As HttpContext, id As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateUninitializedItem(System::Web::HttpContext ^ context, System::String ^ id, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateUninitializedItem : System.Web.HttpContext * string * int -&gt; unit" Usage="sessionStateStoreProviderBase.CreateUninitializedItem (context, id, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">当前请求的 <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</param>
        <param name="timeout">当前请求的会话 <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" />。</param>
        <summary>将新的会话状态项添加到数据存储区中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>方法与会话一起使用时`cookieless`并`regenerateExpiredSessionId`特性都是`true`。 无`regenerateExpiredSessionId attribute`设置为`true`会导致<xref:System.Web.SessionState.SessionStateModule>对象生成一个新<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值时过期<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>遇到值。  
  
 生成一个新的过程<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值需要将浏览器重定向到包含新生成的 URL<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值。 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>包含过期的初始请求过程中调用方法<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值。 之后<xref:System.Web.SessionState.SessionStateModule>对象获取一个新<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值来替换过期的值，它将调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>方法将未初始化的项添加到会话状态数据存储。 然后，将浏览器重定向到包含新生成的 URL<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值。 未初始化的项在会话数据存储区中是否存在可确保重定向的请求，包括新生成<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值不被误解为请求过期的会话，而，相反，视为新的会话。  
  
 会话数据存储区中的未初始化的条目是与新生成相关联<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值，并仅包含默认值，包括到期日期和时间值对应于`actionFlags`参数<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>和<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法。 会话状态存储中未初始化的条目应包含`actionFlags`值等于<xref:System.Web.SessionState.SessionStateActions.InitializeItem>枚举值。 此值传递给<xref:System.Web.SessionState.SessionStateModule>对象通过<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>并<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法，并通知<xref:System.Web.SessionState.SessionStateModule>对象，则当前会话将一个新的但未初始化的会话。 <xref:System.Web.SessionState.SessionStateModule>对象将初始化新的会话并引发`Session_OnStart`事件。  
  
 有关无 cookie 会话的详细信息，请参阅<xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>属性。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="sessionStateStoreProviderBase.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放由 <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> 实现使用的所有资源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=nameWithType>时调用方法<xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=nameWithType>方法执行的应用程序域关闭。 继承的类<xref:System.Web.SessionState.SessionStateStoreProviderBase>类可以使用此方法以释放不再中使用的任何资源。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public abstract void EndRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.EndRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>在请求结束时由 <see cref="T:System.Web.SessionState.SessionStateModule" /> 对象调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A>ASP.NET 页中，在请求结束方法期间<xref:System.Web.HttpApplication.EndRequest>事件。 可以使用<xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A>方法来执行任何所需的会话状态存储提供程序的每个请求清理。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItem(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItem (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItem(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItem (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">当前请求的 <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</param>
        <param name="locked">当此方法返回时，如果请求的会话项在会话数据存储区被锁定，请包含一个设置为 <see langword="true" /> 的布尔值；否则请包含一个设置为 <see langword="false" /> 的布尔值。</param>
        <param name="lockAge">当此方法返回时，请包含一个设置为会话数据存储区中的项锁定时间的 <see cref="T:System.TimeSpan" /> 对象。</param>
        <param name="lockId">当此方法返回时，请包含一个设置为当前请求的锁定标识符的对象。 有关锁定标识符的详细信息，请参见 <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> 类摘要中的“锁定会话存储区数据”。</param>
        <param name="actions">当此方法返回时，请包含 <see cref="T:System.Web.SessionState.SessionStateActions" /> 值之一，指示当前会话是否为未初始化的无 Cookie 会话。</param>
        <summary>从会话数据存储区中返回只读会话状态数据。</summary>
        <returns>使用会话数据存储区中的会话值和信息填充的 <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>请求的开始处的方法期间<xref:System.Web.HttpApplication.AcquireRequestState>事件，当<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性设置为`ReadOnly`。 如果<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性设置为`true`，则<xref:System.Web.SessionState.SessionStateModule>对象改为调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>方法将返回<xref:System.Web.SessionState.SessionStateStoreData>对象填充有数据存储区中的会话信息和更新会话数据的到期日期。 如果在数据存储区中，未不找到任何会话项数据<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>方法设置`locked``out`参数`false`，并返回`null`。 这将导致<xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>方法以在数据存储区中创建新的会话项。  
  
 如果会话项在数据存储区中找到数据但不锁定数据，<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>方法设置`locked``out`参数`true`，设置`lockAge``out`参数为当前日期和时间减去的日期和项已锁定时的时间 （这从存储中检索数据），设置`lockId``out`的锁定标识符的参数将从数据存储和检索返回`null`。 这将导致<xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>后半秒时间间隔尝试检索会话项信息的方法。  
  
 如果值的`lockAge``out`参数设置超过<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>值，则<xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法以清除锁定的会话项数据，然后调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>再次方法。  
  
 `actionFlags`使用参数时同时`cookieless`并`regenerateExpiredSessionId`属性设置为`true`。 `actionFlags`值设置为<xref:System.Web.SessionState.SessionStateActions.InitializeItem>指示会话数据存储区中的项是需要初始化的新会话。 通过调用创建会话数据存储区中的未初始化的条目<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>方法。 如果会话数据存储区中的项不是一个未初始化的项，`actionFlags`参数将设置为零。  
  
 支持无 cookie 会话的自定义会话状态存储实现程序应设置`actionFlags``out`从当前项的会话数据存储区返回的值的参数。 如果`actionFlags`项，请求的会话存储的参数值等于<xref:System.Web.SessionState.SessionStateActions.InitializeItem>枚举值，则<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>方法应将值设置为零后设置数据存储区中`actionFlags``out`参数。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetItemExclusive">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItemExclusive(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemExclusive (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItemExclusive : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItemExclusive (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">当前请求的 <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</param>
        <param name="locked">当此方法返回时，如果成功获得锁定，请包含一个设置为 <see langword="true" /> 的布尔值；否则请包含一个设置为 <see langword="false" /> 的布尔值。</param>
        <param name="lockAge">当此方法返回时，请包含一个设置为会话数据存储区中的项锁定时间的 <see cref="T:System.TimeSpan" /> 对象。</param>
        <param name="lockId">当此方法返回时，请包含一个设置为当前请求的锁定标识符的对象。 有关锁定标识符的详细信息，请参见 <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> 类摘要中的“锁定会话存储区数据”。</param>
        <param name="actions">当此方法返回时，请包含 <see cref="T:System.Web.SessionState.SessionStateActions" /> 值之一，指示当前会话是否为未初始化的无 Cookie 会话。</param>
        <summary>从会话数据存储区中返回只读会话状态数据。</summary>
        <returns>使用会话数据存储区中的会话值和信息填充的 <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>请求的开始处的方法期间<xref:System.Web.HttpApplication.AcquireRequestState>事件，当<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性设置为`true`，这是默认设置。 如果<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性设置为`ReadOnly`，则<xref:System.Web.SessionState.SessionStateModule>对象改为调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>方法。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法将返回<xref:System.Web.SessionState.SessionStateStoreData>会话中的信息填充数据存储的对象更新存储的数据的到期日期，并请求的持续期间锁定数据存储区上的会话项数据。 如果在数据存储区中，未不找到任何会话项数据<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法设置`locked``out`参数`false`，并返回`null`。 这将导致<xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>方法以在数据存储区中创建新的会话项。 如果会话项在数据存储区中找到数据但不锁定数据，<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法设置`locked``out`参数`true`，设置`lockAge``out`参数为当前日期和时间减去的日期和项已锁定时的时间 （这从存储中检索数据），设置`lockId``out`的锁定标识符的参数将从数据存储和检索返回`null`。 这将导致<xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>后半秒时间间隔尝试检索会话项信息并获取数据的锁的方法。 如果值的`lockAge``out`参数设置为超过<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>值，则<xref:System.Web.SessionState.SessionStateModule>调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法以清除锁定的会话项数据，然后调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>再次方法。  
  
 `actionFlags`使用参数时`cookieless`并`regenerateExpiredSessionId`属性均设置为`true`。 `actionFlags`值设置为<xref:System.Web.SessionState.SessionStateActions.InitializeItem>指示会话数据存储区中的项是需要初始化的新会话。 通过调用创建会话数据存储区中的未初始化的条目<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>方法。 如果会话数据存储区中的项不是一个未初始化的项，`actionFlags`参数将设置为零。  
  
 支持无 cookie 会话的自定义会话状态存储实现程序应设置`actionFlags``out`从当前项的会话数据存储区返回的值的参数。 如果`actionFlags`项，请求的会话存储的参数值等于<xref:System.Web.SessionState.SessionStateActions.InitializeItem>枚举值，则<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>方法应将值设置为零后设置数据存储区中`actionFlags``out`参数。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public abstract void InitializeRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InitializeRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InitializeRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.InitializeRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>由 <see cref="T:System.Web.SessionState.SessionStateModule" /> 对象调用，以便进行每次请求初始化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A>方法，然后再调用任何其他<xref:System.Web.SessionState.SessionStateStoreProviderBase>方法。 可以使用<xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A>方法以执行任何所需的会话状态存储提供程序的每个请求初始化。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="ReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseItemExclusive(class System.Web.HttpContext context, string id, object lockId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReleaseItemExclusive (context As HttpContext, id As String, lockId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseItemExclusive : System.Web.HttpContext * string * obj -&gt; unit" Usage="sessionStateStoreProviderBase.ReleaseItemExclusive (context, id, lockId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">当前请求的会话标识符。</param>
        <param name="lockId">当前请求的锁定标识符。</param>
        <summary>释放对会话数据存储区中项的锁定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法来更新的过期日期，并释放会话数据存储区中的项上的锁。 它在结束时调用的请求期间<xref:System.Web.HttpApplication.ReleaseRequestState>事件，如果会话值保持不变。 如果修改了会话值，<xref:System.Web.SessionState.SessionStateModule>对象改为调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>方法。  
  
 <xref:System.Web.SessionState.SessionStateModule>对象还将调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法时会话数据存储区中的项上的锁已超出<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>值。 有关锁定的详细信息和有关锁定标识符的详细信息，请参阅"锁定会话存储区数据"中<xref:System.Web.SessionState.SessionStateStoreProviderBase>类概述。  
  
 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法只从当前匹配的应用程序提供的会话的会话数据存储中的项中删除该锁`id`和`lockId`值。 如果`lockId`与数据存储中的一个不匹配<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>方法不执行任何操作。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem(class System.Web.HttpContext context, string id, object lockId, class System.Web.SessionState.SessionStateStoreData item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveItem (context As HttpContext, id As String, lockId As Object, item As SessionStateStoreData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveItem(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId, System::Web::SessionState::SessionStateStoreData ^ item);" />
      <MemberSignature Language="F#" Value="abstract member RemoveItem : System.Web.HttpContext * string * obj * System.Web.SessionState.SessionStateStoreData -&gt; unit" Usage="sessionStateStoreProviderBase.RemoveItem (context, id, lockId, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">当前请求的会话标识符。</param>
        <param name="lockId">当前请求的锁定标识符。</param>
        <param name="item">表示将从数据存储区中删除的项的 <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</param>
        <summary>删除会话数据存储区中的项数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>方法在一个请求期间<xref:System.Web.HttpApplication.ReleaseRequestState>事件，若要从会话数据存储区删除会话项的数据，如果<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>调用方法。 仅匹配提供的会话的当前应用程序的会话数据`id`和`lockId`删除值。 有关锁定的详细信息和有关锁定标识符的详细信息，请参阅"锁定会话存储区数据"中<xref:System.Web.SessionState.SessionStateStoreProviderBase>类概述。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="ResetItemTimeout">
      <MemberSignature Language="C#" Value="public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetItemTimeout(class System.Web.HttpContext context, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetItemTimeout (context As HttpContext, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetItemTimeout(System::Web::HttpContext ^ context, System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResetItemTimeout : System.Web.HttpContext * string -&gt; unit" Usage="sessionStateStoreProviderBase.ResetItemTimeout (context, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">当前请求的会话标识符。</param>
        <summary>更新会话数据存储区中的项的到期日期和时间。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A>方法来更新到当前日期和时间加上该会话的到期日期和时间的会话<xref:System.Web.SessionState.HttpSessionState.Timeout%2A>时值是：  
  
-   <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性是`true`，或  
  
-   请求不会发出<xref:System.Web.HttpApplication.AcquireRequestState>和<xref:System.Web.HttpApplication.ReleaseRequestState>由于出现错误的事件。  
  
 如果请求 ASP.NET 页和<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>属性设置为`false`，则<xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A>仍调用方法来更新的到期日期和时间的会话数据存储区中的数据。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="SetAndReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAndReleaseItemExclusive(class System.Web.HttpContext context, string id, class System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetAndReleaseItemExclusive (context As HttpContext, id As String, item As SessionStateStoreData, lockId As Object, newItem As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetAndReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Web::SessionState::SessionStateStoreData ^ item, System::Object ^ lockId, bool newItem);" />
      <MemberSignature Language="F#" Value="abstract member SetAndReleaseItemExclusive : System.Web.HttpContext * string * System.Web.SessionState.SessionStateStoreData * obj * bool -&gt; unit" Usage="sessionStateStoreProviderBase.SetAndReleaseItemExclusive (context, id, item, lockId, newItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="newItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">当前请求的 <see cref="T:System.Web.HttpContext" />。</param>
        <param name="id">当前请求的会话标识符。</param>
        <param name="item">包含要存储的当前会话值的 <see cref="T:System.Web.SessionState.SessionStateStoreData" /> 对象。</param>
        <param name="lockId">当前请求的锁定标识符。</param>
        <param name="newItem">如果为 <see langword="true" />，则将会话项标识为新项；如果为 <see langword="false" />，则将会话项标识为现有的项。</param>
        <summary>使用当前请求中的值更新会话状态数据存储区中的会话项信息，并清除对数据的锁定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>方法在一个请求期间<xref:System.Web.HttpApplication.ReleaseRequestState>事件，以将当前的会话项信息插入到数据存储区或使用当前值更新数据存储区中的现有会话项信息要更新的项的过期时间，才能释放锁的数据。 仅匹配提供的会话的当前应用程序的会话数据`id`和`lockId`更新值。 有关锁定的详细信息，请参阅"锁定会话存储区数据"中<xref:System.Web.SessionState.SessionStateStoreProviderBase>类概述。  
  
 如果当前请求的会话值未被修改，<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>不会调用方法。 相反，<xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>调用方法。  
  
 如果<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>已调用方法，<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>不会调用方法。 相反，<xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>方法来删除数据源中的会话项数据。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="SetItemExpireCallback">
      <MemberSignature Language="C#" Value="public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetItemExpireCallback(class System.Web.SessionState.SessionStateItemExpireCallback expireCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SetItemExpireCallback (expireCallback As SessionStateItemExpireCallback) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SetItemExpireCallback(System::Web::SessionState::SessionStateItemExpireCallback ^ expireCallback);" />
      <MemberSignature Language="F#" Value="abstract member SetItemExpireCallback : System.Web.SessionState.SessionStateItemExpireCallback -&gt; bool" Usage="sessionStateStoreProviderBase.SetItemExpireCallback expireCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expireCallback" Type="System.Web.SessionState.SessionStateItemExpireCallback" />
      </Parameters>
      <Docs>
        <param name="expireCallback">对 Global.asax 文件中定义的 <see langword="Session_OnEnd" /> 事件的 <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> 委托。</param>
        <summary>设置对 Global.asax 文件中定义的 <see langword="Session_OnEnd" /> 事件的 <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> 委托的引用。</summary>
        <returns>如果会话状态存储提供程序支持调用 <see langword="true" /> 事件，则为 <see langword="Session_OnEnd" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule>对象调用<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A>方法来确定在初始化模块时是否调用`Session_OnEnd`支持事件<xref:System.Web.SessionState.SessionStateStoreProviderBase>实现并将关联<xref:System.Web.SessionState.SessionStateItemExpireCallback>委托，其`Session_OnEnd`事件。  
  
 自定义会话状态存储提供程序实施者应使用<xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A>方法，从而通知<xref:System.Web.SessionState.SessionStateModule>对象是否调用`Session_OnEnd`支持事件并将本地引用设置为<xref:System.Web.SessionState.SessionStateItemExpireCallback>由提供的委托`expireCallback`参数。 自定义实现必须决定何时本地<xref:System.Web.SessionState.SessionStateItemExpireCallback>将调用委托。 例如，在调用的过程可以调用委托<xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>放弃会话时调用的方法。  
  
   
  
## Examples  
 有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
  </Members>
</Type>