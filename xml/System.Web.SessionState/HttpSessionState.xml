<Type Name="HttpSessionState" FullName="System.Web.SessionState.HttpSessionState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae4ca9a4670ae745ae7f68a9bf24402e4ec78440" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550541" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpSessionState : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpSessionState extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.HttpSessionState" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpSessionState&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSessionState sealed : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1f32d-101">提供对会话状态值以及会话级别设置和生存期管理方法的访问。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f32d-101">Provides access to session-state values as well as session-level settings and lifetime management methods.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f32d-102">ASP.NET 提供了会话状态管理，使您可以存储与唯一的浏览器会话关联跨多个请求的信息。</span><span class="sxs-lookup"><span data-stu-id="1f32d-102">ASP.NET provides session-state management to enable you to store information associated with a unique browser session across multiple requests.</span></span> <span data-ttu-id="1f32d-103">你可以存储引用按密钥名称或数字索引的值的集合。</span><span class="sxs-lookup"><span data-stu-id="1f32d-103">You can store a collection of values referenced by a key name or by numerical index.</span></span> <span data-ttu-id="1f32d-104">对会话的值和功能的访问是使用<xref:System.Web.SessionState.HttpSessionState>类，该类可通过访问<xref:System.Web.HttpContext.Session%2A>属性的当前<xref:System.Web.HttpContext>，或<xref:System.Web.UI.Page.Session%2A>属性<xref:System.Web.UI.Page>。</span><span class="sxs-lookup"><span data-stu-id="1f32d-104">Access to session values and functionality is available using the <xref:System.Web.SessionState.HttpSessionState> class, which is accessible through the <xref:System.Web.HttpContext.Session%2A> property of the current <xref:System.Web.HttpContext>, or the <xref:System.Web.UI.Page.Session%2A> property of the <xref:System.Web.UI.Page>.</span></span>  
  
 <span data-ttu-id="1f32d-105">会话数据点使用的唯一标识符的特定浏览器会话是关联。</span><span class="sxs-lookup"><span data-stu-id="1f32d-105">Session data is associated with a specific browser session using a unique identifier.</span></span> <span data-ttu-id="1f32d-106">默认情况下，此标识符存储在非过期的会话 cookie 在浏览器中，但你还可以配置你的应用程序，可以通过设置在 URL 中存储的会话标识符`cookieless`属性设为`true`或<xref:System.Web.HttpCookieMode.UseUri>元素中应用程序配置中。</span><span class="sxs-lookup"><span data-stu-id="1f32d-106">By default, this identifier is stored in a non-expiring session cookie in the browser, but you can also configure your application to store the session identifier in the URL by setting the `cookieless` attribute to `true` or <xref:System.Web.HttpCookieMode.UseUri> in the  element of your application configuration.</span></span> <span data-ttu-id="1f32d-107">你可以确定是否 cookie 支持的浏览器通过指定的值的 ASP.NET<xref:System.Web.HttpCookieMode.UseDeviceProfile>为`cookieless`属性。</span><span class="sxs-lookup"><span data-stu-id="1f32d-107">You can have ASP.NET determine whether cookies are supported by the browser by specifying a value of <xref:System.Web.HttpCookieMode.UseDeviceProfile> for the `cookieless` attribute.</span></span> <span data-ttu-id="1f32d-108">你还可以确定是否启用 cookie 的浏览器通过指定的值的 ASP.NET<xref:System.Web.HttpCookieMode.AutoDetect>为`cookieless`属性。</span><span class="sxs-lookup"><span data-stu-id="1f32d-108">You can also have ASP.NET determine whether cookies are enabled for the browser by specifying a value of <xref:System.Web.HttpCookieMode.AutoDetect> for the `cookieless` attribute.</span></span> <span data-ttu-id="1f32d-109">如果支持 cookie，则当<xref:System.Web.HttpCookieMode.UseDeviceProfile>指定，或时，将启用<xref:System.Web.HttpCookieMode.AutoDetect>指定，则标识符将存储在一个 cookie，否则为该会话将在 URL 中存储的会话标识符。</span><span class="sxs-lookup"><span data-stu-id="1f32d-109">If cookies are supported when <xref:System.Web.HttpCookieMode.UseDeviceProfile> is specified, or enabled when <xref:System.Web.HttpCookieMode.AutoDetect> is specified, then the session identifier will be stored in a cookie; otherwise the session identifier will be stored in the URL.</span></span>  
  
 <span data-ttu-id="1f32d-110">会话将会启动过程的第一个请求和会话值将保持不变，只要新请求发出者是浏览器中指定的分钟数之前<xref:System.Web.SessionState.HttpSessionState.Timeout%2A>属性传递。</span><span class="sxs-lookup"><span data-stu-id="1f32d-110">Sessions are started during the first request and session values will persist as long as a new request is made by the browser before the number of minutes specified in the <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> property pass.</span></span> <span data-ttu-id="1f32d-111">当新的会话开始时，会话<xref:System.Web.SessionState.SessionStateModule.Start>引发事件。</span><span class="sxs-lookup"><span data-stu-id="1f32d-111">When a new session begins, the session <xref:System.Web.SessionState.SessionStateModule.Start> event is raised.</span></span> <span data-ttu-id="1f32d-112">你可以使用此事件以执行任何额外工作开头的会话，例如设置会话值的默认值。</span><span class="sxs-lookup"><span data-stu-id="1f32d-112">You can use this event to perform any additional work at the start of a session, such as setting default session values.</span></span> <span data-ttu-id="1f32d-113">当会话超时时，<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>调用方法时，或 ASP.NET 应用程序关闭，会话<xref:System.Web.SessionState.SessionStateModule.End>引发事件。</span><span class="sxs-lookup"><span data-stu-id="1f32d-113">When a session times out, the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method is called, or the ASP.NET application is shut down, the session <xref:System.Web.SessionState.SessionStateModule.End> event is raised.</span></span> <span data-ttu-id="1f32d-114">此事件可用于执行任何必要的清除。</span><span class="sxs-lookup"><span data-stu-id="1f32d-114">You can use this event to perform any necessary cleanup.</span></span> <span data-ttu-id="1f32d-115"><xref:System.Web.SessionState.SessionStateModule.End>引发事件时，才会话状态`mode`设置为<xref:System.Web.SessionState.SessionStateMode.InProc>。</span><span class="sxs-lookup"><span data-stu-id="1f32d-115">The <xref:System.Web.SessionState.SessionStateModule.End> event is raised only when the session state `mode` is set to <xref:System.Web.SessionState.SessionStateMode.InProc>.</span></span>  
  
 <span data-ttu-id="1f32d-116">若要提高性能，使用 cookie 的会话不分配会话存储数据实际存储到之前<xref:System.Web.UI.Page.Session%2A>对象。</span><span class="sxs-lookup"><span data-stu-id="1f32d-116">To improve performance, sessions that use cookies do not allocate session storage until data is actually stored in the <xref:System.Web.UI.Page.Session%2A> object.</span></span> <span data-ttu-id="1f32d-117">有关更多信息，请参见 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="1f32d-117">For more information, see the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> property.</span></span>  
  
 <span data-ttu-id="1f32d-118">会话状态不会保留跨 ASP.NET 应用程序边界。</span><span class="sxs-lookup"><span data-stu-id="1f32d-118">Session state does not persist across ASP.NET application boundaries.</span></span> <span data-ttu-id="1f32d-119">如果浏览器导航到另一个应用程序，则会话信息不可用的新应用。</span><span class="sxs-lookup"><span data-stu-id="1f32d-119">If a browser navigates to another application, the session information is not available to the new application.</span></span>  
  
 <span data-ttu-id="1f32d-120">默认情况下，会话值存储在 Web 服务器上的内存。</span><span class="sxs-lookup"><span data-stu-id="1f32d-120">Session values are stored in memory on the Web server, by default.</span></span> <span data-ttu-id="1f32d-121">此外可以在 SQL Server 数据库、 ASP.NET 状态服务器或自定义服务器存储会话值。</span><span class="sxs-lookup"><span data-stu-id="1f32d-121">You can also store session values in a SQL Server database, an ASP.NET state server, or a custom server.</span></span> <span data-ttu-id="1f32d-122">这使你来保留在其中的 ASP.NET 或 IIS 进程或 ASP.NET 应用程序重启的情况下的会话值并在 Web 场中的所有服务器提供会话值。</span><span class="sxs-lookup"><span data-stu-id="1f32d-122">This enables you to preserve session values in cases where the ASP.NET or IIS process or the ASP.NET application restarts and to make session values available across all the servers in a Web farm.</span></span> <span data-ttu-id="1f32d-123">通过设置配置此行为`mode`属性设为有效<xref:System.Web.SessionState.SessionStateMode>在应用程序配置的元素中的值。</span><span class="sxs-lookup"><span data-stu-id="1f32d-123">This behavior is configured by setting the `mode` attribute to a valid <xref:System.Web.SessionState.SessionStateMode> value in the  element of your application configuration.</span></span> <span data-ttu-id="1f32d-124">有关详细信息，请参阅[会话状态模式](http://msdn.microsoft.com/library/0bb0a3a3-650f-4c47-a0c5-b08b9b591bb4)。</span><span class="sxs-lookup"><span data-stu-id="1f32d-124">For more information, see [Session-State Modes](http://msdn.microsoft.com/library/0bb0a3a3-650f-4c47-a0c5-b08b9b591bb4).</span></span>  
  
 <span data-ttu-id="1f32d-125">为会话状态的替代项包括应用程序状态 (请参阅<xref:System.Web.HttpApplication.Application%2A>属性) 和 ASP.NET 缓存 (请参阅<xref:System.Web.Caching>命名空间)，可由 ASP.NET 应用程序的所有用户访问哪些应用商店变量; ASP.NET 配置文件 (请参阅<xref:System.Web.Profile>命名空间)，该用户将值保留在数据存储区不会过期它们使用超时;ASP.NET <xref:System.Web.UI.WebControls?displayProperty=nameWithType>，其中保留控件中的值<xref:System.Web.UI.Control.ViewState%2A>;<xref:System.Web.HttpResponse.Cookies%2A>;<xref:System.Web.HttpRequest.QueryString%2A>属性; 和 HTML 窗体上的字段，可从 HTTP`POST`使用<xref:System.Web.HttpRequest.Form%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="1f32d-125">Alternatives to session state include application state (see the <xref:System.Web.HttpApplication.Application%2A> property) and the ASP.NET cache (see the <xref:System.Web.Caching> namespace), which store variables that can be accessed by all users of an ASP.NET application; the ASP.NET profile (see the <xref:System.Web.Profile> namespace), which persists user values in a data store without expiring them using a time-out; ASP.NET <xref:System.Web.UI.WebControls?displayProperty=nameWithType>, which persist control values in the <xref:System.Web.UI.Control.ViewState%2A>; <xref:System.Web.HttpResponse.Cookies%2A>; the <xref:System.Web.HttpRequest.QueryString%2A> property; and fields on an HTML form that are available from an HTTP `POST` using the <xref:System.Web.HttpRequest.Form%2A> collection.</span></span> <span data-ttu-id="1f32d-126">有关会话状态和其他状态管理备选项之间的差异的详细信息，请参阅[ASP.NET 状态管理建议](http://msdn.microsoft.com/library/af79fa0d-4bc8-47a6-9915-d8e355bfb732)。</span><span class="sxs-lookup"><span data-stu-id="1f32d-126">For more details on the differences between session state and other state-management alternatives, see [ASP.NET State Management Recommendations](http://msdn.microsoft.com/library/af79fa0d-4bc8-47a6-9915-d8e355bfb732).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f32d-127">下面的代码示例设置，并从会话状态中检索值。</span><span class="sxs-lookup"><span data-stu-id="1f32d-127">The following code example sets and retrieves values from session state.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f32d-128">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="1f32d-128">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="1f32d-129">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="1f32d-129">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="1f32d-130">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="1f32d-130">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpSessionState#30](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/session2cs.aspx#30)]
 [!code-aspx-vb[HttpSessionState#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/session2vb.aspx#30)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Web.Profile" />
    <altmember cref="N:System.Web.Caching" />
  </Docs>
  <Members>
    <Member MemberName="Abandon">
      <MemberSignature Language="C#" Value="public void Abandon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abandon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Abandon" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abandon ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abandon();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-131">取消当前会话。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-131">Cancels the current session.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f32d-132">一次<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>调用方法、 当前会话不再有效，可以启动新会话。</span><span class="sxs-lookup"><span data-stu-id="1f32d-132">Once the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method is called, the current session is no longer valid and a new session can be started.</span></span> <span data-ttu-id="1f32d-133"><xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 导致<xref:System.Web.SessionState.SessionStateModule.End>引发事件。</span><span class="sxs-lookup"><span data-stu-id="1f32d-133"><xref:System.Web.SessionState.HttpSessionState.Abandon%2A> causes the <xref:System.Web.SessionState.SessionStateModule.End> event to be raised.</span></span> <span data-ttu-id="1f32d-134">一个新<xref:System.Web.SessionState.SessionStateModule.Start>将在下一个请求上引发事件。</span><span class="sxs-lookup"><span data-stu-id="1f32d-134">A new <xref:System.Web.SessionState.SessionStateModule.Start> event will be raised on the next request.</span></span>  
  
 <span data-ttu-id="1f32d-135">默认情况下，正在回收放弃或已过期的会话的会话标识符。</span><span class="sxs-lookup"><span data-stu-id="1f32d-135">Session identifiers for abandoned or expired sessions are recycled by default.</span></span> <span data-ttu-id="1f32d-136">也就是说，如果发出请求的过期或已放弃的会话中包括的会话标识符，将启动新的会话使用相同的会话标识符。</span><span class="sxs-lookup"><span data-stu-id="1f32d-136">That is, if a request is made that includes the session identifier for an expired or abandoned session, a new session is started using the same session identifier.</span></span> <span data-ttu-id="1f32d-137">你可以通过设置来禁用这`regenerateExpiredSessionId`到的配置元素的属性`true`。</span><span class="sxs-lookup"><span data-stu-id="1f32d-137">You can disable this by setting `regenerateExpiredSessionId` attribute of the  configuration element to `true`.</span></span> <span data-ttu-id="1f32d-138">有关详细信息，请参阅[会话标识符](http://msdn.microsoft.com/library/146ca206-d151-4f2e-a548-bcca05ccf0cb)。</span><span class="sxs-lookup"><span data-stu-id="1f32d-138">For more information, see [Session Identifiers](http://msdn.microsoft.com/library/146ca206-d151-4f2e-a548-bcca05ccf0cb).</span></span>  
  
 <span data-ttu-id="1f32d-139"><xref:System.Web.SessionState.SessionStateModule.End>支持事件时，才<xref:System.Web.SessionState.HttpSessionState.Mode%2A>属性设置为<xref:System.Web.SessionState.SessionStateMode.InProc>。</span><span class="sxs-lookup"><span data-stu-id="1f32d-139">The <xref:System.Web.SessionState.SessionStateModule.End> event is supported only when the <xref:System.Web.SessionState.HttpSessionState.Mode%2A> property is set to <xref:System.Web.SessionState.SessionStateMode.InProc>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1f32d-140">要添加到会话状态集合的项的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-140">The name of the item to add to the session-state collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1f32d-141">要添加到会话状态集合的项的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-141">The value of the item to add to the session-state collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f32d-142">向会话状态集合添加一个新项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-142">Adds a new item to the session-state collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f32d-143">如果`name`参数引用现有的会话状态项，现有项，将覆盖具有指定`value`。</span><span class="sxs-lookup"><span data-stu-id="1f32d-143">If the `name` parameter refers to an existing session state item, the existing item is overwritten with the specified `value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f32d-144">下面的示例演示如何使用在会话状态中存储值<xref:System.Web.SessionState.HttpSessionState.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f32d-144">The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method.</span></span> <span data-ttu-id="1f32d-145">它还演示如何通过在会话状态中移除值<xref:System.Web.SessionState.HttpSessionState.Remove%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f32d-145">It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method.</span></span> <span data-ttu-id="1f32d-146">A<xref:System.Web.UI.WebControls.Repeater>控件用于在网页上显示的内容会话状态。</span><span class="sxs-lookup"><span data-stu-id="1f32d-146">A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents session state on the Web page.</span></span> <span data-ttu-id="1f32d-147"><xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A>方法用于循环访问会话状态集合并填充<xref:System.Web.UI.WebControls.Repeater>控件。</span><span class="sxs-lookup"><span data-stu-id="1f32d-147">The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f32d-148">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="1f32d-148">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="1f32d-149">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="1f32d-149">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="1f32d-150">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="1f32d-150">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-151">从会话状态集合中删除所有键和值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-151">Removes all keys and values from the session-state collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public int CodePage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CodePage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-152">获取或设置当前会话的字符集标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-152">Gets or sets the character-set identifier for the current session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-153">当前会话的字符集标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-153">The character-set identifier for the current session.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f32d-154">字符集 （代码页） 用于解释多字节字符数据，确定字符值，并因此排序顺序。</span><span class="sxs-lookup"><span data-stu-id="1f32d-154">A character set (code page) is used to interpret multi-byte character data, determining character value, and therefore sort order.</span></span> <span data-ttu-id="1f32d-155">代码页设置仅适用于多字节字符数据，而不是 Unicode 字符数据。</span><span class="sxs-lookup"><span data-stu-id="1f32d-155">Code-page settings apply only to multi-byte character data, not to Unicode character data.</span></span>  
  
 <span data-ttu-id="1f32d-156">这<xref:System.Web.SessionState.IHttpSessionState.CodePage%2A>以便兼容 ASP 的早期版本仅提供属性。</span><span class="sxs-lookup"><span data-stu-id="1f32d-156">This <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> property is provided for compatibility with earlier versions of ASP only.</span></span> <span data-ttu-id="1f32d-157">如果你不需要为了保持向后的兼容性 ASP 页，使用<xref:System.Web.HttpResponse.ContentEncoding%2A>属性改为。</span><span class="sxs-lookup"><span data-stu-id="1f32d-157">If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Web.HttpResponse.ContentEncoding%2A> property instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Contents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contents As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Contents { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-158">获取对当前会话状态对象的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-158">Gets a reference to the current session-state object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-159">当前的 <see cref="T:System.Web.SessionState.HttpSessionState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-159">The current <see cref="T:System.Web.SessionState.HttpSessionState" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f32d-160"><xref:System.Web.SessionState.HttpSessionState.Contents%2A>属性提供为了与 ASP 的早期版本兼容。</span><span class="sxs-lookup"><span data-stu-id="1f32d-160">The <xref:System.Web.SessionState.HttpSessionState.Contents%2A> property is provided for compatibility with earlier versions of ASP.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f32d-161">下面的代码示例列出项名称和值中<xref:System.Web.SessionState.HttpSessionState.Contents%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="1f32d-161">The following code example lists the item names and values in the <xref:System.Web.SessionState.HttpSessionState.Contents%2A> property.</span></span>  
  
 [!code-csharp[HttpSessionState#9](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#9)]
 [!code-vb[HttpSessionState#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-162">获取一个值，该值指示是否为无 Cookie 会话配置应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-162">Gets a value that indicates whether the application is configured for cookieless sessions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-163">指示是否为无 Cookie 会话配置应用程序的其中一个 <see cref="T:System.Web.HttpCookieMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-163">One of the <see cref="T:System.Web.HttpCookieMode" /> values that indicate whether the application is configured for cookieless sessions.</span>
          </span>
          <span data-ttu-id="1f32d-164">默认值为 <see cref="F:System.Web.HttpCookieMode.UseCookies" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-164">The default is <see cref="F:System.Web.HttpCookieMode.UseCookies" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f32d-165">当<xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>是`true`、<xref:System.Web.SessionState.HttpSessionState.CookieMode%2A>属性返回<xref:System.Web.HttpCookieMode.UseUri>; 否则为<xref:System.Web.SessionState.HttpSessionState.CookieMode%2A>属性返回<xref:System.Web.HttpCookieMode.UseCookies>。</span><span class="sxs-lookup"><span data-stu-id="1f32d-165">When <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> is `true`, the <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> property returns <xref:System.Web.HttpCookieMode.UseUri>; otherwise the <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> property returns <xref:System.Web.HttpCookieMode.UseCookies>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f32d-166">下面的代码示例设置`cookieless`会话属性设置为`true`Web.config 文件中。</span><span class="sxs-lookup"><span data-stu-id="1f32d-166">The following code example sets the `cookieless` session attribute to `true` in the Web.config file.</span></span> <span data-ttu-id="1f32d-167">对于此示例应用程序配置，<xref:System.Web.SessionState.HttpSessionState.CookieMode%2A>属性将返回<xref:System.Web.HttpCookieMode.UseUri>。</span><span class="sxs-lookup"><span data-stu-id="1f32d-167">For this sample application configuration, the <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> property would return <xref:System.Web.HttpCookieMode.UseUri>.</span></span>  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="1f32d-168">
            <see cref="T:System.Array" />，它接收会话值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-168">The <see cref="T:System.Array" /> that receives the session values.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1f32d-169">
            <c>array</c> 中从零开始的索引，从该位置开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-169">The zero-based index in <c>array</c> from which copying starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f32d-170">从数组中指定索引处开始，将会话状态值集合复制到一维数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-170">Copies the collection of session-state values to a one-dimensional array, starting at the specified index in the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-171">获取会话状态集合中的项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-171">Gets the number of items in the session-state collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-172">集合中项的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-172">The number of items in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-173">返回一个枚举器，它可用于读取当前会话中的所有会话状态变量名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-173">Returns an enumerator that can be used to read all the session-state variable names in the current session.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f32d-174">
            <see cref="T:System.Collections.IEnumerator" /> 可以循环访问会话状态集合中的变量名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-174">An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the variable names in the session-state collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f32d-175">下面的示例演示如何使用在会话状态中存储值<xref:System.Web.SessionState.HttpSessionState.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f32d-175">The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method.</span></span> <span data-ttu-id="1f32d-176">它还演示如何通过在会话状态中移除值<xref:System.Web.SessionState.HttpSessionState.Remove%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f32d-176">It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method.</span></span> <span data-ttu-id="1f32d-177">A<xref:System.Web.UI.WebControls.Repeater>控件用于在网页上显示的会话状态的内容。</span><span class="sxs-lookup"><span data-stu-id="1f32d-177">A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page.</span></span> <span data-ttu-id="1f32d-178"><xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A>方法用于循环访问会话状态集合并填充<xref:System.Web.UI.WebControls.Repeater>控件。</span><span class="sxs-lookup"><span data-stu-id="1f32d-178">The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.</span></span>  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCookieless">
      <MemberSignature Language="C#" Value="public bool IsCookieless { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCookieless" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsCookieless" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCookieless As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCookieless { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-179">获取一个值，该值指示会话 ID 是嵌入在 URL 中还是存储在 HTTP Cookie 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-179">Gets a value indicating whether the session ID is embedded in the URL or stored in an HTTP cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-180">如果会话嵌入在 URL 中，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-180">
              <see langword="true" /> if the session is embedded in the URL; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f32d-181">ASP.NET 唯一地标识与每个浏览器会话。</span><span class="sxs-lookup"><span data-stu-id="1f32d-181">ASP.NET identifies sessions uniquely with each browser.</span></span> <span data-ttu-id="1f32d-182">默认情况下，会话的唯一标识符存储在浏览器中的永不过期会话 cookie。</span><span class="sxs-lookup"><span data-stu-id="1f32d-182">By default, the unique identifier for a session is stored in a non-expiring session cookie in the browser.</span></span> <span data-ttu-id="1f32d-183">你可以指定的会话标识符不会存储在一个 cookie 设置`cookieless`属性设为`true`配置元素中。</span><span class="sxs-lookup"><span data-stu-id="1f32d-183">You can specify that session identifiers not be stored in a cookie by setting the `cookieless` attribute to `true` in the  configuration element.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f32d-184">若要提高你的应用程序的安全性，你的应用程序应允许的用户注销，则应在哪个点调用<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f32d-184">To improve the security of your application, your application should allow users to log out, at which point it should call the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method.</span></span> <span data-ttu-id="1f32d-185">这减少了潜在不需要在 URL 中使用的唯一标识符检索存储在用户的会话中的私有数据源。</span><span class="sxs-lookup"><span data-stu-id="1f32d-185">This reduces the potential for an unwanted source using the unique identifier in the URL to retrieve private data stored in the session for a user.</span></span>  
  
 <span data-ttu-id="1f32d-186">ASP.NET 通过自动将唯一的会话 ID 插入到该页面的 URL 维护无 cookie 会话状态。</span><span class="sxs-lookup"><span data-stu-id="1f32d-186">ASP.NET maintains cookieless session state by automatically inserting a unique session ID into the page's URL.</span></span> <span data-ttu-id="1f32d-187">例如，ASP.NET 可以包括唯一的会话 ID lit3py55t21z5v55vlm25s55 被修改以下 URL:</span><span class="sxs-lookup"><span data-stu-id="1f32d-187">For example, the following URL has been modified by ASP.NET to include the unique session ID lit3py55t21z5v55vlm25s55:</span></span>  
  
```  
http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx  
```  
  
 <span data-ttu-id="1f32d-188">ASP.NET 修改通过在发送到浏览器的每一页之前的链接中嵌入会话 ID 值中所有请求的页面包含的链接。</span><span class="sxs-lookup"><span data-stu-id="1f32d-188">ASP.NET modifies the links contained in all requested pages by embedding a session-ID value in the links just before sending each page to the browser.</span></span> <span data-ttu-id="1f32d-189">只要用户遵循站点提供的链接的路径，将保持会话状态。</span><span class="sxs-lookup"><span data-stu-id="1f32d-189">Session state is maintained as long as the user follows the path of links that the site provides.</span></span> <span data-ttu-id="1f32d-190">但是，如果用户代理重写 URL，将会丢失会话状态实例。</span><span class="sxs-lookup"><span data-stu-id="1f32d-190">However, if the user agent rewrites a URL, the session-state instance will be lost.</span></span>  
  
 <span data-ttu-id="1f32d-191">之后的斜杠之后的应用程序名称和任何剩余的文件或虚拟目录标识符之前，将在 URL 中嵌入会话 ID。</span><span class="sxs-lookup"><span data-stu-id="1f32d-191">The session ID is embedded in the URL after the slash that follows the application name and before any remaining file or virtual-directory identifier.</span></span> <span data-ttu-id="1f32d-192">这使 ASP.NET 可以在涉及之前解决应用程序名称<xref:System.Web.SessionState.SessionStateModule>在请求中。</span><span class="sxs-lookup"><span data-stu-id="1f32d-192">This allows ASP.NET to resolve the application name before involving the <xref:System.Web.SessionState.SessionStateModule> in the request.</span></span>  
  
 <span data-ttu-id="1f32d-193">默认情况下，无 cookie 会话中使用的会话标识符都是回收。</span><span class="sxs-lookup"><span data-stu-id="1f32d-193">By default, session identifiers used in cookieless sessions are recycled.</span></span> <span data-ttu-id="1f32d-194">也就是说，如果已过期的会话 id 请求时，新的会话使用启动请求提供的会话 ID。</span><span class="sxs-lookup"><span data-stu-id="1f32d-194">That is, if a request is made with a session ID that has expired, a new session is started using the session ID supplied with the request.</span></span> <span data-ttu-id="1f32d-195">此行为可能导致不需要共享会话数据，当一个链接，以包含无 cookie 会话 ID 与共享多个浏览器，可能是通过搜索引擎或其他程序。</span><span class="sxs-lookup"><span data-stu-id="1f32d-195">This behavior can result in the unwanted sharing of session data when a link that contains a cookieless session ID is shared with multiple browsers, perhaps through a search engine or other program.</span></span> <span data-ttu-id="1f32d-196">你可以减少通过禁用会话标识符的回收共享的多个客户端的会话数据的可能性。</span><span class="sxs-lookup"><span data-stu-id="1f32d-196">You can reduce the possibility of session data being shared by multiple clients by disabling the recycling of session identifiers.</span></span> <span data-ttu-id="1f32d-197">若要执行此操作，将设置`regenerateExpiredSessionId`到的配置元素的属性`true`。</span><span class="sxs-lookup"><span data-stu-id="1f32d-197">To do this, set the `regenerateExpiredSessionId` attribute of the  configuration element to `true`.</span></span> <span data-ttu-id="1f32d-198">这将导致新的会话 ID 正在生成时无 cookie 会话请求替换过期的会话 id。</span><span class="sxs-lookup"><span data-stu-id="1f32d-198">This will result in a new session ID being generated when a cookieless session request is made with an expired session ID.</span></span> <span data-ttu-id="1f32d-199">请注意，如果过期的会话 id 发出的请求使用 HTTP`POST`方法，然后发送的所有数据都将丢失时`regenerateExpiredSessionId`是`true`，如 ASP.NET 执行重定向，以确保浏览器在 URL 中有新的会话标识符。</span><span class="sxs-lookup"><span data-stu-id="1f32d-199">Note that if the request made with the expired session ID uses the HTTP `POST` method, then any posted data will be lost when `regenerateExpiredSessionId` is `true`, as ASP.NET performs a redirect to ensure that the browser has the new session identifier in the URL.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f32d-200">虽然设置`regenerateExpiredSessionId`属性设为`true`减少了可能性不需要共享的会话数据，它不会保护对通过获取获得对另一个用户的会话的访问不需要源<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值和其包括在对服务器请求。</span><span class="sxs-lookup"><span data-stu-id="1f32d-200">While setting the `regenerateExpiredSessionId` attribute to `true` reduces the possibility of unwanted sharing of session data, it does not protect against an unwanted source gaining access to the session of another user by obtaining the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value and including it in requests to the server.</span></span> <span data-ttu-id="1f32d-201">如果要在会话状态中存储私有或敏感信息，建议使用 SSL 进行加密的浏览器和包括的服务器之间的任何通信<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>。</span><span class="sxs-lookup"><span data-stu-id="1f32d-201">If you are storing private or sensitive information in session state, it is recommended that you use SSL to encrypt any communication between the browser and server that includes the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f32d-202">下面的代码示例设置`cookieless`会话属性设置为 true 的 Web.config 文件中。</span><span class="sxs-lookup"><span data-stu-id="1f32d-202">The following code example sets the `cookieless` session attribute to true in the Web.config file.</span></span>  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      regenerateExpiredSessionId="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNewSession">
      <MemberSignature Language="C#" Value="public bool IsNewSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNewSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsNewSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNewSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNewSession { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-203">获取一个值，该值指示会话是否是与当前请求一起创建的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-203">Gets a value indicating whether the session was created with the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-204">如果会话是与当前请求一起创建的，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-204">
              <see langword="true" /> if the session was created with the current request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-205">获取一个值，该值指示会话是否为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-205">Gets a value indicating whether the session is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-206">如果会话为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-206">
              <see langword="true" /> if the session is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-207">获取一个值，该值指示对会话状态值的集合的访问是否是同步（线程安全）的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-207">Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-208">如果对该集合的访问是同步的（线程安全），则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-208">
              <see langword="true" /> if access to the collection is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-209">获取或设置个别会话值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-209">Gets or sets individual session values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1f32d-210">会话值的数字索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-210">The numerical index of the session value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f32d-211">按数字索引获取或设置会话值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-211">Gets or sets a session value by numerical index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-212">存储在指定索引处的会话状态值；如果该项不存在，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-212">The session-state value stored at the specified index, or <see langword="null" /> if the item does not exist.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1f32d-213">会话值的键名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-213">The key name of the session value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f32d-214">按名称获取或设置会话值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-214">Gets or sets a session value by name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-215">具有指定名称的会话状态值；如果该项不存在，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-215">The session-state value with the specified name, or <see langword="null" /> if the item does not exist.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As NameObjectCollectionBase.KeysCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ Keys { System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-216">获取存储在会话状态集合中所有值的键的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-216">Gets a collection of the keys for all values stored in the session-state collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-217">包含所有会话键的 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-217">The <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> that contains all the session keys.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-218">获取或设置当前会话的区域设置标识符 (LCID)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-218">Gets or sets the locale identifier (LCID) of the current session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-219">指定当前会话的区域性的 <see cref="T:System.Globalization.CultureInfo" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-219">A <see cref="T:System.Globalization.CultureInfo" /> instance that specifies the culture of the current session.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f32d-220"><xref:System.Web.SessionState.HttpSessionState.LCID%2A>以便兼容 ASP 的早期版本仅提供属性。</span><span class="sxs-lookup"><span data-stu-id="1f32d-220">The <xref:System.Web.SessionState.HttpSessionState.LCID%2A> property is provided for compatibility with earlier versions of ASP only.</span></span> <span data-ttu-id="1f32d-221">如果你不需要为了保持向后的兼容性 ASP 页，使用<xref:System.Globalization.CultureInfo.LCID%2A>属性改为。</span><span class="sxs-lookup"><span data-stu-id="1f32d-221">If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Globalization.CultureInfo.LCID%2A> property instead.</span></span>  
  
 <span data-ttu-id="1f32d-222">ASP.NET 不会在会话状态中存储的区域设置标识符。</span><span class="sxs-lookup"><span data-stu-id="1f32d-222">ASP.NET does not store the locale identifier in session state.</span></span> <span data-ttu-id="1f32d-223"><xref:System.Web.SessionState.HttpSessionState.LCID%2A>属性访问<xref:System.Globalization.CultureInfo.LCID%2A>属性来获取和设置的标识符。</span><span class="sxs-lookup"><span data-stu-id="1f32d-223">The <xref:System.Web.SessionState.HttpSessionState.LCID%2A> property accesses the <xref:System.Globalization.CultureInfo.LCID%2A> property to get and set the identifier.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.SessionStateMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SessionState.SessionStateMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As SessionStateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::SessionStateMode Mode { System::Web::SessionState::SessionStateMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-224">获取当前会话状态模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-224">Gets the current session-state mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-225">
            <see cref="T:System.Web.SessionState.SessionStateMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-225">One of the <see cref="T:System.Web.SessionState.SessionStateMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f32d-226">有关如何配置用于服务器信息<xref:System.Web.SessionState.SessionStateMode.StateServer>或<xref:System.Web.SessionState.SessionStateMode.SQLServer>会话状态存储，请参阅[ASP.NET 会话状态概述](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc)。</span><span class="sxs-lookup"><span data-stu-id="1f32d-226">For information about how to configure your server for <xref:System.Web.SessionState.SessionStateMode.StateServer> or <xref:System.Web.SessionState.SessionStateMode.SQLServer> session-state storage, see [ASP.NET Session State Overview](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f32d-227">下面的代码示例设置`mode`会话属性设置为<xref:System.Web.SessionState.SessionStateMode.SQLServer>Web.config 文件中。</span><span class="sxs-lookup"><span data-stu-id="1f32d-227">The following code example sets the `mode` session attribute to <xref:System.Web.SessionState.SessionStateMode.SQLServer> in the Web.config file.</span></span> <span data-ttu-id="1f32d-228">对于 SQL Server 会话模式，`sqlConnectionString`属性也是必填。</span><span class="sxs-lookup"><span data-stu-id="1f32d-228">For SQL Server session mode, the `sqlConnectionString` attribute is also required.</span></span>  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="SQLServer"  
      sqlConnectionString="Data Source=localhost;Integrated Security=SSPI"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1f32d-229">要从会话状态集合中删除的项的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-229">The name of the item to delete from the session-state collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f32d-230">从会话状态集合中删除某项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-230">Deletes an item from the session-state collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f32d-231">如果会话状态集合不包含具有指定的元素`name`，集合保持不变。</span><span class="sxs-lookup"><span data-stu-id="1f32d-231">If the session-state collection does not contain an element with the specified `name`, the collection remains unchanged.</span></span> <span data-ttu-id="1f32d-232">不引发异常。</span><span class="sxs-lookup"><span data-stu-id="1f32d-232">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f32d-233">下面的示例演示如何使用在会话状态中存储值<xref:System.Web.SessionState.HttpSessionState.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f32d-233">The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method.</span></span> <span data-ttu-id="1f32d-234">它还演示如何通过在会话状态中移除值<xref:System.Web.SessionState.HttpSessionState.Remove%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f32d-234">It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method.</span></span> <span data-ttu-id="1f32d-235">A<xref:System.Web.UI.WebControls.Repeater>控件用于在网页上显示的会话状态的内容。</span><span class="sxs-lookup"><span data-stu-id="1f32d-235">A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page.</span></span> <span data-ttu-id="1f32d-236"><xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A>方法用于循环访问会话状态集合并填充<xref:System.Web.UI.WebControls.Repeater>控件。</span><span class="sxs-lookup"><span data-stu-id="1f32d-236">The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.</span></span>  
  
 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-237">从会话状态集合中删除所有键和值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-237">Removes all keys and values from the session-state collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f32d-238"><xref:System.Web.SessionState.HttpSessionState.RemoveAll%2A> 执行与相同的功能<xref:System.Web.SessionState.HttpSessionState.Clear%2A>。</span><span class="sxs-lookup"><span data-stu-id="1f32d-238"><xref:System.Web.SessionState.HttpSessionState.RemoveAll%2A> performs the same function as <xref:System.Web.SessionState.HttpSessionState.Clear%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1f32d-239">要从会话状态集合中删除的项的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-239">The index of the item to remove from the session-state collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f32d-240">删除会话状态集合中指定索引处的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-240">Deletes an item at a specified index from the session-state collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1f32d-241">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-241">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1f32d-242">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-242">\- or -</span>
          </span>
          <span data-ttu-id="1f32d-243">
            <paramref name="index" /> 等于或大于 <see cref="P:System.Web.SessionState.HttpSessionState.Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-243">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Web.SessionState.HttpSessionState.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SessionID">
      <MemberSignature Language="C#" Value="public string SessionID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SessionID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-244">获取会话的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-244">Gets the unique identifier for the session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-245">会话的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-245">The unique session identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f32d-246"><xref:System.Web.SessionState.HttpSessionState.SessionID%2A>属性用于唯一标识与服务器上的会话数据的浏览器。</span><span class="sxs-lookup"><span data-stu-id="1f32d-246">The <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> property is used to uniquely identify a browser with session data on the server.</span></span> <span data-ttu-id="1f32d-247"><xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值是随机由 ASP.NET 生成并存储在浏览器中的永不过期会话 cookie。</span><span class="sxs-lookup"><span data-stu-id="1f32d-247">The <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value is randomly generated by ASP.NET and stored in a non-expiring session cookie in the browser.</span></span> <span data-ttu-id="1f32d-248"><xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值然后会在具有 ASP.NET 应用程序的每个请求的 cookie 发送。</span><span class="sxs-lookup"><span data-stu-id="1f32d-248">The <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value is then sent in a cookie with each request to the ASP.NET application.</span></span>  
  
 <span data-ttu-id="1f32d-249">如果你想要禁用使用 ASP.NET 应用程序中的 cookie 和仍使用的会话状态，您可以配置你应用程序，可以通过设置 URL 而不是一个 cookie 中存储的会话标识符`cookieless`配置的属性元素`true`，或<xref:System.Web.HttpCookieMode.UseUri>，你的应用程序的 Web.config 文件中。</span><span class="sxs-lookup"><span data-stu-id="1f32d-249">If you want to disable the use of cookies in your ASP.NET application and still make use of session state, you can configure your application to store the session identifier in the URL instead of a cookie by setting the `cookieless` attribute of the  configuration element to `true`, or to <xref:System.Web.HttpCookieMode.UseUri>, in the Web.config file for your application.</span></span> <span data-ttu-id="1f32d-250">你可以确定是否 cookie 支持的浏览器通过指定的值的 ASP.NET<xref:System.Web.HttpCookieMode.UseDeviceProfile>为`cookieless`属性。</span><span class="sxs-lookup"><span data-stu-id="1f32d-250">You can have ASP.NET determine whether cookies are supported by the browser by specifying a value of <xref:System.Web.HttpCookieMode.UseDeviceProfile> for the `cookieless` attribute.</span></span> <span data-ttu-id="1f32d-251">你还可以确定是否启用 cookie 的浏览器通过指定的值的 ASP.NET<xref:System.Web.HttpCookieMode.AutoDetect>为`cookieless`属性。</span><span class="sxs-lookup"><span data-stu-id="1f32d-251">You can also have ASP.NET determine whether cookies are enabled for the browser by specifying a value of <xref:System.Web.HttpCookieMode.AutoDetect> for the `cookieless` attribute.</span></span> <span data-ttu-id="1f32d-252">如果支持 cookie，则当<xref:System.Web.HttpCookieMode.UseDeviceProfile>指定，或时，将启用<xref:System.Web.HttpCookieMode.AutoDetect>指定，则标识符将存储在一个 cookie，否则为该会话将在 URL 中存储的会话标识符。</span><span class="sxs-lookup"><span data-stu-id="1f32d-252">If cookies are supported when <xref:System.Web.HttpCookieMode.UseDeviceProfile> is specified, or enabled when <xref:System.Web.HttpCookieMode.AutoDetect> is specified, then the session identifier will be stored in a cookie; otherwise the session identifier will be stored in the URL.</span></span> <span data-ttu-id="1f32d-253">有关更多信息，请参见 <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="1f32d-253">For more information, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property.</span></span>  
  
 <span data-ttu-id="1f32d-254"><xref:System.Web.SessionState.HttpSessionState.SessionID%2A>服务器和浏览器之间以明文形式发送，在一个 cookie 中或在 URL 中。</span><span class="sxs-lookup"><span data-stu-id="1f32d-254">The <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> is sent between the server and the browser in clear text, either in a cookie or in the URL.</span></span> <span data-ttu-id="1f32d-255">因此，不需要的源能获得访问权限的会话的另一个用户，通过获取<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值并将其包括在向服务器请求中。</span><span class="sxs-lookup"><span data-stu-id="1f32d-255">As a result, an unwanted source could gain access to the session of another user by obtaining the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value and including it in requests to the server.</span></span> <span data-ttu-id="1f32d-256">如果要在会话状态中存储私有或敏感信息，建议使用 SSL 进行加密的浏览器和包括的服务器之间的任何通信<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>。</span><span class="sxs-lookup"><span data-stu-id="1f32d-256">If you are storing private or sensitive information in session state, it is recommended that you use SSL to encrypt any communication between the browser and server that includes the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.</span></span>  
  
 <span data-ttu-id="1f32d-257">在使用基于 cookie 的会话状态时，ASP.NET 不会分配存储之前的会话数据<xref:System.Web.UI.Page.Session%2A>使用对象。</span><span class="sxs-lookup"><span data-stu-id="1f32d-257">When using cookie-based session state, ASP.NET does not allocate storage for session data until the <xref:System.Web.UI.Page.Session%2A> object is used.</span></span> <span data-ttu-id="1f32d-258">因此，新的会话 ID 为生成每个页请求访问的会话对象之前。</span><span class="sxs-lookup"><span data-stu-id="1f32d-258">As a result, a new session ID is generated for each page request until the session object is accessed.</span></span> <span data-ttu-id="1f32d-259">如果你的应用程序为整个会话需要一个静态会话 ID，则可以实现`Session_Start`方法在应用程序的 Global.asax 文件和存储中的数据中<xref:System.Web.UI.Page.Session%2A>对象修复的会话 ID，也可以使用中的另一部分的代码你的应用程序中的数据，从而显式存储<xref:System.Web.UI.Page.Session%2A>对象。</span><span class="sxs-lookup"><span data-stu-id="1f32d-259">If your application requires a static session ID for the entire session, you can either implement the `Session_Start` method in the application's Global.asax file and store data in the <xref:System.Web.UI.Page.Session%2A> object to fix the session ID, or you can use code in another part of your application to explicitly store data in the <xref:System.Web.UI.Page.Session%2A> object.</span></span>  
  
 <span data-ttu-id="1f32d-260">如果你的应用程序使用无 cookie 会话状态，会话 ID 的第一个的页视图上生成，并且会保留为整个会话。</span><span class="sxs-lookup"><span data-stu-id="1f32d-260">If your application uses cookieless session state, the session ID is generated on the first page view and is maintained for the entire session.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f32d-261">下面的代码示例演示配置会话状态用于无 cookie 会话标识符的 Web.config 文件。</span><span class="sxs-lookup"><span data-stu-id="1f32d-261">The following code example shows a Web.config file that configures session state to use cookieless session identifiers.</span></span> <span data-ttu-id="1f32d-262">有关更多信息，请参见 <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="1f32d-262">For more information, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property.</span></span>  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      cookieless="true"  
      regenerateExpiredSessionId="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public System.Web.HttpStaticObjectsCollection StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollection StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticObjects As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpStaticObjectsCollection ^ StaticObjects { System::Web::HttpStaticObjectsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-263">获取由 ASP.NET 应用程序文件 Global.asax 中的 <see langword="&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;" /> 标记声明的对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-263">Gets a collection of objects declared by <see langword="&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;" /> tags within the ASP.NET application file Global.asax.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-264">一个 <see cref="T:System.Web.HttpStaticObjectsCollection" />，它包含在 Global.asax 文件中声明的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-264">An <see cref="T:System.Web.HttpStaticObjectsCollection" /> containing objects declared in the Global.asax file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f32d-265">如果页面上的对象不支持序列化和<xref:System.Web.SessionState.HttpSessionState.Mode%2A>是进程外 (<xref:System.Web.SessionState.SessionStateMode.SQLServer>或<xref:System.Web.SessionState.SessionStateMode.StateServer>)，该对象将不会创建，并且将不会添加到此集合。</span><span class="sxs-lookup"><span data-stu-id="1f32d-265">If an object on a page does not support serialization and <xref:System.Web.SessionState.HttpSessionState.Mode%2A> is out-of-process (<xref:System.Web.SessionState.SessionStateMode.SQLServer> or <xref:System.Web.SessionState.SessionStateMode.StateServer>), the object will not be created and will not be added to this collection.</span></span>  
  
 <span data-ttu-id="1f32d-266"><xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A>属性提供为了与 ASP 的早期版本兼容。</span><span class="sxs-lookup"><span data-stu-id="1f32d-266">The <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> property is provided for compatibility with earlier versions of ASP.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f32d-267">下面的代码示例列表`id`和中的对象的对象类型<xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="1f32d-267">The following code example lists the `id` and object type of the objects in the <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> collection.</span></span>  
  
 [!code-csharp[HttpSessionState#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#10)]
 [!code-vb[HttpSessionState#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-268">获取一个对象，可使用该对象同步会话状态值的集合的访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-268">Gets an object that can be used to synchronize access to the collection of session-state values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-269">可用于同步集合访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-269">An object that can be used to synchronize access to the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f32d-270">获取并设置在会话状态提供程序终止会话之前各请求之间所允许的时间（以分钟为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-270">Gets and sets the amount of time, in minutes, allowed between requests before the session-state provider terminates the session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f32d-271">超时时间（以分钟为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f32d-271">The time-out period, in minutes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f32d-272"><xref:System.Web.SessionState.HttpSessionState.Timeout%2A>属性可以在应用程序中使用的 Web.config 文件中设置`timeout`属性的配置元素，也可以设置<xref:System.Web.SessionState.HttpSessionState.Timeout%2A>直接使用应用程序代码的属性值。</span><span class="sxs-lookup"><span data-stu-id="1f32d-272">The <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> property can be set in the Web.config file for an application using the `timeout` attribute of the  configuration element, or you can set the <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> property value directly using application code.</span></span>  
  
 <span data-ttu-id="1f32d-273"><xref:System.Web.SessionState.HttpSessionState.Timeout%2A>属性不能设置为一个值大于 525600 分钟 （1 年）。</span><span class="sxs-lookup"><span data-stu-id="1f32d-273">The <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> property cannot be set to a value greater than 525,600 minutes (1 year).</span></span> <span data-ttu-id="1f32d-274">默认值为 20 分钟。</span><span class="sxs-lookup"><span data-stu-id="1f32d-274">The default value is 20 minutes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f32d-275">下面的代码示例设置`timeout`到 30 分钟的 Web.config 文件中的会话属性。</span><span class="sxs-lookup"><span data-stu-id="1f32d-275">The following code example sets the `timeout` session attribute to 30 minutes in the Web.config file.</span></span>  
  
```  
<configuration>  
  <system.web>  
    <sessionState   
      mode="InProc"  
      cookieless="true"  
      timeout="30" />  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>