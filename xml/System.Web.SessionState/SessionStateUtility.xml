<Type Name="SessionStateUtility" FullName="System.Web.SessionState.SessionStateUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="48368fcc6917f4072fc2702d797b46b8d611f8ca" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39867118" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class SessionStateUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SessionStateUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionStateUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type SessionStateUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供会话状态模块和会话状态存储提供程序使用的 Helper 方法，为 ASP.NET 应用程序管理会话信息。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateUtility>类提供了会话状态模块或会话状态存储提供程序所使用的静态帮助器方法。 应用程序开发人员将不需要从其代码中调用这些方法。  
  
 下表介绍会话状态模块和会话状态存储提供程序使用的方法的方法。  
  
|方法|用途|  
|------------|---------|  
|<xref:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext%2A> 方法|可以通过自定义会话状态模块使用，以检索现有会话的会话信息或创建新的会话的会话信息。|  
|<xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> 方法|要添加到当前会话数据的会话状态模块通过调用<xref:System.Web.HttpContext>并将提供给应用程序代码中通过<xref:System.Web.HttpContext.Session%2A>属性。|  
|<xref:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext%2A> 方法|调用的过程的会话状态模块<xref:System.Web.HttpApplication.ReleaseRequestState>或<xref:System.Web.HttpApplication.EndRequest>事件的请求，以清除从当前会话数据末尾<xref:System.Web.HttpContext>。|  
|<xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> 方法|要获取对引用的会话状态模块由调用<xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A>根据 Global.asax 文件中定义的对象的集合。 <xref:System.Web.HttpStaticObjectsCollection>返回的集合是包含与添加到当前的会话数据<xref:System.Web.HttpContext>。|  
  
 传递给和检索从当前会话数据<xref:System.Web.HttpContext>作为<xref:System.Web.SessionState.HttpSessionStateContainer>对象或任何有效的实现的<xref:System.Web.SessionState.IHttpSessionState>接口。  
  
 有关实现的会话状态存储提供程序的信息，请参阅[实现会话状态存储提供程序](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。  
  
   
  
## Examples  
 下面的代码示例显示了将会话信息存储在内存中使用的自定义会话状态模块实现<xref:System.Collections.Hashtable>。 该模块使用<xref:System.Web.SessionState.SessionStateUtility>类来引用当前<xref:System.Web.HttpContext>并<xref:System.Web.SessionState.SessionIDManager>，检索当前<xref:System.Web.HttpStaticObjectsCollection>，并引发**Session_OnEnd**为 ASP.NET Global.asax 文件中定义的事件应用程序。 此应用程序不会阻止同步的 Web 请求使用相同的会话标识符。  
  
 [!code-csharp[System.Web.SessionState.SessionStateUtility#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/CS/mysessionstatemodule.cs#1)]
 [!code-vb[System.Web.SessionState.SessionStateUtility#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/VB/mysessionstatemodule.vb#1)]  
  
 若要在 ASP.NET 应用程序中使用此自定义会话状态模块，你可以替换现有<xref:System.Web.SessionState.SessionStateModule>引用在 Web.config 文件中，如下面的示例中所示。  
  
```  
<configuration>  
  <system.web>  
    <httpModules>  
      <remove name="Session" />  
      <add name="Session"  
      type="Samples.AspNet.SessionState.MySessionStateModule" />  
    </httpModules>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHttpSessionStateToContext">
      <MemberSignature Language="C#" Value="public static void AddHttpSessionStateToContext (System.Web.HttpContext context, System.Web.SessionState.IHttpSessionState container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHttpSessionStateToContext(class System.Web.HttpContext context, class System.Web.SessionState.IHttpSessionState container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddHttpSessionStateToContext (context As HttpContext, container As IHttpSessionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddHttpSessionStateToContext(System::Web::HttpContext ^ context, System::Web::SessionState::IHttpSessionState ^ container);" />
      <MemberSignature Language="F#" Value="static member AddHttpSessionStateToContext : System.Web.HttpContext * System.Web.SessionState.IHttpSessionState -&gt; unit" Usage="System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext (context, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="container" Type="System.Web.SessionState.IHttpSessionState" />
      </Parameters>
      <Docs>
        <param name="context">要在其中添加 <see cref="T:System.Web.HttpContext" /> 对象的 <see cref="T:System.Web.SessionState.HttpSessionState" /> 对象。</param>
        <param name="container">要在其中添加指定 HTTP 上下文的 <see cref="T:System.Web.SessionState.IHttpSessionState" /> 实现实例。</param>
        <summary>把会话数据应用到当前请求的上下文。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>会话状态模块使用方法要应用于当前请求的会话数据。 期间将发生这种情况<xref:System.Web.HttpApplication.AcquireRequestState>请求的开始处的事件。 当前请求的会话数据检索现有的会话，或者创建一个新的会话。 会话数据然后封装在<xref:System.Web.SessionState.IHttpSessionState>实现实例，传递给<xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>方法以及当前<xref:System.Web.HttpContext>。 提供的会话数据然后将提供给应用程序代码中通过<xref:System.Web.HttpContext.Session%2A>当前上下文的属性。  
  
   
  
## Examples  
 下面的代码示例演示的处理程序<xref:System.Web.HttpApplication.AcquireRequestState>自定义会话状态模块中的事件。 自定义模块检索现有的会话信息或创建新的会话信息，并使用<xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>方法以将其添加到<xref:System.Web.HttpContext>当前请求。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.SessionState.SessionStateUtility>类。  
  
 [!code-csharp[System.Web.SessionState.SessionStateUtility#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/CS/mysessionstatemodule.cs#4)]
 [!code-vb[System.Web.SessionState.SessionStateUtility#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/VB/mysessionstatemodule.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">当前会话的 <see cref="T:System.Web.SessionState.HttpSessionState" /> 对象已添加到指定的 <paramref name="context" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHttpSessionStateFromContext">
      <MemberSignature Language="C#" Value="public static System.Web.SessionState.IHttpSessionState GetHttpSessionStateFromContext (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.SessionState.IHttpSessionState GetHttpSessionStateFromContext(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHttpSessionStateFromContext (context As HttpContext) As IHttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::SessionState::IHttpSessionState ^ GetHttpSessionStateFromContext(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetHttpSessionStateFromContext : System.Web.HttpContext -&gt; System.Web.SessionState.IHttpSessionState" Usage="System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.IHttpSessionState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">要从中检索会话数据的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>从当前请求的上下文检索会话数据。</summary>
        <returns>根据当前请求填充了会话数据的 <see cref="T:System.Web.SessionState.IHttpSessionState" /> 实现实例。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext%2A>方法可以由会话状态模块以从当前请求中检索会话数据。 期间将发生这种情况<xref:System.Web.HttpApplication.ReleaseRequestState>请求结束时的事件。 返回的会话数据然后写入会话数据存储区。 如果已放弃该会话，可以从数据存储中删除的会话数据和<xref:System.Web.HttpContext>，并**Session_OnEnd**可以执行事件。  
  
   
  
## Examples  
 下面的代码示例演示的处理程序<xref:System.Web.HttpApplication.ReleaseRequestState>自定义会话状态模块中的事件。 该模块检索会话数据从<xref:System.Web.HttpContext>有关当前请求使用<xref:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext%2A>方法。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.SessionState.SessionStateUtility>类。  
  
 [!code-csharp[System.Web.SessionState.SessionStateUtility#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/CS/mysessionstatemodule.cs#5)]
 [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/VB/mysessionstatemodule.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>可以使用<see cref="M:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(System.Web.HttpContext)" />方法移除会话数据从内部存储区，并<see cref="M:System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)" />方法来引发<see langword="Session_OnEnd" />事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetSessionStaticObjects">
      <MemberSignature Language="C#" Value="public static System.Web.HttpStaticObjectsCollection GetSessionStaticObjects (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpStaticObjectsCollection GetSessionStaticObjects(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSessionStaticObjects (context As HttpContext) As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpStaticObjectsCollection ^ GetSessionStaticObjects(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSessionStaticObjects : System.Web.HttpContext -&gt; System.Web.HttpStaticObjectsCollection" Usage="System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">要从其中获取静态对象集合的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>引用指定上下文的静态对象集合。</summary>
        <returns>填充了指定 <see cref="T:System.Web.HttpStaticObjectsCollection" /> 的 <see cref="P:System.Web.SessionState.HttpSessionState.StaticObjects" /> 属性值的 <see cref="T:System.Web.HttpContext" /> 集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>方法用于检索在 ASP.NET 应用程序的 Global.asax 文件中定义的静态对象的集合。 会话状态模块实现将提供返回<xref:System.Web.HttpStaticObjectsCollection>到集合<xref:System.Web.SessionState.IHttpSessionState>添加到当前上下文使用的实现实例<xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>方法。  
  
 一个<xref:System.Web.SessionState.SessionStateStoreProviderBase>还可以使用<xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>方法创建时<xref:System.Web.SessionState.SessionStateStoreData>对象。  
  
   
  
## Examples  
 下面的代码示例演示的处理程序<xref:System.Web.HttpApplication.AcquireRequestState>自定义会话状态模块中的事件。 该模块检索现有的会话信息或者创建新的会话信息，包括<xref:System.Web.HttpStaticObjectsCollection>从返回的集合<xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>方法，并将其添加到<xref:System.Web.HttpContext>当前请求。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.SessionState.SessionStateUtility>类。  
  
 [!code-csharp[System.Web.SessionState.SessionStateUtility#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/CS/mysessionstatemodule.cs#4)]
 [!code-vb[System.Web.SessionState.SessionStateUtility#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/VB/mysessionstatemodule.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSessionStateReadOnly">
      <MemberSignature Language="C#" Value="public static bool IsSessionStateReadOnly (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSessionStateReadOnly(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSessionStateReadOnly (context As HttpContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSessionStateReadOnly(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="static member IsSessionStateReadOnly : System.Web.HttpContext -&gt; bool" Usage="System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">指定要检查的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>获取一个值，该值指示对于指定 <see cref="T:System.Web.HttpContext" /> 的会话状态是否为只读。</summary>
        <returns>如果会话状态为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSessionStateRequired">
      <MemberSignature Language="C#" Value="public static bool IsSessionStateRequired (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSessionStateRequired(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSessionStateRequired (context As HttpContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSessionStateRequired(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="static member IsSessionStateRequired : System.Web.HttpContext -&gt; bool" Usage="System.Web.SessionState.SessionStateUtility.IsSessionStateRequired context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">指定要检查的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>获取一个值，该值指示指定的 <see cref="T:System.Web.HttpContext" /> 是否需要会话状态。</summary>
        <returns>如果需要会话状态，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseSessionEnd">
      <MemberSignature Language="C#" Value="public static void RaiseSessionEnd (System.Web.SessionState.IHttpSessionState session, object eventSource, EventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RaiseSessionEnd(class System.Web.SessionState.IHttpSessionState session, object eventSource, class System.EventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RaiseSessionEnd(System::Web::SessionState::IHttpSessionState ^ session, System::Object ^ eventSource, EventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member RaiseSessionEnd : System.Web.SessionState.IHttpSessionState * obj * EventArgs -&gt; unit" Usage="System.Web.SessionState.SessionStateUtility.RaiseSessionEnd (session, eventSource, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="System.Web.SessionState.IHttpSessionState" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="session">已结束的会话的 <see cref="T:System.Web.SessionState.IHttpSessionState" /> 实现实例。</param>
        <param name="eventSource">要提供给 <see langword="Session_OnEnd" /> 事件的事件源对象。</param>
        <param name="eventArgs">要提供给 <see langword="Session_OnEnd" /> 事件的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>为 ASP.NET 应用程序执行 Global.asax 文件中定义的 Session_OnEnd 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateUtility.RaiseSessionEnd%2A>会话状态模块使用方法来执行**Session_OnEnd** ASP.NET 应用程序的 Global.asax 文件中定义的事件。 会话状态模块将调用<xref:System.Web.SessionState.SessionStateUtility.RaiseSessionEnd%2A>方法时已放弃会话，或如果会话过期。  
  
   
  
## Examples  
 下面的代码示例演示的处理程序<xref:System.Web.HttpApplication.ReleaseRequestState>自定义会话状态模块中的事件。 如果已放弃该会话，该模块执行**Session_OnEnd**应用程序使用 Global.asax 文件中定义的事件<xref:System.Web.SessionState.SessionStateUtility.RaiseSessionEnd%2A>方法。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.SessionState.SessionStateUtility>类。  
  
 [!code-csharp[System.Web.SessionState.SessionStateUtility#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/CS/mysessionstatemodule.cs#5)]
 [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/VB/mysessionstatemodule.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHttpSessionStateFromContext">
      <MemberSignature Language="C#" Value="public static void RemoveHttpSessionStateFromContext (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveHttpSessionStateFromContext(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveHttpSessionStateFromContext (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveHttpSessionStateFromContext(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="static member RemoveHttpSessionStateFromContext : System.Web.HttpContext -&gt; unit" Usage="System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">要从其中移除会话数据的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>从指定上下文中移除会话数据。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext%2A>方法将清除从指定的会话数据<xref:System.Web.HttpContext>。 会话状态模块将调用<xref:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext%2A>中的处理程序方法<xref:System.Web.HttpApplication.ReleaseRequestState>事件。  
  
   
  
## Examples  
 下面的代码示例演示的处理程序<xref:System.Web.HttpApplication.ReleaseRequestState>自定义会话状态模块中的事件。 事件处理程序中移除会话数据从当前<xref:System.Web.HttpContext>。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.SessionState.SessionStateUtility>类。  
  
 [!code-csharp[System.Web.SessionState.SessionStateUtility#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/CS/mysessionstatemodule.cs#5)]
 [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/VB/mysessionstatemodule.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationSurrogateSelector">
      <MemberSignature Language="C#" Value="public static System.Runtime.Serialization.ISurrogateSelector SerializationSurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Runtime.Serialization.ISurrogateSelector SerializationSurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SerializationSurrogateSelector As ISurrogateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Serialization::ISurrogateSelector ^ SerializationSurrogateSelector { System::Runtime::Serialization::ISurrogateSelector ^ get(); void set(System::Runtime::Serialization::ISurrogateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializationSurrogateSelector : System.Runtime.Serialization.ISurrogateSelector with get, set" Usage="System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于会话串行自定义的的串行代理选择器。</summary>
        <value>序列化代理项选择器。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>