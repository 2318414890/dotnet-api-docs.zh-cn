<Type Name="SessionStateModule" FullName="System.Web.SessionState.SessionStateModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b549c7a1be7c096f04eba5f1a2892d23feb6b76c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30549131" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SessionStateModule : System.Web.SessionState.ISessionStateModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SessionStateModule extends System.Object implements class System.Web.IHttpModule, class System.Web.SessionState.ISessionStateModule" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateModule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SessionStateModule&#xA;Implements ISessionStateModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateModule sealed : System::Web::SessionState::ISessionStateModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.SessionState.ISessionStateModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>为应用程序提供会话状态服务。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> 是 ASP。NET 的默认会话状态处理程序。 它可将会话数据写入和从会话状态存储和引发检索**Session_OnStart**和**Session_OnEnd**事件。 有关如何使用 ASP.NET 会话状态存储和检索值的用户会话的详细信息，请参阅[ASP.NET 会话状态概述](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc)。  
  
 你可以替换<xref:System.Web.SessionState.SessionStateModule>的自定义实现<xref:System.Web.IHttpModule>管理会话状态的接口。 有关自定义会话状态模块的示例，请参阅<xref:System.Web.SessionState.SessionStateUtility>类概述。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionStateModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionStateModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.SessionState.SessionStateModule" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数不应从应用程序代码中调用。  
  
 <xref:System.Web.HttpApplication> ASP.NET 应用程序启动时创建对象。 <xref:System.Web.HttpApplication>对象调用<xref:System.Web.SessionState.SessionStateModule>构造函数来创建<xref:System.Web.SessionState.SessionStateModule>应用程序的对象。 <xref:System.Web.SessionState.SessionStateModule>应用程序配置中指定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateModule.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在从内存释放 <see cref="T:System.Web.SessionState.SessionStateModule" /> 对象之前执行最终的清理代码。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不应从应用程序代码中调用。  
  
 <xref:System.Web.HttpApplication> ASP.NET 应用程序启动时创建对象。 <xref:System.Web.HttpApplication>对象创建并初始化<xref:System.Web.SessionState.SessionStateModule>对象的应用程序和调用<xref:System.Web.SessionState.SessionStateModule.Dispose%2A>方法释放的对象时。 <xref:System.Web.SessionState.SessionStateModule>应用程序配置中指定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public event EventHandler End;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler End" />
      <MemberSignature Language="DocId" Value="E:System.Web.SessionState.SessionStateModule.End" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event End As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ End;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在会话结束时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule.End>请求末尾引发事件时<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>调用方法或会话已过期。 会话过期时的分钟数指定<xref:System.Web.SessionState.HttpSessionState.Timeout%2A>没有请求正在进行的会话，将传递属性。  
  
 **Session_OnEnd**事件用于执行任何清理工作，如释放资源由会话的会话。  
  
 你可以指定的处理程序<xref:System.Web.SessionState.SessionStateModule.End>事件通过添加一个名为的公共子例程**Session_OnEnd**到 Global.asax 文件。  
  
> [!NOTE]
>  **Session_OnEnd**事件才会支持时，会话状态<xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=nameWithType>属性值是<xref:System.Web.SessionState.SessionStateMode.InProc>，这是默认设置。 如果会话状态<xref:System.Web.SessionState.HttpSessionState.Mode%2A>设置为<xref:System.Web.SessionState.SessionStateMode.StateServer>或<xref:System.Web.SessionState.SessionStateMode.SQLServer>，则**Session_OnEnd** Global.asax 文件中的事件将被忽略。 如果会话状态<xref:System.Web.SessionState.HttpSessionState.Mode%2A>属性值是<xref:System.Web.SessionState.SessionStateMode.Custom>，然后支持**Session_OnEnd**事件由自定义会话状态存储提供程序。  
  
 尽管<xref:System.Web.SessionState.SessionStateModule.End>事件是公用的你可以通过在 Global.asax 文件中添加事件处理程序仅处理。 因为实现此限制<xref:System.Web.HttpApplication>实例中的性能将重用。 当会话过期时，仅**Session_OnEnd** Global.asax 文件中指定的事件执行时，阻止调用代码<xref:System.Web.SessionState.SessionStateModule.End>与关联的事件处理程序<xref:System.Web.HttpApplication>当前正在使用的实例。  
  
 有关 Global.asax 文件的详细信息，请参阅[Global.asax 语法](http://msdn.microsoft.com/library/9ade9d4d-4d52-4e88-af52-53a9ffa26582)。  
  
   
  
## Examples  
 下面的代码示例演示具有的 Global.asax 文件的内容**Session_OnStart**和**Session_OnEnd**定义事件。  
  
```vb  
<script language="VB" runat="server">  
Public Sub Session_OnStart()  
  
End Sub  
  
Public Sub Session_OnEnd()  
  
End Sub  
</script>  
```  
  
```csharp  
<script language="C#" runat="server">  
public void Session_OnStart()  
{  
  
}  
  
public void Session_OnEnd()  
{  
  
}  
</script>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Init (app As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::HttpApplication ^ app);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Init(System.Web.HttpApplication)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">当前应用程序。</param>
        <summary>在创建 <see cref="T:System.Web.SessionState.SessionStateModule" /> 对象时调用初始化代码。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不应从应用程序代码中调用。  
  
 <xref:System.Web.HttpApplication>启动 ASP.NET 应用程序时创建。 <xref:System.Web.HttpApplication>对象调用<xref:System.Web.SessionState.SessionStateModule.Init%2A>方法在创建时<xref:System.Web.SessionState.SessionStateModule>应用程序的对象。 <xref:System.Web.SessionState.SessionStateModule>类指定应用程序的配置中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">[sessionState 元素（ASP.NET 设置架构）](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)配置元素中的 <see langword="mode" /> 特性被设置为 <see cref="F:System.Web.SessionState.SessionStateMode.StateServer" /> 或 <see cref="F:System.Web.SessionState.SessionStateMode.SQLServer" />，并且 ASP.NET 应用程序具有的信任少于 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">[sessionState 元素（ASP.NET 设置架构）](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)配置元素中的 <see langword="mode" /> 特性被设置为 <see cref="F:System.Web.SessionState.SessionStateMode.Custom" />，并且 <see langword="customProvider" /> 特性为空或不存在。  
  
 或  
  
 [sessionState 元素（ASP.NET 设置架构）](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)配置元素中的 <see langword="mode" /> 特性被设置为 <see cref="F:System.Web.SessionState.SessionStateMode.Custom" />，并且 <see langword="customProvider" /> 特性中名称所标识的提供程序未添加到 [sessionState 的 providers 元素（ASP.NET 设置架构）](http://msdn.microsoft.com/library/219d6778-9fb8-48ac-810d-bec68cf7d6aa)子元素。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseSessionState">
      <MemberSignature Language="C#" Value="public void ReleaseSessionState (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseSessionState(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseSessionState (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseSessionState(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionStateModule.ReleaseSessionState(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">要释放其会话状态的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>释放指定 <see cref="T:System.Web.HttpContext" /> 的会话状态。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseSessionStateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ReleaseSessionStateAsync (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ReleaseSessionStateAsync(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReleaseSessionStateAsync (context As HttpContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ReleaseSessionStateAsync(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">要释放其会话状态的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>以异步方式释放指定 <see cref="T:System.Web.HttpContext" /> 的会话状态。</summary>
        <returns>异步操作的 <see cref="T:System.Threading.Tasks.Task" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public event EventHandler Start;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Start" />
      <MemberSignature Language="DocId" Value="E:System.Web.SessionState.SessionStateModule.Start" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Start As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Start;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>创建会话时发生的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule.Start>新会话启动时，请求的开始处引发的事件。 如果发出请求，其中不包含会话标识符、 会话标识符无效，或已过期的会话标识符与关联的会话，启动新会话。  
  
 **Session_OnStart**事件用于执行任何初始化工作，如设置会话变量的默认值的会话。  
  
 你可以指定的处理程序<xref:System.Web.SessionState.SessionStateModule.Start>事件通过添加一个名为的公共子例程**Session_OnStart**到 Global.asax 文件。  
  
 有关 Global.asax 文件的详细信息，请参阅[Global.asax 语法](http://msdn.microsoft.com/library/9ade9d4d-4d52-4e88-af52-53a9ffa26582)。  
  
   
  
## Examples  
 下面的代码示例演示具有的 Global.asax 文件的内容**Session_OnStart**和**Session_OnEnd**定义事件。  
  
```vb  
<script language="VB" runat="server">  
Public Sub Session_OnStart()  
  
End Sub  
  
Public Sub Session_OnEnd()  
  
End Sub  
</script>  
```  
  
```csharp  
<script language="C#" runat="server">  
public void Session_OnStart()  
{  
  
}  
  
public void Session_OnEnd()  
{  
  
}  
</script>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>