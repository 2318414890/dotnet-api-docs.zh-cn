<Type Name="SessionStateModule" FullName="System.Web.SessionState.SessionStateModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cfc7af41327b4d859e26657909d750d156c0a3ca" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37542477" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SessionStateModule : System.Web.SessionState.ISessionStateModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SessionStateModule extends System.Object implements class System.Web.IHttpModule, class System.Web.SessionState.ISessionStateModule" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateModule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SessionStateModule&#xA;Implements ISessionStateModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateModule sealed : System::Web::SessionState::ISessionStateModule" />
  <TypeSignature Language="F#" Value="type SessionStateModule = class&#xA;    interface ISessionStateModule&#xA;    interface IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.SessionState.ISessionStateModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>为应用程序提供会话状态服务。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule> 是 ASP。NET 的默认会话状态处理程序。 它将写入到的会话数据和检索会话状态存储并引发**Session_OnStart**并**Session_OnEnd**事件。 有关如何使用 ASP.NET 会话状态来存储和检索值，为用户会话的详细信息，请参阅[ASP.NET 会话状态概述](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc)。  
  
 您可以替换<xref:System.Web.SessionState.SessionStateModule>的自定义实现<xref:System.Web.IHttpModule>界面，用于管理会话状态。 自定义会话状态模块的示例，请参阅<xref:System.Web.SessionState.SessionStateUtility>类概述。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionStateModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionStateModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.SessionState.SessionStateModule" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数不是应用程序代码中调用。  
  
 <xref:System.Web.HttpApplication> ASP.NET 应用程序启动时创建对象。 <xref:System.Web.HttpApplication>对象调用<xref:System.Web.SessionState.SessionStateModule>构造函数创建<xref:System.Web.SessionState.SessionStateModule>应用程序的对象。 <xref:System.Web.SessionState.SessionStateModule>的应用程序配置中指定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateModule.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="sessionStateModule.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在从内存释放 <see cref="T:System.Web.SessionState.SessionStateModule" /> 对象之前执行最终的清理代码。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不是应用程序代码中调用。  
  
 <xref:System.Web.HttpApplication> ASP.NET 应用程序启动时创建对象。 <xref:System.Web.HttpApplication>对象创建并初始化<xref:System.Web.SessionState.SessionStateModule>应用程序和调用对象<xref:System.Web.SessionState.SessionStateModule.Dispose%2A>方法释放的对象时。 <xref:System.Web.SessionState.SessionStateModule>的应用程序配置中指定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public event EventHandler End;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler End" />
      <MemberSignature Language="DocId" Value="E:System.Web.SessionState.SessionStateModule.End" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event End As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ End;" />
      <MemberSignature Language="F#" Value="member this.End : EventHandler " Usage="member this.End : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在会话结束时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule.End>请求结束时引发事件时<xref:System.Web.SessionState.HttpSessionState.Abandon%2A>调用方法或会话已过期。 会话过期时指定的分钟数<xref:System.Web.SessionState.HttpSessionState.Timeout%2A>属性将传递不请求正在进行会话。  
  
 **Session_OnEnd**事件用于执行任何清理工作，如释放资源由会话的会话。  
  
 可以指定的处理程序<xref:System.Web.SessionState.SessionStateModule.End>事件添加名为一个公共子例程**Session_OnEnd**到 Global.asax 文件。  
  
> [!NOTE]
>  **Session_OnEnd**事件才会支持时会话状态<xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=nameWithType>属性值是<xref:System.Web.SessionState.SessionStateMode.InProc>，这是默认设置。 如果会话状态<xref:System.Web.SessionState.HttpSessionState.Mode%2A>设置为<xref:System.Web.SessionState.SessionStateMode.StateServer>或<xref:System.Web.SessionState.SessionStateMode.SQLServer>，然后**Session_OnEnd**忽略 Global.asax 文件中的事件。 如果会话状态<xref:System.Web.SessionState.HttpSessionState.Mode%2A>属性值是<xref:System.Web.SessionState.SessionStateMode.Custom>，然后支持**Session_OnEnd**事件由自定义会话状态存储提供程序。  
  
 尽管<xref:System.Web.SessionState.SessionStateModule.End>事件是公用的您可以通过在 Global.asax 文件中添加一个事件处理程序仅处理。 因为实施此限制<xref:System.Web.HttpApplication>实例会重复使用的性能。 会话的过期时，仅**Session_OnEnd** Global.asax 文件中指定的事件执行时，若要使代码无法调用<xref:System.Web.SessionState.SessionStateModule.End>与关联的事件处理程序<xref:System.Web.HttpApplication>当前正在使用的实例。  
  
 有关在 Global.asax 文件的详细信息，请参阅[Global.asax 语法](http://msdn.microsoft.com/library/9ade9d4d-4d52-4e88-af52-53a9ffa26582)。  
  
   
  
## Examples  
 下面的代码示例演示的 Global.asax 文件的内容**Session_OnStart**并**Session_OnEnd**定义的事件。  
  
```vb  
<script language="VB" runat="server">  
Public Sub Session_OnStart()  
  
End Sub  
  
Public Sub Session_OnEnd()  
  
End Sub  
</script>  
```  
  
```csharp  
<script language="C#" runat="server">  
public void Session_OnStart()  
{  
  
}  
  
public void Session_OnEnd()  
{  
  
}  
</script>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Init (app As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::HttpApplication ^ app);" />
      <MemberSignature Language="F#" Value="abstract member Init : System.Web.HttpApplication -&gt; unit&#xA;override this.Init : System.Web.HttpApplication -&gt; unit" Usage="sessionStateModule.Init app" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Init(System.Web.HttpApplication)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">当前应用程序。</param>
        <summary>在创建 <see cref="T:System.Web.SessionState.SessionStateModule" /> 对象时调用初始化代码。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法不是应用程序代码中调用。  
  
 <xref:System.Web.HttpApplication> ASP.NET 应用程序启动时创建。 <xref:System.Web.HttpApplication>对象调用<xref:System.Web.SessionState.SessionStateModule.Init%2A>方法创建时<xref:System.Web.SessionState.SessionStateModule>应用程序的对象。 <xref:System.Web.SessionState.SessionStateModule>类在应用程序配置中指定。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">[sessionState 元素（ASP.NET 设置架构）](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)配置元素中的 <see langword="mode" /> 特性被设置为 <see cref="F:System.Web.SessionState.SessionStateMode.StateServer" /> 或 <see cref="F:System.Web.SessionState.SessionStateMode.SQLServer" />，并且 ASP.NET 应用程序具有的信任少于 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">[sessionState 元素（ASP.NET 设置架构）](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)配置元素中的 <see langword="mode" /> 特性被设置为 <see cref="F:System.Web.SessionState.SessionStateMode.Custom" />，并且 <see langword="customProvider" /> 特性为空或不存在。  
  
或 
[sessionState 元素（ASP.NET 设置架构）](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)配置元素中的 <see langword="mode" /> 特性被设置为 <see cref="F:System.Web.SessionState.SessionStateMode.Custom" />，并且 <see langword="customProvider" /> 特性中名称所标识的提供程序未添加到 [sessionState 的 providers 元素（ASP.NET 设置架构）](http://msdn.microsoft.com/library/219d6778-9fb8-48ac-810d-bec68cf7d6aa)子元素。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseSessionState">
      <MemberSignature Language="C#" Value="public void ReleaseSessionState (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseSessionState(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseSessionState (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseSessionState(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseSessionState : System.Web.HttpContext -&gt; unit&#xA;override this.ReleaseSessionState : System.Web.HttpContext -&gt; unit" Usage="sessionStateModule.ReleaseSessionState context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionStateModule.ReleaseSessionState(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">要释放其会话状态的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>释放指定 <see cref="T:System.Web.HttpContext" /> 的会话状态。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseSessionStateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ReleaseSessionStateAsync (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ReleaseSessionStateAsync(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReleaseSessionStateAsync (context As HttpContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ReleaseSessionStateAsync(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseSessionStateAsync : System.Web.HttpContext -&gt; System.Threading.Tasks.Task&#xA;override this.ReleaseSessionStateAsync : System.Web.HttpContext -&gt; System.Threading.Tasks.Task" Usage="sessionStateModule.ReleaseSessionStateAsync context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">要释放其会话状态的 <see cref="T:System.Web.HttpContext" />。</param>
        <summary>以异步方式释放指定 <see cref="T:System.Web.HttpContext" /> 的会话状态。</summary>
        <returns>异步操作的 <see cref="T:System.Threading.Tasks.Task" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public event EventHandler Start;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Start" />
      <MemberSignature Language="DocId" Value="E:System.Web.SessionState.SessionStateModule.Start" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Start As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Start;" />
      <MemberSignature Language="F#" Value="member this.Start : EventHandler " Usage="member this.Start : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>创建会话时发生的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionStateModule.Start>启动新会话时，请求的开始处引发的事件。 如果发出的请求不包含会话标识符、 会话标识符是无效的或与会话标识符关联的会话已过期，将启动新会话。  
  
 **Session_OnStart**事件用于执行任何初始化工作，例如设置会话变量的默认值的会话。  
  
 可以指定的处理程序<xref:System.Web.SessionState.SessionStateModule.Start>事件添加名为一个公共子例程**Session_OnStart**到 Global.asax 文件。  
  
 有关在 Global.asax 文件的详细信息，请参阅[Global.asax 语法](http://msdn.microsoft.com/library/9ade9d4d-4d52-4e88-af52-53a9ffa26582)。  
  
   
  
## Examples  
 下面的代码示例演示的 Global.asax 文件的内容**Session_OnStart**并**Session_OnEnd**定义的事件。  
  
```vb  
<script language="VB" runat="server">  
Public Sub Session_OnStart()  
  
End Sub  
  
Public Sub Session_OnEnd()  
  
End Sub  
</script>  
```  
  
```csharp  
<script language="C#" runat="server">  
public void Session_OnStart()  
{  
  
}  
  
public void Session_OnEnd()  
{  
  
}  
</script>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>