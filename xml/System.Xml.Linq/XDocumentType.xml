<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XDocumentType.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56975d1a69c2998667e486d704abd5661079f2259.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6975d1a69c2998667e486d704abd5661079f2259</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocumentType">
          <source>Represents an XML Document Type Definition (DTD).</source>
          <target state="translated">表示 XML 文档类型定义 (DTD)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>Data Type Definitions (DTD) in XML are a way to do the following:</source>
          <target state="translated">在 XML 中的数据类型定义 (DTD) 是一种以执行以下操作：</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>Validate XML trees to a limited extent.</source>
          <target state="translated">验证在有限范围内的 XML 树。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>Expand entities, which is a form of text replacement.</source>
          <target state="translated">展开实体，这是一种形式的文本替换。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>Supply default attributes.</source>
          <target state="translated">提供默认属性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>This class represents the XML concept of a DTD.</source>
          <target state="translated">此类表示 DTD 的 XML 概念。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>DTD support in <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> is limited.</source>
          <target state="translated">DTD 支持中<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>限制。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> will expand internal entities by default, but it will not resolve external entity references unless an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> with an associated <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph> is used to load the XML tree.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> 默认情况下，通过将扩展内部的实体，但它不能解析外部实体引用，除非<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>带有关联<ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph>用于加载 XML 树。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> will not validate a document against a DTD, but you can use a validating <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to perform DTD validation if necessary.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> 将不会验证对 DTD，一个文档，但你可以使用验证<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>执行 DTD 验证，如有必要。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>To validate an <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> tree against an XML schema, use the <ph id="ph2">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph> method.</source>
          <target state="translated">若要验证<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>针对 XML 架构，使用树<ph id="ph2">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>When a document contains entity references that are defined in a DTD, the references are expanded upon creation of the XML tree.</source>
          <target state="translated">当文档中包含在 DTD 中定义的实体引用时，这些引用将在创建 XML 树时展开。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>However, when you serialize or save the XML tree, the content of the expanded entities is preserved; the entity references are not.</source>
          <target state="translated">但是，当序列化或保存的 XML 树时，被保留的扩展的实体的内容;不是实体引用。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>Default attributes from the DTD will be materialized as regular attributes in the XML tree.</source>
          <target state="translated">DTD 中的默认属性将具体化为 XML 树中的常规属性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>After a default attribute from the DTD is materialized, there is no way to determine that the attribute was a default attribute from the DTD.</source>
          <target state="translated">具体化 DTD 的默认属性后，没有方法来确定该属性从 DTD 的默认属性。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>You can populate an XML tree with an XML document that contains an internal DTD.</source>
          <target state="translated">你可以填充 XML 树与 XML 文档包含内部 DTD。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>The XML tree will then contain a <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.DocumentType%2A&gt;</ph> node.</source>
          <target state="translated">XML 树将包含<ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.DocumentType%2A&gt;</ph>节点。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>When you serialize or save the tree, the internal DTD will also be saved as part of the document.</source>
          <target state="translated">当序列化或保存树时，内部 DTD 将还将保存为文档的一部分。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocumentType">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> object to copy from.</source>
          <target state="translated">要从其复制的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> class from another <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> object.</source>
          <target state="translated">从其他 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> 对象初始化 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> 类的实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
          <source>This constructor is primarily used internally when making a deep copy of an XML tree.</source>
          <target state="translated">在创建 XML 树的深层副本时，主要是内部使用此构造函数。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.</source>
          <target state="translated">一个包含 DTD 的限定名的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，此名称与 XML 文档的根元素的限定名相同。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the public identifier of an external public DTD.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含外部公共 DTD 的公共标识符。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the system identifier of an external private DTD.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含外部专用 DTD 的系统标识符。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the internal subset for an internal DTD.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含内部 DTD 的内部子集。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> 类的实例。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>The following example creates a document with an internal DTD.</source>
          <target state="translated">下面的示例创建具有内部 DTD 的文档。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>When it creates the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> object, it specifies the qualified name of the DTD (Pubs), and a string that contains the internal subset.</source>
          <target state="translated">在创建时<ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph>对象，它指定 DTD (Pubs) 和一个字符串，包含内部子集的限定的名称。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>Because the document does not use a public or private external DTD, the <ph id="ph1">`publicId`</ph> and <ph id="ph2">`systemId`</ph> are set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">因为文档不使用公共或私有外部 DTD、<ph id="ph1">`publicId`</ph>和<ph id="ph2">`systemId`</ph>设置为<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocumentType.InternalSubset">
          <source>Gets or sets the internal subset for this Document Type Definition (DTD).</source>
          <target state="translated">获取或设置此文档类型定义 (DTD) 的内部子集。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.InternalSubset">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the internal subset for this Document Type Definition (DTD).</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含此文档类型定义的 (DTD) 的内部子集。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.InternalSubset">
          <source>The following example creates a document with a DTD that contains an internal subset.</source>
          <target state="translated">下面的示例创建使用包含内部子集 DTD 的文档。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.InternalSubset">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocumentType.Name">
          <source>Gets or sets the name for this Document Type Definition (DTD).</source>
          <target state="translated">获取或设置此文档类型定义 (DTD) 的名称。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.Name">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the name for this Document Type Definition (DTD).</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含此文档类型定义的 (DTD) 的名称。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.Name">
          <source>The following example creates an XML document that contains a DTD.</source>
          <target state="translated">下面的示例创建包含 DTD 的 XML 文档。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.Name">
          <source>After creating the document, it retrieves the qualified name of the DTD using this property.</source>
          <target state="translated">在创建后的文档，它将检索 DTD 使用此属性的限定的名称。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.Name">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocumentType.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">获取此节点的节点类型。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.NodeType">
          <source>The node type.</source>
          <target state="translated">节点类型。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.DocumentType" /&gt;</ph>.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> 对象，此值为 <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.DocumentType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">因为派生自的所有类<ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>包含<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph>属性，你可以编写代码进行操作的具体子类的集合<ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">集合中每个节点的节点类型随后可以测试你的代码。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.NodeType">
          <source>The following example shows the use of this property to retrieve the node type for an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何使用此属性来检索的节点类型<ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocumentType.PublicId">
          <source>Gets or sets the public identifier for this Document Type Definition (DTD).</source>
          <target state="translated">获取或设置此文档类型定义 (DTD) 的公共标识符。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.PublicId">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the public identifier for this Document Type Definition (DTD).</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含此文档类型定义 (DTD) 的公共标识符。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.PublicId">
          <source>If an XML document uses an external public DTD, this property will contain the public identifier of the external DTD.</source>
          <target state="translated">如果 XML 文档使用外部的公共 DTD，此属性将包含外部 DTD 的公共标识符。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>Gets or sets the system identifier for this Document Type Definition (DTD).</source>
          <target state="translated">获取或设置此文档类型定义 (DTD) 的系统标识符。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the system identifier for this Document Type Definition (DTD).</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含此文档类型定义 (DTD) 的系统标识符。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>If an XML document uses an external private DTD, this property will contain the private identifier of the external DTD.</source>
          <target state="translated">如果 XML 文档使用外部私有 DTD，此属性将包含外部 DTD 的专用标识符。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>The following example creates an XML document that refers to an external private DTD.</source>
          <target state="translated">下面的示例创建引用外部私有 DTD 的 XML 文档。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>The DTD does not have an internal subset.</source>
          <target state="translated">DTD 不具有内部子集中。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>The call to the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> constructor reflects the use of the external private DTD.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph>构造函数反映外部的私有 DTD 的使用。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>It passes <ph id="ph1">`null`</ph> for the internal subset.</source>
          <target state="translated">它将传递<ph id="ph1">`null`</ph>内部子集。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> into which this method will write.</source>
          <target state="translated">此方法将写入其中的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
          <source>Write this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> 写入到 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
          <source>This method is primarily used internally by the methods that write an XML tree to an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">此方法主要用于在内部写入到 XML 树的方法通过<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>