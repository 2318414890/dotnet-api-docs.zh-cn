<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XDeclaration.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5777644c210521c51ac05050f0e1c02686e93a949.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">777644c210521c51ac05050f0e1c02686e93a949</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDeclaration">
          <source>Represents an XML declaration.</source>
          <target state="translated">表示 XML 声明。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDeclaration">
          <source>An XML declaration is used to declare the XML version, the encoding, and whether or not the XML document is standalone.</source>
          <target state="translated">XML 声明用于声明 XML 版本、 编码和 XML 文档是独立。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDeclaration">
          <source>This class represents the XML concept of an XML declaration.</source>
          <target state="translated">此类表示 XML 声明的 XML 概念。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDeclaration">
          <source>Just as in the XML standard, declarations are associated with a document.</source>
          <target state="translated">XML 标准中一样，声明是与文档关联。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDeclaration">
          <source>When you create a document, you have the option to specify the declaration for the document.</source>
          <target state="translated">当创建文档时，你可以通过指定文档的声明。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDeclaration">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> class contains the <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Declaration%2A&gt;</ph> property, which allows you to set or get the declaration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>类包含<ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Declaration%2A&gt;</ph>属性，它允许你设置或获取声明。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDeclaration">
          <source>For information about how to serialize an XML tree with an XML declaration, see <bpt id="p1">[</bpt>Serializing with an XML Declaration<ept id="p1">](http://msdn.microsoft.com/library/30f1b564-62b5-4e5d-9c36-884e51113feb)</ept>.</source>
          <target state="translated">有关如何序列化与 XML 声明的 XML 树的信息，请参阅<bpt id="p1">[</bpt>使用 XML 声明进行序列化<ept id="p1">](http://msdn.microsoft.com/library/30f1b564-62b5-4e5d-9c36-884e51113feb)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDeclaration">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> used to initialize this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> object.</source>
          <target state="translated">用于初始化此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> class from another <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> object.</source>
          <target state="translated">从另一个 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> 对象初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)">
          <source>This constructor is primarily used internally to make a deep copy of an XML tree.</source>
          <target state="translated">此构造函数是主要用于内部创建 XML 树的深层副本。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
          <source>The version of the XML, usually "1.0".</source>
          <target state="translated">XML 的版本，通常为"1.0"。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
          <source>The encoding for the XML document.</source>
          <target state="translated">XML 文档的编码。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
          <source>A string containing "yes" or "no" that specifies whether the XML is standalone or requires external entities to be resolved.</source>
          <target state="translated">包含"yes"或"no"的字符串，用来指定 XML 是独立的还是需要解析外部实体。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> class with the specified version, encoding, and standalone status.</source>
          <target state="translated">使用指定的版本、编码和独立状态初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
          <source>The following example creates a document that contains a declaration.</source>
          <target state="translated">下面的示例创建包含声明的文档。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDeclaration.Encoding">
          <source>Gets or sets the encoding for this document.</source>
          <target state="translated">获取或设置此文档的编码。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Encoding">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the code page name for this document.</source>
          <target state="translated">一个包含此文档的代码页名称的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Encoding">
          <source>Any value returned by <ph id="ph1">&lt;xref:System.Text.Encoding.WebName%2A&gt;</ph> is a valid value.</source>
          <target state="translated">由 <ph id="ph1">&lt;xref:System.Text.Encoding.WebName%2A&gt;</ph> 返回的任何值都是有效值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Encoding">
          <source>If you read an encoded document, then this property will be set to the code page name.</source>
          <target state="translated">如果你读取编码的文档，则此属性将设置为代码页名称。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Encoding">
          <source>If you set this property to a valid code page name, then when serializing, LINQ to XML will serialize with the specified encoding.</source>
          <target state="translated">如果你将此属性设置为一个有效的代码页名称，然后在序列化时，LINQ to XML 将用指定的编码进行序列化。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Encoding">
          <source>The following example creates two documents, one with utf-8 encoding, and one with utf-16 encoding.</source>
          <target state="translated">下面的示例创建两个文档，一个文档使用 utf-8 编码，另一个使用 utf-16 编码。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Encoding">
          <source>It then loads the documents and prints the encoding to the console.</source>
          <target state="translated">然后，该示例加载这两个文档并将编码输出到控制台。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Encoding">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDeclaration.Standalone">
          <source>Gets or sets the standalone property for this document.</source>
          <target state="translated">获取或设置此文档的独立属性。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Standalone">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the standalone property for this document.</source>
          <target state="translated">一个包含此文档的独立属性的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Standalone">
          <source>The valid values for standalone are "yes" or "no".</source>
          <target state="translated">独立的有效值是"是"或"否"。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Standalone">
          <source>These values are not enforced.</source>
          <target state="translated">这些值不会强制执行。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Standalone">
          <source>The following example uses this property to print the standalone property of a declaration.</source>
          <target state="translated">下面的示例使用此属性来打印的独立属性声明。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Standalone">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDeclaration.ToString">
          <source>Provides the declaration as a formatted string.</source>
          <target state="translated">提供声明作为已格式化的字符串。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDeclaration.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the formatted XML string.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含已格式化的 XML 字符串。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDeclaration.Version">
          <source>Gets or sets the version property for this document.</source>
          <target state="translated">获取或设置此文档的版本属性。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Version">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the version property for this document.</source>
          <target state="translated">一个包含此文档的版本属性的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Version">
          <source>The value is usually "1.0".</source>
          <target state="translated">该值通常为"1.0"。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Version">
          <source>This value is not enforced.</source>
          <target state="translated">此值不强制执行。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Version">
          <source>The following example uses this property to print the version property of a declaration.</source>
          <target state="translated">下面的示例使用此属性来输出声明的版本属性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDeclaration.Version">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>