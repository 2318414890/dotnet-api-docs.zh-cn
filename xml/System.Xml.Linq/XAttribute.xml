<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XAttribute.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57c3ca0b79ae2d94d785e52a83f69cedfb7271085.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c3ca0b79ae2d94d785e52a83f69cedfb7271085</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XAttribute">
          <source>Represents an XML attribute.</source>
          <target state="translated">表示 XML 特性。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>An XML attribute is a name/value pair associated with an XML element.</source>
          <target state="translated">XML 特性是一个 XML 元素与关联的名称/值对。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Each <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> contains a list of the attributes for that element.</source>
          <target state="translated">每个<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>包含该元素的特性的列表。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Attributes must have a qualified name that is unique to the element.</source>
          <target state="translated">属性必须是唯一的元素的限定的名称。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Attributes are not derived from <ph id="ph1">&lt;xref:System.Xml.Linq.XNode&gt;</ph>; they are not nodes in the XML tree.</source>
          <target state="translated">特性不派生自<ph id="ph1">&lt;xref:System.Xml.Linq.XNode&gt;</ph>; 它们不是 XML 树中的节点。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Instead, they are simply name/value pairs associated with an element.</source>
          <target state="translated">相反，它们是只需与元素关联的名称/值对。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Attributes are maintained in the XML tree in the order that they were added to the element.</source>
          <target state="translated">属性保留的 XML 树中它们添加到元素的顺序。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>When a collection of attributes is returned by <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>, they are returned in the order that they were added to the element, and are not sorted.</source>
          <target state="translated">当通过返回的属性的集合时<ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>，它们以它们已添加到了元素，和未排序的顺序返回。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Technically, in XML, namespace declarations are not attributes proper.</source>
          <target state="translated">从技术上讲，在 XML 中，命名空间声明不是正确的属性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>However, this distinction is not normally made by many XML programmers.</source>
          <target state="translated">但是，许多 XML 程序员通常不加以这一区别。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Instead, because namespace declarations have exactly the same XML syntax as attributes, most XML programmers think of namespaces as attributes.</source>
          <target state="translated">相反，由于命名空间声明的 XML 语法与属性完全相同，因此大多数 XML 程序员来说将命名空间视为属性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>To simplify the <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> programming interface, namespaces are represented in the XML tree as attributes.</source>
          <target state="translated">若要简化<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>编程接口，命名空间表示 XML 树中作为属性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Such namespace attributes impact serialization of an XML tree.</source>
          <target state="translated">此类命名空间属性会影响序列化 XML 树。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>When serializing, <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> attempts to serialize with the namespace prefix specified in namespace attributes.</source>
          <target state="translated">序列时，<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>尝试序列化时使用命名空间属性中指定的命名空间前缀。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>You can use the <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A&gt;</ph> to determine if an attribute is really a namespace declaration.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A&gt;</ph>来确定属性是否真正命名空间声明。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> class derives from <ph id="ph2">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> 类派生自 <ph id="ph2">&lt;xref:System.Xml.Linq.XObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>You can add annotations to attributes, and observe events for them.</source>
          <target state="translated">你可以将批注添加到属性，并观察发生的事件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>Some <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> methods can be used from XAML.</source>
          <target state="translated">某些<ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>方法可从 XAML 中使用。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>LINQ to XML Dynamic Properties<ept id="p1">](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>LINQ to XML 动态属性<ept id="p1">](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> object to copy from.</source>
          <target state="translated">要从其复制的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> class from another <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> object.</source>
          <target state="translated">从另一个 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 对象初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
          <source>This constructor is primarily used internally when making a deep copy of an XML tree.</source>
          <target state="translated">在创建 XML 树的深层副本时，主要是内部使用此构造函数。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
          <source>This example demonstrates that creating a deep copy of an XML tree creates a copy, not a clone, of an attribute in the tree.</source>
          <target state="translated">此示例演示了创建 XML 树的深层副本创建的副本，不是复本的树中的属性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
          <source>The <ph id="ph1">&lt;paramref name="other" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="other" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> of the attribute.</source>
          <target state="translated">属性的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> containing the value of the attribute.</source>
          <target state="translated">一个包含属性值的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> class from the specified name and value.</source>
          <target state="translated">从指定的名称和值初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>There is an implicit conversion from string to <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>.</source>
          <target state="translated">没有从字符串到隐式转换<ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>Typical use of this constructor is to specify a string as the first parameter instead of creating a new <ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>, as follows:</source>
          <target state="translated">此构造函数的典型用途是将字符串而不是创建一个新的第一个参数指定<ph id="ph1">&lt;xref:System.Xml.Linq.XName&gt;</ph>、，如下所示：</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>You can also use the addition operator overload with an <ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph> and a string to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>, as follows:</source>
          <target state="translated">你还可以使用与加法运算符重载<ph id="ph1">&lt;xref:System.Xml.Linq.XNamespace&gt;</ph>和字符串从而创建<ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>、，如下所示：</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理 XML 命名空间<ept id="p1">](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>These same approaches will work for Visual Basic, however XML literals provide a better approach for creating XML trees.</source>
          <target state="translated">这些相同的方法将适用于 Visual Basic 中，但是 XML 文本提供更好的方法，用于创建 XML 树。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter can be a <ph id="ph2">&lt;xref:System.String&gt;</ph>, <ph id="ph3">`double`</ph>, <ph id="ph4">`float`</ph>, <ph id="ph5">`decimal`</ph>, <ph id="ph6">`bool`</ph>, <ph id="ph7">&lt;xref:System.DateTime&gt;</ph>, or <ph id="ph8">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`value`</ph>参数可以为<ph id="ph2">&lt;xref:System.String&gt;</ph>， <ph id="ph3">`double`</ph>， <ph id="ph4">`float`</ph>， <ph id="ph5">`decimal`</ph>， <ph id="ph6">`bool`</ph>， <ph id="ph7">&lt;xref:System.DateTime&gt;</ph>，或<ph id="ph8">&lt;xref:System.TimeSpan&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>If the value is a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>, the value of the attribute is formatted correctly per the W3C specifications.</source>
          <target state="translated">如果值为<ph id="ph1">&lt;xref:System.DateTime&gt;</ph>或<ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>，根据 W3C 规范的属性值的格式是否正确。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The following example uses this constructor to create attributes.</source>
          <target state="translated">下面的示例使用此构造函数来创建属性。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>It passes strings as the first argument to the <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> constructor, which are then implicitly converted to <ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph> objects.</source>
          <target state="translated">它将字符串传递的第一个参数作为<ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>构造函数，然后隐式转换为<ph id="ph2">&lt;xref:System.Xml.Linq.XName&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The attributes are added to an element.</source>
          <target state="translated">属性添加到元素中。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 参数为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.EmptySequence">
          <source>Gets an empty collection of attributes.</source>
          <target state="translated">获取空的属性集合。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.EmptySequence">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> containing an empty collection.</source>
          <target state="translated">一个包含空集合的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.EmptySequence">
          <source>This property is typically used by class implementers when writing a method that returns a collection of attributes.</source>
          <target state="translated">当编写返回的属性集合的方法，类实施者通常使用此属性。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.EmptySequence">
          <source>If the method needs to return an empty collection of attributes, it could use this property to get an empty collection of <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objects.</source>
          <target state="translated">如果该方法需要返回空集合的属性，它可使用此属性以获取空的集合<ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>Determines if this attribute is a namespace declaration.</source>
          <target state="translated">确定此属性是否为命名空间声明。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this attribute is a namespace declaration; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此属性为命名空间声明，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>Technically, in XML, namespace declarations are not attributes proper.</source>
          <target state="translated">从技术上讲，在 XML 中，命名空间声明不是正确的属性。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>However, this distinction is not normally made by most XML programmers.</source>
          <target state="translated">但是，大多数 XML 程序员来说通常不加以这一区别。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>Instead, because namespace declarations have exactly the same syntax as attributes, most XML programmers think of namespaces as attributes.</source>
          <target state="translated">相反，由于命名空间声明属性的语法完全相同，因此大多数 XML 程序员来说将命名空间视为属性。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>To simplify the <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> programming interface, namespaces are represented in the XML tree as attributes.</source>
          <target state="translated">若要简化<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>编程接口，命名空间表示 XML 树中作为属性。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>You can use this property to determine if a particular <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> attribute is really a namespace declaration.</source>
          <target state="translated">你可以使用此属性来确定特定<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>属性实际上是命名空间声明。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>The following example creates an attribute that is a namespace declaration and an attribute that is not.</source>
          <target state="translated">下面的示例创建是命名空间声明属性和不是属性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>It then uses this property to display whether each attribute is a namespace declaration or not.</source>
          <target state="translated">它然后使用此属性来显示每个属性或不是命名空间声明。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.Name">
          <source>Gets the expanded name of this attribute.</source>
          <target state="translated">获取此属性的扩展名。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Name">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> containing the name of this attribute.</source>
          <target state="translated">一个包含此属性 (Attribute) 名称的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Name">
          <source>The expanded name returned by this property is in the form of <ph id="ph1">`{namespace}localname`</ph>.</source>
          <target state="translated">此属性返回的展开的名称所采用的形式<ph id="ph1">`{namespace}localname`</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Name">
          <source>The following example creates an element with three attributes.</source>
          <target state="translated">下面的示例创建具有三个特性的元素。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Name">
          <source>It then uses this property to print out the name of each attribute.</source>
          <target state="translated">它然后使用此属性来打印出的每个属性的名称。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Name">
          <source>The example also shows creation of a new attribute using the name of an existing attribute.</source>
          <target state="translated">该示例还演示创建新的属性使用的现有属性的名称。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Name">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>Gets the next attribute of the parent element.</source>
          <target state="translated">获取父元素的下一个属性。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> containing the next attribute of the parent element.</source>
          <target state="translated">一个包含父元素下一个属性 (Attribute) 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>Attributes are maintained in the XML tree in the order that they were added to the element.</source>
          <target state="translated">属性保留的 XML 树中它们添加到元素的顺序。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>When a collection of attributes is returned by <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>, they are returned in the order that they were added, and are not sorted.</source>
          <target state="translated">当通过返回的属性的集合时<ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>，它们已添加，并且未排序顺序返回它们。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>When you request the next attribute through this property, this property returns the attribute that was added after this attribute.</source>
          <target state="translated">当请求通过此属性的下一个属性时，此属性将返回此属性后，添加的属性。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>If this attribute does not have a parent, or if there is no next attribute, then this property returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果此属性不具有父级，或如果没有下一步的属性，则此属性返回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>The following example shows how to iterate through the attributes of an element using this property.</source>
          <target state="translated">下面的示例演示如何循环访问使用此属性的元素的属性。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NextAttribute">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">获取此节点的节点类型。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NodeType">
          <source>The node type.</source>
          <target state="translated">节点类型。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Attribute" /&gt;</ph>.</source>
          <target state="translated">对于 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 对象，此值为 <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Attribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">因为派生自的所有类<ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>包含<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph>属性，你可以编写代码进行操作的具体子类的集合<ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">集合中每个节点的节点类型随后可以测试你的代码。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NodeType">
          <source>The following example creates an attribute, and then displays the node type using this property.</source>
          <target state="translated">下面的示例创建一个特性，，然后显示使用此属性的节点类型。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>，其中包含此 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>When converting to <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</source>
          <target state="translated">将转换为时<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>从某个属性或元素，允许的值为"0"、"1"和任何字符串，它会生成"true"或"false"转换为小写。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>The following example creates an attribute with a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value, then casts it to <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</source>
          <target state="translated">下面的示例创建一个带属性<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>值，然后将强制转换到<ph id="ph2">&lt;xref:System.Boolean&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>，其中包含此 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</source>
          <target state="translated">某个属性或包含日期和时间的内容的元素值空间与的日期和时间 ISO 8601 中所述紧密相关。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">在创建某个属性或元素包含日期和时间的内容时，请按照 W3C 规范格式化的属性或元素值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>See the W3C specification for more details.</source>
          <target state="translated">请参阅 W3C 规范的更多详细信息。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>Behavior is lax when casting to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> from an attribute or element.</source>
          <target state="translated">当强制转换为行为并不严格<ph id="ph1">&lt;xref:System.DateTime&gt;</ph>从某个属性或元素。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">即使未完全按照 W3C 规范格式化的属性或元素值，值适当地转换为<ph id="ph1">&lt;xref:System.DateTime&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>This conversion operator uses <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> to convert from a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">此转换运算符使用<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph>将从转换<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>The following example creates an attribute with date and time content.</source>
          <target state="translated">下面的示例创建具有日期和时间的内容的属性。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>It then casts it to <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> to retrieve the value.</source>
          <target state="translated">它然后将其强制转换到<ph id="ph1">&lt;xref:System.DateTime&gt;</ph>要检索其值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>，其中包含此 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>This conversion operator uses the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to do the conversion.</source>
          <target state="translated">此转换运算符使用<ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph>类来执行此转换。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>The following example creates an attribute with date and time content.</source>
          <target state="translated">下面的示例创建具有日期和时间的内容的属性。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>It then casts it to <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> to retrieve the value.</source>
          <target state="translated">它然后将其强制转换到<ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph>要检索其值。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>A <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>，其中包含此 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>The following example creates an attribute with a decimal value.</source>
          <target state="translated">下面的示例创建十进制值的属性。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>It then retrieves the value of the attribute by casting to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">然后检索属性的值通过强制转换为<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>，其中包含此 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>The following example creates an attribute with <ph id="ph1">&lt;xref:System.Double&gt;</ph> content.</source>
          <target state="translated">下面的示例创建一个带属性<ph id="ph1">&lt;xref:System.Double&gt;</ph>内容。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Double&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>，其中包含此 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>The following example creates an attribute with a GUID as content.</source>
          <target state="translated">下面的示例将创建 GUID 作为内容属性</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Guid&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Guid&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>，其中包含此 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>The following example creates an attribute with an integer as content.</source>
          <target state="translated">下面的示例创建一个属性以一个整数作为内容。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Int32&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>，其中包含此 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>The following example creates an attribute with a long integer as content.</source>
          <target state="translated">下面的示例将创建一个长整型，作为内容属性</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>It then retrieves the value of the attribute by casting to <ph id="ph1">&lt;xref:System.Int64&gt;</ph>.</source>
          <target state="translated">然后检索属性的值通过强制转换为<ph id="ph1">&lt;xref:System.Int64&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph3">&lt;see cref="T:System.Boolean" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>，其中包含此 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>When converting to <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</source>
          <target state="translated">将转换为时<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>从某个属性或元素，允许的值为"0"、"1"和任何字符串，它会生成"true"或"false"转换为小写。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>The following example creates an attribute with Boolean content.</source>
          <target state="translated">下面的示例创建具有布尔内容的属性。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Boolean&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.Boolean&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph3">&lt;see cref="T:System.DateTime" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph2">&lt;see cref="T:System.DateTime" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>，其中包含此 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</source>
          <target state="translated">某个属性或包含日期和时间的内容的元素值空间与的日期和时间 ISO 8601 中所述紧密相关。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">在创建某个属性或元素包含日期和时间的内容时，请按照 W3C 规范格式化的属性或元素值。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>See the W3C specification for more details.</source>
          <target state="translated">请参阅 W3C 规范的更多详细信息。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>Behavior is lax when casting to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> from an attribute or element.</source>
          <target state="translated">当强制转换为行为并不严格<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>从某个属性或元素。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">即使未完全按照 W3C 规范格式化的属性或元素值，值适当地转换为<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>This conversion operator uses <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> to convert from a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">此转换运算符使用<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph>将从转换<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>The following example creates an attribute with a date and time as content.</source>
          <target state="translated">下面的示例创建具有日期和时间作为内容的属性。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph3">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph2">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>，其中包含此 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>This conversion operator uses the <ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to do the conversion.</source>
          <target state="translated">此转换运算符使用<ph id="ph1">&lt;xref:System.Xml.XmlConvert&gt;</ph>类来执行此转换。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>The following example creates an attribute with a date and time as content.</source>
          <target state="translated">下面的示例创建具有日期和时间作为内容的属性。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph3">&lt;see cref="T:System.Decimal" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>，其中包含此 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
          <source>The following example creates an attribute with decimal content.</source>
          <target state="translated">下面的示例创建具有十进制内容的属性。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.Decimal&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>，其中包含此 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
          <source>The following example creates an attribute with double precision floating point content.</source>
          <target state="translated">下面的示例创建具有双精度浮点数内容的属性。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.Double&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph3">&lt;see cref="T:System.Guid" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>，其中包含此 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
          <source>The following example creates an attribute with guid content.</source>
          <target state="translated">下面的示例创建具有 guid 内容的属性。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Guid&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.Guid&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>，其中包含此 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
          <source>The following example creates an attribute with integer content.</source>
          <target state="translated">下面的示例创建具有整数内容的属性。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.Int32&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph3">&lt;see cref="T:System.Int64" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>，其中包含此 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
          <source>The following example creates an attribute with long integer content.</source>
          <target state="translated">下面的示例创建具有长整型内容的属性。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.Int64&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>，其中包含此 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
          <source>The following example creates an attribute with single precision floating point content.</source>
          <target state="translated">下面的示例创建具有单精度浮点数内容的属性。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.Single&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>，其中包含此 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</source>
          <target state="translated">某个属性或包含时间跨度内容的元素值空间与 ISO 8601 中所述的持续时间内容紧密相关。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">在创建某个属性或包含时间跨度内容的元素时，请按照 W3C 规范格式化的属性或元素值。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>Please see the W3C specification for more details.</source>
          <target state="translated">请参阅更多详细信息的 W3C 规范。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>Behavior is lax when casting to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> from an attribute or element.</source>
          <target state="translated">当强制转换为行为并不严格<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>从某个属性或元素。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">即使未完全按照 W3C 规范格式化的属性或元素值，值适当地转换为<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>The following example creates an attribute with time span content.</source>
          <target state="translated">下面的示例将创建具有时间跨度内容属性</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph3">&lt;see cref="T:System.UInt32" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>，其中包含此 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
          <source>The following example creates an attribute with unsigned integer content.</source>
          <target state="translated">下面的示例创建具有无符号的整数内容的属性。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.UInt32&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.UInt32&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph3">&lt;see cref="T:System.UInt64" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Nullable`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> that contains the content of this <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>，其中包含此 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
          <source>The following example creates an attribute with unsigned long integer content.</source>
          <target state="translated">下面的示例创建具有无符号长整数内容的属性。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph2">&lt;xref:System.UInt64&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>A <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>，其中包含此 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>The following example creates an attribute with single precision floating point content.</source>
          <target state="translated">下面的示例创建具有单精度浮点数内容的属性。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.Single&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.Single&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含此 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
          <source>The following example creates an attribute with string content.</source>
          <target state="translated">下面的示例创建具有字符串内容的属性。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.String&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>，其中包含此 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</source>
          <target state="translated">某个属性或包含时间跨度内容的元素值空间与 ISO 8601 中所述的持续时间内容紧密相关。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</source>
          <target state="translated">在创建某个属性或包含时间跨度内容的元素时，请按照 W3C 规范格式化的属性或元素值。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>Please see the W3C specification for more details.</source>
          <target state="translated">请参阅更多详细信息的 W3C 规范。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>Behavior is lax when casting to a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> from an attribute or element.</source>
          <target state="translated">当强制转换为行为并不严格<ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>从某个属性或元素。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">即使未完全按照 W3C 规范格式化的属性或元素值，值适当地转换为<ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>The following example creates an attribute with time span content.</source>
          <target state="translated">下面的示例将创建具有时间跨度内容属性</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph2">&lt;see cref="T:System.UInt32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>A <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>，其中包含此 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>The following example creates an attribute with unsigned integer content.</source>
          <target state="translated">下面的示例创建具有无符号的整数内容的属性。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.UInt32&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.UInt32&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to cast to <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">要强制转换为 <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>Cast the value of this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的值强制转换为 <ph id="ph2">&lt;see cref="T:System.UInt64" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>A <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> that contains the content of this <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>，其中包含此 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>The following example creates an attribute with unsigned long integer content.</source>
          <target state="translated">下面的示例创建具有无符号长整数内容的属性。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>It then retrieves the value by casting to <ph id="ph1">&lt;xref:System.UInt64&gt;</ph>.</source>
          <target state="translated">然后检索的值通过强制转换为<ph id="ph1">&lt;xref:System.UInt64&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>The attribute does not contain a valid <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> value.</source>
          <target state="translated">属性不包含有效的 <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
          <source>The <ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attribute" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>Gets the previous attribute of the parent element.</source>
          <target state="translated">获取父元素的上一个属性。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> containing the previous attribute of the parent element.</source>
          <target state="translated">一个包含父元素的上一个属性 (Attribute) 的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>Attributes are maintained in the XML tree in the order that they were added to the element.</source>
          <target state="translated">属性保留的 XML 树中它们添加到元素的顺序。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>When a collection of attributes is returned by <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>, they are returned in the order that they were added, and are not sorted.</source>
          <target state="translated">当通过返回的属性的集合时<ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attributes%2A&gt;</ph>，它们已添加，并且未排序顺序返回它们。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>When you request the previous attribute through this property, this property returns the attribute that was added before this attribute.</source>
          <target state="translated">当请求通过此属性的上一个特性时，此属性将返回之前此属性已添加的属性。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>If this attribute does not have a parent, or if this attribute is the first attribute, then this property returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果此属性没有父级，或者如果此属性是第一个属性，则此属性返回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> class stores its attributes as a singly-linked list of <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>类将其属性存储为单向链接列表的<ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>This means that the <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A&gt;</ph> property must traverse the list of attributes that belong to the element.</source>
          <target state="translated">这意味着，<ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A&gt;</ph>属性必须遍历属于元素的属性的列表。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>Therefore, using this property might affect your performance.</source>
          <target state="translated">因此，使用此属性，这种情况可能会影响你的性能。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>The following example shows how to iterate through the attributes of an element using this property.</source>
          <target state="translated">下面的示例演示如何循环访问使用此属性的元素的属性。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.PreviousAttribute">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>Removes this attribute from its parent element.</source>
          <target state="translated">将此属性从父元素中移除。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>You can use this method to modify an XML tree.</source>
          <target state="translated">此方法可用于修改 XML 树。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>This method will cause events to occur.</source>
          <target state="translated">此方法将导致事件发生。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>There are many scenarios in which you might want to remove a set of attributes.</source>
          <target state="translated">有很多情况下在其中你可能想要删除的一组属性。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>In <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> programming, you should not manipulate or modify a set of nodes while you are querying for nodes in that set.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph>编程，你不应操作或修改的一组节点时进行查询的该组中的节点。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>In practical terms, this means that you should not iterate over a set of attributes and remove them.</source>
          <target state="translated">实际上，这意味着你不应循环访问一组属性并将其删除。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>Instead, you should materialize them into a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> using the <ph id="ph2">&lt;xref:System.Linq.Enumerable.ToList%2A&gt;</ph> extension method.</source>
          <target state="translated">相反，你应将其具体化为<ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>使用<ph id="ph2">&lt;xref:System.Linq.Enumerable.ToList%2A&gt;</ph>扩展方法。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>Then you can iterate over the list, removing the attributes.</source>
          <target state="translated">然后循环访问列表中，并删除的属性。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>For more information, see <bpt id="p1">[</bpt>Mixed Declarative Code/Imperative Code Bugs (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>混合声明性代码/强制性代码 Bug (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094)</ept>。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>Alternatively, if you want to remove a set of attributes, it is recommended that you use the <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">或者，如果你想要删除的一组特性，建议你使用<ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>This method copies the attributes to a list, then iterates over the list, removing the attributes.</source>
          <target state="translated">此方法将这些属性复制到列表中，然后循环访问列表中，删除的属性。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>The following example creates an element with three attributes.</source>
          <target state="translated">下面的示例创建具有三个特性的元素。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>It then removes one of the attributes.</source>
          <target state="translated">它然后删除其中一个特性。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.Remove">
          <source>The parent element is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">父元素为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>The value to assign to this attribute.</source>
          <target state="translated">分配到此属性的值。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>Sets the value of this attribute.</source>
          <target state="translated">设置此属性的值。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>The value is converted to its string representation and assigned to the <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute.Value%2A&gt;</ph> property.</source>
          <target state="translated">将值转换为其字符串表示形式，并将此值分配给 <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute.Value%2A&gt;</ph> 属性 (Property)。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>It is invalid to pass an instance of a class that derives from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>, such as <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>.</source>
          <target state="translated">是无效将派生自的类的实例传递<ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph>，如<ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>或<ph id="ph3">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>This method will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">此方法将引发<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>The following example creates an element with several attributes.</source>
          <target state="translated">下面的示例创建具有多个属性的元素。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>It then changes the contents of one of the attributes.</source>
          <target state="translated">然后将它更改其中一个特性的内容。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 参数为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 是一个 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.ToString">
          <source>Converts the current <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> object to a string representation.</source>
          <target state="translated">将当前的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 对象转换为字符串表示形式。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XAttribute.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the XML text representation of an attribute and its value.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含一个属性及其值的 XML 文本表示形式。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.ToString">
          <source>This method returns a string in the form of <ph id="ph1">`AttributeName="content"`</ph>.</source>
          <target state="translated">此方法返回的字符串的形式<ph id="ph1">`AttributeName="content"`</ph>。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.ToString">
          <source>When this method is called and <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> contains control character, an exception is thrown with a message like: hexadecimal value 0x0B, is an invalid character.</source>
          <target state="translated">当调用此方法和<ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>包含控制字符，与类似这样的消息将引发异常： 十六进制值 0x0B，是个无效字符。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.ToString">
          <source>The following example creates an element with several attributes.</source>
          <target state="translated">下面的示例创建具有多个属性的元素。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.ToString">
          <source>It then gets an attribute and displays it and its content by calling this method.</source>
          <target state="translated">然后，获取属性，并通过调用此方法显示它和其内容。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XAttribute.ToString">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>Gets or sets the value of this attribute.</source>
          <target state="translated">获取或设置此属性的值。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the value of this attribute.</source>
          <target state="translated">包含此属性的值的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>You can use this property to get or set the value of an attribute.</source>
          <target state="translated">此属性可用于获取或设置属性的值。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>Setting this property will raise the <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> events.</source>
          <target state="translated">设置此属性将引发<ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>If you are getting the value and the attribute might not exist, it is more convenient to use the explicit conversion operators, and assign the attribute to a nullable type such as <ph id="ph1">`string`</ph> or <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> of <ph id="ph3">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">如果正在获取的值和属性可能不存在，则更方便地使用显式转换运算符，并将该属性分配为 null 的类型如<ph id="ph1">`string`</ph>或<ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph>的<ph id="ph3">&lt;xref:System.Int32&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>If the attribute does not exist, then the nullable type is set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果该属性不存在，则可以为 null 的类型设置为<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>Before using this property, you must make sure that the <ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attribute%2A&gt;</ph> method does not return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">使用此属性之前，必须确保<ph id="ph1">&lt;xref:System.Xml.Linq.XElement.Attribute%2A&gt;</ph>方法不返回<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>The following example creates an element with an attribute.</source>
          <target state="translated">下面的示例创建具有属性的元素。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>It then retrieves the value of the attribute, and then sets it.</source>
          <target state="translated">它然后检索属性的值，然后设置它。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>Note that the Visual Basic example uses the XML attribute property.</source>
          <target state="translated">请注意 Visual Basic 示例使用 XML 特性属性。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>The following example shows the benefit of using the explicit conversion operators to get the value of an attribute that might not exist:</source>
          <target state="translated">下面的示例演示使用显式转换运算符来获取可能不存在的属性的值的优点：</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XAttribute.Value">
          <source>When setting, the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">设置时，<ph id="ph1">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>