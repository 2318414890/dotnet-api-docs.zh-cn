<Type Name="PromptBuilder" FullName="System.Speech.Synthesis.PromptBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="14118e75456eed1da06612825ae9e28e57c83a9f" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52739032" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PromptBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PromptBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.PromptBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class PromptBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class PromptBuilder" />
  <TypeSignature Language="F#" Value="type PromptBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4e45e-101">创建空的 <see cref="T:System.Speech.Synthesis.Prompt" /> 对象，并为添加内容、选择语音、控件语音属性和控件朗读单词的发音提供方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4e45e-101">Creates an empty <see cref="T:System.Speech.Synthesis.Prompt" /> object and provides methods for adding content, selecting voices, controlling voice attributes, and controlling the pronunciation of spoken words.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-102">与<xref:System.Speech.Synthesis.PromptBuilder>，可以添加各种内容类型添加到提示符处，包括纯文本、 SSML 标记 （作为字符串或文件） 录制音频，或甚至另一个<xref:System.Speech.Synthesis.PromptBuilder>对象。</span><span class="sxs-lookup"><span data-stu-id="4e45e-102">With <xref:System.Speech.Synthesis.PromptBuilder>, you can add a variety of content types to a prompt, including plain text, SSML markup (as a string or a file), recorded audio, or even another <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 <span data-ttu-id="4e45e-103">要追加到文本<xref:System.Speech.Synthesis.PromptBuilder>对象，并根据需要控制语音属性，如重点、 速率和卷，则使用其中一个<xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-103">To append text to a <xref:System.Speech.Synthesis.PromptBuilder> object and optionally control voice attributes such as emphasis, rate, and volume, use one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> methods.</span></span>  <span data-ttu-id="4e45e-104">您还可以控制语音属性为包含的组<xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A>和<xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-104">You can also control voice attributes as a group with the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> and <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> methods.</span></span>  
  
 <span data-ttu-id="4e45e-105">可以将文本追加和控制所说内容或它的发音使用如何<xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>，或<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-105">You can append text and control what is spoken or how it is pronounced using the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>,  <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> methods.</span></span>  
  
 <span data-ttu-id="4e45e-106">更改在提示符下使用的重载之一中当前所选的讲话声音<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>所需的方法，命名使用或指定特定语音语音特征，例如年龄和性别。</span><span class="sxs-lookup"><span data-stu-id="4e45e-106">Change the currently selected speaking voice in the prompt using one of the overloaded <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods, naming a specific voice to use or specifying required voice characteristics, such as age and gender.</span></span>  
  
 <span data-ttu-id="4e45e-107">若要生成从语音<xref:System.Speech.Synthesis.PromptBuilder>对象，可以将其作为参数传递<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-107">To generate speech from a <xref:System.Speech.Synthesis.PromptBuilder> object, you can pass it as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
 <span data-ttu-id="4e45e-108">有关详细信息，请参阅[构造复杂提示](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361616(v%3doffice.14))。</span><span class="sxs-lookup"><span data-stu-id="4e45e-108">For more information, see [Constructing a Complex Prompt](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361616(v%3doffice.14)).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-109">创建 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-109">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PromptBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PromptBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-110">创建 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-110">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4e45e-111">下面的示例创建一个新<xref:System.Speech.Synthesis.PromptBuilder>实例并向其添加一个文本字符串。</span><span class="sxs-lookup"><span data-stu-id="4e45e-111">The following example creates a new <xref:System.Speech.Synthesis.PromptBuilder> instance and adds a text string to it.</span></span>  
  
```csharp  
using System.Speech.Synthesis;  
  
public void MySimpleText ()  
{  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendText("Hello world!");  
}  
```  
  
 <span data-ttu-id="4e45e-112">以下标记显示等效于在语音合成标记语言 (SSML)，(`xml:lang`为必需的属性的`speak`元素):</span><span class="sxs-lookup"><span data-stu-id="4e45e-112">The following markup shows the equivalent in Speech Synthesis Markup Language (SSML), (`xml:lang` is a required attribute of the `speak` element):</span></span>  
  
```xml  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">  
  Hello world!  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PromptBuilder (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.#ctor(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PromptBuilder(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.PromptBuilder : System.Globalization.CultureInfo -&gt; System.Speech.Synthesis.PromptBuilder" Usage="new System.Speech.Synthesis.PromptBuilder culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="4e45e-113">提供有关特定区域性的信息，如其语言、区域性的名称、写入系统、使用的日历以及如何设置日期和排序字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-113">Provides information about a specific culture, such as its language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-114">创建 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 类的新实例并指定区域性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-114">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class and specifies a culture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-115">此构造函数设置的值<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4e45e-115">This constructor sets the value for the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="4e45e-116"><xref:System.Speech.Synthesis.SpeechSynthesizer>对象将尝试选择支持指定的语言已安装的语音`culture`参数以处理提示。</span><span class="sxs-lookup"><span data-stu-id="4e45e-116">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object will attempt to select an installed voice that supports the language specified by the `culture` parameter to process the prompt.</span></span> <span data-ttu-id="4e45e-117">如果找到具有指定的区域性的语音，则将使用它。</span><span class="sxs-lookup"><span data-stu-id="4e45e-117">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="4e45e-118">如果找不到具有指定的区域性的语音，将使用默认语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-118">If a voice with the specified culture cannot be found, the default voice will be used.</span></span>  
  
 <span data-ttu-id="4e45e-119">要正确地说出指定的语言中的单词`culture`必须安装支持语言的语音合成 （文字到语音或 TTS） 引擎参数。</span><span class="sxs-lookup"><span data-stu-id="4e45e-119">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="4e45e-120">已安装的 TTS 引擎，则为语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-120">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="4e45e-121">若要获取特定区域性的安装语音的信息，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-121">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="4e45e-122">Microsoft Windows 和 System.Speech API 作为的值接受所有有效语言-国家/地区代码`culture`。</span><span class="sxs-lookup"><span data-stu-id="4e45e-122">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="4e45e-123">随 Windows 7 的 TTS 引擎支持以下语言-国家/地区代码：</span><span class="sxs-lookup"><span data-stu-id="4e45e-123">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="4e45e-124">EN-US。</span><span class="sxs-lookup"><span data-stu-id="4e45e-124">en-US.</span></span> <span data-ttu-id="4e45e-125">英语 （美国）</span><span class="sxs-lookup"><span data-stu-id="4e45e-125">English (United States)</span></span>  
  
-   <span data-ttu-id="4e45e-126">zh CN。</span><span class="sxs-lookup"><span data-stu-id="4e45e-126">zh-CN.</span></span> <span data-ttu-id="4e45e-127">中文 （中国）</span><span class="sxs-lookup"><span data-stu-id="4e45e-127">Chinese (China)</span></span>  
  
-   <span data-ttu-id="4e45e-128">zh-TW。</span><span class="sxs-lookup"><span data-stu-id="4e45e-128">zh-TW.</span></span> <span data-ttu-id="4e45e-129">中文 （台湾）</span><span class="sxs-lookup"><span data-stu-id="4e45e-129">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="4e45e-130">此外允许使用两个字母的语言代码，例如"en"。</span><span class="sxs-lookup"><span data-stu-id="4e45e-130">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-131">下面的示例中创建<xref:System.Speech.Synthesis.PromptBuilder>实例并指定其<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-131">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> instance and specifies its <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>.</span></span>  
  
```csharp  
using System.Speech.Synthesis;  
  
public void MySimpleText ()  
{  
    PromptBuilder builder = new PromptBuilder(new System.Globalization.CultureInfo("en-US"));  
    builder.AppendText("Hello world!");  
}  
```  
  
 <span data-ttu-id="4e45e-132">以下标记显示等效的 SSML:</span><span class="sxs-lookup"><span data-stu-id="4e45e-132">The following markup shows the equivalent SSML:</span></span>  
  
```xml  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">  
  Hello world!  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendAudio">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-133">将指定的音频文件追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-133">Appends a specified audio file to a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendAudio : string -&gt; unit" Usage="promptBuilder.AppendAudio path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="4e45e-134">音频文件的完全限定路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-134">A fully qualified path to the audio file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-135">将指定的音频文件追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-135">Appends the specified audio file to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (Uri audioFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(class System.Uri audioFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (audioFile As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(Uri ^ audioFile);" />
      <MemberSignature Language="F#" Value="member this.AppendAudio : Uri -&gt; unit" Usage="promptBuilder.AppendAudio audioFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="audioFile">
          <span data-ttu-id="4e45e-136">音频文件的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-136">URI for the audio file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-137">将指定 URI 中的音频文件追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-137">Appends the audio file at the specified URI to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4e45e-138">下面的示例初始化的新实例<xref:System.Speech.Synthesis.PromptBuilder>类，然后将文本添加到它跟音频文件。</span><span class="sxs-lookup"><span data-stu-id="4e45e-138">The following example initializes a new instance of the <xref:System.Speech.Synthesis.PromptBuilder> class and then adds text to it, followed by an audio file.</span></span>  
  
```csharp  
using System.Speech.PromptBuilder;  
  
public void SimpleConcatenation()  
{  
    // Add a prompt fragment from a .wav file.  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendText("How are you today?");  
    builder.AppendAudio(new Uri ("http://www.speech.microsoft.com/ding.wav"));  
}  
```  
  
 <span data-ttu-id="4e45e-139">以下标记显示等效的 SSML 标记。</span><span class="sxs-lookup"><span data-stu-id="4e45e-139">The following markup shows the equivalent SSML markup.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis"  
       xmlns:ms="http://www.microsoft.com/speech/synthesis" xml:lang="en">  
  
  How are you today?  
  <audio src="http://www.speech.microsoft.com/ding.wav" />  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (Uri audioFile, string alternateText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(class System.Uri audioFile, string alternateText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (audioFile As Uri, alternateText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(Uri ^ audioFile, System::String ^ alternateText);" />
      <MemberSignature Language="F#" Value="member this.AppendAudio : Uri * string -&gt; unit" Usage="promptBuilder.AppendAudio (audioFile, alternateText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.Uri" />
        <Parameter Name="alternateText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="audioFile">
          <span data-ttu-id="4e45e-140">音频文件的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-140">URI for the audio file.</span>
          </span>
        </param>
        <param name="alternateText">
          <span data-ttu-id="4e45e-141">包含表示音频的替代文本的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-141">A string containing alternate text representing the audio.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-142">将指定的音频文件和替代文本追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-142">Appends the specified audio file and alternate text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-143">如果不能播放音频文件，语音合成引擎将进行朗读的替换文字。</span><span class="sxs-lookup"><span data-stu-id="4e45e-143">The speech synthesis engine will speak the alternate text if the audio file cannot be played.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-144">下面的示例将添加到一个音频文件<xref:System.Speech.Synthesis.PromptBuilder>实例并指定要朗读如果不能播放音频文件的文本。</span><span class="sxs-lookup"><span data-stu-id="4e45e-144">The following examples adds an audio file to a <xref:System.Speech.Synthesis.PromptBuilder> instance and specifies text to speak if the audio file cannot be played.</span></span>  
  
```csharp  
using System.Speech.PromptBuilder;  
  
public void SimpleConcatenation()  
{  
  
    // Concatenate a prompt fragment from a .wav file.  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendAudio(new Uri ("C:\\OnHold.wav"), "Your call will be answered in the order it was received");  
}  
```  
  
 <span data-ttu-id="4e45e-145">以下标记显示等效的 SSML 标记。</span><span class="sxs-lookup"><span data-stu-id="4e45e-145">The following markup shows the equivalent SSML markup.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis"  
       xmlns:ms="http://www.microsoft.com/speech/synthesis" xml:lang="en">  
  
  <audio src="C:\OnHold.wav"> Your call will be answered in the order it was received. </audio>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBookmark">
      <MemberSignature Language="C#" Value="public void AppendBookmark (string bookmarkName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBookmark(string bookmarkName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBookmark (bookmarkName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBookmark(System::String ^ bookmarkName);" />
      <MemberSignature Language="F#" Value="member this.AppendBookmark : string -&gt; unit" Usage="promptBuilder.AppendBookmark bookmarkName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="4e45e-146">一个包含追加书签名称的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-146">A string containing the name of the appended bookmark.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-147">将书签追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-147">Appends a bookmark to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-148">将生成的语音合成引擎<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>事件使用的任何提示的讲话遇到一个书签<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-148">A speech synthesis engine will generate a <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event if it encounters a bookmark while speaking a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-149">以下示例创建包含两个书签，并将输出发送到播放 WAV 文件的提示。</span><span class="sxs-lookup"><span data-stu-id="4e45e-149">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="4e45e-150">处理程序<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>事件引发到控制台时，事件会写入书签和音频流中的位置的名称。</span><span class="sxs-lookup"><span data-stu-id="4e45e-150">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendBreak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-151">在 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的内容中插入中断（暂停）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-151">Inserts a break (pause) in the content of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak();" />
      <MemberSignature Language="F#" Value="member this.AppendBreak : unit -&gt; unit" Usage="promptBuilder.AppendBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-152">将中断添加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-152">Appends a break to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-153">此方法不会指定为中断的持续时间。</span><span class="sxs-lookup"><span data-stu-id="4e45e-153">This method does not specify a duration for the break.</span></span> <span data-ttu-id="4e45e-154"><xref:System.Speech.Synthesis.SpeechSynthesizer>将确定基于语义上下文的持续时间值。</span><span class="sxs-lookup"><span data-stu-id="4e45e-154">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will determine a duration value based on the linguistic context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-155">下面的示例生成包含两个句子分隔中断的提示，并发表在计算机上的默认音频设备功能的提示。</span><span class="sxs-lookup"><span data-stu-id="4e45e-155">The following example builds a prompt containing two sentences separated by a break and speaks the prompt to the default audio device on the computer.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45.");  
        builder.AppendBreak();  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:30, and 9:15.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak (System.Speech.Synthesis.PromptBreak strength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak(valuetype System.Speech.Synthesis.PromptBreak strength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak (strength As PromptBreak)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak(System::Speech::Synthesis::PromptBreak strength);" />
      <MemberSignature Language="F#" Value="member this.AppendBreak : System.Speech.Synthesis.PromptBreak -&gt; unit" Usage="promptBuilder.AppendBreak strength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strength" Type="System.Speech.Synthesis.PromptBreak" />
      </Parameters>
      <Docs>
        <param name="strength">
          <span data-ttu-id="4e45e-156">指示中断的持续时间，使用以下增加值：</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-156">Indicates the duration of the break, with the following increasing values:</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-157">将中断添加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象，并指定其强度（持续时间）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-157">Appends a break to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies its strength (duration).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-158">中的值<xref:System.Speech.Synthesis.PromptBreak>枚举表示词的边界之间的分离间隔 （暂停） 一个范围。</span><span class="sxs-lookup"><span data-stu-id="4e45e-158">The values in the <xref:System.Speech.Synthesis.PromptBreak> enumeration represent a range of separation intervals (pauses) between word boundaries.</span></span> <span data-ttu-id="4e45e-159">语音合成引擎确定确切的持续时间的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="4e45e-159">The speech synthesis engine determines the exact duration of the interval.</span></span> <span data-ttu-id="4e45e-160">当请求中断时，下列值之一被传递给文本到语音转换 (TTS) 引擎，包含这些值与相应的毫秒级中断值之间的映射。</span><span class="sxs-lookup"><span data-stu-id="4e45e-160">When a break is requested, one of these values is passed to the text-to-speech (TTS) engine, which contains a mapping between these values and the corresponding millisecond break values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-161">下面的示例生成包含两个句子分隔中断的提示，并将输出发送到播放 WAV 文件。</span><span class="sxs-lookup"><span data-stu-id="4e45e-161">The following example builds a prompt containing two sentences separated by a break and sends the output to a WAV file for playback.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45");  
        builder.AppendBreak(PromptBreak.Medium);  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak (TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak(valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak (duration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak(TimeSpan duration);" />
      <MemberSignature Language="F#" Value="member this.AppendBreak : TimeSpan -&gt; unit" Usage="promptBuilder.AppendBreak duration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="duration">
          <span data-ttu-id="4e45e-162">在计时周期的时间，一个刻度等于 100 纳秒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-162">The time in ticks, where one tick equals 100 nanoseconds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-163">将指定持续时间的中断追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-163">Appends a break of the specified duration to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-164">一个分行符可以用于控制暂停或单词之间其他韵律边界。</span><span class="sxs-lookup"><span data-stu-id="4e45e-164">A break can be used to control pauses or other prosodic boundaries between words.</span></span> <span data-ttu-id="4e45e-165">一个分行符是可选的。</span><span class="sxs-lookup"><span data-stu-id="4e45e-165">A break is optional.</span></span> <span data-ttu-id="4e45e-166">如果不存在一个分行符，则合成器确定具体取决于语言的上下文的单词之间中断。</span><span class="sxs-lookup"><span data-stu-id="4e45e-166">If a break is not present, the synthesizer determines the break between words depending on the linguistic context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-167">下面的示例生成包含两个句子分隔 15000000 计时周期 （1.5 秒为单位），一个分行符的提示，并发表在计算机上的默认音频设备功能的提示。</span><span class="sxs-lookup"><span data-stu-id="4e45e-167">The following example builds a prompt containing two sentences separated by a break of 15,000,000 ticks (1.5 seconds), and speaks the prompt to the default audio device on the computer.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45");  
        builder.AppendBreak(new TimeSpan(15000000));  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPromptBuilder">
      <MemberSignature Language="C#" Value="public void AppendPromptBuilder (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendPromptBuilder(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendPromptBuilder(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendPromptBuilder(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.AppendPromptBuilder : System.Speech.Synthesis.PromptBuilder -&gt; unit" Usage="promptBuilder.AppendPromptBuilder promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="4e45e-168">要追加的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-168">The content to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-169">将一个 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象追加到另一个 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-169">Appends a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object to another <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4e45e-170">下面的示例创建两个<xref:System.Speech.Synthesis.PromptBuilder>实例，然后将它们追加到第三个<xref:System.Speech.Synthesis.PromptBuilder>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-170">The example that follows creates two <xref:System.Speech.Synthesis.PromptBuilder> instances and then appends them to a third <xref:System.Speech.Synthesis.PromptBuilder>.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\showtimes.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\showtimes.wav");  
  
        // Build child prompts.  
        PromptBuilder theatreA = new PromptBuilder();  
        theatreA.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 9:30");  
        theatreA.AppendBreak(PromptBreak.Large);  
        PromptBuilder theatreB = new PromptBuilder();  
        theatreB.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Build the parent prompt and append the two child prompts.  
        PromptBuilder showTimes = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        showTimes.AppendText(  
          "The following are the show times for tonight's movies:");  
        showTimes.AppendPromptBuilder(theatreA);  
        showTimes.AppendPromptBuilder(theatreB);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(showTimes);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSsml">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-171">将一个 SSML 文件追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-171">Appends an SSML file to a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendSsml : string -&gt; unit" Usage="promptBuilder.AppendSsml path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="4e45e-172">要追加的 SSML 文件的完全限定路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-172">A fully qualified path to the SSML file to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-173">将指定路径中的 SSML 文件追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-173">Appends the SSML file at the specified path to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-174">中的 SSML 文件必须是一个 XML 格式文件，符合[语音合成标记语言 (SSML) 版本 1.0](https://go.microsoft.com/fwlink/?LinkId=201763)规范。</span><span class="sxs-lookup"><span data-stu-id="4e45e-174">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763) specification.</span></span>  
  
 <span data-ttu-id="4e45e-175">也可以附加与字符串使用的 SSML 标记<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-175">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-176">下面的示例中创建<xref:System.Speech.Synthesis.PromptBuilder>对象，并追加的 SSML 文件使用内容<xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-176">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends the contents of an SSML file using the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a file that defines an SSML prompt.  
        PromptBuilder ssmlFile = new PromptBuilder();  
        ssmlFile.AppendSsml("c:\\test\\Weather.ssml");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(ssmlFile);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 <span data-ttu-id="4e45e-177">下面是前面的示例中引用的 SSML 文件。</span><span class="sxs-lookup"><span data-stu-id="4e45e-177">The following is the SSML file that the preceding example references.</span></span>  
  
```xml  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <s> The weather forecast for today is partly cloudy with some sun breaks. </s>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (Uri ssmlFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(class System.Uri ssmlFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (ssmlFile As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(Uri ^ ssmlFile);" />
      <MemberSignature Language="F#" Value="member this.AppendSsml : Uri -&gt; unit" Usage="promptBuilder.AppendSsml ssmlFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlFile" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="ssmlFile">
          <span data-ttu-id="4e45e-178">要追加的 SSML 文件的完全限定 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-178">A fully qualified URI to the SSML file to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-179">将指定 URL 中的 SSML 文件追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-179">Appends the SSML file at the specified URI to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-180">中的 SSML 文件必须是一个 XML 格式文件，符合[语音合成标记语言 (SSML) 版本 1.0](https://www.w3.org/TR/speech-synthesis/)规范。</span><span class="sxs-lookup"><span data-stu-id="4e45e-180">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://www.w3.org/TR/speech-synthesis/) specification.</span></span>  
  
 <span data-ttu-id="4e45e-181">也可以附加与字符串使用的 SSML 标记<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-181">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-182">下面的示例中创建<xref:System.Speech.Synthesis.PromptBuilder>对象，并追加的 SSML 文件使用内容<xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-182">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends the contents of an SSML file using the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a file that defines an SSML prompt.  
        PromptBuilder ssmlFile = new PromptBuilder();  
        ssmlFile.AppendSsml(new Uri("c:\\test\\Weather.ssml"));  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(ssmlFile);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="4e45e-183">下面是前面的示例中引用的 SSML 文件。</span><span class="sxs-lookup"><span data-stu-id="4e45e-183">The following is the SSML file that the preceding example references.</span></span>  
  
```xml  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <s> The weather forecast for today is partly cloudy with some sun breaks. </s>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (System.Xml.XmlReader ssmlFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(class System.Xml.XmlReader ssmlFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (ssmlFile As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(System::Xml::XmlReader ^ ssmlFile);" />
      <MemberSignature Language="F#" Value="member this.AppendSsml : System.Xml.XmlReader -&gt; unit" Usage="promptBuilder.AppendSsml ssmlFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlFile" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="ssmlFile">
          <span data-ttu-id="4e45e-184">要追加的 XML 文件的完全限定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-184">A fully qualified name to the XML file to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-185">追加一个 <c>XMLReader</c> 对象，该对象引用 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的 SSML 提示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-185">Appends an <c>XMLReader</c> object that references an SSML prompt to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-186">中的 SSML 文件必须是一个 XML 格式文件，符合[语音合成标记语言 (SSML) 版本 1.0](https://www.w3.org/TR/speech-synthesis/)规范。</span><span class="sxs-lookup"><span data-stu-id="4e45e-186">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://www.w3.org/TR/speech-synthesis/) specification.</span></span>  
  
 <span data-ttu-id="4e45e-187">也可以附加与字符串使用的 SSML 标记<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-187">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-188">下面的示例创建<xref:System.Speech.Synthesis.PromptBuilder>对象从<xref:System.Xml.XmlReader>对象，它引用包含语音合成标记语言 (SSML) 标记的文件。</span><span class="sxs-lookup"><span data-stu-id="4e45e-188">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from an <xref:System.Xml.XmlReader> object that references a file containing Speech Synthesis Markup Language (SSML) markup.</span></span>  
  
```csharp  
using System;  
using System.Xml;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Create the path to the SSML file.  
        string weatherFile = Path.GetFullPath("c:\\test\\Weather.xml");  
        PromptBuilder builder = null;  
  
        // Create an XML Reader from the file, create a PromptBuilder and   
        // append the XmlReader.  
        if (File.Exists(weatherFile))  
        {  
          XmlReader reader = XmlReader.Create(weatherFile);  
          builder = new PromptBuilder();  
          builder.AppendSsml(reader);  
          reader.Close();  
        }  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsmlMarkup">
      <MemberSignature Language="C#" Value="public void AppendSsmlMarkup (string ssmlMarkup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsmlMarkup(string ssmlMarkup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsmlMarkup (ssmlMarkup As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsmlMarkup(System::String ^ ssmlMarkup);" />
      <MemberSignature Language="F#" Value="member this.AppendSsmlMarkup : string -&gt; unit" Usage="promptBuilder.AppendSsmlMarkup ssmlMarkup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlMarkup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ssmlMarkup">
          <span data-ttu-id="4e45e-189">一个包含 SSML 标记的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-189">A string containing SSML markup.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-190">将包含 SSML 标记的指定字符串追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-190">Appends the specified string containing SSML markup to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-191">追加的 SSML 标记时，必须使用适当的转义符。</span><span class="sxs-lookup"><span data-stu-id="4e45e-191">You must use the appropriate escape characters when appending SSML markup.</span></span> <span data-ttu-id="4e45e-192">请注意，向后的斜杠前面包含它的值的引号`interpret-as`下面的示例中的属性：</span><span class="sxs-lookup"><span data-stu-id="4e45e-192">Notice the backward-slashes preceding the quotation marks enclosing the value of the `interpret-as` attribute in the following example:</span></span>  
  
```csharp  
builder.AppendSsmlMarkup("<say-as interpret-as = \"characters\"> chair </say-as>");  
```  
  
> [!NOTE]
>  <span data-ttu-id="4e45e-193">使用作为参数的字符串<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>不能包含`speak`元素。</span><span class="sxs-lookup"><span data-stu-id="4e45e-193">The string used as an argument to <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> cannot include a `speak` element.</span></span>  
  
 <span data-ttu-id="4e45e-194">使用时<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>以指定在内联发音`phoneme`元素，可以使用任何以下的注音字母表，提供当前语音引擎支持它的电话：</span><span class="sxs-lookup"><span data-stu-id="4e45e-194">When using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> to specify inline pronunciations in a `phoneme` element, you can use phones from any of the following phonetic alphabets, provided that the current speech engine supports it:</span></span>  
  
-   <span data-ttu-id="4e45e-195">国际音标 (IPA)</span><span class="sxs-lookup"><span data-stu-id="4e45e-195">International Phonetic Alphabet (IPA)</span></span>  
  
-   <span data-ttu-id="4e45e-196">通用电话集 (UPS)</span><span class="sxs-lookup"><span data-stu-id="4e45e-196">Universal Phone Set (UPS)</span></span>  
  
-   <span data-ttu-id="4e45e-197">设置 SAPI 电话</span><span class="sxs-lookup"><span data-stu-id="4e45e-197">SAPI Phone Set</span></span>  
  
 <span data-ttu-id="4e45e-198">任何符合 SSML 语音引擎将从 IPA 进行朗读手机。</span><span class="sxs-lookup"><span data-stu-id="4e45e-198">Any SSML-compliant speech engine will speak phones from the IPA.</span></span>  
  
 <span data-ttu-id="4e45e-199">也可以附加文件包含 SSML 标记使用之一<xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-199">You can also append a file containing SSML markup using one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods.</span></span> <span data-ttu-id="4e45e-200">若要追加文本要朗读的未使用标记语言进行格式化，请使用之一<xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>，或<xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-200">To append text to be spoken that is not formatted with markup language, use one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendText">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-201">将文本追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-201">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string -&gt; unit" Usage="promptBuilder.AppendText textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="4e45e-202">包含要发言文本的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-202">A string containing the text to be spoken.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-203">指定要追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-203">Specifies text to append to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-204">若要追加格式为 SSML 标记语言的文本，请使用<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-204">To append text that is formatted as SSML markup language, use <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-205">下面的示例中创建<xref:System.Speech.Synthesis.PromptBuilder>对象，并追加文本字符串使用<xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-205">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends a text string using the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder speakText = new PromptBuilder();  
        speakText.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt.  
        synth.Speak(speakText);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptEmphasis emphasis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptEmphasis emphasis) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, emphasis As PromptEmphasis)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptEmphasis emphasis);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string * System.Speech.Synthesis.PromptEmphasis -&gt; unit" Usage="promptBuilder.AppendText (textToSpeak, emphasis)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="emphasis" Type="System.Speech.Synthesis.PromptEmphasis" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="4e45e-206">包含要发言文本的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-206">A string containing the text to be spoken.</span>
          </span>
        </param>
        <param name="emphasis">
          <span data-ttu-id="4e45e-207">要应用于文本的强调或重音的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-207">The value for the emphasis or stress to apply to the text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-208">将文本追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象，并为该文本指定强调程度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-208">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the degree of emphasis for the text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-209">在 Windows 中的语音合成引擎在此时间不支持强调参数。</span><span class="sxs-lookup"><span data-stu-id="4e45e-209">The speech synthesis engines in Windows do not support the emphasis parameter at this time.</span></span> <span data-ttu-id="4e45e-210">设置强调参数的值将会产生合成的语音输出中没有声音更改。</span><span class="sxs-lookup"><span data-stu-id="4e45e-210">Setting values for the emphasis parameter will produce no audible change in the synthesized speech output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptRate rate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptRate rate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, rate As PromptRate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptRate rate);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string * System.Speech.Synthesis.PromptRate -&gt; unit" Usage="promptBuilder.AppendText (textToSpeak, rate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="rate" Type="System.Speech.Synthesis.PromptRate" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="4e45e-211">包含要发言文本的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-211">A string containing the text to be spoken.</span>
          </span>
        </param>
        <param name="rate">
          <span data-ttu-id="4e45e-212">应用于文本的语速的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-212">The value for the speaking rate to apply to the text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-213">将文本追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象，并为该文本指定语速。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-213">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the speaking rate for the text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4e45e-214">下面的示例创建<xref:System.Speech.Synthesis.PromptBuilder>对象，并追加文本字符串。</span><span class="sxs-lookup"><span data-stu-id="4e45e-214">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends text strings.</span></span> <span data-ttu-id="4e45e-215">该示例使用<xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>所添加的字符串的方法，以指定慢速谈到速率可枚举的订单的内容。</span><span class="sxs-lookup"><span data-stu-id="4e45e-215">The example uses the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method to specify a slow speaking rate for the string being added, which enumerates the contents of an order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder speakRate = new PromptBuilder();  
        speakRate.AppendText("Your order for");  
        speakRate.AppendText("one kitchen sink and one faucet", PromptRate.Slow);  
        speakRate.AppendText("has been confirmed.");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(speakRate);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptVolume volume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptVolume volume) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, volume As PromptVolume)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptVolume volume);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string * System.Speech.Synthesis.PromptVolume -&gt; unit" Usage="promptBuilder.AppendText (textToSpeak, volume)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="volume" Type="System.Speech.Synthesis.PromptVolume" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="4e45e-216">包含要发言文本的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-216">A string containing the text to be spoken.</span>
          </span>
        </param>
        <param name="volume">
          <span data-ttu-id="4e45e-217">应用于文本的朗读音量的值（响度）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-217">The value for the speaking volume (loudness) to apply to the text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-218">将文本追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象，并指定朗读该文本的音量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-218">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the volume to speak the text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-219"><xref:System.Speech.Synthesis.PromptVolume.Default>设置为<xref:System.Speech.Synthesis.PromptVolume>是相同的完整卷作为<xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-219">The <xref:System.Speech.Synthesis.PromptVolume.Default> setting for <xref:System.Speech.Synthesis.PromptVolume> is full volume, which is the same as <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span></span> <span data-ttu-id="4e45e-220">其他设置会降低语音输出相对于完整的卷的卷。</span><span class="sxs-lookup"><span data-stu-id="4e45e-220">The other settings decrease the volume of speech output relative to full volume.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-221">下面的示例使用<xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>方法，以指定卷设置的<xref:System.Speech.Synthesis.SpeechSynthesizer>应适用于语音输出。</span><span class="sxs-lookup"><span data-stu-id="4e45e-221">The following example uses the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method to specify volume settings that the <xref:System.Speech.Synthesis.SpeechSynthesizer> should apply to speech output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt that applies different volume settings.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is the default speaking volume.", PromptVolume.Default);  
        builder.AppendBreak();  
        builder.AppendText("This is the extra loud speaking volume.", PromptVolume.ExtraLoud);  
        builder.AppendBreak();  
        builder.AppendText("This is the medium speaking volume.", PromptVolume.Medium);  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithAlias">
      <MemberSignature Language="C#" Value="public void AppendTextWithAlias (string textToSpeak, string substitute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithAlias(string textToSpeak, string substitute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithAlias (textToSpeak As String, substitute As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithAlias(System::String ^ textToSpeak, System::String ^ substitute);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithAlias : string * string -&gt; unit" Usage="promptBuilder.AppendTextWithAlias (textToSpeak, substitute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="substitute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="4e45e-222">包含文本表示形式的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-222">A string containing the text representation.</span>
          </span>
        </param>
        <param name="substitute">
          <span data-ttu-id="4e45e-223">包含要发言文本的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-223">A string containing the text to be spoken.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-224">将文本追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象，并指定在该追加的文本位置处朗读的别名文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-224">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the alias text to be spoken in place of the appended text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-225">这允许文档包含语音和提示书面的形式。</span><span class="sxs-lookup"><span data-stu-id="4e45e-225">This allows a document to contain both a spoken and a written form for a prompt.</span></span> <span data-ttu-id="4e45e-226">例如，书面的形式可能是首字母缩写词，如 SAPI、 和口头的形式可能是首字母缩写词，在此事例语音应用程序编程接口的扩展的文本。</span><span class="sxs-lookup"><span data-stu-id="4e45e-226">For example, the written form could be an acronym, such as SAPI, and the spoken form could be the expanded text for the acronym, in this case Speech Application Programming Interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-227">下面的示例将文本字符串 （"语音合成标记语言"） 和其别名 ("SSML") 追加到<xref:System.Speech.Synthesis.PromptBuilder>对象。</span><span class="sxs-lookup"><span data-stu-id="4e45e-227">The following example appends a text string ("Speech Synthesis Markup Language") and its alias ("SSML") to a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span> <span data-ttu-id="4e45e-228">合成器将说出"S S M L"。</span><span class="sxs-lookup"><span data-stu-id="4e45e-228">The synthesizer will pronounce "S S M L".</span></span>  
  
```  
PromptBuilder alias = new PromptBuilder();  
alias.AppendTextWithAlias("Speech Synthesis Markup Language","SSML");   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendTextWithHint">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-229">将文本追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象，并指定该文本的内容类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-229">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the content type of the text.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendTextWithHint">
      <MemberSignature Language="C#" Value="public void AppendTextWithHint (string textToSpeak, System.Speech.Synthesis.SayAs sayAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithHint(string textToSpeak, valuetype System.Speech.Synthesis.SayAs sayAs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithHint(System::String ^ textToSpeak, System::Speech::Synthesis::SayAs sayAs);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithHint : string * System.Speech.Synthesis.SayAs -&gt; unit" Usage="promptBuilder.AppendTextWithHint (textToSpeak, sayAs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="sayAs" Type="System.Speech.Synthesis.SayAs" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="4e45e-230">包含要发言文本的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-230">A string containing the text to be spoken.</span>
          </span>
        </param>
        <param name="sayAs">
          <span data-ttu-id="4e45e-231">文本的内容类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-231">The content type of the text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-232">将文本追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象，并使用 <see cref="T:System.Speech.Synthesis.SayAs" /> 枚举的成员指定内容类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-232">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the content type using a member of the <see cref="T:System.Speech.Synthesis.SayAs" /> enumeration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-233">指定的内容类型`sayAs`我们可以了解到有关如何发音的内容的语音合成引擎`textToSpeak`。</span><span class="sxs-lookup"><span data-stu-id="4e45e-233">The content type specified by `sayAs` can provide guidance to the speech synthesis engine about how to pronounce the contents of `textToSpeak`.</span></span>  
  
   
  
## Examples  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and define the data types for some of the added strings.  
        PromptBuilder sayAs = new PromptBuilder();  
        sayAs.AppendText("Your");  
        sayAs.AppendTextWithHint("1st", SayAs.NumberOrdinal);  
        sayAs.AppendText("request was for");  
        sayAs.AppendTextWithHint("1", SayAs.NumberCardinal);  
        sayAs.AppendText("room, on");  
        sayAs.AppendTextWithHint("10/19/2012,", SayAs.MonthDayYear);  
        sayAs.AppendText("with early arrival at");  
        sayAs.AppendTextWithHint("12:35pm", SayAs.Time12);  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(sayAs);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithHint">
      <MemberSignature Language="C#" Value="public void AppendTextWithHint (string textToSpeak, string sayAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithHint(string textToSpeak, string sayAs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithHint (textToSpeak As String, sayAs As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithHint(System::String ^ textToSpeak, System::String ^ sayAs);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithHint : string * string -&gt; unit" Usage="promptBuilder.AppendTextWithHint (textToSpeak, sayAs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="sayAs" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="4e45e-234">包含要发言文本的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-234">A string containing the text to be spoken.</span>
          </span>
        </param>
        <param name="sayAs">
          <span data-ttu-id="4e45e-235">文本的内容类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-235">The content type of the text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-236">将文本追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象本，<see cref="T:System.String" /> 指定该文本的内容类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-236">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and a <see cref="T:System.String" /> that specifies the content type of the text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-237">可以使用此方法来指定内容类型中不包含<xref:System.Speech.Synthesis.SayAs>枚举。</span><span class="sxs-lookup"><span data-stu-id="4e45e-237">You can use this method to specify a content type that is not included in the <xref:System.Speech.Synthesis.SayAs> enumeration.</span></span> <span data-ttu-id="4e45e-238">但是，TTS 引擎必须支持您指定的参数。</span><span class="sxs-lookup"><span data-stu-id="4e45e-238">However, the TTS engine must support the parameter that you specify.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithPronunciation">
      <MemberSignature Language="C#" Value="public void AppendTextWithPronunciation (string textToSpeak, string pronunciation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithPronunciation(string textToSpeak, string pronunciation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithPronunciation (textToSpeak As String, pronunciation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithPronunciation(System::String ^ textToSpeak, System::String ^ pronunciation);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithPronunciation : string * string -&gt; unit" Usage="promptBuilder.AppendTextWithPronunciation (textToSpeak, pronunciation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="pronunciation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="4e45e-239">包含使用语言传统字母表写入形式的单词的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-239">A string containing the written form of the word using the conventional alphabet for a language.</span>
          </span>
        </param>
        <param name="pronunciation">
          <span data-ttu-id="4e45e-240">包含要以国际音标 (IPA) 进行朗读的电话的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-240">A string containing phones to be spoken from the International Phonetic Alphabet (IPA).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-241">将文本追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象，并为该文本指定发音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-241">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the pronunciation for the text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-242">内容的语言合成`pronunciation`参数，不包括的内容`textToSpeak`参数。</span><span class="sxs-lookup"><span data-stu-id="4e45e-242">The synthesizer speaks the contents of the `pronunciation` parameter, not the contents of the `textToSpeak` parameter.</span></span>  
  
 <span data-ttu-id="4e45e-243">在提示中的内联指定的发音仅适用于 word 的各个匹配项，并重写发音的语音引擎或任何其当前处于活动状态的词典。</span><span class="sxs-lookup"><span data-stu-id="4e45e-243">Pronunciations specified inline in prompts apply only to the individual occurrence of a word and override pronunciations of the speech engine or any of its currently active lexicons.</span></span> <span data-ttu-id="4e45e-244">通常情况下，将使用内联发音为自定义现有字词的发音或不常见的单词，如专有名词，该的语音合成引擎可能的发音，以及预期的发音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-244">Typically, you will use inline pronunciations for custom pronunciations of existing words or for pronunciation of uncommon words, such as proper names, which the speech synthesis engine may not pronounce as well as expected.</span></span>  
  
 <span data-ttu-id="4e45e-245">必须使用手机从国际音标 (IPA) 来指定内联发音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-245">Inline pronunciations must be specified using phones from the International Phonetic Alphabet (IPA).</span></span> <span data-ttu-id="4e45e-246">手机就是以字母或表示语音的离散声音的字符。</span><span class="sxs-lookup"><span data-stu-id="4e45e-246">A phone is a letter or character that represents a discreet sound of speech.</span></span> <span data-ttu-id="4e45e-247">符合的语音引擎[语音合成标记语言 (SSML) 版本 1.0](https://go.microsoft.com/fwlink/?LinkId=201763)规范将发音 IPA 的电话。</span><span class="sxs-lookup"><span data-stu-id="4e45e-247">Speech engines that comply with the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763) specification will pronounce phones from the IPA.</span></span> <span data-ttu-id="4e45e-248">若要指定使用其他的注音字母表的内联发音，请参阅<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-248">To specify inline pronunciations using other phonetic alphabets, see <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
 <span data-ttu-id="4e45e-249">IPA 将发布[图表](https://go.microsoft.com/fwlink/?LinkId=58362)，列出其电话，并将它们映射到 Unicode 数字。</span><span class="sxs-lookup"><span data-stu-id="4e45e-249">The IPA publishes a [chart](https://go.microsoft.com/fwlink/?LinkId=58362) that lists its phones and maps them to Unicode numbers.</span></span>  
  
 <span data-ttu-id="4e45e-250">IPA 字母表中的某些电话拉丁字母表中具有相同的表示形式为字母。</span><span class="sxs-lookup"><span data-stu-id="4e45e-250">Some phones in the IPA alphabet have the same representations as letters in the Latin alphabet.</span></span> <span data-ttu-id="4e45e-251">在这些情况下，很可能键入拉丁字符，并让手机的正确表示形式。</span><span class="sxs-lookup"><span data-stu-id="4e45e-251">In those cases, it is possible to type the Latin character and have the proper representation for a phone.</span></span> <span data-ttu-id="4e45e-252">因为常用文本中使用的拉丁字符可能代表 IPA 电话集的多个电话，只需键入拉丁字符可能导致所需的精确 IPA 手机。</span><span class="sxs-lookup"><span data-stu-id="4e45e-252">Because the Latin characters as commonly used in text may represent several phones of the IPA phone set, simply typing the Latin character might not result in the precise IPA phone desired.</span></span> <span data-ttu-id="4e45e-253">IPA 字母表需在代码中表示其他手机字符引用组成 & 号 (&)、 数字符号 （#），并以十六进制或十进制、 所需的电话 Unicode 数字所有后跟分号 （;）。</span><span class="sxs-lookup"><span data-stu-id="4e45e-253">Other phones of the IPA alphabet need to be represented in code as character references consisting of an ampersand (&), the number sign (#), and a Unicode number for the desired phone in hexadecimal or decimal, all followed by a semicolon (;).</span></span> <span data-ttu-id="4e45e-254">例如，schwa (&\#x0259;) 将由表示`&#x0259;`。</span><span class="sxs-lookup"><span data-stu-id="4e45e-254">For example, a schwa (&\#x0259;) would be represented by `&#x0259;`.</span></span>  
  
 <span data-ttu-id="4e45e-255">若要添加新的或自定义多个单词的发音，例如为 express 区域方言或添加正确的名称或特定于教育或医疗专业的词汇，生成词典，并将其添加到<xref:System.Speech.Synthesis.SpeechSynthesizer>使用<xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-255">To add new or custom pronunciations for multiple words, for example to express regional dialects or to add proper names or vocabulary that is specific to an educational or medical discipline, build a lexicon and add it to the <xref:System.Speech.Synthesis.SpeechSynthesizer> using <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-256">下面的示例初始化的新实例<xref:System.Speech.Synthesis.PromptBuilder>类。</span><span class="sxs-lookup"><span data-stu-id="4e45e-256">The following example initializes a new instance of the <xref:System.Speech.Synthesis.PromptBuilder> class.</span></span> <span data-ttu-id="4e45e-257">它然后将追加的文本字符串"My name is"的实例。</span><span class="sxs-lookup"><span data-stu-id="4e45e-257">It then appends the text string "My name is" to the instance.</span></span> <span data-ttu-id="4e45e-258">最后，它将追加包含正确的名称"DuBois"的字符串，并指定名称的发音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-258">Finally, it appends a string containing the proper name "DuBois" and specifies the pronunciation of the name.</span></span>  
  
```csharp  
public void ProperName()  
{  
    PromptBuilder builder = new PromptBuilder();  
    builder.AppendText("My name is");  
  
    // Add a proper name and its pronunciation.  
    builder.AppendTextWithPronunciation("DuBois", "duˈbwɑ");     
}  
```  
  
 <span data-ttu-id="4e45e-259">以下标记显示 SSML 此<xref:System.Speech.Synthesis.PromptBuilder>对象生成。</span><span class="sxs-lookup"><span data-stu-id="4e45e-259">The following markup shows the SSML that this <xref:System.Speech.Synthesis.PromptBuilder> object generates.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-us">  
  My name is <phoneme ph="duˈbwɑ"> DuBois </phoneme>  
</speak>  
```  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=58363">
          <span data-ttu-id="4e45e-260">国际拼音关联</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-260">International Phonetic Association</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ClearContent">
      <MemberSignature Language="C#" Value="public void ClearContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.ClearContent" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearContent();" />
      <MemberSignature Language="F#" Value="member this.ClearContent : unit -&gt; unit" Usage="promptBuilder.ClearContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-261">清除 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-261">Clears the content from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PromptBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Speech.Synthesis.PromptBuilder.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-262">获取或设置 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的区域性信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-262">Gets or sets the culture information for the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-263"><xref:System.Speech.Synthesis.SpeechSynthesizer>对象将尝试选择支持指定的语言已安装的语音<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>属性来处理提示。</span><span class="sxs-lookup"><span data-stu-id="4e45e-263">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object will attempt to select an installed voice that supports the language specified by the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property to process the prompt.</span></span> <span data-ttu-id="4e45e-264">如果找到具有指定的区域性的语音，则将使用它。</span><span class="sxs-lookup"><span data-stu-id="4e45e-264">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="4e45e-265">如果找不到具有指定的区域性的语音，将使用默认语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-265">If a voice with the specified culture cannot be found, the default voice will be used.</span></span>  
  
 <span data-ttu-id="4e45e-266">此外可以在提示中的内容使用的离散部分指定区域性<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>， <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>，和<xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-266">A culture may also be specified within the prompt for discreet sections of content using the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, and <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> methods.</span></span> <span data-ttu-id="4e45e-267">为使用上述方法之一的内容部分将替代指定的区域性<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>属性而实际上，并<xref:System.Speech.Synthesis.SpeechSynthesizer>将尝试选择支持指定的语言已安装的语音`culture`方法参数。</span><span class="sxs-lookup"><span data-stu-id="4e45e-267">A culture specified for a portion of content using one of the above methods will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property while in effect, and the <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter of the method.</span></span>  
  
 <span data-ttu-id="4e45e-268">要正确地说出指定的语言中的单词<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>必须安装属性，支持语言的语音合成 （文字到语音或 TTS） 引擎。</span><span class="sxs-lookup"><span data-stu-id="4e45e-268">To correctly pronounce words in the language specified by the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="4e45e-269">已安装的 TTS 引擎，则为语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-269">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="4e45e-270">若要获取特定区域性的安装语音的信息，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-270">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="4e45e-271">Microsoft Windows 和 System.Speech API 作为的值接受所有有效语言-国家/地区代码`culture`。</span><span class="sxs-lookup"><span data-stu-id="4e45e-271">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="4e45e-272">随 Windows 7 的 TTS 引擎支持以下语言-国家/地区代码：</span><span class="sxs-lookup"><span data-stu-id="4e45e-272">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="4e45e-273">EN-US。</span><span class="sxs-lookup"><span data-stu-id="4e45e-273">en-US.</span></span> <span data-ttu-id="4e45e-274">英语 （美国）</span><span class="sxs-lookup"><span data-stu-id="4e45e-274">English (United States)</span></span>  
  
-   <span data-ttu-id="4e45e-275">zh CN。</span><span class="sxs-lookup"><span data-stu-id="4e45e-275">zh-CN.</span></span> <span data-ttu-id="4e45e-276">中文 （中国）</span><span class="sxs-lookup"><span data-stu-id="4e45e-276">Chinese (China)</span></span>  
  
-   <span data-ttu-id="4e45e-277">zh-TW。</span><span class="sxs-lookup"><span data-stu-id="4e45e-277">zh-TW.</span></span> <span data-ttu-id="4e45e-278">中文 （台湾）</span><span class="sxs-lookup"><span data-stu-id="4e45e-278">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="4e45e-279">此外允许使用两个字母的语言代码，例如"en"。</span><span class="sxs-lookup"><span data-stu-id="4e45e-279">Two-letter language codes such as "en" are also permitted.</span></span>  <span data-ttu-id="4e45e-280">请参阅[语言标识符常量和字符串](https://msdn.microsoft.com/library/dd318693\(VS.85\).aspx)有关语言代码的完整列表。</span><span class="sxs-lookup"><span data-stu-id="4e45e-280">See [Language Identifier Constants and Strings](https://msdn.microsoft.com/library/dd318693\(VS.85\).aspx) for a comprehensive list of language codes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndParagraph">
      <MemberSignature Language="C#" Value="public void EndParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndParagraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndParagraph();" />
      <MemberSignature Language="F#" Value="member this.EndParagraph : unit -&gt; unit" Usage="promptBuilder.EndParagraph " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-281">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的段落结束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-281">Specifies the end of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-282">如果它们细分成句子和段落长提示后，可以将其呈现为更像人的语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-282">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span> <span data-ttu-id="4e45e-283">有关示例，请参见 <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-283">See <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSentence">
      <MemberSignature Language="C#" Value="public void EndSentence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSentence() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndSentence" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSentence ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSentence();" />
      <MemberSignature Language="F#" Value="member this.EndSentence : unit -&gt; unit" Usage="promptBuilder.EndSentence " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-284">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的句子结束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-284">Specifies the end of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-285">如果它们细分成句子和段落长提示后，可以将其呈现为更像人的语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-285">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span> <span data-ttu-id="4e45e-286">有关示例，请参见 <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-286">See <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndStyle">
      <MemberSignature Language="C#" Value="public void EndStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndStyle();" />
      <MemberSignature Language="F#" Value="member this.EndStyle : unit -&gt; unit" Usage="promptBuilder.EndStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-287">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的样式结束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-287">Specifies the end of a style in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-288"><xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A>方法停止当前的说话风格。</span><span class="sxs-lookup"><span data-stu-id="4e45e-288">The <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> method stops the current speaking style.</span></span> <span data-ttu-id="4e45e-289">说话风格会恢复为有效之前已设置<xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A>方法启动新的说话风格。</span><span class="sxs-lookup"><span data-stu-id="4e45e-289">The speaking style reverts to the setting that was in effect before the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method initiated a new speaking style.</span></span> <span data-ttu-id="4e45e-290">有关示例，请参见 <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-290">See <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndVoice">
      <MemberSignature Language="C#" Value="public void EndVoice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndVoice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndVoice" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndVoice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndVoice();" />
      <MemberSignature Language="F#" Value="member this.EndVoice : unit -&gt; unit" Usage="promptBuilder.EndVoice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-291">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的语音使用结束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-291">Specifies the end of use of a voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-292"><xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>方法停止使用当前的语音的语音输出。</span><span class="sxs-lookup"><span data-stu-id="4e45e-292">The <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A> method stops the use of the current voice for speech output.</span></span> <span data-ttu-id="4e45e-293">语音恢复为有效之前已设置<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>方法启动一个新的声音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-293">The voice reverts to the setting that was in effect before the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> method initiated a new voice.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PromptBuilder.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Speech.Synthesis.PromptBuilder.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-294">获取 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 是否为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-294">Gets whether the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> is empty.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartParagraph">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-295">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的段落开始，还可以选择指定语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-295">Specifies the start of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object, and optionally specifies a language.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-296">如果它们细分成句子和段落长提示后，可以将其呈现为更像人的语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-296">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartParagraph">
      <MemberSignature Language="C#" Value="public void StartParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartParagraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartParagraph();" />
      <MemberSignature Language="F#" Value="member this.StartParagraph : unit -&gt; unit" Usage="promptBuilder.StartParagraph " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-297">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的段落开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-297">Specifies the start of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-298">如果它们细分成句子和段落长提示后，可以将其呈现为更像人的语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-298">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-299">下面的示例创建<xref:System.Speech.Synthesis.PromptBuilder>对象，将追加内容，并将内容组织到段落和句子。</span><span class="sxs-lookup"><span data-stu-id="4e45e-299">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends content, and organizes the content into paragraphs and sentences.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content as paragraphs and sentences.  
        PromptBuilder parSent = new PromptBuilder();  
        parSent.StartParagraph();  
        parSent.StartSentence();  
        parSent.AppendText("Introducing the sentence element.");  
        parSent.EndSentence();  
        parSent.StartSentence();  
        parSent.AppendText("You can use it to mark individual sentences.");  
        parSent.EndSentence();  
        parSent.EndParagraph();  
        parSent.StartParagraph();  
        parSent.AppendText("Another simple paragraph. Sentence structure in this paragraph" +  
          "is not explicitly marked.");  
        parSent.EndParagraph();  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(parSent);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartParagraph">
      <MemberSignature Language="C#" Value="public void StartParagraph (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartParagraph(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartParagraph (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartParagraph(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.StartParagraph : System.Globalization.CultureInfo -&gt; unit" Usage="promptBuilder.StartParagraph culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="4e45e-300">提供有关特定区域性的信息，如语言、区域性的名称、写入系统、使用的日历以及如何设置日期和排序字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-300">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-301">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中指定区域性中的段落开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-301">Specifies the start of a paragraph in the specified culture in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-302">如果它们细分成句子和段落长提示后，可以将其呈现为更像人的语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-302">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 <span data-ttu-id="4e45e-303">`culture`段落的参数可以为不同于<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>属性的<xref:System.Speech.Synthesis.PromptBuilder>对象，其中包含它。</span><span class="sxs-lookup"><span data-stu-id="4e45e-303">The `culture` parameter for a paragraph can be different than the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains it.</span></span> <span data-ttu-id="4e45e-304">实际上，虽然的值`culture`参数将重写<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4e45e-304">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="4e45e-305"><xref:System.Speech.Synthesis.SpeechSynthesizer>将尝试选择支持指定的语言已安装的语音`culture`参数要朗读的段落。</span><span class="sxs-lookup"><span data-stu-id="4e45e-305">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the paragraph.</span></span> <span data-ttu-id="4e45e-306">如果找到具有指定的区域性的语音，则将使用它。</span><span class="sxs-lookup"><span data-stu-id="4e45e-306">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="4e45e-307">如果找不到具有指定的区域性的语音，将使用默认语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-307">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="4e45e-308">若要停止使用指定的语音<xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>，调用<xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-308">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>.</span></span>  
  
 <span data-ttu-id="4e45e-309">要正确地说出指定的语言中的单词`culture`必须安装支持语言的语音合成 （文字到语音或 TTS） 引擎参数。</span><span class="sxs-lookup"><span data-stu-id="4e45e-309">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="4e45e-310">已安装的 TTS 引擎，则为语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-310">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="4e45e-311">若要获取特定区域性的安装语音的信息，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-311">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="4e45e-312">Microsoft Windows 和 System.Speech API 作为的值接受所有有效语言-国家/地区代码`culture`。</span><span class="sxs-lookup"><span data-stu-id="4e45e-312">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="4e45e-313">随 Windows 7 的 TTS 引擎支持以下语言-国家/地区代码：</span><span class="sxs-lookup"><span data-stu-id="4e45e-313">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="4e45e-314">EN-US。</span><span class="sxs-lookup"><span data-stu-id="4e45e-314">en-US.</span></span> <span data-ttu-id="4e45e-315">英语 （美国）</span><span class="sxs-lookup"><span data-stu-id="4e45e-315">English (United States)</span></span>  
  
-   <span data-ttu-id="4e45e-316">zh CN。</span><span class="sxs-lookup"><span data-stu-id="4e45e-316">zh-CN.</span></span> <span data-ttu-id="4e45e-317">中文 （中国）</span><span class="sxs-lookup"><span data-stu-id="4e45e-317">Chinese (China)</span></span>  
  
-   <span data-ttu-id="4e45e-318">zh-TW。</span><span class="sxs-lookup"><span data-stu-id="4e45e-318">zh-TW.</span></span> <span data-ttu-id="4e45e-319">中文 （台湾）</span><span class="sxs-lookup"><span data-stu-id="4e45e-319">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="4e45e-320">此外允许使用两个字母的语言代码，例如"en"。</span><span class="sxs-lookup"><span data-stu-id="4e45e-320">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartSentence">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-321">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的句子开始，还可以选择指定语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-321">Specifies the start of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object, and optionally specifies a language.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-322">如果它们细分成句子和段落长提示后，可以将其呈现为更像人的语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-322">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartSentence">
      <MemberSignature Language="C#" Value="public void StartSentence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartSentence() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartSentence" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartSentence ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartSentence();" />
      <MemberSignature Language="F#" Value="member this.StartSentence : unit -&gt; unit" Usage="promptBuilder.StartSentence " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-323">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的句子开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-323">Specifies the start of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-324">如果它们细分成句子和段落长提示后，可以将其呈现为更像人的语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-324">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-325">下面的示例创建<xref:System.Speech.Synthesis.PromptBuilder>对象，将追加内容，并将内容组织到段落和句子。</span><span class="sxs-lookup"><span data-stu-id="4e45e-325">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends content, and organizes the content into paragraphs and sentences.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content as paragraphs and sentences.  
        PromptBuilder parSent = new PromptBuilder();  
        parSent.StartParagraph();  
        parSent.StartSentence();  
        parSent.AppendText("Introducing the sentence element.");  
        parSent.EndSentence();  
        parSent.StartSentence();  
        parSent.AppendText("You can use it to mark individual sentences.");  
        parSent.EndSentence();  
        parSent.EndParagraph();  
        parSent.StartParagraph();  
        parSent.AppendText("Another simple paragraph. Sentence structure in this paragraph" +  
          "is not explicitly marked.");  
        parSent.EndParagraph();  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(parSent);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSentence">
      <MemberSignature Language="C#" Value="public void StartSentence (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartSentence(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartSentence (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartSentence(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.StartSentence : System.Globalization.CultureInfo -&gt; unit" Usage="promptBuilder.StartSentence culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="4e45e-326">提供有关特定区域性的信息，如语言、区域性的名称、写入系统、使用的日历以及如何设置日期和排序字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-326">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-327">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中指定区域性中的句子开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-327">Specifies the start of a sentence in the specified culture in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-328">如果它们细分成句子和段落长提示后，可以将其呈现为更像人的语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-328">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 <span data-ttu-id="4e45e-329">`culture`句子的参数可以为不同于`culture`参数包含该句子的段落或<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>属性的<xref:System.Speech.Synthesis.PromptBuilder>包含它们的对象。</span><span class="sxs-lookup"><span data-stu-id="4e45e-329">The `culture` parameter for a sentence can be different than the `culture` parameter for the paragraph that contains the sentence or the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains them.</span></span>  
  
 <span data-ttu-id="4e45e-330">实际上，虽然的值`culture`参数将重写<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>属性和`culture`参数包含该句子的段落。</span><span class="sxs-lookup"><span data-stu-id="4e45e-330">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property and the `culture` parameter for the paragraph that contains the sentence.</span></span> <span data-ttu-id="4e45e-331"><xref:System.Speech.Synthesis.SpeechSynthesizer>将尝试选择支持指定的语言已安装的语音`culture`参数要朗读的句子。</span><span class="sxs-lookup"><span data-stu-id="4e45e-331">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the sentence.</span></span> <span data-ttu-id="4e45e-332">如果找到具有指定的区域性的语音，则将使用它。</span><span class="sxs-lookup"><span data-stu-id="4e45e-332">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="4e45e-333">如果找不到具有指定的区域性的语音，将使用默认语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-333">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="4e45e-334">若要停止使用指定的语音<xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>，调用<xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-334">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A>.</span></span>  
  
 <span data-ttu-id="4e45e-335">要正确地说出指定的语言中的单词`culture`必须安装支持语言的语音合成 （文字到语音或 TTS） 引擎参数。</span><span class="sxs-lookup"><span data-stu-id="4e45e-335">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="4e45e-336">已安装的 TTS 引擎，则为语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-336">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="4e45e-337">若要获取特定区域性的安装语音的信息，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-337">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="4e45e-338">Microsoft Windows 和 System.Speech API 作为的值接受所有有效语言-国家/地区代码`culture`。</span><span class="sxs-lookup"><span data-stu-id="4e45e-338">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="4e45e-339">随 Windows 7 的 TTS 引擎支持以下语言-国家/地区代码：</span><span class="sxs-lookup"><span data-stu-id="4e45e-339">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="4e45e-340">EN-US。</span><span class="sxs-lookup"><span data-stu-id="4e45e-340">en-US.</span></span> <span data-ttu-id="4e45e-341">英语 （美国）</span><span class="sxs-lookup"><span data-stu-id="4e45e-341">English (United States)</span></span>  
  
-   <span data-ttu-id="4e45e-342">zh CN。</span><span class="sxs-lookup"><span data-stu-id="4e45e-342">zh-CN.</span></span> <span data-ttu-id="4e45e-343">中文 （中国）</span><span class="sxs-lookup"><span data-stu-id="4e45e-343">Chinese (China)</span></span>  
  
-   <span data-ttu-id="4e45e-344">zh-TW。</span><span class="sxs-lookup"><span data-stu-id="4e45e-344">zh-TW.</span></span> <span data-ttu-id="4e45e-345">中文 （台湾）</span><span class="sxs-lookup"><span data-stu-id="4e45e-345">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="4e45e-346">此外允许使用两个字母的语言代码，例如"en"。</span><span class="sxs-lookup"><span data-stu-id="4e45e-346">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartStyle">
      <MemberSignature Language="C#" Value="public void StartStyle (System.Speech.Synthesis.PromptStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartStyle(class System.Speech.Synthesis.PromptStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartStyle(System.Speech.Synthesis.PromptStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartStyle (style As PromptStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartStyle(System::Speech::Synthesis::PromptStyle ^ style);" />
      <MemberSignature Language="F#" Value="member this.StartStyle : System.Speech.Synthesis.PromptStyle -&gt; unit" Usage="promptBuilder.StartStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Speech.Synthesis.PromptStyle" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="4e45e-347">要开始的样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-347">The style to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-348">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的样式开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-348">Specifies the start of a style in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-349"><xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A>方法采用<xref:System.Speech.Synthesis.PromptStyle>对象作为其参数。</span><span class="sxs-lookup"><span data-stu-id="4e45e-349">The <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method takes a <xref:System.Speech.Synthesis.PromptStyle> object as its argument.</span></span> <span data-ttu-id="4e45e-350">可以使用的属性<xref:System.Speech.Synthesis.PromptStyle>对象，以强调，语速，以及要应用于语音输出有效样式时的音量 （大声） 设置。</span><span class="sxs-lookup"><span data-stu-id="4e45e-350">You can use the properties of the <xref:System.Speech.Synthesis.PromptStyle> object to set the emphasis, speaking rate, and volume (loudness) to apply to speech output while the style is in effect.</span></span> <span data-ttu-id="4e45e-351">若要停止使用的当前样式，请调用<xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-351">To stop using the current style, call the <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> method.</span></span>  
  
> [!NOTE]
> -   <span data-ttu-id="4e45e-352">在 Windows 中的语音合成引擎在此时间不支持强调参数。</span><span class="sxs-lookup"><span data-stu-id="4e45e-352">The speech synthesis engines in Windows do not support the emphasis parameter at this time.</span></span> <span data-ttu-id="4e45e-353">设置强调参数的值将会产生合成的语音输出中没有声音更改。</span><span class="sxs-lookup"><span data-stu-id="4e45e-353">Setting values for the emphasis parameter will produce no audible change in the synthesized speech output.</span></span>  
> -   <span data-ttu-id="4e45e-354"><xref:System.Speech.Synthesis.PromptVolume.Default>设置为<xref:System.Speech.Synthesis.PromptVolume>是相同的完整卷作为<xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-354">The <xref:System.Speech.Synthesis.PromptVolume.Default> setting for <xref:System.Speech.Synthesis.PromptVolume> is full volume, which is the same as <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span></span> <span data-ttu-id="4e45e-355">其他设置会降低语音输出相对于完整的卷的卷。</span><span class="sxs-lookup"><span data-stu-id="4e45e-355">The other settings decrease the volume of speech output relative to full volume.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-356">下面的示例创建<xref:System.Speech.Synthesis.PromptBuilder>对象，并追加文本字符串。</span><span class="sxs-lookup"><span data-stu-id="4e45e-356">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends text strings.</span></span> <span data-ttu-id="4e45e-357">该示例使用<xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A>所添加的字符串的方法，以指定慢速谈到速率可枚举的订单的内容。</span><span class="sxs-lookup"><span data-stu-id="4e45e-357">The example uses the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method to specify a slow speaking rate for the string being added, which enumerates the contents of an order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder style = new PromptBuilder();  
        style.AppendText("Your order for");  
        style.StartStyle(new PromptStyle(PromptRate.Slow));  
        style.AppendText("one kitchen sink and one faucet");  
        style.EndStyle();  
        style.AppendText("has been confirmed.");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(style);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartVoice">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-358">指示合成器更改 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的语音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-358">Instructs the synthesizer to change the voice in a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-359">语音表示已安装的 TTS 引擎。</span><span class="sxs-lookup"><span data-stu-id="4e45e-359">A voice represents an installed TTS engine.</span></span> <span data-ttu-id="4e45e-360">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>类来获取的名称和属性的安装可以选择的文本到语音转换 (TTS) 语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-360">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="4e45e-361">当应用程序调用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，该方法会验证在注册表中找到的语音的每个满足某些最低标准。</span><span class="sxs-lookup"><span data-stu-id="4e45e-361">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="4e45e-362">未通过验证，任何语音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>设置其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性设置为`False`。</span><span class="sxs-lookup"><span data-stu-id="4e45e-362">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="4e45e-363">应用程序不能调用的任何<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>语音方法其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性是`False`。</span><span class="sxs-lookup"><span data-stu-id="4e45e-363">An application cannot call any of the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods on a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="4e45e-364">通常情况下，应用程序不会设置语音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4e45e-364">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Globalization.CultureInfo -&gt; unit" Usage="promptBuilder.StartVoice culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="4e45e-365">提供有关特定区域性的信息，如语言、区域性的名称、写入系统、使用的日历以及如何设置日期和排序字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-365">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-366">指示合成器更改 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的语音并指定要使用的语音的区域性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-366">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the culture of the voice to use.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-367">`culture`参数<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>可以不同于<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>属性的<xref:System.Speech.Synthesis.PromptBuilder>对象，其中包含它。</span><span class="sxs-lookup"><span data-stu-id="4e45e-367">The `culture` parameter for <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> can be different than the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains it.</span></span>  <span data-ttu-id="4e45e-368">实际上，虽然的值`culture`参数将重写<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4e45e-368">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="4e45e-369"><xref:System.Speech.Synthesis.SpeechSynthesizer>将尝试选择支持指定的语言已安装的语音`culture`参数要朗读的内容括在<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>和<xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-369">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the content enclosed by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> and <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span> <span data-ttu-id="4e45e-370">如果找到具有指定的区域性的语音，则将使用它。</span><span class="sxs-lookup"><span data-stu-id="4e45e-370">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="4e45e-371">如果找不到具有指定的区域性的语音，将使用默认语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-371">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="4e45e-372">若要停止使用指定的语音<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>，调用<xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-372">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 <span data-ttu-id="4e45e-373">要正确地说出指定的语言中的单词`culture`必须安装支持语言的语音合成 （文字到语音或 TTS） 引擎参数。</span><span class="sxs-lookup"><span data-stu-id="4e45e-373">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="4e45e-374">已安装的 TTS 引擎，则为语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-374">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="4e45e-375">若要获取特定区域性的安装语音的信息，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-375">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="4e45e-376">Microsoft Windows 和 System.Speech API 作为的值接受所有有效语言-国家/地区代码`culture`。</span><span class="sxs-lookup"><span data-stu-id="4e45e-376">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="4e45e-377">随 Windows 7 的 TTS 引擎支持以下语言-国家/地区代码：</span><span class="sxs-lookup"><span data-stu-id="4e45e-377">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="4e45e-378">EN-US。</span><span class="sxs-lookup"><span data-stu-id="4e45e-378">en-US.</span></span> <span data-ttu-id="4e45e-379">英语 （美国）</span><span class="sxs-lookup"><span data-stu-id="4e45e-379">English (United States)</span></span>  
  
-   <span data-ttu-id="4e45e-380">zh CN。</span><span class="sxs-lookup"><span data-stu-id="4e45e-380">zh-CN.</span></span> <span data-ttu-id="4e45e-381">中文 （中国）</span><span class="sxs-lookup"><span data-stu-id="4e45e-381">Chinese (China)</span></span>  
  
-   <span data-ttu-id="4e45e-382">zh-TW。</span><span class="sxs-lookup"><span data-stu-id="4e45e-382">zh-TW.</span></span> <span data-ttu-id="4e45e-383">中文 （台湾）</span><span class="sxs-lookup"><span data-stu-id="4e45e-383">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="4e45e-384">此外允许使用两个字母的语言代码，例如"en"。</span><span class="sxs-lookup"><span data-stu-id="4e45e-384">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Speech.Synthesis.VoiceGender -&gt; unit" Usage="promptBuilder.StartVoice gender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="4e45e-385">要使用的语音的性别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-385">The gender of the voice to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-386">指示合成器更改 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的语音并指定要使用的语音的性别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-386">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the gender of the voice to use.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-387">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>类来获取的名称和属性的安装可以选择的文本到语音转换 (TTS) 语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-387">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="4e45e-388">若要停止使用指定的语音<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>调用<xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-388">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceInfo voice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(class System.Speech.Synthesis.VoiceInfo voice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (voice As VoiceInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceInfo ^ voice);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Speech.Synthesis.VoiceInfo -&gt; unit" Usage="promptBuilder.StartVoice voice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="voice" Type="System.Speech.Synthesis.VoiceInfo" />
      </Parameters>
      <Docs>
        <param name="voice">
          <span data-ttu-id="4e45e-389">要使用的语音的条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-389">The criteria for the voice to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-390">指示合成器更改 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的语音并为新的语音指定条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-390">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies criteria for the new voice.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-391">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>类来获取的名称和属性的安装可以选择的文本到语音转换 (TTS) 语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-391">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="4e45e-392">若要停止使用指定的语音<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>调用<xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-392">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : string -&gt; unit" Usage="promptBuilder.StartVoice name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4e45e-393">要使用的语音的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-393">The name of the voice to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-394">指示合成器更改 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的语音并指定要使用的语音的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-394">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the name of the voice to use.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-395">若要获取有关哪些安装语音的信息，请使用其中一个<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4e45e-395">To get information about which voices are installed, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods.</span></span>  
  
 <span data-ttu-id="4e45e-396">若要停止使用指定的语音<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>调用<xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-396">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge -&gt; unit" Usage="promptBuilder.StartVoice (gender, age)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="4e45e-397">要使用的新语音的性别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-397">The gender of the new voice to use.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="4e45e-398">要使用的语音的年龄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-398">The age of the voice to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-399">指示合成器更改 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的语音并指定新语音的性别和年龄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-399">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the gender and the age of the new voice.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-400">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>类来获取的名称和属性的安装可以选择的文本到语音转换 (TTS) 语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-400">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="4e45e-401">若要停止使用指定的语音<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>调用<xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-401">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int -&gt; unit" Usage="promptBuilder.StartVoice (gender, age, voiceAlternate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="4e45e-402">要使用的语音的性别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-402">The gender of the voice to use.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="4e45e-403">要使用的语音的年龄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-403">The age of the voice to use.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="4e45e-404">在多个语音与 <paramref name="gender" /> 和 <paramref name="age" /> 参数相匹配时指定首选语音的整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-404">An integer that specifies a preferred voice when more than one voice matches the <paramref name="gender" /> and <paramref name="age" /> parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e45e-405">指示合成器更改 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的语音并指定其性别、年龄以及与指定的性别和年龄匹配的首选语音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-405">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies its gender, age, and a preferred voice that matches the specified gender and age.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-406">语音合成引擎对计数的匹配项，它将找到为指定的参数，并返回语音时计数等于`voiceAlternate`参数。</span><span class="sxs-lookup"><span data-stu-id="4e45e-406">A speech synthesis engine counts the matches it finds for the specified parameters, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="4e45e-407">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>类来获取的名称和属性的安装可以选择的文本到语音转换 (TTS) 语音。</span><span class="sxs-lookup"><span data-stu-id="4e45e-407">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="4e45e-408">若要停止使用指定的语音<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>调用<xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>。</span><span class="sxs-lookup"><span data-stu-id="4e45e-408">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXml();" />
      <MemberSignature Language="F#" Value="member this.ToXml : unit -&gt; string" Usage="promptBuilder.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e45e-409">返回从 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象生成的 SSML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-409">Returns the SSML generated from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4e45e-410">返回从 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象生成的作为单个行的 SSML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e45e-410">Returns the SSML generated from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object as a single line.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e45e-411"><xref:System.Speech.Synthesis.PromptBuilder.ToXml%2A>方法不会尝试设置格式以任何方式返回的 SSML。</span><span class="sxs-lookup"><span data-stu-id="4e45e-411">The <xref:System.Speech.Synthesis.PromptBuilder.ToXml%2A> method makes no attempt to format the returned SSML in any way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e45e-412">下面的示例创建<xref:System.Speech.Synthesis.PromptBuilder>对象，后面追加文本，并在再谈到的提示的内容之前向控制台写入的提示的 SSML 等效项。</span><span class="sxs-lookup"><span data-stu-id="4e45e-412">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends text, and then writes the SSML equivalent of the prompt to the console before speaking the contents of the prompt.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder style = new PromptBuilder();  
        style.AppendText("Your order for");  
        style.StartStyle(new PromptStyle(PromptRate.Slow));  
        style.AppendText("one kitchen sink and one faucet");  
        style.EndStyle();  
        style.AppendText("has been confirmed.");  
  
        // Write the contents of the PromptBuilder object to the console as  
        // an SSML-compatible XML file.  
        string myXml = style.ToXml();  
        Console.WriteLine("This is the SSML equivalent of the PromptBuilder: \n\n" + myXml);  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(style);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>