<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4329c11770d18ef355913e673d7aab098f71b2dc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30531251" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="cf328-101">提供对已安装的语音合成引擎的功能的访问。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cf328-101">Provides access to the functionality of an installed speech synthesis engine.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-102">当你创建一个新<xref:System.Speech.Synthesis.SpeechSynthesizer>对象，它使用默认系统语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-102">When you create a new <xref:System.Speech.Synthesis.SpeechSynthesizer> object, it uses the default system voice.</span></span> <span data-ttu-id="cf328-103">若要配置<xref:System.Speech.Synthesis.SpeechSynthesizer>若要使用已安装的语音合成 （文本到语音转换） 语音之一，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-103">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="cf328-104">若要获取有关哪些安装语音的信息，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>类。</span><span class="sxs-lookup"><span data-stu-id="cf328-104">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 <span data-ttu-id="cf328-105">此类还提供了控制语音合成的以下方面：</span><span class="sxs-lookup"><span data-stu-id="cf328-105">This class also provides control over the following aspects of speech synthesis:</span></span>  
  
-   <span data-ttu-id="cf328-106">若要配置的输出<xref:System.Speech.Synthesis.SpeechSynthesizer>对象，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-106">To configure the output for the <xref:System.Speech.Synthesis.SpeechSynthesizer> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
-   <span data-ttu-id="cf328-107">若要生成语音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-107">To generate speech, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="cf328-108"><xref:System.Speech.Synthesis.SpeechSynthesizer>可以生成文本，从语音<xref:System.Speech.Synthesis.Prompt>或<xref:System.Speech.Synthesis.PromptBuilder>对象，或从[语音合成标记语言 (SSML) 版本 1.0](http://go.microsoft.com/fwlink/?LinkId=201763)。</span><span class="sxs-lookup"><span data-stu-id="cf328-108">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can produce speech from text, a <xref:System.Speech.Synthesis.Prompt> or <xref:System.Speech.Synthesis.PromptBuilder> object, or from [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span>  
  
-   <span data-ttu-id="cf328-109">若要暂停和继续语音合成，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>和<xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-109">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
-   <span data-ttu-id="cf328-110">若要添加或删除词典，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>和<xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-110">To add or remove lexicons, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> methods.</span></span> <span data-ttu-id="cf328-111"><xref:System.Speech.Synthesis.SpeechSynthesizer>可使用一个或多个词典引导其语法的单词的发音。</span><span class="sxs-lookup"><span data-stu-id="cf328-111">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can use one or more lexicons to guide its pronunciation of words.</span></span>  
  
-   <span data-ttu-id="cf328-112">若要修改语音输出的传递，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A>和<xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cf328-112">To modify the delivery of speech output, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> properties.</span></span>  
  
 <span data-ttu-id="cf328-113"><xref:System.Speech.Synthesis.SpeechSynthesizer>引发事件时遇到提示中的某些功能: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>， <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>， <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>)。</span><span class="sxs-lookup"><span data-stu-id="cf328-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises events when it encounters certain features in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span></span> <span data-ttu-id="cf328-114">它还会引发报告启动的事件 (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) 和结束 (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) 的操作进行通信和讲话声音的更改上 (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>)。</span><span class="sxs-lookup"><span data-stu-id="cf328-114">It also raises events that report on the start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) and end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) of speak operations and on the change of the speaking voice (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf328-115">每次释放对 <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.Speech.Synthesis.SpeechSynthesizer>。</span><span class="sxs-lookup"><span data-stu-id="cf328-115">Always call <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> before you release your last reference to the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="cf328-116">否则，在垃圾回收器调用 <xref:System.Speech.Synthesis.SpeechSynthesizer> 对象的 <xref:System.Object.Finalize%2A> 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="cf328-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Speech.Synthesis.SpeechSynthesizer> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-117">下面的示例是初始化一个控制台应用程序的一部分<xref:System.Speech.Synthesis.SpeechSynthesizer>对象，并使用一个字符串。</span><span class="sxs-lookup"><span data-stu-id="cf328-117">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and speaks a string.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf328-118">初始化 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-118">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-119">当您初始化一个新<xref:System.Speech.Synthesis.SpeechSynthesizer>实例，它使用默认系统语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-119">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, it uses the default system voice.</span></span> <span data-ttu-id="cf328-120">若要配置<xref:System.Speech.Synthesis.SpeechSynthesizer>若要使用已安装的语音合成 （文本到语音转换） 语音之一，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-120">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="cf328-121">若要获取有关哪些安装语音的信息，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>类。</span><span class="sxs-lookup"><span data-stu-id="cf328-121">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="cf328-122">词典信息的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-122">The location of the lexicon information.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="cf328-123">词典的媒体类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-123">The media type of the lexicon.</span>
          </span>
          <span data-ttu-id="cf328-124">媒体类型值不区分大小写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-124">Media type values are not case sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-125">将 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 添加到该对象的词典中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-125">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-126">发音词典是词或短语以及其发音，字母和受支持的拼音字母中的字符组成的集合。</span><span class="sxs-lookup"><span data-stu-id="cf328-126">A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet.</span></span> <span data-ttu-id="cf328-127">词典可用于在你的应用程序中指定的专用词汇的自定义发音。</span><span class="sxs-lookup"><span data-stu-id="cf328-127">You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.</span></span>  
  
 <span data-ttu-id="cf328-128">外部词典文件中指定的发音优先于语音合成器的内部词典或字典的发音。</span><span class="sxs-lookup"><span data-stu-id="cf328-128">Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer's internal lexicon or dictionary.</span></span> <span data-ttu-id="cf328-129">但是，发音中的内联指定提示创建与中的任意<xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>，或<xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>方法将优先于任何词典中指定的发音。</span><span class="sxs-lookup"><span data-stu-id="cf328-129">However, pronunciations specified inline in prompts created with any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods take precedence over pronunciations specified in any lexicon.</span></span> <span data-ttu-id="cf328-130">内联发音仅适用于 word 的单一匹配项。</span><span class="sxs-lookup"><span data-stu-id="cf328-130">Inline pronunciations apply only to a single occurrence of a word.</span></span> <span data-ttu-id="cf328-131">请参阅[词典和拼音字母表](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51)有关详细信息。</span><span class="sxs-lookup"><span data-stu-id="cf328-131">See [Lexicons and Phonetic Alphabets](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) for more information.</span></span>  
  
 <span data-ttu-id="cf328-132">你可以添加到多个词典<xref:System.Speech.Synthesis.SpeechSynthesizer>对象。当前支持两个值`mediaType`参数：</span><span class="sxs-lookup"><span data-stu-id="cf328-132">You can add multiple lexicons to a <xref:System.Speech.Synthesis.SpeechSynthesizer> object.Two values are currently supported for the `mediaType` parameter:</span></span>  
  
-   <span data-ttu-id="cf328-133">值`application/pls+xml`指示词典符合[发音词典规范 (PLS) 版本 1.0](http://go.microsoft.com/fwlink/?LinkId=201766)。</span><span class="sxs-lookup"><span data-stu-id="cf328-133">The value `application/pls+xml` indicates that the lexicon conforms to the [Pronunciation Lexicon Specification (PLS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span></span> <span data-ttu-id="cf328-134">这是要使用的首选的格式。</span><span class="sxs-lookup"><span data-stu-id="cf328-134">This is the preferred format to use.</span></span>  
  
-   <span data-ttu-id="cf328-135">值`application/vdn.ms-sapi-lex`指示词典格式为未压缩的词典，是一种 Microsoft 专有格式。</span><span class="sxs-lookup"><span data-stu-id="cf328-135">The value `application/vdn.ms-sapi-lex` indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format.</span></span> <span data-ttu-id="cf328-136">这是旧格式，我们建议你使用前面所述的 PLS 格式。</span><span class="sxs-lookup"><span data-stu-id="cf328-136">This is a legacy format and we recommend that you use the PLS format described above.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-137">下面的示例演示如何添加和删除包含单词"blue"自定义发音的词典的效果。</span><span class="sxs-lookup"><span data-stu-id="cf328-137">The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word "blue".</span></span> <span data-ttu-id="cf328-138">词典听起来却"bleep"定义"蓝色"发音。</span><span class="sxs-lookup"><span data-stu-id="cf328-138">The lexicon defines the pronunciation of "blue" to sound like "bleep".</span></span> <span data-ttu-id="cf328-139">词典加载时，语音合成器使用词典中定义的发音。</span><span class="sxs-lookup"><span data-stu-id="cf328-139">While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="cf328-140">以下是词典文件 Blue.pls 的内容：</span><span class="sxs-lookup"><span data-stu-id="cf328-140">Following are the contents of the lexicon file Blue.pls:</span></span>  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-141">
            <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 在提示中遇到书签时引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-141">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-142"><xref:System.Speech.Synthesis.SpeechSynthesizer>处理任一时引发此事件<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-142">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="cf328-143">与事件关联的数据有关的信息，请参阅<xref:System.Speech.Synthesis.BookmarkReachedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="cf328-143">For information about data associated with the event, see <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span></span>  
  
 <span data-ttu-id="cf328-144">你可以添加使用书签<xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-144">You can add bookmarks using the <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-145">下面的示例创建包含两个的书签，并将输出发送到的播放 WAV 文件的提示。</span><span class="sxs-lookup"><span data-stu-id="cf328-145">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="cf328-146">处理程序<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>到控制台引发事件时，事件将写入和音频流中的其位置的书签的名称。</span><span class="sxs-lookup"><span data-stu-id="cf328-146">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf328-147">处置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象并释放会话期间使用的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-147">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf328-148">方法在未能调用 <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> 的情况下的事件中充当防护措施来清理资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-148">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf328-149">获取 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 正在讲话的提示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-149">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf328-150">返回当前正在朗读的提示对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-150">Returns the prompt object that is currently being spoken.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-151">返回系统上当前安装的语音合成（文字到语音）语音的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-151">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-152">在应用程序调用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，方法验证，每个声音 （文本到语音转换引擎） 中找到注册表满足某些最低的条件。</span><span class="sxs-lookup"><span data-stu-id="cf328-152">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices (engines for text-to-speech) it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="cf328-153">对于未通过验证，任何声音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>设置其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性`False`。</span><span class="sxs-lookup"><span data-stu-id="cf328-153">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="cf328-154">应用程序不能选择一种声音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性是`False`。</span><span class="sxs-lookup"><span data-stu-id="cf328-154">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="cf328-155">通常情况下，应用程序不会设置某个声音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cf328-155">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf328-156">返回所有安装的语音合成（文字到语音）语音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-156">Returns all of the installed speech synthesis (text-to-speech) voices.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf328-157">返回当前安装在系统的语音的只读集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-157">Returns a read-only collection of the voices currently installed on the system.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-158">一种声音是为系统安装的语音合成 （文本到语音转换或 TTS） 的引擎。</span><span class="sxs-lookup"><span data-stu-id="cf328-158">A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-159">下面的示例是初始化一个控制台应用程序的一部分<xref:System.Speech.Synthesis.SpeechSynthesizer>对象并输出到控制台的已安装语音 （语音合成引擎） 列表并演示可用于每个语音的信息。</span><span class="sxs-lookup"><span data-stu-id="cf328-159">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="cf328-160">语音必须支持的区域设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-160">The locale that the voice must support.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-161">返回支持特定区域设置的所有安装的语音合成（文字到语音）语音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-161">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf328-162">返回当前安装在支持指定区域设置的系统的语音的只读集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-162">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-163">如果未指定的区域设置中的已安装的语音支持，此方法将返回空集合。</span><span class="sxs-lookup"><span data-stu-id="cf328-163">If none of the installed voices support the specified locale, this method returns an empty collection.</span></span>  
  
 <span data-ttu-id="cf328-164">Microsoft Windows 和 System.Speech API 接受所有有效的语言-国家/地区代码。</span><span class="sxs-lookup"><span data-stu-id="cf328-164">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="cf328-165">若要执行文本到语音转换使用的区域性属性中指定的语言，必须安装语音合成引擎支持该语言-国家/地区代码。</span><span class="sxs-lookup"><span data-stu-id="cf328-165">To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="cf328-166">随 Microsoft Windows 7 的语音合成引擎使用以下语言-国家/地区代码：</span><span class="sxs-lookup"><span data-stu-id="cf328-166">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="cf328-167">EN-US。</span><span class="sxs-lookup"><span data-stu-id="cf328-167">en-US.</span></span> <span data-ttu-id="cf328-168">英语 （美国）</span><span class="sxs-lookup"><span data-stu-id="cf328-168">English (United States)</span></span>  
  
-   <span data-ttu-id="cf328-169">中文-CN。</span><span class="sxs-lookup"><span data-stu-id="cf328-169">zh-CN.</span></span> <span data-ttu-id="cf328-170">中文 （中国）</span><span class="sxs-lookup"><span data-stu-id="cf328-170">Chinese (China)</span></span>  
  
-   <span data-ttu-id="cf328-171">中文-TW。</span><span class="sxs-lookup"><span data-stu-id="cf328-171">zh-TW.</span></span> <span data-ttu-id="cf328-172">中文 （台湾）</span><span class="sxs-lookup"><span data-stu-id="cf328-172">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="cf328-173">此外允许两个字母的语言代码，例如"en"。</span><span class="sxs-lookup"><span data-stu-id="cf328-173">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-174">下面的示例是初始化一个控制台应用程序的一部分<xref:System.Speech.Synthesis.SpeechSynthesizer>对象，并输出到控制台支持的 EN-US 区域设置的已安装语音的列表。</span><span class="sxs-lookup"><span data-stu-id="cf328-174">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.</span></span>  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locacale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf328-175">暂停 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-175">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-176">当音素达到时引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-176">Raised when a phoneme is reached.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-177">音素是书面语言的一个基本组件，通常表示一个或多个非重复声音字母 （或两个字母的组合） 的字母。</span><span class="sxs-lookup"><span data-stu-id="cf328-177">A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds.</span></span> <span data-ttu-id="cf328-178">例如，字母"c"是听起来可能很像"cinder"中的"s"或"k"中"catch"音素。</span><span class="sxs-lookup"><span data-stu-id="cf328-178">For example, the letter "c" is a phoneme that may sound like "s" in "cinder", or like "k" in "catch".</span></span> <span data-ttu-id="cf328-179">编写的字是以音素。</span><span class="sxs-lookup"><span data-stu-id="cf328-179">A written word is an assemblage of phonemes.</span></span> <span data-ttu-id="cf328-180">单词中更改音素将改变它的拼写。</span><span class="sxs-lookup"><span data-stu-id="cf328-180">Changing a phoneme in a word will alter its spelling.</span></span>  
  
 <span data-ttu-id="cf328-181">A<xref:System.Speech.Synthesis.SpeechSynthesizer>实例生成<xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>构成音素的词的每个部分的事件。</span><span class="sxs-lookup"><span data-stu-id="cf328-181">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance generates a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event for each portion of a word that constitutes a phoneme.</span></span> <span data-ttu-id="cf328-182">例如，单词"主题"也会生成三个<xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>事件; 为"th"声音、"e"声音和"m"声音 （我） 的一个。</span><span class="sxs-lookup"><span data-stu-id="cf328-182">For example, for the word "theme" would generate three <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> events; one for the "th" sound, one for the "e" sound, and one for the "m" sound (me).</span></span>  
  
 <span data-ttu-id="cf328-183">有关示例，以及有关与事件关联的数据的信息，请参阅<xref:System.Speech.Synthesis.PhonemeReachedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="cf328-183">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-184">获取或设置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象的语速。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-184">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf328-185">返回 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象的语速，在 -10 到 10 之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-185">Returns the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object, from -10 through 10.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf328-186">下面的示例使用设置为-2 的语速说出一个字符串。</span><span class="sxs-lookup"><span data-stu-id="cf328-186">The following example speaks a string with the speaking rate set to -2.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="cf328-187">词典文档的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-187">The location of the lexicon document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-188">从 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象中移除词典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-188">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-189">有关示例，请参见 <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>。</span><span class="sxs-lookup"><span data-stu-id="cf328-189">See <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf328-190">继续 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象（在它暂停后）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-190">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cf328-191">要选择该的语音的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-191">The name of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-192">通过名称选择特定语音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-192">Selects a specific voice by name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-193">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>类来获取名称的安装可以选择的文本到语音转换 (TTS) 语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-193">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="cf328-194">若要选择一种声音，传递的全部内容<xref:System.Speech.Synthesis.VoiceInfo.Name%2A>属性的自变量作为<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-194">To select a voice, pass the entire contents of the <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> property as the argument for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span> <span data-ttu-id="cf328-195"><xref:System.Speech.Synthesis.SpeechSynthesizer>对象选择包含的第一个已安装的语音`name`中的语音<xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="cf328-195">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that contains `name` in the voice's <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cf328-196"><xref:System.Speech.Synthesis.SpeechSynthesizer>执行区分大小写，子字符串比较来确定是否匹配语音`name`。</span><span class="sxs-lookup"><span data-stu-id="cf328-196">The <xref:System.Speech.Synthesis.SpeechSynthesizer> performs a case-sensitive, substring comparison to determine if the voice matches the `name`.</span></span>  
  
 <span data-ttu-id="cf328-197">在应用程序调用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，该方法验证是否在注册表中查找的语音的每个符合特定最小的条件。</span><span class="sxs-lookup"><span data-stu-id="cf328-197">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="cf328-198">对于未通过验证，任何声音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>设置其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性`False`。</span><span class="sxs-lookup"><span data-stu-id="cf328-198">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="cf328-199">应用程序不能选择一种声音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性是`False`。</span><span class="sxs-lookup"><span data-stu-id="cf328-199">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="cf328-200">通常情况下，应用程序不会设置某个声音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cf328-200">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="cf328-201">若要选择按性别、 年龄或区域设置的声音，请使用之一<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-201">To select a voice by gender, age, or locale, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-202">选择具有特定性格的语音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-202">Selects a voice with specific characteristics.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-203">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>类来获取名称的安装可以选择的文本到语音转换 (TTS) 语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-203">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="cf328-204"><xref:System.Speech.Synthesis.SpeechSynthesizer>对象选择的匹配指定的特性的第一个已安装的语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-204">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that matches the specified characteristics.</span></span>  
  
 <span data-ttu-id="cf328-205">在应用程序调用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，该方法验证是否在注册表中查找的语音的每个符合特定最小的条件。</span><span class="sxs-lookup"><span data-stu-id="cf328-205">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="cf328-206">对于未通过验证，任何声音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>设置其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性`False`。</span><span class="sxs-lookup"><span data-stu-id="cf328-206">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="cf328-207">应用程序不能选择一种声音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性是`False`。</span><span class="sxs-lookup"><span data-stu-id="cf328-207">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="cf328-208">通常情况下，应用程序不会设置某个声音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cf328-208">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="cf328-209">若要按名称选择一种声音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法</span><span class="sxs-lookup"><span data-stu-id="cf328-209">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="cf328-210">选择语音的性别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-210">The gender of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-211">选择具有特定性别的语音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-211">Selects a voice with a specific gender.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-212">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>类来获取名称的安装可以选择的文本到语音转换 (TTS) 语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-212">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="cf328-213"><xref:System.Speech.Synthesis.SpeechSynthesizer>对象选择的第一个已安装的语音其<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>属性匹配`gender`参数。</span><span class="sxs-lookup"><span data-stu-id="cf328-213">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property matches the `gender` parameter.</span></span>  
  
 <span data-ttu-id="cf328-214">在应用程序调用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，该方法验证是否在注册表中查找的语音的每个符合特定最小的条件。</span><span class="sxs-lookup"><span data-stu-id="cf328-214">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="cf328-215">对于未通过验证，任何声音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>设置其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性`False`。</span><span class="sxs-lookup"><span data-stu-id="cf328-215">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="cf328-216">应用程序不能选择一种声音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性是`False`。</span><span class="sxs-lookup"><span data-stu-id="cf328-216">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="cf328-217">通常情况下，应用程序不会设置某个声音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cf328-217">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="cf328-218">若要选择基于其他特征的声音，请参阅另<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-218">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="cf328-219">若要按名称选择一种声音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-219">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="cf328-220">选择语音的性别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-220">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="cf328-221">要选择该的语音的年龄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-221">The age of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-222">选择具有特定性别和年龄的语音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-222">Selects a voice with a specific gender and age.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-223">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>类来获取名称的安装可以选择的文本到语音转换 (TTS) 语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-223">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="cf328-224"><xref:System.Speech.Synthesis.SpeechSynthesizer>对象选择的第一个已安装的语音其<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>和<xref:System.Speech.Synthesis.VoiceInfo.Age%2A>属性匹配`gender`和`age`参数。</span><span class="sxs-lookup"><span data-stu-id="cf328-224">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span>  
  
 <span data-ttu-id="cf328-225">在应用程序调用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，该方法验证是否在注册表中查找的语音的每个符合特定最小的条件。</span><span class="sxs-lookup"><span data-stu-id="cf328-225">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="cf328-226">对于未通过验证，任何声音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>设置其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性`False`。</span><span class="sxs-lookup"><span data-stu-id="cf328-226">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="cf328-227">应用程序不能选择一种声音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性是`False`。</span><span class="sxs-lookup"><span data-stu-id="cf328-227">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="cf328-228">通常情况下，应用程序不会设置某个声音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cf328-228">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="cf328-229">若要选择基于其他特征的声音，请参阅另<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-229">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="cf328-230">若要按名称选择一种声音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-230">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="cf328-231">选择语音的性别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-231">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="cf328-232">要选择该的语音的年龄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-232">The age of the voice to select.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="cf328-233">要选择该语音的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-233">The position of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-234">根据语音的排序位置选择具有特定性别和年龄的语音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-234">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-235">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>类来获取名称的安装可以选择的文本到语音转换 (TTS) 语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-235">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="cf328-236"><xref:System.Speech.Synthesis.SpeechSynthesizer>对象查找安装观点发布其<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>和<xref:System.Speech.Synthesis.VoiceInfo.Age%2A>属性匹配`gender`和`age`参数。</span><span class="sxs-lookup"><span data-stu-id="cf328-236">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds installed voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span> <span data-ttu-id="cf328-237"><xref:System.Speech.Synthesis.SpeechSynthesizer>计算的匹配它查找，并返回所用的声音，当计数等于时`voiceAlternate`参数。</span><span class="sxs-lookup"><span data-stu-id="cf328-237">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="cf328-238">在应用程序调用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，该方法验证是否在注册表中查找的语音的每个符合特定最小的条件。</span><span class="sxs-lookup"><span data-stu-id="cf328-238">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="cf328-239">对于未通过验证，任何声音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>设置其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性`False`。</span><span class="sxs-lookup"><span data-stu-id="cf328-239">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="cf328-240">应用程序不能选择一种声音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性是`False`。</span><span class="sxs-lookup"><span data-stu-id="cf328-240">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="cf328-241">通常情况下，应用程序不会设置某个声音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cf328-241">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="cf328-242">若要选择基于其他特征的声音，请参阅另<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>重载。</span><span class="sxs-lookup"><span data-stu-id="cf328-242">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="cf328-243">若要按名称选择一种声音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-243">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="cf328-244">选择语音的性别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-244">The gender of the voice to select.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="cf328-245">要选择该的语音的年龄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-245">The age of the voice to select.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="cf328-246">要选择该语音的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-246">The position of the voice to select.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="cf328-247">要选择该的语音的区域设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-247">The locale of the voice to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-248">根据语音的排序位置选择具有特定性别、年龄和区域设置的语音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-248">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-249"><xref:System.Speech.Synthesis.SpeechSynthesizer>对象查找观点发布其<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>， <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>，和<xref:System.Speech.Synthesis.VoiceInfo.Culture%2A>属性匹配`gender`， `age`，和`culture`参数。</span><span class="sxs-lookup"><span data-stu-id="cf328-249">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, and <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> properties match the `gender`, `age`, and `culture` parameters.</span></span> <span data-ttu-id="cf328-250"><xref:System.Speech.Synthesis.SpeechSynthesizer>计算的匹配它查找，并返回所用的声音，当计数等于时`voiceAlternate`参数。</span><span class="sxs-lookup"><span data-stu-id="cf328-250">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="cf328-251">Microsoft Windows 和 System.Speech API 接受所有有效的语言-国家/地区代码。</span><span class="sxs-lookup"><span data-stu-id="cf328-251">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="cf328-252">若要执行文本到语音转换使用中指定的语言`culture`参数、 语音合成引擎支持，必须安装语言-国家/地区代码。</span><span class="sxs-lookup"><span data-stu-id="cf328-252">To perform text-to-speech using the language specified in the `culture` parameter, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="cf328-253">随 Microsoft Windows 7 的语音合成引擎使用以下语言-国家/地区代码：</span><span class="sxs-lookup"><span data-stu-id="cf328-253">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="cf328-254">EN-US。</span><span class="sxs-lookup"><span data-stu-id="cf328-254">en-US.</span></span> <span data-ttu-id="cf328-255">英语 （美国）</span><span class="sxs-lookup"><span data-stu-id="cf328-255">English (United States)</span></span>  
  
-   <span data-ttu-id="cf328-256">中文-CN。</span><span class="sxs-lookup"><span data-stu-id="cf328-256">zh-CN.</span></span> <span data-ttu-id="cf328-257">中文 （中国）</span><span class="sxs-lookup"><span data-stu-id="cf328-257">Chinese (China)</span></span>  
  
-   <span data-ttu-id="cf328-258">中文-TW。</span><span class="sxs-lookup"><span data-stu-id="cf328-258">zh-TW.</span></span> <span data-ttu-id="cf328-259">中文 （台湾）</span><span class="sxs-lookup"><span data-stu-id="cf328-259">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="cf328-260">此外允许两个字母的语言代码，例如"en"。</span><span class="sxs-lookup"><span data-stu-id="cf328-260">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 <span data-ttu-id="cf328-261">在应用程序调用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，该方法验证是否在注册表中查找的语音的每个符合特定最小的条件。</span><span class="sxs-lookup"><span data-stu-id="cf328-261">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="cf328-262">对于未通过验证，任何声音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>设置其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性`False`。</span><span class="sxs-lookup"><span data-stu-id="cf328-262">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="cf328-263">应用程序不能选择一种声音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性是`False`。</span><span class="sxs-lookup"><span data-stu-id="cf328-263">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="cf328-264">通常情况下，应用程序不会设置某个声音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="cf328-264">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="cf328-265">若要选择基于其他特征的声音，请参阅另<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>重载。</span><span class="sxs-lookup"><span data-stu-id="cf328-265">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="cf328-266">若要按名称选择一种声音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-266">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination">
          <span data-ttu-id="cf328-267">要追加合成输出的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-267">The stream to which to append synthesis output.</span>
          </span>
        </param>
        <param name="formatInfo">
          <span data-ttu-id="cf328-268">用于合成输出的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-268">The format to use for the synthesis output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-269">配置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象以追加输出到音频流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-269">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-270">调用<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>释放<xref:System.Speech.Synthesis.SpeechSynthesizer>的写入流的引用。</span><span class="sxs-lookup"><span data-stu-id="cf328-270">Call <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the stream.</span></span>  
  
 <span data-ttu-id="cf328-271">有关其他输出配置选项，请参阅<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-271">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf328-272">配置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象以发送输出到默认音频设备。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-272">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-273">你可以使用**声音**Windows 中的窗口**控制面板**配置默认音频设备的计算机。</span><span class="sxs-lookup"><span data-stu-id="cf328-273">You can use the  **Sound** window in the Windows **Control Panel** to configure the default audio device for the computer.</span></span>  
  
 <span data-ttu-id="cf328-274">有关其他输出配置选项，请参阅<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-274">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-275">下面的示例使用合成进行沟通到默认的音频输出的短语。</span><span class="sxs-lookup"><span data-stu-id="cf328-275">The following example uses the synthesizer to speak a phrase to the default audio output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf328-276">配置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象以不从对设备、文件或流的聚合操作中发送输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-276">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-277">使用此方法释放<xref:System.Speech.Synthesis.SpeechSynthesizer>的引用文件或流。</span><span class="sxs-lookup"><span data-stu-id="cf328-277">Use this method to release the <xref:System.Speech.Synthesis.SpeechSynthesizer> ‘s reference to a file or stream.</span></span> <span data-ttu-id="cf328-278">有关示例，请参见 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>。</span><span class="sxs-lookup"><span data-stu-id="cf328-278">See <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> for an example.</span></span>  
  
 <span data-ttu-id="cf328-279">有关其他输出配置选项，请参阅<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-279">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-280">配置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象以追加输出到波形音频格式文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-280">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-281">若要释放<xref:System.Speech.Synthesis.SpeechSynthesizer>的引用匹配到文件中，重新配置<xref:System.Speech.Synthesis.SpeechSynthesizer>的输出，例如，通过调用<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>。</span><span class="sxs-lookup"><span data-stu-id="cf328-281">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the file, reconfigure the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="cf328-282">有关其他输出配置选项，请参阅<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-282">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="cf328-283">文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-283">The path to the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-284">配置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象以追加输出到包含波形格式音频的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-284">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-285">配置输出，并指定音频格式，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-285">To configure the output and specify the audio format, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-286">下面的示例使用的实例<xref:System.Media.SoundPlayer>播放已输出到.wav 文件的提示。</span><span class="sxs-lookup"><span data-stu-id="cf328-286">The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file.</span></span> <span data-ttu-id="cf328-287">因为<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>调用是异步的<xref:System.Media.SoundPlayer>创建实例 (和<xref:System.Media.SoundPlayer.Play%2A>方法调用) 的处理程序中<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="cf328-287">Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="cf328-288">文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-288">The path to the file.</span>
          </span>
        </param>
        <param name="formatInfo">
          <span data-ttu-id="cf328-289">音频格式信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-289">The audio format information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-290">配置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象以追加输出到指定格式中的波形音频格式文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-290">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf328-291">下面的示例指定语音合成的输出的格式，并将其发送到 WAV 文件。</span><span class="sxs-lookup"><span data-stu-id="cf328-291">The following example specifies the format of the output of speech synthesis and sends it to a WAV file.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination">
          <span data-ttu-id="cf328-292">要追加合成输出的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-292">The stream to which to append synthesis output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-293">配置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象以追加输出到包含波形格式音频的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-293">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-294">若要释放<xref:System.Speech.Synthesis.SpeechSynthesizer>的引用匹配到流中，reconfigure 合成的输出，例如，通过调用<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>。</span><span class="sxs-lookup"><span data-stu-id="cf328-294">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s reference to the stream, reconfigure the synthesizer's output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="cf328-295">有关其他输出配置选项，请参阅<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-295">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-296">下面的示例将输出写入 WAV 流的短语。</span><span class="sxs-lookup"><span data-stu-id="cf328-296">The following example outputs a phrase to a WAV stream.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream stream = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        MemoryStream streamAudio = new MemoryStream();  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-297">从字符串、 <see cref="T:System.Speech.Synthesis.Prompt" /> 对象或 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象同步生成语音输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-297">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-298"><xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法会将同步生成语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-298">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods generate speech synchronously.</span></span> <span data-ttu-id="cf328-299">方法不返回之前的内容<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>已完全读出实例。</span><span class="sxs-lookup"><span data-stu-id="cf328-299">The methods do not return until the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance has been completely spoken.</span></span> <span data-ttu-id="cf328-300">这是最简单的方法来生成语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-300">This is the simplest way to generate speech.</span></span> <span data-ttu-id="cf328-301">但是，如果你的应用程序需要讲话时执行任务，例如突出显示文本、 绘制动画、 监视器控件或其他任务，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>方法或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法来以异步方式生成语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-301">However, if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method to generate speech asynchronously.</span></span>  
  
 <span data-ttu-id="cf328-302">对此方法的调用期间<xref:System.Speech.Synthesis.SpeechSynthesizer>可引发以下事件：</span><span class="sxs-lookup"><span data-stu-id="cf328-302">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="cf328-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>。</span><span class="sxs-lookup"><span data-stu-id="cf328-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="cf328-304">合成的语速状态更改时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-304">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="cf328-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>。</span><span class="sxs-lookup"><span data-stu-id="cf328-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="cf328-306">合成开始生成语音时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-306">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="cf328-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>。</span><span class="sxs-lookup"><span data-stu-id="cf328-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="cf328-308">合成达到字母或字母构成的一种语言中的语音离散声音的组合每次引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-308">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="cf328-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>。</span><span class="sxs-lookup"><span data-stu-id="cf328-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="cf328-310">每次引发合成完成语速 word。</span><span class="sxs-lookup"><span data-stu-id="cf328-310">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="cf328-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>。</span><span class="sxs-lookup"><span data-stu-id="cf328-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="cf328-312">每次读出的输出需要嘴或实力与用于生成语音的人士面部识别的位置中的更改时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-312">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="cf328-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>。</span><span class="sxs-lookup"><span data-stu-id="cf328-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="cf328-314">合成遇到一条提示中的书签时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-314">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="cf328-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>。</span><span class="sxs-lookup"><span data-stu-id="cf328-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="cf328-316">说话的语音合成器的更改时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-316">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="cf328-317"><xref:System.Speech.Synthesis.SpeechSynthesizer>不会引发<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>时处理的任何事件<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-317">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="cf328-318">要朗读的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-318">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-319">同步使用 <see cref="T:System.Speech.Synthesis.Prompt" /> 对象内容的语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-319">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-320">若要以异步方式进行通信的内容<xref:System.Speech.Synthesis.Prompt>对象，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="cf328-320">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-321">下面的示例创建<xref:System.Speech.Synthesis.Prompt>从字符串的对象并将对象作为参数传递<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-321">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="cf328-322">要朗读的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-322">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-323">同步使用 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象内容的语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-323">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-324">若要以异步方式进行通信的内容<xref:System.Speech.Synthesis.PromptBuilder>对象，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="cf328-324">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-325">下面的示例创建<xref:System.Speech.Synthesis.PromptBuilder>从字符串的对象并将对象作为参数传递<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-325">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="cf328-326">要朗读的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-326">The text to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-327">同步使用字符串内容的语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-327">Synchronously speaks the contents of a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-328">若要以同步方式朗读包含 SSML 标记的字符串，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-328">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="cf328-329">若要以异步方式朗读字符串的内容，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-329">To asynchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-330">下面的示例中所示<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法提供的最简单的方式，来生成语音同步输出。</span><span class="sxs-lookup"><span data-stu-id="cf328-330">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method provides the simplest means to generate speech output synchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-331">从字符串、 <see cref="T:System.Speech.Synthesis.Prompt" /> 对象或 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象异步生成语音输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-331">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-332"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>方法以异步方式生成语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-332">The <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods generate speech asynchronously.</span></span> <span data-ttu-id="cf328-333">方法立即返回而不等待的内容<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>对象完成语速。</span><span class="sxs-lookup"><span data-stu-id="cf328-333">The methods return immediately without waiting for the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> object to finish speaking.</span></span> <span data-ttu-id="cf328-334">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>如果你的应用程序需要讲话时执行任务，例如突出显示文本，绘制动画、 监视器控件或其他任务。</span><span class="sxs-lookup"><span data-stu-id="cf328-334">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks.</span></span>  
  
 <span data-ttu-id="cf328-335">对此方法的调用期间<xref:System.Speech.Synthesis.SpeechSynthesizer>可引发以下事件：</span><span class="sxs-lookup"><span data-stu-id="cf328-335">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="cf328-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>。</span><span class="sxs-lookup"><span data-stu-id="cf328-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="cf328-337">合成的语速状态更改时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-337">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="cf328-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>。</span><span class="sxs-lookup"><span data-stu-id="cf328-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="cf328-339">合成开始生成语音时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-339">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="cf328-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>。</span><span class="sxs-lookup"><span data-stu-id="cf328-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="cf328-341">合成达到字母或字母构成的一种语言中的语音离散声音的组合每次引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-341">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="cf328-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>。</span><span class="sxs-lookup"><span data-stu-id="cf328-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="cf328-343">每次引发合成完成语速 word。</span><span class="sxs-lookup"><span data-stu-id="cf328-343">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="cf328-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>。</span><span class="sxs-lookup"><span data-stu-id="cf328-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="cf328-345">每次读出的输出需要嘴或实力与用于生成语音的人士面部识别的位置中的更改时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-345">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="cf328-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>。</span><span class="sxs-lookup"><span data-stu-id="cf328-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="cf328-347">合成遇到一条提示中的书签时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-347">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="cf328-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>。</span><span class="sxs-lookup"><span data-stu-id="cf328-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="cf328-349">说话的语音合成器的更改时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-349">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="cf328-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>。</span><span class="sxs-lookup"><span data-stu-id="cf328-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="cf328-351">当合成完成时，引发<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>操作。</span><span class="sxs-lookup"><span data-stu-id="cf328-351">Raised when the synthesizer finishes a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="cf328-352">如果你的应用程序不需要讲话时执行任务，则可以使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>方法来同步生成语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-352">If your application does not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="cf328-353">要朗读的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-353">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-354">异步使用 <see cref="T:System.Speech.Synthesis.Prompt" /> 对象内容的语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-354">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-355">你可以取消的提示符下进行异步语速<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-355">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
 <span data-ttu-id="cf328-356">若要以同步方式进行通信的内容<xref:System.Speech.Synthesis.Prompt>对象，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>。</span><span class="sxs-lookup"><span data-stu-id="cf328-356">To synchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-357">下面的示例创建<xref:System.Speech.Synthesis.Prompt>从字符串的对象并将对象作为参数传递<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-357">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="cf328-358">要朗读的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-358">The content to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-359">异步使用 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象内容的语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-359">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf328-360">返回包含要使用的内容的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-360">Returns the object that contains the content to speak.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-361">若要以同步方式进行通信的内容<xref:System.Speech.Synthesis.PromptBuilder>对象，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>。</span><span class="sxs-lookup"><span data-stu-id="cf328-361">To synchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-362">下面的示例创建<xref:System.Speech.Synthesis.PromptBuilder>从字符串的对象并将对象作为参数传递<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-362">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="cf328-363">要朗读的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-363">The text to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-364">异步使用字符串内容的语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-364">Asynchronously speaks the contents of a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf328-365">返回包含要使用的内容的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-365">Returns the object that contains the content to speak.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-366">若要以异步方式朗读包含 SSML 标记的字符串，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-366">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="cf328-367">若要以同步方式朗读字符串的内容，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-367">To synchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span> <span data-ttu-id="cf328-368">你可以取消的提示符下进行异步语速<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-368">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-369">下面的示例中所示<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>方法提供了生成的语音异步输出的最简单方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-369">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method provides the simplest means to generate speech output asynchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">
          <span data-ttu-id="cf328-370">内容中移除调用操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-370">The content for which to cancel a speak operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-371">取消一个排队的提示的异步合成操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-371">Cancels the asynchronous synthesis operation for a queued prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-372">你可以使用此方法来取消异步朗读为以下操作：</span><span class="sxs-lookup"><span data-stu-id="cf328-372">You can also use this method to cancel an asynchronous speak operation for the following:</span></span>  
  
-   <span data-ttu-id="cf328-373">内容<xref:System.String>指定的<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-373">The contents of a <xref:System.String> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="cf328-374">内容<xref:System.Speech.Synthesis.PromptBuilder>指定的<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-374">The contents of a <xref:System.Speech.Synthesis.PromptBuilder> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="cf328-375">内容<xref:System.String>包含由指定的 SSML<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-375">The contents of a <xref:System.String> containing SSML specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span>  
  
 <span data-ttu-id="cf328-376">当调用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>，System.Speech 创建<xref:System.Speech.Synthesis.Prompt>对象并使用该方法的参数的内容来填充它，并返回<xref:System.Speech.Synthesis.Prompt>对象。</span><span class="sxs-lookup"><span data-stu-id="cf328-376">When you call <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech creates a <xref:System.Speech.Synthesis.Prompt> object and populates it with the contents of the method's parameter, and returns the <xref:System.Speech.Synthesis.Prompt> object.</span></span> <span data-ttu-id="cf328-377">如果保留一份返回<xref:System.Speech.Synthesis.Prompt>，你可以将传递到<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>取消中指定的语速内容<xref:System.String>或<xref:System.Speech.Synthesis.PromptBuilder>对象。</span><span class="sxs-lookup"><span data-stu-id="cf328-377">If you retain a copy of the returned <xref:System.Speech.Synthesis.Prompt>, you can pass it into <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> to cancel speaking content specified in a <xref:System.String> or a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf328-378">取消所有排队、异步、语音合成操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-378">Cancels all queued, asynchronous, speech synthesis operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf328-379">下面的示例显示的一种用法<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>取消提示符下，异步来讲，以便可以说出新提示符。</span><span class="sxs-lookup"><span data-stu-id="cf328-379">The following example show a use of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken.</span></span> <span data-ttu-id="cf328-380">请注意，<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>时将激发事件<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>取消操作。</span><span class="sxs-lookup"><span data-stu-id="cf328-380">Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-381">当 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 完成提示的讲话的时候引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-381">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-382"><xref:System.Speech.Synthesis.SpeechSynthesizer>引发<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>在完成时的任何事件<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-382">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event at the completion of any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> or  <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="cf328-383"><xref:System.Speech.Synthesis.SpeakCompletedEventArgs>类不具有任何属性，并且不返回数据自<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="cf328-383">The <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span> <span data-ttu-id="cf328-384">它用于启用应用程序作者编写事件处理程序<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="cf328-384">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-385">在 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 使用提示的每个单词后引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-385">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-386"><xref:System.Speech.Synthesis.SpeechSynthesizer>引发此事件在提示符下使用的任何脚本使用每个新 word <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-386">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="cf328-387">示例和与事件关联的数据有关的详细信息，请参阅<xref:System.Speech.Synthesis.SpeakProgressEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="cf328-387">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="cf328-388">要朗读的 SSML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-388">The SSML string to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-389">同步包含 SSML 标记的 <see cref="T:System.String" /> 的语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-389">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-390">内容`textToSpeak`参数必须包含`speak`元素，并且必须符合[语音合成标记语言 (SSML) 版本 1.0](http://go.microsoft.com/fwlink/?LinkId=201763)。</span><span class="sxs-lookup"><span data-stu-id="cf328-390">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="cf328-391">有关详细信息，请参阅[语音合成标记语言参考](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94)。</span><span class="sxs-lookup"><span data-stu-id="cf328-391">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="cf328-392">若要以异步方式朗读包含 SSML 标记的字符串，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-392">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="cf328-393">你可以使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>启动同步而言，不包含 SSML 标记的字符串。</span><span class="sxs-lookup"><span data-stu-id="cf328-393">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> to initiate the synchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="cf328-394">对此方法的调用期间<xref:System.Speech.Synthesis.SpeechSynthesizer>可引发以下事件：</span><span class="sxs-lookup"><span data-stu-id="cf328-394">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="cf328-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>。</span><span class="sxs-lookup"><span data-stu-id="cf328-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="cf328-396">合成的语速状态更改时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-396">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="cf328-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>。</span><span class="sxs-lookup"><span data-stu-id="cf328-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="cf328-398">合成开始生成语音时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-398">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="cf328-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>。</span><span class="sxs-lookup"><span data-stu-id="cf328-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="cf328-400">合成达到字母或字母构成的一种语言中的语音离散声音的组合每次引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-400">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="cf328-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>。</span><span class="sxs-lookup"><span data-stu-id="cf328-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="cf328-402">每次引发合成完成语速 word。</span><span class="sxs-lookup"><span data-stu-id="cf328-402">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="cf328-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>。</span><span class="sxs-lookup"><span data-stu-id="cf328-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="cf328-404">每次读出的输出需要嘴或实力与用于生成语音的人士面部识别的位置中的更改时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-404">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="cf328-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>。</span><span class="sxs-lookup"><span data-stu-id="cf328-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="cf328-406">合成遇到一条提示中的书签时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-406">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="cf328-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>。</span><span class="sxs-lookup"><span data-stu-id="cf328-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="cf328-408">说话的语音合成器的更改时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-408">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="cf328-409"><xref:System.Speech.Synthesis.SpeechSynthesizer>不会引发<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>处理时的事件<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-409">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-410">下面的示例呈现日期，1/29/2009 为日期，在月、 日、 年顺序。</span><span class="sxs-lookup"><span data-stu-id="cf328-410">The following example renders the date 1/29/2009 as a date, in month, day, year order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="cf328-411">要朗读的 SMML 标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-411">The SMML markup to speak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf328-412">异步使用包含 SSML 标记的 <see cref="T:System.String" /> 的语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-412">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-413">内容`textToSpeak`参数必须包含`speak`元素，并且必须符合[语音合成标记语言 (SSML) 版本 1.0](http://go.microsoft.com/fwlink/?LinkId=201763)。</span><span class="sxs-lookup"><span data-stu-id="cf328-413">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="cf328-414">有关详细信息，请参阅[语音合成标记语言参考](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94)。</span><span class="sxs-lookup"><span data-stu-id="cf328-414">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="cf328-415">若要以同步方式朗读包含 SSML 标记的字符串，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-415">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="cf328-416">你可以使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>启动异步而言，不包含 SSML 标记的字符串。</span><span class="sxs-lookup"><span data-stu-id="cf328-416">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> to initiate the asynchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="cf328-417">对此方法的调用期间<xref:System.Speech.Synthesis.SpeechSynthesizer>可引发以下事件：</span><span class="sxs-lookup"><span data-stu-id="cf328-417">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="cf328-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>。</span><span class="sxs-lookup"><span data-stu-id="cf328-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="cf328-419">合成的语速状态更改时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-419">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="cf328-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>。</span><span class="sxs-lookup"><span data-stu-id="cf328-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="cf328-421">合成开始生成语音时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-421">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="cf328-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>。</span><span class="sxs-lookup"><span data-stu-id="cf328-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="cf328-423">合成达到字母或字母构成的一种语言中的语音离散声音的组合每次引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-423">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="cf328-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>。</span><span class="sxs-lookup"><span data-stu-id="cf328-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="cf328-425">每次引发合成完成语速 word。</span><span class="sxs-lookup"><span data-stu-id="cf328-425">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="cf328-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>。</span><span class="sxs-lookup"><span data-stu-id="cf328-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="cf328-427">每次读出的输出需要嘴或实力与用于生成语音的人士面部识别的位置中的更改时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-427">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="cf328-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>。</span><span class="sxs-lookup"><span data-stu-id="cf328-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="cf328-429">合成遇到一条提示中的书签时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-429">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="cf328-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>。</span><span class="sxs-lookup"><span data-stu-id="cf328-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="cf328-431">说话的语音合成器的更改时引发。</span><span class="sxs-lookup"><span data-stu-id="cf328-431">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="cf328-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>。</span><span class="sxs-lookup"><span data-stu-id="cf328-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="cf328-433">当合成完成处理时，引发<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>操作。</span><span class="sxs-lookup"><span data-stu-id="cf328-433">Raised when the synthesizer finishes processing a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="cf328-434">如果你的应用程序 dos 不需要讲话时执行任务，则可以使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>方法来同步生成语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-434">If your application dos not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
   
  
## Examples  
  
```  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-435">当 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 开始提示的讲话的时候引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-435">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-436"><xref:System.Speech.Synthesis.SpeechSynthesizer>引发此事件开始处理使用任一的提示时<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-436">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when it begins processing a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="cf328-437"><xref:System.Speech.Synthesis.SpeakStartedEventArgs>类不具有任何属性，并且不返回数据自<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>事件。</span><span class="sxs-lookup"><span data-stu-id="cf328-437">The <xref:System.Speech.Synthesis.SpeakStartedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span> <span data-ttu-id="cf328-438">它用于启用应用程序作者编写事件处理程序<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>事件。</span><span class="sxs-lookup"><span data-stu-id="cf328-438">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-439">获取 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象的当前语速。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-439">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf328-440">返回 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象的当前语速。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-440">Returns the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-441">若要获取的新状态<xref:System.Speech.Synthesis.SpeechSynthesizer>，它将更改后，使用<xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A>属性<xref:System.Speech.Synthesis.StateChangedEventArgs>类。</span><span class="sxs-lookup"><span data-stu-id="cf328-441">To get the new state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> after it changes, use the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property of the <xref:System.Speech.Synthesis.StateChangedEventArgs> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-442">下面的示例演示的状态<xref:System.Speech.Synthesis.SpeechSynthesizer>之前、 之中以及之后语速一条提示。</span><span class="sxs-lookup"><span data-stu-id="cf328-442">The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.</span></span>  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-443">当 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 的状态更改的时候引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-443">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-444"><xref:System.Speech.Synthesis.SpeechSynthesizer>引发此事件时其语速<xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A>更改。</span><span class="sxs-lookup"><span data-stu-id="cf328-444">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when its speaking <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> changes.</span></span> <span data-ttu-id="cf328-445">示例和与事件关联的数据有关的详细信息，请参阅<xref:System.Speech.Synthesis.StateChangedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="cf328-445">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span></span>  
  
 <span data-ttu-id="cf328-446">若要暂停和继续语音合成，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>和<xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-446">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-447">当 viseme 达到时引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-447">Raised when a viseme is reached.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-448">Viseme 时读出音素嘴和字体的基本位置。</span><span class="sxs-lookup"><span data-stu-id="cf328-448">A viseme is the basic position of the mouth and face when pronouncing a phoneme.</span></span> <span data-ttu-id="cf328-449">Visemes 是直观表示形式音素。</span><span class="sxs-lookup"><span data-stu-id="cf328-449">Visemes are visual representations of phonemes.</span></span>  
  
 <span data-ttu-id="cf328-450">System.Speech 支持美国英语，其中每个对应于一个或多个音素 21 visemes。</span><span class="sxs-lookup"><span data-stu-id="cf328-450">System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.</span></span>  <span data-ttu-id="cf328-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> 当达到新音素具有比以前音素达到不同相应 viseme 时，会引发事件。</span><span class="sxs-lookup"><span data-stu-id="cf328-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached.</span></span> <span data-ttu-id="cf328-452">由于某些 visemes 表示多个音素<xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>如果下一个音素达到对应于为以前的音素相同 viseme，则不会生成事件。</span><span class="sxs-lookup"><span data-stu-id="cf328-452">Since some visemes represent more than one phoneme, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme.</span></span> <span data-ttu-id="cf328-453">例如，对于说"此区域"<xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>中"this"的"s"和"区域"中的"z"引发事件。</span><span class="sxs-lookup"><span data-stu-id="cf328-453">For example, for the spoken words "this zone", a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event is raised for the "s" in "this" and the "z" in "zone".</span></span> <span data-ttu-id="cf328-454">但是，<xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>事件不引发的"区域"中的"z"，因为它对应于相同 viseme 作为"this"中的"s"。</span><span class="sxs-lookup"><span data-stu-id="cf328-454">However, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not raised for the "z" in "zone" because it corresponds to the same viseme as the "s" in "this".</span></span>  
  
 <span data-ttu-id="cf328-455">下面是 21 SAPI 音素和对应于在美国英语 viseme 的音素组的列表。</span><span class="sxs-lookup"><span data-stu-id="cf328-455">The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.</span></span>  
  
|<span data-ttu-id="cf328-456">Viseme</span><span class="sxs-lookup"><span data-stu-id="cf328-456">Viseme</span></span>|<span data-ttu-id="cf328-457">Phoneme(s)</span><span class="sxs-lookup"><span data-stu-id="cf328-457">Phoneme(s)</span></span>|  
|------------|------------------|  
|<span data-ttu-id="cf328-458">0</span><span class="sxs-lookup"><span data-stu-id="cf328-458">0</span></span>|<span data-ttu-id="cf328-459">静默</span><span class="sxs-lookup"><span data-stu-id="cf328-459">silence</span></span>|  
|<span data-ttu-id="cf328-460">1</span><span class="sxs-lookup"><span data-stu-id="cf328-460">1</span></span>|<span data-ttu-id="cf328-461">要从中，ax，ah</span><span class="sxs-lookup"><span data-stu-id="cf328-461">ae, ax, ah</span></span>|  
|<span data-ttu-id="cf328-462">2</span><span class="sxs-lookup"><span data-stu-id="cf328-462">2</span></span>|<span data-ttu-id="cf328-463">aa</span><span class="sxs-lookup"><span data-stu-id="cf328-463">aa</span></span>|  
|<span data-ttu-id="cf328-464">3</span><span class="sxs-lookup"><span data-stu-id="cf328-464">3</span></span>|<span data-ttu-id="cf328-465">ao</span><span class="sxs-lookup"><span data-stu-id="cf328-465">ao</span></span>|  
|<span data-ttu-id="cf328-466">4</span><span class="sxs-lookup"><span data-stu-id="cf328-466">4</span></span>|<span data-ttu-id="cf328-467">框里，eh，哎呀</span><span class="sxs-lookup"><span data-stu-id="cf328-467">ey, eh, uh</span></span>|  
|<span data-ttu-id="cf328-468">5</span><span class="sxs-lookup"><span data-stu-id="cf328-468">5</span></span>|<span data-ttu-id="cf328-469">er</span><span class="sxs-lookup"><span data-stu-id="cf328-469">er</span></span>|  
|<span data-ttu-id="cf328-470">6</span><span class="sxs-lookup"><span data-stu-id="cf328-470">6</span></span>|<span data-ttu-id="cf328-471">y、 iy、 ih、 ix</span><span class="sxs-lookup"><span data-stu-id="cf328-471">y, iy, ih, ix</span></span>|  
|<span data-ttu-id="cf328-472">7</span><span class="sxs-lookup"><span data-stu-id="cf328-472">7</span></span>|<span data-ttu-id="cf328-473">w、 uw</span><span class="sxs-lookup"><span data-stu-id="cf328-473">w, uw</span></span>|  
|<span data-ttu-id="cf328-474">8</span><span class="sxs-lookup"><span data-stu-id="cf328-474">8</span></span>|<span data-ttu-id="cf328-475">ow</span><span class="sxs-lookup"><span data-stu-id="cf328-475">ow</span></span>|  
|<span data-ttu-id="cf328-476">9</span><span class="sxs-lookup"><span data-stu-id="cf328-476">9</span></span>|<span data-ttu-id="cf328-477">aw</span><span class="sxs-lookup"><span data-stu-id="cf328-477">aw</span></span>|  
|<span data-ttu-id="cf328-478">10</span><span class="sxs-lookup"><span data-stu-id="cf328-478">10</span></span>|<span data-ttu-id="cf328-479">oy</span><span class="sxs-lookup"><span data-stu-id="cf328-479">oy</span></span>|  
|<span data-ttu-id="cf328-480">11</span><span class="sxs-lookup"><span data-stu-id="cf328-480">11</span></span>|<span data-ttu-id="cf328-481">ay</span><span class="sxs-lookup"><span data-stu-id="cf328-481">ay</span></span>|  
|<span data-ttu-id="cf328-482">12</span><span class="sxs-lookup"><span data-stu-id="cf328-482">12</span></span>|<span data-ttu-id="cf328-483">h</span><span class="sxs-lookup"><span data-stu-id="cf328-483">h</span></span>|  
|<span data-ttu-id="cf328-484">13</span><span class="sxs-lookup"><span data-stu-id="cf328-484">13</span></span>|<span data-ttu-id="cf328-485">r</span><span class="sxs-lookup"><span data-stu-id="cf328-485">r</span></span>|  
|<span data-ttu-id="cf328-486">14</span><span class="sxs-lookup"><span data-stu-id="cf328-486">14</span></span>|<span data-ttu-id="cf328-487">l</span><span class="sxs-lookup"><span data-stu-id="cf328-487">l</span></span>|  
|<span data-ttu-id="cf328-488">15</span><span class="sxs-lookup"><span data-stu-id="cf328-488">15</span></span>|<span data-ttu-id="cf328-489">s, z</span><span class="sxs-lookup"><span data-stu-id="cf328-489">s, z</span></span>|  
|<span data-ttu-id="cf328-490">16</span><span class="sxs-lookup"><span data-stu-id="cf328-490">16</span></span>|<span data-ttu-id="cf328-491">sh，ch、 jh、 中文</span><span class="sxs-lookup"><span data-stu-id="cf328-491">sh, ch, jh, zh</span></span>|  
|<span data-ttu-id="cf328-492">17</span><span class="sxs-lookup"><span data-stu-id="cf328-492">17</span></span>|<span data-ttu-id="cf328-493">th dh</span><span class="sxs-lookup"><span data-stu-id="cf328-493">th, dh</span></span>|  
|<span data-ttu-id="cf328-494">18</span><span class="sxs-lookup"><span data-stu-id="cf328-494">18</span></span>|<span data-ttu-id="cf328-495">f, v</span><span class="sxs-lookup"><span data-stu-id="cf328-495">f, v</span></span>|  
|<span data-ttu-id="cf328-496">19</span><span class="sxs-lookup"><span data-stu-id="cf328-496">19</span></span>|<span data-ttu-id="cf328-497">d、 t、 n</span><span class="sxs-lookup"><span data-stu-id="cf328-497">d, t, n</span></span>|  
|<span data-ttu-id="cf328-498">20</span><span class="sxs-lookup"><span data-stu-id="cf328-498">20</span></span>|<span data-ttu-id="cf328-499">k、 g 和 ng</span><span class="sxs-lookup"><span data-stu-id="cf328-499">k, g, ng</span></span>|  
|<span data-ttu-id="cf328-500">21</span><span class="sxs-lookup"><span data-stu-id="cf328-500">21</span></span>|<span data-ttu-id="cf328-501">p、 b、 m</span><span class="sxs-lookup"><span data-stu-id="cf328-501">p, b, m</span></span>|  
  
 <span data-ttu-id="cf328-502">有关与关联的数据信息`VisemeReached`事件，请参阅<xref:System.Speech.Synthesis.VisemeReachedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="cf328-502">For information about data associated with the `VisemeReached` event, see <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-503">获取有关当前 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象的语音的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-503">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf328-504">返回有关当前 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象的语音的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-504">Returns information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-505">当您初始化一个新<xref:System.Speech.Synthesis.SpeechSynthesizer>，它使用默认系统语音。</span><span class="sxs-lookup"><span data-stu-id="cf328-505">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer>, it uses the default system voice.</span></span> <span data-ttu-id="cf328-506">若要配置<xref:System.Speech.Synthesis.SpeechSynthesizer>对象要使用已安装的语音合成语音之一，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-506">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> object to use one of the installed speech synthesis voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="cf328-507">若要获取有关哪些安装语音的信息，请使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>类。</span><span class="sxs-lookup"><span data-stu-id="cf328-507">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf328-508">下面的示例初始化的实例<xref:System.Speech.Synthesis.SpeechSynthesizer>并获取有关当前语音的信息。</span><span class="sxs-lookup"><span data-stu-id="cf328-508">The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer> and gets information about the current voice.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-509">当 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 的语音更改的时候引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-509">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf328-510">有关示例，以及有关与事件关联的数据的信息，请参阅<xref:System.Speech.Synthesis.VoiceChangeEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="cf328-510">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span></span>  
  
 <span data-ttu-id="cf328-511">你可以更改所选声音，<xref:System.Speech.Synthesis.SpeechSynthesizer>使用与中的任意<xref:System.Speech.Synthesis.PromptBuilder>的<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>方法或<xref:System.Speech.Synthesis.SpeechSynthesizer>的<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cf328-511">You can change the voice that the <xref:System.Speech.Synthesis.SpeechSynthesizer> uses with any of the <xref:System.Speech.Synthesis.PromptBuilder>'s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf328-512">获取或设置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象的输出量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-512">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf328-513">返回 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 的量（0 到 100）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf328-513">Returns the volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, from 0 through 100.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf328-514">下面的示例设置的卷<xref:System.Speech.Synthesis.SpeechSynthesizer>的音频输出合成的语音和 WAV 文件。</span><span class="sxs-lookup"><span data-stu-id="cf328-514">The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>