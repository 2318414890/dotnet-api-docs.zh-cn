<Type Name="WebMethodAttribute" FullName="System.Web.Services.WebMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fbb32fe86838ce711647b8159774d6ab966929a3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36594399" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WebMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>向使用 ASP.NET 创建的 XML Web service 中的某个方法添加此特性后，就可以从远程 Web 客户端调用该方法。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在类中将此特性设置的方法进行调用 XML Web 服务方法。 方法和类必须是公共的且在 ASP.NET Web 应用程序内运行。  
  
   
  
## Examples  
 在下面的方法的示例`GetMachineName`可以远程在间调用 Web，因为它具有<xref:System.Web.Services.WebMethodAttribute>。 `GetUserName` 不能调用远程，因为它不具有<xref:System.Web.Services.WebMethodAttribute>，即使它是`public`。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EnterpriseServices.TransactionOption" />
    <altmember cref="T:System.Web.Services.WebService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.WebMethodAttribute" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.WebMethodAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute enableSession" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">初始化是否为 XML Web service 方法启用会话状态。</param>
        <summary>初始化 <see cref="T:System.Web.Services.WebMethodAttribute" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">初始化是否为 XML Web service 方法启用会话状态。</param>
        <param name="transactionOption">初始化 XML Web service 方法的事务支持。</param>
        <summary>初始化 <see cref="T:System.Web.Services.WebMethodAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务调用只能是一个事务，由于 HTTP 协议的无状态性质的根。 这意味着，以下两个设置是相同的每次调用创建一个新的事务：  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 这还意味着以下所有设置都都等效;这意味着没有事务支持：  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption * int -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">初始化是否为 XML Web service 方法启用会话状态。</param>
        <param name="transactionOption">初始化 XML Web service 方法的事务支持。</param>
        <param name="cacheDuration">初始化响应的缓存秒数。</param>
        <summary>初始化 <see cref="T:System.Web.Services.WebMethodAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务调用只能是一个事务，由于 HTTP 协议的无状态性质的根。  这意味着，以下两个设置是相同的每次调用创建一个新的事务：  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 这还意味着以下所有设置都都等效;这意味着没有事务支持：  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption * int -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption * int * bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration, bufferResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">初始化是否为 XML Web service 方法启用会话状态。</param>
        <param name="transactionOption">初始化 XML Web service 方法的事务支持。</param>
        <param name="cacheDuration">初始化响应的缓存秒数。</param>
        <param name="bufferResponse">初始化是否对此请求的响应进行缓冲处理。</param>
        <summary>初始化 <see cref="T:System.Web.Services.WebMethodAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务调用只能是一个事务，由于 HTTP 协议的无状态性质的根。  这意味着，以下两个设置是相同的每次调用创建一个新的事务：  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 这还意味着以下所有设置都都等效;这意味着没有事务支持：  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption * int * bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration, bufferResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <param name="bufferResponse">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferResponse">
      <MemberSignature Language="C#" Value="public bool BufferResponse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferResponse" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferResponse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BufferResponse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BufferResponse : bool with get, set" Usage="System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置是否缓存该请求的响应。</summary>
        <value>如果缓存该请求的响应，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A>到`true`，将序列化到内存缓冲区的 XML Web service 方法的响应，直到响应完全序列化或缓冲区已满。 一旦缓存的响应，将通过网络将它返回到 XML Web 服务客户端。 当<xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A>是`false`，序列化时，对 XML Web service 方法的响应发送回客户端。 一般情况下，你只想要设置<xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A>到`false`，如果它已知的 XML Web 服务方法向客户端返回大量数据。 对于较少的数据，XML Web 服务性能是更好地与<xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A>到`true`。  
  
 当<xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A>是`false`，XML Web 服务方法禁用 SOAP 扩展。  
  
   
  
## Examples  
 下面的代码示例设置<xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A>属性`false`和处理返回到客户端的文本文件的流式处理。 代码示例演示如何以流的数据返回到客户端使用的类，实现将大段<xref:System.Collections.IEnumerable>接口。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置响应应在缓存中保留的秒数。</summary>
        <value>响应应在缓存中保留的秒数。 默认值为 0，表示不缓存响应。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 启用缓存请求和响应是保存在内存中的服务器上至少将缓存持续时间因此必须使用警告，如果你预期请求或响应会非常大，或者您期望差别很大的请求。  
  
 有两个问题可以影响 ASP.NET 2.0 Web 服务应用程序中的输出缓存。  
  
 在 ASP.NET 2.0 中，测试页的 HTTP 方法已从 GET 更改为 POST。 但是 POST 通常不进行缓存。 如果在 ASP.NET 2.0 Web 服务应用程序的测试页中改为使用 GET，缓存将正常工作。  
  
 此外，HTTP 指示用户代理（浏览器或调用应用程序）应该可以通过将“Cache-Control”设置为“no-cache”以重写服务器缓存。 因此，当 ASP.NET 应用程序找到“no-cache”标头时，会忽略缓存的结果。  
  
   
  
## Examples  
 下面的示例将调用的结果放置于`ServiceUsage`缓存中的 XML Web 服务方法的 60 秒。 任何时候，只要 XML Web 服务客户端执行`ServiceUsage`这段时间内的 XML Web service 方法，则返回相同的结果。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.Services.WebMethodAttribute.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>描述 XML Web service 方法的描述性消息。</summary>
        <value>描述 XML Web service 方法的描述性消息。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 描述性消息显示为 XML Web 服务的预期使用者时将生成 XML Web 服务的说明文档，如服务说明和服务帮助页。  
  
   
  
## Examples  
 在下面的字符串的示例`Obtains the Server Computer Name`用于描述 XML Web 服务的服务说明和服务帮助页中的 XML Web 服务方法。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EnableSession">
      <MemberSignature Language="C#" Value="public bool EnableSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSession { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSession : bool with get, set" Usage="System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示是否为 XML Web service 方法启用会话状态。</summary>
        <value>如果为 XML Web services 方法启用会话状态，则为 <see langword="true" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 为了将会话状态存储在 ASP.NET<xref:System.Web.SessionState.HttpSessionState>对象，XML Web 服务必须继承自<xref:System.Web.Services.WebService>和<xref:System.Web.Services.WebMethodAttribute>应用于 XML Web 服务方法中，设置<xref:System.Web.Services.WebMethodAttribute.EnableSession%2A>属性`true`。 如果 XML Web 服务方法不需要会话状态，然后禁用可能会提高性能。  
  
 由 XML Web 服务返回的 HTTP cookie 唯一标识的 XML Web 服务客户端。 为了使 XML Web 服务来维持会话状态的客户端，客户端必须保持 cookie。 客户端可以通过创建的新实例接收 HTTP cookie<xref:System.Net.CookieContainer>并分配给<xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A>在调用 XML Web 服务方法之前的代理类的属性。 如果你需要维护超出会话状态，当代理类实例超出范围时，客户端必须保持对 XML Web 服务的调用之间的 HTTP cookie。 例如，Web 窗体客户端可以通过保存保留 HTTP cookie<xref:System.Net.CookieContainer>中其自己的会话状态。 因为并非所有的 XML Web 服务使用会话状态，因此要求客户端不始终使用<xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A>的客户端代理属性，XML Web 服务的文档应状态是否使用会话状态。  
  
   
  
## Examples  
 使用会话状态，以确定特定会话的次数下面的示例中访问 XML Web service 方法`SessionHitCounter`。  
  
  
  
 下面的代码示例是使用会话状态的 XML Web 服务的 Web 窗体客户端。 客户端仍然存在，通过将它存储在客户端的会话状态中唯一标识会话的 HTTP cookie。  
  
 [!code-aspx-csharp[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer" />
      </Docs>
    </Member>
    <Member MemberName="MessageName">
      <MemberSignature Language="C#" Value="public string MessageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageName : string with get, set" Usage="System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在传递到 XML Web service 方法和从 XML Web service 方法返回的数据中用于 XML Web service 方法的名称。</summary>
        <value>在传递到 XML Web services 方法和从 XML Web services 方法返回的数据中用于 XML Web services 方法的名称。 默认值是 XML Web services 方法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.WebMethodAttribute.MessageName%2A>属性可用于别名方法或属性的名称。 最常见的用途<xref:System.Web.Services.WebMethodAttribute.MessageName%2A>属性将用于唯一标识多态方法。 默认情况下，<xref:System.Web.Services.WebMethodAttribute.MessageName%2A>设置为 XML Web service 方法的名称。 因此，如果 XML Web 服务包含两个或多个具有相同名称的 XML Web 服务方法，你可以通过唯一地标识单个 XML Web 服务方法设置<xref:System.Web.Services.WebMethodAttribute.MessageName%2A>到 XML Web 服务，而无需更改的名称中唯一的名称在代码中的实际方法名称。  
  
 当数据传递到 XML Web 服务发送请求中，并返回在响应中发送。 在请求和响应中，用于 XML Web service 方法的名称是其<xref:System.Web.Services.WebMethodAttribute.MessageName%2A>属性。  
  
 与 XML Web 服务方法关联的消息名称必须是 XML Web 服务中唯一的。  
  
 如果客户端调用原始方法之后添加具有相同名称但不同的参数的新 XML Web 服务方法，则应为新的方法指定不同的消息名称，但应保持原始消息名称，以确保兼容性，如上所原样与现有客户端。  
  
   
  
## Examples  
 在示例中，<xref:System.Web.Services.WebMethodAttribute.MessageName%2A>用于区分这两个`Add`方法。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOption">
      <MemberSignature Language="C#" Value="public System.EnterpriseServices.TransactionOption TransactionOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.EnterpriseServices.TransactionOption TransactionOption" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionOption As TransactionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::EnterpriseServices::TransactionOption TransactionOption { System::EnterpriseServices::TransactionOption get(); void set(System::EnterpriseServices::TransactionOption value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionOption : System.EnterpriseServices.TransactionOption with get, set" Usage="System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示 XML Web service 方法的事务支持。</summary>
        <value>XML Web services 方法的事务支持。 默认值为 <see cref="F:System.EnterpriseServices.TransactionOption.Disabled" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作为在事务中，由于 HTTP 协议的无状态性质的根对象，仅可以参与 XML Web 服务方法。 XML Web 服务方法可以调用 XML Web 服务方法中，在同一个事务中参与的 COM 对象，如果 COM 对象被标记为在组件服务管理工具在事务中运行。 如果使用 XML Web 服务方法<xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A>属性`Required`或`RequiresNew`时使用的另一种 XML Web 服务方法，将调用<xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A>属性`Required`或`RequiresNew`，每个 XML Web service 方法参与自己事务，因为 XML Web 服务方法仅可以充当在事务中的根对象。  
  
|项|描述|  
|----------|-----------------|  
|已禁用|指示 XML Web service 方法不会在事务范围内运行。 处理请求时，没有事务执行 XML Web 服务方法。<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Disabled`)]|  
|NotSupported|指示 XML Web service 方法不会在事务范围内运行。 处理请求时，没有事务执行 XML Web 服务方法。<br /><br /> [WebMethod (TransactionOption = `TransactionOption.NotSupported`)]|  
|支持|指示 XML Web service 方法不会在事务范围内运行。 处理请求时，没有事务创建 XML Web 服务。<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Supported`)]|  
|必需|指示 XML Web service 方法需要事务。 由于 XML Web 服务方法中可以充当在事务中的根对象，将为 XML Web service 方法创建一个新的事务。<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Required`)]|  
|RequiresNew|指示 XML Web service 方法需要一个新的事务。 处理请求时，在新的事务中创建 XML Web 服务。<br /><br /> [WebMethod (TransactionOption = `TransactionOption.RequiresNew`)]|  
  
 如果从引发或由 XML Web 服务方法不捕获异常，则会自动中止事务。 如果未发生异常，除非显式调用的方法，则自动提交此事务`SetAbort`。  
  
   
  
## Examples  
 下面的示例开始新事务时`Transfer`调用方法。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EnterpriseServices.TransactionOption" />
      </Docs>
    </Member>
  </Members>
</Type>