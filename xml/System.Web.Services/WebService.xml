<Type Name="WebService" FullName="System.Web.Services.WebService">
  <TypeSignature Language="C#" Value="public class WebService : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebService extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebService" />
  <TypeSignature Language="VB.NET" Value="Public Class WebService&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebService : System::ComponentModel::MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="adeef-101">为 XML Web services 定义可选的基类，该基类提供对公共 ASP.NET 对象（如应用程序和会话状态）的直接访问。</span><span class="sxs-lookup"><span data-stu-id="adeef-101">Defines the optional base class for XML Web services, which provides direct access to common ASP.NET objects, such as application and session state.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adeef-102">如果你不需要常见 ASP.NET 对象的访问权限，你仍可以不派生自的情况下将创建 XML Web 服务<xref:System.Web.Services.WebService>。</span><span class="sxs-lookup"><span data-stu-id="adeef-102">If you don't need access to the common ASP.NET objects, you can still create an XML Web service without deriving from <xref:System.Web.Services.WebService>.</span></span> <span data-ttu-id="adeef-103">可以通过访问其他 ASP.NET 对象<xref:System.Web.Services.WebService.Context%2A>。</span><span class="sxs-lookup"><span data-stu-id="adeef-103">Additional ASP.NET objects can be accessed through <xref:System.Web.Services.WebService.Context%2A>.</span></span>  
  
 <span data-ttu-id="adeef-104">XML Web 服务方法具有<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A>任一属性<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>或<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>设置为`true`，的确可以访问其<xref:System.Web.HttpContext>。</span><span class="sxs-lookup"><span data-stu-id="adeef-104">XML Web service methods that have the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> property of either <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> set to `true`, do not have access to their <xref:System.Web.HttpContext>.</span></span> <span data-ttu-id="adeef-105">在这种情况下，访问的属性的任何<xref:System.Web.Services.WebService>类，从在该 XML Web 服务方法中，返回`null`。</span><span class="sxs-lookup"><span data-stu-id="adeef-105">As such, accessing any of the properties of the <xref:System.Web.Services.WebService> class, from within that XML Web service method, return `null`.</span></span>  
  
 <span data-ttu-id="adeef-106">如果你使用具有.NET Framework 1.0 版 XML Web 服务方法<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>或<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>属性应用于它们与<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>属性设置为`true`，的确可以访问其<xref:System.Web.HttpContext>使用静态<xref:System.Web.HttpContext.Current%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="adeef-106">If you are using the .NET Framework version 1.0 XML Web service methods that have either the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> attribute applied to them with the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> property of set to `true`, do not have access to their <xref:System.Web.HttpContext> using the static <xref:System.Web.HttpContext.Current%2A> property.</span></span> <span data-ttu-id="adeef-107">访问<xref:System.Web.HttpContext>，派生类实现中的 XML Web 服务方法<xref:System.Web.Services.WebService>和访问<xref:System.Web.Services.WebService.Context%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="adeef-107">To access the <xref:System.Web.HttpContext>, derive the class implementing the XML Web service method from <xref:System.Web.Services.WebService> and access the <xref:System.Web.Services.WebService.Context%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="adeef-108">下面的示例将创建的 XML Web 服务，派生自<xref:System.Web.Services.WebService>，以便使用<xref:System.Web.Services.WebService.Context%2A>属性来获取服务器上请求的时间。</span><span class="sxs-lookup"><span data-stu-id="adeef-108">The example below creates an XML Web service, deriving from <xref:System.Web.Services.WebService>, in order to use the <xref:System.Web.Services.WebService.Context%2A> property to obtain the time of the request on the server.</span></span>  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="adeef-109">初始化 <see cref="T:System.Web.Services.WebService" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="adeef-109">Initializes a new instance of the <see cref="T:System.Web.Services.WebService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("The ASP.NET application object for the current request.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adeef-110">获取当前 HTTP 请求的应用程序对象。</span><span class="sxs-lookup"><span data-stu-id="adeef-110">Gets the application object for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="adeef-111">一个 <see cref="T:System.Web.HttpApplicationState" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="adeef-111">An <see cref="T:System.Web.HttpApplicationState" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adeef-112">应用程序状态和会话状态，可以使用 XML Web 服务。</span><span class="sxs-lookup"><span data-stu-id="adeef-112">XML Web services can use both application state and session state.</span></span> <span data-ttu-id="adeef-113">整个访问 XML Web 服务而不考虑是否将会话状态的方法关闭的所有会话中维护应用程序状态 (通过使用<xref:System.Web.Services.WebMethodAttribute.EnableSession%2A>属性<xref:System.Web.Services.WebMethodAttribute>)。</span><span class="sxs-lookup"><span data-stu-id="adeef-113">Application state is maintained across all sessions accessing an XML Web service regardless of whether session state is turned off for a method(by using the <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> property of the <xref:System.Web.Services.WebMethodAttribute>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="adeef-114">下面的示例演示一个递增计数，每次浏览器调用 XML Web service 方法的计数器。</span><span class="sxs-lookup"><span data-stu-id="adeef-114">The example below demonstrates a hit counter, incrementing the count every time a browser calls the XML Web service method.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpApplicationState" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adeef-115">获取当前请求的 ASP.NET <see cref="T:System.Web.HttpContext" />，它封装了由 HTTP 服务器用来处理 Web 请求的所有 HTTP 特定的上下文。</span><span class="sxs-lookup"><span data-stu-id="adeef-115">Gets the ASP.NET <see cref="T:System.Web.HttpContext" /> for the current request, which encapsulates all HTTP-specific context used by the HTTP server to process Web requests.</span></span></summary>
        <value><span data-ttu-id="adeef-116">当前请求的 ASP.NET <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="adeef-116">The ASP.NET <see cref="T:System.Web.HttpContext" /> for the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adeef-117">具有的 XML Web 服务方法<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>或<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>属性应用于它们与<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>属性设置为`true`，的确可以访问其<xref:System.Web.HttpContext>使用静态<xref:System.Web.HttpContext.Current%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="adeef-117">XML Web service methods that have either the <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> or <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> attribute applied to them with the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> property of set to `true`, do not have access to their <xref:System.Web.HttpContext> using the static <xref:System.Web.HttpContext.Current%2A> property.</span></span> <span data-ttu-id="adeef-118">访问<xref:System.Web.HttpContext>，派生类实现中的 XML Web 服务方法<xref:System.Web.Services.WebService>和访问<xref:System.Web.Services.WebService.Context%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="adeef-118">To access the <xref:System.Web.HttpContext>, derive the class implementing the XML Web service method from <xref:System.Web.Services.WebService> and access the <xref:System.Web.Services.WebService.Context%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="adeef-119">下面的示例使用<xref:System.Web.Services.WebService.Context%2A>属性来获取服务器上请求的时间。</span><span class="sxs-lookup"><span data-stu-id="adeef-119">The Example below uses the <xref:System.Web.Services.WebService.Context%2A> property to obtain the time of the request on the server.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="adeef-120"><paramref name="Context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="adeef-120"><paramref name="Context" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adeef-121">获取当前请求的 <see cref="T:System.Web.HttpServerUtility" />。</span><span class="sxs-lookup"><span data-stu-id="adeef-121">Gets the <see cref="T:System.Web.HttpServerUtility" /> for the current request.</span></span></summary>
        <value><span data-ttu-id="adeef-122">一个 <see cref="T:System.Web.HttpServerUtility" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="adeef-122">An <see cref="T:System.Web.HttpServerUtility" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adeef-123"><xref:System.Web.HttpServerUtility>类提供了若干方法可在处理 Web 请求，包括<xref:System.Web.HttpServerUtility.CreateObject%2A>（用于实例化 COM 对象）。</span><span class="sxs-lookup"><span data-stu-id="adeef-123">The <xref:System.Web.HttpServerUtility> class provides several methods that can be used in the processing of Web requests, including <xref:System.Web.HttpServerUtility.CreateObject%2A> (for instantiating COM objects).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="adeef-124">下面的示例返回 Web 服务器使用的计算机名称<xref:System.Web.Services.WebService.Server%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="adeef-124">The example below returns the computer name of the Web server using the <xref:System.Web.Services.WebService.Server%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpServerUtility" />
        <altmember cref="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adeef-125">获取当前请求的 <see cref="T:System.Web.SessionState.HttpSessionState" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="adeef-125">Gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> instance for the current request.</span></span></summary>
        <value><span data-ttu-id="adeef-126">表示当前会话的 ASP.NET 会话状态对象的 <see cref="T:System.Web.SessionState.HttpSessionState" />。</span><span class="sxs-lookup"><span data-stu-id="adeef-126">An <see cref="T:System.Web.SessionState.HttpSessionState" /> representing the ASP.NET session state object for the current session.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="adeef-127">使用会话状态，以确定特定会话的次数下面的示例中访问 XML Web service 方法`SessionHitCounter`。</span><span class="sxs-lookup"><span data-stu-id="adeef-127">The example below uses session state to determine how many times a particular session accesses the XML Web service method `SessionHitCounter`.</span></span> <span data-ttu-id="adeef-128">在此示例中，<xref:System.Web.Services.WebMethodAttribute.EnableSession%2A>属性<xref:System.Web.Services.WebMethodAttribute>设置为`true`才能访问会话状态。</span><span class="sxs-lookup"><span data-stu-id="adeef-128">In this example, the <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> property of the <xref:System.Web.Services.WebMethodAttribute> is set to `true` in order to gain access to session state.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.SessionState.HttpSessionState" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adeef-129">获取用于向 XML Web services 发送 SOAP 请求的 SOAP 协议的版本。</span><span class="sxs-lookup"><span data-stu-id="adeef-129">Gets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</span></span></summary>
        <value><span data-ttu-id="adeef-130"><see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="adeef-130">One of the <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> values.</span></span> <span data-ttu-id="adeef-131">默认值为 <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />。</span><span class="sxs-lookup"><span data-stu-id="adeef-131">The default is <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adeef-132">如果不使用 SOAP 协议进行通信与 XML Web 服务，如 HTTP GET 或 HTTP POST 的值<xref:System.Web.Services.WebService.SoapVersion%2A>属性是<xref:System.Web.Services.Protocols.SoapProtocolVersion.Default>。</span><span class="sxs-lookup"><span data-stu-id="adeef-132">If the SOAP protocol was not used to communicate with the XML Web service, such as HTTP-GET or HTTP-POST, the value of the <xref:System.Web.Services.WebService.SoapVersion%2A> property is <xref:System.Web.Services.Protocols.SoapProtocolVersion.Default>.</span></span>  
  
 <span data-ttu-id="adeef-133">对 XML Web 服务不派生自<xref:System.Web.Services.WebService>类，用于对 XML Web 服务可以也可以通过访问的"WebServiceSoapVersion"项进行 SOAP 请求的 SOAP 协议的版本<xref:System.Web.HttpContext.Items%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="adeef-133">For XML Web services that do not derive from the <xref:System.Web.Services.WebService> class, the version of the SOAP protocol used to make the SOAP request to the XML Web service can be also be accessed using the "WebServiceSoapVersion" entry of the <xref:System.Web.HttpContext.Items%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="adeef-134">项的类型是<xref:System.Web.Services.Protocols.SoapProtocolVersion>。</span><span class="sxs-lookup"><span data-stu-id="adeef-134">That entry is of type <xref:System.Web.Services.Protocols.SoapProtocolVersion>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="adeef-135">获取 ASP.NET 服务器 <see cref="P:System.Web.HttpContext.User" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="adeef-135">Gets the ASP.NET server <see cref="P:System.Web.HttpContext.User" /> object.</span></span> <span data-ttu-id="adeef-136">可用于验证用户是否有权执行请求。</span><span class="sxs-lookup"><span data-stu-id="adeef-136">Can be used to authenticate whether a user is authorized to execute the request.</span></span></summary>
        <value><span data-ttu-id="adeef-137">代表 ASP.NET 服务器 <see cref="T:System.Security.Principal.IPrincipal" /> 对象的 <see cref="P:System.Web.HttpContext.User" />。</span><span class="sxs-lookup"><span data-stu-id="adeef-137">A <see cref="T:System.Security.Principal.IPrincipal" /> representing the ASP.NET server <see cref="P:System.Web.HttpContext.User" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adeef-138">需要为身份验证才能使配置 Internet 信息服务 (IIS) 和.NET Framework<xref:System.Web.Services.WebService.User%2A>属性有意义。</span><span class="sxs-lookup"><span data-stu-id="adeef-138">Both Internet Information Services (IIS) and the .NET Framework need to be configured for authentication in order for the <xref:System.Web.Services.WebService.User%2A> property to be meaningful.</span></span> <span data-ttu-id="adeef-139">身份验证是接受来自用户的凭据，并验证这些凭据针对某些颁发机构的过程。</span><span class="sxs-lookup"><span data-stu-id="adeef-139">Authentication is the process of accepting credentials from a user and validating those credentials against some authority.</span></span> <span data-ttu-id="adeef-140">如果凭据有效，则必须经过身份验证的标识。</span><span class="sxs-lookup"><span data-stu-id="adeef-140">If the credentials are valid, you have an authenticated identity.</span></span> <span data-ttu-id="adeef-141">通过将项放置在 web.config 文件中配置了.NET Framework 中的身份验证。</span><span class="sxs-lookup"><span data-stu-id="adeef-141">Authentication in the .NET Framework is configured by placing entries in the web.config file.</span></span>  
  
 <span data-ttu-id="adeef-142">下面的示例演示条目将放置在 web.config 文件以启用 Windows 身份验证。</span><span class="sxs-lookup"><span data-stu-id="adeef-142">The following example demonstrates the entries you place in the web.config file to enable Windows authentication.</span></span>  
  
```  
<security>  
 <authentication mode="Windows"> <!-- Mode Options are Windows, Cookie, Passport and None or Empty String -->  
 </authentication>  
 </security>  
```  
  
 <span data-ttu-id="adeef-143">有关设置安全性的 XML Web 服务的详细信息请参阅[ &#91; \<topic://cpconSecuringASPNETWebServices >&#93;](http://msdn.microsoft.com/library/354b2ab1-2782-4542-b32a-dc560178b90c)。</span><span class="sxs-lookup"><span data-stu-id="adeef-143">For more information on setting up security for an XML Web service see [&#91;\<topic://cpconSecuringASPNETWebServices>&#93;](http://msdn.microsoft.com/library/354b2ab1-2782-4542-b32a-dc560178b90c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="adeef-144">下面的示例查找经过身份验证的用户名称，并返回该名称。</span><span class="sxs-lookup"><span data-stu-id="adeef-144">The example below looks up the authenticated user name and returns that name.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
      </Docs>
    </Member>
  </Members>
</Type>