<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RibbonApplicationMenuItem.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59b9cc1af1461f873809551e8835acd14ec677ee3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b9cc1af1461f873809551e8835acd14ec677ee3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
          <source>Represents a menu item inside a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" /&gt;</ph> control.</source>
          <target state="translated">表示 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" /&gt;</ph> 控件中的菜单项。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
          <source>You typically use a <ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph> to invoke a command when the menu item is clicked.</source>
          <target state="translated">通常使用<ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph>来调用命令时单击该菜单项。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
          <source>For more information about using commands with menu items, see <bpt id="p1">[</bpt>How to: Add a Command to a MenuItem<ept id="p1">](http://msdn.microsoft.com/library/013d68a0-5373-4a68-bd91-5de574307370)</ept>.</source>
          <target state="translated">有关与菜单项一起使用命令的详细信息，请参阅<bpt id="p1">[</bpt>如何： 将命令添加到 MenuItem<ept id="p1">](http://msdn.microsoft.com/library/013d68a0-5373-4a68-bd91-5de574307370)</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph> can have submenus.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph>才能有子菜单。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
          <source>The submenu of the <ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph> is made up of the objects within the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.Items%2A&gt;</ph> collection of a <ph id="ph3">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph>.</source>
          <target state="translated">子菜单<ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph>中的对象组成<ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.Items%2A&gt;</ph>集合<ph id="ph3">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
          <source>It is common for a <ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph> to contain other <ph id="ph2">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph> objects to create nested submenus.</source>
          <target state="translated">很常见的<ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph>以包含其他<ph id="ph2">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph>对象以创建嵌套子菜单。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph> cannot have submenus and also invoke a command.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph>不能包含子菜单，还调用命令。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph> has a submenu, the command associated with the <ph id="ph2">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph> is not invoked.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph>包含子菜单，与关联的命令<ph id="ph2">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph>不会被调用。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
          <source>When you need a control that acts as a menu header and invokes a command, use a <ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem&gt;</ph>.</source>
          <target state="translated">当需要充当菜单标头，并在调用命令的控件时，使用<ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
          <source>The following illustration shows the Application Menu for a ribbon control.</source>
          <target state="translated">下图显示功能区控件的应用程序菜单。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
          <source>The <bpt id="p1">**</bpt>Open<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Save<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Page Setup<ept id="p3">**</ept> items are examples of the <ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph> control.</source>
          <target state="translated"><bpt id="p1">**</bpt>打开<ept id="p1">**</ept>，<bpt id="p2">**</bpt>保存<ept id="p2">**</ept>，和<bpt id="p3">**</bpt>页面设置<ept id="p3">**</ept>项<ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
          <source><bpt id="p1">![</bpt>Ribbon Application Menu<ept id="p1">]</ept><bpt id="p2">(~/add/media/wpfribbon-appmenu.png "</bpt>Ribbon Application Menu<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>功能区应用程序菜单<ept id="p1">]</ept><bpt id="p2">(~/add/media/wpfribbon-appmenu.png "</bpt>功能区应用程序菜单<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
          <source>The following example shows the menu items of the Application Menu shown previously.</source>
          <target state="translated">下面的示例显示以前显示的应用程序菜单的菜单项。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph> objects are hosted directly in the <ph id="ph2">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu&gt;</ph> and in a <ph id="ph3">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem&gt;</ph>对象被直接承载在<ph id="ph2">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu&gt;</ph>并在<ph id="ph3">&lt;xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.GetContainerForItemOverride">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /&gt;</ph> object.</source>
          <target state="translated">返回新 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.GetContainerForItemOverride">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /&gt;</ph> container object that is used to display an item from the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ItemsControl.Items" /&gt;</ph> collection.</source>
          <target state="translated">一个新的 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /&gt;</ph> 容器对象，用于显示 <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ItemsControl.Items" /&gt;</ph> 集合中的项。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.IsItemItsOwnContainerOverride(System.Object)">
          <source>The item to test.</source>
          <target state="translated">要测试的项。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.IsItemItsOwnContainerOverride(System.Object)">
          <source>Returns a value that indicates whether the specified item is (or is eligible to be) its own container.</source>
          <target state="translated">返回指示指定项是否是（或可作为）其自己的容器的值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.IsItemItsOwnContainerOverride(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item is a <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /&gt;</ph>, a <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" /&gt;</ph>, a <ph id="ph4">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /&gt;</ph>, or a <ph id="ph5">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" /&gt;</ph>; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果该项是一个 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /&gt;</ph>，一个 <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" /&gt;</ph>，一个 <ph id="ph4">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /&gt;</ph>，或一个 <ph id="ph5">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" /&gt;</ph>，则为<ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph6">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level">
          <source>Gets a value that indicates at what level the menu item is displayed.</source>
          <target state="translated">获取指示此菜单项显示级别的值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level">
          <source>One the enumeration values that specifies at what level the menu item is displayed.</source>
          <target state="translated">一个枚举值，该值指定在哪一级别显示菜单项。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level">
          <source>The registered default is <ph id="ph1">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel.Top" /&gt;</ph>.</source>
          <target state="translated">已注册的默认值为 <ph id="ph1">&lt;see cref="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel.Top" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level">
          <source>For more information about what can influence the value, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</source>
          <target state="translated">有关什么可以影响值的详细信息，请参阅<bpt id="p1">[</bpt>依赖项属性值优先级<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level">
          <source>Dependency Property Information</source>
          <target state="translated">依赖项属性信息</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level">
          <source>Identifier field</source>
          <target state="translated">标识符字段</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">元数据属性设置为 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level">
          <source>None</source>
          <target state="translated">无</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.LevelProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" /&gt;</ph> dependency property.</source>
          <target state="translated">标识 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" /&gt;</ph> 依赖项属性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnActivatingKeyTip(System.Windows.Controls.ActivatingKeyTipEventArgs)">
          <source>Contains data about the activation.</source>
          <target state="translated">包含与激活有关的数据。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnActivatingKeyTip(System.Windows.Controls.ActivatingKeyTipEventArgs)">
          <source>Called when the KeyTip or accelerator key is pressed.</source>
          <target state="translated">在按快捷键提示或加速器键时进行访问。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnApplyTemplate">
          <source>Builds the visual tree for the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /&gt;</ph> when a new template is applied.</source>
          <target state="translated">在应用新模板时生成 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /&gt;</ph> 的可视化树。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnApplyTemplate">
          <source>This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ApplyTemplate%2A&gt;</ph> method.</source>
          <target state="translated">每当应用程序代码或内部进程（如重新生成布局处理过程）调用 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ApplyTemplate%2A&gt;</ph> 方法时，均会调用此方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>The event data.</source>
          <target state="translated">事件数据。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>Provides class handling for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyDown" /&gt;</ph> event.</source>
          <target state="translated">提供用于 <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyDown" /&gt;</ph> 事件的类处理。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
          <source>The element that is used to display the item.</source>
          <target state="translated">用于显示项的元素。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
          <source>The item to display from the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ItemsControl.Items" /&gt;</ph> collection.</source>
          <target state="translated">要从 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ItemsControl.Items" /&gt;</ph> 集合中显示的项。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
          <source>Prepares the specified element to display the specified item.</source>
          <target state="translated">准备好指定的元素以显示指定的项。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
          <source>The container element.</source>
          <target state="translated">容器元素。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
          <source>The item that the container is for.</source>
          <target state="translated">为其设置容器的项。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
          <source>Returns a value that indicates whether to apply the style from the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /&gt;</ph> or <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /&gt;</ph> property to the container element of the specified item.</source>
          <target state="translated">返回一个值，该值指示是否将来自 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /&gt;</ph> 属性的样式应用到指定项的容器元素。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="container" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /&gt;</ph>, or <ph id="ph5">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" /&gt;</ph>; otherwise, the value returned by the base implementation.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="container" /&gt;</ph> 为 <ph id="ph3">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" /&gt;</ph>、<ph id="ph4">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /&gt;</ph> 或 <ph id="ph5">&lt;see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>；否则为基实现返回的值。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>