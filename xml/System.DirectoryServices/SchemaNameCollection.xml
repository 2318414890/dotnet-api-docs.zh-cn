<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SchemaNameCollection.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54514be67400cc3ee435685c6c4a0dc358cb78ef2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4514be67400cc3ee435685c6c4a0dc358cb78ef2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.DirectoryServices.SchemaNameCollection">
          <source>Contains a list of the schema names that the <ph id="ph1">&lt;see cref="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" /&gt;</ph> property of a <ph id="ph2">&lt;see cref="T:System.DirectoryServices.DirectoryEntries" /&gt;</ph> object can use.</source>
          <target state="translated">包含可以由 <ph id="ph1">&lt;see cref="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.DirectoryServices.DirectoryEntries" /&gt;</ph> 属性使用的架构名列表。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)">
          <source>The schema name to add to this collection.</source>
          <target state="translated">要添加到此集合中的架构名。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)">
          <source>Appends a specified schema name to this collection.</source>
          <target state="translated">向此集合追加指定的架构名。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)">
          <source>The zero-based index of the specified property value.</source>
          <target state="translated">指定属性值的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)">
          <source>If the object is not found, the return value is -1.</source>
          <target state="translated">如果未找到该对象，则返回值为 -1。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SchemaNameCollection" /&gt;</ph> that contains the schema names to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DirectoryServices.SchemaNameCollection" /&gt;</ph> 包含要添加的架构名。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)">
          <source>Appends a set of specified schema names to this collection.</source>
          <target state="translated">将一组指定的架构名追加到此集合中。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the schema names to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 类型的数组，它包含要添加的架构名。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])">
          <source>Appends a set of specified schema names to this collection.</source>
          <target state="translated">将一组指定的架构名追加到此集合中。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Clear">
          <source>Removes all objects from this collection.</source>
          <target state="translated">从该集合中移除所有对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)">
          <source>The schema name to search for.</source>
          <target state="translated">要搜索的架构名。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)">
          <source>Determines whether this collection contains a specified schema name.</source>
          <target state="translated">确定此集合是否包含指定的架构名。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)">
          <source>The return value is <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified property belongs to this collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的属性属于该集合，则返回值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that receives this collection's schema names.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 类型的数组，它接收此集合的架构名。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)">
          <source>The zero-based array index at which to begin copying the schema names.</source>
          <target state="translated">从以零开始的数组索引处开始复制架构名。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)">
          <source>Copies the schema names from this collection to an array, starting at a particular index of the array.</source>
          <target state="translated">将架构名从此集合复制到一个数组中，并从该数组的某个特定索引处开始复制。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.Count">
          <source>The <ph id="ph1">&lt;see cref="P:System.DirectoryServices.SchemaNameCollection.Count" /&gt;</ph> property gets the number of objects in this collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.DirectoryServices.SchemaNameCollection.Count" /&gt;</ph> 属性获取此集合中对象的数目。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.Count">
          <source>The number of objects in this collection.</source>
          <target state="translated">此集合中对象的数目。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator">
          <source>Returns an enumerator that you can use to iterate through this collection.</source>
          <target state="translated">返回可用于循环访问此集合的枚举数。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator">
          <source>An enumerator that you can used to iterate through this collection.</source>
          <target state="translated">枚举数，可以使用它循环访问此集合。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)">
          <source>The schema name to search for.</source>
          <target state="translated">要搜索的架构名。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)">
          <source>Determines the index of a specified schema name in this collection.</source>
          <target state="translated">确定此集合中指定架构名的索引。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)">
          <source>The zero-based index of the specified schema name, or -1 if the schema name was not found in the collection.</source>
          <target state="translated">指定架构名的从零开始的索引；如果在集合中未找到该架构名，则为 -1。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)">
          <source>The zero-based index into the collection at which to insert the schema name.</source>
          <target state="translated">此集合中从零开始的索引，从此处插入架构名。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)">
          <source>The schema name to insert into this collection.</source>
          <target state="translated">要插入此集合中的架构名。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)">
          <source>Inserts a schema name into this collection at a specified index.</source>
          <target state="translated">将架构名插入到此集合的指定索引处。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)">
          <source>If the <ph id="ph1">`index`</ph> parameter equals the number of items in the collection, this method appends the value to the end of the collection.</source>
          <target state="translated">如果<ph id="ph1">`index`</ph>参数等于集合中的项的数目，则此方法将值追加到集合的末尾。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
          <source>The zero-based index into the collection.</source>
          <target state="translated">集合中从零开始的索引。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
          <source>Gets or sets the object that exists at a specified index.</source>
          <target state="translated">获取或设置存在于指定索引处的对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
          <source>The object that exists at the specified index.</source>
          <target state="translated">位于指定索引位置的对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
          <source>In C#, this property is the indexer for the <ph id="ph1">&lt;xref:System.DirectoryServices.SchemaNameCollection&gt;</ph> class.</source>
          <target state="translated">在 C# 中，此属性是 <ph id="ph1">&lt;xref:System.DirectoryServices.SchemaNameCollection&gt;</ph> 类的索引器。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
          <source>In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</source>
          <target state="translated">在 JScript 中，你可以使用默认索引属性定义的类型，但不是能显式定义你自己。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
          <source>However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">但是，指定 expando 特性的类上自动提供默认索引属性，其类型为 Object，并且索引类型为<ph id="ph1">&lt;xref:System.String&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)">
          <source>The schema name to remove.</source>
          <target state="translated">要移除的架构名。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)">
          <source>Removes a specified schema name from this collection.</source>
          <target state="translated">从该集合中移除指定的架构名。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)">
          <source>The zero-based index of the schema name to remove.</source>
          <target state="translated">要移除的架构名的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)">
          <source>Removes the schema name that is at a specified index from this collection.</source>
          <target state="translated">从该集合中移除指定索引处的架构名。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)">
          <source>The zero-based index is either less than zero or equal to the size of the collection.</source>
          <target state="translated">从零开始的索引小于零或者等于集合的大小。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">一维 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，它是从 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 复制的元素的目标。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必须具有从零开始的索引。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">从特定的 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 索引处开始，将 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> 的元素复制到一个 <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多维的。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 中的元素个数大于从 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 到目标 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 末尾之间的可用空间。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">无法自动将源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的类型转换为目标 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的类型。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">获取一个值，该值指示是否同步对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问（线程安全）。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果对 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 的访问是同步的（线程安全），则为 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> 返回一个对象，该对象可用于同步对 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 的访问。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source>Most collection classes in the <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">中的大多数集合类<ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph>命名空间还实现提供同步的包装基础集合已同步方法。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、 C#]</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source>The following example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">下面的示例演示如何锁定集合使用<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>在整个枚举期间：</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">获取可用于同步对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问的对象。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">可用于同步对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问的对象。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>For collections with an underlying store is not publicly available, the expected implementation is to return the current instance.</source>
          <target state="translated">具有基础存储区的集合不公开可用，预期的实现是返回当前实例。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's <ph id="ph1">`SyncRoot`</ph> property.</source>
          <target state="translated">请注意，指向当前实例的指针可能还不够对于包装了其他集合; 的集合这些集合应返回基础集合<ph id="ph1">`SyncRoot`</ph>属性。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>Most collection classes in the <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> namespace also implement a <ph id="ph2">`Synchronized`</ph> method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> 命名空间中的大多数集合类也实现 <ph id="ph2">`Synchronized`</ph> 方法，该方法对基础集合提供同步的包装。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">不过，派生类可使用 <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> 属性来提供各自的同步版本的集合。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> of the collection, not directly on the collection.</source>
          <target state="translated">同步代码必须在执行操作<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>不是直接对集合的集合。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">这样可确保对从其他对象派生的集合正确地执行操作。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</source>
          <target state="translated">具体地说，这样可与可能同时对集合实例进行修改的其他线程保持正确的同步。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>In the absence of a <ph id="ph1">`Synchronized`</ph> method on a collection, the expected usage for <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> looks like this:</source>
          <target state="translated">在缺少<ph id="ph1">`Synchronized`</ph>方法对集合，预期使用情况<ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>如下所示：</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、 C#]</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>The following example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">下面的示例演示如何锁定集合使用<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>在整个枚举期间：</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)">
          <source>The item to add to the list.</source>
          <target state="translated">要添加到列表的项。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)">
          <source>Adds an item to the list.</source>
          <target state="translated">将某项添加到列表中。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)">
          <source>The position into which the new item was inserted.</source>
          <target state="translated">新项的插入位置。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
          <source>The value to locate in the list.</source>
          <target state="translated">要在列表中查找的值。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
          <source>Determines whether the list contains a specified value.</source>
          <target state="translated">确定列表是否包含指定值。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value is found in the list, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在列表中找到该值，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the Equals and CompareTo methods of the objects in the collection to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用等号以及 CompareTo 方法，该集合以确定是否项中的对象存在。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the Equals and CompareTo methods of the item parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过使用等于和 CompareTo 进行此决定的集合中的对象上的项参数的方法。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>The item to locate in the list.</source>
          <target state="translated">要在列表中查找的项。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>Determines the index of a specified item in the list.</source>
          <target state="translated">确定列表中指定项的索引。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>The index of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> if found in the list; otherwise, -1.</source>
          <target state="translated">如果在列表中找到，则为 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the Equals and CompareTo methods of the objects in the collection to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用等号以及 CompareTo 方法，该集合以确定是否项中的对象存在。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the Equals and CompareTo methods of the item parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过使用等于和 CompareTo 进行此决定的集合中的对象上的项参数的方法。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The zero-based index at which value should be inserted.</source>
          <target state="translated">应将值插入到的位置的索引（从零开始）。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The item to insert into the list.</source>
          <target state="translated">要插入到列表中的项。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>Inserts an item to the list at the specified index.</source>
          <target state="translated">将某项插入列表中指定的索引处。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">`index`</ph> equals the number of items in the list, then <bpt id="p1">*</bpt>value<ept id="p1">*</ept> is appended to the end.</source>
          <target state="translated">如果<ph id="ph1">`index`</ph>然后等于在列表中，项的数目<bpt id="p1">*</bpt>值<ept id="p1">*</ept>追加到末尾。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 是否具有固定大小。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 具有固定大小，则为 <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">具有固定大小的集合在创建之后不能再添加或移除元素，但是允许修改现有元素。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 是否为只读。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 是只读的，则为 <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">在创建只读集合后，该集合不允许添加、移除或修改元素。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">要获取或设置的元素的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">获取或设置指定索引处的元素。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">指定索引处的元素。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">可以使用下面的语法通过此属性访问集合中的特定元素：<ph id="ph1">`myCollection[index]`</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 中的有效索引。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
          <source>The property is set and the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">设置了该属性，但 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 为只读。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to remove from the list.</source>
          <target state="translated">要从列表中移除的 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)">
          <source>Removes the first occurrence of a specific <ph id="ph1">&lt;paramref name="value" /&gt;</ph> from the list.</source>
          <target state="translated">从列表中移除特定 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的第一个匹配项。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>