<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SearchResultCollection.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51c015ee9bb7a835aa48ec5e907bafac4c4c67588.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c015ee9bb7a835aa48ec5e907bafac4c4c67588</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.DirectoryServices.SearchResultCollection">
          <source>The <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph> class contains the <ph id="ph2">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> instances that the Active Directory hierarchy returned during a <ph id="ph3">&lt;see cref="T:System.DirectoryServices.DirectorySearcher" /&gt;</ph> query.</source>
          <target state="translated">该 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph> 类包含在 <ph id="ph3">&lt;see cref="T:System.DirectoryServices.DirectorySearcher" /&gt;</ph> 查询过程中由 Active Directory 层次结构返回的 <ph id="ph2">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.DirectoryServices.SearchResultCollection">
          <source>Due to implementation restrictions, the <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> class cannot release all of its unmanaged resources when it is garbage collected.</source>
          <target state="translated">由于实现限制<ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph>类不能在垃圾回收时释放所有非托管资源。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.DirectoryServices.SearchResultCollection">
          <source>To prevent a memory leak, you must call the <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> method when the <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> object is no longer needed.</source>
          <target state="translated">若要防止内存泄漏，你必须调用<ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph>方法时<ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph>不再需要对象。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object to find.</source>
          <target state="translated">要查找的 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)">
          <source>Determines if a specified <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object is in this collection.</source>
          <target state="translated">确定指定的 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> 对象是否在此集合中。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified property belongs to this collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的属性属于该集合，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)">
          <source>The array of <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> objects that receives the elements of this collection.</source>
          <target state="translated">接收此集合元素的 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> 对象的数组。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>results<ept id="p1">&lt;/c&gt;</ept> where this method starts copying this collection.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>results<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，此方法从该位置开始复制此集合。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)">
          <source>Copies all <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> objects in this collection to the specific array, starting at the specified index in the target array.</source>
          <target state="translated">将此集合中的所有 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> 对象复制到特定数组，从目标数组的指定索引处开始。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.Count">
          <source>Gets the number of <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> objects in this collection.</source>
          <target state="translated">获取此集合中 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> 对象的数目。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Count">
          <source>The number of <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> objects in this collection.</source>
          <target state="translated">此集合中 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> 对象的数目。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.DirectoryServices.SearchResultCollection">
          <source>Releases all resources that are used by the <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph> object.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph> 对象使用的所有资源。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.Dispose">
          <source>Releases all resources that are used by the <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph> object.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph> 对象使用的所有资源。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> method, it allows the resources that are used by the <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph>方法，它允许通过使用的资源<ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph>可以重新分配用于其他目的。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose">
          <source>For more information about <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose">
          <source>The garbage collector does not release memory for a <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> object.</source>
          <target state="translated">垃圾回收器不会释放内存<ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose">
          <source>Therefore, an application must call the <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> method explicitly to prevent a memory leak.</source>
          <target state="translated">因此，应用程序必须调用<ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph>方法显式以防止内存泄漏。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources that are used by the <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph> object and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResultCollection" /&gt;</ph> 对象占用的非托管资源，还可以选择释放托管资源。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> 调用受保护<ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 调用<ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph>与<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources that are held by any managed objects that this <ph id="ph3">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数是<ph id="ph2">`true`</ph>，此方法释放由任何托管对象持有的所有资源此<ph id="ph3">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph>引用。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>The garbage collector does not release memory for a <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> object.</source>
          <target state="translated">垃圾回收器不会释放内存<ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> method explicitly to prevent a memory leak.</source>
          <target state="translated">因此，必须调用<ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph>方法显式以防止内存泄漏。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph> method of each object in the collection.</source>
          <target state="translated">此方法调用<ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</ph>集合中每个对象的方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</ph> and <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</ph>和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>重写 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /&gt;</ph> method can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /&gt;</ph>方法可以由其他对象调用多次。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" /&gt;</ph> method be careful not to reference objects that have been previously disposed of in an earlier call to the <ph id="ph2">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" /&gt;</ph>方法请注意不要引用已释放的以前调用中的对象<ph id="ph2">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关如何实现详细信息<ph id="ph1">&lt;see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.Finalize">
          <source>Overrides the <ph id="ph1">&lt;see cref="M:System.Object.Finalize" /&gt;</ph> method.</source>
          <target state="translated">重写 <ph id="ph1">&lt;see cref="M:System.Object.Finalize" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.GetEnumerator">
          <source>Returns an enumerator that you can use to iterate through this collection.</source>
          <target state="translated">返回可用于循环访问此集合的枚举数。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object that you can use to iterate through this collection.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 对象，可使用它循环访问此集合。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>Gets the handle that is returned by the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> method that performs the actual search.</source>
          <target state="translated">获取由执行实际搜索的 <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> 方法返回的句柄。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>For more information, see the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> topic in the MSDN Library at <bpt id="p2">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p2">](http://msdn.microsoft.com/library)</ept>.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p2">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p2">](http://msdn.microsoft.com/library)</ept> 上 MSDN Library 中的主题 <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>The ADS_SEARCH_HANDLE value that this collection uses.</source>
          <target state="translated">此集合使用的 ADS_SEARCH_HANDLE 值。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>The  <ph id="ph1">&lt;xref:System.DirectoryServices.DirectorySearcher&gt;</ph> that created this collection calls the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> method, which makes the query results available to the T:System.DirectoryServices.SearchResultCollection object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.DirectoryServices.DirectorySearcher&gt;</ph> ，创建此集合调用<bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept>方法，从而使查询结果可用于 T:System.DirectoryServices.SearchResultCollection 对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>For more information, see the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> topic in the MSDN Library at <bpt id="p2">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p2">](http://msdn.microsoft.com/library)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept>在 MSDN 库中的主题<bpt id="p2">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p2">](http://msdn.microsoft.com/library)</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>Each time that a query is performed, a handle for the results of that query is associated with its  <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> object.</source>
          <target state="translated">执行查询，则每次该查询的结果的句柄与关联其<ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>This handle corresponds to the search handle in ADSI.</source>
          <target state="translated">此句柄对应于 ADSI 中的搜索句柄。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>This handle persists until you call the <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</ph> method on the <ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> object, so you must call <ph id="ph3">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</ph> to prevent a memory leak.</source>
          <target state="translated">此句柄仍然存在，直到你调用<ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</ph>方法<ph id="ph2">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph>对象，因此您必须调用<ph id="ph3">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</ph>以防止内存泄漏。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Handle">
          <source>The garbage collector does not free memory for this particular object.</source>
          <target state="translated">垃圾回收器不会释放此特定对象的内存。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object to search for in this collection.</source>
          <target state="translated">要在此集合中搜索的 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
          <source>Returns the index of the first occurrence of the specified <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object in this collection.</source>
          <target state="translated">返回指定的 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> 对象在此集合中的第一个匹配项的索引。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
          <source>The zero-based index of the first matching object.</source>
          <target state="translated">第一个匹配对象的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
          <source>Returns -1 if no member of this collection is identical to the <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object.</source>
          <target state="translated">如果此集合的任何成员均不同于 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> 对象，则返回 -1。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
          <source>The zero-based index of the <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object to retrieve.</source>
          <target state="translated">要检索的 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> 对象的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object that is located at a specified index in this collection.</source>
          <target state="translated">获取位于此集合中指定索引处的 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> object that is located at the specified index.</source>
          <target state="translated">位于指定索引处的 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SearchResult" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
          <source>In C#, this property is the indexer for the <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> class.</source>
          <target state="translated">在 C# 中，此属性是 <ph id="ph1">&lt;xref:System.DirectoryServices.SearchResultCollection&gt;</ph> 类的索引器。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
          <source>In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</source>
          <target state="translated">在 JScript 中，你可以使用默认索引属性定义的类型，但不是能显式定义你自己。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
          <source>However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and with an index type of <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">但是，指定 expando 特性的类上自动提供了默认索引的属性的类型是对象的索引类型的与<ph id="ph1">&lt;xref:System.String&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.DirectoryServices.DirectorySearcher" /&gt;</ph> properties that were specified before the search was executed.</source>
          <target state="translated">获取在执行搜索前指定的 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.DirectorySearcher" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the properties that were specified in the <ph id="ph2">&lt;see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /&gt;</ph> property collection before the search was executed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 类型的数组，包含在执行搜索之前在 <ph id="ph2">&lt;see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /&gt;</ph> 属性集合中指定的属性。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">一维 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，它是从 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 复制的元素的目标。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必须具有从零开始的索引。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">从特定的 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 索引处开始，将 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> 的元素复制到一个 <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多维的。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 中的元素个数大于从 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 到目标 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 末尾之间的可用空间。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">无法自动将源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的类型转换为目标 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的类型。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">获取一个值，该值指示是否同步对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问（线程安全）。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果对 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 的访问是同步的（线程安全），则为 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> 返回一个对象，该对象可用于同步对 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 的访问。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source>Most collection classes in the <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">中的大多数集合类<ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph>命名空间还实现提供同步的包装基础集合已同步方法。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是线程安全的过程。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、 C#]</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">下面的代码示例演示如何锁定集合使用<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>在整个枚举期间：</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">获取可用于同步对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问的对象。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">可用于同步对 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的访问的对象。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</source>
          <target state="translated">对于其基础存储区不公用的集合，预期的实现是返回当前实例。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's <ph id="ph1">`SyncRoot`</ph> property.</source>
          <target state="translated">请注意，指向当前实例的指针可能还不够对于包装了其他集合; 的集合这些集合应返回基础集合<ph id="ph1">`SyncRoot`</ph>属性。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>Most collection classes in the <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> namespace also implement a <ph id="ph2">`Synchronized`</ph> method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> 命名空间中的大多数集合类也实现 <ph id="ph2">`Synchronized`</ph> 方法，该方法对基础集合提供同步的包装。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">不过，派生类可使用 <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> 属性来提供各自的同步版本的集合。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> of the collection, not directly on the collection.</source>
          <target state="translated">同步代码必须在执行操作<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>不是直接对集合的集合。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">这样可确保对从其他对象派生的集合正确地执行操作。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</source>
          <target state="translated">具体地说，这样可与可能同时对集合实例进行修改的其他线程保持正确的同步。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>In the absence of a <ph id="ph1">`Synchronized`</ph> method on a collection, the expected usage for <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> looks like this:</source>
          <target state="translated">在缺少<ph id="ph1">`Synchronized`</ph>方法对集合，预期使用情况<ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>如下所示：</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是线程安全的过程。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、 C#]</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">下面的代码示例演示如何锁定集合使用<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>在整个枚举期间：</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>