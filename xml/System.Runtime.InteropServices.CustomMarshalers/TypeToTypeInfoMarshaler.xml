<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeToTypeInfoMarshaler.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54323fd0d7f766954362a8e412a38f8349e0e567b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4323fd0d7f766954362a8e412a38f8349e0e567b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
          <source>Marshals the unmanaged <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> interface to the managed <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> class, and marshals the managed <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> class to the unmanaged <ph id="ph4">&lt;see langword="ITypeInfo" /&gt;</ph> interface.</source>
          <target state="translated">将非托管的 <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> 接口封送处理到托管的 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> 类，并将托管的 <ph id="ph3">&lt;see cref="T:System.Type" /&gt;</ph> 类封送处理到非托管的 <ph id="ph4">&lt;see langword="ITypeInfo" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
          <source>The <ph id="ph1">`ITypeInfo`</ph> interface exposed for a .NET type is based on the metadata that would appear in an exported type library.</source>
          <target state="translated"><ph id="ph1">`ITypeInfo`</ph>公开的.NET 类型取决于将在导出的类型库中显示的元数据接口。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Type&gt;</ph> instance exposed for an <ph id="ph2">`ITypeInfo`</ph> interface is based on the metadata that would appear in an imported assembly.</source>
          <target state="translated">同样，<ph id="ph1">&lt;xref:System.Type&gt;</ph>实例公开 for<ph id="ph2">`ITypeInfo`</ph>界面基于将出现在导入的程序集中的元数据。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
          <source>The Type Library Importer (Tlbimp.exe) marks <ph id="ph1">`ITypeInfo`</ph> parameters with the appropriate <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> with the <ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler&gt;</ph> enumeration member when converting signatures that use <ph id="ph4">`ITypeInfo`</ph> parameters to signatures that use <ph id="ph5">&lt;xref:System.Type&gt;</ph> parameters.</source>
          <target state="translated">类型库导入程序 (Tlbimp.exe) 标记<ph id="ph1">`ITypeInfo`</ph>使用相应的参数<ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph>与<ph id="ph3">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler&gt;</ph>枚举成员转换使用的签名时<ph id="ph4">`ITypeInfo`</ph>参数使用的签名<ph id="ph5">&lt;xref:System.Type&gt;</ph>参数。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
          <source>The same conversion functionality can be accomplished without the custom marshaler, by calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A&gt;</ph>.</source>
          <target state="translated">可以通过调用没有自定义封送处理程序，实现相同的转换功能<ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpManagedData(System.Object)">
          <source>The managed object to be destroyed.</source>
          <target state="translated">要销毁的托管对象。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpManagedData(System.Object)">
          <source>Performs necessary cleanup of the managed data when it is no longer needed.</source>
          <target state="translated">不再需要时执行必要的托管数据的清除。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpManagedData(System.Object)">
          <source>The CLR calls this method to clean up managed data allocated in the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A&gt;</ph> method.</source>
          <target state="translated">CLR 调用此方法来清理中分配的托管数据<ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpNativeData(System.IntPtr)">
          <source>A pointer to the unmanaged data to be destroyed.</source>
          <target state="translated">指向要销毁的非托管数据的指针。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpNativeData(System.IntPtr)">
          <source>Performs necessary cleanup of the unmanaged data when it is no longer needed.</source>
          <target state="translated">不再需要时执行必要的非托管数据的清除。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpNativeData(System.IntPtr)">
          <source>The CLR calls this method to clean up the unmanaged data allocated in the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A&gt;</ph> method.</source>
          <target state="translated">CLR 调用此方法来清理中分配的非托管数据<ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)">
          <source>String "cookie" parameter that can be used by the custom marshaler.</source>
          <target state="translated">可以由自定义封送拆收器使用的字符串“cookie”参数。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)">
          <source>Returns an instance of the custom marshaler.</source>
          <target state="translated">返回自定义封送拆收器的实例。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)">
          <source>An instance of the custom marshaler.</source>
          <target state="translated">自定义封送拆收器的实例。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)">
          <source>All custom marshalers must implement this method, although it is not part of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface definition.</source>
          <target state="translated">尽管这不是，所有自定义封必须实现此方法的一部分<ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph>接口定义。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetNativeDataSize">
          <source>Returns the size in bytes of the unmanaged data to be marshaled.</source>
          <target state="translated">返回要封送处理的非托管数据的大小（以字节为单位）。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetNativeDataSize">
          <source>-1 to indicate the type this marshaler handles is not a value type.</source>
          <target state="translated">-1 指示此封送拆收器处理的类型不是值类型。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetNativeDataSize">
          <source>Because custom marshaling of value types is not supported in the .NET Framework, this method always returns -1.</source>
          <target state="translated">由于.NET Framework 不支持自定义封送处理值类型，此方法始终返回-1。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)">
          <source>The managed object to be converted.</source>
          <target state="translated">要转换的托管对象。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)">
          <source>Marshals an object from managed code to unmanaged code.</source>
          <target state="translated">将一个对象从托管代码封送处理到非托管代码。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)">
          <source>A pointer to the unmanaged object.</source>
          <target state="translated">指向非托管对象的指针。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)">
          <source>The CLR calls this method with the specified instance of a managed object to convert that object from managed code to unmanaged code, and it returns a pointer to the appropriate unmanaged object, representing the COM view of that object.</source>
          <target state="translated">CLR 调用此方法使用指定的实例托管的对象来将该对象从托管代码转换到非托管代码，并将指针返回到相应的非托管对象，表示该对象的 COM 视图。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)">
          <source><ph id="ph1">&lt;paramref name="pManagedObj" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pManagedObj" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>A pointer to the unmanaged object to be converted.</source>
          <target state="translated">指向要转换的非托管对象的指针。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>Marshals an object from unmanaged code to managed code.</source>
          <target state="translated">将一个对象从非托管代码封送处理到托管代码。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>A managed object.</source>
          <target state="translated">一个托管对象。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>The CLR calls this method with the specified pointer to an unmanaged object to convert that object from unmanaged code to managed code, and returns a managed object representing the managed view of the unmanaged data.</source>
          <target state="translated">CLR 使用指向要将该对象从非托管代码转换为托管代码的非托管对象的指定指针调用此方法，并返回一个表示非托管数据的托管的视图的托管的对象。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="pNativeData" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pNativeData" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>